(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@107 (T@U T@U) Bool)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U) Bool)
(declare-fun $generated@@197 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@31 $generated@@2) 0))
(assert (= ($generated@@32 $generated) $generated@@0))
(assert (= ($generated@@33 $generated@@2) $generated@@3))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@40) 3) (= ($generated@@15 $generated@@46) 4)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@47 $generated@@57 $generated@@58 ($generated@@54 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@61) $generated@@59)
 :weight 0
))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (or (= $generated@@66 $generated@@67) (= ($generated@@47 $generated@@62 $generated@@63 ($generated@@54 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@67) ($generated@@47 $generated@@62 $generated@@63 $generated@@65 $generated@@67)))
 :weight 0
))) (= ($generated@@15 $generated@@48) 5)) (= ($generated@@15 $generated@@49) 6)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@15 ($generated@@50 $generated@@68 $generated@@69)) 7))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@55 ($generated@@50 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@50 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@56 ($generated@@50 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@50 $generated@@72 $generated@@73))
))))
(assert  (=> (<= 2 $generated@@34) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (or ($generated@@37 $generated@@74 $generated@@75) (and (< 2 $generated@@34) (and ($generated@@36 $generated@@74) (and (or (not (= $generated@@75 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@75 $generated@@41) ($generated@@42 $generated@@40 $generated@@75 $generated@@41 $generated@@74)))))) (= ($generated@@35 $generated@@74 $generated@@75) (forall (($generated@@76 T@U) ) (!  (=> (and ($generated@@39 $generated@@40 $generated@@76 $generated@@53) ($generated@@44 ($generated@@45 $generated@@46 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@74 $generated@@75) $generated@@51)) ($generated@@52 $generated@@40 $generated@@76))) (and (= ($generated@@43 $generated@@76) $generated@@75) (or (not (= $generated@@76 $generated@@75)) (not true))))
 :pattern ( ($generated@@43 $generated@@76))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@46 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@74 $generated@@75) $generated@@51)) ($generated@@52 $generated@@40 $generated@@76)))
))))
 :pattern ( ($generated@@35 $generated@@74 $generated@@75) ($generated@@36 $generated@@74))
))))
(assert ($generated@@77 $generated@@78))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@80 $generated@@78)  (or (= $generated@@80 $generated@@38) (= ($generated@@79 $generated@@80) $generated@@78)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@80 $generated@@78))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and ($generated@@81 $generated@@83 $generated@@78 $generated@@84) ($generated@@36 $generated@@84)) ($generated@@81 $generated@@83 $generated@@82 $generated@@84))
 :pattern ( ($generated@@81 $generated@@83 $generated@@78 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@86 $generated@@41 $generated@@87) ($generated@@42 $generated@@40 $generated@@86 $generated@@85 $generated@@87))
 :pattern ( ($generated@@42 $generated@@40 $generated@@86 $generated@@41 $generated@@87))
 :pattern ( ($generated@@42 $generated@@40 $generated@@86 $generated@@85 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@88 $generated@@53 $generated@@89) ($generated@@42 $generated@@40 $generated@@88 $generated@@82 $generated@@89))
 :pattern ( ($generated@@42 $generated@@40 $generated@@88 $generated@@53 $generated@@89))
 :pattern ( ($generated@@42 $generated@@40 $generated@@88 $generated@@82 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@91 $generated@@90 $generated@@92) ($generated@@42 $generated@@40 $generated@@91 $generated@@78 $generated@@92))
 :pattern ( ($generated@@42 $generated@@40 $generated@@91 $generated@@90 $generated@@92))
 :pattern ( ($generated@@42 $generated@@40 $generated@@91 $generated@@78 $generated@@92))
)))
(assert (= ($generated@@31 $generated@@51) 0))
(assert (= ($generated@@93 $generated@@7 $generated@@14) $generated@@51))
(assert  (not ($generated@@94 $generated@@51)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@95 $generated@@85 $generated@@96)  (or (= $generated@@95 $generated@@38) ($generated@@20 ($generated@@45 $generated@@16 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@96 $generated@@95) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@95 $generated@@85 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@97 $generated@@82 $generated@@98)  (or (= $generated@@97 $generated@@38) ($generated@@20 ($generated@@45 $generated@@16 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@98 $generated@@97) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@97 $generated@@82 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@99 $generated@@78 $generated@@100)  (or (= $generated@@99 $generated@@38) ($generated@@20 ($generated@@45 $generated@@16 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@100 $generated@@99) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@99 $generated@@78 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 $generated@@102) $generated@@102)
 :pattern ( ($generated@@101 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@52 $generated@@105 ($generated@@45 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@45 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@39 $generated@@46 $generated@@108 ($generated@@106 $generated@@109)) (forall (($generated@@110 T@U) ) (!  (=> ($generated@@44 $generated@@108 $generated@@110) ($generated@@107 $generated@@110 $generated@@109))
 :pattern ( ($generated@@44 $generated@@108 $generated@@110))
)))
 :pattern ( ($generated@@39 $generated@@46 $generated@@108 ($generated@@106 $generated@@109)))
)))
(assert  (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@111 $generated@@114 $generated@@115 $generated@@116 ($generated@@113 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@119 $generated@@120) $generated@@117)
 :weight 0
)) (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@111 $generated@@121 $generated@@122 $generated@@123 ($generated@@113 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@111 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@111 $generated@@130 $generated@@131 $generated@@132 ($generated@@113 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@111 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@20 ($generated@@111 $generated@@40 $generated@@48 $generated@@16 ($generated@@112 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))  (=> (and (or (not (= $generated@@144 $generated@@139)) (not true)) ($generated@@20 ($generated@@45 $generated@@16 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@140 $generated@@144) $generated@@141)))) ($generated@@20 ($generated@@45 $generated@@16 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@142 $generated@@144) $generated@@143)))))
 :pattern ( ($generated@@111 $generated@@40 $generated@@48 $generated@@16 ($generated@@112 $generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))
)))
(assert ($generated@@94 $generated@@2))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@81 ($generated@@52 $generated@@149 $generated@@146) $generated@@147 $generated@@148) ($generated@@42 $generated@@149 $generated@@146 $generated@@147 $generated@@148))
 :pattern ( ($generated@@81 ($generated@@52 $generated@@149 $generated@@146) $generated@@147 $generated@@148))
)))
(assert  (=> (< 1 $generated@@34) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@150) (and (or (not (= $generated@@151 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@151 $generated@@82))) ($generated@@20 ($generated@@45 $generated@@16 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@150 $generated@@151) $generated@@2)))) ($generated@@42 $generated@@40 ($generated@@43 $generated@@151) $generated@@41 $generated@@150))
 :pattern ( ($generated@@43 $generated@@151) ($generated@@45 $generated@@16 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@150 $generated@@151) $generated@@2)))
))))
(assert  (=> (< 1 $generated@@34) (forall (($generated@@152 T@U) ) (!  (=> (and (or (not (= $generated@@152 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@152 $generated@@82)) ($generated@@39 $generated@@40 ($generated@@43 $generated@@152) $generated@@41))
 :pattern ( ($generated@@43 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@107 $generated@@153 $generated@@41) (and (= ($generated@@52 $generated@@40 ($generated@@45 $generated@@40 $generated@@153)) $generated@@153) ($generated@@39 $generated@@40 ($generated@@45 $generated@@40 $generated@@153) $generated@@41)))
 :pattern ( ($generated@@107 $generated@@153 $generated@@41))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@107 $generated@@154 $generated@@90) (and (= ($generated@@52 $generated@@40 ($generated@@45 $generated@@40 $generated@@154)) $generated@@154) ($generated@@39 $generated@@40 ($generated@@45 $generated@@40 $generated@@154) $generated@@90)))
 :pattern ( ($generated@@107 $generated@@154 $generated@@90))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> ($generated@@107 $generated@@155 $generated@@53) (and (= ($generated@@52 $generated@@40 ($generated@@45 $generated@@40 $generated@@155)) $generated@@155) ($generated@@39 $generated@@40 ($generated@@45 $generated@@40 $generated@@155) $generated@@53)))
 :pattern ( ($generated@@107 $generated@@155 $generated@@53))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> ($generated@@107 $generated@@156 $generated@@85) (and (= ($generated@@52 $generated@@40 ($generated@@45 $generated@@40 $generated@@156)) $generated@@156) ($generated@@39 $generated@@40 ($generated@@45 $generated@@40 $generated@@156) $generated@@85)))
 :pattern ( ($generated@@107 $generated@@156 $generated@@85))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> ($generated@@107 $generated@@157 $generated@@82) (and (= ($generated@@52 $generated@@40 ($generated@@45 $generated@@40 $generated@@157)) $generated@@157) ($generated@@39 $generated@@40 ($generated@@45 $generated@@40 $generated@@157) $generated@@82)))
 :pattern ( ($generated@@107 $generated@@157 $generated@@82))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> ($generated@@107 $generated@@158 $generated@@78) (and (= ($generated@@52 $generated@@40 ($generated@@45 $generated@@40 $generated@@158)) $generated@@158) ($generated@@39 $generated@@40 ($generated@@45 $generated@@40 $generated@@158) $generated@@78)))
 :pattern ( ($generated@@107 $generated@@158 $generated@@78))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@159 $generated@@41)  (and ($generated@@39 $generated@@40 $generated@@159 $generated@@85) (or (not (= $generated@@159 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@159 $generated@@41))
 :pattern ( ($generated@@39 $generated@@40 $generated@@159 $generated@@85))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@160 $generated@@53)  (and ($generated@@39 $generated@@40 $generated@@160 $generated@@82) (or (not (= $generated@@160 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@160 $generated@@53))
 :pattern ( ($generated@@39 $generated@@40 $generated@@160 $generated@@82))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@161 $generated@@90)  (and ($generated@@39 $generated@@40 $generated@@161 $generated@@78) (or (not (= $generated@@161 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@161 $generated@@90))
 :pattern ( ($generated@@39 $generated@@40 $generated@@161 $generated@@78))
)))
(assert  (=> (<= 3 $generated@@34) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (or ($generated@@163 $generated@@164 $generated@@165) (and (< 3 $generated@@34) (and ($generated@@36 $generated@@164) (and (or (not (= $generated@@165 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@165 $generated@@53) ($generated@@42 $generated@@40 $generated@@165 $generated@@53 $generated@@164)))))) (and (=> ($generated@@44 ($generated@@45 $generated@@46 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@164 ($generated@@43 $generated@@165)) $generated@@51)) ($generated@@52 $generated@@40 $generated@@165)) ($generated@@37 $generated@@164 ($generated@@43 $generated@@165))) (= ($generated@@162 $generated@@164 $generated@@165)  (and ($generated@@44 ($generated@@45 $generated@@46 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@164 ($generated@@43 $generated@@165)) $generated@@51)) ($generated@@52 $generated@@40 $generated@@165)) ($generated@@35 $generated@@164 ($generated@@43 $generated@@165))))))
 :pattern ( ($generated@@162 $generated@@164 $generated@@165) ($generated@@36 $generated@@164))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@42 $generated@@40 $generated@@166 $generated@@78 $generated@@167) ($generated@@42 $generated@@40 $generated@@166 $generated@@82 $generated@@167))
 :pattern ( ($generated@@42 $generated@@40 $generated@@166 $generated@@78 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (and (= ($generated@@168 ($generated@@93 $generated@@169 $generated@@170)) $generated@@169) (= ($generated@@33 ($generated@@93 $generated@@169 $generated@@170)) $generated@@170))
 :pattern ( ($generated@@93 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> ($generated@@107 $generated@@171 $generated) (and (= ($generated@@52 $generated@@16 ($generated@@45 $generated@@16 $generated@@171)) $generated@@171) ($generated@@39 $generated@@16 ($generated@@45 $generated@@16 $generated@@171) $generated)))
 :pattern ( ($generated@@107 $generated@@171 $generated))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@107 ($generated@@52 $generated@@174 $generated@@172) $generated@@173) ($generated@@39 $generated@@174 $generated@@172 $generated@@173))
 :pattern ( ($generated@@107 ($generated@@52 $generated@@174 $generated@@172) $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@42 $generated@@46 $generated@@175 ($generated@@106 $generated@@176) $generated@@177) (forall (($generated@@178 T@U) ) (!  (=> ($generated@@44 $generated@@175 $generated@@178) ($generated@@81 $generated@@178 $generated@@176 $generated@@177))
 :pattern ( ($generated@@44 $generated@@175 $generated@@178))
)))
 :pattern ( ($generated@@42 $generated@@46 $generated@@175 ($generated@@106 $generated@@176) $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@179 ($generated@@106 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@106 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@32 ($generated@@106 $generated@@181)) $generated@@1)
 :pattern ( ($generated@@106 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@45 $generated@@183 ($generated@@52 $generated@@183 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@52 $generated@@183 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@107 $generated@@184 ($generated@@106 $generated@@185)) (and (= ($generated@@52 $generated@@46 ($generated@@45 $generated@@46 $generated@@184)) $generated@@184) ($generated@@39 $generated@@46 ($generated@@45 $generated@@46 $generated@@184) ($generated@@106 $generated@@185))))
 :pattern ( ($generated@@107 $generated@@184 ($generated@@106 $generated@@185)))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@186 $generated@@78) ($generated@@39 $generated@@40 $generated@@186 $generated@@82))
 :pattern ( ($generated@@39 $generated@@40 $generated@@186 $generated@@78))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> ($generated@@107 $generated@@187 $generated@@78) ($generated@@107 $generated@@187 $generated@@82))
 :pattern ( ($generated@@107 $generated@@187 $generated@@78))
)))
(assert (= ($generated@@32 $generated@@41) $generated@@4))
(assert (= ($generated@@188 $generated@@41) $generated@@11))
(assert (= ($generated@@32 $generated@@90) $generated@@5))
(assert (= ($generated@@188 $generated@@90) $generated@@12))
(assert (= ($generated@@32 $generated@@53) $generated@@6))
(assert (= ($generated@@188 $generated@@53) $generated@@13))
(assert (= ($generated@@32 $generated@@85) $generated@@8))
(assert (= ($generated@@188 $generated@@85) $generated@@11))
(assert (= ($generated@@32 $generated@@82) $generated@@9))
(assert (= ($generated@@188 $generated@@82) $generated@@13))
(assert (= ($generated@@32 $generated@@78) $generated@@10))
(assert (= ($generated@@188 $generated@@78) $generated@@12))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@190 $generated@@85)  (or (= $generated@@190 $generated@@38) ($generated@@189 ($generated@@79 $generated@@190))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@190 $generated@@85))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@191 $generated@@82)  (or (= $generated@@191 $generated@@38) ($generated@@77 ($generated@@79 $generated@@191))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@191 $generated@@82))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@192) (and (or (not (= $generated@@193 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@193 $generated@@85))) ($generated@@20 ($generated@@45 $generated@@16 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@192 $generated@@193) $generated@@2)))) ($generated@@42 $generated@@46 ($generated@@45 $generated@@46 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@192 $generated@@193) $generated@@51)) ($generated@@106 $generated@@53) $generated@@192))
 :pattern ( ($generated@@45 $generated@@46 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@192 $generated@@193) $generated@@51)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@T) ) (! (= ($generated@@52 $generated@@195 ($generated@@101 $generated@@195 $generated@@194)) ($generated@@101 $generated@@49 ($generated@@52 $generated@@195 $generated@@194)))
 :pattern ( ($generated@@52 $generated@@195 ($generated@@101 $generated@@195 $generated@@194)))
)))
(assert  (=> (<= 4 $generated@@34) (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (or ($generated@@197 $generated@@198 $generated@@199) (and (< 4 $generated@@34) (and ($generated@@36 $generated@@198) (and (or (not (= $generated@@199 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@199 $generated@@90) ($generated@@42 $generated@@40 $generated@@199 $generated@@90 $generated@@198)))))) (and (=> ($generated@@20 ($generated@@101 $generated@@16 ($generated@@19 true))) ($generated@@163 $generated@@198 $generated@@199)) (= ($generated@@196 $generated@@198 $generated@@199)  (and true ($generated@@162 $generated@@198 $generated@@199)))))
 :pattern ( ($generated@@196 $generated@@198 $generated@@199) ($generated@@36 $generated@@198))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@36 $generated@@200) (and (or (not (= $generated@@201 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@201 $generated@@85))) ($generated@@39 $generated@@46 ($generated@@45 $generated@@46 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@200 $generated@@201) $generated@@51)) ($generated@@106 $generated@@53)))
 :pattern ( ($generated@@45 $generated@@46 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@200 $generated@@201) $generated@@51)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! ($generated@@42 $generated@@16 $generated@@203 $generated $generated@@202)
 :pattern ( ($generated@@42 $generated@@16 $generated@@203 $generated $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ) (! ($generated@@39 $generated@@16 $generated@@204 $generated)
 :pattern ( ($generated@@39 $generated@@16 $generated@@204 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Bool)
(declare-fun $generated@@208 () Bool)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@211  (=> (and (and (= ($generated@@196 $generated@@205 $generated@@206)  (and true ($generated@@162 $generated@@205 $generated@@206))) (=> ($generated@@20 ($generated@@101 $generated@@16 ($generated@@19 true))) ($generated@@163 $generated@@205 $generated@@206))) (and ($generated@@39 $generated@@16 ($generated@@19 ($generated@@196 $generated@@205 $generated@@206)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@207)))
(let (($generated@@212  (=> (not ($generated@@20 ($generated@@101 $generated@@16 ($generated@@19 true)))) (=> (and (= $generated@@207 true) (= (ControlFlow 0 5) 3)) $generated@@211))))
(let (($generated@@213  (=> (and ($generated@@20 ($generated@@101 $generated@@16 ($generated@@19 true))) ($generated@@81 ($generated@@52 $generated@@40 $generated@@206) $generated@@82 $generated@@205)) (=> (and (and (= $generated@@208 (forall (($generated@@214 T@U) ($generated@@215 T@U) )  (=> (and (and (or (not (= $generated@@214 $generated@@38)) (not true)) ($generated@@20 ($generated@@45 $generated@@16 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@205 $generated@@214) $generated@@2)))) ($generated@@20 ($generated@@45 $generated@@16 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@40 ($generated@@50 $generated@@48 $generated@@49) $generated@@205 $generated@@214) $generated@@2)))) ($generated@@20 ($generated@@111 $generated@@40 $generated@@48 $generated@@16 $generated@@209 $generated@@214 $generated@@215))))) ($generated@@163 $generated@@205 $generated@@206)) (and (= $generated@@207 $generated@@208) (= (ControlFlow 0 4) 3))) $generated@@211))))
(let (($generated@@216 true))
(let (($generated@@217  (=> (= $generated@@209 ($generated@@112 $generated@@38 $generated@@205 $generated@@2 $generated@@205 $generated@@2)) (and (and (=> (= (ControlFlow 0 6) 1) $generated@@216) (=> (= (ControlFlow 0 6) 4) $generated@@213)) (=> (= (ControlFlow 0 6) 5) $generated@@212)))))
(let (($generated@@218  (=> (and ($generated@@36 $generated@@205) ($generated@@210 $generated@@205)) (=> (and (and (or (not (= $generated@@206 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@206 $generated@@90) ($generated@@42 $generated@@40 $generated@@206 $generated@@90 $generated@@205))) (and (= 4 $generated@@34) (= (ControlFlow 0 7) 6))) $generated@@217))))
$generated@@218)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
