(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 (T@T) Int)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 (Bool) T@U)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Real) T@U)
(declare-fun $generated@@25 (T@U) Real)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T T@T) T@T)
(declare-fun $generated@@67 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@T T@U T@U) Bool)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@U T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@190 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@16 $generated@@17) 0) (= ($generated@@16 $generated@@18) 1)) (= ($generated@@16 $generated@@19) 2)) (forall (($generated@@26 Bool) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Int) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Real) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15)
)
(assert (= ($generated@@32 $generated@@0) 0))
(assert (= ($generated@@33 $generated@@0) $generated@@1))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and ($generated@@34 $generated@@38 $generated@@35 $generated@@39) ($generated@@36 $generated@@39)) ($generated@@34 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@34 $generated@@38 $generated@@35 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (and ($generated@@34 $generated@@41 $generated@@40 $generated@@42) ($generated@@36 $generated@@42)) ($generated@@34 $generated@@41 $generated@@37 $generated@@42))
 :pattern ( ($generated@@34 $generated@@41 $generated@@40 $generated@@42))
)))
(assert (= ($generated@@16 $generated@@44) 3))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@47 $generated@@45 $generated@@48) ($generated@@43 $generated@@44 $generated@@47 $generated@@46 $generated@@48))
 :pattern ( ($generated@@43 $generated@@44 $generated@@47 $generated@@45 $generated@@48))
 :pattern ( ($generated@@43 $generated@@44 $generated@@47 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@50 $generated@@49 $generated@@51) ($generated@@43 $generated@@44 $generated@@50 $generated@@37 $generated@@51))
 :pattern ( ($generated@@43 $generated@@44 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@43 $generated@@44 $generated@@50 $generated@@37 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@53 $generated@@52 $generated@@54) ($generated@@43 $generated@@44 $generated@@53 $generated@@35 $generated@@54))
 :pattern ( ($generated@@43 $generated@@44 $generated@@53 $generated@@52 $generated@@54))
 :pattern ( ($generated@@43 $generated@@44 $generated@@53 $generated@@35 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@56 $generated@@55 $generated@@57) ($generated@@43 $generated@@44 $generated@@56 $generated@@40 $generated@@57))
 :pattern ( ($generated@@43 $generated@@44 $generated@@56 $generated@@55 $generated@@57))
 :pattern ( ($generated@@43 $generated@@44 $generated@@56 $generated@@40 $generated@@57))
)))
(assert (= ($generated@@32 $generated@@58) 0))
(assert (= ($generated@@59 $generated@@5 $generated@@15) $generated@@58))
(assert ($generated@@60 $generated@@58))
(assert  (and (and (and (and (and (and (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@63 $generated@@70 $generated@@71 ($generated@@67 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@74) $generated@@72)
 :weight 0
)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (or (= $generated@@79 $generated@@80) (= ($generated@@63 $generated@@75 $generated@@76 ($generated@@67 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@77) $generated@@80) ($generated@@63 $generated@@75 $generated@@76 $generated@@78 $generated@@80)))
 :weight 0
))) (= ($generated@@16 $generated@@64) 4)) (= ($generated@@16 $generated@@65) 5)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (= ($generated@@16 ($generated@@66 $generated@@81 $generated@@82)) 6))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@68 ($generated@@66 $generated@@83 $generated@@84)) $generated@@83)
 :pattern ( ($generated@@66 $generated@@83 $generated@@84))
))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@69 ($generated@@66 $generated@@85 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@66 $generated@@85 $generated@@86))
))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@87 $generated@@46 $generated@@88)  (or (= $generated@@87 $generated@@61) ($generated@@21 ($generated@@62 $generated@@17 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@88 $generated@@87) $generated@@0)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@87 $generated@@46 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@89 $generated@@37 $generated@@90)  (or (= $generated@@89 $generated@@61) ($generated@@21 ($generated@@62 $generated@@17 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@90 $generated@@89) $generated@@0)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@89 $generated@@37 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@91 $generated@@35 $generated@@92)  (or (= $generated@@91 $generated@@61) ($generated@@21 ($generated@@62 $generated@@17 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@92 $generated@@91) $generated@@0)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@91 $generated@@35 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@93 $generated@@40 $generated@@94)  (or (= $generated@@93 $generated@@61) ($generated@@21 ($generated@@62 $generated@@17 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@94 $generated@@93) $generated@@0)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@93 $generated@@40 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 ($generated@@62 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@62 $generated@@97 $generated@@96))
)))
(assert (= ($generated@@16 $generated@@99) 7))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@98 $generated@@99 $generated@@103 ($generated@@100 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> ($generated@@101 $generated@@103 $generated@@105) ($generated@@102 $generated@@105 $generated@@104))
 :pattern ( ($generated@@101 $generated@@103 $generated@@105))
)))
 :pattern ( ($generated@@98 $generated@@99 $generated@@103 ($generated@@100 $generated@@104)))
)))
(assert ($generated@@60 $generated@@0))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@34 ($generated@@95 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@43 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@34 ($generated@@95 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@102 $generated@@110 $generated@@45) (and (= ($generated@@95 $generated@@44 ($generated@@62 $generated@@44 $generated@@110)) $generated@@110) ($generated@@98 $generated@@44 ($generated@@62 $generated@@44 $generated@@110) $generated@@45)))
 :pattern ( ($generated@@102 $generated@@110 $generated@@45))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@102 $generated@@111 $generated@@52) (and (= ($generated@@95 $generated@@44 ($generated@@62 $generated@@44 $generated@@111)) $generated@@111) ($generated@@98 $generated@@44 ($generated@@62 $generated@@44 $generated@@111) $generated@@52)))
 :pattern ( ($generated@@102 $generated@@111 $generated@@52))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@102 $generated@@112 $generated@@55) (and (= ($generated@@95 $generated@@44 ($generated@@62 $generated@@44 $generated@@112)) $generated@@112) ($generated@@98 $generated@@44 ($generated@@62 $generated@@44 $generated@@112) $generated@@55)))
 :pattern ( ($generated@@102 $generated@@112 $generated@@55))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@102 $generated@@113 $generated@@46) (and (= ($generated@@95 $generated@@44 ($generated@@62 $generated@@44 $generated@@113)) $generated@@113) ($generated@@98 $generated@@44 ($generated@@62 $generated@@44 $generated@@113) $generated@@46)))
 :pattern ( ($generated@@102 $generated@@113 $generated@@46))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@102 $generated@@114 $generated@@49) (and (= ($generated@@95 $generated@@44 ($generated@@62 $generated@@44 $generated@@114)) $generated@@114) ($generated@@98 $generated@@44 ($generated@@62 $generated@@44 $generated@@114) $generated@@49)))
 :pattern ( ($generated@@102 $generated@@114 $generated@@49))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@102 $generated@@115 $generated@@37) (and (= ($generated@@95 $generated@@44 ($generated@@62 $generated@@44 $generated@@115)) $generated@@115) ($generated@@98 $generated@@44 ($generated@@62 $generated@@44 $generated@@115) $generated@@37)))
 :pattern ( ($generated@@102 $generated@@115 $generated@@37))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@102 $generated@@116 $generated@@40) (and (= ($generated@@95 $generated@@44 ($generated@@62 $generated@@44 $generated@@116)) $generated@@116) ($generated@@98 $generated@@44 ($generated@@62 $generated@@44 $generated@@116) $generated@@40)))
 :pattern ( ($generated@@102 $generated@@116 $generated@@40))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@102 $generated@@117 $generated@@35) (and (= ($generated@@95 $generated@@44 ($generated@@62 $generated@@44 $generated@@117)) $generated@@117) ($generated@@98 $generated@@44 ($generated@@62 $generated@@44 $generated@@117) $generated@@35)))
 :pattern ( ($generated@@102 $generated@@117 $generated@@35))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@98 $generated@@44 $generated@@118 $generated@@45)  (and ($generated@@98 $generated@@44 $generated@@118 $generated@@46) (or (not (= $generated@@118 $generated@@61)) (not true))))
 :pattern ( ($generated@@98 $generated@@44 $generated@@118 $generated@@45))
 :pattern ( ($generated@@98 $generated@@44 $generated@@118 $generated@@46))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@98 $generated@@44 $generated@@119 $generated@@49)  (and ($generated@@98 $generated@@44 $generated@@119 $generated@@37) (or (not (= $generated@@119 $generated@@61)) (not true))))
 :pattern ( ($generated@@98 $generated@@44 $generated@@119 $generated@@49))
 :pattern ( ($generated@@98 $generated@@44 $generated@@119 $generated@@37))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@98 $generated@@44 $generated@@120 $generated@@52)  (and ($generated@@98 $generated@@44 $generated@@120 $generated@@35) (or (not (= $generated@@120 $generated@@61)) (not true))))
 :pattern ( ($generated@@98 $generated@@44 $generated@@120 $generated@@52))
 :pattern ( ($generated@@98 $generated@@44 $generated@@120 $generated@@35))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@98 $generated@@44 $generated@@121 $generated@@55)  (and ($generated@@98 $generated@@44 $generated@@121 $generated@@40) (or (not (= $generated@@121 $generated@@61)) (not true))))
 :pattern ( ($generated@@98 $generated@@44 $generated@@121 $generated@@55))
 :pattern ( ($generated@@98 $generated@@44 $generated@@121 $generated@@40))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@43 $generated@@44 $generated@@122 $generated@@35 $generated@@123) ($generated@@43 $generated@@44 $generated@@122 $generated@@37 $generated@@123))
 :pattern ( ($generated@@43 $generated@@44 $generated@@122 $generated@@35 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> ($generated@@43 $generated@@44 $generated@@124 $generated@@40 $generated@@125) ($generated@@43 $generated@@44 $generated@@124 $generated@@37 $generated@@125))
 :pattern ( ($generated@@43 $generated@@44 $generated@@124 $generated@@40 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (and (= ($generated@@126 ($generated@@59 $generated@@127 $generated@@128)) $generated@@127) (= ($generated@@33 ($generated@@59 $generated@@127 $generated@@128)) $generated@@128))
 :pattern ( ($generated@@59 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@102 ($generated@@95 $generated@@131 $generated@@129) $generated@@130) ($generated@@98 $generated@@131 $generated@@129 $generated@@130))
 :pattern ( ($generated@@102 ($generated@@95 $generated@@131 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@43 $generated@@99 $generated@@132 ($generated@@100 $generated@@133) $generated@@134) (forall (($generated@@135 T@U) ) (!  (=> ($generated@@101 $generated@@132 $generated@@135) ($generated@@34 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@101 $generated@@132 $generated@@135))
)))
 :pattern ( ($generated@@43 $generated@@99 $generated@@132 ($generated@@100 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@136 ($generated@@100 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@100 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@138 ($generated@@100 $generated@@139)) $generated)
 :pattern ( ($generated@@100 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@62 $generated@@141 ($generated@@95 $generated@@141 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@95 $generated@@141 $generated@@140))
)))
(assert  (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@142 $generated@@145 $generated@@146 $generated@@147 ($generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@142 $generated@@152 $generated@@153 $generated@@154 ($generated@@144 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@142 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@142 $generated@@161 $generated@@162 $generated@@163 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@142 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Bool) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@21 ($generated@@142 $generated@@44 $generated@@64 $generated@@17 ($generated@@143 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))  (=> (and (or (not (= $generated@@174 $generated@@170)) (not true)) ($generated@@21 ($generated@@62 $generated@@17 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@171 $generated@@174) $generated@@172)))) $generated@@173))
 :pattern ( ($generated@@142 $generated@@44 $generated@@64 $generated@@17 ($generated@@143 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@102 $generated@@176 ($generated@@100 $generated@@177)) (and (= ($generated@@95 $generated@@99 ($generated@@62 $generated@@99 $generated@@176)) $generated@@176) ($generated@@98 $generated@@99 ($generated@@62 $generated@@99 $generated@@176) ($generated@@100 $generated@@177))))
 :pattern ( ($generated@@102 $generated@@176 ($generated@@100 $generated@@177)))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> ($generated@@98 $generated@@44 $generated@@178 $generated@@35) ($generated@@98 $generated@@44 $generated@@178 $generated@@37))
 :pattern ( ($generated@@98 $generated@@44 $generated@@178 $generated@@35))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> ($generated@@102 $generated@@179 $generated@@35) ($generated@@102 $generated@@179 $generated@@37))
 :pattern ( ($generated@@102 $generated@@179 $generated@@35))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> ($generated@@98 $generated@@44 $generated@@180 $generated@@40) ($generated@@98 $generated@@44 $generated@@180 $generated@@37))
 :pattern ( ($generated@@98 $generated@@44 $generated@@180 $generated@@40))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> ($generated@@102 $generated@@181 $generated@@40) ($generated@@102 $generated@@181 $generated@@37))
 :pattern ( ($generated@@102 $generated@@181 $generated@@40))
)))
(assert (= ($generated@@138 $generated@@45) $generated@@2))
(assert (= ($generated@@182 $generated@@45) $generated@@11))
(assert (= ($generated@@138 $generated@@52) $generated@@3))
(assert (= ($generated@@182 $generated@@52) $generated@@12))
(assert (= ($generated@@138 $generated@@55) $generated@@4))
(assert (= ($generated@@182 $generated@@55) $generated@@13))
(assert (= ($generated@@138 $generated@@46) $generated@@6))
(assert (= ($generated@@182 $generated@@46) $generated@@11))
(assert (= ($generated@@138 $generated@@49) $generated@@7))
(assert (= ($generated@@182 $generated@@49) $generated@@14))
(assert (= ($generated@@138 $generated@@37) $generated@@8))
(assert (= ($generated@@182 $generated@@37) $generated@@14))
(assert (= ($generated@@138 $generated@@40) $generated@@9))
(assert (= ($generated@@182 $generated@@40) $generated@@13))
(assert (= ($generated@@138 $generated@@35) $generated@@10))
(assert (= ($generated@@182 $generated@@35) $generated@@12))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@98 $generated@@44 $generated@@185 $generated@@46)  (or (= $generated@@185 $generated@@61) ($generated@@183 ($generated@@184 $generated@@185))))
 :pattern ( ($generated@@98 $generated@@44 $generated@@185 $generated@@46))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@98 $generated@@44 $generated@@187 $generated@@37)  (or (= $generated@@187 $generated@@61) ($generated@@186 ($generated@@184 $generated@@187))))
 :pattern ( ($generated@@98 $generated@@44 $generated@@187 $generated@@37))
)))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@98 $generated@@44 $generated@@189 $generated@@35)  (or (= $generated@@189 $generated@@61) ($generated@@188 ($generated@@184 $generated@@189))))
 :pattern ( ($generated@@98 $generated@@44 $generated@@189 $generated@@35))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@98 $generated@@44 $generated@@191 $generated@@40)  (or (= $generated@@191 $generated@@61) ($generated@@190 ($generated@@184 $generated@@191))))
 :pattern ( ($generated@@98 $generated@@44 $generated@@191 $generated@@40))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@192) (and (or (not (= $generated@@193 $generated@@61)) (not true)) ($generated@@98 $generated@@44 $generated@@193 $generated@@46))) ($generated@@21 ($generated@@62 $generated@@17 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@192 $generated@@193) $generated@@0)))) ($generated@@43 $generated@@99 ($generated@@62 $generated@@99 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@192 $generated@@193) $generated@@58)) ($generated@@100 $generated@@49) $generated@@192))
 :pattern ( ($generated@@62 $generated@@99 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@192 $generated@@193) $generated@@58)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and ($generated@@36 $generated@@194) (and (or (not (= $generated@@195 $generated@@61)) (not true)) ($generated@@98 $generated@@44 $generated@@195 $generated@@46))) ($generated@@98 $generated@@99 ($generated@@62 $generated@@99 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@194 $generated@@195) $generated@@58)) ($generated@@100 $generated@@49)))
 :pattern ( ($generated@@62 $generated@@99 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@194 $generated@@195) $generated@@58)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@204 true))
(let (($generated@@205  (=> (and (=> (and ($generated@@101 ($generated@@62 $generated@@99 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@196 $generated@@197) $generated@@58)) ($generated@@95 $generated@@44 $generated@@198)) ($generated@@101 ($generated@@62 $generated@@99 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@196 $generated@@197) $generated@@58)) ($generated@@95 $generated@@44 $generated@@199))) (or (not (= $generated@@198 $generated@@199)) (not true))) (= (ControlFlow 0 5) 1)) $generated@@204)))
(let (($generated@@206  (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@197 $generated@@61)) (not true))) (=> (or (not (= $generated@@197 $generated@@61)) (not true)) (=> ($generated@@101 ($generated@@62 $generated@@99 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@196 $generated@@197) $generated@@58)) ($generated@@95 $generated@@44 $generated@@198)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@197 $generated@@61)) (not true))) (=> (or (not (= $generated@@197 $generated@@61)) (not true)) (=> ($generated@@101 ($generated@@62 $generated@@99 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@44 ($generated@@66 $generated@@64 $generated@@65) $generated@@196 $generated@@197) $generated@@58)) ($generated@@95 $generated@@44 $generated@@199)) (=> (and (or (not (= $generated@@198 $generated@@199)) (not true)) (= (ControlFlow 0 2) 1)) $generated@@204)))))))))
(let (($generated@@207  (=> (= $generated@@200 ($generated@@143 $generated@@61 $generated@@201 $generated@@0 false)) (=> (and (and (and ($generated@@36 $generated@@196) ($generated@@202 $generated@@196)) (= $generated@@201 $generated@@196)) (and (and ($generated@@98 $generated@@44 $generated@@198 $generated@@52) ($generated@@43 $generated@@44 $generated@@198 $generated@@52 $generated@@196)) (and ($generated@@98 $generated@@44 $generated@@199 $generated@@55) ($generated@@43 $generated@@44 $generated@@199 $generated@@55 $generated@@196)))) (and (=> (= (ControlFlow 0 6) 2) $generated@@206) (=> (= (ControlFlow 0 6) 5) $generated@@205))))))
(let (($generated@@208  (=> (and ($generated@@36 $generated@@201) ($generated@@202 $generated@@201)) (=> (and (and ($generated@@98 $generated@@44 $generated@@197 $generated@@45) ($generated@@43 $generated@@44 $generated@@197 $generated@@45 $generated@@201)) (and (= 1 $generated@@203) (= (ControlFlow 0 7) 6))) $generated@@207))))
$generated@@208))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
