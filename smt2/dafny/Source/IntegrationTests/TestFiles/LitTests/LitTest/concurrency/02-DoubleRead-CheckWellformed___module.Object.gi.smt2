(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 () T@U)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@106 (T@T T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) Bool)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U T@U T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@204 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@31 $generated@@2) 0))
(assert (= ($generated@@32 $generated) $generated@@0))
(assert (= ($generated@@33 $generated@@2) $generated@@3))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@40) 3) (= ($generated@@15 $generated@@47) 4)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@48 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@48 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@48 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@15 $generated@@49) 5)) (= ($generated@@15 $generated@@50) 6)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@15 ($generated@@51 $generated@@70 $generated@@71)) 7))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@51 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@51 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@51 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@51 $generated@@74 $generated@@75))
))))
(assert  (=> (<= 2 $generated@@34) (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@37 $generated@@76 $generated@@77) (and (< 2 $generated@@34) (and ($generated@@36 $generated@@76) (and (or (not (= $generated@@77 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@77 $generated@@41) ($generated@@42 $generated@@40 $generated@@77 $generated@@41 $generated@@76)))))) (and (forall (($generated@@78 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@78 $generated@@54) (=> ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@52)) ($generated@@53 $generated@@40 $generated@@78)) (=> (= ($generated@@44 $generated@@78) $generated@@77) ($generated@@55 $generated@@78))))
 :pattern ( ($generated@@43 $generated@@78))
 :pattern ( ($generated@@44 $generated@@78))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@52)) ($generated@@53 $generated@@40 $generated@@78)))
)) (= ($generated@@35 $generated@@76 $generated@@77) (forall (($generated@@79 T@U) ) (!  (=> (and ($generated@@39 $generated@@40 $generated@@79 $generated@@54) ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@52)) ($generated@@53 $generated@@40 $generated@@79))) (and (= ($generated@@44 $generated@@79) $generated@@77) (or (not (= ($generated@@43 $generated@@79) $generated@@77)) (not true))))
 :pattern ( ($generated@@43 $generated@@79))
 :pattern ( ($generated@@44 $generated@@79))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@52)) ($generated@@53 $generated@@40 $generated@@79)))
)))))
 :pattern ( ($generated@@35 $generated@@76 $generated@@77) ($generated@@36 $generated@@76))
))))
(assert  (=> (<= 7 $generated@@34) (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or ($generated@@81 $generated@@84 $generated@@85) (and (< 7 $generated@@34) (and ($generated@@36 $generated@@84) (and (or (not (= $generated@@85 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@85 $generated@@41) ($generated@@42 $generated@@40 $generated@@85 $generated@@41 $generated@@84)))))) (and (and ($generated@@37 $generated@@84 $generated@@85) (=> ($generated@@35 $generated@@84 $generated@@85) (forall (($generated@@86 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@86 $generated@@54) (=> ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@84 $generated@@85) $generated@@52)) ($generated@@53 $generated@@40 $generated@@86)) ($generated@@83 $generated@@84 $generated@@86)))
 :pattern ( ($generated@@82 $generated@@84 $generated@@86))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@84 $generated@@85) $generated@@52)) ($generated@@53 $generated@@40 $generated@@86)))
)))) (= ($generated@@80 $generated@@84 $generated@@85)  (and ($generated@@35 $generated@@84 $generated@@85) (forall (($generated@@87 T@U) ) (!  (=> (and ($generated@@39 $generated@@40 $generated@@87 $generated@@54) ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@84 $generated@@85) $generated@@52)) ($generated@@53 $generated@@40 $generated@@87))) ($generated@@82 $generated@@84 $generated@@87))
 :pattern ( ($generated@@82 $generated@@84 $generated@@87))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@84 $generated@@85) $generated@@52)) ($generated@@53 $generated@@40 $generated@@87)))
))))))
 :pattern ( ($generated@@80 $generated@@84 $generated@@85) ($generated@@36 $generated@@84))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@90 $generated@@88 $generated@@91) ($generated@@42 $generated@@40 $generated@@90 $generated@@89 $generated@@91))
 :pattern ( ($generated@@42 $generated@@40 $generated@@90 $generated@@88 $generated@@91))
 :pattern ( ($generated@@42 $generated@@40 $generated@@90 $generated@@89 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@93 $generated@@41 $generated@@94) ($generated@@42 $generated@@40 $generated@@93 $generated@@92 $generated@@94))
 :pattern ( ($generated@@42 $generated@@40 $generated@@93 $generated@@41 $generated@@94))
 :pattern ( ($generated@@42 $generated@@40 $generated@@93 $generated@@92 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@96 $generated@@54 $generated@@97) ($generated@@42 $generated@@40 $generated@@96 $generated@@95 $generated@@97))
 :pattern ( ($generated@@42 $generated@@40 $generated@@96 $generated@@54 $generated@@97))
 :pattern ( ($generated@@42 $generated@@40 $generated@@96 $generated@@95 $generated@@97))
)))
(assert (= ($generated@@31 $generated@@52) 0))
(assert (= ($generated@@98 $generated@@6 $generated@@14) $generated@@52))
(assert ($generated@@99 $generated@@52))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@100 $generated@@89 $generated@@101)  (or (= $generated@@100 $generated@@38) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@101 $generated@@100) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@100 $generated@@89 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@102 $generated@@92 $generated@@103)  (or (= $generated@@102 $generated@@38) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@103 $generated@@102) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@102 $generated@@92 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@104 $generated@@95 $generated@@105)  (or (= $generated@@104 $generated@@38) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@105 $generated@@104) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@104 $generated@@95 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@106 $generated@@108 $generated@@107) $generated@@107)
 :pattern ( ($generated@@106 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@53 $generated@@110 ($generated@@46 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@46 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@39 $generated@@47 $generated@@113 ($generated@@111 $generated@@114)) (forall (($generated@@115 T@U) ) (!  (=> ($generated@@45 $generated@@113 $generated@@115) ($generated@@112 $generated@@115 $generated@@114))
 :pattern ( ($generated@@45 $generated@@113 $generated@@115))
)))
 :pattern ( ($generated@@39 $generated@@47 $generated@@113 ($generated@@111 $generated@@114)))
)))
(assert  (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@116 $generated@@119 $generated@@120 $generated@@121 ($generated@@118 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@124 $generated@@125) $generated@@122)
 :weight 0
)) (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@116 $generated@@126 $generated@@127 $generated@@128 ($generated@@118 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@116 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@116 $generated@@135 $generated@@136 $generated@@137 ($generated@@118 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@116 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@20 ($generated@@116 $generated@@40 $generated@@49 $generated@@16 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))  (=> (and (or (not (= $generated@@149 $generated@@144)) (not true)) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@145 $generated@@149) $generated@@146)))) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@147 $generated@@149) $generated@@148)))))
 :pattern ( ($generated@@116 $generated@@40 $generated@@49 $generated@@16 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))
)))
(assert ($generated@@99 $generated@@2))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@151 ($generated@@53 $generated@@155 $generated@@152) $generated@@153 $generated@@154) ($generated@@42 $generated@@155 $generated@@152 $generated@@153 $generated@@154))
 :pattern ( ($generated@@151 ($generated@@53 $generated@@155 $generated@@152) $generated@@153 $generated@@154))
)))
(assert  (=> (< 1 $generated@@34) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@156) (and (or (not (= $generated@@157 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@157 $generated@@95))) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@156 $generated@@157) $generated@@2)))) ($generated@@42 $generated@@40 ($generated@@44 $generated@@157) $generated@@41 $generated@@156))
 :pattern ( ($generated@@44 $generated@@157) ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@156 $generated@@157) $generated@@2)))
))))
(assert  (=> (< 1 $generated@@34) (forall (($generated@@158 T@U) ) (!  (=> (and (or (not (= $generated@@158 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@158 $generated@@95)) ($generated@@39 $generated@@40 ($generated@@44 $generated@@158) $generated@@41))
 :pattern ( ($generated@@44 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ) (!  (=> ($generated@@112 $generated@@159 $generated@@89) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@159)) $generated@@159) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@159) $generated@@89)))
 :pattern ( ($generated@@112 $generated@@159 $generated@@89))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> ($generated@@112 $generated@@160 $generated@@88) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@160)) $generated@@160) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@160) $generated@@88)))
 :pattern ( ($generated@@112 $generated@@160 $generated@@88))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> ($generated@@112 $generated@@161 $generated@@92) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@161)) $generated@@161) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@161) $generated@@92)))
 :pattern ( ($generated@@112 $generated@@161 $generated@@92))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> ($generated@@112 $generated@@162 $generated@@54) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@162)) $generated@@162) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@162) $generated@@54)))
 :pattern ( ($generated@@112 $generated@@162 $generated@@54))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> ($generated@@112 $generated@@163 $generated@@41) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@163)) $generated@@163) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@163) $generated@@41)))
 :pattern ( ($generated@@112 $generated@@163 $generated@@41))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> ($generated@@112 $generated@@164 $generated@@95) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@164)) $generated@@164) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@164) $generated@@95)))
 :pattern ( ($generated@@112 $generated@@164 $generated@@95))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@165 $generated@@88)  (and ($generated@@39 $generated@@40 $generated@@165 $generated@@89) (or (not (= $generated@@165 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@165 $generated@@88))
 :pattern ( ($generated@@39 $generated@@40 $generated@@165 $generated@@89))
)))
(assert (forall (($generated@@166 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@166 $generated@@41)  (and ($generated@@39 $generated@@40 $generated@@166 $generated@@92) (or (not (= $generated@@166 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@166 $generated@@41))
 :pattern ( ($generated@@39 $generated@@40 $generated@@166 $generated@@92))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@167 $generated@@54)  (and ($generated@@39 $generated@@40 $generated@@167 $generated@@95) (or (not (= $generated@@167 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@167 $generated@@54))
 :pattern ( ($generated@@39 $generated@@40 $generated@@167 $generated@@95))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@168 T@U) ) (!  (=> (or ($generated@@55 $generated@@168) (and (< 0 $generated@@34) ($generated@@39 $generated@@40 $generated@@168 $generated@@88))) (= ($generated@@43 $generated@@168) $generated@@168))
 :pattern ( ($generated@@43 $generated@@168))
))))
(assert  (=> (<= 3 $generated@@34) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (or ($generated@@170 $generated@@171 $generated@@172) (and (< 3 $generated@@34) (and ($generated@@36 $generated@@171) (and (or (not (= $generated@@172 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@172 $generated@@54) ($generated@@42 $generated@@40 $generated@@172 $generated@@54 $generated@@171)))))) (and (=> ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@171 ($generated@@44 $generated@@172)) $generated@@52)) ($generated@@53 $generated@@40 $generated@@172)) ($generated@@37 $generated@@171 ($generated@@44 $generated@@172))) (= ($generated@@169 $generated@@171 $generated@@172)  (and ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@171 ($generated@@44 $generated@@172)) $generated@@52)) ($generated@@53 $generated@@40 $generated@@172)) ($generated@@35 $generated@@171 ($generated@@44 $generated@@172))))))
 :pattern ( ($generated@@169 $generated@@171 $generated@@172) ($generated@@36 $generated@@171))
))))
(assert  (=> (<= 8 $generated@@34) (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (or ($generated@@174 $generated@@175 $generated@@176) (and (< 8 $generated@@34) (and ($generated@@36 $generated@@175) (and (or (not (= $generated@@176 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@176 $generated@@54) ($generated@@42 $generated@@40 $generated@@176 $generated@@54 $generated@@175)))))) (and (and ($generated@@170 $generated@@175 $generated@@176) (=> ($generated@@169 $generated@@175 $generated@@176) ($generated@@81 $generated@@175 ($generated@@44 $generated@@176)))) (= ($generated@@173 $generated@@175 $generated@@176)  (and ($generated@@169 $generated@@175 $generated@@176) ($generated@@80 $generated@@175 ($generated@@44 $generated@@176))))))
 :pattern ( ($generated@@173 $generated@@175 $generated@@176) ($generated@@36 $generated@@175))
))))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@177 T@U) ) (!  (=> (or ($generated@@55 $generated@@177) (and (< 0 $generated@@34) ($generated@@39 $generated@@40 $generated@@177 $generated@@88))) ($generated@@39 $generated@@40 ($generated@@43 $generated@@177) $generated@@88))
 :pattern ( ($generated@@43 $generated@@177))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (and (= ($generated@@178 ($generated@@98 $generated@@179 $generated@@180)) $generated@@179) (= ($generated@@33 ($generated@@98 $generated@@179 $generated@@180)) $generated@@180))
 :pattern ( ($generated@@98 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> ($generated@@112 $generated@@181 $generated) (and (= ($generated@@53 $generated@@16 ($generated@@46 $generated@@16 $generated@@181)) $generated@@181) ($generated@@39 $generated@@16 ($generated@@46 $generated@@16 $generated@@181) $generated)))
 :pattern ( ($generated@@112 $generated@@181 $generated))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@112 ($generated@@53 $generated@@184 $generated@@182) $generated@@183) ($generated@@39 $generated@@184 $generated@@182 $generated@@183))
 :pattern ( ($generated@@112 ($generated@@53 $generated@@184 $generated@@182) $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@42 $generated@@47 $generated@@185 ($generated@@111 $generated@@186) $generated@@187) (forall (($generated@@188 T@U) ) (!  (=> ($generated@@45 $generated@@185 $generated@@188) ($generated@@151 $generated@@188 $generated@@186 $generated@@187))
 :pattern ( ($generated@@45 $generated@@185 $generated@@188))
)))
 :pattern ( ($generated@@42 $generated@@47 $generated@@185 ($generated@@111 $generated@@186) $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ) (! ($generated@@39 $generated@@40 $generated@@189 $generated@@89)
 :pattern ( ($generated@@39 $generated@@40 $generated@@189 $generated@@89))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (or ($generated@@55 $generated@@191) (and (< 0 $generated@@34) (and ($generated@@39 $generated@@40 $generated@@191 $generated@@88) ($generated@@42 $generated@@40 $generated@@191 $generated@@88 $generated@@190)))) ($generated@@36 $generated@@190)) ($generated@@42 $generated@@40 ($generated@@43 $generated@@191) $generated@@88 $generated@@190))
 :pattern ( ($generated@@42 $generated@@40 ($generated@@43 $generated@@191) $generated@@88 $generated@@190))
))))
(assert (forall (($generated@@193 T@U) ) (! (= ($generated@@192 ($generated@@111 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@111 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@32 ($generated@@111 $generated@@194)) $generated@@1)
 :pattern ( ($generated@@111 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@T) ) (! (= ($generated@@46 $generated@@196 ($generated@@53 $generated@@196 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@53 $generated@@196 $generated@@195))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@197 T@U) ) (!  (=> (or ($generated@@55 ($generated@@106 $generated@@40 $generated@@197)) (and (< 0 $generated@@34) ($generated@@39 $generated@@40 $generated@@197 $generated@@88))) (= ($generated@@43 ($generated@@106 $generated@@40 $generated@@197)) ($generated@@106 $generated@@40 $generated@@197)))
 :weight 3
 :pattern ( ($generated@@43 ($generated@@106 $generated@@40 $generated@@197)))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@112 $generated@@198 ($generated@@111 $generated@@199)) (and (= ($generated@@53 $generated@@47 ($generated@@46 $generated@@47 $generated@@198)) $generated@@198) ($generated@@39 $generated@@47 ($generated@@46 $generated@@47 $generated@@198) ($generated@@111 $generated@@199))))
 :pattern ( ($generated@@112 $generated@@198 ($generated@@111 $generated@@199)))
)))
(assert (= ($generated@@32 $generated@@89) $generated@@4))
(assert (= ($generated@@200 $generated@@89) $generated@@11))
(assert (= ($generated@@32 $generated@@88) $generated@@5))
(assert (= ($generated@@200 $generated@@88) $generated@@11))
(assert (= ($generated@@32 $generated@@92) $generated@@7))
(assert (= ($generated@@200 $generated@@92) $generated@@12))
(assert (= ($generated@@32 $generated@@54) $generated@@8))
(assert (= ($generated@@200 $generated@@54) $generated@@13))
(assert (= ($generated@@32 $generated@@41) $generated@@9))
(assert (= ($generated@@200 $generated@@41) $generated@@12))
(assert (= ($generated@@32 $generated@@95) $generated@@10))
(assert (= ($generated@@200 $generated@@95) $generated@@13))
(assert (forall (($generated@@203 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@203 $generated@@92)  (or (= $generated@@203 $generated@@38) ($generated@@201 ($generated@@202 $generated@@203))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@203 $generated@@92))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@205 $generated@@95)  (or (= $generated@@205 $generated@@38) ($generated@@204 ($generated@@202 $generated@@205))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@205 $generated@@95))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@206) (and (or (not (= $generated@@207 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@207 $generated@@92))) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@206 $generated@@207) $generated@@2)))) ($generated@@42 $generated@@47 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@206 $generated@@207) $generated@@52)) ($generated@@111 $generated@@54) $generated@@206))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@206 $generated@@207) $generated@@52)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@T) ) (! (= ($generated@@53 $generated@@209 ($generated@@106 $generated@@209 $generated@@208)) ($generated@@106 $generated@@50 ($generated@@53 $generated@@209 $generated@@208)))
 :pattern ( ($generated@@53 $generated@@209 ($generated@@106 $generated@@209 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@36 $generated@@210) (and (or (not (= $generated@@211 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@211 $generated@@92))) ($generated@@39 $generated@@47 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@210 $generated@@211) $generated@@52)) ($generated@@111 $generated@@54)))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@210 $generated@@211) $generated@@52)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! ($generated@@42 $generated@@16 $generated@@213 $generated $generated@@212)
 :pattern ( ($generated@@42 $generated@@16 $generated@@213 $generated $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! ($generated@@39 $generated@@16 $generated@@214 $generated)
 :pattern ( ($generated@@39 $generated@@16 $generated@@214 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Bool)
(declare-fun $generated@@218 () Bool)
(declare-fun $generated@@219 () Bool)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@222  (=> (= ($generated@@173 $generated@@215 $generated@@216)  (and ($generated@@169 $generated@@215 $generated@@216) ($generated@@80 $generated@@215 ($generated@@44 $generated@@216)))) (=> (and (and ($generated@@170 $generated@@215 $generated@@216) (=> ($generated@@169 $generated@@215 $generated@@216) ($generated@@81 $generated@@215 ($generated@@44 $generated@@216)))) ($generated@@39 $generated@@16 ($generated@@19 ($generated@@173 $generated@@215 $generated@@216)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@217) (=> $generated@@217 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@218)))))))
(let (($generated@@223  (=> (not ($generated@@169 $generated@@215 $generated@@216)) (=> (and (= $generated@@218 true) (= (ControlFlow 0 7) 3)) $generated@@222))))
(let (($generated@@224  (=> ($generated@@169 $generated@@215 $generated@@216) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= ($generated@@44 $generated@@216) $generated@@38)) (not true))) (=> (or (not (= ($generated@@44 $generated@@216) $generated@@38)) (not true)) (=> ($generated@@151 ($generated@@53 $generated@@40 ($generated@@44 $generated@@216)) $generated@@92 $generated@@215) (=> (and (and (= $generated@@219 (forall (($generated@@225 T@U) ($generated@@226 T@U) )  (=> (and (and (or (not (= $generated@@225 $generated@@38)) (not true)) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@215 $generated@@225) $generated@@2)))) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@215 $generated@@225) $generated@@2)))) ($generated@@20 ($generated@@116 $generated@@40 $generated@@49 $generated@@16 $generated@@220 $generated@@225 $generated@@226))))) ($generated@@81 $generated@@215 ($generated@@44 $generated@@216))) (and (= $generated@@218 $generated@@219) (= (ControlFlow 0 5) 3))) $generated@@222)))))))
(let (($generated@@227  (=> ($generated@@151 ($generated@@53 $generated@@40 $generated@@216) $generated@@95 $generated@@215) (=> (and (= $generated@@217 (forall (($generated@@228 T@U) ($generated@@229 T@U) )  (=> (and (and (or (not (= $generated@@228 $generated@@38)) (not true)) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@215 $generated@@228) $generated@@2)))) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@215 $generated@@228) $generated@@2)))) ($generated@@20 ($generated@@116 $generated@@40 $generated@@49 $generated@@16 $generated@@220 $generated@@228 $generated@@229))))) ($generated@@170 $generated@@215 $generated@@216)) (and (=> (= (ControlFlow 0 8) 5) $generated@@224) (=> (= (ControlFlow 0 8) 7) $generated@@223))))))
(let (($generated@@230 true))
(let (($generated@@231  (=> (= $generated@@220 ($generated@@117 $generated@@38 $generated@@215 $generated@@2 $generated@@215 $generated@@2)) (and (=> (= (ControlFlow 0 9) 1) $generated@@230) (=> (= (ControlFlow 0 9) 8) $generated@@227)))))
(let (($generated@@232  (=> (and ($generated@@36 $generated@@215) ($generated@@221 $generated@@215)) (=> (and (and (or (not (= $generated@@216 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@216 $generated@@54) ($generated@@42 $generated@@40 $generated@@216 $generated@@54 $generated@@215))) (and (= 8 $generated@@34) (= (ControlFlow 0 10) 9))) $generated@@231))))
$generated@@232))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
