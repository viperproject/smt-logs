(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 (T@T) Int)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 (Bool) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (Int) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (Real) T@U)
(declare-fun $generated@@26 (T@U) Real)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () Int)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@89 () T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@U T@U) Bool)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@106 (T@U T@U) Bool)
(declare-fun $generated@@107 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@U T@U) Bool)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@114 (T@U T@U) Bool)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@203 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@17 $generated@@18) 0) (= ($generated@@17 $generated@@19) 1)) (= ($generated@@17 $generated@@20) 2)) (forall (($generated@@27 Bool) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Int) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 Real) ) (! (= ($generated@@26 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16)
)
(assert (= ($generated@@33 $generated@@2) 0))
(assert (= ($generated@@34 $generated) $generated@@0))
(assert (= ($generated@@35 $generated@@2) $generated@@3))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@17 $generated@@42) 3) (= ($generated@@17 $generated@@48) 4)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@49 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@49 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@49 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@17 $generated@@50) 5)) (= ($generated@@17 $generated@@51) 6)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@17 ($generated@@52 $generated@@70 $generated@@71)) 7))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@52 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@52 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@52 $generated@@74 $generated@@75))
))))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@39 $generated@@76 $generated@@77) (and (< 2 $generated@@36) (and ($generated@@38 $generated@@76) (and (or (not (= $generated@@77 $generated@@40)) (not true)) (and ($generated@@41 $generated@@42 $generated@@77 $generated@@43) ($generated@@44 $generated@@42 $generated@@77 $generated@@43 $generated@@76)))))) (= ($generated@@37 $generated@@76 $generated@@77) (forall (($generated@@78 T@U) ) (!  (=> (and ($generated@@41 $generated@@42 $generated@@78 $generated@@55) ($generated@@46 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@76 $generated@@77) $generated@@53)) ($generated@@54 $generated@@42 $generated@@78))) (and (= ($generated@@45 $generated@@78) $generated@@77) (or (not (= $generated@@78 $generated@@77)) (not true))))
 :pattern ( ($generated@@45 $generated@@78))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@76 $generated@@77) $generated@@53)) ($generated@@54 $generated@@42 $generated@@78)))
))))
 :pattern ( ($generated@@37 $generated@@76 $generated@@77) ($generated@@38 $generated@@76))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and ($generated@@79 $generated@@82 $generated@@80 $generated@@83) ($generated@@38 $generated@@83)) ($generated@@79 $generated@@82 $generated@@81 $generated@@83))
 :pattern ( ($generated@@79 $generated@@82 $generated@@80 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@44 $generated@@42 $generated@@85 $generated@@43 $generated@@86) ($generated@@44 $generated@@42 $generated@@85 $generated@@84 $generated@@86))
 :pattern ( ($generated@@44 $generated@@42 $generated@@85 $generated@@43 $generated@@86))
 :pattern ( ($generated@@44 $generated@@42 $generated@@85 $generated@@84 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@44 $generated@@42 $generated@@87 $generated@@55 $generated@@88) ($generated@@44 $generated@@42 $generated@@87 $generated@@81 $generated@@88))
 :pattern ( ($generated@@44 $generated@@42 $generated@@87 $generated@@55 $generated@@88))
 :pattern ( ($generated@@44 $generated@@42 $generated@@87 $generated@@81 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@44 $generated@@42 $generated@@90 $generated@@89 $generated@@91) ($generated@@44 $generated@@42 $generated@@90 $generated@@80 $generated@@91))
 :pattern ( ($generated@@44 $generated@@42 $generated@@90 $generated@@89 $generated@@91))
 :pattern ( ($generated@@44 $generated@@42 $generated@@90 $generated@@80 $generated@@91))
)))
(assert (= ($generated@@33 $generated@@53) 0))
(assert (= ($generated@@92 $generated@@6 $generated@@15) $generated@@53))
(assert ($generated@@93 $generated@@53))
(assert (= ($generated@@33 $generated@@94) 0))
(assert (= ($generated@@92 $generated@@11 $generated@@16) $generated@@94))
(assert ($generated@@93 $generated@@94))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@44 $generated@@42 $generated@@95 $generated@@84 $generated@@96)  (or (= $generated@@95 $generated@@40) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@96 $generated@@95) $generated@@2)))))
 :pattern ( ($generated@@44 $generated@@42 $generated@@95 $generated@@84 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@44 $generated@@42 $generated@@97 $generated@@81 $generated@@98)  (or (= $generated@@97 $generated@@40) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@98 $generated@@97) $generated@@2)))))
 :pattern ( ($generated@@44 $generated@@42 $generated@@97 $generated@@81 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@44 $generated@@42 $generated@@99 $generated@@80 $generated@@100)  (or (= $generated@@99 $generated@@40) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@100 $generated@@99) $generated@@2)))))
 :pattern ( ($generated@@44 $generated@@42 $generated@@99 $generated@@80 $generated@@100))
)))
(assert  (=> (<= 4 $generated@@36) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@102 $generated@@109 $generated@@110) (and (< 4 $generated@@36) (and ($generated@@38 $generated@@109) (and (or (not (= $generated@@110 $generated@@40)) (not true)) (and ($generated@@41 $generated@@42 $generated@@110 $generated@@89) ($generated@@44 $generated@@42 $generated@@110 $generated@@89 $generated@@109)))))) (and (and ($generated@@103 $generated@@109 $generated@@110) (=> ($generated@@104 $generated@@109 $generated@@110) (=> (= ($generated@@45 ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@109 $generated@@110) $generated@@94))) ($generated@@45 $generated@@110)) (=> ($generated@@46 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@109 ($generated@@45 $generated@@110)) $generated@@53)) ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@109 $generated@@110) $generated@@94)) (and ($generated@@105 $generated@@109 $generated@@110) (=> ($generated@@106 $generated@@109 $generated@@110) ($generated@@107 $generated@@109 $generated@@110))))))) (= ($generated@@101 $generated@@109 $generated@@110)  (and (and (and (and ($generated@@104 $generated@@109 $generated@@110) (= ($generated@@45 ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@109 $generated@@110) $generated@@94))) ($generated@@45 $generated@@110))) ($generated@@46 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@109 ($generated@@45 $generated@@110)) $generated@@53)) ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@109 $generated@@110) $generated@@94))) ($generated@@106 $generated@@109 $generated@@110)) ($generated@@108 $generated@@109 $generated@@110)))))
 :pattern ( ($generated@@101 $generated@@109 $generated@@110) ($generated@@38 $generated@@109))
))))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@54 $generated@@112 ($generated@@47 $generated@@112 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@47 $generated@@112 $generated@@111))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@115 ($generated@@113 $generated@@116)) (forall (($generated@@117 T@U) ) (!  (=> ($generated@@46 $generated@@115 $generated@@117) ($generated@@114 $generated@@117 $generated@@116))
 :pattern ( ($generated@@46 $generated@@115 $generated@@117))
)))
 :pattern ( ($generated@@41 $generated@@48 $generated@@115 ($generated@@113 $generated@@116)))
)))
(assert  (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@118 $generated@@121 $generated@@122 $generated@@123 ($generated@@120 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@126 $generated@@127) $generated@@124)
 :weight 0
)) (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@118 $generated@@128 $generated@@129 $generated@@130 ($generated@@120 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@118 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@118 $generated@@137 $generated@@138 $generated@@139 ($generated@@120 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@118 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@22 ($generated@@118 $generated@@42 $generated@@50 $generated@@18 ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))  (=> (and (or (not (= $generated@@151 $generated@@146)) (not true)) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@147 $generated@@151) $generated@@148)))) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@149 $generated@@151) $generated@@150)))))
 :pattern ( ($generated@@118 $generated@@42 $generated@@50 $generated@@18 ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))
)))
(assert ($generated@@93 $generated@@2))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@79 ($generated@@54 $generated@@156 $generated@@153) $generated@@154 $generated@@155) ($generated@@44 $generated@@156 $generated@@153 $generated@@154 $generated@@155))
 :pattern ( ($generated@@79 ($generated@@54 $generated@@156 $generated@@153) $generated@@154 $generated@@155))
)))
(assert  (=> (< 1 $generated@@36) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and ($generated@@38 $generated@@157) (and (or (not (= $generated@@158 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@158 $generated@@81))) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@157 $generated@@158) $generated@@2)))) ($generated@@44 $generated@@42 ($generated@@45 $generated@@158) $generated@@43 $generated@@157))
 :pattern ( ($generated@@45 $generated@@158) ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@157 $generated@@158) $generated@@2)))
))))
(assert  (=> (< 1 $generated@@36) (forall (($generated@@159 T@U) ) (!  (=> (and (or (not (= $generated@@159 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@159 $generated@@81)) ($generated@@41 $generated@@42 ($generated@@45 $generated@@159) $generated@@43))
 :pattern ( ($generated@@45 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ) (!  (=> ($generated@@114 $generated@@160 $generated@@43) (and (= ($generated@@54 $generated@@42 ($generated@@47 $generated@@42 $generated@@160)) $generated@@160) ($generated@@41 $generated@@42 ($generated@@47 $generated@@42 $generated@@160) $generated@@43)))
 :pattern ( ($generated@@114 $generated@@160 $generated@@43))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> ($generated@@114 $generated@@161 $generated@@89) (and (= ($generated@@54 $generated@@42 ($generated@@47 $generated@@42 $generated@@161)) $generated@@161) ($generated@@41 $generated@@42 ($generated@@47 $generated@@42 $generated@@161) $generated@@89)))
 :pattern ( ($generated@@114 $generated@@161 $generated@@89))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> ($generated@@114 $generated@@162 $generated@@84) (and (= ($generated@@54 $generated@@42 ($generated@@47 $generated@@42 $generated@@162)) $generated@@162) ($generated@@41 $generated@@42 ($generated@@47 $generated@@42 $generated@@162) $generated@@84)))
 :pattern ( ($generated@@114 $generated@@162 $generated@@84))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> ($generated@@114 $generated@@163 $generated@@55) (and (= ($generated@@54 $generated@@42 ($generated@@47 $generated@@42 $generated@@163)) $generated@@163) ($generated@@41 $generated@@42 ($generated@@47 $generated@@42 $generated@@163) $generated@@55)))
 :pattern ( ($generated@@114 $generated@@163 $generated@@55))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> ($generated@@114 $generated@@164 $generated@@81) (and (= ($generated@@54 $generated@@42 ($generated@@47 $generated@@42 $generated@@164)) $generated@@164) ($generated@@41 $generated@@42 ($generated@@47 $generated@@42 $generated@@164) $generated@@81)))
 :pattern ( ($generated@@114 $generated@@164 $generated@@81))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> ($generated@@114 $generated@@165 $generated@@80) (and (= ($generated@@54 $generated@@42 ($generated@@47 $generated@@42 $generated@@165)) $generated@@165) ($generated@@41 $generated@@42 ($generated@@47 $generated@@42 $generated@@165) $generated@@80)))
 :pattern ( ($generated@@114 $generated@@165 $generated@@80))
)))
(assert (forall (($generated@@166 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@166 $generated@@43)  (and ($generated@@41 $generated@@42 $generated@@166 $generated@@84) (or (not (= $generated@@166 $generated@@40)) (not true))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@166 $generated@@43))
 :pattern ( ($generated@@41 $generated@@42 $generated@@166 $generated@@84))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@167 $generated@@55)  (and ($generated@@41 $generated@@42 $generated@@167 $generated@@81) (or (not (= $generated@@167 $generated@@40)) (not true))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@167 $generated@@55))
 :pattern ( ($generated@@41 $generated@@42 $generated@@167 $generated@@81))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@168 $generated@@89)  (and ($generated@@41 $generated@@42 $generated@@168 $generated@@80) (or (not (= $generated@@168 $generated@@40)) (not true))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@168 $generated@@89))
 :pattern ( ($generated@@41 $generated@@42 $generated@@168 $generated@@80))
)))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (or ($generated@@103 $generated@@169 $generated@@170) (and (< 3 $generated@@36) (and ($generated@@38 $generated@@169) (and (or (not (= $generated@@170 $generated@@40)) (not true)) (and ($generated@@41 $generated@@42 $generated@@170 $generated@@55) ($generated@@44 $generated@@42 $generated@@170 $generated@@55 $generated@@169)))))) (and (=> ($generated@@46 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@169 ($generated@@45 $generated@@170)) $generated@@53)) ($generated@@54 $generated@@42 $generated@@170)) ($generated@@39 $generated@@169 ($generated@@45 $generated@@170))) (= ($generated@@104 $generated@@169 $generated@@170)  (and ($generated@@46 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@169 ($generated@@45 $generated@@170)) $generated@@53)) ($generated@@54 $generated@@42 $generated@@170)) ($generated@@37 $generated@@169 ($generated@@45 $generated@@170))))))
 :pattern ( ($generated@@104 $generated@@169 $generated@@170) ($generated@@38 $generated@@169))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@44 $generated@@42 $generated@@171 $generated@@80 $generated@@172) ($generated@@44 $generated@@42 $generated@@171 $generated@@81 $generated@@172))
 :pattern ( ($generated@@44 $generated@@42 $generated@@171 $generated@@80 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (and (= ($generated@@173 ($generated@@92 $generated@@174 $generated@@175)) $generated@@174) (= ($generated@@35 ($generated@@92 $generated@@174 $generated@@175)) $generated@@175))
 :pattern ( ($generated@@92 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> ($generated@@114 $generated@@176 $generated) (and (= ($generated@@54 $generated@@18 ($generated@@47 $generated@@18 $generated@@176)) $generated@@176) ($generated@@41 $generated@@18 ($generated@@47 $generated@@18 $generated@@176) $generated)))
 :pattern ( ($generated@@114 $generated@@176 $generated))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@T) ) (! (= ($generated@@114 ($generated@@54 $generated@@179 $generated@@177) $generated@@178) ($generated@@41 $generated@@179 $generated@@177 $generated@@178))
 :pattern ( ($generated@@114 ($generated@@54 $generated@@179 $generated@@177) $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@44 $generated@@48 $generated@@180 ($generated@@113 $generated@@181) $generated@@182) (forall (($generated@@183 T@U) ) (!  (=> ($generated@@46 $generated@@180 $generated@@183) ($generated@@79 $generated@@183 $generated@@181 $generated@@182))
 :pattern ( ($generated@@46 $generated@@180 $generated@@183))
)))
 :pattern ( ($generated@@44 $generated@@48 $generated@@180 ($generated@@113 $generated@@181) $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@184 ($generated@@113 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@113 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@34 ($generated@@113 $generated@@186)) $generated@@1)
 :pattern ( ($generated@@113 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@T) ) (! (= ($generated@@47 $generated@@188 ($generated@@54 $generated@@188 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@54 $generated@@188 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and ($generated@@38 $generated@@189) (and (or (not (= $generated@@190 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@190 $generated@@80))) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@189 $generated@@190) $generated@@2)))) ($generated@@44 $generated@@42 ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@189 $generated@@190) $generated@@94)) $generated@@55 $generated@@189))
 :pattern ( ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@189 $generated@@190) $generated@@94)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@114 $generated@@191 ($generated@@113 $generated@@192)) (and (= ($generated@@54 $generated@@48 ($generated@@47 $generated@@48 $generated@@191)) $generated@@191) ($generated@@41 $generated@@48 ($generated@@47 $generated@@48 $generated@@191) ($generated@@113 $generated@@192))))
 :pattern ( ($generated@@114 $generated@@191 ($generated@@113 $generated@@192)))
)))
(assert (forall (($generated@@193 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@193 $generated@@80) ($generated@@41 $generated@@42 $generated@@193 $generated@@81))
 :pattern ( ($generated@@41 $generated@@42 $generated@@193 $generated@@80))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> ($generated@@114 $generated@@194 $generated@@80) ($generated@@114 $generated@@194 $generated@@81))
 :pattern ( ($generated@@114 $generated@@194 $generated@@80))
)))
(assert (= ($generated@@34 $generated@@43) $generated@@4))
(assert (= ($generated@@195 $generated@@43) $generated@@12))
(assert (= ($generated@@34 $generated@@89) $generated@@5))
(assert (= ($generated@@195 $generated@@89) $generated@@13))
(assert (= ($generated@@34 $generated@@84) $generated@@7))
(assert (= ($generated@@195 $generated@@84) $generated@@12))
(assert (= ($generated@@34 $generated@@55) $generated@@8))
(assert (= ($generated@@195 $generated@@55) $generated@@14))
(assert (= ($generated@@34 $generated@@81) $generated@@9))
(assert (= ($generated@@195 $generated@@81) $generated@@14))
(assert (= ($generated@@34 $generated@@80) $generated@@10))
(assert (= ($generated@@195 $generated@@80) $generated@@13))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@38 $generated@@196) (and (or (not (= $generated@@197 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@197 $generated@@80))) ($generated@@41 $generated@@42 ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@196 $generated@@197) $generated@@94)) $generated@@55))
 :pattern ( ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@196 $generated@@197) $generated@@94)))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@200 $generated@@84)  (or (= $generated@@200 $generated@@40) ($generated@@198 ($generated@@199 $generated@@200))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@200 $generated@@84))
)))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@202 $generated@@81)  (or (= $generated@@202 $generated@@40) ($generated@@201 ($generated@@199 $generated@@202))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@202 $generated@@81))
)))
(assert (forall (($generated@@204 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@204 $generated@@80)  (or (= $generated@@204 $generated@@40) ($generated@@203 ($generated@@199 $generated@@204))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@204 $generated@@80))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and ($generated@@38 $generated@@205) (and (or (not (= $generated@@206 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@206 $generated@@84))) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@205 $generated@@206) $generated@@2)))) ($generated@@44 $generated@@48 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@205 $generated@@206) $generated@@53)) ($generated@@113 $generated@@55) $generated@@205))
 :pattern ( ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@205 $generated@@206) $generated@@53)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and ($generated@@38 $generated@@207) (and (or (not (= $generated@@208 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@208 $generated@@84))) ($generated@@41 $generated@@48 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@207 $generated@@208) $generated@@53)) ($generated@@113 $generated@@55)))
 :pattern ( ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@207 $generated@@208) $generated@@53)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! ($generated@@44 $generated@@18 $generated@@210 $generated $generated@@209)
 :pattern ( ($generated@@44 $generated@@18 $generated@@210 $generated $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ) (! ($generated@@41 $generated@@18 $generated@@211 $generated)
 :pattern ( ($generated@@41 $generated@@18 $generated@@211 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () Bool)
(declare-fun $generated@@215 () Bool)
(declare-fun $generated@@216 () Bool)
(declare-fun $generated@@217 () Bool)
(declare-fun $generated@@218 () Bool)
(declare-fun $generated@@219 () Bool)
(declare-fun $generated@@220 () Bool)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () Bool)
(declare-fun $generated@@223 () Bool)
(declare-fun $generated@@224 () Bool)
(declare-fun $generated@@225 () Bool)
(declare-fun $generated@@226 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@227  (=> (= ($generated@@101 $generated@@212 $generated@@213)  (and (and (and (and ($generated@@104 $generated@@212 $generated@@213) (= ($generated@@45 ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94))) ($generated@@45 $generated@@213))) ($generated@@46 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 ($generated@@45 $generated@@213)) $generated@@53)) ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94))) ($generated@@106 $generated@@212 $generated@@213)) ($generated@@108 $generated@@212 $generated@@213))) (=> (and (and ($generated@@103 $generated@@212 $generated@@213) (=> ($generated@@104 $generated@@212 $generated@@213) (=> (= ($generated@@45 ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94))) ($generated@@45 $generated@@213)) (=> ($generated@@46 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 ($generated@@45 $generated@@213)) $generated@@53)) ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94)) (and ($generated@@105 $generated@@212 $generated@@213) (=> ($generated@@106 $generated@@212 $generated@@213) ($generated@@107 $generated@@212 $generated@@213))))))) ($generated@@41 $generated@@18 ($generated@@21 ($generated@@101 $generated@@212 $generated@@213)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 8)) $generated@@214) (=> $generated@@214 (and (=> (= (ControlFlow 0 3) (- 0 7)) $generated@@215) (=> $generated@@215 (and (=> (= (ControlFlow 0 3) (- 0 6)) $generated@@216) (=> $generated@@216 (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@217) (=> $generated@@217 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@218) (=> $generated@@218 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@219)))))))))))))))
(let (($generated@@228  (=> (not (and (and (and ($generated@@104 $generated@@212 $generated@@213) (= ($generated@@45 ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94))) ($generated@@45 $generated@@213))) ($generated@@46 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 ($generated@@45 $generated@@213)) $generated@@53)) ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94))) ($generated@@106 $generated@@212 $generated@@213))) (=> (and (= $generated@@219 true) (= (ControlFlow 0 10) 3)) $generated@@227))))
(let (($generated@@229  (=> (and (and (and (and (and ($generated@@104 $generated@@212 $generated@@213) (= ($generated@@45 ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94))) ($generated@@45 $generated@@213))) ($generated@@46 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 ($generated@@45 $generated@@213)) $generated@@53)) ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94))) ($generated@@106 $generated@@212 $generated@@213)) ($generated@@79 ($generated@@54 $generated@@42 $generated@@213) $generated@@80 $generated@@212)) (and (and (= $generated@@220 (forall (($generated@@230 T@U) ($generated@@231 T@U) )  (=> (and (and (or (not (= $generated@@230 $generated@@40)) (not true)) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@230) $generated@@2)))) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@230) $generated@@2)))) ($generated@@22 ($generated@@118 $generated@@42 $generated@@50 $generated@@18 $generated@@221 $generated@@230 $generated@@231))))) ($generated@@107 $generated@@212 $generated@@213)) (and (= $generated@@219 $generated@@220) (= (ControlFlow 0 9) 3)))) $generated@@227)))
(let (($generated@@232  (=> (and (not (and (and ($generated@@104 $generated@@212 $generated@@213) (= ($generated@@45 ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94))) ($generated@@45 $generated@@213))) ($generated@@46 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 ($generated@@45 $generated@@213)) $generated@@53)) ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94)))) (= $generated@@218 true)) (and (=> (= (ControlFlow 0 12) 9) $generated@@229) (=> (= (ControlFlow 0 12) 10) $generated@@228)))))
(let (($generated@@233  (=> (and (and (and ($generated@@104 $generated@@212 $generated@@213) (= ($generated@@45 ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94))) ($generated@@45 $generated@@213))) ($generated@@46 ($generated@@47 $generated@@48 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 ($generated@@45 $generated@@213)) $generated@@53)) ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94))) (and (and ($generated@@79 ($generated@@54 $generated@@42 $generated@@213) $generated@@80 $generated@@212) (= $generated@@222 (forall (($generated@@234 T@U) ($generated@@235 T@U) )  (=> (and (and (or (not (= $generated@@234 $generated@@40)) (not true)) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@234) $generated@@2)))) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@234) $generated@@2)))) ($generated@@22 ($generated@@118 $generated@@42 $generated@@50 $generated@@18 $generated@@221 $generated@@234 $generated@@235)))))) (and ($generated@@105 $generated@@212 $generated@@213) (= $generated@@218 $generated@@222)))) (and (=> (= (ControlFlow 0 11) 9) $generated@@229) (=> (= (ControlFlow 0 11) 10) $generated@@228)))))
(let (($generated@@236  (=> (not (and ($generated@@104 $generated@@212 $generated@@213) (= ($generated@@45 ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94))) ($generated@@45 $generated@@213)))) (=> (and (= $generated@@216 true) (= $generated@@217 true)) (and (=> (= (ControlFlow 0 15) 11) $generated@@233) (=> (= (ControlFlow 0 15) 12) $generated@@232))))))
(let (($generated@@237  (=> (and (and ($generated@@104 $generated@@212 $generated@@213) (= ($generated@@45 ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94))) ($generated@@45 $generated@@213))) (= $generated@@223 ($generated@@22 ($generated@@118 $generated@@42 $generated@@50 $generated@@18 $generated@@221 $generated@@213 $generated@@94)))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (not (= ($generated@@45 $generated@@213) $generated@@40)) (not true))) (=> (or (not (= ($generated@@45 $generated@@213) $generated@@40)) (not true)) (=> (= $generated@@224 ($generated@@22 ($generated@@118 $generated@@42 $generated@@50 $generated@@18 $generated@@221 ($generated@@45 $generated@@213) $generated@@53))) (=> (and (= $generated@@216 $generated@@223) (= $generated@@217 $generated@@224)) (and (=> (= (ControlFlow 0 13) 11) $generated@@233) (=> (= (ControlFlow 0 13) 12) $generated@@232)))))))))
(let (($generated@@238  (=> (and (not ($generated@@104 $generated@@212 $generated@@213)) (= $generated@@215 true)) (and (=> (= (ControlFlow 0 18) 13) $generated@@237) (=> (= (ControlFlow 0 18) 15) $generated@@236)))))
(let (($generated@@239  (=> (and ($generated@@104 $generated@@212 $generated@@213) (= $generated@@225 ($generated@@22 ($generated@@118 $generated@@42 $generated@@50 $generated@@18 $generated@@221 $generated@@213 $generated@@94)))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (or (not (= ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94)) $generated@@40)) (not true))) (=> (or (not (= ($generated@@47 $generated@@42 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@213) $generated@@94)) $generated@@40)) (not true)) (=> (= $generated@@215 $generated@@225) (and (=> (= (ControlFlow 0 16) 13) $generated@@237) (=> (= (ControlFlow 0 16) 15) $generated@@236))))))))
(let (($generated@@240  (=> ($generated@@79 ($generated@@54 $generated@@42 $generated@@213) $generated@@81 $generated@@212) (=> (and (= $generated@@214 (forall (($generated@@241 T@U) ($generated@@242 T@U) )  (=> (and (and (or (not (= $generated@@241 $generated@@40)) (not true)) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@241) $generated@@2)))) ($generated@@22 ($generated@@47 $generated@@18 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@42 ($generated@@52 $generated@@50 $generated@@51) $generated@@212 $generated@@241) $generated@@2)))) ($generated@@22 ($generated@@118 $generated@@42 $generated@@50 $generated@@18 $generated@@221 $generated@@241 $generated@@242))))) ($generated@@103 $generated@@212 $generated@@213)) (and (=> (= (ControlFlow 0 19) 16) $generated@@239) (=> (= (ControlFlow 0 19) 18) $generated@@238))))))
(let (($generated@@243 true))
(let (($generated@@244  (=> (= $generated@@221 ($generated@@119 $generated@@40 $generated@@212 $generated@@2 $generated@@212 $generated@@2)) (and (=> (= (ControlFlow 0 20) 1) $generated@@243) (=> (= (ControlFlow 0 20) 19) $generated@@240)))))
(let (($generated@@245  (=> (and ($generated@@38 $generated@@212) ($generated@@226 $generated@@212)) (=> (and (and (or (not (= $generated@@213 $generated@@40)) (not true)) (and ($generated@@41 $generated@@42 $generated@@213 $generated@@89) ($generated@@44 $generated@@42 $generated@@213 $generated@@89 $generated@@212))) (and (= 4 $generated@@36) (= (ControlFlow 0 21) 20))) $generated@@244))))
$generated@@245))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
