(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@103 (T@T T@U) T@U)
(declare-fun $generated@@106 () Int)
(declare-fun $generated@@107 (T@U T@U T@U) Bool)
(declare-fun $generated@@108 (T@U T@U T@U) Bool)
(declare-fun $generated@@109 (T@U T@U T@U) Bool)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert ($generated@@22 $generated@@23))
(assert (forall (($generated@@26 T@U) ) (!  (not ($generated@@24 $generated@@25 $generated@@26))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26))
)))
(assert (= ($generated@@6 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@31 $generated@@23)  (or (= $generated@@31 $generated@@29) (= ($generated@@30 $generated@@31) $generated@@23)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@31 $generated@@23))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@32 $generated@@28 $generated@@35 $generated@@33 $generated@@36) ($generated@@32 $generated@@28 $generated@@35 $generated@@34 $generated@@36))
 :pattern ( ($generated@@32 $generated@@28 $generated@@35 $generated@@33 $generated@@36))
 :pattern ( ($generated@@32 $generated@@28 $generated@@35 $generated@@34 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@32 $generated@@28 $generated@@38 $generated@@37 $generated@@39) ($generated@@32 $generated@@28 $generated@@38 $generated@@23 $generated@@39))
 :pattern ( ($generated@@32 $generated@@28 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@32 $generated@@28 $generated@@38 $generated@@23 $generated@@39))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@45 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@45 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@45 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@6 $generated@@46) 4)) (= ($generated@@6 $generated@@47) 5)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@6 ($generated@@48 $generated@@63 $generated@@64)) 6))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@48 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@48 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@48 $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (and (and (and ($generated@@43 $generated@@70) ($generated@@43 $generated@@71)) (and (or (not (= $generated@@72 $generated@@29)) (not true)) (and ($generated@@27 $generated@@28 $generated@@72 $generated@@37) ($generated@@32 $generated@@28 $generated@@72 $generated@@37 $generated@@70)))) (and ($generated@@40 $generated@@70) ($generated@@41 $generated@@70 $generated@@71))) (=> (forall (($generated@@73 T@U) ($generated@@74 T@U) )  (=> (and (or (not (= $generated@@73 $generated@@29)) (not true)) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@70 $generated@@73) $generated)))) (= ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@70 $generated@@73) $generated@@74) ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@71 $generated@@73) $generated@@74)))) (= ($generated@@42 $generated@@69 $generated@@70 $generated@@72) ($generated@@42 $generated@@69 $generated@@71 $generated@@72))))
 :pattern ( ($generated@@40 $generated@@70) ($generated@@41 $generated@@70 $generated@@71) ($generated@@42 $generated@@69 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and (and (and ($generated@@43 $generated@@77) ($generated@@43 $generated@@78)) (and (or (not (= $generated@@79 $generated@@29)) (not true)) (and ($generated@@27 $generated@@28 $generated@@79 $generated@@37) ($generated@@32 $generated@@28 $generated@@79 $generated@@37 $generated@@77)))) (and ($generated@@40 $generated@@77) ($generated@@41 $generated@@77 $generated@@78))) (=> (forall (($generated@@80 T@U) ($generated@@81 T@U) )  (=> (and (or (not (= $generated@@80 $generated@@29)) (not true)) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@77 $generated@@80) $generated)))) (= ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@77 $generated@@80) $generated@@81) ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@78 $generated@@80) $generated@@81)))) (= ($generated@@75 $generated@@76 $generated@@77 $generated@@79) ($generated@@75 $generated@@76 $generated@@78 $generated@@79))))
 :pattern ( ($generated@@40 $generated@@77) ($generated@@41 $generated@@77 $generated@@78) ($generated@@75 $generated@@76 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and (and (and ($generated@@43 $generated@@84) ($generated@@43 $generated@@85)) (and (or (not (= $generated@@86 $generated@@29)) (not true)) (and ($generated@@27 $generated@@28 $generated@@86 $generated@@37) ($generated@@32 $generated@@28 $generated@@86 $generated@@37 $generated@@84)))) (and ($generated@@40 $generated@@84) ($generated@@41 $generated@@84 $generated@@85))) (=> (forall (($generated@@87 T@U) ($generated@@88 T@U) )  (=> (and (or (not (= $generated@@87 $generated@@29)) (not true)) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@84 $generated@@87) $generated)))) (= ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@84 $generated@@87) $generated@@88) ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@85 $generated@@87) $generated@@88)))) (= ($generated@@82 $generated@@83 $generated@@84 $generated@@86) ($generated@@82 $generated@@83 $generated@@85 $generated@@86))))
 :pattern ( ($generated@@40 $generated@@84) ($generated@@41 $generated@@84 $generated@@85) ($generated@@82 $generated@@83 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@32 $generated@@28 $generated@@89 $generated@@34 $generated@@90)  (or (= $generated@@89 $generated@@29) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@90 $generated@@89) $generated)))))
 :pattern ( ($generated@@32 $generated@@28 $generated@@89 $generated@@34 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@32 $generated@@28 $generated@@91 $generated@@23 $generated@@92)  (or (= $generated@@91 $generated@@29) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@92 $generated@@91) $generated)))))
 :pattern ( ($generated@@32 $generated@@28 $generated@@91 $generated@@23 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@41 $generated@@93 $generated@@94) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@93 $generated@@95) $generated))) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@94 $generated@@95) $generated))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@94 $generated@@95) $generated))
)))
 :pattern ( ($generated@@41 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 $generated@@97) $generated@@97)
 :pattern ( ($generated@@96 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@99 $generated@@100 $generated@@101) (forall (($generated@@102 T@U) ) (!  (=> ($generated@@24 $generated@@100 $generated@@102) ($generated@@24 $generated@@101 $generated@@102))
 :pattern ( ($generated@@24 $generated@@100 $generated@@102))
 :pattern ( ($generated@@24 $generated@@101 $generated@@102))
)))
 :pattern ( ($generated@@99 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@103 $generated@@105 ($generated@@44 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@44 $generated@@105 $generated@@104))
)))
(assert  (=> (<= 1 $generated@@106) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or ($generated@@107 $generated@@110 $generated@@111 $generated@@112) (and (< 1 $generated@@106) (and (and (and ($generated@@43 $generated@@110) ($generated@@43 $generated@@111)) ($generated@@41 $generated@@110 $generated@@111)) (and (or (not (= $generated@@112 $generated@@29)) (not true)) (and ($generated@@27 $generated@@28 $generated@@112 $generated@@37) ($generated@@32 $generated@@28 $generated@@112 $generated@@37 $generated@@110)))))) (and (and ($generated@@108 $generated@@110 $generated@@111 $generated@@112) (=> ($generated@@42 $generated@@110 $generated@@111 $generated@@112) ($generated@@109 $generated@@110 $generated@@111 $generated@@112))) (= ($generated@@82 $generated@@110 $generated@@111 $generated@@112)  (and ($generated@@42 $generated@@110 $generated@@111 $generated@@112) ($generated@@75 $generated@@110 $generated@@111 $generated@@112)))))
 :pattern ( ($generated@@82 $generated@@110 $generated@@111 $generated@@112) ($generated@@43 $generated@@111))
))))
(assert  (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@113 $generated@@116 $generated@@117 $generated@@118 ($generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@121 $generated@@122) $generated@@119)
 :weight 0
)) (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@113 $generated@@123 $generated@@124 $generated@@125 ($generated@@115 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@113 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@113 $generated@@132 $generated@@133 $generated@@134 ($generated@@115 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@113 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@11 ($generated@@113 $generated@@28 $generated@@46 $generated@@7 ($generated@@114 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146 $generated@@147))  (=> (and (or (not (= $generated@@146 $generated@@141)) (not true)) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@142 $generated@@146) $generated@@143)))) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@144 $generated@@146) $generated@@145)))))
 :pattern ( ($generated@@113 $generated@@28 $generated@@46 $generated@@7 ($generated@@114 $generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146 $generated@@147))
)))
(assert  (=> (<= 1 $generated@@106) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (or ($generated@@107 $generated@@148 $generated@@149 $generated@@150) (and (< 1 $generated@@106) (and (and (and ($generated@@43 $generated@@148) ($generated@@43 $generated@@149)) ($generated@@41 $generated@@148 $generated@@149)) (and (or (not (= $generated@@150 $generated@@29)) (not true)) (and ($generated@@27 $generated@@28 $generated@@150 $generated@@37) ($generated@@32 $generated@@28 $generated@@150 $generated@@37 $generated@@148)))))) (=> ($generated@@82 $generated@@148 $generated@@149 $generated@@150) (and ($generated@@42 $generated@@148 $generated@@149 $generated@@150) ($generated@@75 $generated@@148 $generated@@149 $generated@@150))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@T) ) (!  (=> ($generated@@41 $generated@@151 $generated@@152) (=> ($generated@@32 $generated@@155 $generated@@153 $generated@@154 $generated@@151) ($generated@@32 $generated@@155 $generated@@153 $generated@@154 $generated@@152)))
 :pattern ( ($generated@@41 $generated@@151 $generated@@152) ($generated@@32 $generated@@155 $generated@@153 $generated@@154 $generated@@151))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@156 $generated@@33)  (and ($generated@@27 $generated@@28 $generated@@156 $generated@@34) (or (not (= $generated@@156 $generated@@29)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@156 $generated@@33))
 :pattern ( ($generated@@27 $generated@@28 $generated@@156 $generated@@34))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@157 $generated@@37)  (and ($generated@@27 $generated@@28 $generated@@157 $generated@@23) (or (not (= $generated@@157 $generated@@29)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@157 $generated@@37))
 :pattern ( ($generated@@27 $generated@@28 $generated@@157 $generated@@23))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@32 $generated@@28 $generated@@158 $generated@@23 $generated@@159) ($generated@@32 $generated@@28 $generated@@158 $generated@@34 $generated@@159))
 :pattern ( ($generated@@32 $generated@@28 $generated@@158 $generated@@23 $generated@@159))
)))
(assert  (=> (<= 0 $generated@@106) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (or ($generated@@108 $generated@@160 $generated@@161 $generated@@162) (and (< 0 $generated@@106) (and (and (and ($generated@@43 $generated@@160) ($generated@@43 $generated@@161)) ($generated@@41 $generated@@160 $generated@@161)) (and (or (not (= $generated@@162 $generated@@29)) (not true)) (and ($generated@@27 $generated@@28 $generated@@162 $generated@@37) ($generated@@32 $generated@@28 $generated@@162 $generated@@37 $generated@@160)))))) (= ($generated@@42 $generated@@160 $generated@@161 $generated@@162) ($generated@@11 ($generated@@96 $generated@@7 ($generated@@10 true)))))
 :pattern ( ($generated@@42 $generated@@160 $generated@@161 $generated@@162) ($generated@@43 $generated@@161))
))))
(assert  (=> (<= 0 $generated@@106) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (or ($generated@@109 $generated@@163 $generated@@164 $generated@@165) (and (< 0 $generated@@106) (and (and (and ($generated@@43 $generated@@163) ($generated@@43 $generated@@164)) ($generated@@41 $generated@@163 $generated@@164)) (and (or (not (= $generated@@165 $generated@@29)) (not true)) (and ($generated@@27 $generated@@28 $generated@@165 $generated@@37) ($generated@@32 $generated@@28 $generated@@165 $generated@@37 $generated@@163)))))) (= ($generated@@75 $generated@@163 $generated@@164 $generated@@165) ($generated@@11 ($generated@@96 $generated@@7 ($generated@@10 true)))))
 :pattern ( ($generated@@75 $generated@@163 $generated@@164 $generated@@165) ($generated@@43 $generated@@164))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (or (not (= $generated@@166 $generated@@168)) (not true)) (=> (and ($generated@@41 $generated@@166 $generated@@167) ($generated@@41 $generated@@167 $generated@@168)) ($generated@@41 $generated@@166 $generated@@168)))
 :pattern ( ($generated@@41 $generated@@166 $generated@@167) ($generated@@41 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@T) ) (! (= ($generated@@44 $generated@@170 ($generated@@103 $generated@@170 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@103 $generated@@170 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@171 $generated@@23) ($generated@@27 $generated@@28 $generated@@171 $generated@@34))
 :pattern ( ($generated@@27 $generated@@28 $generated@@171 $generated@@23))
)))
(assert (= ($generated@@172 $generated@@37) $generated@@0))
(assert (= ($generated@@173 $generated@@37) $generated@@4))
(assert (= ($generated@@172 $generated@@33) $generated@@1))
(assert (= ($generated@@173 $generated@@33) $generated@@5))
(assert (= ($generated@@172 $generated@@34) $generated@@2))
(assert (= ($generated@@173 $generated@@34) $generated@@5))
(assert (= ($generated@@172 $generated@@23) $generated@@3))
(assert (= ($generated@@173 $generated@@23) $generated@@4))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@174 $generated@@34)  (or (= $generated@@174 $generated@@29) ($generated@@22 ($generated@@30 $generated@@174))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@174 $generated@@34))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@103 $generated@@176 ($generated@@96 $generated@@176 $generated@@175)) ($generated@@96 $generated@@47 ($generated@@103 $generated@@176 $generated@@175)))
 :pattern ( ($generated@@103 $generated@@176 ($generated@@96 $generated@@176 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(assert (= ($generated@@6 $generated@@177) 7))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@99 ($generated@@96 $generated@@177 $generated@@25) ($generated@@96 $generated@@177 $generated@@25))) (=> ($generated@@99 ($generated@@96 $generated@@177 $generated@@25) ($generated@@96 $generated@@177 $generated@@25)) (=> (= $generated@@178 ($generated@@114 $generated@@29 $generated@@179 $generated $generated@@179 $generated)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (forall (($generated@@185 T@U) ($generated@@186 T@U) )  (=> (and (and (or (not (= $generated@@185 $generated@@29)) (not true)) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@179 $generated@@185) $generated)))) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@179 $generated@@185) $generated)))) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@179 $generated@@185) $generated)))))) (=> (forall (($generated@@187 T@U) ($generated@@188 T@U) )  (=> (and (and (or (not (= $generated@@187 $generated@@29)) (not true)) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@179 $generated@@187) $generated)))) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@179 $generated@@187) $generated)))) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@28 ($generated@@48 $generated@@46 $generated@@47) $generated@@179 $generated@@187) $generated))))) (=> (=> ($generated@@82 $generated@@180 $generated@@179 $generated@@181) (and ($generated@@42 $generated@@180 $generated@@179 $generated@@181) ($generated@@75 $generated@@180 $generated@@179 $generated@@181))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@82 $generated@@180 $generated@@179 $generated@@181) (=> ($generated@@108 $generated@@180 $generated@@179 $generated@@181) (or ($generated@@42 $generated@@180 $generated@@179 $generated@@181) ($generated@@11 ($generated@@96 $generated@@7 ($generated@@10 true))))))) (=> (=> ($generated@@82 $generated@@180 $generated@@179 $generated@@181) (=> ($generated@@108 $generated@@180 $generated@@179 $generated@@181) (or ($generated@@42 $generated@@180 $generated@@179 $generated@@181) ($generated@@11 ($generated@@96 $generated@@7 ($generated@@10 true)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@82 $generated@@180 $generated@@179 $generated@@181) (=> ($generated@@109 $generated@@180 $generated@@179 $generated@@181) (or ($generated@@75 $generated@@180 $generated@@179 $generated@@181) ($generated@@11 ($generated@@96 $generated@@7 ($generated@@10 true)))))))))))))))))
(let (($generated@@189  (=> (and ($generated@@43 $generated@@180) ($generated@@40 $generated@@180)) (=> (and (and (and (or (not (= $generated@@181 $generated@@29)) (not true)) (and ($generated@@27 $generated@@28 $generated@@181 $generated@@37) ($generated@@32 $generated@@28 $generated@@181 $generated@@37 $generated@@182))) (= 1 $generated@@106)) (and (and (= $generated@@183 $generated@@180) (and ($generated@@41 $generated@@183 $generated@@182) ($generated@@43 $generated@@182))) (= (ControlFlow 0 6) 2))) $generated@@184))))
$generated@@189)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
