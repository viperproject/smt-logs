(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (Int) T@U)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@39 () Int)
(declare-fun $generated@@40 (T@U T@U T@U) Bool)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@T T@U T@U) Bool)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U T@U T@U) Bool)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T T@T) T@T)
(declare-fun $generated@@75 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@99 (Int) Int)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@T T@U) T@U)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@129 (T@U T@U) Bool)
(declare-fun $generated@@130 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@153 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@208 (T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@211 (T@U) Bool)
(declare-fun $generated@@216 (T@U T@U T@U) Bool)
(declare-fun $generated@@217 (T@U T@U T@U) Bool)
(declare-fun $generated@@218 () T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and ($generated@@29 $generated@@30 $generated@@31) ($generated@@29 $generated@@31 $generated@@32)) ($generated@@29 $generated@@30 $generated@@32))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31) ($generated@@29 $generated@@31 $generated@@32))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31) ($generated@@29 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 Int) ($generated@@38 Int) ) (!  (=> (and (and (<= 0 $generated@@37) (<= 0 $generated@@38)) (<= (+ $generated@@37 $generated@@38) ($generated@@35 $generated@@36))) (= ($generated@@33 ($generated@@33 $generated@@36 ($generated@@34 $generated@@37)) ($generated@@34 $generated@@38)) ($generated@@33 $generated@@36 ($generated@@34 (+ $generated@@37 $generated@@38)))))
 :pattern ( ($generated@@33 ($generated@@33 $generated@@36 ($generated@@34 $generated@@37)) ($generated@@34 $generated@@38)))
)))
(assert (= ($generated@@11 $generated@@44) 3))
(assert  (=> (<= 2 $generated@@39) (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@48) ($generated@@43 $generated@@44 $generated@@49 $generated@@45)) ($generated@@40 ($generated@@41 $generated@@47) $generated@@48 $generated@@49)) (forall (($generated@@50 T@U) ) (! ($generated@@46 ($generated@@41 $generated@@47) $generated@@48 $generated@@50 $generated@@49)
 :pattern ( ($generated@@46 ($generated@@41 $generated@@47) $generated@@48 $generated@@50 $generated@@49))
)))
 :pattern ( ($generated@@40 ($generated@@41 $generated@@47) $generated@@48 $generated@@49))
))))
(assert  (=> (<= 2 $generated@@39) (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@55) ($generated@@43 $generated@@44 $generated@@56 $generated@@52)) ($generated@@51 ($generated@@41 $generated@@54) $generated@@55 $generated@@56)) (forall (($generated@@57 T@U) ) (! ($generated@@53 ($generated@@41 $generated@@54) $generated@@55 $generated@@57 $generated@@56)
 :pattern ( ($generated@@53 ($generated@@41 $generated@@54) $generated@@55 $generated@@57 $generated@@56))
)))
 :pattern ( ($generated@@51 ($generated@@41 $generated@@54) $generated@@55 $generated@@56))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@58 $generated@@44 $generated@@60 $generated@@45 $generated@@61) ($generated@@58 $generated@@44 $generated@@60 $generated@@59 $generated@@61))
 :pattern ( ($generated@@58 $generated@@44 $generated@@60 $generated@@45 $generated@@61))
 :pattern ( ($generated@@58 $generated@@44 $generated@@60 $generated@@59 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@58 $generated@@44 $generated@@63 $generated@@52 $generated@@64) ($generated@@58 $generated@@44 $generated@@63 $generated@@62 $generated@@64))
 :pattern ( ($generated@@58 $generated@@44 $generated@@63 $generated@@52 $generated@@64))
 :pattern ( ($generated@@58 $generated@@44 $generated@@63 $generated@@62 $generated@@64))
)))
(assert (= ($generated@@27 $generated@@65) 0))
(assert (= ($generated@@66 $generated@@3 $generated@@9) $generated@@65))
(assert  (not ($generated@@67 $generated@@65)))
(assert (= ($generated@@27 $generated@@68) 0))
(assert (= ($generated@@66 $generated@@5 $generated@@10) $generated@@68))
(assert  (not ($generated@@67 $generated@@68)))
(assert  (and (and (and (and (and (and (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@71 $generated@@78 $generated@@79 ($generated@@75 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@80) $generated@@82) $generated@@80)
 :weight 0
)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (or (= $generated@@87 $generated@@88) (= ($generated@@71 $generated@@83 $generated@@84 ($generated@@75 $generated@@83 $generated@@84 $generated@@86 $generated@@87 $generated@@85) $generated@@88) ($generated@@71 $generated@@83 $generated@@84 $generated@@86 $generated@@88)))
 :weight 0
))) (= ($generated@@11 $generated@@72) 4)) (= ($generated@@11 $generated@@73) 5)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@11 ($generated@@74 $generated@@89 $generated@@90)) 6))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@76 ($generated@@74 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@74 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@77 ($generated@@74 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@74 $generated@@93 $generated@@94))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@58 $generated@@44 $generated@@95 $generated@@59 $generated@@96)  (or (= $generated@@95 $generated@@69) ($generated@@16 ($generated@@70 $generated@@12 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@96 $generated@@95) $generated)))))
 :pattern ( ($generated@@58 $generated@@44 $generated@@95 $generated@@59 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@58 $generated@@44 $generated@@97 $generated@@62 $generated@@98)  (or (= $generated@@97 $generated@@69) ($generated@@16 ($generated@@70 $generated@@12 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@98 $generated@@97) $generated)))))
 :pattern ( ($generated@@58 $generated@@44 $generated@@97 $generated@@62 $generated@@98))
)))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@99 $generated@@100) $generated@@100)
 :pattern ( ($generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 $generated@@102) $generated@@102)
 :pattern ( ($generated@@101 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@104 $generated@@106 ($generated@@70 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@70 $generated@@106 $generated@@105))
)))
(assert  (=> (<= 2 $generated@@39) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@108) ($generated@@43 $generated@@44 $generated@@109 $generated@@45)) (forall (($generated@@110 T@U) ) (! ($generated@@46 ($generated@@41 $generated@@107) $generated@@108 $generated@@110 $generated@@109)
 :pattern ( ($generated@@46 ($generated@@41 $generated@@107) $generated@@108 $generated@@110 $generated@@109))
))) ($generated@@40 ($generated@@41 $generated@@107) $generated@@108 $generated@@109))
 :pattern ( ($generated@@40 ($generated@@41 $generated@@107) $generated@@108 $generated@@109))
))))
(assert  (=> (<= 2 $generated@@39) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@112) ($generated@@43 $generated@@44 $generated@@113 $generated@@52)) (forall (($generated@@114 T@U) ) (! ($generated@@53 ($generated@@41 $generated@@111) $generated@@112 $generated@@114 $generated@@113)
 :pattern ( ($generated@@53 ($generated@@41 $generated@@111) $generated@@112 $generated@@114 $generated@@113))
))) ($generated@@51 ($generated@@41 $generated@@111) $generated@@112 $generated@@113))
 :pattern ( ($generated@@51 ($generated@@41 $generated@@111) $generated@@112 $generated@@113))
))))
(assert ($generated@@67 $generated))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@40 ($generated@@41 $generated@@115) $generated@@116 $generated@@117) ($generated@@40 $generated@@115 $generated@@116 $generated@@117))
 :pattern ( ($generated@@40 ($generated@@41 $generated@@115) $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@51 ($generated@@41 $generated@@118) $generated@@119 $generated@@120) ($generated@@51 $generated@@118 $generated@@119 $generated@@120))
 :pattern ( ($generated@@51 ($generated@@41 $generated@@118) $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (and ($generated@@121 $generated@@123) (<= ($generated@@35 $generated@@123) ($generated@@35 $generated@@122))) (and (= ($generated@@121 ($generated@@33 $generated@@122 $generated@@123)) ($generated@@121 $generated@@122)) (= ($generated@@35 ($generated@@33 $generated@@122 $generated@@123)) (- ($generated@@35 $generated@@122) ($generated@@35 $generated@@123)))))
 :pattern ( ($generated@@33 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 Int) ) (!  (=> (<= 0 $generated@@124) (and ($generated@@121 ($generated@@34 $generated@@124)) (= ($generated@@35 ($generated@@34 $generated@@124)) $generated@@124)))
 :pattern ( ($generated@@34 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@125 $generated@@45)  (and ($generated@@43 $generated@@44 $generated@@125 $generated@@59) (or (not (= $generated@@125 $generated@@69)) (not true))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@125 $generated@@45))
 :pattern ( ($generated@@43 $generated@@44 $generated@@125 $generated@@59))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@126 $generated@@52)  (and ($generated@@43 $generated@@44 $generated@@126 $generated@@62) (or (not (= $generated@@126 $generated@@69)) (not true))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@126 $generated@@52))
 :pattern ( ($generated@@43 $generated@@44 $generated@@126 $generated@@62))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (or ($generated@@29 $generated@@127 $generated@@128) (= $generated@@127 $generated@@128)) ($generated@@29 $generated@@128 $generated@@127))
 :pattern ( ($generated@@29 $generated@@127 $generated@@128) ($generated@@29 $generated@@128 $generated@@127))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or ($generated@@129 $generated@@132 $generated@@133) (and (< 1 $generated@@39) (and ($generated@@42 $generated@@132) ($generated@@43 $generated@@44 $generated@@133 $generated@@45)))) (and ($generated@@130 $generated@@132 ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@132 $generated@@133) $generated@@65))) (= ($generated@@40 ($generated@@41 $generated@@131) $generated@@132 $generated@@133) ($generated@@51 $generated@@131 $generated@@132 ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@132 $generated@@133) $generated@@65))))))
 :pattern ( ($generated@@40 ($generated@@41 $generated@@131) $generated@@132 $generated@@133) ($generated@@42 $generated@@132))
))))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (or ($generated@@130 $generated@@135 $generated@@136) (and (< 1 $generated@@39) (and ($generated@@42 $generated@@135) ($generated@@43 $generated@@44 $generated@@136 $generated@@52)))) (and ($generated@@129 $generated@@135 ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@135 $generated@@136) $generated@@68))) (= ($generated@@51 ($generated@@41 $generated@@134) $generated@@135 $generated@@136) ($generated@@40 $generated@@134 $generated@@135 ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@135 $generated@@136) $generated@@68))))))
 :pattern ( ($generated@@51 ($generated@@41 $generated@@134) $generated@@135 $generated@@136) ($generated@@42 $generated@@135))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (and (= ($generated@@137 ($generated@@66 $generated@@138 $generated@@139)) $generated@@138) (= ($generated@@28 ($generated@@66 $generated@@138 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@66 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@46 ($generated@@41 $generated@@140) $generated@@141 $generated@@142 $generated@@143) ($generated@@46 $generated@@140 $generated@@141 $generated@@142 $generated@@143))
 :pattern ( ($generated@@46 ($generated@@41 $generated@@140) $generated@@141 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@53 ($generated@@41 $generated@@144) $generated@@145 $generated@@146 $generated@@147) ($generated@@53 $generated@@144 $generated@@145 $generated@@146 $generated@@147))
 :pattern ( ($generated@@53 ($generated@@41 $generated@@144) $generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (! (<= 0 ($generated@@35 $generated@@148))
 :pattern ( ($generated@@35 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@70 $generated@@150 ($generated@@104 $generated@@150 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@104 $generated@@150 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (and (and (and (=> ($generated@@29 $generated@@151 $generated@@152) (or (not (= $generated@@151 $generated@@152)) (not true))) (=> (and ($generated@@121 $generated@@151) (not ($generated@@121 $generated@@152))) ($generated@@29 $generated@@151 $generated@@152))) (=> (and ($generated@@121 $generated@@151) ($generated@@121 $generated@@152)) (= ($generated@@29 $generated@@151 $generated@@152) (< ($generated@@35 $generated@@151) ($generated@@35 $generated@@152))))) (=> (and ($generated@@29 $generated@@151 $generated@@152) ($generated@@121 $generated@@152)) ($generated@@121 $generated@@151)))
 :pattern ( ($generated@@29 $generated@@151 $generated@@152))
)))
(assert  (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@153 $generated@@156 $generated@@157 $generated@@158 ($generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@161 $generated@@162) $generated@@159)
 :weight 0
)) (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@153 $generated@@163 $generated@@164 $generated@@165 ($generated@@155 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@153 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@153 $generated@@172 $generated@@173 $generated@@174 ($generated@@155 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@153 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@16 ($generated@@153 $generated@@44 $generated@@72 $generated@@12 ($generated@@154 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (or (not (= $generated@@185 $generated@@181)) (not true)) ($generated@@16 ($generated@@70 $generated@@12 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@182 $generated@@185) $generated@@183)))) $generated@@184))
 :pattern ( ($generated@@153 $generated@@44 $generated@@72 $generated@@12 ($generated@@154 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@187) (and (or (not (= $generated@@188 $generated@@69)) (not true)) ($generated@@43 $generated@@44 $generated@@188 $generated@@59))) ($generated@@16 ($generated@@70 $generated@@12 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@187 $generated@@188) $generated)))) ($generated@@58 $generated@@44 ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@187 $generated@@188) $generated@@65)) $generated@@52 $generated@@187))
 :pattern ( ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@187 $generated@@188) $generated@@65)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@189) (and (or (not (= $generated@@190 $generated@@69)) (not true)) ($generated@@43 $generated@@44 $generated@@190 $generated@@62))) ($generated@@16 ($generated@@70 $generated@@12 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@189 $generated@@190) $generated)))) ($generated@@58 $generated@@44 ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@189 $generated@@190) $generated@@68)) $generated@@45 $generated@@189))
 :pattern ( ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@189 $generated@@190) $generated@@68)))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> ($generated@@121 $generated@@191) (= $generated@@191 ($generated@@34 ($generated@@35 $generated@@191))))
 :pattern ( ($generated@@35 $generated@@191))
 :pattern ( ($generated@@121 $generated@@191))
)))
(assert (= ($generated@@192 $generated@@45) $generated@@1))
(assert (= ($generated@@193 $generated@@45) $generated@@7))
(assert (= ($generated@@192 $generated@@52) $generated@@2))
(assert (= ($generated@@193 $generated@@52) $generated@@8))
(assert (= ($generated@@192 $generated@@59) $generated@@4))
(assert (= ($generated@@193 $generated@@59) $generated@@7))
(assert (= ($generated@@192 $generated@@62) $generated@@6))
(assert (= ($generated@@193 $generated@@62) $generated@@8))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and ($generated@@42 $generated@@194) (and (or (not (= $generated@@195 $generated@@69)) (not true)) ($generated@@43 $generated@@44 $generated@@195 $generated@@59))) ($generated@@43 $generated@@44 ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@194 $generated@@195) $generated@@65)) $generated@@52))
 :pattern ( ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@194 $generated@@195) $generated@@65)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@42 $generated@@196) (and (or (not (= $generated@@197 $generated@@69)) (not true)) ($generated@@43 $generated@@44 $generated@@197 $generated@@62))) ($generated@@43 $generated@@44 ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@196 $generated@@197) $generated@@68)) $generated@@45))
 :pattern ( ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@196 $generated@@197) $generated@@68)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@121 $generated@@199) (<= ($generated@@35 $generated@@199) ($generated@@35 $generated@@198))) (or (and (= $generated@@199 ($generated@@34 0)) (= ($generated@@33 $generated@@198 $generated@@199) $generated@@198)) (and (or (not (= $generated@@199 ($generated@@34 0))) (not true)) ($generated@@29 ($generated@@33 $generated@@198 $generated@@199) $generated@@198))))
 :pattern ( ($generated@@33 $generated@@198 $generated@@199))
)))
(assert  (=> (<= 2 $generated@@39) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@201) ($generated@@43 $generated@@44 $generated@@202 $generated@@45)) (= $generated@@203 ($generated@@34 0))) ($generated@@46 $generated@@200 $generated@@201 $generated@@203 $generated@@202))
 :pattern ( ($generated@@46 $generated@@200 $generated@@201 $generated@@203 $generated@@202))
))))
(assert  (=> (<= 2 $generated@@39) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@205) ($generated@@43 $generated@@44 $generated@@206 $generated@@52)) (= $generated@@207 ($generated@@34 0))) ($generated@@53 $generated@@204 $generated@@205 $generated@@207 $generated@@206))
 :pattern ( ($generated@@53 $generated@@204 $generated@@205 $generated@@207 $generated@@206))
))))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@210 $generated@@59)  (or (= $generated@@210 $generated@@69) ($generated@@208 ($generated@@209 $generated@@210))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@210 $generated@@59))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@212 $generated@@62)  (or (= $generated@@212 $generated@@69) ($generated@@211 ($generated@@209 $generated@@212))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@212 $generated@@62))
)))
(assert (forall (($generated@@213 Int) ) (! (= ($generated@@104 $generated@@13 ($generated@@17 ($generated@@99 $generated@@213))) ($generated@@101 $generated@@73 ($generated@@104 $generated@@13 ($generated@@17 $generated@@213))))
 :pattern ( ($generated@@104 $generated@@13 ($generated@@17 ($generated@@99 $generated@@213))))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@T) ) (! (= ($generated@@104 $generated@@215 ($generated@@101 $generated@@215 $generated@@214)) ($generated@@101 $generated@@73 ($generated@@104 $generated@@215 $generated@@214)))
 :pattern ( ($generated@@104 $generated@@215 ($generated@@101 $generated@@215 $generated@@214)))
)))
(assert  (=> (<= 2 $generated@@39) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (or ($generated@@216 $generated@@220 $generated@@221 $generated@@222) (and (< 2 $generated@@39) (and ($generated@@42 $generated@@220) ($generated@@43 $generated@@44 $generated@@222 $generated@@45)))) (and (and (=> (< 0 ($generated@@35 $generated@@221)) ($generated@@217 $generated@@220 ($generated@@33 $generated@@221 ($generated@@34 1)) ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@220 $generated@@222) $generated@@65)))) (=> (=> (< 0 ($generated@@35 $generated@@221)) ($generated@@53 ($generated@@41 $generated@@218) $generated@@220 ($generated@@33 $generated@@221 ($generated@@34 1)) ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@220 $generated@@222) $generated@@65)))) (=> (= ($generated@@99 0) ($generated@@35 $generated@@221)) (forall (($generated@@223 T@U) ) (!  (=> ($generated@@29 $generated@@223 $generated@@221) ($generated@@216 $generated@@220 $generated@@223 $generated@@222))
 :pattern ( ($generated@@46 $generated@@219 $generated@@220 $generated@@223 $generated@@222))
))))) (= ($generated@@46 ($generated@@41 $generated@@219) $generated@@220 $generated@@221 $generated@@222)  (and (=> (< 0 ($generated@@35 $generated@@221)) ($generated@@53 ($generated@@41 $generated@@218) $generated@@220 ($generated@@33 $generated@@221 ($generated@@34 1)) ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@220 $generated@@222) $generated@@65)))) (=> (= ($generated@@99 0) ($generated@@35 $generated@@221)) (forall (($generated@@224 T@U) ) (!  (=> ($generated@@29 $generated@@224 $generated@@221) ($generated@@46 $generated@@219 $generated@@220 $generated@@224 $generated@@222))
 :pattern ( ($generated@@46 $generated@@219 $generated@@220 $generated@@224 $generated@@222))
)))))))
 :pattern ( ($generated@@46 ($generated@@41 $generated@@219) $generated@@220 $generated@@221 $generated@@222) ($generated@@42 $generated@@220))
))))
(assert  (=> (<= 2 $generated@@39) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (or ($generated@@217 $generated@@226 $generated@@227 $generated@@228) (and (< 2 $generated@@39) (and ($generated@@42 $generated@@226) ($generated@@43 $generated@@44 $generated@@228 $generated@@52)))) (and (and (=> (< 0 ($generated@@35 $generated@@227)) ($generated@@216 $generated@@226 ($generated@@33 $generated@@227 ($generated@@34 1)) ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@226 $generated@@228) $generated@@68)))) (=> (=> (< 0 ($generated@@35 $generated@@227)) ($generated@@46 ($generated@@41 $generated@@218) $generated@@226 ($generated@@33 $generated@@227 ($generated@@34 1)) ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@226 $generated@@228) $generated@@68)))) (=> (= ($generated@@99 0) ($generated@@35 $generated@@227)) (forall (($generated@@229 T@U) ) (!  (=> ($generated@@29 $generated@@229 $generated@@227) ($generated@@217 $generated@@226 $generated@@229 $generated@@228))
 :pattern ( ($generated@@53 $generated@@225 $generated@@226 $generated@@229 $generated@@228))
))))) (= ($generated@@53 ($generated@@41 $generated@@225) $generated@@226 $generated@@227 $generated@@228)  (and (=> (< 0 ($generated@@35 $generated@@227)) ($generated@@46 ($generated@@41 $generated@@218) $generated@@226 ($generated@@33 $generated@@227 ($generated@@34 1)) ($generated@@70 $generated@@44 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@226 $generated@@228) $generated@@68)))) (=> (= ($generated@@99 0) ($generated@@35 $generated@@227)) (forall (($generated@@230 T@U) ) (!  (=> ($generated@@29 $generated@@230 $generated@@227) ($generated@@53 $generated@@225 $generated@@226 $generated@@230 $generated@@228))
 :pattern ( ($generated@@53 $generated@@225 $generated@@226 $generated@@230 $generated@@228))
)))))))
 :pattern ( ($generated@@53 ($generated@@41 $generated@@225) $generated@@226 $generated@@227 $generated@@228) ($generated@@42 $generated@@226))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@236  (=> (= $generated@@231 ($generated@@154 $generated@@69 $generated@@232 $generated false)) (=> (and (and (and ($generated@@42 $generated@@233) ($generated@@234 $generated@@233)) (= $generated@@232 $generated@@233)) (and (and ($generated@@58 $generated@@44 $generated@@235 $generated@@45 $generated@@233) ($generated@@129 $generated@@233 $generated@@235)) (and ($generated@@40 ($generated@@41 $generated@@218) $generated@@233 $generated@@235) (= (ControlFlow 0 2) (- 0 1))))) (or (not (= $generated@@235 $generated@@69)) (not true))))))
(let (($generated@@237  (=> (and ($generated@@42 $generated@@232) ($generated@@234 $generated@@232)) (=> (and (and ($generated@@43 $generated@@44 $generated@@235 $generated@@45) ($generated@@58 $generated@@44 $generated@@235 $generated@@45 $generated@@232)) (and (= 2 $generated@@39) (= (ControlFlow 0 3) 2))) $generated@@236))))
$generated@@237)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
