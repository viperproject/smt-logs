(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U T@U T@U) Bool)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (Int) T@U)
(declare-fun $generated@@30 (T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@50 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@T T@T) T@T)
(declare-fun $generated@@60 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@24) 3))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@22 $generated@@35 $generated@@36) (and (< 2 $generated@@19) ($generated@@23 $generated@@24 $generated@@36 $generated@@25))) (and (and (=> (< 0 ($generated@@26 $generated@@35)) ($generated@@27 ($generated@@28 $generated@@35 ($generated@@29 1)) $generated@@36)) (=> (=> (< 0 ($generated@@26 $generated@@35)) ($generated@@30 ($generated@@21 $generated@@31) ($generated@@28 $generated@@35 ($generated@@29 1)) $generated@@36)) (=> (= ($generated@@32 0) ($generated@@26 $generated@@35)) (forall (($generated@@37 T@U) ) (!  (=> ($generated@@33 $generated@@37 $generated@@35) ($generated@@22 $generated@@37 $generated@@36))
 :pattern ( ($generated@@20 $generated@@34 $generated@@37 $generated@@36))
))))) (= ($generated@@20 ($generated@@21 $generated@@34) $generated@@35 $generated@@36)  (and (=> (< 0 ($generated@@26 $generated@@35)) ($generated@@30 ($generated@@21 $generated@@31) ($generated@@28 $generated@@35 ($generated@@29 1)) $generated@@36)) (=> (= ($generated@@32 0) ($generated@@26 $generated@@35)) (forall (($generated@@38 T@U) ) (!  (=> ($generated@@33 $generated@@38 $generated@@35) ($generated@@20 $generated@@34 $generated@@38 $generated@@36))
 :pattern ( ($generated@@20 $generated@@34 $generated@@38 $generated@@36))
)))))))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@34) $generated@@35 $generated@@36))
))))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or ($generated@@27 $generated@@40 $generated@@41) (and (< 2 $generated@@19) ($generated@@23 $generated@@24 $generated@@41 $generated@@25))) (and (and (=> (< 0 ($generated@@26 $generated@@40)) ($generated@@22 ($generated@@28 $generated@@40 ($generated@@29 1)) $generated@@41)) (=> (=> (< 0 ($generated@@26 $generated@@40)) ($generated@@20 ($generated@@21 $generated@@31) ($generated@@28 $generated@@40 ($generated@@29 1)) $generated@@41)) (=> (= ($generated@@32 0) ($generated@@26 $generated@@40)) (forall (($generated@@42 T@U) ) (!  (=> ($generated@@33 $generated@@42 $generated@@40) ($generated@@27 $generated@@42 $generated@@41))
 :pattern ( ($generated@@30 $generated@@39 $generated@@42 $generated@@41))
))))) (= ($generated@@30 ($generated@@21 $generated@@39) $generated@@40 $generated@@41)  (and (=> (< 0 ($generated@@26 $generated@@40)) ($generated@@20 ($generated@@21 $generated@@31) ($generated@@28 $generated@@40 ($generated@@29 1)) $generated@@41)) (=> (= ($generated@@32 0) ($generated@@26 $generated@@40)) (forall (($generated@@43 T@U) ) (!  (=> ($generated@@33 $generated@@43 $generated@@40) ($generated@@30 $generated@@39 $generated@@43 $generated@@41))
 :pattern ( ($generated@@30 $generated@@39 $generated@@43 $generated@@41))
)))))))
 :pattern ( ($generated@@30 ($generated@@21 $generated@@39) $generated@@40 $generated@@41))
))))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (and ($generated@@33 $generated@@44 $generated@@45) ($generated@@33 $generated@@45 $generated@@46)) ($generated@@33 $generated@@44 $generated@@46))
 :pattern ( ($generated@@33 $generated@@44 $generated@@45) ($generated@@33 $generated@@45 $generated@@46))
 :pattern ( ($generated@@33 $generated@@44 $generated@@45) ($generated@@33 $generated@@44 $generated@@46))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 Int) ($generated@@49 Int) ) (!  (=> (and (and (<= 0 $generated@@48) (<= 0 $generated@@49)) (<= (+ $generated@@48 $generated@@49) ($generated@@26 $generated@@47))) (= ($generated@@28 ($generated@@28 $generated@@47 ($generated@@29 $generated@@48)) ($generated@@29 $generated@@49)) ($generated@@28 $generated@@47 ($generated@@29 (+ $generated@@48 $generated@@49)))))
 :pattern ( ($generated@@28 ($generated@@28 $generated@@47 ($generated@@29 $generated@@48)) ($generated@@29 $generated@@49)))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@50 $generated@@24 $generated@@52 $generated@@25 $generated@@53) ($generated@@50 $generated@@24 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@50 $generated@@24 $generated@@52 $generated@@25 $generated@@53))
 :pattern ( ($generated@@50 $generated@@24 $generated@@52 $generated@@51 $generated@@53))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@56 $generated@@63 $generated@@64 ($generated@@60 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@67) $generated@@65)
 :weight 0
)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (or (= $generated@@72 $generated@@73) (= ($generated@@56 $generated@@68 $generated@@69 ($generated@@60 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@73) ($generated@@56 $generated@@68 $generated@@69 $generated@@71 $generated@@73)))
 :weight 0
))) (= ($generated@@3 $generated@@57) 4)) (= ($generated@@3 $generated@@58) 5)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (= ($generated@@3 ($generated@@59 $generated@@74 $generated@@75)) 6))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@61 ($generated@@59 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@59 $generated@@76 $generated@@77))
))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@62 ($generated@@59 $generated@@78 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@59 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@50 $generated@@24 $generated@@80 $generated@@51 $generated@@81)  (or (= $generated@@80 $generated@@54) ($generated@@8 ($generated@@55 $generated@@4 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@24 ($generated@@59 $generated@@57 $generated@@58) $generated@@81 $generated@@80) $generated)))))
 :pattern ( ($generated@@50 $generated@@24 $generated@@80 $generated@@51 $generated@@81))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@32 $generated@@82) $generated@@82)
 :pattern ( ($generated@@32 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 ($generated@@55 $generated@@88 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@55 $generated@@88 $generated@@87))
)))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@90 $generated@@25) (= $generated@@91 ($generated@@29 0))) ($generated@@20 $generated@@89 $generated@@91 $generated@@90))
 :pattern ( ($generated@@20 $generated@@89 $generated@@91 $generated@@90))
))))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@93 $generated@@25) (= $generated@@94 ($generated@@29 0))) ($generated@@30 $generated@@92 $generated@@94 $generated@@93))
 :pattern ( ($generated@@30 $generated@@92 $generated@@94 $generated@@93))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@95) $generated@@96 $generated@@97) ($generated@@20 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@30 ($generated@@21 $generated@@98) $generated@@99 $generated@@100) ($generated@@30 $generated@@98 $generated@@99 $generated@@100))
 :pattern ( ($generated@@30 ($generated@@21 $generated@@98) $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@101 $generated@@103) (<= ($generated@@26 $generated@@103) ($generated@@26 $generated@@102))) (and (= ($generated@@101 ($generated@@28 $generated@@102 $generated@@103)) ($generated@@101 $generated@@102)) (= ($generated@@26 ($generated@@28 $generated@@102 $generated@@103)) (- ($generated@@26 $generated@@102) ($generated@@26 $generated@@103)))))
 :pattern ( ($generated@@28 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 Int) ) (!  (=> (<= 0 $generated@@104) (and ($generated@@101 ($generated@@29 $generated@@104)) (= ($generated@@26 ($generated@@29 $generated@@104)) $generated@@104)))
 :pattern ( ($generated@@29 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@105 $generated@@25)  (and ($generated@@23 $generated@@24 $generated@@105 $generated@@51) (or (not (= $generated@@105 $generated@@54)) (not true))))
 :pattern ( ($generated@@23 $generated@@24 $generated@@105 $generated@@25))
 :pattern ( ($generated@@23 $generated@@24 $generated@@105 $generated@@51))
)))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or ($generated@@22 ($generated@@83 $generated@@58 $generated@@107) $generated@@108) (and (< 2 $generated@@19) ($generated@@23 $generated@@24 $generated@@108 $generated@@25))) (and (and (=> (< 0 ($generated@@26 $generated@@107)) ($generated@@27 ($generated@@28 $generated@@107 ($generated@@29 1)) $generated@@108)) (=> (=> (< 0 ($generated@@26 $generated@@107)) ($generated@@30 ($generated@@21 $generated@@31) ($generated@@28 $generated@@107 ($generated@@29 1)) $generated@@108)) (=> (= ($generated@@32 0) ($generated@@26 $generated@@107)) (forall (($generated@@109 T@U) ) (!  (=> ($generated@@33 $generated@@109 $generated@@107) ($generated@@22 $generated@@109 $generated@@108))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@106) $generated@@109 $generated@@108))
))))) (= ($generated@@20 ($generated@@21 $generated@@106) ($generated@@83 $generated@@58 $generated@@107) $generated@@108)  (and (=> (< 0 ($generated@@26 $generated@@107)) ($generated@@30 ($generated@@21 $generated@@31) ($generated@@28 $generated@@107 ($generated@@29 1)) $generated@@108)) (=> (= ($generated@@32 0) ($generated@@26 $generated@@107)) (forall (($generated@@110 T@U) ) (!  (=> ($generated@@33 $generated@@110 $generated@@107) ($generated@@20 ($generated@@21 $generated@@106) $generated@@110 $generated@@108))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@106) $generated@@110 $generated@@108))
)))))))
 :weight 3
 :pattern ( ($generated@@20 ($generated@@21 $generated@@106) ($generated@@83 $generated@@58 $generated@@107) $generated@@108))
))))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@27 ($generated@@83 $generated@@58 $generated@@112) $generated@@113) (and (< 2 $generated@@19) ($generated@@23 $generated@@24 $generated@@113 $generated@@25))) (and (and (=> (< 0 ($generated@@26 $generated@@112)) ($generated@@22 ($generated@@28 $generated@@112 ($generated@@29 1)) $generated@@113)) (=> (=> (< 0 ($generated@@26 $generated@@112)) ($generated@@20 ($generated@@21 $generated@@31) ($generated@@28 $generated@@112 ($generated@@29 1)) $generated@@113)) (=> (= ($generated@@32 0) ($generated@@26 $generated@@112)) (forall (($generated@@114 T@U) ) (!  (=> ($generated@@33 $generated@@114 $generated@@112) ($generated@@27 $generated@@114 $generated@@113))
 :pattern ( ($generated@@30 ($generated@@21 $generated@@111) $generated@@114 $generated@@113))
))))) (= ($generated@@30 ($generated@@21 $generated@@111) ($generated@@83 $generated@@58 $generated@@112) $generated@@113)  (and (=> (< 0 ($generated@@26 $generated@@112)) ($generated@@20 ($generated@@21 $generated@@31) ($generated@@28 $generated@@112 ($generated@@29 1)) $generated@@113)) (=> (= ($generated@@32 0) ($generated@@26 $generated@@112)) (forall (($generated@@115 T@U) ) (!  (=> ($generated@@33 $generated@@115 $generated@@112) ($generated@@30 ($generated@@21 $generated@@111) $generated@@115 $generated@@113))
 :pattern ( ($generated@@30 ($generated@@21 $generated@@111) $generated@@115 $generated@@113))
)))))))
 :weight 3
 :pattern ( ($generated@@30 ($generated@@21 $generated@@111) ($generated@@83 $generated@@58 $generated@@112) $generated@@113))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (or ($generated@@33 $generated@@116 $generated@@117) (= $generated@@116 $generated@@117)) ($generated@@33 $generated@@117 $generated@@116))
 :pattern ( ($generated@@33 $generated@@116 $generated@@117) ($generated@@33 $generated@@117 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (<= 0 ($generated@@26 $generated@@118))
 :pattern ( ($generated@@26 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@55 $generated@@120 ($generated@@86 $generated@@120 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@86 $generated@@120 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (and (and (and (=> ($generated@@33 $generated@@121 $generated@@122) (or (not (= $generated@@121 $generated@@122)) (not true))) (=> (and ($generated@@101 $generated@@121) (not ($generated@@101 $generated@@122))) ($generated@@33 $generated@@121 $generated@@122))) (=> (and ($generated@@101 $generated@@121) ($generated@@101 $generated@@122)) (= ($generated@@33 $generated@@121 $generated@@122) (< ($generated@@26 $generated@@121) ($generated@@26 $generated@@122))))) (=> (and ($generated@@33 $generated@@121 $generated@@122) ($generated@@101 $generated@@122)) ($generated@@101 $generated@@121)))
 :pattern ( ($generated@@33 $generated@@121 $generated@@122))
)))
(assert  (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@123 $generated@@126 $generated@@127 $generated@@128 ($generated@@125 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@123 $generated@@133 $generated@@134 $generated@@135 ($generated@@125 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@123 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@123 $generated@@142 $generated@@143 $generated@@144 ($generated@@125 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@123 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@8 ($generated@@123 $generated@@24 $generated@@57 $generated@@4 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))  (=> (and (or (not (= $generated@@155 $generated@@151)) (not true)) ($generated@@8 ($generated@@55 $generated@@4 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@24 ($generated@@59 $generated@@57 $generated@@58) $generated@@152 $generated@@155) $generated@@153)))) $generated@@154))
 :pattern ( ($generated@@123 $generated@@24 $generated@@57 $generated@@4 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))
)))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or ($generated@@22 ($generated@@83 $generated@@58 $generated@@158) ($generated@@83 $generated@@24 $generated@@159)) (and (< 2 $generated@@19) ($generated@@23 $generated@@24 $generated@@159 $generated@@25))) (and (and (=> (< 0 ($generated@@26 $generated@@158)) ($generated@@27 ($generated@@28 $generated@@158 ($generated@@29 1)) ($generated@@83 $generated@@24 $generated@@159))) (=> (=> (< 0 ($generated@@26 $generated@@158)) ($generated@@30 ($generated@@21 $generated@@31) ($generated@@28 $generated@@158 ($generated@@29 1)) ($generated@@83 $generated@@24 $generated@@159))) (=> (= ($generated@@32 0) ($generated@@26 $generated@@158)) (forall (($generated@@160 T@U) ) (!  (=> ($generated@@33 $generated@@160 $generated@@158) ($generated@@22 $generated@@160 $generated@@159))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@157) $generated@@160 $generated@@159))
))))) (= ($generated@@20 ($generated@@21 $generated@@157) ($generated@@83 $generated@@58 $generated@@158) ($generated@@83 $generated@@24 $generated@@159))  (and (=> (< 0 ($generated@@26 $generated@@158)) ($generated@@30 ($generated@@21 $generated@@31) ($generated@@28 $generated@@158 ($generated@@29 1)) ($generated@@83 $generated@@24 $generated@@159))) (=> (= ($generated@@32 0) ($generated@@26 $generated@@158)) (forall (($generated@@161 T@U) ) (!  (=> ($generated@@33 $generated@@161 $generated@@158) ($generated@@20 ($generated@@21 $generated@@157) $generated@@161 $generated@@159))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@157) $generated@@161 $generated@@159))
)))))))
 :weight 3
 :pattern ( ($generated@@20 ($generated@@21 $generated@@157) ($generated@@83 $generated@@58 $generated@@158) ($generated@@83 $generated@@24 $generated@@159)))
))))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (or ($generated@@27 ($generated@@83 $generated@@58 $generated@@163) ($generated@@83 $generated@@24 $generated@@164)) (and (< 2 $generated@@19) ($generated@@23 $generated@@24 $generated@@164 $generated@@25))) (and (and (=> (< 0 ($generated@@26 $generated@@163)) ($generated@@22 ($generated@@28 $generated@@163 ($generated@@29 1)) ($generated@@83 $generated@@24 $generated@@164))) (=> (=> (< 0 ($generated@@26 $generated@@163)) ($generated@@20 ($generated@@21 $generated@@31) ($generated@@28 $generated@@163 ($generated@@29 1)) ($generated@@83 $generated@@24 $generated@@164))) (=> (= ($generated@@32 0) ($generated@@26 $generated@@163)) (forall (($generated@@165 T@U) ) (!  (=> ($generated@@33 $generated@@165 $generated@@163) ($generated@@27 $generated@@165 $generated@@164))
 :pattern ( ($generated@@30 ($generated@@21 $generated@@162) $generated@@165 $generated@@164))
))))) (= ($generated@@30 ($generated@@21 $generated@@162) ($generated@@83 $generated@@58 $generated@@163) ($generated@@83 $generated@@24 $generated@@164))  (and (=> (< 0 ($generated@@26 $generated@@163)) ($generated@@20 ($generated@@21 $generated@@31) ($generated@@28 $generated@@163 ($generated@@29 1)) ($generated@@83 $generated@@24 $generated@@164))) (=> (= ($generated@@32 0) ($generated@@26 $generated@@163)) (forall (($generated@@166 T@U) ) (!  (=> ($generated@@33 $generated@@166 $generated@@163) ($generated@@30 ($generated@@21 $generated@@162) $generated@@166 $generated@@164))
 :pattern ( ($generated@@30 ($generated@@21 $generated@@162) $generated@@166 $generated@@164))
)))))))
 :weight 3
 :pattern ( ($generated@@30 ($generated@@21 $generated@@162) ($generated@@83 $generated@@58 $generated@@163) ($generated@@83 $generated@@24 $generated@@164)))
))))
(assert (forall (($generated@@167 T@U) ) (!  (=> ($generated@@101 $generated@@167) (= $generated@@167 ($generated@@29 ($generated@@26 $generated@@167))))
 :pattern ( ($generated@@26 $generated@@167))
 :pattern ( ($generated@@101 $generated@@167))
)))
(assert (= ($generated@@168 $generated@@25) $generated@@0))
(assert (= ($generated@@169 $generated@@25) $generated@@2))
(assert (= ($generated@@168 $generated@@51) $generated@@1))
(assert (= ($generated@@169 $generated@@51) $generated@@2))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@101 $generated@@171) (<= ($generated@@26 $generated@@171) ($generated@@26 $generated@@170))) (or (and (= $generated@@171 ($generated@@29 0)) (= ($generated@@28 $generated@@170 $generated@@171) $generated@@170)) (and (or (not (= $generated@@171 ($generated@@29 0))) (not true)) ($generated@@33 ($generated@@28 $generated@@170 $generated@@171) $generated@@170))))
 :pattern ( ($generated@@28 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@174 $generated@@51)  (or (= $generated@@174 $generated@@54) ($generated@@172 ($generated@@173 $generated@@174))))
 :pattern ( ($generated@@23 $generated@@24 $generated@@174 $generated@@51))
)))
(assert (forall (($generated@@175 Int) ) (! (= ($generated@@86 $generated@@5 ($generated@@9 ($generated@@32 $generated@@175))) ($generated@@83 $generated@@58 ($generated@@86 $generated@@5 ($generated@@9 $generated@@175))))
 :pattern ( ($generated@@86 $generated@@5 ($generated@@9 ($generated@@32 $generated@@175))))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@86 $generated@@177 ($generated@@83 $generated@@177 $generated@@176)) ($generated@@83 $generated@@58 ($generated@@86 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@86 $generated@@177 ($generated@@83 $generated@@177 $generated@@176)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@187  (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@22 $generated@@178 $generated@@179) (or ($generated@@20 ($generated@@21 $generated@@31) $generated@@178 $generated@@179) (=> (< 0 ($generated@@26 $generated@@178)) ($generated@@30 ($generated@@21 ($generated@@21 $generated@@31)) ($generated@@28 $generated@@178 ($generated@@29 1)) $generated@@179))))) (=> (=> ($generated@@22 $generated@@178 $generated@@179) (or ($generated@@20 ($generated@@21 $generated@@31) $generated@@178 $generated@@179) (=> (< 0 ($generated@@26 $generated@@178)) ($generated@@30 ($generated@@21 ($generated@@21 $generated@@31)) ($generated@@28 $generated@@178 ($generated@@29 1)) $generated@@179)))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@22 $generated@@178 $generated@@179) (or ($generated@@20 ($generated@@21 $generated@@31) $generated@@178 $generated@@179) (=> (= ($generated@@32 0) ($generated@@26 $generated@@178)) (forall (($generated@@188 T@U) ) (!  (=> ($generated@@33 $generated@@188 $generated@@178) ($generated@@20 ($generated@@21 ($generated@@21 $generated@@31)) $generated@@188 $generated@@179))
 :pattern ( ($generated@@20 ($generated@@21 ($generated@@21 $generated@@31)) $generated@@188 $generated@@179))
))))))))))
(let (($generated@@189  (=> (and (and (and ($generated@@180 $generated@@181) ($generated@@182 $generated@@181)) (= $generated@@183 $generated@@181)) (and (forall (($generated@@190 T@U) ) (!  (=> ($generated@@33 $generated@@190 $generated@@178) ($generated@@30 ($generated@@21 $generated@@31) $generated@@190 $generated@@179))
 :pattern ( ($generated@@30 ($generated@@21 $generated@@31) $generated@@190 $generated@@179))
 :pattern ( ($generated@@33 $generated@@190 $generated@@178))
)) (= (ControlFlow 0 6) 4))) $generated@@187)))
(let (($generated@@191  (=> (and ($generated@@33 $generated@@184 $generated@@178) (= (ControlFlow 0 2) (- 0 1))) (or ($generated@@33 $generated@@184 $generated@@178) (and (= $generated@@184 $generated@@178) (and (= $generated@@179 $generated@@54) (or (not (= $generated@@179 $generated@@54)) (not true))))))))
(let (($generated@@192  (=> (= $generated@@185 ($generated@@124 $generated@@54 $generated@@186 $generated false)) (=> (and (and ($generated@@180 $generated@@183) ($generated@@182 $generated@@183)) (and (= $generated@@186 $generated@@183) (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and ($generated@@23 $generated@@24 $generated@@194 $generated@@25) ($generated@@8 ($generated@@83 $generated@@4 ($generated@@7 true)))) (or ($generated@@33 $generated@@193 $generated@@178) (and (= $generated@@193 $generated@@178) (and (= $generated@@194 $generated@@54) (or (not (= $generated@@179 $generated@@54)) (not true)))))) ($generated@@20 ($generated@@21 $generated@@31) $generated@@193 $generated@@194))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@31) $generated@@193 $generated@@194))
)))) (and (=> (= (ControlFlow 0 7) 2) $generated@@191) (=> (= (ControlFlow 0 7) 6) $generated@@189))))))
(let (($generated@@195  (=> (and ($generated@@180 $generated@@186) ($generated@@182 $generated@@186)) (=> (and (and ($generated@@23 $generated@@24 $generated@@179 $generated@@25) ($generated@@50 $generated@@24 $generated@@179 $generated@@25 $generated@@186)) (and (= 3 $generated@@19) (= (ControlFlow 0 8) 7))) $generated@@192))))
$generated@@195))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
