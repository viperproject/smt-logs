(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun TInt () T@U)
(declare-fun TagInt () T@U)
(declare-fun TagSet () T@U)
(declare-fun alloc () T@U)
(declare-fun allocName () T@U)
(declare-fun Tagclass._module.Universe () T@U)
(declare-fun Tagclass._module.Universe? () T@U)
(declare-fun Tagclass._module.Object () T@U)
(declare-fun Tagclass._module.Thread () T@U)
(declare-fun Tagclass._module.OwnedObject () T@U)
(declare-fun Tagclass._module.Object? () T@U)
(declare-fun Tagclass._module.Lifetime () T@U)
(declare-fun Tagclass._module.Thread? () T@U)
(declare-fun class._module.Universe? () T@U)
(declare-fun Tagclass._module.Lifetime? () T@U)
(declare-fun |##_module.ObjectClassKind.Thread| () T@U)
(declare-fun Tagclass._module.ObjectClassKind () T@U)
(declare-fun |##_module.ObjectClassKind.OwnedObject| () T@U)
(declare-fun |##_module.ObjectClassKind.Lifetime| () T@U)
(declare-fun class._module.OwnedObject? () T@U)
(declare-fun Tagclass._module.OwnedObject? () T@U)
(declare-fun class._module.Lifetime? () T@U)
(declare-fun class._module.OwnedU32? () T@U)
(declare-fun Tagclass._module.OwnedU32? () T@U)
(declare-fun Tagclass._module.OwnedU32 () T@U)
(declare-fun tytagFamily$Universe () T@U)
(declare-fun tytagFamily$Object () T@U)
(declare-fun tytagFamily$Thread () T@U)
(declare-fun tytagFamily$OwnedObject () T@U)
(declare-fun tytagFamily$Lifetime () T@U)
(declare-fun tytagFamily$ObjectClassKind () T@U)
(declare-fun tytagFamily$OwnedU32 () T@U)
(declare-fun field$content () T@U)
(declare-fun field$owner () T@U)
(declare-fun field$nonvolatileVersion () T@U)
(declare-fun field$mightPointTo () T@U)
(declare-fun field$mightPointFrom () T@U)
(declare-fun field$elements () T@U)
(declare-fun field$value () T@U)
(declare-fun Ctor (T@T) Int)
(declare-fun boolType () T@T)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun $HeapSucc (T@U T@U) Bool)
(declare-fun _module.Universe.legalTransitionsSequence (T@U T@U T@U T@U) Bool)
(declare-fun $IsGoodHeap (T@U) Bool)
(declare-fun null () T@U)
(declare-fun $Is (T@T T@U T@U) Bool)
(declare-fun refType () T@T)
(declare-fun Tclass._module.Universe () T@U)
(declare-fun $IsAlloc (T@T T@U T@U T@U) Bool)
(declare-fun |_module.Universe.legalTransitionsSequence#canCall| (T@U T@U T@U T@U) Bool)
(declare-fun SetType () T@T)
(declare-fun TSet (T@U) T@U)
(declare-fun Tclass._module.Thread () T@U)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun MapType0Select (T@T T@T T@U T@U) T@U)
(declare-fun FieldType () T@T)
(declare-fun BoxType () T@T)
(declare-fun MapType0Type (T@T T@T) T@T)
(declare-fun MapType0Store (T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType0TypeInv0 (T@T) T@T)
(declare-fun MapType0TypeInv1 (T@T) T@T)
(declare-fun FDim (T@U) Int)
(declare-fun Tag (T@U) T@U)
(declare-fun DeclName (T@U) T@U)
(declare-fun $FunctionContextHeight () Int)
(declare-fun _module.Universe.baseLegalTransitionsSequence (T@U T@U T@U) Bool)
(declare-fun |_module.Universe.baseLegalTransitionsSequence#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Universe.globalBaseInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Universe.globalBaseInv (T@U T@U) Bool)
(declare-fun |Set#Subset| (T@U T@U) Bool)
(declare-fun _module.Universe.content () T@U)
(declare-fun |Set#IsMember| (T@U T@U) Bool)
(declare-fun $Box (T@T T@U) T@U)
(declare-fun Tclass._module.Object () T@U)
(declare-fun $IsAllocBox (T@U T@U T@U) Bool)
(declare-fun |Set#UnionOne| (T@U T@U) T@U)
(declare-fun |Set#Union| (T@U T@U) T@U)
(declare-fun |Set#Difference| (T@U T@U) T@U)
(declare-fun Lit (T@T T@U) T@U)
(declare-fun _module.Object.triggerAxioms (T@U T@U) Bool)
(declare-fun _module.Object.baseFieldsInv (T@U T@U) Bool)
(declare-fun _module.Object.universe (T@U) T@U)
(declare-fun |_module.Object.baseFieldsInv#canCall| (T@U T@U) Bool)
(declare-fun |_module.Object.triggerAxioms#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.unchangedNonvolatileFields (T@U T@U T@U) Bool)
(declare-fun Tclass._module.OwnedObject () T@U)
(declare-fun _module.OwnedObject.unchangedNonvolatileUserFields (T@U T@U T@U) Bool)
(declare-fun _module.Lifetime.unchangedNonvolatileFields (T@U T@U T@U) Bool)
(declare-fun Tclass._module.Lifetime () T@U)
(declare-fun _module.OwnedU32.unchangedNonvolatileUserFields (T@U T@U T@U) Bool)
(declare-fun Tclass._module.OwnedU32 () T@U)
(declare-fun implements$_module.Object (T@U) Bool)
(declare-fun Tclass._module.Thread? () T@U)
(declare-fun Tclass._module.Lifetime? () T@U)
(declare-fun implements$_module.OwnedObject (T@U) Bool)
(declare-fun Tclass._module.OwnedU32? () T@U)
(declare-fun |Set#Empty| () T@U)
(declare-fun _module.OwnedU32.objectUserFields (T@U T@U) T@U)
(declare-fun |_module.OwnedU32.objectUserFields#canCall| (T@U T@U) Bool)
(declare-fun _module.Universe.globalInv (T@U T@U) Bool)
(declare-fun |_module.Universe.globalInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Object.inv (T@U T@U) Bool)
(declare-fun |_module.Object.inv#canCall| (T@U T@U) Bool)
(declare-fun DatatypeCtorId (T@U) T@U)
(declare-fun |#_module.ObjectClassKind.Thread| () T@U)
(declare-fun |#_module.ObjectClassKind.OwnedObject| () T@U)
(declare-fun |#_module.ObjectClassKind.Lifetime| () T@U)
(declare-fun dtype (T@U) T@U)
(declare-fun _module.Universe.legalTransition (T@U T@U T@U T@U) Bool)
(declare-fun |_module.Universe.legalTransition#canCall| (T@U T@U T@U T@U) Bool)
(declare-fun _module.Object.goodPreAndLegalChanges (T@U T@U T@U T@U) Bool)
(declare-fun |_module.Object.goodPreAndLegalChanges#canCall| (T@U T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.nonvolatileVersion () T@U)
(declare-fun Tclass._module.OwnedObject? () T@U)
(declare-fun Tclass._module.Object? () T@U)
(declare-fun |_module.Lifetime.unchangedNonvolatileFields#canCall| (T@U T@U T@U) Bool)
(declare-fun _module.Lifetime.owner () T@U)
(declare-fun |Set#Equal| (T@U T@U) Bool)
(declare-fun _module.Lifetime.elements () T@U)
(declare-fun _module.Lifetime.mightPointTo () T@U)
(declare-fun _module.Lifetime.mightPointFrom () T@U)
(declare-fun Tclass._module.Universe? () T@U)
(declare-fun FieldOfDecl (T@U T@U) T@U)
(declare-fun $IsGhostField (T@U) Bool)
(declare-fun _module.OwnedObject.owner () T@U)
(declare-fun _module.OwnedObject.localUserInv (T@U T@U) Bool)
(declare-fun _module.OwnedU32.localUserInv (T@U T@U) Bool)
(declare-fun |_module.OwnedU32.localUserInv#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.userInv (T@U T@U) Bool)
(declare-fun _module.OwnedU32.userInv (T@U T@U) Bool)
(declare-fun |_module.OwnedU32.userInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Thread.baseFieldsInv (T@U T@U) Bool)
(declare-fun |_module.Thread.baseFieldsInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Lifetime.baseFieldsInv (T@U T@U) Bool)
(declare-fun |_module.Lifetime.baseFieldsInv#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.baseFieldsInv (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.baseFieldsInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Object.localInv (T@U T@U) Bool)
(declare-fun _module.Thread.localInv (T@U T@U) Bool)
(declare-fun |_module.Thread.localInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Lifetime.localInv (T@U T@U) Bool)
(declare-fun |_module.Lifetime.localInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Thread.inv (T@U T@U) Bool)
(declare-fun |_module.Thread.inv#canCall| (T@U T@U) Bool)
(declare-fun _module.Lifetime.inv (T@U T@U) Bool)
(declare-fun |_module.Lifetime.inv#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.localInv (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.localInv#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.inv (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.inv#canCall| (T@U T@U) Bool)
(declare-fun DatatypeTypeType () T@T)
(declare-fun Tclass._module.ObjectClassKind () T@U)
(declare-fun _module.OwnedU32.value () T@U)
(declare-fun _module.Object.localInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Object.sequenceInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Object.inv2 (T@U T@U T@U) Bool)
(declare-fun _module.Thread.localInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Thread.sequenceInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Thread.inv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.localInv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.sequenceInv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.inv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.localUserInv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.userInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Lifetime.sequenceInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Lifetime.localInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Lifetime.inv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedU32.localUserInv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedU32.userInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Object.objectGlobalBaseInv (T@U T@U) Bool)
(declare-fun |_module.Object.objectGlobalBaseInv#canCall| (T@U T@U) Bool)
(declare-fun |_module.ObjectClassKind#Equal| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.objectUserFields (T@U T@U) T@U)
(declare-fun |_module.Object.inv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.userInv#canCall| (T@U T@U) Bool)
(declare-fun _module.ObjectClassKind.Thread_q (T@U) Bool)
(declare-fun _module.ObjectClassKind.OwnedObject_q (T@U) Bool)
(declare-fun _module.ObjectClassKind.Lifetime_q (T@U) Bool)
(declare-fun |_module.Thread.inv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Thread.localInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Thread.sequenceInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Lifetime.inv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Lifetime.localInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Lifetime.sequenceInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Object.nonAliasing#canCall| (T@U T@U) Bool)
(declare-fun _module.Object.nonAliasing (T@U T@U) Bool)
(declare-fun |Set#Disjoint| (T@U T@U) Bool)
(declare-fun |_module.Lifetime.alive#canCall| (T@U T@U) Bool)
(declare-fun _module.Lifetime.alive (T@U T@U) Bool)
(declare-fun $IsBox (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.inv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedU32.unchangedNonvolatileUserFields#canCall| (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.objectFields (T@U T@U) T@U)
(declare-fun |_module.OwnedObject.objectFields#canCall| (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.objectUserFields#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.lifetime (T@U) T@U)
(declare-fun |_module.OwnedU32.localUserInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedU32.userInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.localInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.sequenceInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.localUserInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.userInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Object.localInv#canCall| (T@U T@U) Bool)
(declare-fun |_module.Object.localInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Object.sequenceInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.alive (T@U T@U) Bool)
(declare-fun |$IsA#_module.ObjectClassKind| (T@U) Bool)
(declare-fun _module.Object.objectClassKind (T@U) T@U)
(declare-fun |_module.Object.objectClassKind#canCall| (T@U) Bool)
(declare-fun _module.Thread.objectClassKind (T@U) T@U)
(declare-fun |_module.Thread.objectClassKind#canCall| (T@U) Bool)
(declare-fun _module.OwnedObject.objectClassKind (T@U) T@U)
(declare-fun |_module.OwnedObject.objectClassKind#canCall| (T@U) Bool)
(declare-fun _module.Lifetime.objectClassKind (T@U) T@U)
(declare-fun |_module.Lifetime.objectClassKind#canCall| (T@U) Bool)
(declare-fun |_module.OwnedObject.localUserInv#canCall| (T@U T@U) Bool)
(declare-fun DeclType (T@U) T@U)
(declare-fun |_module.OwnedObject.unchangedNonvolatileFields#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.unchangedNonvolatileUserFields#canCall| (T@U T@U T@U) Bool)
(declare-fun Inv0_TSet (T@U) T@U)
(declare-fun |_module.OwnedObject.alive#canCall| (T@U T@U) Bool)
(declare-fun MapType1Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun |lambda#57| (T@U T@U T@U Bool) T@U)
(declare-fun MapType1Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun _module.OwnedU32.volatileOwns (T@U) Bool)
(declare-fun |_module.OwnedU32.volatileOwns#canCall| (T@U) Bool)
(declare-fun _module.OwnedObject.volatileOwns (T@U) Bool)
(declare-fun TagFamily (T@U) T@U)
(declare-fun implements$_module.Universe (T@U) Bool)
(declare-fun |_module.OwnedObject.volatileOwns#canCall| (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (Ctor boolType) 0) (= (Ctor intType) 1)) (= (Ctor realType) 2)) (forall ((arg0 Bool) ) (! (= (U_2_bool (bool_2_U arg0)) arg0)
 :pattern ( (bool_2_U arg0))
))) (forall ((x T@U) ) (! (= (bool_2_U (U_2_bool x)) x)
 :pattern ( (U_2_bool x))
))) (forall ((arg0@@0 Int) ) (! (= (U_2_int (int_2_U arg0@@0)) arg0@@0)
 :pattern ( (int_2_U arg0@@0))
))) (forall ((x@@0 T@U) ) (! (= (int_2_U (U_2_int x@@0)) x@@0)
 :pattern ( (U_2_int x@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@1 T@U) ) (! (= (real_2_U (U_2_real x@@1)) x@@1)
 :pattern ( (U_2_real x@@1))
))))
(assert (distinct TInt TagInt TagSet alloc allocName Tagclass._module.Universe Tagclass._module.Universe? Tagclass._module.Object Tagclass._module.Thread Tagclass._module.OwnedObject Tagclass._module.Object? Tagclass._module.Lifetime Tagclass._module.Thread? class._module.Universe? Tagclass._module.Lifetime? |##_module.ObjectClassKind.Thread| Tagclass._module.ObjectClassKind |##_module.ObjectClassKind.OwnedObject| |##_module.ObjectClassKind.Lifetime| class._module.OwnedObject? Tagclass._module.OwnedObject? class._module.Lifetime? class._module.OwnedU32? Tagclass._module.OwnedU32? Tagclass._module.OwnedU32 tytagFamily$Universe tytagFamily$Object tytagFamily$Thread tytagFamily$OwnedObject tytagFamily$Lifetime tytagFamily$ObjectClassKind tytagFamily$OwnedU32 field$content field$owner field$nonvolatileVersion field$mightPointTo field$mightPointFrom field$elements field$value)
)
(assert  (and (and (and (and (and (and (and (and (= (Ctor refType) 3) (= (Ctor SetType) 4)) (forall ((t0 T@T) (t1 T@T) (val T@U) (m T@U) (x0 T@U) ) (! (= (MapType0Select t0 t1 (MapType0Store t0 t1 m x0 val) x0) val)
 :weight 0
))) (forall ((u0 T@T) (u1 T@T) (val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (y0 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select u0 u1 (MapType0Store u0 u1 m@@0 x0@@0 val@@0) y0) (MapType0Select u0 u1 m@@0 y0)))
 :weight 0
))) (= (Ctor FieldType) 5)) (= (Ctor BoxType) 6)) (forall ((arg0@@2 T@T) (arg1 T@T) ) (= (Ctor (MapType0Type arg0@@2 arg1)) 7))) (forall ((arg0@@3 T@T) (arg1@@0 T@T) ) (! (= (MapType0TypeInv0 (MapType0Type arg0@@3 arg1@@0)) arg0@@3)
 :pattern ( (MapType0Type arg0@@3 arg1@@0))
))) (forall ((arg0@@4 T@T) (arg1@@1 T@T) ) (! (= (MapType0TypeInv1 (MapType0Type arg0@@4 arg1@@1)) arg1@@1)
 :pattern ( (MapType0Type arg0@@4 arg1@@1))
))))
(assert (forall (($prevHeap T@U) ($h0 T@U) ($h1 T@U) (this T@U) (|running#0| T@U) ) (!  (=> (and (and (and (and ($IsGoodHeap $h0) ($IsGoodHeap $h1)) (and (or (not (= this null)) (not true)) (and ($Is refType this Tclass._module.Universe) ($IsAlloc refType this Tclass._module.Universe $h0)))) (or (|_module.Universe.legalTransitionsSequence#canCall| $prevHeap $h0 this |running#0|) (and ($Is SetType |running#0| (TSet Tclass._module.Thread)) ($IsAlloc SetType |running#0| (TSet Tclass._module.Thread) $h0)))) (and ($IsHeapAnchor $h0) ($HeapSucc $h0 $h1))) (=> (forall (($o T@U) ($f T@U) )  (=> (and (or (not (= $o null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0 $o) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0 $o) $f) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1 $o) $f)))) (= (_module.Universe.legalTransitionsSequence $prevHeap $h0 this |running#0|) (_module.Universe.legalTransitionsSequence $prevHeap $h1 this |running#0|))))
 :pattern ( ($IsHeapAnchor $h0) ($HeapSucc $h0 $h1) (_module.Universe.legalTransitionsSequence $prevHeap $h1 this |running#0|))
)))
(assert (= (FDim alloc) 0))
(assert (= (Tag TInt) TagInt))
(assert (= (DeclName alloc) allocName))
(assert  (=> (<= 8 $FunctionContextHeight) (forall (($prevHeap@@0 T@U) ($Heap T@U) (this@@0 T@U) ) (!  (=> (or (|_module.Universe.baseLegalTransitionsSequence#canCall| $prevHeap@@0 $Heap this@@0) (and (< 8 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@0) ($IsGoodHeap $Heap)) ($HeapSucc $prevHeap@@0 $Heap)) (and (or (not (= this@@0 null)) (not true)) (and ($Is refType this@@0 Tclass._module.Universe) ($IsAlloc refType this@@0 Tclass._module.Universe $prevHeap@@0)))))) (and (and (|_module.Universe.globalBaseInv#canCall| $prevHeap@@0 this@@0) (=> (_module.Universe.globalBaseInv $prevHeap@@0 this@@0) (|_module.Universe.globalBaseInv#canCall| $Heap this@@0))) (= (_module.Universe.baseLegalTransitionsSequence $prevHeap@@0 $Heap this@@0)  (and (and (and (_module.Universe.globalBaseInv $prevHeap@@0 this@@0) (_module.Universe.globalBaseInv $Heap this@@0)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@0 this@@0) _module.Universe.content)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Universe.content)))) (forall ((|o#0| T@U) ) (!  (=> (and ($Is refType |o#0| Tclass._module.Object) (and (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@0 this@@0) _module.Universe.content)) ($Box refType |o#0|))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Universe.content)) ($Box refType |o#0|)))) (not ($IsAllocBox ($Box refType |o#0|) Tclass._module.Object $prevHeap@@0)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Universe.content)) ($Box refType |o#0|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@0 this@@0) _module.Universe.content)) ($Box refType |o#0|)))
))))))
 :pattern ( (_module.Universe.baseLegalTransitionsSequence $prevHeap@@0 $Heap this@@0) ($IsGoodHeap $Heap))
))))
(assert (forall ((a T@U) (x@@2 T@U) ) (! (|Set#IsMember| (|Set#UnionOne| a x@@2) x@@2)
 :pattern ( (|Set#UnionOne| a x@@2))
)))
(assert (forall ((a@@0 T@U) (x@@3 T@U) (y T@U) ) (!  (=> (|Set#IsMember| a@@0 y) (|Set#IsMember| (|Set#UnionOne| a@@0 x@@3) y))
 :pattern ( (|Set#UnionOne| a@@0 x@@3) (|Set#IsMember| a@@0 y))
)))
(assert (forall ((a@@1 T@U) (b T@U) (y@@0 T@U) ) (!  (=> (|Set#IsMember| a@@1 y@@0) (|Set#IsMember| (|Set#Union| a@@1 b) y@@0))
 :pattern ( (|Set#Union| a@@1 b) (|Set#IsMember| a@@1 y@@0))
)))
(assert (forall ((a@@2 T@U) (b@@0 T@U) (y@@1 T@U) ) (!  (=> (|Set#IsMember| b@@0 y@@1) (|Set#IsMember| (|Set#Union| a@@2 b@@0) y@@1))
 :pattern ( (|Set#Union| a@@2 b@@0) (|Set#IsMember| b@@0 y@@1))
)))
(assert (forall ((a@@3 T@U) (x@@4 T@U) (o T@U) ) (! (= (|Set#IsMember| (|Set#UnionOne| a@@3 x@@4) o)  (or (= o x@@4) (|Set#IsMember| a@@3 o)))
 :pattern ( (|Set#IsMember| (|Set#UnionOne| a@@3 x@@4) o))
)))
(assert (forall ((a@@4 T@U) (b@@1 T@U) (y@@2 T@U) ) (!  (=> (|Set#IsMember| b@@1 y@@2) (not (|Set#IsMember| (|Set#Difference| a@@4 b@@1) y@@2)))
 :pattern ( (|Set#Difference| a@@4 b@@1) (|Set#IsMember| b@@1 y@@2))
)))
(assert  (=> (<= 7 $FunctionContextHeight) (forall (($Heap@@0 T@U) (this@@1 T@U) ) (!  (=> (or (|_module.Universe.globalBaseInv#canCall| $Heap@@0 this@@1) (and (< 7 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@0) (and (or (not (= this@@1 null)) (not true)) (and ($Is refType this@@1 Tclass._module.Universe) ($IsAlloc refType this@@1 Tclass._module.Universe $Heap@@0)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (forall ((|o#0@@0| T@U) ) (!  (=> ($Is refType |o#0@@0| Tclass._module.Object) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@0 this@@1) _module.Universe.content)) ($Box refType |o#0@@0|)) (=> (= (_module.Object.universe |o#0@@0|) this@@1) (=> (or (not (= |o#0@@0| this@@1)) (not true)) (and (|_module.Object.baseFieldsInv#canCall| $Heap@@0 |o#0@@0|) (=> (_module.Object.baseFieldsInv $Heap@@0 |o#0@@0|) (|_module.Object.triggerAxioms#canCall| $Heap@@0 |o#0@@0|)))))))
 :pattern ( (_module.Object.triggerAxioms $Heap@@0 |o#0@@0|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@0 |o#0@@0|))
 :pattern ( (_module.Object.universe |o#0@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@0 this@@1) _module.Universe.content)) ($Box refType |o#0@@0|)))
))) (= (_module.Universe.globalBaseInv $Heap@@0 this@@1)  (and true (forall ((|o#0@@1| T@U) ) (!  (=> (and ($Is refType |o#0@@1| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@0 this@@1) _module.Universe.content)) ($Box refType |o#0@@1|))) (and (and (and (= (_module.Object.universe |o#0@@1|) this@@1) (or (not (= |o#0@@1| this@@1)) (not true))) (_module.Object.baseFieldsInv $Heap@@0 |o#0@@1|)) (_module.Object.triggerAxioms $Heap@@0 |o#0@@1|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@@0 |o#0@@1|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@0 |o#0@@1|))
 :pattern ( (_module.Object.universe |o#0@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@0 this@@1) _module.Universe.content)) ($Box refType |o#0@@1|)))
))))))
 :pattern ( (_module.Universe.globalBaseInv $Heap@@0 this@@1) ($IsGoodHeap $Heap@@0))
))))
(assert (forall (($prevHeap@@1 T@U) ($h0@@0 T@U) ($h1@@0 T@U) (this@@2 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@0) ($IsGoodHeap $h1@@0)) (and (or (not (= this@@2 null)) (not true)) ($Is refType this@@2 Tclass._module.OwnedObject))) (and ($IsHeapAnchor $h0@@0) ($HeapSucc $h0@@0 $h1@@0))) (=> (forall (($o@@0 T@U) ($f@@0 T@U) )  (=> (and (or (not (= $o@@0 null)) (not true)) (= $o@@0 this@@2)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@0 $o@@0) $f@@0) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@0 $o@@0) $f@@0)))) (= (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@1 $h0@@0 this@@2) (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@1 $h1@@0 this@@2))))
 :pattern ( ($IsHeapAnchor $h0@@0) ($HeapSucc $h0@@0 $h1@@0) (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@1 $h1@@0 this@@2))
)))
(assert (forall (($prevHeap@@2 T@U) ($h0@@1 T@U) ($h1@@1 T@U) (this@@3 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@1) ($IsGoodHeap $h1@@1)) (and (or (not (= this@@3 null)) (not true)) ($Is refType this@@3 Tclass._module.OwnedObject))) (and ($IsHeapAnchor $h0@@1) ($HeapSucc $h0@@1 $h1@@1))) (=> (forall (($o@@1 T@U) ($f@@1 T@U) )  (=> (and (or (not (= $o@@1 null)) (not true)) (= $o@@1 this@@3)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@1 $o@@1) $f@@1) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@1 $o@@1) $f@@1)))) (= (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@2 $h0@@1 this@@3) (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@2 $h1@@1 this@@3))))
 :pattern ( ($IsHeapAnchor $h0@@1) ($HeapSucc $h0@@1 $h1@@1) (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@2 $h1@@1 this@@3))
)))
(assert (forall (($prevHeap@@3 T@U) ($h0@@2 T@U) ($h1@@2 T@U) (this@@4 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@2) ($IsGoodHeap $h1@@2)) (and (or (not (= this@@4 null)) (not true)) ($Is refType this@@4 Tclass._module.Lifetime))) (and ($IsHeapAnchor $h0@@2) ($HeapSucc $h0@@2 $h1@@2))) (=> (forall (($o@@2 T@U) ($f@@2 T@U) )  (=> (and (or (not (= $o@@2 null)) (not true)) (= $o@@2 this@@4)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@2 $o@@2) $f@@2) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@2 $o@@2) $f@@2)))) (= (_module.Lifetime.unchangedNonvolatileFields $prevHeap@@3 $h0@@2 this@@4) (_module.Lifetime.unchangedNonvolatileFields $prevHeap@@3 $h1@@2 this@@4))))
 :pattern ( ($IsHeapAnchor $h0@@2) ($HeapSucc $h0@@2 $h1@@2) (_module.Lifetime.unchangedNonvolatileFields $prevHeap@@3 $h1@@2 this@@4))
)))
(assert (forall (($prevHeap@@4 T@U) ($h0@@3 T@U) ($h1@@3 T@U) (this@@5 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@3) ($IsGoodHeap $h1@@3)) (and (or (not (= this@@5 null)) (not true)) ($Is refType this@@5 Tclass._module.OwnedU32))) (and ($IsHeapAnchor $h0@@3) ($HeapSucc $h0@@3 $h1@@3))) (=> (forall (($o@@3 T@U) ($f@@3 T@U) )  (=> (and (or (not (= $o@@3 null)) (not true)) (= $o@@3 this@@5)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@3 $o@@3) $f@@3) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@3 $o@@3) $f@@3)))) (= (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@4 $h0@@3 this@@5) (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@4 $h1@@3 this@@5))))
 :pattern ( ($IsHeapAnchor $h0@@3) ($HeapSucc $h0@@3 $h1@@3) (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@4 $h1@@3 this@@5))
)))
(assert (implements$_module.Object Tclass._module.Thread?))
(assert (implements$_module.Object Tclass._module.Lifetime?))
(assert (implements$_module.OwnedObject Tclass._module.OwnedU32?))
(assert (forall ((o@@0 T@U) ) (!  (not (|Set#IsMember| |Set#Empty| o@@0))
 :pattern ( (|Set#IsMember| |Set#Empty| o@@0))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@1 T@U) (this@@6 T@U) ) (!  (=> (or (|_module.OwnedU32.objectUserFields#canCall| $Heap@@1 this@@6) (and (< 1 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@1) (and (or (not (= this@@6 null)) (not true)) (and ($Is refType this@@6 Tclass._module.OwnedU32) ($IsAlloc refType this@@6 Tclass._module.OwnedU32 $Heap@@1)))))) (= (_module.OwnedU32.objectUserFields $Heap@@1 this@@6) (Lit SetType |Set#Empty|)))
 :pattern ( (_module.OwnedU32.objectUserFields $Heap@@1 this@@6) ($IsGoodHeap $Heap@@1))
))))
(assert  (=> (<= 16 $FunctionContextHeight) (forall (($Heap@@2 T@U) (this@@7 T@U) ) (!  (=> (or (|_module.Universe.globalInv#canCall| $Heap@@2 this@@7) (and (< 16 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@2) (and (or (not (= this@@7 null)) (not true)) (and ($Is refType this@@7 Tclass._module.Universe) ($IsAlloc refType this@@7 Tclass._module.Universe $Heap@@2)))))) (and (and (|_module.Universe.globalBaseInv#canCall| $Heap@@2 this@@7) (=> (_module.Universe.globalBaseInv $Heap@@2 this@@7) (forall ((|o#0@@2| T@U) ) (!  (=> ($Is refType |o#0@@2| Tclass._module.Object) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@2 this@@7) _module.Universe.content)) ($Box refType |o#0@@2|)) (|_module.Object.inv#canCall| $Heap@@2 |o#0@@2|)))
 :pattern ( (_module.Object.inv $Heap@@2 |o#0@@2|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@2 this@@7) _module.Universe.content)) ($Box refType |o#0@@2|)))
)))) (= (_module.Universe.globalInv $Heap@@2 this@@7)  (and (_module.Universe.globalBaseInv $Heap@@2 this@@7) (forall ((|o#0@@3| T@U) ) (!  (=> (and ($Is refType |o#0@@3| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@2 this@@7) _module.Universe.content)) ($Box refType |o#0@@3|))) (_module.Object.inv $Heap@@2 |o#0@@3|))
 :pattern ( (_module.Object.inv $Heap@@2 |o#0@@3|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@2 this@@7) _module.Universe.content)) ($Box refType |o#0@@3|)))
))))))
 :pattern ( (_module.Universe.globalInv $Heap@@2 this@@7) ($IsGoodHeap $Heap@@2))
))))
(assert (= (DatatypeCtorId |#_module.ObjectClassKind.Thread|) |##_module.ObjectClassKind.Thread|))
(assert (= (DatatypeCtorId |#_module.ObjectClassKind.OwnedObject|) |##_module.ObjectClassKind.OwnedObject|))
(assert (= (DatatypeCtorId |#_module.ObjectClassKind.Lifetime|) |##_module.ObjectClassKind.Lifetime|))
(assert (forall (($o@@4 T@U) ) (! (= ($Is refType $o@@4 Tclass._module.Thread?)  (or (= $o@@4 null) (= (dtype $o@@4) Tclass._module.Thread?)))
 :pattern ( ($Is refType $o@@4 Tclass._module.Thread?))
)))
(assert (forall (($o@@5 T@U) ) (! (= ($Is refType $o@@5 Tclass._module.Lifetime?)  (or (= $o@@5 null) (= (dtype $o@@5) Tclass._module.Lifetime?)))
 :pattern ( ($Is refType $o@@5 Tclass._module.Lifetime?))
)))
(assert (forall (($o@@6 T@U) ) (! (= ($Is refType $o@@6 Tclass._module.OwnedU32?)  (or (= $o@@6 null) (= (dtype $o@@6) Tclass._module.OwnedU32?)))
 :pattern ( ($Is refType $o@@6 Tclass._module.OwnedU32?))
)))
(assert (forall ((a@@5 T@U) (b@@2 T@U) ) (! (= (|Set#Union| (|Set#Union| a@@5 b@@2) b@@2) (|Set#Union| a@@5 b@@2))
 :pattern ( (|Set#Union| (|Set#Union| a@@5 b@@2) b@@2))
)))
(assert (forall (($prevHeap@@5 T@U) ($h0@@4 T@U) ($h1@@4 T@U) (this@@8 T@U) (|running#0@@0| T@U) ) (!  (=> (and (and (and (and ($IsGoodHeap $h0@@4) ($IsGoodHeap $h1@@4)) (and (or (not (= this@@8 null)) (not true)) (and ($Is refType this@@8 Tclass._module.Universe) ($IsAlloc refType this@@8 Tclass._module.Universe $h0@@4)))) (or (|_module.Universe.legalTransition#canCall| $prevHeap@@5 $h0@@4 this@@8 |running#0@@0|) (and ($Is refType |running#0@@0| Tclass._module.Thread) ($IsAlloc refType |running#0@@0| Tclass._module.Thread $h0@@4)))) (and ($IsHeapAnchor $h0@@4) ($HeapSucc $h0@@4 $h1@@4))) (=> (forall (($o@@7 T@U) ($f@@4 T@U) )  (=> (and (or (not (= $o@@7 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@4 $o@@7) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@4 $o@@7) $f@@4) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@4 $o@@7) $f@@4)))) (= (_module.Universe.legalTransition $prevHeap@@5 $h0@@4 this@@8 |running#0@@0|) (_module.Universe.legalTransition $prevHeap@@5 $h1@@4 this@@8 |running#0@@0|))))
 :pattern ( ($IsHeapAnchor $h0@@4) ($HeapSucc $h0@@4 $h1@@4) (_module.Universe.legalTransition $prevHeap@@5 $h1@@4 this@@8 |running#0@@0|))
)))
(assert (forall (($prevHeap@@6 T@U) ($h0@@5 T@U) ($h1@@5 T@U) (this@@9 T@U) (|running#0@@1| T@U) ) (!  (=> (and (and (and (and ($IsGoodHeap $h0@@5) ($IsGoodHeap $h1@@5)) (and (or (not (= this@@9 null)) (not true)) (and ($Is refType this@@9 Tclass._module.Object) ($IsAlloc refType this@@9 Tclass._module.Object $h0@@5)))) (or (|_module.Object.goodPreAndLegalChanges#canCall| $prevHeap@@6 $h0@@5 this@@9 |running#0@@1|) (and ($Is refType |running#0@@1| Tclass._module.Thread) ($IsAlloc refType |running#0@@1| Tclass._module.Thread $h0@@5)))) (and ($IsHeapAnchor $h0@@5) ($HeapSucc $h0@@5 $h1@@5))) (=> (forall (($o@@8 T@U) ($f@@5 T@U) )  (=> (and (or (not (= $o@@8 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@5 $o@@8) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@5 $o@@8) $f@@5) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@5 $o@@8) $f@@5)))) (= (_module.Object.goodPreAndLegalChanges $prevHeap@@6 $h0@@5 this@@9 |running#0@@1|) (_module.Object.goodPreAndLegalChanges $prevHeap@@6 $h1@@5 this@@9 |running#0@@1|))))
 :pattern ( ($IsHeapAnchor $h0@@5) ($HeapSucc $h0@@5 $h1@@5) (_module.Object.goodPreAndLegalChanges $prevHeap@@6 $h1@@5 this@@9 |running#0@@1|))
)))
(assert (forall ((a@@6 T@U) (b@@3 T@U) (o@@1 T@U) ) (! (= (|Set#IsMember| (|Set#Difference| a@@6 b@@3) o@@1)  (and (|Set#IsMember| a@@6 o@@1) (not (|Set#IsMember| b@@3 o@@1))))
 :pattern ( (|Set#IsMember| (|Set#Difference| a@@6 b@@3) o@@1))
)))
(assert (forall (($h T@U) ($o@@9 T@U) ) (!  (=> (and ($IsGoodHeap $h) (and (or (not (= $o@@9 null)) (not true)) ($Is refType $o@@9 Tclass._module.OwnedObject?))) ($Is intType ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h $o@@9) _module.OwnedObject.nonvolatileVersion)) TInt))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h $o@@9) _module.OwnedObject.nonvolatileVersion)))
)))
(assert (forall ((bx T@U) ($h@@0 T@U) ) (!  (=> (and ($IsAllocBox bx Tclass._module.Thread? $h@@0) ($IsGoodHeap $h@@0)) ($IsAllocBox bx Tclass._module.Object? $h@@0))
 :pattern ( ($IsAllocBox bx Tclass._module.Thread? $h@@0))
)))
(assert (forall ((bx@@0 T@U) ($h@@1 T@U) ) (!  (=> (and ($IsAllocBox bx@@0 Tclass._module.OwnedObject? $h@@1) ($IsGoodHeap $h@@1)) ($IsAllocBox bx@@0 Tclass._module.Object? $h@@1))
 :pattern ( ($IsAllocBox bx@@0 Tclass._module.OwnedObject? $h@@1))
)))
(assert (forall ((bx@@1 T@U) ($h@@2 T@U) ) (!  (=> (and ($IsAllocBox bx@@1 Tclass._module.Lifetime? $h@@2) ($IsGoodHeap $h@@2)) ($IsAllocBox bx@@1 Tclass._module.Object? $h@@2))
 :pattern ( ($IsAllocBox bx@@1 Tclass._module.Lifetime? $h@@2))
)))
(assert (forall ((bx@@2 T@U) ($h@@3 T@U) ) (!  (=> (and ($IsAllocBox bx@@2 Tclass._module.OwnedU32? $h@@3) ($IsGoodHeap $h@@3)) ($IsAllocBox bx@@2 Tclass._module.OwnedObject? $h@@3))
 :pattern ( ($IsAllocBox bx@@2 Tclass._module.OwnedU32? $h@@3))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@7 T@U) ($Heap@@3 T@U) (this@@10 T@U) ) (!  (=> (or (|_module.Lifetime.unchangedNonvolatileFields#canCall| $prevHeap@@7 $Heap@@3 this@@10) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@7) ($IsGoodHeap $Heap@@3)) ($HeapSucc $prevHeap@@7 $Heap@@3)) (and (or (not (= this@@10 null)) (not true)) (and ($Is refType this@@10 Tclass._module.Lifetime) ($IsAlloc refType this@@10 Tclass._module.Lifetime $prevHeap@@7)))))) (= (_module.Lifetime.unchangedNonvolatileFields $prevHeap@@7 $Heap@@3 this@@10)  (and (and (and (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@7 this@@10) _module.Lifetime.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 this@@10) _module.Lifetime.owner))) (|Set#Equal| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@7 this@@10) _module.Lifetime.elements)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 this@@10) _module.Lifetime.elements)))) (|Set#Equal| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@7 this@@10) _module.Lifetime.mightPointTo)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 this@@10) _module.Lifetime.mightPointTo)))) (|Set#Equal| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@7 this@@10) _module.Lifetime.mightPointFrom)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 this@@10) _module.Lifetime.mightPointFrom))))))
 :pattern ( (_module.Lifetime.unchangedNonvolatileFields $prevHeap@@7 $Heap@@3 this@@10) ($IsGoodHeap $Heap@@3))
))))
(assert (forall ((|c#0| T@U) ($h@@4 T@U) ) (! (= ($IsAlloc refType |c#0| Tclass._module.Universe $h@@4) ($IsAlloc refType |c#0| Tclass._module.Universe? $h@@4))
 :pattern ( ($IsAlloc refType |c#0| Tclass._module.Universe $h@@4))
 :pattern ( ($IsAlloc refType |c#0| Tclass._module.Universe? $h@@4))
)))
(assert (forall ((|c#0@@0| T@U) ($h@@5 T@U) ) (! (= ($IsAlloc refType |c#0@@0| Tclass._module.Object $h@@5) ($IsAlloc refType |c#0@@0| Tclass._module.Object? $h@@5))
 :pattern ( ($IsAlloc refType |c#0@@0| Tclass._module.Object $h@@5))
 :pattern ( ($IsAlloc refType |c#0@@0| Tclass._module.Object? $h@@5))
)))
(assert (forall ((|c#0@@1| T@U) ($h@@6 T@U) ) (! (= ($IsAlloc refType |c#0@@1| Tclass._module.Thread $h@@6) ($IsAlloc refType |c#0@@1| Tclass._module.Thread? $h@@6))
 :pattern ( ($IsAlloc refType |c#0@@1| Tclass._module.Thread $h@@6))
 :pattern ( ($IsAlloc refType |c#0@@1| Tclass._module.Thread? $h@@6))
)))
(assert (forall ((|c#0@@2| T@U) ($h@@7 T@U) ) (! (= ($IsAlloc refType |c#0@@2| Tclass._module.OwnedObject $h@@7) ($IsAlloc refType |c#0@@2| Tclass._module.OwnedObject? $h@@7))
 :pattern ( ($IsAlloc refType |c#0@@2| Tclass._module.OwnedObject $h@@7))
 :pattern ( ($IsAlloc refType |c#0@@2| Tclass._module.OwnedObject? $h@@7))
)))
(assert (forall ((|c#0@@3| T@U) ($h@@8 T@U) ) (! (= ($IsAlloc refType |c#0@@3| Tclass._module.Lifetime $h@@8) ($IsAlloc refType |c#0@@3| Tclass._module.Lifetime? $h@@8))
 :pattern ( ($IsAlloc refType |c#0@@3| Tclass._module.Lifetime $h@@8))
 :pattern ( ($IsAlloc refType |c#0@@3| Tclass._module.Lifetime? $h@@8))
)))
(assert (forall ((|c#0@@4| T@U) ($h@@9 T@U) ) (! (= ($IsAlloc refType |c#0@@4| Tclass._module.OwnedU32 $h@@9) ($IsAlloc refType |c#0@@4| Tclass._module.OwnedU32? $h@@9))
 :pattern ( ($IsAlloc refType |c#0@@4| Tclass._module.OwnedU32 $h@@9))
 :pattern ( ($IsAlloc refType |c#0@@4| Tclass._module.OwnedU32? $h@@9))
)))
(assert (= (FDim _module.Universe.content) 0))
(assert (= (FieldOfDecl class._module.Universe? field$content) _module.Universe.content))
(assert ($IsGhostField _module.Universe.content))
(assert (= (FDim _module.OwnedObject.owner) 0))
(assert (= (FieldOfDecl class._module.OwnedObject? field$owner) _module.OwnedObject.owner))
(assert ($IsGhostField _module.OwnedObject.owner))
(assert (= (FDim _module.OwnedObject.nonvolatileVersion) 0))
(assert (= (FieldOfDecl class._module.OwnedObject? field$nonvolatileVersion) _module.OwnedObject.nonvolatileVersion))
(assert ($IsGhostField _module.OwnedObject.nonvolatileVersion))
(assert (= (FDim _module.Lifetime.owner) 0))
(assert (= (FieldOfDecl class._module.Lifetime? field$owner) _module.Lifetime.owner))
(assert ($IsGhostField _module.Lifetime.owner))
(assert (= (FDim _module.Lifetime.mightPointTo) 0))
(assert (= (FieldOfDecl class._module.Lifetime? field$mightPointTo) _module.Lifetime.mightPointTo))
(assert ($IsGhostField _module.Lifetime.mightPointTo))
(assert (= (FDim _module.Lifetime.mightPointFrom) 0))
(assert (= (FieldOfDecl class._module.Lifetime? field$mightPointFrom) _module.Lifetime.mightPointFrom))
(assert ($IsGhostField _module.Lifetime.mightPointFrom))
(assert (= (FDim _module.Lifetime.elements) 0))
(assert (= (FieldOfDecl class._module.Lifetime? field$elements) _module.Lifetime.elements))
(assert ($IsGhostField _module.Lifetime.elements))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap@@4 T@U) (this@@11 T@U) ) (!  (=> (or (|_module.OwnedU32.localUserInv#canCall| $Heap@@4 this@@11) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@11 null)) (not true)) ($Is refType this@@11 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.localUserInv $Heap@@4 this@@11) (_module.OwnedU32.localUserInv $Heap@@4 this@@11)))
 :pattern ( (_module.OwnedObject.localUserInv $Heap@@4 this@@11) ($Is refType this@@11 Tclass._module.OwnedU32) ($IsGoodHeap $Heap@@4))
 :pattern ( (_module.OwnedObject.localUserInv $Heap@@4 this@@11) (_module.OwnedU32.localUserInv $Heap@@4 this@@11) ($IsGoodHeap $Heap@@4))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@5 T@U) (this@@12 T@U) ) (!  (=> (or (|_module.OwnedU32.userInv#canCall| $Heap@@5 this@@12) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@12 null)) (not true)) ($Is refType this@@12 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.userInv $Heap@@5 this@@12) (_module.OwnedU32.userInv $Heap@@5 this@@12)))
 :pattern ( (_module.OwnedObject.userInv $Heap@@5 this@@12) ($Is refType this@@12 Tclass._module.OwnedU32) ($IsGoodHeap $Heap@@5))
 :pattern ( (_module.OwnedObject.userInv $Heap@@5 this@@12) (_module.OwnedU32.userInv $Heap@@5 this@@12) ($IsGoodHeap $Heap@@5))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@6 T@U) (this@@13 T@U) ) (!  (=> (or (|_module.Thread.baseFieldsInv#canCall| $Heap@@6 this@@13) (and (< 2 $FunctionContextHeight) (and (or (not (= this@@13 null)) (not true)) ($Is refType this@@13 Tclass._module.Thread)))) (= (_module.Object.baseFieldsInv $Heap@@6 this@@13) (_module.Thread.baseFieldsInv $Heap@@6 this@@13)))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@6 this@@13) ($Is refType this@@13 Tclass._module.Thread) ($IsGoodHeap $Heap@@6))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@6 this@@13) (_module.Thread.baseFieldsInv $Heap@@6 this@@13) ($IsGoodHeap $Heap@@6))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@7 T@U) (this@@14 T@U) ) (!  (=> (or (|_module.Lifetime.baseFieldsInv#canCall| $Heap@@7 this@@14) (and (< 2 $FunctionContextHeight) (and (or (not (= this@@14 null)) (not true)) ($Is refType this@@14 Tclass._module.Lifetime)))) (= (_module.Object.baseFieldsInv $Heap@@7 this@@14) (_module.Lifetime.baseFieldsInv $Heap@@7 this@@14)))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@7 this@@14) ($Is refType this@@14 Tclass._module.Lifetime) ($IsGoodHeap $Heap@@7))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@7 this@@14) (_module.Lifetime.baseFieldsInv $Heap@@7 this@@14) ($IsGoodHeap $Heap@@7))
))))
(assert  (=> (<= 5 $FunctionContextHeight) (forall (($Heap@@8 T@U) (this@@15 T@U) ) (!  (=> (or (|_module.OwnedObject.baseFieldsInv#canCall| $Heap@@8 this@@15) (and (< 5 $FunctionContextHeight) (and (or (not (= this@@15 null)) (not true)) ($Is refType this@@15 Tclass._module.OwnedObject)))) (= (_module.Object.baseFieldsInv $Heap@@8 this@@15) (_module.OwnedObject.baseFieldsInv $Heap@@8 this@@15)))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@8 this@@15) ($Is refType this@@15 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@8))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@8 this@@15) (_module.OwnedObject.baseFieldsInv $Heap@@8 this@@15) ($IsGoodHeap $Heap@@8))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@9 T@U) (this@@16 T@U) ) (!  (=> (or (|_module.Thread.localInv#canCall| $Heap@@9 this@@16) (and (< 9 $FunctionContextHeight) (and (or (not (= this@@16 null)) (not true)) ($Is refType this@@16 Tclass._module.Thread)))) (= (_module.Object.localInv $Heap@@9 this@@16) (_module.Thread.localInv $Heap@@9 this@@16)))
 :pattern ( (_module.Object.localInv $Heap@@9 this@@16) ($Is refType this@@16 Tclass._module.Thread) ($IsGoodHeap $Heap@@9))
 :pattern ( (_module.Object.localInv $Heap@@9 this@@16) (_module.Thread.localInv $Heap@@9 this@@16) ($IsGoodHeap $Heap@@9))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@10 T@U) (this@@17 T@U) ) (!  (=> (or (|_module.Lifetime.localInv#canCall| $Heap@@10 this@@17) (and (< 9 $FunctionContextHeight) (and (or (not (= this@@17 null)) (not true)) ($Is refType this@@17 Tclass._module.Lifetime)))) (= (_module.Object.localInv $Heap@@10 this@@17) (_module.Lifetime.localInv $Heap@@10 this@@17)))
 :pattern ( (_module.Object.localInv $Heap@@10 this@@17) ($Is refType this@@17 Tclass._module.Lifetime) ($IsGoodHeap $Heap@@10))
 :pattern ( (_module.Object.localInv $Heap@@10 this@@17) (_module.Lifetime.localInv $Heap@@10 this@@17) ($IsGoodHeap $Heap@@10))
))))
(assert  (=> (<= 10 $FunctionContextHeight) (forall (($Heap@@11 T@U) (this@@18 T@U) ) (!  (=> (or (|_module.Thread.inv#canCall| $Heap@@11 this@@18) (and (< 10 $FunctionContextHeight) (and (or (not (= this@@18 null)) (not true)) ($Is refType this@@18 Tclass._module.Thread)))) (= (_module.Object.inv $Heap@@11 this@@18) (_module.Thread.inv $Heap@@11 this@@18)))
 :pattern ( (_module.Object.inv $Heap@@11 this@@18) ($Is refType this@@18 Tclass._module.Thread) ($IsGoodHeap $Heap@@11))
 :pattern ( (_module.Object.inv $Heap@@11 this@@18) (_module.Thread.inv $Heap@@11 this@@18) ($IsGoodHeap $Heap@@11))
))))
(assert  (=> (<= 10 $FunctionContextHeight) (forall (($Heap@@12 T@U) (this@@19 T@U) ) (!  (=> (or (|_module.Lifetime.inv#canCall| $Heap@@12 this@@19) (and (< 10 $FunctionContextHeight) (and (or (not (= this@@19 null)) (not true)) ($Is refType this@@19 Tclass._module.Lifetime)))) (= (_module.Object.inv $Heap@@12 this@@19) (_module.Lifetime.inv $Heap@@12 this@@19)))
 :pattern ( (_module.Object.inv $Heap@@12 this@@19) ($Is refType this@@19 Tclass._module.Lifetime) ($IsGoodHeap $Heap@@12))
 :pattern ( (_module.Object.inv $Heap@@12 this@@19) (_module.Lifetime.inv $Heap@@12 this@@19) ($IsGoodHeap $Heap@@12))
))))
(assert  (=> (<= 11 $FunctionContextHeight) (forall (($Heap@@13 T@U) (this@@20 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv#canCall| $Heap@@13 this@@20) (and (< 11 $FunctionContextHeight) (and (or (not (= this@@20 null)) (not true)) ($Is refType this@@20 Tclass._module.OwnedObject)))) (= (_module.Object.localInv $Heap@@13 this@@20) (_module.OwnedObject.localInv $Heap@@13 this@@20)))
 :pattern ( (_module.Object.localInv $Heap@@13 this@@20) ($Is refType this@@20 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@13))
 :pattern ( (_module.Object.localInv $Heap@@13 this@@20) (_module.OwnedObject.localInv $Heap@@13 this@@20) ($IsGoodHeap $Heap@@13))
))))
(assert  (=> (<= 14 $FunctionContextHeight) (forall (($Heap@@14 T@U) (this@@21 T@U) ) (!  (=> (or (|_module.OwnedObject.inv#canCall| $Heap@@14 this@@21) (and (< 14 $FunctionContextHeight) (and (or (not (= this@@21 null)) (not true)) ($Is refType this@@21 Tclass._module.OwnedObject)))) (= (_module.Object.inv $Heap@@14 this@@21) (_module.OwnedObject.inv $Heap@@14 this@@21)))
 :pattern ( (_module.Object.inv $Heap@@14 this@@21) ($Is refType this@@21 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@14))
 :pattern ( (_module.Object.inv $Heap@@14 this@@21) (_module.OwnedObject.inv $Heap@@14 this@@21) ($IsGoodHeap $Heap@@14))
))))
(assert (= (Ctor DatatypeTypeType) 8))
(assert ($Is DatatypeTypeType |#_module.ObjectClassKind.Thread| Tclass._module.ObjectClassKind))
(assert ($Is DatatypeTypeType |#_module.ObjectClassKind.OwnedObject| Tclass._module.ObjectClassKind))
(assert ($Is DatatypeTypeType |#_module.ObjectClassKind.Lifetime| Tclass._module.ObjectClassKind))
(assert (= (FDim _module.OwnedU32.value) 0))
(assert (= (FieldOfDecl class._module.OwnedU32? field$value) _module.OwnedU32.value))
(assert  (not ($IsGhostField _module.OwnedU32.value)))
(assert (forall (($prevHeap@@8 T@U) ($h0@@6 T@U) ($h1@@6 T@U) (this@@22 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@6) ($IsGoodHeap $h1@@6)) (and (or (not (= this@@22 null)) (not true)) (and ($Is refType this@@22 Tclass._module.Universe) ($IsAlloc refType this@@22 Tclass._module.Universe $h0@@6)))) (and ($IsHeapAnchor $h0@@6) ($HeapSucc $h0@@6 $h1@@6))) (=> (forall (($o@@10 T@U) ($f@@6 T@U) )  (=> (and (or (not (= $o@@10 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@6 $o@@10) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@6 $o@@10) $f@@6) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@6 $o@@10) $f@@6)))) (= (_module.Universe.baseLegalTransitionsSequence $prevHeap@@8 $h0@@6 this@@22) (_module.Universe.baseLegalTransitionsSequence $prevHeap@@8 $h1@@6 this@@22))))
 :pattern ( ($IsHeapAnchor $h0@@6) ($HeapSucc $h0@@6 $h1@@6) (_module.Universe.baseLegalTransitionsSequence $prevHeap@@8 $h1@@6 this@@22))
)))
(assert (forall (($prevHeap@@9 T@U) ($h0@@7 T@U) ($h1@@7 T@U) (this@@23 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@7) ($IsGoodHeap $h1@@7)) (and (or (not (= this@@23 null)) (not true)) (and ($Is refType this@@23 Tclass._module.Object) ($IsAlloc refType this@@23 Tclass._module.Object $h0@@7)))) (and ($IsHeapAnchor $h0@@7) ($HeapSucc $h0@@7 $h1@@7))) (=> (forall (($o@@11 T@U) ($f@@7 T@U) )  (=> (and (or (not (= $o@@11 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@7 $o@@11) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@7 $o@@11) $f@@7) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@7 $o@@11) $f@@7)))) (= (_module.Object.localInv2 $prevHeap@@9 $h0@@7 this@@23) (_module.Object.localInv2 $prevHeap@@9 $h1@@7 this@@23))))
 :pattern ( ($IsHeapAnchor $h0@@7) ($HeapSucc $h0@@7 $h1@@7) (_module.Object.localInv2 $prevHeap@@9 $h1@@7 this@@23))
)))
(assert (forall (($prevHeap@@10 T@U) ($h0@@8 T@U) ($h1@@8 T@U) (this@@24 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@8) ($IsGoodHeap $h1@@8)) (and (or (not (= this@@24 null)) (not true)) (and ($Is refType this@@24 Tclass._module.Object) ($IsAlloc refType this@@24 Tclass._module.Object $h0@@8)))) (and ($IsHeapAnchor $h0@@8) ($HeapSucc $h0@@8 $h1@@8))) (=> (forall (($o@@12 T@U) ($f@@8 T@U) )  (=> (and (or (not (= $o@@12 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@8 $o@@12) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@8 $o@@12) $f@@8) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@8 $o@@12) $f@@8)))) (= (_module.Object.sequenceInv2 $prevHeap@@10 $h0@@8 this@@24) (_module.Object.sequenceInv2 $prevHeap@@10 $h1@@8 this@@24))))
 :pattern ( ($IsHeapAnchor $h0@@8) ($HeapSucc $h0@@8 $h1@@8) (_module.Object.sequenceInv2 $prevHeap@@10 $h1@@8 this@@24))
)))
(assert (forall (($prevHeap@@11 T@U) ($h0@@9 T@U) ($h1@@9 T@U) (this@@25 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@9) ($IsGoodHeap $h1@@9)) (and (or (not (= this@@25 null)) (not true)) (and ($Is refType this@@25 Tclass._module.Object) ($IsAlloc refType this@@25 Tclass._module.Object $h0@@9)))) (and ($IsHeapAnchor $h0@@9) ($HeapSucc $h0@@9 $h1@@9))) (=> (forall (($o@@13 T@U) ($f@@9 T@U) )  (=> (and (or (not (= $o@@13 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@9 $o@@13) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@9 $o@@13) $f@@9) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@9 $o@@13) $f@@9)))) (= (_module.Object.inv2 $prevHeap@@11 $h0@@9 this@@25) (_module.Object.inv2 $prevHeap@@11 $h1@@9 this@@25))))
 :pattern ( ($IsHeapAnchor $h0@@9) ($HeapSucc $h0@@9 $h1@@9) (_module.Object.inv2 $prevHeap@@11 $h1@@9 this@@25))
)))
(assert (forall (($prevHeap@@12 T@U) ($h0@@10 T@U) ($h1@@10 T@U) (this@@26 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@10) ($IsGoodHeap $h1@@10)) (and (or (not (= this@@26 null)) (not true)) (and ($Is refType this@@26 Tclass._module.Thread) ($IsAlloc refType this@@26 Tclass._module.Thread $h0@@10)))) (and ($IsHeapAnchor $h0@@10) ($HeapSucc $h0@@10 $h1@@10))) (=> (forall (($o@@14 T@U) ($f@@10 T@U) )  (=> (and (or (not (= $o@@14 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@10 $o@@14) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@10 $o@@14) $f@@10) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@10 $o@@14) $f@@10)))) (= (_module.Thread.localInv2 $prevHeap@@12 $h0@@10 this@@26) (_module.Thread.localInv2 $prevHeap@@12 $h1@@10 this@@26))))
 :pattern ( ($IsHeapAnchor $h0@@10) ($HeapSucc $h0@@10 $h1@@10) (_module.Thread.localInv2 $prevHeap@@12 $h1@@10 this@@26))
)))
(assert (forall (($prevHeap@@13 T@U) ($h0@@11 T@U) ($h1@@11 T@U) (this@@27 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@11) ($IsGoodHeap $h1@@11)) (and (or (not (= this@@27 null)) (not true)) (and ($Is refType this@@27 Tclass._module.Thread) ($IsAlloc refType this@@27 Tclass._module.Thread $h0@@11)))) (and ($IsHeapAnchor $h0@@11) ($HeapSucc $h0@@11 $h1@@11))) (=> (forall (($o@@15 T@U) ($f@@11 T@U) )  (=> (and (or (not (= $o@@15 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@11 $o@@15) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@11 $o@@15) $f@@11) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@11 $o@@15) $f@@11)))) (= (_module.Thread.sequenceInv2 $prevHeap@@13 $h0@@11 this@@27) (_module.Thread.sequenceInv2 $prevHeap@@13 $h1@@11 this@@27))))
 :pattern ( ($IsHeapAnchor $h0@@11) ($HeapSucc $h0@@11 $h1@@11) (_module.Thread.sequenceInv2 $prevHeap@@13 $h1@@11 this@@27))
)))
(assert (forall (($prevHeap@@14 T@U) ($h0@@12 T@U) ($h1@@12 T@U) (this@@28 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@12) ($IsGoodHeap $h1@@12)) (and (or (not (= this@@28 null)) (not true)) (and ($Is refType this@@28 Tclass._module.Thread) ($IsAlloc refType this@@28 Tclass._module.Thread $h0@@12)))) (and ($IsHeapAnchor $h0@@12) ($HeapSucc $h0@@12 $h1@@12))) (=> (forall (($o@@16 T@U) ($f@@12 T@U) )  (=> (and (or (not (= $o@@16 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@12 $o@@16) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@12 $o@@16) $f@@12) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@12 $o@@16) $f@@12)))) (= (_module.Thread.inv2 $prevHeap@@14 $h0@@12 this@@28) (_module.Thread.inv2 $prevHeap@@14 $h1@@12 this@@28))))
 :pattern ( ($IsHeapAnchor $h0@@12) ($HeapSucc $h0@@12 $h1@@12) (_module.Thread.inv2 $prevHeap@@14 $h1@@12 this@@28))
)))
(assert (forall (($prevHeap@@15 T@U) ($h0@@13 T@U) ($h1@@13 T@U) (this@@29 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@13) ($IsGoodHeap $h1@@13)) (and (or (not (= this@@29 null)) (not true)) (and ($Is refType this@@29 Tclass._module.OwnedObject) ($IsAlloc refType this@@29 Tclass._module.OwnedObject $h0@@13)))) (and ($IsHeapAnchor $h0@@13) ($HeapSucc $h0@@13 $h1@@13))) (=> (forall (($o@@17 T@U) ($f@@13 T@U) )  (=> (and (or (not (= $o@@17 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@13 $o@@17) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@13 $o@@17) $f@@13) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@13 $o@@17) $f@@13)))) (= (_module.OwnedObject.localInv2 $prevHeap@@15 $h0@@13 this@@29) (_module.OwnedObject.localInv2 $prevHeap@@15 $h1@@13 this@@29))))
 :pattern ( ($IsHeapAnchor $h0@@13) ($HeapSucc $h0@@13 $h1@@13) (_module.OwnedObject.localInv2 $prevHeap@@15 $h1@@13 this@@29))
)))
(assert (forall (($prevHeap@@16 T@U) ($h0@@14 T@U) ($h1@@14 T@U) (this@@30 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@14) ($IsGoodHeap $h1@@14)) (and (or (not (= this@@30 null)) (not true)) (and ($Is refType this@@30 Tclass._module.OwnedObject) ($IsAlloc refType this@@30 Tclass._module.OwnedObject $h0@@14)))) (and ($IsHeapAnchor $h0@@14) ($HeapSucc $h0@@14 $h1@@14))) (=> (forall (($o@@18 T@U) ($f@@14 T@U) )  (=> (and (or (not (= $o@@18 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@14 $o@@18) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@14 $o@@18) $f@@14) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@14 $o@@18) $f@@14)))) (= (_module.OwnedObject.sequenceInv2 $prevHeap@@16 $h0@@14 this@@30) (_module.OwnedObject.sequenceInv2 $prevHeap@@16 $h1@@14 this@@30))))
 :pattern ( ($IsHeapAnchor $h0@@14) ($HeapSucc $h0@@14 $h1@@14) (_module.OwnedObject.sequenceInv2 $prevHeap@@16 $h1@@14 this@@30))
)))
(assert (forall (($prevHeap@@17 T@U) ($h0@@15 T@U) ($h1@@15 T@U) (this@@31 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@15) ($IsGoodHeap $h1@@15)) (and (or (not (= this@@31 null)) (not true)) (and ($Is refType this@@31 Tclass._module.OwnedObject) ($IsAlloc refType this@@31 Tclass._module.OwnedObject $h0@@15)))) (and ($IsHeapAnchor $h0@@15) ($HeapSucc $h0@@15 $h1@@15))) (=> (forall (($o@@19 T@U) ($f@@15 T@U) )  (=> (and (or (not (= $o@@19 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@15 $o@@19) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@15 $o@@19) $f@@15) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@15 $o@@19) $f@@15)))) (= (_module.OwnedObject.inv2 $prevHeap@@17 $h0@@15 this@@31) (_module.OwnedObject.inv2 $prevHeap@@17 $h1@@15 this@@31))))
 :pattern ( ($IsHeapAnchor $h0@@15) ($HeapSucc $h0@@15 $h1@@15) (_module.OwnedObject.inv2 $prevHeap@@17 $h1@@15 this@@31))
)))
(assert (forall (($prevHeap@@18 T@U) ($h0@@16 T@U) ($h1@@16 T@U) (this@@32 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@16) ($IsGoodHeap $h1@@16)) (and (or (not (= this@@32 null)) (not true)) (and ($Is refType this@@32 Tclass._module.OwnedObject) ($IsAlloc refType this@@32 Tclass._module.OwnedObject $h0@@16)))) (and ($IsHeapAnchor $h0@@16) ($HeapSucc $h0@@16 $h1@@16))) (=> (forall (($o@@20 T@U) ($f@@16 T@U) )  (=> (and (or (not (= $o@@20 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@16 $o@@20) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@16 $o@@20) $f@@16) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@16 $o@@20) $f@@16)))) (= (_module.OwnedObject.localUserInv2 $prevHeap@@18 $h0@@16 this@@32) (_module.OwnedObject.localUserInv2 $prevHeap@@18 $h1@@16 this@@32))))
 :pattern ( ($IsHeapAnchor $h0@@16) ($HeapSucc $h0@@16 $h1@@16) (_module.OwnedObject.localUserInv2 $prevHeap@@18 $h1@@16 this@@32))
)))
(assert (forall (($prevHeap@@19 T@U) ($h0@@17 T@U) ($h1@@17 T@U) (this@@33 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@17) ($IsGoodHeap $h1@@17)) (and (or (not (= this@@33 null)) (not true)) (and ($Is refType this@@33 Tclass._module.OwnedObject) ($IsAlloc refType this@@33 Tclass._module.OwnedObject $h0@@17)))) (and ($IsHeapAnchor $h0@@17) ($HeapSucc $h0@@17 $h1@@17))) (=> (forall (($o@@21 T@U) ($f@@17 T@U) )  (=> (and (or (not (= $o@@21 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@17 $o@@21) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@17 $o@@21) $f@@17) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@17 $o@@21) $f@@17)))) (= (_module.OwnedObject.userInv2 $prevHeap@@19 $h0@@17 this@@33) (_module.OwnedObject.userInv2 $prevHeap@@19 $h1@@17 this@@33))))
 :pattern ( ($IsHeapAnchor $h0@@17) ($HeapSucc $h0@@17 $h1@@17) (_module.OwnedObject.userInv2 $prevHeap@@19 $h1@@17 this@@33))
)))
(assert (forall (($prevHeap@@20 T@U) ($h0@@18 T@U) ($h1@@18 T@U) (this@@34 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@18) ($IsGoodHeap $h1@@18)) (and (or (not (= this@@34 null)) (not true)) (and ($Is refType this@@34 Tclass._module.Lifetime) ($IsAlloc refType this@@34 Tclass._module.Lifetime $h0@@18)))) (and ($IsHeapAnchor $h0@@18) ($HeapSucc $h0@@18 $h1@@18))) (=> (forall (($o@@22 T@U) ($f@@18 T@U) )  (=> (and (or (not (= $o@@22 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@18 $o@@22) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@18 $o@@22) $f@@18) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@18 $o@@22) $f@@18)))) (= (_module.Lifetime.sequenceInv2 $prevHeap@@20 $h0@@18 this@@34) (_module.Lifetime.sequenceInv2 $prevHeap@@20 $h1@@18 this@@34))))
 :pattern ( ($IsHeapAnchor $h0@@18) ($HeapSucc $h0@@18 $h1@@18) (_module.Lifetime.sequenceInv2 $prevHeap@@20 $h1@@18 this@@34))
)))
(assert (forall (($prevHeap@@21 T@U) ($h0@@19 T@U) ($h1@@19 T@U) (this@@35 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@19) ($IsGoodHeap $h1@@19)) (and (or (not (= this@@35 null)) (not true)) (and ($Is refType this@@35 Tclass._module.Lifetime) ($IsAlloc refType this@@35 Tclass._module.Lifetime $h0@@19)))) (and ($IsHeapAnchor $h0@@19) ($HeapSucc $h0@@19 $h1@@19))) (=> (forall (($o@@23 T@U) ($f@@19 T@U) )  (=> (and (or (not (= $o@@23 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@19 $o@@23) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@19 $o@@23) $f@@19) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@19 $o@@23) $f@@19)))) (= (_module.Lifetime.localInv2 $prevHeap@@21 $h0@@19 this@@35) (_module.Lifetime.localInv2 $prevHeap@@21 $h1@@19 this@@35))))
 :pattern ( ($IsHeapAnchor $h0@@19) ($HeapSucc $h0@@19 $h1@@19) (_module.Lifetime.localInv2 $prevHeap@@21 $h1@@19 this@@35))
)))
(assert (forall (($prevHeap@@22 T@U) ($h0@@20 T@U) ($h1@@20 T@U) (this@@36 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@20) ($IsGoodHeap $h1@@20)) (and (or (not (= this@@36 null)) (not true)) (and ($Is refType this@@36 Tclass._module.Lifetime) ($IsAlloc refType this@@36 Tclass._module.Lifetime $h0@@20)))) (and ($IsHeapAnchor $h0@@20) ($HeapSucc $h0@@20 $h1@@20))) (=> (forall (($o@@24 T@U) ($f@@20 T@U) )  (=> (and (or (not (= $o@@24 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@20 $o@@24) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@20 $o@@24) $f@@20) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@20 $o@@24) $f@@20)))) (= (_module.Lifetime.inv2 $prevHeap@@22 $h0@@20 this@@36) (_module.Lifetime.inv2 $prevHeap@@22 $h1@@20 this@@36))))
 :pattern ( ($IsHeapAnchor $h0@@20) ($HeapSucc $h0@@20 $h1@@20) (_module.Lifetime.inv2 $prevHeap@@22 $h1@@20 this@@36))
)))
(assert (forall (($prevHeap@@23 T@U) ($h0@@21 T@U) ($h1@@21 T@U) (this@@37 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@21) ($IsGoodHeap $h1@@21)) (and (or (not (= this@@37 null)) (not true)) (and ($Is refType this@@37 Tclass._module.OwnedU32) ($IsAlloc refType this@@37 Tclass._module.OwnedU32 $h0@@21)))) (and ($IsHeapAnchor $h0@@21) ($HeapSucc $h0@@21 $h1@@21))) (=> (forall (($o@@25 T@U) ($f@@21 T@U) )  (=> (and (or (not (= $o@@25 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@21 $o@@25) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@21 $o@@25) $f@@21) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@21 $o@@25) $f@@21)))) (= (_module.OwnedU32.localUserInv2 $prevHeap@@23 $h0@@21 this@@37) (_module.OwnedU32.localUserInv2 $prevHeap@@23 $h1@@21 this@@37))))
 :pattern ( ($IsHeapAnchor $h0@@21) ($HeapSucc $h0@@21 $h1@@21) (_module.OwnedU32.localUserInv2 $prevHeap@@23 $h1@@21 this@@37))
)))
(assert (forall (($prevHeap@@24 T@U) ($h0@@22 T@U) ($h1@@22 T@U) (this@@38 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@22) ($IsGoodHeap $h1@@22)) (and (or (not (= this@@38 null)) (not true)) (and ($Is refType this@@38 Tclass._module.OwnedU32) ($IsAlloc refType this@@38 Tclass._module.OwnedU32 $h0@@22)))) (and ($IsHeapAnchor $h0@@22) ($HeapSucc $h0@@22 $h1@@22))) (=> (forall (($o@@26 T@U) ($f@@22 T@U) )  (=> (and (or (not (= $o@@26 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@22 $o@@26) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@22 $o@@26) $f@@22) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@22 $o@@26) $f@@22)))) (= (_module.OwnedU32.userInv2 $prevHeap@@24 $h0@@22 this@@38) (_module.OwnedU32.userInv2 $prevHeap@@24 $h1@@22 this@@38))))
 :pattern ( ($IsHeapAnchor $h0@@22) ($HeapSucc $h0@@22 $h1@@22) (_module.OwnedU32.userInv2 $prevHeap@@24 $h1@@22 this@@38))
)))
(assert (forall (($o@@27 T@U) ($h@@10 T@U) ) (! (= ($IsAlloc refType $o@@27 Tclass._module.Universe? $h@@10)  (or (= $o@@27 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@10 $o@@27) alloc)))))
 :pattern ( ($IsAlloc refType $o@@27 Tclass._module.Universe? $h@@10))
)))
(assert (forall (($o@@28 T@U) ($h@@11 T@U) ) (! (= ($IsAlloc refType $o@@28 Tclass._module.Object? $h@@11)  (or (= $o@@28 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@11 $o@@28) alloc)))))
 :pattern ( ($IsAlloc refType $o@@28 Tclass._module.Object? $h@@11))
)))
(assert (forall (($o@@29 T@U) ($h@@12 T@U) ) (! (= ($IsAlloc refType $o@@29 Tclass._module.Thread? $h@@12)  (or (= $o@@29 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@12 $o@@29) alloc)))))
 :pattern ( ($IsAlloc refType $o@@29 Tclass._module.Thread? $h@@12))
)))
(assert (forall (($o@@30 T@U) ($h@@13 T@U) ) (! (= ($IsAlloc refType $o@@30 Tclass._module.OwnedObject? $h@@13)  (or (= $o@@30 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@13 $o@@30) alloc)))))
 :pattern ( ($IsAlloc refType $o@@30 Tclass._module.OwnedObject? $h@@13))
)))
(assert (forall (($o@@31 T@U) ($h@@14 T@U) ) (! (= ($IsAlloc refType $o@@31 Tclass._module.Lifetime? $h@@14)  (or (= $o@@31 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@14 $o@@31) alloc)))))
 :pattern ( ($IsAlloc refType $o@@31 Tclass._module.Lifetime? $h@@14))
)))
(assert (forall (($o@@32 T@U) ($h@@15 T@U) ) (! (= ($IsAlloc refType $o@@32 Tclass._module.OwnedU32? $h@@15)  (or (= $o@@32 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@15 $o@@32) alloc)))))
 :pattern ( ($IsAlloc refType $o@@32 Tclass._module.OwnedU32? $h@@15))
)))
(assert  (=> (<= 8 $FunctionContextHeight) (forall (($Heap@@15 T@U) (this@@39 T@U) ) (!  (=> (or (|_module.Object.objectGlobalBaseInv#canCall| $Heap@@15 this@@39) (and (< 8 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@15) (and (or (not (= this@@39 null)) (not true)) (and ($Is refType this@@39 Tclass._module.Object) ($IsAlloc refType this@@39 Tclass._module.Object $Heap@@15)))))) (and (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@15 (_module.Object.universe this@@39)) _module.Universe.content)) ($Box refType this@@39)) (and (|_module.Object.baseFieldsInv#canCall| $Heap@@15 this@@39) (=> (_module.Object.baseFieldsInv $Heap@@15 this@@39) (|_module.Universe.globalBaseInv#canCall| $Heap@@15 (_module.Object.universe this@@39))))) (= (_module.Object.objectGlobalBaseInv $Heap@@15 this@@39)  (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@15 (_module.Object.universe this@@39)) _module.Universe.content)) ($Box refType this@@39)) (_module.Object.baseFieldsInv $Heap@@15 this@@39)) (_module.Universe.globalBaseInv $Heap@@15 (_module.Object.universe this@@39))))))
 :pattern ( (_module.Object.objectGlobalBaseInv $Heap@@15 this@@39) ($IsGoodHeap $Heap@@15))
))))
(assert (forall ((a@@7 T@U) (b@@4 T@U) ) (! (= (|_module.ObjectClassKind#Equal| a@@7 b@@4) (= a@@7 b@@4))
 :pattern ( (|_module.ObjectClassKind#Equal| a@@7 b@@4))
)))
(assert (forall ((h T@U) (k T@U) ) (!  (=> ($HeapSucc h k) (forall ((o@@2 T@U) ) (!  (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h o@@2) alloc))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o@@2) alloc))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o@@2) alloc))
)))
 :pattern ( ($HeapSucc h k))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@16 T@U) (this@@40 T@U) ) (!  (=> (or (|_module.OwnedU32.objectUserFields#canCall| $Heap@@16 this@@40) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@40 null)) (not true)) ($Is refType this@@40 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.objectUserFields $Heap@@16 this@@40) (_module.OwnedU32.objectUserFields $Heap@@16 this@@40)))
 :pattern ( (_module.OwnedObject.objectUserFields $Heap@@16 this@@40) ($Is refType this@@40 Tclass._module.OwnedU32) ($IsGoodHeap $Heap@@16))
 :pattern ( (_module.OwnedObject.objectUserFields $Heap@@16 this@@40) (_module.OwnedU32.objectUserFields $Heap@@16 this@@40) ($IsGoodHeap $Heap@@16))
))))
(assert (forall ((x@@5 T@U) (T T@T) ) (! (= (Lit T x@@5) x@@5)
 :pattern ( (Lit T x@@5))
)))
(assert  (=> (<= 17 $FunctionContextHeight) (forall (($prevHeap@@25 T@U) ($Heap@@17 T@U) (this@@41 T@U) (|running#0@@2| T@U) ) (!  (=> (or (|_module.Universe.legalTransition#canCall| $prevHeap@@25 $Heap@@17 this@@41 |running#0@@2|) (and (< 17 $FunctionContextHeight) (and (and (and (and ($IsGoodHeap $prevHeap@@25) ($IsGoodHeap $Heap@@17)) ($HeapSucc $prevHeap@@25 $Heap@@17)) (and (or (not (= this@@41 null)) (not true)) (and ($Is refType this@@41 Tclass._module.Universe) ($IsAlloc refType this@@41 Tclass._module.Universe $prevHeap@@25)))) ($Is refType |running#0@@2| Tclass._module.Thread)))) (and (and (|_module.Universe.legalTransitionsSequence#canCall| $prevHeap@@25 $Heap@@17 this@@41 (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@2|))) (=> (_module.Universe.legalTransitionsSequence $prevHeap@@25 $Heap@@17 this@@41 (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@2|))) (and (|_module.Universe.globalInv#canCall| $prevHeap@@25 this@@41) (=> (_module.Universe.globalInv $prevHeap@@25 this@@41) (and (forall ((|o#0@@4| T@U) ) (!  (=> ($Is refType |o#0@@4| Tclass._module.Object) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 this@@41) _module.Universe.content)) ($Box refType |o#0@@4|)) (and (=> (not (forall (($o@@33 T@U) ($f@@23 T@U) ) (!  (=> (or (not (= $o@@33 null)) (not true)) (=> (= $o@@33 |o#0@@4|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@33) $f@@23) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 $o@@33) $f@@23))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@33) $f@@23))
))) (|_module.Object.inv#canCall| $Heap@@17 |o#0@@4|)) (=> (or (forall (($o@@34 T@U) ($f@@24 T@U) ) (!  (=> (or (not (= $o@@34 null)) (not true)) (=> (= $o@@34 |o#0@@4|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@34) $f@@24) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 $o@@34) $f@@24))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@34) $f@@24))
)) (_module.Object.inv $Heap@@17 |o#0@@4|)) (=> (not (forall (($o@@35 T@U) ($f@@25 T@U) ) (!  (=> (or (not (= $o@@35 null)) (not true)) (=> (= $o@@35 |o#0@@4|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@35) $f@@25) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 $o@@35) $f@@25))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@35) $f@@25))
))) (|_module.Object.inv2#canCall| $prevHeap@@25 $Heap@@17 |o#0@@4|))))))
 :pattern ( (_module.Object.inv2 $prevHeap@@25 $Heap@@17 |o#0@@4|))
 :pattern ( (_module.Object.inv $Heap@@17 |o#0@@4|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 this@@41) _module.Universe.content)) ($Box refType |o#0@@4|)))
)) (=> (forall ((|o#0@@5| T@U) ) (!  (=> (and ($Is refType |o#0@@5| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 this@@41) _module.Universe.content)) ($Box refType |o#0@@5|))) (and (or (forall (($o@@36 T@U) ($f@@26 T@U) ) (!  (=> (or (not (= $o@@36 null)) (not true)) (=> (= $o@@36 |o#0@@5|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@36) $f@@26) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 $o@@36) $f@@26))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@36) $f@@26))
)) (_module.Object.inv $Heap@@17 |o#0@@5|)) (or (forall (($o@@37 T@U) ($f@@27 T@U) ) (!  (=> (or (not (= $o@@37 null)) (not true)) (=> (= $o@@37 |o#0@@5|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@37) $f@@27) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 $o@@37) $f@@27))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@37) $f@@27))
)) (_module.Object.inv2 $prevHeap@@25 $Heap@@17 |o#0@@5|))))
 :pattern ( (_module.Object.inv2 $prevHeap@@25 $Heap@@17 |o#0@@5|))
 :pattern ( (_module.Object.inv $Heap@@17 |o#0@@5|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 this@@41) _module.Universe.content)) ($Box refType |o#0@@5|)))
)) (forall ((|o#1| T@U) ) (!  (=> ($Is refType |o#1| Tclass._module.Object) (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 this@@41) _module.Universe.content)) ($Box refType |o#1|)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 this@@41) _module.Universe.content)) ($Box refType |o#1|)))) (|_module.Object.inv#canCall| $Heap@@17 |o#1|)))
 :pattern ( (_module.Object.inv $Heap@@17 |o#1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 this@@41) _module.Universe.content)) ($Box refType |o#1|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 this@@41) _module.Universe.content)) ($Box refType |o#1|)))
)))))))) (= (_module.Universe.legalTransition $prevHeap@@25 $Heap@@17 this@@41 |running#0@@2|)  (and (and (and (_module.Universe.legalTransitionsSequence $prevHeap@@25 $Heap@@17 this@@41 (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@2|))) (_module.Universe.globalInv $prevHeap@@25 this@@41)) (forall ((|o#0@@6| T@U) ) (!  (=> (and ($Is refType |o#0@@6| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 this@@41) _module.Universe.content)) ($Box refType |o#0@@6|))) (and (or (forall (($o@@38 T@U) ($f@@28 T@U) ) (!  (=> (or (not (= $o@@38 null)) (not true)) (=> (= $o@@38 |o#0@@6|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@38) $f@@28) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 $o@@38) $f@@28))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@38) $f@@28))
)) (_module.Object.inv $Heap@@17 |o#0@@6|)) (or (forall (($o@@39 T@U) ($f@@29 T@U) ) (!  (=> (or (not (= $o@@39 null)) (not true)) (=> (= $o@@39 |o#0@@6|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@39) $f@@29) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 $o@@39) $f@@29))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 $o@@39) $f@@29))
)) (_module.Object.inv2 $prevHeap@@25 $Heap@@17 |o#0@@6|))))
 :pattern ( (_module.Object.inv2 $prevHeap@@25 $Heap@@17 |o#0@@6|))
 :pattern ( (_module.Object.inv $Heap@@17 |o#0@@6|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 this@@41) _module.Universe.content)) ($Box refType |o#0@@6|)))
))) (forall ((|o#1@@0| T@U) ) (!  (=> (and ($Is refType |o#1@@0| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 this@@41) _module.Universe.content)) ($Box refType |o#1@@0|)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 this@@41) _module.Universe.content)) ($Box refType |o#1@@0|))))) (_module.Object.inv $Heap@@17 |o#1@@0|))
 :pattern ( (_module.Object.inv $Heap@@17 |o#1@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@25 this@@41) _module.Universe.content)) ($Box refType |o#1@@0|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@17 this@@41) _module.Universe.content)) ($Box refType |o#1@@0|)))
))))))
 :pattern ( (_module.Universe.legalTransition $prevHeap@@25 $Heap@@17 this@@41 |running#0@@2|) ($IsGoodHeap $Heap@@17))
))))
(assert (forall ((a@@8 T@U) (b@@5 T@U) ) (! (= (|Set#Subset| a@@8 b@@5) (forall ((o@@3 T@U) ) (!  (=> (|Set#IsMember| a@@8 o@@3) (|Set#IsMember| b@@5 o@@3))
 :pattern ( (|Set#IsMember| a@@8 o@@3))
 :pattern ( (|Set#IsMember| b@@5 o@@3))
)))
 :pattern ( (|Set#Subset| a@@8 b@@5))
)))
(assert  (=> (<= 14 $FunctionContextHeight) (forall (($Heap@@18 T@U) (this@@42 T@U) ) (!  (=> (or (|_module.OwnedObject.inv#canCall| $Heap@@18 this@@42) (and (< 14 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@18) (and (or (not (= this@@42 null)) (not true)) (and ($Is refType this@@42 Tclass._module.OwnedObject) ($IsAlloc refType this@@42 Tclass._module.OwnedObject $Heap@@18)))))) (and (and (|_module.OwnedObject.localInv#canCall| $Heap@@18 this@@42) (=> (_module.OwnedObject.localInv $Heap@@18 this@@42) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@18 this@@42) _module.OwnedObject.owner)) null)) (not true)) (|_module.OwnedObject.userInv#canCall| $Heap@@18 this@@42)))) (= (_module.OwnedObject.inv $Heap@@18 this@@42)  (and (_module.OwnedObject.localInv $Heap@@18 this@@42) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@18 this@@42) _module.OwnedObject.owner)) null)) (not true)) (_module.OwnedObject.userInv $Heap@@18 this@@42))))))
 :pattern ( (_module.OwnedObject.inv $Heap@@18 this@@42) ($IsGoodHeap $Heap@@18))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap@@19 T@U) (this@@43 T@U) ) (!  (=> (or (|_module.OwnedU32.localUserInv#canCall| $Heap@@19 this@@43) (and (< 0 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@19) (and (or (not (= this@@43 null)) (not true)) (and ($Is refType this@@43 Tclass._module.OwnedU32) ($IsAlloc refType this@@43 Tclass._module.OwnedU32 $Heap@@19)))))) (= (_module.OwnedU32.localUserInv $Heap@@19 this@@43) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.OwnedU32.localUserInv $Heap@@19 this@@43) ($IsGoodHeap $Heap@@19))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@20 T@U) (this@@44 T@U) ) (!  (=> (or (|_module.Thread.baseFieldsInv#canCall| $Heap@@20 this@@44) (and (< 2 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@20) (and (or (not (= this@@44 null)) (not true)) (and ($Is refType this@@44 Tclass._module.Thread) ($IsAlloc refType this@@44 Tclass._module.Thread $Heap@@20)))))) (= (_module.Thread.baseFieldsInv $Heap@@20 this@@44) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.Thread.baseFieldsInv $Heap@@20 this@@44) ($IsGoodHeap $Heap@@20))
))))
(assert (forall ((d T@U) ) (! (= (_module.ObjectClassKind.Thread_q d) (= (DatatypeCtorId d) |##_module.ObjectClassKind.Thread|))
 :pattern ( (_module.ObjectClassKind.Thread_q d))
)))
(assert (forall ((d@@0 T@U) ) (! (= (_module.ObjectClassKind.OwnedObject_q d@@0) (= (DatatypeCtorId d@@0) |##_module.ObjectClassKind.OwnedObject|))
 :pattern ( (_module.ObjectClassKind.OwnedObject_q d@@0))
)))
(assert (forall ((d@@1 T@U) ) (! (= (_module.ObjectClassKind.Lifetime_q d@@1) (= (DatatypeCtorId d@@1) |##_module.ObjectClassKind.Lifetime|))
 :pattern ( (_module.ObjectClassKind.Lifetime_q d@@1))
)))
(assert (forall ((x@@6 T@U) (T@@0 T@T) ) (! (= ($Box T@@0 ($Unbox T@@0 x@@6)) x@@6)
 :pattern ( ($Unbox T@@0 x@@6))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@26 T@U) ($Heap@@21 T@U) (this@@45 T@U) ) (!  (=> (or (|_module.Thread.inv2#canCall| $prevHeap@@26 $Heap@@21 this@@45) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@26) ($IsGoodHeap $Heap@@21)) ($HeapSucc $prevHeap@@26 $Heap@@21)) (and (or (not (= this@@45 null)) (not true)) (and ($Is refType this@@45 Tclass._module.Thread) ($IsAlloc refType this@@45 Tclass._module.Thread $prevHeap@@26)))))) (and (and (|_module.Thread.localInv2#canCall| $prevHeap@@26 $Heap@@21 this@@45) (=> (_module.Thread.localInv2 $prevHeap@@26 $Heap@@21 this@@45) (|_module.Thread.sequenceInv2#canCall| $prevHeap@@26 $Heap@@21 this@@45))) (= (_module.Thread.inv2 $prevHeap@@26 $Heap@@21 this@@45)  (and (_module.Thread.localInv2 $prevHeap@@26 $Heap@@21 this@@45) (_module.Thread.sequenceInv2 $prevHeap@@26 $Heap@@21 this@@45)))))
 :pattern ( (_module.Thread.inv2 $prevHeap@@26 $Heap@@21 this@@45) ($IsGoodHeap $Heap@@21))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($prevHeap@@27 T@U) ($Heap@@22 T@U) (this@@46 T@U) ) (!  (=> (or (|_module.Lifetime.inv2#canCall| $prevHeap@@27 $Heap@@22 this@@46) (and (< 2 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@27) ($IsGoodHeap $Heap@@22)) ($HeapSucc $prevHeap@@27 $Heap@@22)) (and (or (not (= this@@46 null)) (not true)) (and ($Is refType this@@46 Tclass._module.Lifetime) ($IsAlloc refType this@@46 Tclass._module.Lifetime $prevHeap@@27)))))) (and (and (|_module.Lifetime.localInv2#canCall| $prevHeap@@27 $Heap@@22 this@@46) (=> (_module.Lifetime.localInv2 $prevHeap@@27 $Heap@@22 this@@46) (|_module.Lifetime.sequenceInv2#canCall| $prevHeap@@27 $Heap@@22 this@@46))) (= (_module.Lifetime.inv2 $prevHeap@@27 $Heap@@22 this@@46)  (and (_module.Lifetime.localInv2 $prevHeap@@27 $Heap@@22 this@@46) (_module.Lifetime.sequenceInv2 $prevHeap@@27 $Heap@@22 this@@46)))))
 :pattern ( (_module.Lifetime.inv2 $prevHeap@@27 $Heap@@22 this@@46) ($IsGoodHeap $Heap@@22))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@23 T@U) (this@@47 T@U) ) (!  (=> (or (|_module.OwnedU32.userInv#canCall| $Heap@@23 this@@47) (and (< 1 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@23) (and (or (not (= this@@47 null)) (not true)) (and ($Is refType this@@47 Tclass._module.OwnedU32) ($IsAlloc refType this@@47 Tclass._module.OwnedU32 $Heap@@23)))))) (and (|_module.OwnedU32.localUserInv#canCall| $Heap@@23 this@@47) (= (_module.OwnedU32.userInv $Heap@@23 this@@47) (_module.OwnedU32.localUserInv $Heap@@23 this@@47))))
 :pattern ( (_module.OwnedU32.userInv $Heap@@23 this@@47) ($IsGoodHeap $Heap@@23))
))))
(assert  (=> (<= 4 $FunctionContextHeight) (forall (($Heap@@24 T@U) (this@@48 T@U) ) (!  (=> (or (|_module.Object.triggerAxioms#canCall| $Heap@@24 this@@48) (and (< 4 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@24) (and (or (not (= this@@48 null)) (not true)) (and ($Is refType this@@48 Tclass._module.Object) ($IsAlloc refType this@@48 Tclass._module.Object $Heap@@24)))))) (and (|_module.Object.nonAliasing#canCall| $Heap@@24 this@@48) (= (_module.Object.triggerAxioms $Heap@@24 this@@48) (_module.Object.nonAliasing $Heap@@24 this@@48))))
 :pattern ( (_module.Object.triggerAxioms $Heap@@24 this@@48) ($IsGoodHeap $Heap@@24))
))))
(assert  (=> (<= 10 $FunctionContextHeight) (forall (($Heap@@25 T@U) (this@@49 T@U) ) (!  (=> (or (|_module.Lifetime.inv#canCall| $Heap@@25 this@@49) (and (< 10 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@25) (and (or (not (= this@@49 null)) (not true)) (and ($Is refType this@@49 Tclass._module.Lifetime) ($IsAlloc refType this@@49 Tclass._module.Lifetime $Heap@@25)))))) (and (|_module.Lifetime.localInv#canCall| $Heap@@25 this@@49) (= (_module.Lifetime.inv $Heap@@25 this@@49) (_module.Lifetime.localInv $Heap@@25 this@@49))))
 :pattern ( (_module.Lifetime.inv $Heap@@25 this@@49) ($IsGoodHeap $Heap@@25))
))))
(assert (forall ((a@@9 T@U) (b@@6 T@U) ) (! (= (|Set#Disjoint| a@@9 b@@6) (forall ((o@@4 T@U) ) (!  (or (not (|Set#IsMember| a@@9 o@@4)) (not (|Set#IsMember| b@@6 o@@4)))
 :pattern ( (|Set#IsMember| a@@9 o@@4))
 :pattern ( (|Set#IsMember| b@@6 o@@4))
)))
 :pattern ( (|Set#Disjoint| a@@9 b@@6))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@28 T@U) ($Heap@@26 T@U) (this@@50 T@U) ) (!  (=> (or (|_module.Lifetime.sequenceInv2#canCall| $prevHeap@@28 $Heap@@26 this@@50) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@28) ($IsGoodHeap $Heap@@26)) ($HeapSucc $prevHeap@@28 $Heap@@26)) (and (or (not (= this@@50 null)) (not true)) (and ($Is refType this@@50 Tclass._module.Lifetime) ($IsAlloc refType this@@50 Tclass._module.Lifetime $prevHeap@@28)))))) (and (and (|_module.Lifetime.alive#canCall| $prevHeap@@28 this@@50) (=> (not (_module.Lifetime.alive $prevHeap@@28 this@@50)) (|_module.Lifetime.alive#canCall| $Heap@@26 this@@50))) (= (_module.Lifetime.sequenceInv2 $prevHeap@@28 $Heap@@26 this@@50)  (and (and (and (and (=> (not (_module.Lifetime.alive $prevHeap@@28 this@@50)) (not (_module.Lifetime.alive $Heap@@26 this@@50))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@26 this@@50) _module.Lifetime.owner)) null)) (not true)) (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@26 this@@50) _module.Lifetime.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@28 this@@50) _module.Lifetime.owner))))) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@28 this@@50) _module.Lifetime.elements)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@26 this@@50) _module.Lifetime.elements)))) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@28 this@@50) _module.Lifetime.mightPointTo)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@26 this@@50) _module.Lifetime.mightPointTo)))) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@28 this@@50) _module.Lifetime.mightPointFrom)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@26 this@@50) _module.Lifetime.mightPointFrom)))))))
 :pattern ( (_module.Lifetime.sequenceInv2 $prevHeap@@28 $Heap@@26 this@@50) ($IsGoodHeap $Heap@@26))
))))
(assert (forall ((d@@2 T@U) ) (!  (=> (_module.ObjectClassKind.Thread_q d@@2) (= d@@2 |#_module.ObjectClassKind.Thread|))
 :pattern ( (_module.ObjectClassKind.Thread_q d@@2))
)))
(assert (forall ((d@@3 T@U) ) (!  (=> (_module.ObjectClassKind.OwnedObject_q d@@3) (= d@@3 |#_module.ObjectClassKind.OwnedObject|))
 :pattern ( (_module.ObjectClassKind.OwnedObject_q d@@3))
)))
(assert (forall ((d@@4 T@U) ) (!  (=> (_module.ObjectClassKind.Lifetime_q d@@4) (= d@@4 |#_module.ObjectClassKind.Lifetime|))
 :pattern ( (_module.ObjectClassKind.Lifetime_q d@@4))
)))
(assert (forall ((v T@U) (t0@@0 T@U) ) (! (= ($Is SetType v (TSet t0@@0)) (forall ((bx@@3 T@U) ) (!  (=> (|Set#IsMember| v bx@@3) ($IsBox bx@@3 t0@@0))
 :pattern ( (|Set#IsMember| v bx@@3))
)))
 :pattern ( ($Is SetType v (TSet t0@@0)))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@29 T@U) ($Heap@@27 T@U) (this@@51 T@U) ) (!  (=> (or (|_module.Thread.inv2#canCall| $prevHeap@@29 $Heap@@27 this@@51) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@29) ($IsGoodHeap $Heap@@27)) ($HeapSucc $prevHeap@@29 $Heap@@27)) (and (or (not (= this@@51 null)) (not true)) (and ($Is refType this@@51 Tclass._module.Thread) ($IsAlloc refType this@@51 Tclass._module.Thread $prevHeap@@29)))))) (=> (_module.Thread.inv2 $prevHeap@@29 $Heap@@27 this@@51) (and (_module.Thread.localInv2 $prevHeap@@29 $Heap@@27 this@@51) (_module.Thread.sequenceInv2 $prevHeap@@29 $Heap@@27 this@@51))))
 :pattern ( (_module.Thread.inv2 $prevHeap@@29 $Heap@@27 this@@51))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($prevHeap@@30 T@U) ($Heap@@28 T@U) (this@@52 T@U) ) (!  (=> (or (|_module.Lifetime.inv2#canCall| $prevHeap@@30 $Heap@@28 this@@52) (and (< 2 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@30) ($IsGoodHeap $Heap@@28)) ($HeapSucc $prevHeap@@30 $Heap@@28)) (and (or (not (= this@@52 null)) (not true)) (and ($Is refType this@@52 Tclass._module.Lifetime) ($IsAlloc refType this@@52 Tclass._module.Lifetime $prevHeap@@30)))))) (=> (_module.Lifetime.inv2 $prevHeap@@30 $Heap@@28 this@@52) (and (_module.Lifetime.localInv2 $prevHeap@@30 $Heap@@28 this@@52) (_module.Lifetime.sequenceInv2 $prevHeap@@30 $Heap@@28 this@@52))))
 :pattern ( (_module.Lifetime.inv2 $prevHeap@@30 $Heap@@28 this@@52))
))))
(assert  (=> (<= 14 $FunctionContextHeight) (forall (($prevHeap@@31 T@U) ($Heap@@29 T@U) (this@@53 T@U) ) (!  (=> (or (|_module.OwnedObject.inv2#canCall| $prevHeap@@31 $Heap@@29 this@@53) (and (< 14 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@31) ($IsGoodHeap $Heap@@29)) ($HeapSucc $prevHeap@@31 $Heap@@29)) (and (or (not (= this@@53 null)) (not true)) (and ($Is refType this@@53 Tclass._module.OwnedObject) ($IsAlloc refType this@@53 Tclass._module.OwnedObject $prevHeap@@31)))))) (=> (_module.OwnedObject.inv2 $prevHeap@@31 $Heap@@29 this@@53) (and (_module.OwnedObject.localInv2 $prevHeap@@31 $Heap@@29 this@@53) (_module.OwnedObject.sequenceInv2 $prevHeap@@31 $Heap@@29 this@@53))))
 :pattern ( (_module.OwnedObject.inv2 $prevHeap@@31 $Heap@@29 this@@53))
))))
(assert  (=> (<= 15 $FunctionContextHeight) (forall (($prevHeap@@32 T@U) ($Heap@@30 T@U) (this@@54 T@U) ) (!  (=> (or (|_module.Object.inv2#canCall| $prevHeap@@32 $Heap@@30 this@@54) (and (< 15 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@32) ($IsGoodHeap $Heap@@30)) ($HeapSucc $prevHeap@@32 $Heap@@30)) (and (or (not (= this@@54 null)) (not true)) (and ($Is refType this@@54 Tclass._module.Object) ($IsAlloc refType this@@54 Tclass._module.Object $prevHeap@@32)))))) (=> (_module.Object.inv2 $prevHeap@@32 $Heap@@30 this@@54) (and (_module.Object.localInv2 $prevHeap@@32 $Heap@@30 this@@54) (_module.Object.sequenceInv2 $prevHeap@@32 $Heap@@30 this@@54))))
 :pattern ( (_module.Object.inv2 $prevHeap@@32 $Heap@@30 this@@54))
))))
(assert ($IsGhostField alloc))
(assert (forall (($h@@16 T@U) ($o@@40 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@16) (and (or (not (= $o@@40 null)) (not true)) (= (dtype $o@@40) Tclass._module.OwnedU32?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@16 $o@@40) alloc)))) ($IsAlloc intType ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@16 $o@@40) _module.OwnedU32.value)) TInt $h@@16))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@16 $o@@40) _module.OwnedU32.value)))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@33 T@U) ($Heap@@31 T@U) (this@@55 T@U) ) (!  (=> (or (|_module.OwnedU32.unchangedNonvolatileUserFields#canCall| $prevHeap@@33 $Heap@@31 this@@55) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@33) ($IsGoodHeap $Heap@@31)) ($HeapSucc $prevHeap@@33 $Heap@@31)) (and (or (not (= this@@55 null)) (not true)) (and ($Is refType this@@55 Tclass._module.OwnedU32) ($IsAlloc refType this@@55 Tclass._module.OwnedU32 $prevHeap@@33)))))) (= (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@33 $Heap@@31 this@@55)  (and true (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@33 this@@55) _module.OwnedU32.value))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@31 this@@55) _module.OwnedU32.value)))))))
 :pattern ( (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@33 $Heap@@31 this@@55) ($IsGoodHeap $Heap@@31))
))))
(assert  (=> (<= 4 $FunctionContextHeight) (forall (($Heap@@32 T@U) (this@@56 T@U) ) (!  (=> (or (|_module.OwnedObject.objectFields#canCall| $Heap@@32 this@@56) (and (< 4 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@32) (and (or (not (= this@@56 null)) (not true)) (and ($Is refType this@@56 Tclass._module.OwnedObject) ($IsAlloc refType this@@56 Tclass._module.OwnedObject $Heap@@32)))))) (and (|_module.OwnedObject.objectUserFields#canCall| $Heap@@32 this@@56) (= (_module.OwnedObject.objectFields $Heap@@32 this@@56) (|Set#Union| (|Set#Union| (_module.OwnedObject.objectUserFields $Heap@@32 this@@56) (|Set#UnionOne| |Set#Empty| ($Box refType (_module.OwnedObject.lifetime this@@56)))) (ite (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@32 this@@56) _module.OwnedObject.owner)) null) |Set#Empty| (|Set#UnionOne| |Set#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@32 this@@56) _module.OwnedObject.owner)))))))
 :pattern ( (_module.OwnedObject.objectFields $Heap@@32 this@@56) ($IsGoodHeap $Heap@@32))
))))
(assert (forall ((v@@0 T@U) (t T@U) (h@@0 T@U) (T@@1 T@T) ) (! (= ($IsAllocBox ($Box T@@1 v@@0) t h@@0) ($IsAlloc T@@1 v@@0 t h@@0))
 :pattern ( ($IsAllocBox ($Box T@@1 v@@0) t h@@0))
)))
(assert (forall ((h@@1 T@U) (k@@0 T@U) (bx@@4 T@U) (t@@0 T@U) ) (!  (=> ($HeapSucc h@@1 k@@0) (=> ($IsAllocBox bx@@4 t@@0 h@@1) ($IsAllocBox bx@@4 t@@0 k@@0)))
 :pattern ( ($HeapSucc h@@1 k@@0) ($IsAllocBox bx@@4 t@@0 h@@1))
)))
(assert (forall ((h@@2 T@U) (k@@1 T@U) (v@@1 T@U) (t@@1 T@U) (T@@2 T@T) ) (!  (=> ($HeapSucc h@@2 k@@1) (=> ($IsAlloc T@@2 v@@1 t@@1 h@@2) ($IsAlloc T@@2 v@@1 t@@1 k@@1)))
 :pattern ( ($HeapSucc h@@2 k@@1) ($IsAlloc T@@2 v@@1 t@@1 h@@2))
)))
(assert  (=> (< 1 $FunctionContextHeight) (forall (($h@@17 T@U) ($o@@41 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@17) (and (or (not (= $o@@41 null)) (not true)) ($Is refType $o@@41 Tclass._module.Object?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@17 $o@@41) alloc)))) ($IsAlloc refType (_module.Object.universe $o@@41) Tclass._module.Universe $h@@17))
 :pattern ( (_module.Object.universe $o@@41) ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@17 $o@@41) alloc)))
))))
(assert  (=> (< 1 $FunctionContextHeight) (forall (($h@@18 T@U) ($o@@42 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@18) (and (or (not (= $o@@42 null)) (not true)) ($Is refType $o@@42 Tclass._module.OwnedObject?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@18 $o@@42) alloc)))) ($IsAlloc refType (_module.OwnedObject.lifetime $o@@42) Tclass._module.Lifetime $h@@18))
 :pattern ( (_module.OwnedObject.lifetime $o@@42) ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@18 $o@@42) alloc)))
))))
(assert  (=> (< 1 $FunctionContextHeight) (forall (($o@@43 T@U) ) (!  (=> (and (or (not (= $o@@43 null)) (not true)) ($Is refType $o@@43 Tclass._module.Object?)) ($Is refType (_module.Object.universe $o@@43) Tclass._module.Universe))
 :pattern ( (_module.Object.universe $o@@43))
))))
(assert  (=> (< 1 $FunctionContextHeight) (forall (($o@@44 T@U) ) (!  (=> (and (or (not (= $o@@44 null)) (not true)) ($Is refType $o@@44 Tclass._module.OwnedObject?)) ($Is refType (_module.OwnedObject.lifetime $o@@44) Tclass._module.Lifetime))
 :pattern ( (_module.OwnedObject.lifetime $o@@44))
))))
(assert (forall (($h@@19 T@U) ($o@@45 T@U) ) (!  (=> (and ($IsGoodHeap $h@@19) (and (or (not (= $o@@45 null)) (not true)) (= (dtype $o@@45) Tclass._module.Lifetime?))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@19 $o@@45) _module.Lifetime.owner)) Tclass._module.Thread?))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@19 $o@@45) _module.Lifetime.owner)))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@34 T@U) ($Heap@@33 T@U) (this@@57 T@U) ) (!  (=> (or (|_module.Thread.localInv2#canCall| $prevHeap@@34 $Heap@@33 this@@57) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@57 null)) (not true)) ($Is refType this@@57 Tclass._module.Thread)))) (= (_module.Object.localInv2 $prevHeap@@34 $Heap@@33 this@@57) (_module.Thread.localInv2 $prevHeap@@34 $Heap@@33 this@@57)))
 :pattern ( (_module.Object.localInv2 $prevHeap@@34 $Heap@@33 this@@57) ($Is refType this@@57 Tclass._module.Thread) ($IsGoodHeap $Heap@@33))
 :pattern ( (_module.Object.localInv2 $prevHeap@@34 $Heap@@33 this@@57) (_module.Thread.localInv2 $prevHeap@@34 $Heap@@33 this@@57) ($IsGoodHeap $Heap@@33))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@35 T@U) ($Heap@@34 T@U) (this@@58 T@U) ) (!  (=> (or (|_module.Thread.sequenceInv2#canCall| $prevHeap@@35 $Heap@@34 this@@58) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@58 null)) (not true)) ($Is refType this@@58 Tclass._module.Thread)))) (= (_module.Object.sequenceInv2 $prevHeap@@35 $Heap@@34 this@@58) (_module.Thread.sequenceInv2 $prevHeap@@35 $Heap@@34 this@@58)))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@35 $Heap@@34 this@@58) ($Is refType this@@58 Tclass._module.Thread) ($IsGoodHeap $Heap@@34))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@35 $Heap@@34 this@@58) (_module.Thread.sequenceInv2 $prevHeap@@35 $Heap@@34 this@@58) ($IsGoodHeap $Heap@@34))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@36 T@U) ($Heap@@35 T@U) (this@@59 T@U) ) (!  (=> (or (|_module.Lifetime.localInv2#canCall| $prevHeap@@36 $Heap@@35 this@@59) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@59 null)) (not true)) ($Is refType this@@59 Tclass._module.Lifetime)))) (= (_module.Object.localInv2 $prevHeap@@36 $Heap@@35 this@@59) (_module.Lifetime.localInv2 $prevHeap@@36 $Heap@@35 this@@59)))
 :pattern ( (_module.Object.localInv2 $prevHeap@@36 $Heap@@35 this@@59) ($Is refType this@@59 Tclass._module.Lifetime) ($IsGoodHeap $Heap@@35))
 :pattern ( (_module.Object.localInv2 $prevHeap@@36 $Heap@@35 this@@59) (_module.Lifetime.localInv2 $prevHeap@@36 $Heap@@35 this@@59) ($IsGoodHeap $Heap@@35))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@37 T@U) ($Heap@@36 T@U) (this@@60 T@U) ) (!  (=> (or (|_module.OwnedU32.unchangedNonvolatileUserFields#canCall| $prevHeap@@37 $Heap@@36 this@@60) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@60 null)) (not true)) ($Is refType this@@60 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@37 $Heap@@36 this@@60) (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@37 $Heap@@36 this@@60)))
 :pattern ( (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@37 $Heap@@36 this@@60) ($Is refType this@@60 Tclass._module.OwnedU32) ($IsGoodHeap $Heap@@36))
 :pattern ( (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@37 $Heap@@36 this@@60) (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@37 $Heap@@36 this@@60) ($IsGoodHeap $Heap@@36))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@38 T@U) ($Heap@@37 T@U) (this@@61 T@U) ) (!  (=> (or (|_module.OwnedU32.localUserInv2#canCall| $prevHeap@@38 $Heap@@37 this@@61) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@61 null)) (not true)) ($Is refType this@@61 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.localUserInv2 $prevHeap@@38 $Heap@@37 this@@61) (_module.OwnedU32.localUserInv2 $prevHeap@@38 $Heap@@37 this@@61)))
 :pattern ( (_module.OwnedObject.localUserInv2 $prevHeap@@38 $Heap@@37 this@@61) ($Is refType this@@61 Tclass._module.OwnedU32) ($IsGoodHeap $Heap@@37))
 :pattern ( (_module.OwnedObject.localUserInv2 $prevHeap@@38 $Heap@@37 this@@61) (_module.OwnedU32.localUserInv2 $prevHeap@@38 $Heap@@37 this@@61) ($IsGoodHeap $Heap@@37))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@39 T@U) ($Heap@@38 T@U) (this@@62 T@U) ) (!  (=> (or (|_module.Thread.inv2#canCall| $prevHeap@@39 $Heap@@38 this@@62) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@62 null)) (not true)) ($Is refType this@@62 Tclass._module.Thread)))) (= (_module.Object.inv2 $prevHeap@@39 $Heap@@38 this@@62) (_module.Thread.inv2 $prevHeap@@39 $Heap@@38 this@@62)))
 :pattern ( (_module.Object.inv2 $prevHeap@@39 $Heap@@38 this@@62) ($Is refType this@@62 Tclass._module.Thread) ($IsGoodHeap $Heap@@38))
 :pattern ( (_module.Object.inv2 $prevHeap@@39 $Heap@@38 this@@62) (_module.Thread.inv2 $prevHeap@@39 $Heap@@38 this@@62) ($IsGoodHeap $Heap@@38))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@40 T@U) ($Heap@@39 T@U) (this@@63 T@U) ) (!  (=> (or (|_module.Lifetime.sequenceInv2#canCall| $prevHeap@@40 $Heap@@39 this@@63) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@63 null)) (not true)) ($Is refType this@@63 Tclass._module.Lifetime)))) (= (_module.Object.sequenceInv2 $prevHeap@@40 $Heap@@39 this@@63) (_module.Lifetime.sequenceInv2 $prevHeap@@40 $Heap@@39 this@@63)))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@40 $Heap@@39 this@@63) ($Is refType this@@63 Tclass._module.Lifetime) ($IsGoodHeap $Heap@@39))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@40 $Heap@@39 this@@63) (_module.Lifetime.sequenceInv2 $prevHeap@@40 $Heap@@39 this@@63) ($IsGoodHeap $Heap@@39))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@41 T@U) ($Heap@@40 T@U) (this@@64 T@U) ) (!  (=> (or (|_module.OwnedU32.userInv2#canCall| $prevHeap@@41 $Heap@@40 this@@64) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@64 null)) (not true)) ($Is refType this@@64 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.userInv2 $prevHeap@@41 $Heap@@40 this@@64) (_module.OwnedU32.userInv2 $prevHeap@@41 $Heap@@40 this@@64)))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@41 $Heap@@40 this@@64) ($Is refType this@@64 Tclass._module.OwnedU32) ($IsGoodHeap $Heap@@40))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@41 $Heap@@40 this@@64) (_module.OwnedU32.userInv2 $prevHeap@@41 $Heap@@40 this@@64) ($IsGoodHeap $Heap@@40))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($prevHeap@@42 T@U) ($Heap@@41 T@U) (this@@65 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv2#canCall| $prevHeap@@42 $Heap@@41 this@@65) (and (< 2 $FunctionContextHeight) (and (or (not (= this@@65 null)) (not true)) ($Is refType this@@65 Tclass._module.OwnedObject)))) (= (_module.Object.localInv2 $prevHeap@@42 $Heap@@41 this@@65) (_module.OwnedObject.localInv2 $prevHeap@@42 $Heap@@41 this@@65)))
 :pattern ( (_module.Object.localInv2 $prevHeap@@42 $Heap@@41 this@@65) ($Is refType this@@65 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@41))
 :pattern ( (_module.Object.localInv2 $prevHeap@@42 $Heap@@41 this@@65) (_module.OwnedObject.localInv2 $prevHeap@@42 $Heap@@41 this@@65) ($IsGoodHeap $Heap@@41))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($prevHeap@@43 T@U) ($Heap@@42 T@U) (this@@66 T@U) ) (!  (=> (or (|_module.Lifetime.inv2#canCall| $prevHeap@@43 $Heap@@42 this@@66) (and (< 2 $FunctionContextHeight) (and (or (not (= this@@66 null)) (not true)) ($Is refType this@@66 Tclass._module.Lifetime)))) (= (_module.Object.inv2 $prevHeap@@43 $Heap@@42 this@@66) (_module.Lifetime.inv2 $prevHeap@@43 $Heap@@42 this@@66)))
 :pattern ( (_module.Object.inv2 $prevHeap@@43 $Heap@@42 this@@66) ($Is refType this@@66 Tclass._module.Lifetime) ($IsGoodHeap $Heap@@42))
 :pattern ( (_module.Object.inv2 $prevHeap@@43 $Heap@@42 this@@66) (_module.Lifetime.inv2 $prevHeap@@43 $Heap@@42 this@@66) ($IsGoodHeap $Heap@@42))
))))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($prevHeap@@44 T@U) ($Heap@@43 T@U) (this@@67 T@U) ) (!  (=> (or (|_module.OwnedObject.sequenceInv2#canCall| $prevHeap@@44 $Heap@@43 this@@67) (and (< 3 $FunctionContextHeight) (and (or (not (= this@@67 null)) (not true)) ($Is refType this@@67 Tclass._module.OwnedObject)))) (= (_module.Object.sequenceInv2 $prevHeap@@44 $Heap@@43 this@@67) (_module.OwnedObject.sequenceInv2 $prevHeap@@44 $Heap@@43 this@@67)))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@44 $Heap@@43 this@@67) ($Is refType this@@67 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@43))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@44 $Heap@@43 this@@67) (_module.OwnedObject.sequenceInv2 $prevHeap@@44 $Heap@@43 this@@67) ($IsGoodHeap $Heap@@43))
))))
(assert  (=> (<= 14 $FunctionContextHeight) (forall (($prevHeap@@45 T@U) ($Heap@@44 T@U) (this@@68 T@U) ) (!  (=> (or (|_module.OwnedObject.inv2#canCall| $prevHeap@@45 $Heap@@44 this@@68) (and (< 14 $FunctionContextHeight) (and (or (not (= this@@68 null)) (not true)) ($Is refType this@@68 Tclass._module.OwnedObject)))) (= (_module.Object.inv2 $prevHeap@@45 $Heap@@44 this@@68) (_module.OwnedObject.inv2 $prevHeap@@45 $Heap@@44 this@@68)))
 :pattern ( (_module.Object.inv2 $prevHeap@@45 $Heap@@44 this@@68) ($Is refType this@@68 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@44))
 :pattern ( (_module.Object.inv2 $prevHeap@@45 $Heap@@44 this@@68) (_module.OwnedObject.inv2 $prevHeap@@45 $Heap@@44 this@@68) ($IsGoodHeap $Heap@@44))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($prevHeap@@46 T@U) ($Heap@@45 T@U) (this@@69 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv2#canCall| $prevHeap@@46 $Heap@@45 this@@69) (and (< 2 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@46) ($IsGoodHeap $Heap@@45)) ($HeapSucc $prevHeap@@46 $Heap@@45)) (and (or (not (= this@@69 null)) (not true)) (and ($Is refType this@@69 Tclass._module.OwnedObject) ($IsAlloc refType this@@69 Tclass._module.OwnedObject $prevHeap@@46)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@45 this@@69) _module.OwnedObject.owner)) null)) (not true)) (|_module.OwnedObject.localUserInv2#canCall| $prevHeap@@46 $Heap@@45 this@@69))) (= (_module.OwnedObject.localInv2 $prevHeap@@46 $Heap@@45 this@@69)  (and true (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@45 this@@69) _module.OwnedObject.owner)) null)) (not true)) (_module.OwnedObject.localUserInv2 $prevHeap@@46 $Heap@@45 this@@69))))))
 :pattern ( (_module.OwnedObject.localInv2 $prevHeap@@46 $Heap@@45 this@@69) ($IsGoodHeap $Heap@@45))
))))
(assert (forall ((bx@@5 T@U) ) (!  (=> ($IsBox bx@@5 Tclass._module.Universe) (and (= ($Box refType ($Unbox refType bx@@5)) bx@@5) ($Is refType ($Unbox refType bx@@5) Tclass._module.Universe)))
 :pattern ( ($IsBox bx@@5 Tclass._module.Universe))
)))
(assert (forall ((bx@@6 T@U) ) (!  (=> ($IsBox bx@@6 Tclass._module.Universe?) (and (= ($Box refType ($Unbox refType bx@@6)) bx@@6) ($Is refType ($Unbox refType bx@@6) Tclass._module.Universe?)))
 :pattern ( ($IsBox bx@@6 Tclass._module.Universe?))
)))
(assert (forall ((bx@@7 T@U) ) (!  (=> ($IsBox bx@@7 Tclass._module.Object) (and (= ($Box refType ($Unbox refType bx@@7)) bx@@7) ($Is refType ($Unbox refType bx@@7) Tclass._module.Object)))
 :pattern ( ($IsBox bx@@7 Tclass._module.Object))
)))
(assert (forall ((bx@@8 T@U) ) (!  (=> ($IsBox bx@@8 Tclass._module.Thread) (and (= ($Box refType ($Unbox refType bx@@8)) bx@@8) ($Is refType ($Unbox refType bx@@8) Tclass._module.Thread)))
 :pattern ( ($IsBox bx@@8 Tclass._module.Thread))
)))
(assert (forall ((bx@@9 T@U) ) (!  (=> ($IsBox bx@@9 Tclass._module.OwnedObject) (and (= ($Box refType ($Unbox refType bx@@9)) bx@@9) ($Is refType ($Unbox refType bx@@9) Tclass._module.OwnedObject)))
 :pattern ( ($IsBox bx@@9 Tclass._module.OwnedObject))
)))
(assert (forall ((bx@@10 T@U) ) (!  (=> ($IsBox bx@@10 Tclass._module.Object?) (and (= ($Box refType ($Unbox refType bx@@10)) bx@@10) ($Is refType ($Unbox refType bx@@10) Tclass._module.Object?)))
 :pattern ( ($IsBox bx@@10 Tclass._module.Object?))
)))
(assert (forall ((bx@@11 T@U) ) (!  (=> ($IsBox bx@@11 Tclass._module.Lifetime) (and (= ($Box refType ($Unbox refType bx@@11)) bx@@11) ($Is refType ($Unbox refType bx@@11) Tclass._module.Lifetime)))
 :pattern ( ($IsBox bx@@11 Tclass._module.Lifetime))
)))
(assert (forall ((bx@@12 T@U) ) (!  (=> ($IsBox bx@@12 Tclass._module.Thread?) (and (= ($Box refType ($Unbox refType bx@@12)) bx@@12) ($Is refType ($Unbox refType bx@@12) Tclass._module.Thread?)))
 :pattern ( ($IsBox bx@@12 Tclass._module.Thread?))
)))
(assert (forall ((bx@@13 T@U) ) (!  (=> ($IsBox bx@@13 Tclass._module.Lifetime?) (and (= ($Box refType ($Unbox refType bx@@13)) bx@@13) ($Is refType ($Unbox refType bx@@13) Tclass._module.Lifetime?)))
 :pattern ( ($IsBox bx@@13 Tclass._module.Lifetime?))
)))
(assert (forall ((bx@@14 T@U) ) (!  (=> ($IsBox bx@@14 Tclass._module.ObjectClassKind) (and (= ($Box DatatypeTypeType ($Unbox DatatypeTypeType bx@@14)) bx@@14) ($Is DatatypeTypeType ($Unbox DatatypeTypeType bx@@14) Tclass._module.ObjectClassKind)))
 :pattern ( ($IsBox bx@@14 Tclass._module.ObjectClassKind))
)))
(assert (forall ((bx@@15 T@U) ) (!  (=> ($IsBox bx@@15 Tclass._module.OwnedObject?) (and (= ($Box refType ($Unbox refType bx@@15)) bx@@15) ($Is refType ($Unbox refType bx@@15) Tclass._module.OwnedObject?)))
 :pattern ( ($IsBox bx@@15 Tclass._module.OwnedObject?))
)))
(assert (forall ((bx@@16 T@U) ) (!  (=> ($IsBox bx@@16 Tclass._module.OwnedU32?) (and (= ($Box refType ($Unbox refType bx@@16)) bx@@16) ($Is refType ($Unbox refType bx@@16) Tclass._module.OwnedU32?)))
 :pattern ( ($IsBox bx@@16 Tclass._module.OwnedU32?))
)))
(assert (forall ((bx@@17 T@U) ) (!  (=> ($IsBox bx@@17 Tclass._module.OwnedU32) (and (= ($Box refType ($Unbox refType bx@@17)) bx@@17) ($Is refType ($Unbox refType bx@@17) Tclass._module.OwnedU32)))
 :pattern ( ($IsBox bx@@17 Tclass._module.OwnedU32))
)))
(assert (forall ((|c#0@@5| T@U) ) (! (= ($Is refType |c#0@@5| Tclass._module.Universe)  (and ($Is refType |c#0@@5| Tclass._module.Universe?) (or (not (= |c#0@@5| null)) (not true))))
 :pattern ( ($Is refType |c#0@@5| Tclass._module.Universe))
 :pattern ( ($Is refType |c#0@@5| Tclass._module.Universe?))
)))
(assert (forall ((|c#0@@6| T@U) ) (! (= ($Is refType |c#0@@6| Tclass._module.Object)  (and ($Is refType |c#0@@6| Tclass._module.Object?) (or (not (= |c#0@@6| null)) (not true))))
 :pattern ( ($Is refType |c#0@@6| Tclass._module.Object))
 :pattern ( ($Is refType |c#0@@6| Tclass._module.Object?))
)))
(assert (forall ((|c#0@@7| T@U) ) (! (= ($Is refType |c#0@@7| Tclass._module.Thread)  (and ($Is refType |c#0@@7| Tclass._module.Thread?) (or (not (= |c#0@@7| null)) (not true))))
 :pattern ( ($Is refType |c#0@@7| Tclass._module.Thread))
 :pattern ( ($Is refType |c#0@@7| Tclass._module.Thread?))
)))
(assert (forall ((|c#0@@8| T@U) ) (! (= ($Is refType |c#0@@8| Tclass._module.OwnedObject)  (and ($Is refType |c#0@@8| Tclass._module.OwnedObject?) (or (not (= |c#0@@8| null)) (not true))))
 :pattern ( ($Is refType |c#0@@8| Tclass._module.OwnedObject))
 :pattern ( ($Is refType |c#0@@8| Tclass._module.OwnedObject?))
)))
(assert (forall ((|c#0@@9| T@U) ) (! (= ($Is refType |c#0@@9| Tclass._module.Lifetime)  (and ($Is refType |c#0@@9| Tclass._module.Lifetime?) (or (not (= |c#0@@9| null)) (not true))))
 :pattern ( ($Is refType |c#0@@9| Tclass._module.Lifetime))
 :pattern ( ($Is refType |c#0@@9| Tclass._module.Lifetime?))
)))
(assert (forall ((|c#0@@10| T@U) ) (! (= ($Is refType |c#0@@10| Tclass._module.OwnedU32)  (and ($Is refType |c#0@@10| Tclass._module.OwnedU32?) (or (not (= |c#0@@10| null)) (not true))))
 :pattern ( ($Is refType |c#0@@10| Tclass._module.OwnedU32))
 :pattern ( ($Is refType |c#0@@10| Tclass._module.OwnedU32?))
)))
(assert  (=> (<= 14 $FunctionContextHeight) (forall (($prevHeap@@47 T@U) ($Heap@@46 T@U) (this@@70 T@U) ) (!  (=> (or (|_module.OwnedObject.inv2#canCall| $prevHeap@@47 $Heap@@46 this@@70) (and (< 14 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@47) ($IsGoodHeap $Heap@@46)) ($HeapSucc $prevHeap@@47 $Heap@@46)) (and (or (not (= this@@70 null)) (not true)) (and ($Is refType this@@70 Tclass._module.OwnedObject) ($IsAlloc refType this@@70 Tclass._module.OwnedObject $prevHeap@@47)))))) (and (and (|_module.OwnedObject.localInv2#canCall| $prevHeap@@47 $Heap@@46 this@@70) (=> (_module.OwnedObject.localInv2 $prevHeap@@47 $Heap@@46 this@@70) (and (|_module.OwnedObject.sequenceInv2#canCall| $prevHeap@@47 $Heap@@46 this@@70) (=> (_module.OwnedObject.sequenceInv2 $prevHeap@@47 $Heap@@46 this@@70) (and (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@47 this@@70) _module.OwnedObject.owner)) null)) (not true)) (|_module.OwnedObject.userInv2#canCall| $prevHeap@@47 $Heap@@46 this@@70)) (=> (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@47 this@@70) _module.OwnedObject.owner)) null)) (not true)) (_module.OwnedObject.userInv2 $prevHeap@@47 $Heap@@46 this@@70)) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@47 this@@70) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@70) _module.OwnedObject.owner)))) (not true)) (and (|_module.Object.localInv#canCall| $Heap@@46 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@47 this@@70) _module.OwnedObject.owner))) (=> (_module.Object.localInv $Heap@@46 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@47 this@@70) _module.OwnedObject.owner))) (and (|_module.Object.localInv2#canCall| $prevHeap@@47 $Heap@@46 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@47 this@@70) _module.OwnedObject.owner))) (=> (_module.Object.localInv2 $prevHeap@@47 $Heap@@46 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@47 this@@70) _module.OwnedObject.owner))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@70) _module.OwnedObject.owner)) null)) (not true)) (and (|_module.Object.localInv#canCall| $Heap@@46 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@70) _module.OwnedObject.owner))) (=> (_module.Object.localInv $Heap@@46 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@70) _module.OwnedObject.owner))) (let ((|currOwner#0| ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@70) _module.OwnedObject.owner))))
 (=> ($IsAllocBox ($Box refType |currOwner#0|) Tclass._module.Object? $prevHeap@@47) (|_module.Object.localInv2#canCall| $prevHeap@@47 $Heap@@46 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@70) _module.OwnedObject.owner))))))))))))))))))) (= (_module.OwnedObject.inv2 $prevHeap@@47 $Heap@@46 this@@70)  (and (and (and (_module.OwnedObject.localInv2 $prevHeap@@47 $Heap@@46 this@@70) (_module.OwnedObject.sequenceInv2 $prevHeap@@47 $Heap@@46 this@@70)) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@47 this@@70) _module.OwnedObject.owner)) null)) (not true)) (_module.OwnedObject.userInv2 $prevHeap@@47 $Heap@@46 this@@70))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@47 this@@70) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@70) _module.OwnedObject.owner)))) (not true)) (and (and (_module.Object.localInv $Heap@@46 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@47 this@@70) _module.OwnedObject.owner))) (_module.Object.localInv2 $prevHeap@@47 $Heap@@46 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@47 this@@70) _module.OwnedObject.owner)))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@70) _module.OwnedObject.owner)) null)) (not true)) (and (_module.Object.localInv $Heap@@46 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@70) _module.OwnedObject.owner))) (let ((|currOwner#0@@0| ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@70) _module.OwnedObject.owner))))
 (=> ($IsAllocBox ($Box refType |currOwner#0@@0|) Tclass._module.Object? $prevHeap@@47) (_module.Object.localInv2 $prevHeap@@47 $Heap@@46 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@70) _module.OwnedObject.owner)))))))))))))
 :pattern ( (_module.OwnedObject.inv2 $prevHeap@@47 $Heap@@46 this@@70) ($IsGoodHeap $Heap@@46))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($prevHeap@@48 T@U) ($Heap@@47 T@U) (this@@71 T@U) (|running#0@@3| T@U) ) (!  (=> (or (|_module.Universe.legalTransitionsSequence#canCall| $prevHeap@@48 $Heap@@47 this@@71 |running#0@@3|) (and (< 9 $FunctionContextHeight) (and (and (and (and ($IsGoodHeap $prevHeap@@48) ($IsGoodHeap $Heap@@47)) ($HeapSucc $prevHeap@@48 $Heap@@47)) (and (or (not (= this@@71 null)) (not true)) (and ($Is refType this@@71 Tclass._module.Universe) ($IsAlloc refType this@@71 Tclass._module.Universe $prevHeap@@48)))) ($Is SetType |running#0@@3| (TSet Tclass._module.Thread))))) (and (and (|_module.Universe.baseLegalTransitionsSequence#canCall| $prevHeap@@48 $Heap@@47 this@@71) (=> (_module.Universe.baseLegalTransitionsSequence $prevHeap@@48 $Heap@@47 this@@71) (=> (|Set#Subset| |running#0@@3| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content))) (and (forall ((|o#0@@7| T@U) ) (!  (=> ($Is refType |o#0@@7| Tclass._module.Object) (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |o#0@@7|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 this@@71) _module.Universe.content)) ($Box refType |o#0@@7|))) (=> (not (forall (($o@@46 T@U) ($f@@30 T@U) ) (!  (=> (or (not (= $o@@46 null)) (not true)) (=> (= $o@@46 |o#0@@7|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 $o@@46) $f@@30) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 $o@@46) $f@@30))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 $o@@46) $f@@30))
))) (|_module.Object.sequenceInv2#canCall| $prevHeap@@48 $Heap@@47 |o#0@@7|))))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@48 $Heap@@47 |o#0@@7|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 this@@71) _module.Universe.content)) ($Box refType |o#0@@7|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |o#0@@7|)))
)) (=> (forall ((|o#0@@8| T@U) ) (!  (=> (and ($Is refType |o#0@@8| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |o#0@@8|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 this@@71) _module.Universe.content)) ($Box refType |o#0@@8|)))) (or (forall (($o@@47 T@U) ($f@@31 T@U) ) (!  (=> (or (not (= $o@@47 null)) (not true)) (=> (= $o@@47 |o#0@@8|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 $o@@47) $f@@31) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 $o@@47) $f@@31))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 $o@@47) $f@@31))
)) (_module.Object.sequenceInv2 $prevHeap@@48 $Heap@@47 |o#0@@8|)))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@48 $Heap@@47 |o#0@@8|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 this@@71) _module.Universe.content)) ($Box refType |o#0@@8|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |o#0@@8|)))
)) (=> (forall ((|o#1@@1| T@U) ) (!  (=> (and ($Is refType |o#1@@1| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |o#1@@1|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |o#1@@1|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (and (not (|Set#IsMember| |running#0@@3| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |o#1@@1|) _module.OwnedObject.owner))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |o#1@@1|) _module.OwnedObject.owner) Tclass._module.Object? $prevHeap@@48)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |o#1@@1|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 |o#1@@1|) _module.OwnedObject.nonvolatileVersion))))))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 |o#1@@1|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |o#1@@1|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |o#1@@1|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |o#1@@1|)))
)) (forall ((|l#0| T@U) ) (!  (=> ($Is refType |l#0| Tclass._module.Lifetime) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |l#0|)) (=> (not (|Set#IsMember| |running#0@@3| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |l#0|) _module.Lifetime.owner))) (=> ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |l#0|) _module.Lifetime.owner) Tclass._module.Thread? $prevHeap@@48) (|_module.Lifetime.unchangedNonvolatileFields#canCall| $prevHeap@@48 $Heap@@47 |l#0|)))))
 :pattern ( (_module.Lifetime.unchangedNonvolatileFields $prevHeap@@48 $Heap@@47 |l#0|))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |l#0|) _module.Lifetime.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |l#0|)))
)))))))) (= (_module.Universe.legalTransitionsSequence $prevHeap@@48 $Heap@@47 this@@71 |running#0@@3|)  (and (and (and (and (_module.Universe.baseLegalTransitionsSequence $prevHeap@@48 $Heap@@47 this@@71) (|Set#Subset| |running#0@@3| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)))) (forall ((|o#0@@9| T@U) ) (!  (=> (and ($Is refType |o#0@@9| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |o#0@@9|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 this@@71) _module.Universe.content)) ($Box refType |o#0@@9|)))) (or (forall (($o@@48 T@U) ($f@@32 T@U) ) (!  (=> (or (not (= $o@@48 null)) (not true)) (=> (= $o@@48 |o#0@@9|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 $o@@48) $f@@32) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 $o@@48) $f@@32))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 $o@@48) $f@@32))
)) (_module.Object.sequenceInv2 $prevHeap@@48 $Heap@@47 |o#0@@9|)))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@48 $Heap@@47 |o#0@@9|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 this@@71) _module.Universe.content)) ($Box refType |o#0@@9|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |o#0@@9|)))
))) (forall ((|o#1@@2| T@U) ) (!  (=> (and ($Is refType |o#1@@2| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |o#1@@2|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |o#1@@2|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (and (not (|Set#IsMember| |running#0@@3| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |o#1@@2|) _module.OwnedObject.owner))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |o#1@@2|) _module.OwnedObject.owner) Tclass._module.Object? $prevHeap@@48)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |o#1@@2|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 |o#1@@2|) _module.OwnedObject.nonvolatileVersion))))))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@47 |o#1@@2|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |o#1@@2|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |o#1@@2|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |o#1@@2|)))
))) (forall ((|l#0@@0| T@U) ) (!  (=> (and ($Is refType |l#0@@0| Tclass._module.Lifetime) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |l#0@@0|))) (=> (and (not (|Set#IsMember| |running#0@@3| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |l#0@@0|) _module.Lifetime.owner))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |l#0@@0|) _module.Lifetime.owner) Tclass._module.Thread? $prevHeap@@48)) (_module.Lifetime.unchangedNonvolatileFields $prevHeap@@48 $Heap@@47 |l#0@@0|)))
 :pattern ( (_module.Lifetime.unchangedNonvolatileFields $prevHeap@@48 $Heap@@47 |l#0@@0|))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 |l#0@@0|) _module.Lifetime.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@48 this@@71) _module.Universe.content)) ($Box refType |l#0@@0|)))
))))))
 :pattern ( (_module.Universe.legalTransitionsSequence $prevHeap@@48 $Heap@@47 this@@71 |running#0@@3|) ($IsGoodHeap $Heap@@47))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@48 T@U) (this@@72 T@U) ) (!  (=> (or (|_module.OwnedU32.objectUserFields#canCall| $Heap@@48 this@@72) (and (< 1 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@48) (and (or (not (= this@@72 null)) (not true)) (and ($Is refType this@@72 Tclass._module.OwnedU32) ($IsAlloc refType this@@72 Tclass._module.OwnedU32 $Heap@@48)))))) ($Is SetType (_module.OwnedU32.objectUserFields $Heap@@48 this@@72) (TSet Tclass._module.Object)))
 :pattern ( (_module.OwnedU32.objectUserFields $Heap@@48 this@@72))
))))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($Heap@@49 T@U) (this@@73 T@U) ) (!  (=> (or (|_module.OwnedObject.objectUserFields#canCall| $Heap@@49 this@@73) (and (< 3 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@49) (and (or (not (= this@@73 null)) (not true)) (and ($Is refType this@@73 Tclass._module.OwnedObject) ($IsAlloc refType this@@73 Tclass._module.OwnedObject $Heap@@49)))))) ($Is SetType (_module.OwnedObject.objectUserFields $Heap@@49 this@@73) (TSet Tclass._module.Object)))
 :pattern ( (_module.OwnedObject.objectUserFields $Heap@@49 this@@73))
))))
(assert  (=> (<= 4 $FunctionContextHeight) (forall (($Heap@@50 T@U) (this@@74 T@U) ) (!  (=> (or (|_module.OwnedObject.objectFields#canCall| $Heap@@50 this@@74) (and (< 4 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@50) (and (or (not (= this@@74 null)) (not true)) (and ($Is refType this@@74 Tclass._module.OwnedObject) ($IsAlloc refType this@@74 Tclass._module.OwnedObject $Heap@@50)))))) ($Is SetType (_module.OwnedObject.objectFields $Heap@@50 this@@74) (TSet Tclass._module.Object)))
 :pattern ( (_module.OwnedObject.objectFields $Heap@@50 this@@74))
))))
(assert (forall (($h@@20 T@U) ($o@@49 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@20) (and (or (not (= $o@@49 null)) (not true)) (= (dtype $o@@49) Tclass._module.Lifetime?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@20 $o@@49) alloc)))) ($IsAlloc refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@20 $o@@49) _module.Lifetime.owner)) Tclass._module.Thread? $h@@20))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@20 $o@@49) _module.Lifetime.owner)))
)))
(assert (forall ((a@@10 T@U) (b@@7 T@U) (o@@5 T@U) ) (! (= (|Set#IsMember| (|Set#Union| a@@10 b@@7) o@@5)  (or (|Set#IsMember| a@@10 o@@5) (|Set#IsMember| b@@7 o@@5)))
 :pattern ( (|Set#IsMember| (|Set#Union| a@@10 b@@7) o@@5))
)))
(assert (forall ((a@@11 T@U) (b@@8 T@U) ) (!  (=> (|Set#Disjoint| a@@11 b@@8) (and (= (|Set#Difference| (|Set#Union| a@@11 b@@8) a@@11) b@@8) (= (|Set#Difference| (|Set#Union| a@@11 b@@8) b@@8) a@@11)))
 :pattern ( (|Set#Union| a@@11 b@@8))
)))
(assert (forall (($o@@50 T@U) ($heap T@U) ) (!  (=> ($IsAlloc refType $o@@50 Tclass._module.Thread? $heap) ($IsAlloc refType $o@@50 Tclass._module.Object? $heap))
 :pattern ( ($IsAlloc refType $o@@50 Tclass._module.Thread? $heap))
)))
(assert (forall (($o@@51 T@U) ($heap@@0 T@U) ) (!  (=> ($IsAlloc refType $o@@51 Tclass._module.OwnedObject? $heap@@0) ($IsAlloc refType $o@@51 Tclass._module.Object? $heap@@0))
 :pattern ( ($IsAlloc refType $o@@51 Tclass._module.OwnedObject? $heap@@0))
)))
(assert (forall (($o@@52 T@U) ($heap@@1 T@U) ) (!  (=> ($IsAlloc refType $o@@52 Tclass._module.Lifetime? $heap@@1) ($IsAlloc refType $o@@52 Tclass._module.Object? $heap@@1))
 :pattern ( ($IsAlloc refType $o@@52 Tclass._module.Lifetime? $heap@@1))
)))
(assert (forall (($o@@53 T@U) ($heap@@2 T@U) ) (!  (=> ($IsAlloc refType $o@@53 Tclass._module.OwnedU32? $heap@@2) ($IsAlloc refType $o@@53 Tclass._module.OwnedObject? $heap@@2))
 :pattern ( ($IsAlloc refType $o@@53 Tclass._module.OwnedU32? $heap@@2))
)))
(assert (forall (($h@@21 T@U) ($o@@54 T@U) ) (!  (=> (and ($IsGoodHeap $h@@21) (and (or (not (= $o@@54 null)) (not true)) (= (dtype $o@@54) Tclass._module.Lifetime?))) ($Is SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@21 $o@@54) _module.Lifetime.elements)) (TSet Tclass._module.OwnedObject)))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@21 $o@@54) _module.Lifetime.elements)))
)))
(assert (forall (($h@@22 T@U) ($o@@55 T@U) ) (!  (=> (and ($IsGoodHeap $h@@22) (and (or (not (= $o@@55 null)) (not true)) (= (dtype $o@@55) Tclass._module.Lifetime?))) ($Is SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@22 $o@@55) _module.Lifetime.mightPointTo)) (TSet Tclass._module.Lifetime)))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@22 $o@@55) _module.Lifetime.mightPointTo)))
)))
(assert (forall (($h@@23 T@U) ($o@@56 T@U) ) (!  (=> (and ($IsGoodHeap $h@@23) (and (or (not (= $o@@56 null)) (not true)) (= (dtype $o@@56) Tclass._module.Lifetime?))) ($Is SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@23 $o@@56) _module.Lifetime.mightPointFrom)) (TSet Tclass._module.Lifetime)))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@23 $o@@56) _module.Lifetime.mightPointFrom)))
)))
(assert  (=> (<= 18 $FunctionContextHeight) (forall (($prevHeap@@49 T@U) ($Heap@@51 T@U) (this@@75 T@U) (|running#0@@4| T@U) ) (!  (=> (or (|_module.Object.goodPreAndLegalChanges#canCall| $prevHeap@@49 $Heap@@51 this@@75 |running#0@@4|) (and (< 18 $FunctionContextHeight) (and (and (and (and ($IsGoodHeap $prevHeap@@49) ($IsGoodHeap $Heap@@51)) ($HeapSucc $prevHeap@@49 $Heap@@51)) (and (or (not (= this@@75 null)) (not true)) (and ($Is refType this@@75 Tclass._module.Object) ($IsAlloc refType this@@75 Tclass._module.Object $prevHeap@@49)))) ($Is refType |running#0@@4| Tclass._module.Thread)))) (and (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@49 (_module.Object.universe this@@75)) _module.Universe.content)) ($Box refType this@@75)) (=> (forall (($o@@57 T@U) ($f@@33 T@U) ) (!  (=> (or (not (= $o@@57 null)) (not true)) (=> (= $o@@57 this@@75) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@51 $o@@57) $f@@33) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@49 $o@@57) $f@@33))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@51 $o@@57) $f@@33))
)) (|_module.Universe.legalTransition#canCall| $prevHeap@@49 $Heap@@51 (_module.Object.universe this@@75) |running#0@@4|))) (= (_module.Object.goodPreAndLegalChanges $prevHeap@@49 $Heap@@51 this@@75 |running#0@@4|)  (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@49 (_module.Object.universe this@@75)) _module.Universe.content)) ($Box refType this@@75)) (forall (($o@@58 T@U) ($f@@34 T@U) ) (!  (=> (or (not (= $o@@58 null)) (not true)) (=> (= $o@@58 this@@75) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@51 $o@@58) $f@@34) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@49 $o@@58) $f@@34))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@51 $o@@58) $f@@34))
))) (_module.Universe.legalTransition $prevHeap@@49 $Heap@@51 (_module.Object.universe this@@75) |running#0@@4|)))))
 :pattern ( (_module.Object.goodPreAndLegalChanges $prevHeap@@49 $Heap@@51 this@@75 |running#0@@4|) ($IsGoodHeap $Heap@@51))
))))
(assert (forall (($h@@24 T@U) ($o@@59 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@24) (and (or (not (= $o@@59 null)) (not true)) (= (dtype $o@@59) Tclass._module.Lifetime?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@24 $o@@59) alloc)))) ($IsAlloc SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@24 $o@@59) _module.Lifetime.elements)) (TSet Tclass._module.OwnedObject) $h@@24))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@24 $o@@59) _module.Lifetime.elements)))
)))
(assert (forall (($h@@25 T@U) ($o@@60 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@25) (and (or (not (= $o@@60 null)) (not true)) (= (dtype $o@@60) Tclass._module.Lifetime?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@25 $o@@60) alloc)))) ($IsAlloc SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@25 $o@@60) _module.Lifetime.mightPointTo)) (TSet Tclass._module.Lifetime) $h@@25))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@25 $o@@60) _module.Lifetime.mightPointTo)))
)))
(assert (forall (($h@@26 T@U) ($o@@61 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@26) (and (or (not (= $o@@61 null)) (not true)) (= (dtype $o@@61) Tclass._module.Lifetime?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@26 $o@@61) alloc)))) ($IsAlloc SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@26 $o@@61) _module.Lifetime.mightPointFrom)) (TSet Tclass._module.Lifetime) $h@@26))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@26 $o@@61) _module.Lifetime.mightPointFrom)))
)))
(assert (forall (($h0@@23 T@U) ($h1@@23 T@U) (this@@76 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@23) ($IsGoodHeap $h1@@23)) (and (or (not (= this@@76 null)) (not true)) ($Is refType this@@76 Tclass._module.OwnedObject))) (and ($IsHeapAnchor $h0@@23) ($HeapSucc $h0@@23 $h1@@23))) (=> (forall (($o@@62 T@U) ($f@@35 T@U) )  (=> (and (or (not (= $o@@62 null)) (not true)) (and (= $o@@62 this@@76) (= $f@@35 _module.OwnedObject.owner))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@23 $o@@62) $f@@35) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@23 $o@@62) $f@@35)))) (= (_module.OwnedObject.alive $h0@@23 this@@76) (_module.OwnedObject.alive $h1@@23 this@@76))))
 :pattern ( ($IsHeapAnchor $h0@@23) ($HeapSucc $h0@@23 $h1@@23) (_module.OwnedObject.alive $h1@@23 this@@76))
)))
(assert (forall (($h0@@24 T@U) ($h1@@24 T@U) (this@@77 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@24) ($IsGoodHeap $h1@@24)) (and (or (not (= this@@77 null)) (not true)) ($Is refType this@@77 Tclass._module.Lifetime))) (and ($IsHeapAnchor $h0@@24) ($HeapSucc $h0@@24 $h1@@24))) (=> (forall (($o@@63 T@U) ($f@@36 T@U) )  (=> (and (or (not (= $o@@63 null)) (not true)) (and (= $o@@63 this@@77) (= $f@@36 _module.Lifetime.owner))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@24 $o@@63) $f@@36) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@24 $o@@63) $f@@36)))) (= (_module.Lifetime.alive $h0@@24 this@@77) (_module.Lifetime.alive $h1@@24 this@@77))))
 :pattern ( ($IsHeapAnchor $h0@@24) ($HeapSucc $h0@@24 $h1@@24) (_module.Lifetime.alive $h1@@24 this@@77))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@50 T@U) ($Heap@@52 T@U) (this@@78 T@U) ) (!  (=> (or (|_module.Thread.localInv2#canCall| $prevHeap@@50 $Heap@@52 this@@78) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@50) ($IsGoodHeap $Heap@@52)) ($HeapSucc $prevHeap@@50 $Heap@@52)) (and (or (not (= this@@78 null)) (not true)) (and ($Is refType this@@78 Tclass._module.Thread) ($IsAlloc refType this@@78 Tclass._module.Thread $prevHeap@@50)))))) (= (_module.Thread.localInv2 $prevHeap@@50 $Heap@@52 this@@78) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.Thread.localInv2 $prevHeap@@50 $Heap@@52 this@@78) ($IsGoodHeap $Heap@@52))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@51 T@U) ($Heap@@53 T@U) (this@@79 T@U) ) (!  (=> (or (|_module.Thread.sequenceInv2#canCall| $prevHeap@@51 $Heap@@53 this@@79) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@51) ($IsGoodHeap $Heap@@53)) ($HeapSucc $prevHeap@@51 $Heap@@53)) (and (or (not (= this@@79 null)) (not true)) (and ($Is refType this@@79 Tclass._module.Thread) ($IsAlloc refType this@@79 Tclass._module.Thread $prevHeap@@51)))))) (= (_module.Thread.sequenceInv2 $prevHeap@@51 $Heap@@53 this@@79) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.Thread.sequenceInv2 $prevHeap@@51 $Heap@@53 this@@79) ($IsGoodHeap $Heap@@53))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@52 T@U) ($Heap@@54 T@U) (this@@80 T@U) ) (!  (=> (or (|_module.Lifetime.localInv2#canCall| $prevHeap@@52 $Heap@@54 this@@80) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@52) ($IsGoodHeap $Heap@@54)) ($HeapSucc $prevHeap@@52 $Heap@@54)) (and (or (not (= this@@80 null)) (not true)) (and ($Is refType this@@80 Tclass._module.Lifetime) ($IsAlloc refType this@@80 Tclass._module.Lifetime $prevHeap@@52)))))) (= (_module.Lifetime.localInv2 $prevHeap@@52 $Heap@@54 this@@80) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.Lifetime.localInv2 $prevHeap@@52 $Heap@@54 this@@80) ($IsGoodHeap $Heap@@54))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@53 T@U) ($Heap@@55 T@U) (this@@81 T@U) ) (!  (=> (or (|_module.OwnedU32.localUserInv2#canCall| $prevHeap@@53 $Heap@@55 this@@81) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@53) ($IsGoodHeap $Heap@@55)) ($HeapSucc $prevHeap@@53 $Heap@@55)) (and (or (not (= this@@81 null)) (not true)) (and ($Is refType this@@81 Tclass._module.OwnedU32) ($IsAlloc refType this@@81 Tclass._module.OwnedU32 $prevHeap@@53)))))) (= (_module.OwnedU32.localUserInv2 $prevHeap@@53 $Heap@@55 this@@81) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.OwnedU32.localUserInv2 $prevHeap@@53 $Heap@@55 this@@81) ($IsGoodHeap $Heap@@55))
))))
(assert (forall (($h0@@25 T@U) ($h1@@25 T@U) (this@@82 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@25) ($IsGoodHeap $h1@@25)) (and (or (not (= this@@82 null)) (not true)) ($Is refType this@@82 Tclass._module.Object))) (and ($IsHeapAnchor $h0@@25) ($HeapSucc $h0@@25 $h1@@25))) (=> (forall (($o@@64 T@U) ($f@@37 T@U) )  (=> (and (or (not (= $o@@64 null)) (not true)) (or (= $o@@64 this@@82) (= $o@@64 (_module.Object.universe this@@82)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@25 $o@@64) $f@@37) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@25 $o@@64) $f@@37)))) (= (_module.Object.baseFieldsInv $h0@@25 this@@82) (_module.Object.baseFieldsInv $h1@@25 this@@82))))
 :pattern ( ($IsHeapAnchor $h0@@25) ($HeapSucc $h0@@25 $h1@@25) (_module.Object.baseFieldsInv $h1@@25 this@@82))
)))
(assert (forall (($h0@@26 T@U) ($h1@@26 T@U) (this@@83 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@26) ($IsGoodHeap $h1@@26)) (and (or (not (= this@@83 null)) (not true)) ($Is refType this@@83 Tclass._module.Thread))) (and ($IsHeapAnchor $h0@@26) ($HeapSucc $h0@@26 $h1@@26))) (=> (forall (($o@@65 T@U) ($f@@38 T@U) )  (=> (and (or (not (= $o@@65 null)) (not true)) (or (= $o@@65 this@@83) (= $o@@65 (_module.Object.universe this@@83)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@26 $o@@65) $f@@38) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@26 $o@@65) $f@@38)))) (= (_module.Thread.baseFieldsInv $h0@@26 this@@83) (_module.Thread.baseFieldsInv $h1@@26 this@@83))))
 :pattern ( ($IsHeapAnchor $h0@@26) ($HeapSucc $h0@@26 $h1@@26) (_module.Thread.baseFieldsInv $h1@@26 this@@83))
)))
(assert (forall (($h0@@27 T@U) ($h1@@27 T@U) (this@@84 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@27) ($IsGoodHeap $h1@@27)) (and (or (not (= this@@84 null)) (not true)) ($Is refType this@@84 Tclass._module.OwnedObject))) (and ($IsHeapAnchor $h0@@27) ($HeapSucc $h0@@27 $h1@@27))) (=> (forall (($o@@66 T@U) ($f@@39 T@U) )  (=> (and (or (not (= $o@@66 null)) (not true)) (or (= $o@@66 this@@84) (= $o@@66 (_module.Object.universe this@@84)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@27 $o@@66) $f@@39) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@27 $o@@66) $f@@39)))) (= (_module.OwnedObject.baseFieldsInv $h0@@27 this@@84) (_module.OwnedObject.baseFieldsInv $h1@@27 this@@84))))
 :pattern ( ($IsHeapAnchor $h0@@27) ($HeapSucc $h0@@27 $h1@@27) (_module.OwnedObject.baseFieldsInv $h1@@27 this@@84))
)))
(assert (forall (($h0@@28 T@U) ($h1@@28 T@U) (this@@85 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@28) ($IsGoodHeap $h1@@28)) (and (or (not (= this@@85 null)) (not true)) ($Is refType this@@85 Tclass._module.Lifetime))) (and ($IsHeapAnchor $h0@@28) ($HeapSucc $h0@@28 $h1@@28))) (=> (forall (($o@@67 T@U) ($f@@40 T@U) )  (=> (and (or (not (= $o@@67 null)) (not true)) (or (= $o@@67 this@@85) (= $o@@67 (_module.Object.universe this@@85)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@28 $o@@67) $f@@40) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@28 $o@@67) $f@@40)))) (= (_module.Lifetime.baseFieldsInv $h0@@28 this@@85) (_module.Lifetime.baseFieldsInv $h1@@28 this@@85))))
 :pattern ( ($IsHeapAnchor $h0@@28) ($HeapSucc $h0@@28 $h1@@28) (_module.Lifetime.baseFieldsInv $h1@@28 this@@85))
)))
(assert  (=> (<= 5 $FunctionContextHeight) (forall (($Heap@@56 T@U) (this@@86 T@U) ) (!  (=> (or (|_module.OwnedObject.baseFieldsInv#canCall| $Heap@@56 this@@86) (and (< 5 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@56) (and (or (not (= this@@86 null)) (not true)) (and ($Is refType this@@86 Tclass._module.OwnedObject) ($IsAlloc refType this@@86 Tclass._module.OwnedObject $Heap@@56)))))) (and (|_module.OwnedObject.objectFields#canCall| $Heap@@56 this@@86) (= (_module.OwnedObject.baseFieldsInv $Heap@@56 this@@86) (|Set#Subset| (_module.OwnedObject.objectFields $Heap@@56 this@@86) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@56 (_module.Object.universe this@@86)) _module.Universe.content))))))
 :pattern ( (_module.OwnedObject.baseFieldsInv $Heap@@56 this@@86) ($IsGoodHeap $Heap@@56))
))))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($Heap@@57 T@U) (this@@87 T@U) ) (!  (=> (or (|_module.Object.nonAliasing#canCall| $Heap@@57 this@@87) (and (< 3 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@57) (and (or (not (= this@@87 null)) (not true)) (and ($Is refType this@@87 Tclass._module.Object) ($IsAlloc refType this@@87 Tclass._module.Object $Heap@@57)))))) (and (and (and (|$IsA#_module.ObjectClassKind| (_module.Object.objectClassKind this@@87)) (|_module.Object.objectClassKind#canCall| this@@87)) (=> (= (|_module.ObjectClassKind#Equal| (_module.Object.objectClassKind this@@87) |#_module.ObjectClassKind.Thread|) ($Is refType this@@87 Tclass._module.Thread)) (and (and (|$IsA#_module.ObjectClassKind| (_module.Object.objectClassKind this@@87)) (|_module.Object.objectClassKind#canCall| this@@87)) (=> (= (|_module.ObjectClassKind#Equal| (_module.Object.objectClassKind this@@87) |#_module.ObjectClassKind.OwnedObject|) ($Is refType this@@87 Tclass._module.OwnedObject)) (and (|$IsA#_module.ObjectClassKind| (_module.Object.objectClassKind this@@87)) (|_module.Object.objectClassKind#canCall| this@@87)))))) (= (_module.Object.nonAliasing $Heap@@57 this@@87)  (and (and (= (|_module.ObjectClassKind#Equal| (_module.Object.objectClassKind this@@87) |#_module.ObjectClassKind.Thread|) ($Is refType this@@87 Tclass._module.Thread)) (= (|_module.ObjectClassKind#Equal| (_module.Object.objectClassKind this@@87) |#_module.ObjectClassKind.OwnedObject|) ($Is refType this@@87 Tclass._module.OwnedObject))) (= (|_module.ObjectClassKind#Equal| (_module.Object.objectClassKind this@@87) |#_module.ObjectClassKind.Lifetime|) ($Is refType this@@87 Tclass._module.Lifetime))))))
 :pattern ( (_module.Object.nonAliasing $Heap@@57 this@@87) ($IsGoodHeap $Heap@@57))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((this@@88 T@U) ) (!  (=> (or (|_module.Thread.objectClassKind#canCall| this@@88) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@88 null)) (not true)) ($Is refType this@@88 Tclass._module.Thread)))) (= (_module.Thread.objectClassKind this@@88) (Lit DatatypeTypeType |#_module.ObjectClassKind.Thread|)))
 :pattern ( (_module.Thread.objectClassKind this@@88))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((this@@89 T@U) ) (!  (=> (or (|_module.OwnedObject.objectClassKind#canCall| this@@89) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@89 null)) (not true)) ($Is refType this@@89 Tclass._module.OwnedObject)))) (= (_module.OwnedObject.objectClassKind this@@89) (Lit DatatypeTypeType |#_module.ObjectClassKind.OwnedObject|)))
 :pattern ( (_module.OwnedObject.objectClassKind this@@89))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((this@@90 T@U) ) (!  (=> (or (|_module.Lifetime.objectClassKind#canCall| this@@90) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@90 null)) (not true)) ($Is refType this@@90 Tclass._module.Lifetime)))) (= (_module.Lifetime.objectClassKind this@@90) (Lit DatatypeTypeType |#_module.ObjectClassKind.Lifetime|)))
 :pattern ( (_module.Lifetime.objectClassKind this@@90))
))))
(assert (forall ((a@@12 T@U) (b@@9 T@U) ) (!  (=> (|Set#Equal| a@@12 b@@9) (= a@@12 b@@9))
 :pattern ( (|Set#Equal| a@@12 b@@9))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@58 T@U) (this@@91 T@U) ) (!  (=> (or (|_module.OwnedU32.objectUserFields#canCall| $Heap@@58 this@@91) (and (< 1 $FunctionContextHeight) (and (and ($IsGoodHeap $Heap@@58) (or (not (= this@@91 null)) (not true))) ($IsAlloc refType this@@91 Tclass._module.OwnedU32 $Heap@@58)))) ($IsAlloc SetType (_module.OwnedU32.objectUserFields $Heap@@58 this@@91) (TSet Tclass._module.Object) $Heap@@58))
 :pattern ( ($IsAlloc SetType (_module.OwnedU32.objectUserFields $Heap@@58 this@@91) (TSet Tclass._module.Object) $Heap@@58))
))))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($Heap@@59 T@U) (this@@92 T@U) ) (!  (=> (or (|_module.OwnedObject.objectUserFields#canCall| $Heap@@59 this@@92) (and (< 3 $FunctionContextHeight) (and (and ($IsGoodHeap $Heap@@59) (or (not (= this@@92 null)) (not true))) ($IsAlloc refType this@@92 Tclass._module.OwnedObject $Heap@@59)))) ($IsAlloc SetType (_module.OwnedObject.objectUserFields $Heap@@59 this@@92) (TSet Tclass._module.Object) $Heap@@59))
 :pattern ( ($IsAlloc SetType (_module.OwnedObject.objectUserFields $Heap@@59 this@@92) (TSet Tclass._module.Object) $Heap@@59))
))))
(assert  (=> (<= 4 $FunctionContextHeight) (forall (($Heap@@60 T@U) (this@@93 T@U) ) (!  (=> (or (|_module.OwnedObject.objectFields#canCall| $Heap@@60 this@@93) (and (< 4 $FunctionContextHeight) (and (and ($IsGoodHeap $Heap@@60) (or (not (= this@@93 null)) (not true))) ($IsAlloc refType this@@93 Tclass._module.OwnedObject $Heap@@60)))) ($IsAlloc SetType (_module.OwnedObject.objectFields $Heap@@60 this@@93) (TSet Tclass._module.Object) $Heap@@60))
 :pattern ( ($IsAlloc SetType (_module.OwnedObject.objectFields $Heap@@60 this@@93) (TSet Tclass._module.Object) $Heap@@60))
))))
(assert  (=> (<= 4 $FunctionContextHeight) (forall (($Heap@@61 T@U) (this@@94 T@U) ) (!  (=> (or (|_module.Object.triggerAxioms#canCall| $Heap@@61 this@@94) (and (< 4 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@61) (and (or (not (= this@@94 null)) (not true)) (and ($Is refType this@@94 Tclass._module.Object) ($IsAlloc refType this@@94 Tclass._module.Object $Heap@@61)))))) (_module.Object.triggerAxioms $Heap@@61 this@@94))
 :pattern ( (_module.Object.triggerAxioms $Heap@@61 this@@94))
))))
(assert  (=> (<= 11 $FunctionContextHeight) (forall (($Heap@@62 T@U) (this@@95 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv#canCall| $Heap@@62 this@@95) (and (< 11 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@62) (and (or (not (= this@@95 null)) (not true)) (and ($Is refType this@@95 Tclass._module.OwnedObject) ($IsAlloc refType this@@95 Tclass._module.OwnedObject $Heap@@62)))))) (and (and (|_module.Object.objectGlobalBaseInv#canCall| $Heap@@62 this@@95) (=> (_module.Object.objectGlobalBaseInv $Heap@@62 this@@95) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 (_module.OwnedObject.lifetime this@@95)) _module.Lifetime.elements)) ($Box refType this@@95)) (and (|_module.Lifetime.alive#canCall| $Heap@@62 (_module.OwnedObject.lifetime this@@95)) (=> (=> (_module.Lifetime.alive $Heap@@62 (_module.OwnedObject.lifetime this@@95)) (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 this@@95) _module.OwnedObject.owner)) null)) (not true))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 this@@95) _module.OwnedObject.owner)) null)) (not true)) (|_module.OwnedObject.localUserInv#canCall| $Heap@@62 this@@95))))))) (= (_module.OwnedObject.localInv $Heap@@62 this@@95)  (and (and (and (_module.Object.objectGlobalBaseInv $Heap@@62 this@@95) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 (_module.OwnedObject.lifetime this@@95)) _module.Lifetime.elements)) ($Box refType this@@95))) (=> (_module.Lifetime.alive $Heap@@62 (_module.OwnedObject.lifetime this@@95)) (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 this@@95) _module.OwnedObject.owner)) null)) (not true)))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 this@@95) _module.OwnedObject.owner)) null)) (not true)) (_module.OwnedObject.localUserInv $Heap@@62 this@@95))))))
 :pattern ( (_module.OwnedObject.localInv $Heap@@62 this@@95) ($IsGoodHeap $Heap@@62))
))))
(assert (forall ((a@@13 T@U) (b@@10 T@U) (c T@U) ) (!  (=> (or (not (= a@@13 c)) (not true)) (=> (and ($HeapSucc a@@13 b@@10) ($HeapSucc b@@10 c)) ($HeapSucc a@@13 c)))
 :pattern ( ($HeapSucc a@@13 b@@10) ($HeapSucc b@@10 c))
)))
(assert (forall ((cl T@U) (nm T@U) ) (!  (and (= (DeclType (FieldOfDecl cl nm)) cl) (= (DeclName (FieldOfDecl cl nm)) nm))
 :pattern ( (FieldOfDecl cl nm))
)))
(assert (forall ((bx@@18 T@U) ) (!  (=> ($IsBox bx@@18 TInt) (and (= ($Box intType ($Unbox intType bx@@18)) bx@@18) ($Is intType ($Unbox intType bx@@18) TInt)))
 :pattern ( ($IsBox bx@@18 TInt))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@63 T@U) (this@@96 T@U) ) (!  (=> (or (|_module.OwnedU32.userInv#canCall| $Heap@@63 this@@96) (and (< 1 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@63) (and (or (not (= this@@96 null)) (not true)) (and ($Is refType this@@96 Tclass._module.OwnedU32) ($IsAlloc refType this@@96 Tclass._module.OwnedU32 $Heap@@63)))))) (=> (_module.OwnedU32.userInv $Heap@@63 this@@96) (_module.OwnedU32.localUserInv $Heap@@63 this@@96)))
 :pattern ( (_module.OwnedU32.userInv $Heap@@63 this@@96))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@64 T@U) (this@@97 T@U) ) (!  (=> (or (|_module.Thread.localInv#canCall| $Heap@@64 this@@97) (and (< 9 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@64) (and (or (not (= this@@97 null)) (not true)) (and ($Is refType this@@97 Tclass._module.Thread) ($IsAlloc refType this@@97 Tclass._module.Thread $Heap@@64)))))) (=> (_module.Thread.localInv $Heap@@64 this@@97) (_module.Object.objectGlobalBaseInv $Heap@@64 this@@97)))
 :pattern ( (_module.Thread.localInv $Heap@@64 this@@97))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@65 T@U) (this@@98 T@U) ) (!  (=> (or (|_module.Lifetime.localInv#canCall| $Heap@@65 this@@98) (and (< 9 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@65) (and (or (not (= this@@98 null)) (not true)) (and ($Is refType this@@98 Tclass._module.Lifetime) ($IsAlloc refType this@@98 Tclass._module.Lifetime $Heap@@65)))))) (=> (_module.Lifetime.localInv $Heap@@65 this@@98) (_module.Object.objectGlobalBaseInv $Heap@@65 this@@98)))
 :pattern ( (_module.Lifetime.localInv $Heap@@65 this@@98))
))))
(assert  (=> (<= 10 $FunctionContextHeight) (forall (($Heap@@66 T@U) (this@@99 T@U) ) (!  (=> (or (|_module.Thread.inv#canCall| $Heap@@66 this@@99) (and (< 10 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@66) (and (or (not (= this@@99 null)) (not true)) (and ($Is refType this@@99 Tclass._module.Thread) ($IsAlloc refType this@@99 Tclass._module.Thread $Heap@@66)))))) (=> (_module.Thread.inv $Heap@@66 this@@99) (_module.Thread.localInv $Heap@@66 this@@99)))
 :pattern ( (_module.Thread.inv $Heap@@66 this@@99))
))))
(assert  (=> (<= 10 $FunctionContextHeight) (forall (($Heap@@67 T@U) (this@@100 T@U) ) (!  (=> (or (|_module.Lifetime.inv#canCall| $Heap@@67 this@@100) (and (< 10 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@67) (and (or (not (= this@@100 null)) (not true)) (and ($Is refType this@@100 Tclass._module.Lifetime) ($IsAlloc refType this@@100 Tclass._module.Lifetime $Heap@@67)))))) (=> (_module.Lifetime.inv $Heap@@67 this@@100) (_module.Lifetime.localInv $Heap@@67 this@@100)))
 :pattern ( (_module.Lifetime.inv $Heap@@67 this@@100))
))))
(assert  (=> (<= 11 $FunctionContextHeight) (forall (($Heap@@68 T@U) (this@@101 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv#canCall| $Heap@@68 this@@101) (and (< 11 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@68) (and (or (not (= this@@101 null)) (not true)) (and ($Is refType this@@101 Tclass._module.OwnedObject) ($IsAlloc refType this@@101 Tclass._module.OwnedObject $Heap@@68)))))) (=> (_module.OwnedObject.localInv $Heap@@68 this@@101) (_module.Object.objectGlobalBaseInv $Heap@@68 this@@101)))
 :pattern ( (_module.OwnedObject.localInv $Heap@@68 this@@101))
))))
(assert  (=> (<= 12 $FunctionContextHeight) (forall (($Heap@@69 T@U) (this@@102 T@U) ) (!  (=> (or (|_module.Object.localInv#canCall| $Heap@@69 this@@102) (and (< 12 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@69) (and (or (not (= this@@102 null)) (not true)) (and ($Is refType this@@102 Tclass._module.Object) ($IsAlloc refType this@@102 Tclass._module.Object $Heap@@69)))))) (=> (_module.Object.localInv $Heap@@69 this@@102) (_module.Object.objectGlobalBaseInv $Heap@@69 this@@102)))
 :pattern ( (_module.Object.localInv $Heap@@69 this@@102))
))))
(assert  (=> (<= 13 $FunctionContextHeight) (forall (($Heap@@70 T@U) (this@@103 T@U) ) (!  (=> (or (|_module.OwnedObject.userInv#canCall| $Heap@@70 this@@103) (and (< 13 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@70) (and (or (not (= this@@103 null)) (not true)) (and ($Is refType this@@103 Tclass._module.OwnedObject) ($IsAlloc refType this@@103 Tclass._module.OwnedObject $Heap@@70)))))) (=> (_module.OwnedObject.userInv $Heap@@70 this@@103) (_module.OwnedObject.localUserInv $Heap@@70 this@@103)))
 :pattern ( (_module.OwnedObject.userInv $Heap@@70 this@@103))
))))
(assert  (=> (<= 14 $FunctionContextHeight) (forall (($Heap@@71 T@U) (this@@104 T@U) ) (!  (=> (or (|_module.OwnedObject.inv#canCall| $Heap@@71 this@@104) (and (< 14 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@71) (and (or (not (= this@@104 null)) (not true)) (and ($Is refType this@@104 Tclass._module.OwnedObject) ($IsAlloc refType this@@104 Tclass._module.OwnedObject $Heap@@71)))))) (=> (_module.OwnedObject.inv $Heap@@71 this@@104) (_module.OwnedObject.localInv $Heap@@71 this@@104)))
 :pattern ( (_module.OwnedObject.inv $Heap@@71 this@@104))
))))
(assert  (=> (<= 15 $FunctionContextHeight) (forall (($Heap@@72 T@U) (this@@105 T@U) ) (!  (=> (or (|_module.Object.inv#canCall| $Heap@@72 this@@105) (and (< 15 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@72) (and (or (not (= this@@105 null)) (not true)) (and ($Is refType this@@105 Tclass._module.Object) ($IsAlloc refType this@@105 Tclass._module.Object $Heap@@72)))))) (=> (_module.Object.inv $Heap@@72 this@@105) (_module.Object.localInv $Heap@@72 this@@105)))
 :pattern ( (_module.Object.inv $Heap@@72 this@@105))
))))
(assert (forall ((v@@2 T@U) (t@@2 T@U) (T@@3 T@T) ) (! (= ($IsBox ($Box T@@3 v@@2) t@@2) ($Is T@@3 v@@2 t@@2))
 :pattern ( ($IsBox ($Box T@@3 v@@2) t@@2))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($prevHeap@@54 T@U) ($Heap@@73 T@U) (this@@106 T@U) ) (!  (=> (or (|_module.OwnedObject.unchangedNonvolatileFields#canCall| $prevHeap@@54 $Heap@@73 this@@106) (and (< 2 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@54) ($IsGoodHeap $Heap@@73)) ($HeapSucc $prevHeap@@54 $Heap@@73)) (and (or (not (= this@@106 null)) (not true)) (and ($Is refType this@@106 Tclass._module.OwnedObject) ($IsAlloc refType this@@106 Tclass._module.OwnedObject $prevHeap@@54)))))) (and (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@54 this@@106) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@73 this@@106) _module.OwnedObject.owner))) (|_module.OwnedObject.unchangedNonvolatileUserFields#canCall| $prevHeap@@54 $Heap@@73 this@@106)) (= (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@54 $Heap@@73 this@@106)  (and (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@54 this@@106) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@73 this@@106) _module.OwnedObject.owner))) (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@54 $Heap@@73 this@@106)))))
 :pattern ( (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@54 $Heap@@73 this@@106) ($IsGoodHeap $Heap@@73))
))))
(assert (forall ((a@@14 T@U) (b@@11 T@U) ) (!  (=> (and (_module.ObjectClassKind.Thread_q a@@14) (_module.ObjectClassKind.Thread_q b@@11)) (|_module.ObjectClassKind#Equal| a@@14 b@@11))
 :pattern ( (|_module.ObjectClassKind#Equal| a@@14 b@@11) (_module.ObjectClassKind.Thread_q a@@14))
 :pattern ( (|_module.ObjectClassKind#Equal| a@@14 b@@11) (_module.ObjectClassKind.Thread_q b@@11))
)))
(assert (forall ((a@@15 T@U) (b@@12 T@U) ) (!  (=> (and (_module.ObjectClassKind.OwnedObject_q a@@15) (_module.ObjectClassKind.OwnedObject_q b@@12)) (|_module.ObjectClassKind#Equal| a@@15 b@@12))
 :pattern ( (|_module.ObjectClassKind#Equal| a@@15 b@@12) (_module.ObjectClassKind.OwnedObject_q a@@15))
 :pattern ( (|_module.ObjectClassKind#Equal| a@@15 b@@12) (_module.ObjectClassKind.OwnedObject_q b@@12))
)))
(assert (forall ((a@@16 T@U) (b@@13 T@U) ) (!  (=> (and (_module.ObjectClassKind.Lifetime_q a@@16) (_module.ObjectClassKind.Lifetime_q b@@13)) (|_module.ObjectClassKind#Equal| a@@16 b@@13))
 :pattern ( (|_module.ObjectClassKind#Equal| a@@16 b@@13) (_module.ObjectClassKind.Lifetime_q a@@16))
 :pattern ( (|_module.ObjectClassKind#Equal| a@@16 b@@13) (_module.ObjectClassKind.Lifetime_q b@@13))
)))
(assert (forall ((v@@3 T@U) (t0@@1 T@U) (h@@3 T@U) ) (! (= ($IsAlloc SetType v@@3 (TSet t0@@1) h@@3) (forall ((bx@@19 T@U) ) (!  (=> (|Set#IsMember| v@@3 bx@@19) ($IsAllocBox bx@@19 t0@@1 h@@3))
 :pattern ( (|Set#IsMember| v@@3 bx@@19))
)))
 :pattern ( ($IsAlloc SetType v@@3 (TSet t0@@1) h@@3))
)))
(assert (forall (($h@@27 T@U) ($o@@68 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@27) (and (or (not (= $o@@68 null)) (not true)) ($Is refType $o@@68 Tclass._module.OwnedObject?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@27 $o@@68) alloc)))) ($IsAlloc intType ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@27 $o@@68) _module.OwnedObject.nonvolatileVersion)) TInt $h@@27))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@27 $o@@68) _module.OwnedObject.nonvolatileVersion)))
)))
(assert (forall ((t@@3 T@U) ) (! (= (Inv0_TSet (TSet t@@3)) t@@3)
 :pattern ( (TSet t@@3))
)))
(assert (forall ((t@@4 T@U) ) (! (= (Tag (TSet t@@4)) TagSet)
 :pattern ( (TSet t@@4))
)))
(assert (forall ((x@@7 T@U) (T@@4 T@T) ) (! (= ($Unbox T@@4 ($Box T@@4 x@@7)) x@@7)
 :pattern ( ($Box T@@4 x@@7))
)))
(assert (forall ((d@@5 T@U) ) (!  (=> (|$IsA#_module.ObjectClassKind| d@@5) (or (or (_module.ObjectClassKind.Thread_q d@@5) (_module.ObjectClassKind.OwnedObject_q d@@5)) (_module.ObjectClassKind.Lifetime_q d@@5)))
 :pattern ( (|$IsA#_module.ObjectClassKind| d@@5))
)))
(assert (forall (($h0@@29 T@U) ($h1@@29 T@U) (this@@107 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@29) ($IsGoodHeap $h1@@29)) (and (or (not (= this@@107 null)) (not true)) ($Is refType this@@107 Tclass._module.Object))) (and ($IsHeapAnchor $h0@@29) ($HeapSucc $h0@@29 $h1@@29))) (=> (forall (($o@@69 T@U) ($f@@41 T@U) )  (=> (and (or (not (= $o@@69 null)) (not true)) (= $o@@69 this@@107)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@29 $o@@69) $f@@41) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@29 $o@@69) $f@@41)))) (= (_module.Object.nonAliasing $h0@@29 this@@107) (_module.Object.nonAliasing $h1@@29 this@@107))))
 :pattern ( ($IsHeapAnchor $h0@@29) ($HeapSucc $h0@@29 $h1@@29) (_module.Object.nonAliasing $h1@@29 this@@107))
)))
(assert (forall (($h0@@30 T@U) ($h1@@30 T@U) (this@@108 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@30) ($IsGoodHeap $h1@@30)) (and (or (not (= this@@108 null)) (not true)) ($Is refType this@@108 Tclass._module.Object))) (and ($IsHeapAnchor $h0@@30) ($HeapSucc $h0@@30 $h1@@30))) (=> (forall (($o@@70 T@U) ($f@@42 T@U) )  (=> (and (or (not (= $o@@70 null)) (not true)) (= $o@@70 this@@108)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@30 $o@@70) $f@@42) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@30 $o@@70) $f@@42)))) (= (_module.Object.triggerAxioms $h0@@30 this@@108) (_module.Object.triggerAxioms $h1@@30 this@@108))))
 :pattern ( ($IsHeapAnchor $h0@@30) ($HeapSucc $h0@@30 $h1@@30) (_module.Object.triggerAxioms $h1@@30 this@@108))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((this@@109 T@U) ) (!  (=> (or (|_module.Thread.objectClassKind#canCall| (Lit refType this@@109)) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@109 null)) (not true)) ($Is refType this@@109 Tclass._module.Thread)))) (= (_module.Thread.objectClassKind (Lit refType this@@109)) (Lit DatatypeTypeType |#_module.ObjectClassKind.Thread|)))
 :weight 3
 :pattern ( (_module.Thread.objectClassKind (Lit refType this@@109)))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((this@@110 T@U) ) (!  (=> (or (|_module.OwnedObject.objectClassKind#canCall| (Lit refType this@@110)) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@110 null)) (not true)) ($Is refType this@@110 Tclass._module.OwnedObject)))) (= (_module.OwnedObject.objectClassKind (Lit refType this@@110)) (Lit DatatypeTypeType |#_module.ObjectClassKind.OwnedObject|)))
 :weight 3
 :pattern ( (_module.OwnedObject.objectClassKind (Lit refType this@@110)))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((this@@111 T@U) ) (!  (=> (or (|_module.Lifetime.objectClassKind#canCall| (Lit refType this@@111)) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@111 null)) (not true)) ($Is refType this@@111 Tclass._module.Lifetime)))) (= (_module.Lifetime.objectClassKind (Lit refType this@@111)) (Lit DatatypeTypeType |#_module.ObjectClassKind.Lifetime|)))
 :weight 3
 :pattern ( (_module.Lifetime.objectClassKind (Lit refType this@@111)))
))))
(assert (forall (($h@@28 T@U) ($o@@71 T@U) ) (!  (=> (and ($IsGoodHeap $h@@28) (and (or (not (= $o@@71 null)) (not true)) (= (dtype $o@@71) Tclass._module.OwnedU32?))) ($Is intType ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@28 $o@@71) _module.OwnedU32.value)) TInt))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@28 $o@@71) _module.OwnedU32.value)))
)))
(assert (forall (($h0@@31 T@U) ($h1@@31 T@U) (this@@112 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@31) ($IsGoodHeap $h1@@31)) (and (or (not (= this@@112 null)) (not true)) ($Is refType this@@112 Tclass._module.Universe))) (and ($IsHeapAnchor $h0@@31) ($HeapSucc $h0@@31 $h1@@31))) (=> (forall (($o@@72 T@U) ($f@@43 T@U) )  (=> (and (or (not (= $o@@72 null)) (not true)) (or (= $o@@72 this@@112) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@31 this@@112) _module.Universe.content)) ($Box refType $o@@72)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@31 $o@@72) $f@@43) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@31 $o@@72) $f@@43)))) (= (_module.Universe.globalBaseInv $h0@@31 this@@112) (_module.Universe.globalBaseInv $h1@@31 this@@112))))
 :pattern ( ($IsHeapAnchor $h0@@31) ($HeapSucc $h0@@31 $h1@@31) (_module.Universe.globalBaseInv $h1@@31 this@@112))
)))
(assert (forall ((a@@17 T@U) (b@@14 T@U) ) (! (= (|Set#Union| a@@17 (|Set#Union| a@@17 b@@14)) (|Set#Union| a@@17 b@@14))
 :pattern ( (|Set#Union| a@@17 (|Set#Union| a@@17 b@@14)))
)))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@74 T@U) (this@@113 T@U) ) (!  (=> (or (|_module.Lifetime.localInv#canCall| $Heap@@74 this@@113) (and (< 9 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@74) (and (or (not (= this@@113 null)) (not true)) (and ($Is refType this@@113 Tclass._module.Lifetime) ($IsAlloc refType this@@113 Tclass._module.Lifetime $Heap@@74)))))) (and (and (|_module.Object.objectGlobalBaseInv#canCall| $Heap@@74 this@@113) (=> (_module.Object.objectGlobalBaseInv $Heap@@74 this@@113) (=> (forall ((|o#0@@10| T@U) ) (!  (=> (and ($Is refType |o#0@@10| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.elements)) ($Box refType |o#0@@10|))) (= (_module.OwnedObject.lifetime |o#0@@10|) this@@113))
 :pattern ( (_module.OwnedObject.lifetime |o#0@@10|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.elements)) ($Box refType |o#0@@10|)))
)) (and (forall ((|o#1@@3| T@U) ) (!  (=> ($Is refType |o#1@@3| Tclass._module.OwnedObject) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.elements)) ($Box refType |o#1@@3|)) (and (|_module.OwnedObject.alive#canCall| $Heap@@74 |o#1@@3|) (|_module.Lifetime.alive#canCall| $Heap@@74 this@@113))))
 :pattern ( (_module.OwnedObject.alive $Heap@@74 |o#1@@3|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.elements)) ($Box refType |o#1@@3|)))
)) (=> (forall ((|o#1@@4| T@U) ) (!  (=> (and ($Is refType |o#1@@4| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.elements)) ($Box refType |o#1@@4|))) (= (_module.OwnedObject.alive $Heap@@74 |o#1@@4|) (_module.Lifetime.alive $Heap@@74 this@@113)))
 :pattern ( (_module.OwnedObject.alive $Heap@@74 |o#1@@4|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.elements)) ($Box refType |o#1@@4|)))
)) (and (and (|_module.Lifetime.alive#canCall| $Heap@@74 this@@113) (=> (_module.Lifetime.alive $Heap@@74 this@@113) (forall ((|l#0@@1| T@U) ) (!  (=> ($Is refType |l#0@@1| Tclass._module.Lifetime) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointTo)) ($Box refType |l#0@@1|)) (|_module.Lifetime.alive#canCall| $Heap@@74 |l#0@@1|)))
 :pattern ( (_module.Lifetime.alive $Heap@@74 |l#0@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointTo)) ($Box refType |l#0@@1|)))
)))) (=> (=> (_module.Lifetime.alive $Heap@@74 this@@113) (forall ((|l#0@@2| T@U) ) (!  (=> (and ($Is refType |l#0@@2| Tclass._module.Lifetime) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointTo)) ($Box refType |l#0@@2|))) (_module.Lifetime.alive $Heap@@74 |l#0@@2|))
 :pattern ( (_module.Lifetime.alive $Heap@@74 |l#0@@2|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointTo)) ($Box refType |l#0@@2|)))
))) (and (|_module.Lifetime.alive#canCall| $Heap@@74 this@@113) (=> (not (_module.Lifetime.alive $Heap@@74 this@@113)) (forall ((|l#1| T@U) ) (!  (=> ($Is refType |l#1| Tclass._module.Lifetime) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointFrom)) ($Box refType |l#1|)) (|_module.Lifetime.alive#canCall| $Heap@@74 |l#1|)))
 :pattern ( (_module.Lifetime.alive $Heap@@74 |l#1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointFrom)) ($Box refType |l#1|)))
))))))))))) (= (_module.Lifetime.localInv $Heap@@74 this@@113)  (and (and (and (and (and (and (_module.Object.objectGlobalBaseInv $Heap@@74 this@@113) (forall ((|o#0@@11| T@U) ) (!  (=> (and ($Is refType |o#0@@11| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.elements)) ($Box refType |o#0@@11|))) (= (_module.OwnedObject.lifetime |o#0@@11|) this@@113))
 :pattern ( (_module.OwnedObject.lifetime |o#0@@11|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.elements)) ($Box refType |o#0@@11|)))
))) (forall ((|o#1@@5| T@U) ) (!  (=> (and ($Is refType |o#1@@5| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.elements)) ($Box refType |o#1@@5|))) (= (_module.OwnedObject.alive $Heap@@74 |o#1@@5|) (_module.Lifetime.alive $Heap@@74 this@@113)))
 :pattern ( (_module.OwnedObject.alive $Heap@@74 |o#1@@5|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.elements)) ($Box refType |o#1@@5|)))
))) (=> (_module.Lifetime.alive $Heap@@74 this@@113) (forall ((|l#0@@3| T@U) ) (!  (=> (and ($Is refType |l#0@@3| Tclass._module.Lifetime) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointTo)) ($Box refType |l#0@@3|))) (_module.Lifetime.alive $Heap@@74 |l#0@@3|))
 :pattern ( (_module.Lifetime.alive $Heap@@74 |l#0@@3|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointTo)) ($Box refType |l#0@@3|)))
)))) (=> (not (_module.Lifetime.alive $Heap@@74 this@@113)) (forall ((|l#1@@0| T@U) ) (!  (=> (and ($Is refType |l#1@@0| Tclass._module.Lifetime) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointFrom)) ($Box refType |l#1@@0|))) (not (_module.Lifetime.alive $Heap@@74 |l#1@@0|)))
 :pattern ( (_module.Lifetime.alive $Heap@@74 |l#1@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointFrom)) ($Box refType |l#1@@0|)))
)))) (forall ((|l#2| T@U) ) (!  (=> (and ($Is refType |l#2| Tclass._module.Lifetime) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointTo)) ($Box refType |l#2|))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 |l#2|) _module.Lifetime.mightPointFrom)) ($Box refType this@@113)))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 |l#2|) _module.Lifetime.mightPointFrom)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointTo)) ($Box refType |l#2|)))
))) (forall ((|l#3| T@U) ) (!  (=> (and ($Is refType |l#3| Tclass._module.Lifetime) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointFrom)) ($Box refType |l#3|))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 |l#3|) _module.Lifetime.mightPointTo)) ($Box refType this@@113)))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 |l#3|) _module.Lifetime.mightPointTo)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@74 this@@113) _module.Lifetime.mightPointFrom)) ($Box refType |l#3|)))
))))))
 :pattern ( (_module.Lifetime.localInv $Heap@@74 this@@113) ($IsGoodHeap $Heap@@74))
))))
(assert  (and (forall ((t0@@2 T@T) (t1@@0 T@T) (t2 T@T) (val@@1 T@U) (m@@1 T@U) (x0@@1 T@U) (x1 T@U) ) (! (= (MapType1Select t0@@2 t1@@0 t2 (MapType1Store t0@@2 t1@@0 t2 m@@1 x0@@1 x1 val@@1) x0@@1 x1) val@@1)
 :weight 0
)) (and (forall ((u0@@0 T@T) (u1@@0 T@T) (u2 T@T) (val@@2 T@U) (m@@2 T@U) (x0@@2 T@U) (x1@@0 T@U) (y0@@0 T@U) (y1 T@U) ) (!  (or (= x0@@2 y0@@0) (= (MapType1Select u0@@0 u1@@0 u2 (MapType1Store u0@@0 u1@@0 u2 m@@2 x0@@2 x1@@0 val@@2) y0@@0 y1) (MapType1Select u0@@0 u1@@0 u2 m@@2 y0@@0 y1)))
 :weight 0
)) (forall ((u0@@1 T@T) (u1@@1 T@T) (u2@@0 T@T) (val@@3 T@U) (m@@3 T@U) (x0@@3 T@U) (x1@@1 T@U) (y0@@1 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType1Select u0@@1 u1@@1 u2@@0 (MapType1Store u0@@1 u1@@1 u2@@0 m@@3 x0@@3 x1@@1 val@@3) y0@@1 y1@@0) (MapType1Select u0@@1 u1@@1 u2@@0 m@@3 y0@@1 y1@@0)))
 :weight 0
)))))
(assert (forall ((|l#0@@4| T@U) (|l#1@@1| T@U) (|l#2@@0| T@U) (|l#3@@0| Bool) ($o@@73 T@U) ($f@@44 T@U) ) (! (= (U_2_bool (MapType1Select refType FieldType boolType (|lambda#57| |l#0@@4| |l#1@@1| |l#2@@0| |l#3@@0|) $o@@73 $f@@44))  (=> (and (or (not (= $o@@73 |l#0@@4|)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) |l#1@@1| $o@@73) |l#2@@0|)))) |l#3@@0|))
 :pattern ( (MapType1Select refType FieldType boolType (|lambda#57| |l#0@@4| |l#1@@1| |l#2@@0| |l#3@@0|) $o@@73 $f@@44))
)))
(assert (forall ((d@@6 T@U) ) (!  (=> ($Is DatatypeTypeType d@@6 Tclass._module.ObjectClassKind) (or (or (_module.ObjectClassKind.Thread_q d@@6) (_module.ObjectClassKind.OwnedObject_q d@@6)) (_module.ObjectClassKind.Lifetime_q d@@6)))
 :pattern ( (_module.ObjectClassKind.Lifetime_q d@@6) ($Is DatatypeTypeType d@@6 Tclass._module.ObjectClassKind))
 :pattern ( (_module.ObjectClassKind.OwnedObject_q d@@6) ($Is DatatypeTypeType d@@6 Tclass._module.ObjectClassKind))
 :pattern ( (_module.ObjectClassKind.Thread_q d@@6) ($Is DatatypeTypeType d@@6 Tclass._module.ObjectClassKind))
)))
(assert (forall (($h0@@32 T@U) ($h1@@32 T@U) (this@@114 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@32) ($IsGoodHeap $h1@@32)) (and (or (not (= this@@114 null)) (not true)) ($Is refType this@@114 Tclass._module.OwnedObject))) (and ($IsHeapAnchor $h0@@32) ($HeapSucc $h0@@32 $h1@@32))) (=> (forall (($o@@74 T@U) ($f@@45 T@U) )  (=> (and (or (not (= $o@@74 null)) (not true)) (= $o@@74 this@@114)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@32 $o@@74) $f@@45) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@32 $o@@74) $f@@45)))) (= (_module.OwnedObject.objectFields $h0@@32 this@@114) (_module.OwnedObject.objectFields $h1@@32 this@@114))))
 :pattern ( ($IsHeapAnchor $h0@@32) ($HeapSucc $h0@@32 $h1@@32) (_module.OwnedObject.objectFields $h1@@32 this@@114))
)))
(assert (forall (($h0@@33 T@U) ($h1@@33 T@U) (this@@115 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@33) ($IsGoodHeap $h1@@33)) (and (or (not (= this@@115 null)) (not true)) ($Is refType this@@115 Tclass._module.OwnedObject))) (and ($IsHeapAnchor $h0@@33) ($HeapSucc $h0@@33 $h1@@33))) (=> (forall (($o@@75 T@U) ($f@@46 T@U) )  (=> (and (or (not (= $o@@75 null)) (not true)) (= $o@@75 this@@115)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@33 $o@@75) $f@@46) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@33 $o@@75) $f@@46)))) (= (_module.OwnedObject.objectUserFields $h0@@33 this@@115) (_module.OwnedObject.objectUserFields $h1@@33 this@@115))))
 :pattern ( ($IsHeapAnchor $h0@@33) ($HeapSucc $h0@@33 $h1@@33) (_module.OwnedObject.objectUserFields $h1@@33 this@@115))
)))
(assert (forall (($h0@@34 T@U) ($h1@@34 T@U) (this@@116 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@34) ($IsGoodHeap $h1@@34)) (and (or (not (= this@@116 null)) (not true)) ($Is refType this@@116 Tclass._module.OwnedU32))) (and ($IsHeapAnchor $h0@@34) ($HeapSucc $h0@@34 $h1@@34))) (=> (forall (($o@@76 T@U) ($f@@47 T@U) )  (=> (and (or (not (= $o@@76 null)) (not true)) (= $o@@76 this@@116)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@34 $o@@76) $f@@47) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@34 $o@@76) $f@@47)))) (= (_module.OwnedU32.objectUserFields $h0@@34 this@@116) (_module.OwnedU32.objectUserFields $h1@@34 this@@116))))
 :pattern ( ($IsHeapAnchor $h0@@34) ($HeapSucc $h0@@34 $h1@@34) (_module.OwnedU32.objectUserFields $h1@@34 this@@116))
)))
(assert (forall (($h@@29 T@U) ($o@@77 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@29) (and (or (not (= $o@@77 null)) (not true)) ($Is refType $o@@77 Tclass._module.OwnedObject?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@29 $o@@77) alloc)))) ($IsAlloc refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@29 $o@@77) _module.OwnedObject.owner)) Tclass._module.Object? $h@@29))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@29 $o@@77) _module.OwnedObject.owner)))
)))
(assert (forall (($h0@@35 T@U) ($h1@@35 T@U) (this@@117 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@35) ($IsGoodHeap $h1@@35)) (and (or (not (= this@@117 null)) (not true)) (and ($Is refType this@@117 Tclass._module.Universe) ($IsAlloc refType this@@117 Tclass._module.Universe $h0@@35)))) (and ($IsHeapAnchor $h0@@35) ($HeapSucc $h0@@35 $h1@@35))) (=> (forall (($o@@78 T@U) ($f@@48 T@U) )  (=> (and (or (not (= $o@@78 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@35 $o@@78) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@35 $o@@78) $f@@48) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@35 $o@@78) $f@@48)))) (= (_module.Universe.globalInv $h0@@35 this@@117) (_module.Universe.globalInv $h1@@35 this@@117))))
 :pattern ( ($IsHeapAnchor $h0@@35) ($HeapSucc $h0@@35 $h1@@35) (_module.Universe.globalInv $h1@@35 this@@117))
)))
(assert (forall (($h0@@36 T@U) ($h1@@36 T@U) (this@@118 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@36) ($IsGoodHeap $h1@@36)) (and (or (not (= this@@118 null)) (not true)) (and ($Is refType this@@118 Tclass._module.Object) ($IsAlloc refType this@@118 Tclass._module.Object $h0@@36)))) (and ($IsHeapAnchor $h0@@36) ($HeapSucc $h0@@36 $h1@@36))) (=> (forall (($o@@79 T@U) ($f@@49 T@U) )  (=> (and (or (not (= $o@@79 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@36 $o@@79) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@36 $o@@79) $f@@49) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@36 $o@@79) $f@@49)))) (= (_module.Object.objectGlobalBaseInv $h0@@36 this@@118) (_module.Object.objectGlobalBaseInv $h1@@36 this@@118))))
 :pattern ( ($IsHeapAnchor $h0@@36) ($HeapSucc $h0@@36 $h1@@36) (_module.Object.objectGlobalBaseInv $h1@@36 this@@118))
)))
(assert (forall (($h0@@37 T@U) ($h1@@37 T@U) (this@@119 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@37) ($IsGoodHeap $h1@@37)) (and (or (not (= this@@119 null)) (not true)) (and ($Is refType this@@119 Tclass._module.Object) ($IsAlloc refType this@@119 Tclass._module.Object $h0@@37)))) (and ($IsHeapAnchor $h0@@37) ($HeapSucc $h0@@37 $h1@@37))) (=> (forall (($o@@80 T@U) ($f@@50 T@U) )  (=> (and (or (not (= $o@@80 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@37 $o@@80) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@37 $o@@80) $f@@50) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@37 $o@@80) $f@@50)))) (= (_module.Object.localInv $h0@@37 this@@119) (_module.Object.localInv $h1@@37 this@@119))))
 :pattern ( ($IsHeapAnchor $h0@@37) ($HeapSucc $h0@@37 $h1@@37) (_module.Object.localInv $h1@@37 this@@119))
)))
(assert (forall (($h0@@38 T@U) ($h1@@38 T@U) (this@@120 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@38) ($IsGoodHeap $h1@@38)) (and (or (not (= this@@120 null)) (not true)) (and ($Is refType this@@120 Tclass._module.Object) ($IsAlloc refType this@@120 Tclass._module.Object $h0@@38)))) (and ($IsHeapAnchor $h0@@38) ($HeapSucc $h0@@38 $h1@@38))) (=> (forall (($o@@81 T@U) ($f@@51 T@U) )  (=> (and (or (not (= $o@@81 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@38 $o@@81) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@38 $o@@81) $f@@51) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@38 $o@@81) $f@@51)))) (= (_module.Object.inv $h0@@38 this@@120) (_module.Object.inv $h1@@38 this@@120))))
 :pattern ( ($IsHeapAnchor $h0@@38) ($HeapSucc $h0@@38 $h1@@38) (_module.Object.inv $h1@@38 this@@120))
)))
(assert (forall (($h0@@39 T@U) ($h1@@39 T@U) (this@@121 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@39) ($IsGoodHeap $h1@@39)) (and (or (not (= this@@121 null)) (not true)) (and ($Is refType this@@121 Tclass._module.Thread) ($IsAlloc refType this@@121 Tclass._module.Thread $h0@@39)))) (and ($IsHeapAnchor $h0@@39) ($HeapSucc $h0@@39 $h1@@39))) (=> (forall (($o@@82 T@U) ($f@@52 T@U) )  (=> (and (or (not (= $o@@82 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@39 $o@@82) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@39 $o@@82) $f@@52) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@39 $o@@82) $f@@52)))) (= (_module.Thread.localInv $h0@@39 this@@121) (_module.Thread.localInv $h1@@39 this@@121))))
 :pattern ( ($IsHeapAnchor $h0@@39) ($HeapSucc $h0@@39 $h1@@39) (_module.Thread.localInv $h1@@39 this@@121))
)))
(assert (forall (($h0@@40 T@U) ($h1@@40 T@U) (this@@122 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@40) ($IsGoodHeap $h1@@40)) (and (or (not (= this@@122 null)) (not true)) (and ($Is refType this@@122 Tclass._module.Thread) ($IsAlloc refType this@@122 Tclass._module.Thread $h0@@40)))) (and ($IsHeapAnchor $h0@@40) ($HeapSucc $h0@@40 $h1@@40))) (=> (forall (($o@@83 T@U) ($f@@53 T@U) )  (=> (and (or (not (= $o@@83 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@40 $o@@83) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@40 $o@@83) $f@@53) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@40 $o@@83) $f@@53)))) (= (_module.Thread.inv $h0@@40 this@@122) (_module.Thread.inv $h1@@40 this@@122))))
 :pattern ( ($IsHeapAnchor $h0@@40) ($HeapSucc $h0@@40 $h1@@40) (_module.Thread.inv $h1@@40 this@@122))
)))
(assert (forall (($h0@@41 T@U) ($h1@@41 T@U) (this@@123 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@41) ($IsGoodHeap $h1@@41)) (and (or (not (= this@@123 null)) (not true)) (and ($Is refType this@@123 Tclass._module.OwnedObject) ($IsAlloc refType this@@123 Tclass._module.OwnedObject $h0@@41)))) (and ($IsHeapAnchor $h0@@41) ($HeapSucc $h0@@41 $h1@@41))) (=> (forall (($o@@84 T@U) ($f@@54 T@U) )  (=> (and (or (not (= $o@@84 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@41 $o@@84) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@41 $o@@84) $f@@54) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@41 $o@@84) $f@@54)))) (= (_module.OwnedObject.localInv $h0@@41 this@@123) (_module.OwnedObject.localInv $h1@@41 this@@123))))
 :pattern ( ($IsHeapAnchor $h0@@41) ($HeapSucc $h0@@41 $h1@@41) (_module.OwnedObject.localInv $h1@@41 this@@123))
)))
(assert (forall (($h0@@42 T@U) ($h1@@42 T@U) (this@@124 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@42) ($IsGoodHeap $h1@@42)) (and (or (not (= this@@124 null)) (not true)) (and ($Is refType this@@124 Tclass._module.OwnedObject) ($IsAlloc refType this@@124 Tclass._module.OwnedObject $h0@@42)))) (and ($IsHeapAnchor $h0@@42) ($HeapSucc $h0@@42 $h1@@42))) (=> (forall (($o@@85 T@U) ($f@@55 T@U) )  (=> (and (or (not (= $o@@85 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@42 $o@@85) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@42 $o@@85) $f@@55) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@42 $o@@85) $f@@55)))) (= (_module.OwnedObject.inv $h0@@42 this@@124) (_module.OwnedObject.inv $h1@@42 this@@124))))
 :pattern ( ($IsHeapAnchor $h0@@42) ($HeapSucc $h0@@42 $h1@@42) (_module.OwnedObject.inv $h1@@42 this@@124))
)))
(assert (forall (($h0@@43 T@U) ($h1@@43 T@U) (this@@125 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@43) ($IsGoodHeap $h1@@43)) (and (or (not (= this@@125 null)) (not true)) (and ($Is refType this@@125 Tclass._module.OwnedObject) ($IsAlloc refType this@@125 Tclass._module.OwnedObject $h0@@43)))) (and ($IsHeapAnchor $h0@@43) ($HeapSucc $h0@@43 $h1@@43))) (=> (forall (($o@@86 T@U) ($f@@56 T@U) )  (=> (and (or (not (= $o@@86 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@43 $o@@86) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@43 $o@@86) $f@@56) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@43 $o@@86) $f@@56)))) (= (_module.OwnedObject.localUserInv $h0@@43 this@@125) (_module.OwnedObject.localUserInv $h1@@43 this@@125))))
 :pattern ( ($IsHeapAnchor $h0@@43) ($HeapSucc $h0@@43 $h1@@43) (_module.OwnedObject.localUserInv $h1@@43 this@@125))
)))
(assert (forall (($h0@@44 T@U) ($h1@@44 T@U) (this@@126 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@44) ($IsGoodHeap $h1@@44)) (and (or (not (= this@@126 null)) (not true)) (and ($Is refType this@@126 Tclass._module.OwnedObject) ($IsAlloc refType this@@126 Tclass._module.OwnedObject $h0@@44)))) (and ($IsHeapAnchor $h0@@44) ($HeapSucc $h0@@44 $h1@@44))) (=> (forall (($o@@87 T@U) ($f@@57 T@U) )  (=> (and (or (not (= $o@@87 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@44 $o@@87) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@44 $o@@87) $f@@57) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@44 $o@@87) $f@@57)))) (= (_module.OwnedObject.userInv $h0@@44 this@@126) (_module.OwnedObject.userInv $h1@@44 this@@126))))
 :pattern ( ($IsHeapAnchor $h0@@44) ($HeapSucc $h0@@44 $h1@@44) (_module.OwnedObject.userInv $h1@@44 this@@126))
)))
(assert (forall (($h0@@45 T@U) ($h1@@45 T@U) (this@@127 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@45) ($IsGoodHeap $h1@@45)) (and (or (not (= this@@127 null)) (not true)) (and ($Is refType this@@127 Tclass._module.Lifetime) ($IsAlloc refType this@@127 Tclass._module.Lifetime $h0@@45)))) (and ($IsHeapAnchor $h0@@45) ($HeapSucc $h0@@45 $h1@@45))) (=> (forall (($o@@88 T@U) ($f@@58 T@U) )  (=> (and (or (not (= $o@@88 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@45 $o@@88) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@45 $o@@88) $f@@58) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@45 $o@@88) $f@@58)))) (= (_module.Lifetime.localInv $h0@@45 this@@127) (_module.Lifetime.localInv $h1@@45 this@@127))))
 :pattern ( ($IsHeapAnchor $h0@@45) ($HeapSucc $h0@@45 $h1@@45) (_module.Lifetime.localInv $h1@@45 this@@127))
)))
(assert (forall (($h0@@46 T@U) ($h1@@46 T@U) (this@@128 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@46) ($IsGoodHeap $h1@@46)) (and (or (not (= this@@128 null)) (not true)) (and ($Is refType this@@128 Tclass._module.Lifetime) ($IsAlloc refType this@@128 Tclass._module.Lifetime $h0@@46)))) (and ($IsHeapAnchor $h0@@46) ($HeapSucc $h0@@46 $h1@@46))) (=> (forall (($o@@89 T@U) ($f@@59 T@U) )  (=> (and (or (not (= $o@@89 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@46 $o@@89) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@46 $o@@89) $f@@59) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@46 $o@@89) $f@@59)))) (= (_module.Lifetime.inv $h0@@46 this@@128) (_module.Lifetime.inv $h1@@46 this@@128))))
 :pattern ( ($IsHeapAnchor $h0@@46) ($HeapSucc $h0@@46 $h1@@46) (_module.Lifetime.inv $h1@@46 this@@128))
)))
(assert (forall (($h0@@47 T@U) ($h1@@47 T@U) (this@@129 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@47) ($IsGoodHeap $h1@@47)) (and (or (not (= this@@129 null)) (not true)) (and ($Is refType this@@129 Tclass._module.OwnedU32) ($IsAlloc refType this@@129 Tclass._module.OwnedU32 $h0@@47)))) (and ($IsHeapAnchor $h0@@47) ($HeapSucc $h0@@47 $h1@@47))) (=> (forall (($o@@90 T@U) ($f@@60 T@U) )  (=> (and (or (not (= $o@@90 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@47 $o@@90) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@47 $o@@90) $f@@60) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@47 $o@@90) $f@@60)))) (= (_module.OwnedU32.localUserInv $h0@@47 this@@129) (_module.OwnedU32.localUserInv $h1@@47 this@@129))))
 :pattern ( ($IsHeapAnchor $h0@@47) ($HeapSucc $h0@@47 $h1@@47) (_module.OwnedU32.localUserInv $h1@@47 this@@129))
)))
(assert (forall (($h0@@48 T@U) ($h1@@48 T@U) (this@@130 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@48) ($IsGoodHeap $h1@@48)) (and (or (not (= this@@130 null)) (not true)) (and ($Is refType this@@130 Tclass._module.OwnedU32) ($IsAlloc refType this@@130 Tclass._module.OwnedU32 $h0@@48)))) (and ($IsHeapAnchor $h0@@48) ($HeapSucc $h0@@48 $h1@@48))) (=> (forall (($o@@91 T@U) ($f@@61 T@U) )  (=> (and (or (not (= $o@@91 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@48 $o@@91) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@48 $o@@91) $f@@61) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@48 $o@@91) $f@@61)))) (= (_module.OwnedU32.userInv $h0@@48 this@@130) (_module.OwnedU32.userInv $h1@@48 this@@130))))
 :pattern ( ($IsHeapAnchor $h0@@48) ($HeapSucc $h0@@48 $h1@@48) (_module.OwnedU32.userInv $h1@@48 this@@130))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((this@@131 T@U) ) (!  (=> (or (|_module.OwnedU32.volatileOwns#canCall| this@@131) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@131 null)) (not true)) ($Is refType this@@131 Tclass._module.OwnedU32)))) (= (_module.OwnedU32.volatileOwns this@@131) (U_2_bool (Lit boolType (bool_2_U false)))))
 :pattern ( (_module.OwnedU32.volatileOwns this@@131))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((this@@132 T@U) ) (!  (=> (or (|_module.OwnedU32.volatileOwns#canCall| this@@132) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@132 null)) (not true)) ($Is refType this@@132 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.volatileOwns this@@132) (_module.OwnedU32.volatileOwns this@@132)))
 :pattern ( (_module.OwnedObject.volatileOwns this@@132) ($Is refType this@@132 Tclass._module.OwnedU32))
 :pattern ( (_module.OwnedObject.volatileOwns this@@132) (_module.OwnedU32.volatileOwns this@@132))
))))
(assert (forall ((bx@@20 T@U) (t@@5 T@U) ) (!  (=> ($IsBox bx@@20 (TSet t@@5)) (and (= ($Box SetType ($Unbox SetType bx@@20)) bx@@20) ($Is SetType ($Unbox SetType bx@@20) (TSet t@@5))))
 :pattern ( ($IsBox bx@@20 (TSet t@@5)))
)))
(assert (forall (($o@@92 T@U) ) (!  (=> ($Is refType $o@@92 Tclass._module.Thread?) ($Is refType $o@@92 Tclass._module.Object?))
 :pattern ( ($Is refType $o@@92 Tclass._module.Thread?))
)))
(assert (forall ((bx@@21 T@U) ) (!  (=> ($IsBox bx@@21 Tclass._module.Thread?) ($IsBox bx@@21 Tclass._module.Object?))
 :pattern ( ($IsBox bx@@21 Tclass._module.Thread?))
)))
(assert (forall (($o@@93 T@U) ) (!  (=> ($Is refType $o@@93 Tclass._module.OwnedObject?) ($Is refType $o@@93 Tclass._module.Object?))
 :pattern ( ($Is refType $o@@93 Tclass._module.OwnedObject?))
)))
(assert (forall ((bx@@22 T@U) ) (!  (=> ($IsBox bx@@22 Tclass._module.OwnedObject?) ($IsBox bx@@22 Tclass._module.Object?))
 :pattern ( ($IsBox bx@@22 Tclass._module.OwnedObject?))
)))
(assert (forall (($o@@94 T@U) ) (!  (=> ($Is refType $o@@94 Tclass._module.Lifetime?) ($Is refType $o@@94 Tclass._module.Object?))
 :pattern ( ($Is refType $o@@94 Tclass._module.Lifetime?))
)))
(assert (forall ((bx@@23 T@U) ) (!  (=> ($IsBox bx@@23 Tclass._module.Lifetime?) ($IsBox bx@@23 Tclass._module.Object?))
 :pattern ( ($IsBox bx@@23 Tclass._module.Lifetime?))
)))
(assert (forall (($o@@95 T@U) ) (!  (=> ($Is refType $o@@95 Tclass._module.OwnedU32?) ($Is refType $o@@95 Tclass._module.OwnedObject?))
 :pattern ( ($Is refType $o@@95 Tclass._module.OwnedU32?))
)))
(assert (forall ((bx@@24 T@U) ) (!  (=> ($IsBox bx@@24 Tclass._module.OwnedU32?) ($IsBox bx@@24 Tclass._module.OwnedObject?))
 :pattern ( ($IsBox bx@@24 Tclass._module.OwnedU32?))
)))
(assert (forall ((d@@7 T@U) ($h@@30 T@U) ) (!  (=> (and ($IsGoodHeap $h@@30) ($Is DatatypeTypeType d@@7 Tclass._module.ObjectClassKind)) ($IsAlloc DatatypeTypeType d@@7 Tclass._module.ObjectClassKind $h@@30))
 :pattern ( ($IsAlloc DatatypeTypeType d@@7 Tclass._module.ObjectClassKind $h@@30))
)))
(assert (= (Tag Tclass._module.Universe) Tagclass._module.Universe))
(assert (= (TagFamily Tclass._module.Universe) tytagFamily$Universe))
(assert (= (Tag Tclass._module.Universe?) Tagclass._module.Universe?))
(assert (= (TagFamily Tclass._module.Universe?) tytagFamily$Universe))
(assert (= (Tag Tclass._module.Object) Tagclass._module.Object))
(assert (= (TagFamily Tclass._module.Object) tytagFamily$Object))
(assert (= (Tag Tclass._module.Thread) Tagclass._module.Thread))
(assert (= (TagFamily Tclass._module.Thread) tytagFamily$Thread))
(assert (= (Tag Tclass._module.OwnedObject) Tagclass._module.OwnedObject))
(assert (= (TagFamily Tclass._module.OwnedObject) tytagFamily$OwnedObject))
(assert (= (Tag Tclass._module.Object?) Tagclass._module.Object?))
(assert (= (TagFamily Tclass._module.Object?) tytagFamily$Object))
(assert (= (Tag Tclass._module.Lifetime) Tagclass._module.Lifetime))
(assert (= (TagFamily Tclass._module.Lifetime) tytagFamily$Lifetime))
(assert (= (Tag Tclass._module.Thread?) Tagclass._module.Thread?))
(assert (= (TagFamily Tclass._module.Thread?) tytagFamily$Thread))
(assert (= (Tag Tclass._module.Lifetime?) Tagclass._module.Lifetime?))
(assert (= (TagFamily Tclass._module.Lifetime?) tytagFamily$Lifetime))
(assert (= (Tag Tclass._module.ObjectClassKind) Tagclass._module.ObjectClassKind))
(assert (= (TagFamily Tclass._module.ObjectClassKind) tytagFamily$ObjectClassKind))
(assert (= (Tag Tclass._module.OwnedObject?) Tagclass._module.OwnedObject?))
(assert (= (TagFamily Tclass._module.OwnedObject?) tytagFamily$OwnedObject))
(assert (= (Tag Tclass._module.OwnedU32?) Tagclass._module.OwnedU32?))
(assert (= (TagFamily Tclass._module.OwnedU32?) tytagFamily$OwnedU32))
(assert (= (Tag Tclass._module.OwnedU32) Tagclass._module.OwnedU32))
(assert (= (TagFamily Tclass._module.OwnedU32) tytagFamily$OwnedU32))
(assert (forall (($h@@31 T@U) ($o@@96 T@U) ) (!  (=> (and ($IsGoodHeap $h@@31) (and (or (not (= $o@@96 null)) (not true)) ($Is refType $o@@96 Tclass._module.OwnedObject?))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@31 $o@@96) _module.OwnedObject.owner)) Tclass._module.Object?))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@31 $o@@96) _module.OwnedObject.owner)))
)))
(assert (= |#_module.ObjectClassKind.Thread| (Lit DatatypeTypeType |#_module.ObjectClassKind.Thread|)))
(assert (= |#_module.ObjectClassKind.OwnedObject| (Lit DatatypeTypeType |#_module.ObjectClassKind.OwnedObject|)))
(assert (= |#_module.ObjectClassKind.Lifetime| (Lit DatatypeTypeType |#_module.ObjectClassKind.Lifetime|)))
(assert (forall (($o@@97 T@U) ) (! (= ($Is refType $o@@97 Tclass._module.Universe?)  (or (= $o@@97 null) (implements$_module.Universe (dtype $o@@97))))
 :pattern ( ($Is refType $o@@97 Tclass._module.Universe?))
)))
(assert (forall (($o@@98 T@U) ) (! (= ($Is refType $o@@98 Tclass._module.Object?)  (or (= $o@@98 null) (implements$_module.Object (dtype $o@@98))))
 :pattern ( ($Is refType $o@@98 Tclass._module.Object?))
)))
(assert (forall (($o@@99 T@U) ) (! (= ($Is refType $o@@99 Tclass._module.OwnedObject?)  (or (= $o@@99 null) (implements$_module.OwnedObject (dtype $o@@99))))
 :pattern ( ($Is refType $o@@99 Tclass._module.OwnedObject?))
)))
(assert (forall (($h@@32 T@U) ($o@@100 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@32) (and (or (not (= $o@@100 null)) (not true)) ($Is refType $o@@100 Tclass._module.Universe?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@32 $o@@100) alloc)))) ($IsAlloc SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@32 $o@@100) _module.Universe.content)) (TSet Tclass._module.Object) $h@@32))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@32 $o@@100) _module.Universe.content)))
)))
(assert (forall ((a@@18 T@U) (b@@15 T@U) ) (! (= (|Set#Equal| a@@18 b@@15) (forall ((o@@6 T@U) ) (! (= (|Set#IsMember| a@@18 o@@6) (|Set#IsMember| b@@15 o@@6))
 :pattern ( (|Set#IsMember| a@@18 o@@6))
 :pattern ( (|Set#IsMember| b@@15 o@@6))
)))
 :pattern ( (|Set#Equal| a@@18 b@@15))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((this@@133 T@U) ) (!  (=> (or (|_module.Thread.objectClassKind#canCall| this@@133) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@133 null)) (not true)) ($Is refType this@@133 Tclass._module.Thread)))) (= (_module.Object.objectClassKind this@@133) (_module.Thread.objectClassKind this@@133)))
 :pattern ( (_module.Object.objectClassKind this@@133) ($Is refType this@@133 Tclass._module.Thread))
 :pattern ( (_module.Object.objectClassKind this@@133) (_module.Thread.objectClassKind this@@133))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((this@@134 T@U) ) (!  (=> (or (|_module.OwnedObject.objectClassKind#canCall| this@@134) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@134 null)) (not true)) ($Is refType this@@134 Tclass._module.OwnedObject)))) (= (_module.Object.objectClassKind this@@134) (_module.OwnedObject.objectClassKind this@@134)))
 :pattern ( (_module.Object.objectClassKind this@@134) ($Is refType this@@134 Tclass._module.OwnedObject))
 :pattern ( (_module.Object.objectClassKind this@@134) (_module.OwnedObject.objectClassKind this@@134))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((this@@135 T@U) ) (!  (=> (or (|_module.Lifetime.objectClassKind#canCall| this@@135) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@135 null)) (not true)) ($Is refType this@@135 Tclass._module.Lifetime)))) (= (_module.Object.objectClassKind this@@135) (_module.Lifetime.objectClassKind this@@135)))
 :pattern ( (_module.Object.objectClassKind this@@135) ($Is refType this@@135 Tclass._module.Lifetime))
 :pattern ( (_module.Object.objectClassKind this@@135) (_module.Lifetime.objectClassKind this@@135))
))))
(assert (forall ((x@@8 T@U) (T@@5 T@T) ) (! (= ($Box T@@5 (Lit T@@5 x@@8)) (Lit BoxType ($Box T@@5 x@@8)))
 :pattern ( ($Box T@@5 (Lit T@@5 x@@8)))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((this@@136 T@U) ) (!  (=> (or (|_module.Thread.objectClassKind#canCall| this@@136) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@136 null)) (not true)) ($Is refType this@@136 Tclass._module.Thread)))) ($Is DatatypeTypeType (_module.Thread.objectClassKind this@@136) Tclass._module.ObjectClassKind))
 :pattern ( (_module.Thread.objectClassKind this@@136))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((this@@137 T@U) ) (!  (=> (or (|_module.OwnedObject.objectClassKind#canCall| this@@137) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@137 null)) (not true)) ($Is refType this@@137 Tclass._module.OwnedObject)))) ($Is DatatypeTypeType (_module.OwnedObject.objectClassKind this@@137) Tclass._module.ObjectClassKind))
 :pattern ( (_module.OwnedObject.objectClassKind this@@137))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((this@@138 T@U) ) (!  (=> (or (|_module.Lifetime.objectClassKind#canCall| this@@138) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@138 null)) (not true)) ($Is refType this@@138 Tclass._module.Lifetime)))) ($Is DatatypeTypeType (_module.Lifetime.objectClassKind this@@138) Tclass._module.ObjectClassKind))
 :pattern ( (_module.Lifetime.objectClassKind this@@138))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall ((this@@139 T@U) ) (!  (=> (or (|_module.Object.objectClassKind#canCall| this@@139) (and (< 2 $FunctionContextHeight) (and (or (not (= this@@139 null)) (not true)) ($Is refType this@@139 Tclass._module.Object)))) ($Is DatatypeTypeType (_module.Object.objectClassKind this@@139) Tclass._module.ObjectClassKind))
 :pattern ( (_module.Object.objectClassKind this@@139))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@55 T@U) ($Heap@@75 T@U) (this@@140 T@U) ) (!  (=> (or (|_module.OwnedU32.userInv2#canCall| $prevHeap@@55 $Heap@@75 this@@140) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@55) ($IsGoodHeap $Heap@@75)) ($HeapSucc $prevHeap@@55 $Heap@@75)) (and (or (not (= this@@140 null)) (not true)) (and ($Is refType this@@140 Tclass._module.OwnedU32) ($IsAlloc refType this@@140 Tclass._module.OwnedU32 $prevHeap@@55)))))) (=> (_module.OwnedU32.userInv2 $prevHeap@@55 $Heap@@75 this@@140) (_module.OwnedU32.localUserInv2 $prevHeap@@55 $Heap@@75 this@@140)))
 :pattern ( (_module.OwnedU32.userInv2 $prevHeap@@55 $Heap@@75 this@@140))
))))
(assert  (=> (<= 13 $FunctionContextHeight) (forall (($prevHeap@@56 T@U) ($Heap@@76 T@U) (this@@141 T@U) ) (!  (=> (or (|_module.OwnedObject.userInv2#canCall| $prevHeap@@56 $Heap@@76 this@@141) (and (< 13 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@56) ($IsGoodHeap $Heap@@76)) ($HeapSucc $prevHeap@@56 $Heap@@76)) (and (or (not (= this@@141 null)) (not true)) (and ($Is refType this@@141 Tclass._module.OwnedObject) ($IsAlloc refType this@@141 Tclass._module.OwnedObject $prevHeap@@56)))))) (=> (_module.OwnedObject.userInv2 $prevHeap@@56 $Heap@@76 this@@141) (_module.OwnedObject.localUserInv2 $prevHeap@@56 $Heap@@76 this@@141)))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@56 $Heap@@76 this@@141))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@77 T@U) (this@@142 T@U) ) (!  (=> (or (|_module.Thread.localInv#canCall| $Heap@@77 this@@142) (and (< 9 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@77) (and (or (not (= this@@142 null)) (not true)) (and ($Is refType this@@142 Tclass._module.Thread) ($IsAlloc refType this@@142 Tclass._module.Thread $Heap@@77)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.Object.objectGlobalBaseInv#canCall| $Heap@@77 this@@142)) (= (_module.Thread.localInv $Heap@@77 this@@142)  (and true (_module.Object.objectGlobalBaseInv $Heap@@77 this@@142)))))
 :pattern ( (_module.Thread.localInv $Heap@@77 this@@142) ($IsGoodHeap $Heap@@77))
))))
(assert  (=> (<= 10 $FunctionContextHeight) (forall (($Heap@@78 T@U) (this@@143 T@U) ) (!  (=> (or (|_module.Thread.inv#canCall| $Heap@@78 this@@143) (and (< 10 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@78) (and (or (not (= this@@143 null)) (not true)) (and ($Is refType this@@143 Tclass._module.Thread) ($IsAlloc refType this@@143 Tclass._module.Thread $Heap@@78)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.Thread.localInv#canCall| $Heap@@78 this@@143)) (= (_module.Thread.inv $Heap@@78 this@@143)  (and true (_module.Thread.localInv $Heap@@78 this@@143)))))
 :pattern ( (_module.Thread.inv $Heap@@78 this@@143) ($IsGoodHeap $Heap@@78))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((this@@144 T@U) ) (!  (=> (or (|_module.OwnedU32.volatileOwns#canCall| (Lit refType this@@144)) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@144 null)) (not true)) ($Is refType this@@144 Tclass._module.OwnedU32)))) (= (_module.OwnedU32.volatileOwns (Lit refType this@@144)) (U_2_bool (Lit boolType (bool_2_U false)))))
 :weight 3
 :pattern ( (_module.OwnedU32.volatileOwns (Lit refType this@@144)))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap@@79 T@U) (this@@145 T@U) ) (!  (=> (or (|_module.OwnedObject.alive#canCall| $Heap@@79 this@@145) (and (< 0 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@79) (and (or (not (= this@@145 null)) (not true)) (and ($Is refType this@@145 Tclass._module.OwnedObject) ($IsAlloc refType this@@145 Tclass._module.OwnedObject $Heap@@79)))))) (= (_module.OwnedObject.alive $Heap@@79 this@@145)  (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@79 this@@145) _module.OwnedObject.owner)) null)) (not true))))
 :pattern ( (_module.OwnedObject.alive $Heap@@79 this@@145) ($IsGoodHeap $Heap@@79))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap@@80 T@U) (this@@146 T@U) ) (!  (=> (or (|_module.Lifetime.alive#canCall| $Heap@@80 this@@146) (and (< 0 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@80) (and (or (not (= this@@146 null)) (not true)) (and ($Is refType this@@146 Tclass._module.Lifetime) ($IsAlloc refType this@@146 Tclass._module.Lifetime $Heap@@80)))))) (= (_module.Lifetime.alive $Heap@@80 this@@146)  (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@80 this@@146) _module.Lifetime.owner)) null)) (not true))))
 :pattern ( (_module.Lifetime.alive $Heap@@80 this@@146) ($IsGoodHeap $Heap@@80))
))))
(assert (forall (($h@@33 T@U) ($o@@101 T@U) ) (!  (=> (and ($IsGoodHeap $h@@33) (and (or (not (= $o@@101 null)) (not true)) ($Is refType $o@@101 Tclass._module.Universe?))) ($Is SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@33 $o@@101) _module.Universe.content)) (TSet Tclass._module.Object)))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@33 $o@@101) _module.Universe.content)))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@81 T@U) (this@@147 T@U) ) (!  (=> (or (|_module.Lifetime.baseFieldsInv#canCall| $Heap@@81 this@@147) (and (< 2 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@81) (and (or (not (= this@@147 null)) (not true)) (and ($Is refType this@@147 Tclass._module.Lifetime) ($IsAlloc refType this@@147 Tclass._module.Lifetime $Heap@@81)))))) (= (_module.Lifetime.baseFieldsInv $Heap@@81 this@@147)  (and (and (and (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@81 this@@147) _module.Lifetime.owner)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@81 (_module.Object.universe this@@147)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@81 this@@147) _module.Lifetime.owner))) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@81 this@@147) _module.Lifetime.elements)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@81 (_module.Object.universe this@@147)) _module.Universe.content)))) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@81 this@@147) _module.Lifetime.mightPointTo)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@81 (_module.Object.universe this@@147)) _module.Universe.content)))) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@81 this@@147) _module.Lifetime.mightPointFrom)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@81 (_module.Object.universe this@@147)) _module.Universe.content))))))
 :pattern ( (_module.Lifetime.baseFieldsInv $Heap@@81 this@@147) ($IsGoodHeap $Heap@@81))
))))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($prevHeap@@57 T@U) ($Heap@@82 T@U) (this@@148 T@U) ) (!  (=> (or (|_module.OwnedObject.sequenceInv2#canCall| $prevHeap@@57 $Heap@@82 this@@148) (and (< 3 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@57) ($IsGoodHeap $Heap@@82)) ($HeapSucc $prevHeap@@57 $Heap@@82)) (and (or (not (= this@@148 null)) (not true)) (and ($Is refType this@@148 Tclass._module.OwnedObject) ($IsAlloc refType this@@148 Tclass._module.OwnedObject $prevHeap@@57)))))) (and (=> (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 this@@148) _module.OwnedObject.owner)) null) (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@82 this@@148) _module.OwnedObject.owner)) null)) (=> (<= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 this@@148) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@82 this@@148) _module.OwnedObject.nonvolatileVersion)))) (and (=> (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 this@@148) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@82 this@@148) _module.OwnedObject.nonvolatileVersion)))) (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.OwnedObject.unchangedNonvolatileFields#canCall| $prevHeap@@57 $Heap@@82 this@@148))) (=> (=> (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 this@@148) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@82 this@@148) _module.OwnedObject.nonvolatileVersion)))) (and true (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@57 $Heap@@82 this@@148))) (=> ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 this@@148) _module.OwnedObject.owner)) Tclass._module.OwnedObject) (let ((|oldOwner#0| ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 this@@148) _module.OwnedObject.owner))))
(|_module.OwnedObject.volatileOwns#canCall| |oldOwner#0|))))))) (= (_module.OwnedObject.sequenceInv2 $prevHeap@@57 $Heap@@82 this@@148)  (and (and (and (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 this@@148) _module.OwnedObject.owner)) null) (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@82 this@@148) _module.OwnedObject.owner)) null)) (<= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 this@@148) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@82 this@@148) _module.OwnedObject.nonvolatileVersion))))) (=> (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 this@@148) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@82 this@@148) _module.OwnedObject.nonvolatileVersion)))) (and true (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@57 $Heap@@82 this@@148)))) (=> ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 this@@148) _module.OwnedObject.owner)) Tclass._module.OwnedObject) (let ((|oldOwner#0@@0| ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 this@@148) _module.OwnedObject.owner))))
 (=> (and (not (_module.OwnedObject.volatileOwns |oldOwner#0@@0|)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 |oldOwner#0@@0|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@82 |oldOwner#0@@0|) _module.OwnedObject.nonvolatileVersion))))) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@57 this@@148) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@82 this@@148) _module.OwnedObject.nonvolatileVersion)))))))))))
 :pattern ( (_module.OwnedObject.sequenceInv2 $prevHeap@@57 $Heap@@82 this@@148) ($IsGoodHeap $Heap@@82))
))))
(assert (forall ((h@@4 T@U) (v@@4 T@U) ) (! ($IsAlloc intType v@@4 TInt h@@4)
 :pattern ( ($IsAlloc intType v@@4 TInt h@@4))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@58 T@U) ($Heap@@83 T@U) (this@@149 T@U) ) (!  (=> (or (|_module.OwnedU32.userInv2#canCall| $prevHeap@@58 $Heap@@83 this@@149) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@58) ($IsGoodHeap $Heap@@83)) ($HeapSucc $prevHeap@@58 $Heap@@83)) (and (or (not (= this@@149 null)) (not true)) (and ($Is refType this@@149 Tclass._module.OwnedU32) ($IsAlloc refType this@@149 Tclass._module.OwnedU32 $prevHeap@@58)))))) (and (|_module.OwnedU32.localUserInv2#canCall| $prevHeap@@58 $Heap@@83 this@@149) (= (_module.OwnedU32.userInv2 $prevHeap@@58 $Heap@@83 this@@149) (_module.OwnedU32.localUserInv2 $prevHeap@@58 $Heap@@83 this@@149))))
 :pattern ( (_module.OwnedU32.userInv2 $prevHeap@@58 $Heap@@83 this@@149) ($IsGoodHeap $Heap@@83))
))))
(assert (forall ((v@@5 T@U) ) (! ($Is intType v@@5 TInt)
 :pattern ( ($Is intType v@@5 TInt))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $_ModifiesFrame@0 () T@U)
(declare-fun current$Heap () T@U)
(declare-fun this@@150 () T@U)
(declare-fun |running#0@@5| () T@U)
(declare-fun $Heap@@84 () T@U)
(declare-fun previous$Heap () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let ((anon0_correct  (=> (= $_ModifiesFrame@0 (|lambda#57| null current$Heap alloc false)) (=> (and ($IsAllocBox ($Box refType this@@150) Tclass._module.Object? current$Heap) ($IsAlloc refType |running#0@@5| Tclass._module.Thread current$Heap)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($IsAlloc refType this@@150 Tclass._module.OwnedU32 $Heap@@84)) (=> ($IsAlloc refType this@@150 Tclass._module.OwnedU32 $Heap@@84) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($IsAlloc refType |running#0@@5| Tclass._module.Thread $Heap@@84)) (=> ($IsAlloc refType |running#0@@5| Tclass._module.Thread $Heap@@84) (=> (and (and (|_module.Object.goodPreAndLegalChanges#canCall| $Heap@@84 current$Heap this@@150 |running#0@@5|) (_module.Object.goodPreAndLegalChanges $Heap@@84 current$Heap this@@150 |running#0@@5|)) (and ($IsAllocBox ($Box refType this@@150) Tclass._module.OwnedObject? current$Heap) (= (ControlFlow 0 2) (- 0 1)))) ($IsAlloc refType this@@150 Tclass._module.OwnedU32 $Heap@@84))))))))))
(let ((PreconditionGeneratedEntry_correct  (=> (and (and ($IsGoodHeap $Heap@@84) ($IsHeapAnchor $Heap@@84)) (and (or (not (= this@@150 null)) (not true)) (and ($Is refType this@@150 Tclass._module.OwnedU32) ($IsAlloc refType this@@150 Tclass._module.OwnedU32 previous$Heap)))) (=> (and (and (and ($Is refType |running#0@@5| Tclass._module.Thread) ($IsAlloc refType |running#0@@5| Tclass._module.Thread previous$Heap)) (= 19 $FunctionContextHeight)) (and (and (= previous$Heap $Heap@@84) (and ($HeapSucc previous$Heap current$Heap) ($IsGoodHeap current$Heap))) (and ($IsAlloc refType |running#0@@5| Tclass._module.Thread previous$Heap) (= (ControlFlow 0 5) 2)))) anon0_correct))))
PreconditionGeneratedEntry_correct)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
