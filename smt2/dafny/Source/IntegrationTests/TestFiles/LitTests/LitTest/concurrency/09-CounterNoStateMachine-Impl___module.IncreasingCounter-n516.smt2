(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U T@U) Bool)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@T T@T) T@T)
(declare-fun $generated@@37 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@38 (T@T) T@T)
(declare-fun $generated@@39 (T@T) T@T)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@67 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@106 () Int)
(declare-fun $generated@@107 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert  (and (and (and (and (and (and (and (= ($generated@@9 $generated@@31) 3) (forall (($generated@@40 T@T) ($generated@@41 T@T) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@33 $generated@@40 $generated@@41 ($generated@@37 $generated@@40 $generated@@41 $generated@@43 $generated@@44 $generated@@42) $generated@@44) $generated@@42)
 :weight 0
))) (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (or (= $generated@@49 $generated@@50) (= ($generated@@33 $generated@@45 $generated@@46 ($generated@@37 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@50) ($generated@@33 $generated@@45 $generated@@46 $generated@@48 $generated@@50)))
 :weight 0
))) (= ($generated@@9 $generated@@34) 4)) (= ($generated@@9 $generated@@35) 5)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (= ($generated@@9 ($generated@@36 $generated@@51 $generated@@52)) 6))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@38 ($generated@@36 $generated@@53 $generated@@54)) $generated@@53)
 :pattern ( ($generated@@36 $generated@@53 $generated@@54))
))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@39 ($generated@@36 $generated@@55 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@36 $generated@@55 $generated@@56))
))))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (and (and (and ($generated@@28 $generated@@58) ($generated@@28 $generated@@59)) (and (or (not (= $generated@@60 $generated@@29)) (not true)) ($generated@@30 $generated@@31 $generated@@60 $generated@@32))) (and ($generated@@25 $generated@@58) ($generated@@26 $generated@@58 $generated@@59))) (=> (forall (($generated@@61 T@U) ($generated@@62 T@U) )  (=> (and (or (not (= $generated@@61 $generated@@29)) (not true)) (= $generated@@61 $generated@@60)) (= ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@31 ($generated@@36 $generated@@34 $generated@@35) $generated@@58 $generated@@61) $generated@@62) ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@31 ($generated@@36 $generated@@34 $generated@@35) $generated@@59 $generated@@61) $generated@@62)))) (= ($generated@@27 $generated@@57 $generated@@58 $generated@@60) ($generated@@27 $generated@@57 $generated@@59 $generated@@60))))
 :pattern ( ($generated@@25 $generated@@58) ($generated@@26 $generated@@58 $generated@@59) ($generated@@27 $generated@@57 $generated@@59 $generated@@60))
)))
(assert ($generated@@63 $generated@@64))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@66 $generated@@64)  (or (= $generated@@66 $generated@@29) (= ($generated@@65 $generated@@66) $generated@@64)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@66 $generated@@64))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@67 $generated@@31 $generated@@70 $generated@@68 $generated@@71) ($generated@@67 $generated@@31 $generated@@70 $generated@@69 $generated@@71))
 :pattern ( ($generated@@67 $generated@@31 $generated@@70 $generated@@68 $generated@@71))
 :pattern ( ($generated@@67 $generated@@31 $generated@@70 $generated@@69 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@67 $generated@@31 $generated@@74 $generated@@72 $generated@@75) ($generated@@67 $generated@@31 $generated@@74 $generated@@73 $generated@@75))
 :pattern ( ($generated@@67 $generated@@31 $generated@@74 $generated@@72 $generated@@75))
 :pattern ( ($generated@@67 $generated@@31 $generated@@74 $generated@@73 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@67 $generated@@31 $generated@@76 $generated@@32 $generated@@77) ($generated@@67 $generated@@31 $generated@@76 $generated@@64 $generated@@77))
 :pattern ( ($generated@@67 $generated@@31 $generated@@76 $generated@@32 $generated@@77))
 :pattern ( ($generated@@67 $generated@@31 $generated@@76 $generated@@64 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@67 $generated@@31 $generated@@79 $generated@@69 $generated@@80)  (or (= $generated@@79 $generated@@29) ($generated@@14 ($generated@@78 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@31 ($generated@@36 $generated@@34 $generated@@35) $generated@@80 $generated@@79) $generated)))))
 :pattern ( ($generated@@67 $generated@@31 $generated@@79 $generated@@69 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@67 $generated@@31 $generated@@81 $generated@@73 $generated@@82)  (or (= $generated@@81 $generated@@29) ($generated@@14 ($generated@@78 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@31 ($generated@@36 $generated@@34 $generated@@35) $generated@@82 $generated@@81) $generated)))))
 :pattern ( ($generated@@67 $generated@@31 $generated@@81 $generated@@73 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@67 $generated@@31 $generated@@83 $generated@@64 $generated@@84)  (or (= $generated@@83 $generated@@29) ($generated@@14 ($generated@@78 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@31 ($generated@@36 $generated@@34 $generated@@35) $generated@@84 $generated@@83) $generated)))))
 :pattern ( ($generated@@67 $generated@@31 $generated@@83 $generated@@64 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> ($generated@@26 $generated@@85 $generated@@86) (forall (($generated@@87 T@U) ) (!  (=> ($generated@@14 ($generated@@78 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@31 ($generated@@36 $generated@@34 $generated@@35) $generated@@85 $generated@@87) $generated))) ($generated@@14 ($generated@@78 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@31 ($generated@@36 $generated@@34 $generated@@35) $generated@@86 $generated@@87) $generated))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@31 ($generated@@36 $generated@@34 $generated@@35) $generated@@86 $generated@@87) $generated))
)))
 :pattern ( ($generated@@26 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 $generated@@89) $generated@@89)
 :pattern ( ($generated@@88 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@78 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (!  (=> ($generated@@26 $generated@@94 $generated@@95) (=> ($generated@@67 $generated@@98 $generated@@96 $generated@@97 $generated@@94) ($generated@@67 $generated@@98 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@26 $generated@@94 $generated@@95) ($generated@@67 $generated@@98 $generated@@96 $generated@@97 $generated@@94))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@99 $generated@@68)  (and ($generated@@30 $generated@@31 $generated@@99 $generated@@69) (or (not (= $generated@@99 $generated@@29)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@99 $generated@@68))
 :pattern ( ($generated@@30 $generated@@31 $generated@@99 $generated@@69))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@100 $generated@@72)  (and ($generated@@30 $generated@@31 $generated@@100 $generated@@73) (or (not (= $generated@@100 $generated@@29)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@100 $generated@@72))
 :pattern ( ($generated@@30 $generated@@31 $generated@@100 $generated@@73))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@101 $generated@@32)  (and ($generated@@30 $generated@@31 $generated@@101 $generated@@64) (or (not (= $generated@@101 $generated@@29)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@101 $generated@@32))
 :pattern ( ($generated@@30 $generated@@31 $generated@@101 $generated@@64))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@67 $generated@@31 $generated@@102 $generated@@73 $generated@@103) ($generated@@67 $generated@@31 $generated@@102 $generated@@69 $generated@@103))
 :pattern ( ($generated@@67 $generated@@31 $generated@@102 $generated@@73 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> ($generated@@67 $generated@@31 $generated@@104 $generated@@64 $generated@@105) ($generated@@67 $generated@@31 $generated@@104 $generated@@73 $generated@@105))
 :pattern ( ($generated@@67 $generated@@31 $generated@@104 $generated@@64 $generated@@105))
)))
(assert  (=> (<= 0 $generated@@106) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@107 $generated@@108 $generated@@109 $generated@@110) (and (< 0 $generated@@106) (and (and (and ($generated@@28 $generated@@108) ($generated@@28 $generated@@109)) ($generated@@26 $generated@@108 $generated@@109)) (and (or (not (= $generated@@110 $generated@@29)) (not true)) (and ($generated@@30 $generated@@31 $generated@@110 $generated@@32) ($generated@@67 $generated@@31 $generated@@110 $generated@@32 $generated@@108)))))) (= ($generated@@27 $generated@@108 $generated@@109 $generated@@110) ($generated@@14 ($generated@@88 $generated@@10 ($generated@@13 true)))))
 :pattern ( ($generated@@27 $generated@@108 $generated@@109 $generated@@110) ($generated@@28 $generated@@109))
))))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or (not (= $generated@@111 $generated@@113)) (not true)) (=> (and ($generated@@26 $generated@@111 $generated@@112) ($generated@@26 $generated@@112 $generated@@113)) ($generated@@26 $generated@@111 $generated@@113)))
 :pattern ( ($generated@@26 $generated@@111 $generated@@112) ($generated@@26 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@78 $generated@@115 ($generated@@91 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@91 $generated@@115 $generated@@114))
)))
(assert  (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@116 $generated@@119 $generated@@120 $generated@@121 ($generated@@118 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@124 $generated@@125) $generated@@122)
 :weight 0
)) (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@116 $generated@@126 $generated@@127 $generated@@128 ($generated@@118 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@116 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@116 $generated@@135 $generated@@136 $generated@@137 ($generated@@118 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@116 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Bool) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@14 ($generated@@116 $generated@@31 $generated@@34 $generated@@10 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))  (=> (and (or (not (= $generated@@148 $generated@@144)) (not true)) ($generated@@14 ($generated@@78 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@31 ($generated@@36 $generated@@34 $generated@@35) $generated@@145 $generated@@148) $generated@@146)))) $generated@@147))
 :pattern ( ($generated@@116 $generated@@31 $generated@@34 $generated@@10 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@150 $generated@@73) ($generated@@30 $generated@@31 $generated@@150 $generated@@69))
 :pattern ( ($generated@@30 $generated@@31 $generated@@150 $generated@@73))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@151 $generated@@64) ($generated@@30 $generated@@31 $generated@@151 $generated@@73))
 :pattern ( ($generated@@30 $generated@@31 $generated@@151 $generated@@64))
)))
(assert (= ($generated@@152 $generated@@32) $generated@@0))
(assert (= ($generated@@153 $generated@@32) $generated@@6))
(assert (= ($generated@@152 $generated@@68) $generated@@1))
(assert (= ($generated@@153 $generated@@68) $generated@@7))
(assert (= ($generated@@152 $generated@@72) $generated@@2))
(assert (= ($generated@@153 $generated@@72) $generated@@8))
(assert (= ($generated@@152 $generated@@69) $generated@@3))
(assert (= ($generated@@153 $generated@@69) $generated@@7))
(assert (= ($generated@@152 $generated@@73) $generated@@4))
(assert (= ($generated@@153 $generated@@73) $generated@@8))
(assert (= ($generated@@152 $generated@@64) $generated@@5))
(assert (= ($generated@@153 $generated@@64) $generated@@6))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@155 $generated@@69)  (or (= $generated@@155 $generated@@29) ($generated@@154 ($generated@@65 $generated@@155))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@155 $generated@@69))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@156 $generated@@73)  (or (= $generated@@156 $generated@@29) ($generated@@63 ($generated@@65 $generated@@156))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@156 $generated@@73))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@T) ) (! (= ($generated@@91 $generated@@158 ($generated@@88 $generated@@158 $generated@@157)) ($generated@@88 $generated@@35 ($generated@@91 $generated@@158 $generated@@157)))
 :pattern ( ($generated@@91 $generated@@158 ($generated@@88 $generated@@158 $generated@@157)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@164  (=> (and (and (= $generated@@159 ($generated@@117 $generated@@29 $generated@@160 $generated false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@107 $generated@@161 $generated@@160 $generated@@162)) (or ($generated@@27 $generated@@161 $generated@@160 $generated@@162) ($generated@@14 ($generated@@88 $generated@@10 ($generated@@13 true)))))))
(let (($generated@@165  (=> (and ($generated@@28 $generated@@163) ($generated@@25 $generated@@163)) (=> (and (and (and (or (not (= $generated@@162 $generated@@29)) (not true)) (and ($generated@@30 $generated@@31 $generated@@162 $generated@@32) ($generated@@67 $generated@@31 $generated@@162 $generated@@32 $generated@@161))) (= 1 $generated@@106)) (and (and (= $generated@@161 $generated@@163) (and ($generated@@26 $generated@@161 $generated@@160) ($generated@@28 $generated@@160))) (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (or (not (= $generated@@166 $generated@@29)) (not true)) (=> (= $generated@@166 $generated@@162) (= ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@31 ($generated@@36 $generated@@34 $generated@@35) $generated@@160 $generated@@166) $generated@@167) ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@31 ($generated@@36 $generated@@34 $generated@@35) $generated@@161 $generated@@166) $generated@@167))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@31 ($generated@@36 $generated@@34 $generated@@35) $generated@@160 $generated@@166) $generated@@167))
)) (= (ControlFlow 0 3) 2)))) $generated@@164))))
$generated@@165)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
