(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 () T@U)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@T) Int)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (Bool) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (Int) T@U)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (Real) T@U)
(declare-fun $generated@@35 (T@U) Real)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@T T@U T@U) Bool)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@56 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@115 (T@T T@U) T@U)
(declare-fun $generated@@118 (T@T T@U) T@U)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@122 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 (T@U T@U) Bool)
(declare-fun $generated@@201 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@26 $generated@@27) 0) (= ($generated@@26 $generated@@28) 1)) (= ($generated@@26 $generated@@29) 2)) (forall (($generated@@36 Bool) ) (! (= ($generated@@31 ($generated@@30 $generated@@36)) $generated@@36)
 :pattern ( ($generated@@30 $generated@@36))
))) (forall (($generated@@37 T@U) ) (! (= ($generated@@30 ($generated@@31 $generated@@37)) $generated@@37)
 :pattern ( ($generated@@31 $generated@@37))
))) (forall (($generated@@38 Int) ) (! (= ($generated@@33 ($generated@@32 $generated@@38)) $generated@@38)
 :pattern ( ($generated@@32 $generated@@38))
))) (forall (($generated@@39 T@U) ) (! (= ($generated@@32 ($generated@@33 $generated@@39)) $generated@@39)
 :pattern ( ($generated@@33 $generated@@39))
))) (forall (($generated@@40 Real) ) (! (= ($generated@@35 ($generated@@34 $generated@@40)) $generated@@40)
 :pattern ( ($generated@@34 $generated@@40))
))) (forall (($generated@@41 T@U) ) (! (= ($generated@@34 ($generated@@35 $generated@@41)) $generated@@41)
 :pattern ( ($generated@@35 $generated@@41))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17 $generated@@18 $generated@@19 $generated@@20 $generated@@21 $generated@@22 $generated@@23 $generated@@24 $generated@@25)
)
(assert (= ($generated@@42 $generated@@3) 0))
(assert (= ($generated@@43 $generated) $generated@@1))
(assert (= ($generated@@43 $generated@@0) $generated@@2))
(assert (= ($generated@@44 $generated@@3) $generated@@4))
(assert ($generated@@45 $generated@@46))
(assert ($generated@@45 $generated@@47))
(assert ($generated@@45 $generated@@48))
(assert (= ($generated@@26 $generated@@50) 3))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@49 $generated@@50 $generated@@53 $generated@@46)  (or (= $generated@@53 $generated@@51) (= ($generated@@52 $generated@@53) $generated@@46)))
 :pattern ( ($generated@@49 $generated@@50 $generated@@53 $generated@@46))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@49 $generated@@50 $generated@@54 $generated@@47)  (or (= $generated@@54 $generated@@51) (= ($generated@@52 $generated@@54) $generated@@47)))
 :pattern ( ($generated@@49 $generated@@50 $generated@@54 $generated@@47))
)))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@49 $generated@@50 $generated@@55 $generated@@48)  (or (= $generated@@55 $generated@@51) (= ($generated@@52 $generated@@55) $generated@@48)))
 :pattern ( ($generated@@49 $generated@@50 $generated@@55 $generated@@48))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@56 $generated@@50 $generated@@59 $generated@@57 $generated@@60) ($generated@@56 $generated@@50 $generated@@59 $generated@@58 $generated@@60))
 :pattern ( ($generated@@56 $generated@@50 $generated@@59 $generated@@57 $generated@@60))
 :pattern ( ($generated@@56 $generated@@50 $generated@@59 $generated@@58 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@56 $generated@@50 $generated@@63 $generated@@61 $generated@@64) ($generated@@56 $generated@@50 $generated@@63 $generated@@62 $generated@@64))
 :pattern ( ($generated@@56 $generated@@50 $generated@@63 $generated@@61 $generated@@64))
 :pattern ( ($generated@@56 $generated@@50 $generated@@63 $generated@@62 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@56 $generated@@50 $generated@@66 $generated@@65 $generated@@67) ($generated@@56 $generated@@50 $generated@@66 $generated@@46 $generated@@67))
 :pattern ( ($generated@@56 $generated@@50 $generated@@66 $generated@@65 $generated@@67))
 :pattern ( ($generated@@56 $generated@@50 $generated@@66 $generated@@46 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@56 $generated@@50 $generated@@69 $generated@@68 $generated@@70) ($generated@@56 $generated@@50 $generated@@69 $generated@@47 $generated@@70))
 :pattern ( ($generated@@56 $generated@@50 $generated@@69 $generated@@68 $generated@@70))
 :pattern ( ($generated@@56 $generated@@50 $generated@@69 $generated@@47 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@56 $generated@@50 $generated@@72 $generated@@71 $generated@@73) ($generated@@56 $generated@@50 $generated@@72 $generated@@48 $generated@@73))
 :pattern ( ($generated@@56 $generated@@50 $generated@@72 $generated@@71 $generated@@73))
 :pattern ( ($generated@@56 $generated@@50 $generated@@72 $generated@@48 $generated@@73))
)))
(assert (= ($generated@@42 $generated@@74) 0))
(assert (= ($generated@@75 $generated@@12 $generated@@23) $generated@@74))
(assert  (not ($generated@@76 $generated@@74)))
(assert (= ($generated@@42 $generated@@77) 0))
(assert (= ($generated@@75 $generated@@14 $generated@@23) $generated@@77))
(assert  (not ($generated@@76 $generated@@77)))
(assert (= ($generated@@42 $generated@@78) 0))
(assert (= ($generated@@75 $generated@@16 $generated@@24) $generated@@78))
(assert  (not ($generated@@76 $generated@@78)))
(assert (= ($generated@@42 $generated@@79) 0))
(assert (= ($generated@@75 $generated@@16 $generated@@25) $generated@@79))
(assert  (not ($generated@@76 $generated@@79)))
(assert  (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@81 $generated@@88 $generated@@89 ($generated@@85 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@90) $generated@@92) $generated@@90)
 :weight 0
)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@81 $generated@@93 $generated@@94 ($generated@@85 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@81 $generated@@93 $generated@@94 $generated@@96 $generated@@98)))
 :weight 0
))) (= ($generated@@26 $generated@@82) 4)) (= ($generated@@26 $generated@@83) 5)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@26 ($generated@@84 $generated@@99 $generated@@100)) 6))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@86 ($generated@@84 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@84 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@84 $generated@@103 $generated@@104))
))))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@56 $generated@@50 $generated@@105 $generated@@58 $generated@@106)  (or (= $generated@@105 $generated@@51) ($generated@@31 ($generated@@80 $generated@@27 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@106 $generated@@105) $generated@@3)))))
 :pattern ( ($generated@@56 $generated@@50 $generated@@105 $generated@@58 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@56 $generated@@50 $generated@@107 $generated@@62 $generated@@108)  (or (= $generated@@107 $generated@@51) ($generated@@31 ($generated@@80 $generated@@27 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@108 $generated@@107) $generated@@3)))))
 :pattern ( ($generated@@56 $generated@@50 $generated@@107 $generated@@62 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@56 $generated@@50 $generated@@109 $generated@@46 $generated@@110)  (or (= $generated@@109 $generated@@51) ($generated@@31 ($generated@@80 $generated@@27 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@110 $generated@@109) $generated@@3)))))
 :pattern ( ($generated@@56 $generated@@50 $generated@@109 $generated@@46 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@56 $generated@@50 $generated@@111 $generated@@47 $generated@@112)  (or (= $generated@@111 $generated@@51) ($generated@@31 ($generated@@80 $generated@@27 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@112 $generated@@111) $generated@@3)))))
 :pattern ( ($generated@@56 $generated@@50 $generated@@111 $generated@@47 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@56 $generated@@50 $generated@@113 $generated@@48 $generated@@114)  (or (= $generated@@113 $generated@@51) ($generated@@31 ($generated@@80 $generated@@27 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@114 $generated@@113) $generated@@3)))))
 :pattern ( ($generated@@56 $generated@@50 $generated@@113 $generated@@48 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@115 $generated@@117 $generated@@116) $generated@@116)
 :pattern ( ($generated@@115 $generated@@117 $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@118 $generated@@120 ($generated@@80 $generated@@120 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@80 $generated@@120 $generated@@119))
)))
(assert  (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@121 $generated@@124 $generated@@125 $generated@@126 ($generated@@123 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@129 $generated@@130) $generated@@127)
 :weight 0
)) (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@121 $generated@@131 $generated@@132 $generated@@133 ($generated@@123 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@121 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@121 $generated@@140 $generated@@141 $generated@@142 ($generated@@123 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@121 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@31 ($generated@@121 $generated@@50 $generated@@82 $generated@@27 ($generated@@122 $generated@@149 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@149)) (not true)) ($generated@@31 ($generated@@80 $generated@@27 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@150 $generated@@154) $generated@@151)))) ($generated@@31 ($generated@@80 $generated@@27 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@152 $generated@@154) $generated@@153)))))
 :pattern ( ($generated@@121 $generated@@50 $generated@@82 $generated@@27 ($generated@@122 $generated@@149 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert ($generated@@76 $generated@@3))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and ($generated@@156 $generated@@157) (and (or (not (= $generated@@158 $generated@@51)) (not true)) (= ($generated@@52 $generated@@158) $generated@@46))) ($generated@@31 ($generated@@80 $generated@@27 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@157 $generated@@158) $generated@@3)))) ($generated@@56 $generated@@28 ($generated@@80 $generated@@28 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@157 $generated@@158) $generated@@74)) $generated@@0 $generated@@157))
 :pattern ( ($generated@@80 $generated@@28 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@157 $generated@@158) $generated@@74)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and ($generated@@156 $generated@@159) (and (or (not (= $generated@@160 $generated@@51)) (not true)) (= ($generated@@52 $generated@@160) $generated@@47))) ($generated@@31 ($generated@@80 $generated@@27 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@159 $generated@@160) $generated@@3)))) ($generated@@56 $generated@@28 ($generated@@80 $generated@@28 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@159 $generated@@160) $generated@@77)) $generated@@0 $generated@@159))
 :pattern ( ($generated@@80 $generated@@28 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@159 $generated@@160) $generated@@77)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@156 $generated@@161) (and (or (not (= $generated@@162 $generated@@51)) (not true)) (= ($generated@@52 $generated@@162) $generated@@48))) ($generated@@49 $generated@@50 ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@161 $generated@@162) $generated@@78)) $generated@@65))
 :pattern ( ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@161 $generated@@162) $generated@@78)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and ($generated@@156 $generated@@163) (and (or (not (= $generated@@164 $generated@@51)) (not true)) (= ($generated@@52 $generated@@164) $generated@@48))) ($generated@@49 $generated@@50 ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@163 $generated@@164) $generated@@79)) $generated@@68))
 :pattern ( ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@163 $generated@@164) $generated@@79)))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@49 $generated@@50 $generated@@165 $generated@@57)  (and ($generated@@49 $generated@@50 $generated@@165 $generated@@58) (or (not (= $generated@@165 $generated@@51)) (not true))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@165 $generated@@57))
 :pattern ( ($generated@@49 $generated@@50 $generated@@165 $generated@@58))
)))
(assert (forall (($generated@@166 T@U) ) (! (= ($generated@@49 $generated@@50 $generated@@166 $generated@@61)  (and ($generated@@49 $generated@@50 $generated@@166 $generated@@62) (or (not (= $generated@@166 $generated@@51)) (not true))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@166 $generated@@61))
 :pattern ( ($generated@@49 $generated@@50 $generated@@166 $generated@@62))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@49 $generated@@50 $generated@@167 $generated@@65)  (and ($generated@@49 $generated@@50 $generated@@167 $generated@@46) (or (not (= $generated@@167 $generated@@51)) (not true))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@167 $generated@@65))
 :pattern ( ($generated@@49 $generated@@50 $generated@@167 $generated@@46))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@49 $generated@@50 $generated@@168 $generated@@68)  (and ($generated@@49 $generated@@50 $generated@@168 $generated@@47) (or (not (= $generated@@168 $generated@@51)) (not true))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@168 $generated@@68))
 :pattern ( ($generated@@49 $generated@@50 $generated@@168 $generated@@47))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@49 $generated@@50 $generated@@169 $generated@@71)  (and ($generated@@49 $generated@@50 $generated@@169 $generated@@48) (or (not (= $generated@@169 $generated@@51)) (not true))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@169 $generated@@71))
 :pattern ( ($generated@@49 $generated@@50 $generated@@169 $generated@@48))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and ($generated@@156 $generated@@170) (and (or (not (= $generated@@171 $generated@@51)) (not true)) (= ($generated@@52 $generated@@171) $generated@@48))) ($generated@@31 ($generated@@80 $generated@@27 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@170 $generated@@171) $generated@@3)))) ($generated@@56 $generated@@50 ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@170 $generated@@171) $generated@@78)) $generated@@65 $generated@@170))
 :pattern ( ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@170 $generated@@171) $generated@@78)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and ($generated@@156 $generated@@172) (and (or (not (= $generated@@173 $generated@@51)) (not true)) (= ($generated@@52 $generated@@173) $generated@@48))) ($generated@@31 ($generated@@80 $generated@@27 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@172 $generated@@173) $generated@@3)))) ($generated@@56 $generated@@50 ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@172 $generated@@173) $generated@@79)) $generated@@68 $generated@@172))
 :pattern ( ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@172 $generated@@173) $generated@@79)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@56 $generated@@50 $generated@@174 $generated@@62 $generated@@175) ($generated@@56 $generated@@50 $generated@@174 $generated@@58 $generated@@175))
 :pattern ( ($generated@@56 $generated@@50 $generated@@174 $generated@@62 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@56 $generated@@50 $generated@@176 $generated@@46 $generated@@177) ($generated@@56 $generated@@50 $generated@@176 $generated@@62 $generated@@177))
 :pattern ( ($generated@@56 $generated@@50 $generated@@176 $generated@@46 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@56 $generated@@50 $generated@@178 $generated@@47 $generated@@179) ($generated@@56 $generated@@50 $generated@@178 $generated@@62 $generated@@179))
 :pattern ( ($generated@@56 $generated@@50 $generated@@178 $generated@@47 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@56 $generated@@50 $generated@@180 $generated@@48 $generated@@181) ($generated@@56 $generated@@50 $generated@@180 $generated@@62 $generated@@181))
 :pattern ( ($generated@@56 $generated@@50 $generated@@180 $generated@@48 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (and (= ($generated@@182 ($generated@@75 $generated@@183 $generated@@184)) $generated@@183) (= ($generated@@44 ($generated@@75 $generated@@183 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@75 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@T) ) (! (= ($generated@@80 $generated@@186 ($generated@@118 $generated@@186 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@118 $generated@@186 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@156 $generated@@187) (and (or (not (= $generated@@188 $generated@@51)) (not true)) (= ($generated@@52 $generated@@188) $generated@@46))) ($generated@@49 $generated@@28 ($generated@@80 $generated@@28 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@187 $generated@@188) $generated@@74)) $generated@@0))
 :pattern ( ($generated@@80 $generated@@28 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@187 $generated@@188) $generated@@74)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and ($generated@@156 $generated@@189) (and (or (not (= $generated@@190 $generated@@51)) (not true)) (= ($generated@@52 $generated@@190) $generated@@47))) ($generated@@49 $generated@@28 ($generated@@80 $generated@@28 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@189 $generated@@190) $generated@@77)) $generated@@0))
 :pattern ( ($generated@@80 $generated@@28 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@189 $generated@@190) $generated@@77)))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> ($generated@@49 $generated@@50 $generated@@191 $generated@@62) ($generated@@49 $generated@@50 $generated@@191 $generated@@58))
 :pattern ( ($generated@@49 $generated@@50 $generated@@191 $generated@@62))
)))
(assert (forall (($generated@@192 T@U) ) (!  (=> ($generated@@49 $generated@@50 $generated@@192 $generated@@46) ($generated@@49 $generated@@50 $generated@@192 $generated@@62))
 :pattern ( ($generated@@49 $generated@@50 $generated@@192 $generated@@46))
)))
(assert (forall (($generated@@193 T@U) ) (!  (=> ($generated@@49 $generated@@50 $generated@@193 $generated@@47) ($generated@@49 $generated@@50 $generated@@193 $generated@@62))
 :pattern ( ($generated@@49 $generated@@50 $generated@@193 $generated@@47))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> ($generated@@49 $generated@@50 $generated@@194 $generated@@48) ($generated@@49 $generated@@50 $generated@@194 $generated@@62))
 :pattern ( ($generated@@49 $generated@@50 $generated@@194 $generated@@48))
)))
(assert (= ($generated@@43 $generated@@65) $generated@@5))
(assert (= ($generated@@195 $generated@@65) $generated@@18))
(assert (= ($generated@@43 $generated@@57) $generated@@6))
(assert (= ($generated@@195 $generated@@57) $generated@@19))
(assert (= ($generated@@43 $generated@@61) $generated@@7))
(assert (= ($generated@@195 $generated@@61) $generated@@20))
(assert (= ($generated@@43 $generated@@68) $generated@@8))
(assert (= ($generated@@195 $generated@@68) $generated@@21))
(assert (= ($generated@@43 $generated@@71) $generated@@9))
(assert (= ($generated@@195 $generated@@71) $generated@@22))
(assert (= ($generated@@43 $generated@@58) $generated@@10))
(assert (= ($generated@@195 $generated@@58) $generated@@19))
(assert (= ($generated@@43 $generated@@62) $generated@@11))
(assert (= ($generated@@195 $generated@@62) $generated@@20))
(assert (= ($generated@@43 $generated@@46) $generated@@13))
(assert (= ($generated@@195 $generated@@46) $generated@@18))
(assert (= ($generated@@43 $generated@@47) $generated@@15))
(assert (= ($generated@@195 $generated@@47) $generated@@21))
(assert (= ($generated@@43 $generated@@48) $generated@@17))
(assert (= ($generated@@195 $generated@@48) $generated@@22))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@49 $generated@@50 $generated@@197 $generated@@58)  (or (= $generated@@197 $generated@@51) ($generated@@196 ($generated@@52 $generated@@197))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@197 $generated@@58))
)))
(assert (forall (($generated@@198 T@U) ) (! (= ($generated@@49 $generated@@50 $generated@@198 $generated@@62)  (or (= $generated@@198 $generated@@51) ($generated@@45 ($generated@@52 $generated@@198))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@198 $generated@@62))
)))
(assert  (=> (<= 0 $generated@@199) (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (or ($generated@@201 $generated@@202 $generated@@203) (and (< 0 $generated@@199) (and ($generated@@156 $generated@@202) (and (or (not (= $generated@@203 $generated@@51)) (not true)) (and ($generated@@49 $generated@@50 $generated@@203 $generated@@71) ($generated@@56 $generated@@50 $generated@@203 $generated@@71 $generated@@202)))))) (= ($generated@@200 $generated@@202 $generated@@203)  (and true (>= ($generated@@33 ($generated@@80 $generated@@28 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@202 ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@202 $generated@@203) $generated@@78))) $generated@@74))) ($generated@@33 ($generated@@80 $generated@@28 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@202 ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@202 $generated@@203) $generated@@79))) $generated@@77)))))))
 :pattern ( ($generated@@200 $generated@@202 $generated@@203) ($generated@@156 $generated@@202))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@T) ) (! (= ($generated@@118 $generated@@205 ($generated@@115 $generated@@205 $generated@@204)) ($generated@@115 $generated@@83 ($generated@@118 $generated@@205 $generated@@204)))
 :pattern ( ($generated@@118 $generated@@205 ($generated@@115 $generated@@205 $generated@@204)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! ($generated@@56 $generated@@28 $generated@@207 $generated@@0 $generated@@206)
 :pattern ( ($generated@@56 $generated@@28 $generated@@207 $generated@@0 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! ($generated@@56 $generated@@27 $generated@@209 $generated $generated@@208)
 :pattern ( ($generated@@56 $generated@@27 $generated@@209 $generated $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ) (! ($generated@@49 $generated@@28 $generated@@210 $generated@@0)
 :pattern ( ($generated@@49 $generated@@28 $generated@@210 $generated@@0))
)))
(assert (forall (($generated@@211 T@U) ) (! ($generated@@49 $generated@@27 $generated@@211 $generated)
 :pattern ( ($generated@@49 $generated@@27 $generated@@211 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () Bool)
(declare-fun $generated@@215 () Bool)
(declare-fun $generated@@216 () Bool)
(declare-fun $generated@@217 () Bool)
(declare-fun $generated@@218 () Bool)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () Bool)
(declare-fun $generated@@221 () Bool)
(declare-fun $generated@@222 () Bool)
(declare-fun $generated@@223 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@224  (=> (and (= ($generated@@200 $generated@@212 $generated@@213)  (and true (>= ($generated@@33 ($generated@@80 $generated@@28 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@212 ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@212 $generated@@213) $generated@@78))) $generated@@74))) ($generated@@33 ($generated@@80 $generated@@28 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@212 ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@212 $generated@@213) $generated@@79))) $generated@@77)))))) ($generated@@49 $generated@@27 ($generated@@30 ($generated@@200 $generated@@212 $generated@@213)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 6)) $generated@@214) (=> $generated@@214 (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@215) (=> $generated@@215 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@216) (=> $generated@@216 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@217))))))))))
(let (($generated@@225  (=> (and (not ($generated@@31 ($generated@@115 $generated@@27 ($generated@@30 true)))) (= $generated@@214 true)) (=> (and (and (= $generated@@215 true) (= $generated@@216 true)) (and (= $generated@@217 true) (= (ControlFlow 0 10) 3))) $generated@@224))))
(let (($generated@@226  (=> (and ($generated@@31 ($generated@@115 $generated@@27 ($generated@@30 true))) (= $generated@@218 ($generated@@31 ($generated@@121 $generated@@50 $generated@@82 $generated@@27 $generated@@219 $generated@@213 $generated@@78)))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (not (= ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@212 $generated@@213) $generated@@78)) $generated@@51)) (not true))) (=> (or (not (= ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@212 $generated@@213) $generated@@78)) $generated@@51)) (not true)) (=> (and (= $generated@@220 ($generated@@31 ($generated@@121 $generated@@50 $generated@@82 $generated@@27 $generated@@219 ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@212 $generated@@213) $generated@@78)) $generated@@74))) (= $generated@@221 ($generated@@31 ($generated@@121 $generated@@50 $generated@@82 $generated@@27 $generated@@219 $generated@@213 $generated@@79)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (not (= ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@212 $generated@@213) $generated@@79)) $generated@@51)) (not true))) (=> (or (not (= ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@212 $generated@@213) $generated@@79)) $generated@@51)) (not true)) (=> (and (= $generated@@222 ($generated@@31 ($generated@@121 $generated@@50 $generated@@82 $generated@@27 $generated@@219 ($generated@@80 $generated@@50 ($generated@@81 $generated@@82 $generated@@83 ($generated@@81 $generated@@50 ($generated@@84 $generated@@82 $generated@@83) $generated@@212 $generated@@213) $generated@@79)) $generated@@77))) (= $generated@@214 $generated@@218)) (=> (and (and (= $generated@@215 $generated@@220) (= $generated@@216 $generated@@221)) (and (= $generated@@217 $generated@@222) (= (ControlFlow 0 7) 3))) $generated@@224))))))))))
(let (($generated@@227 true))
(let (($generated@@228  (=> (= $generated@@219 ($generated@@122 $generated@@51 $generated@@212 $generated@@3 $generated@@212 $generated@@3)) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@227) (=> (= (ControlFlow 0 11) 7) $generated@@226)) (=> (= (ControlFlow 0 11) 10) $generated@@225)))))
(let (($generated@@229  (=> (and ($generated@@156 $generated@@212) ($generated@@223 $generated@@212)) (=> (and (and (or (not (= $generated@@213 $generated@@51)) (not true)) (and ($generated@@49 $generated@@50 $generated@@213 $generated@@71) ($generated@@56 $generated@@50 $generated@@213 $generated@@71 $generated@@212))) (and (= 0 $generated@@199) (= (ControlFlow 0 12) 11))) $generated@@228))))
$generated@@229)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
