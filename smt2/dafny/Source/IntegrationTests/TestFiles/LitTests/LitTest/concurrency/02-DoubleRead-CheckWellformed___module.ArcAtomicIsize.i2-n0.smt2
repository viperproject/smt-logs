(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@52 (T@U T@U T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@T T@T) T@T)
(declare-fun $generated@@59 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 (T@U T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated@@3) 0))
(assert (= ($generated@@30 $generated) $generated@@1))
(assert (= ($generated@@30 $generated@@0) $generated@@2))
(assert (= ($generated@@31 $generated@@3) $generated@@4))
(assert ($generated@@32 $generated@@33))
(assert (= ($generated@@13 $generated@@35) 3))
(assert (forall (($generated@@38 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@38 $generated@@33)  (or (= $generated@@38 $generated@@36) (= ($generated@@37 $generated@@38) $generated@@33)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@38 $generated@@33))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@39 $generated@@35 $generated@@42 $generated@@40 $generated@@43) ($generated@@39 $generated@@35 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@39 $generated@@35 $generated@@42 $generated@@40 $generated@@43))
 :pattern ( ($generated@@39 $generated@@35 $generated@@42 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@39 $generated@@35 $generated@@45 $generated@@44 $generated@@46) ($generated@@39 $generated@@35 $generated@@45 $generated@@33 $generated@@46))
 :pattern ( ($generated@@39 $generated@@35 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@39 $generated@@35 $generated@@45 $generated@@33 $generated@@46))
)))
(assert (= ($generated@@29 $generated@@47) 0))
(assert (= ($generated@@48 $generated@@7 $generated@@12) $generated@@47))
(assert  (not ($generated@@49 $generated@@47)))
(assert  (and (and (and (and (and (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@55 $generated@@62 $generated@@63 ($generated@@59 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@66) $generated@@64)
 :weight 0
)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (= $generated@@71 $generated@@72) (= ($generated@@55 $generated@@67 $generated@@68 ($generated@@59 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@72) ($generated@@55 $generated@@67 $generated@@68 $generated@@70 $generated@@72)))
 :weight 0
))) (= ($generated@@13 $generated@@56) 4)) (= ($generated@@13 $generated@@57) 5)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (= ($generated@@13 ($generated@@58 $generated@@73 $generated@@74)) 6))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@60 ($generated@@58 $generated@@75 $generated@@76)) $generated@@75)
 :pattern ( ($generated@@58 $generated@@75 $generated@@76))
))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@61 ($generated@@58 $generated@@77 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@58 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (and (and (and ($generated@@53 $generated@@80) ($generated@@53 $generated@@81)) (and (or (not (= $generated@@82 $generated@@36)) (not true)) (and ($generated@@34 $generated@@35 $generated@@82 $generated@@44) ($generated@@39 $generated@@35 $generated@@82 $generated@@44 $generated@@80)))) (and ($generated@@50 $generated@@80) ($generated@@51 $generated@@80 $generated@@81))) (=> (forall (($generated@@83 T@U) ($generated@@84 T@U) )  (=> (and (or (not (= $generated@@83 $generated@@36)) (not true)) ($generated@@18 ($generated@@54 $generated@@14 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@80 $generated@@83) $generated@@3)))) (= ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@80 $generated@@83) $generated@@84) ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@81 $generated@@83) $generated@@84)))) (= ($generated@@52 $generated@@79 $generated@@80 $generated@@82) ($generated@@52 $generated@@79 $generated@@81 $generated@@82))))
 :pattern ( ($generated@@50 $generated@@80) ($generated@@51 $generated@@80 $generated@@81) ($generated@@52 $generated@@79 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@39 $generated@@35 $generated@@85 $generated@@41 $generated@@86)  (or (= $generated@@85 $generated@@36) ($generated@@18 ($generated@@54 $generated@@14 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@86 $generated@@85) $generated@@3)))))
 :pattern ( ($generated@@39 $generated@@35 $generated@@85 $generated@@41 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@39 $generated@@35 $generated@@87 $generated@@33 $generated@@88)  (or (= $generated@@87 $generated@@36) ($generated@@18 ($generated@@54 $generated@@14 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@88 $generated@@87) $generated@@3)))))
 :pattern ( ($generated@@39 $generated@@35 $generated@@87 $generated@@33 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@51 $generated@@89 $generated@@90) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@18 ($generated@@54 $generated@@14 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@89 $generated@@91) $generated@@3))) ($generated@@18 ($generated@@54 $generated@@14 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@90 $generated@@91) $generated@@3))))
 :pattern ( ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@90 $generated@@91) $generated@@3))
)))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 ($generated@@54 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@54 $generated@@97 $generated@@96))
)))
(assert  (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@98 $generated@@101 $generated@@102 $generated@@103 ($generated@@100 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@106 $generated@@107) $generated@@104)
 :weight 0
)) (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@98 $generated@@108 $generated@@109 $generated@@110 ($generated@@100 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@98 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@98 $generated@@117 $generated@@118 $generated@@119 ($generated@@100 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@98 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)))))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@18 ($generated@@98 $generated@@35 $generated@@56 $generated@@14 ($generated@@99 $generated@@126 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@126)) (not true)) ($generated@@18 ($generated@@54 $generated@@14 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@127 $generated@@131) $generated@@128)))) ($generated@@18 ($generated@@54 $generated@@14 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@129 $generated@@131) $generated@@130)))))
 :pattern ( ($generated@@98 $generated@@35 $generated@@56 $generated@@14 ($generated@@99 $generated@@126 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert ($generated@@49 $generated@@3))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and ($generated@@53 $generated@@133) (and (or (not (= $generated@@134 $generated@@36)) (not true)) (= ($generated@@37 $generated@@134) $generated@@33))) ($generated@@18 ($generated@@54 $generated@@14 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@133 $generated@@134) $generated@@3)))) ($generated@@39 $generated@@15 ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@133 $generated@@134) $generated@@47)) $generated@@0 $generated@@133))
 :pattern ( ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@133 $generated@@134) $generated@@47)))
)))
(assert  (=> (<= 0 $generated@@135) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (or ($generated@@136 $generated@@137 $generated@@138 $generated@@139) (and (< 0 $generated@@135) (and (and (and ($generated@@53 $generated@@137) ($generated@@53 $generated@@138)) ($generated@@51 $generated@@137 $generated@@138)) (and (or (not (= $generated@@139 $generated@@36)) (not true)) (and ($generated@@34 $generated@@35 $generated@@139 $generated@@44) ($generated@@39 $generated@@35 $generated@@139 $generated@@44 $generated@@137)))))) (= ($generated@@52 $generated@@137 $generated@@138 $generated@@139)  (and true (<= ($generated@@20 ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@137 $generated@@139) $generated@@47))) ($generated@@20 ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@138 $generated@@139) $generated@@47)))))))
 :pattern ( ($generated@@52 $generated@@137 $generated@@138 $generated@@139) ($generated@@53 $generated@@138))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@T) ) (!  (=> ($generated@@51 $generated@@140 $generated@@141) (=> ($generated@@39 $generated@@144 $generated@@142 $generated@@143 $generated@@140) ($generated@@39 $generated@@144 $generated@@142 $generated@@143 $generated@@141)))
 :pattern ( ($generated@@51 $generated@@140 $generated@@141) ($generated@@39 $generated@@144 $generated@@142 $generated@@143 $generated@@140))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@145 $generated@@40)  (and ($generated@@34 $generated@@35 $generated@@145 $generated@@41) (or (not (= $generated@@145 $generated@@36)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@145 $generated@@40))
 :pattern ( ($generated@@34 $generated@@35 $generated@@145 $generated@@41))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@146 $generated@@44)  (and ($generated@@34 $generated@@35 $generated@@146 $generated@@33) (or (not (= $generated@@146 $generated@@36)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@146 $generated@@44))
 :pattern ( ($generated@@34 $generated@@35 $generated@@146 $generated@@33))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> ($generated@@39 $generated@@35 $generated@@147 $generated@@33 $generated@@148) ($generated@@39 $generated@@35 $generated@@147 $generated@@41 $generated@@148))
 :pattern ( ($generated@@39 $generated@@35 $generated@@147 $generated@@33 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (or (not (= $generated@@149 $generated@@151)) (not true)) (=> (and ($generated@@51 $generated@@149 $generated@@150) ($generated@@51 $generated@@150 $generated@@151)) ($generated@@51 $generated@@149 $generated@@151)))
 :pattern ( ($generated@@51 $generated@@149 $generated@@150) ($generated@@51 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (and (= ($generated@@152 ($generated@@48 $generated@@153 $generated@@154)) $generated@@153) (= ($generated@@31 ($generated@@48 $generated@@153 $generated@@154)) $generated@@154))
 :pattern ( ($generated@@48 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@54 $generated@@156 ($generated@@95 $generated@@156 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@95 $generated@@156 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@53 $generated@@157) (and (or (not (= $generated@@158 $generated@@36)) (not true)) (= ($generated@@37 $generated@@158) $generated@@33))) ($generated@@34 $generated@@15 ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@157 $generated@@158) $generated@@47)) $generated@@0))
 :pattern ( ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@157 $generated@@158) $generated@@47)))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@159 $generated@@33) ($generated@@34 $generated@@35 $generated@@159 $generated@@41))
 :pattern ( ($generated@@34 $generated@@35 $generated@@159 $generated@@33))
)))
(assert (= ($generated@@30 $generated@@40) $generated@@5))
(assert (= ($generated@@160 $generated@@40) $generated@@10))
(assert (= ($generated@@30 $generated@@41) $generated@@6))
(assert (= ($generated@@160 $generated@@41) $generated@@10))
(assert (= ($generated@@30 $generated@@33) $generated@@8))
(assert (= ($generated@@160 $generated@@33) $generated@@11))
(assert (= ($generated@@30 $generated@@44) $generated@@9))
(assert (= ($generated@@160 $generated@@44) $generated@@11))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@161 $generated@@41)  (or (= $generated@@161 $generated@@36) ($generated@@32 ($generated@@37 $generated@@161))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@161 $generated@@41))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@95 $generated@@163 ($generated@@92 $generated@@163 $generated@@162)) ($generated@@92 $generated@@57 ($generated@@95 $generated@@163 $generated@@162)))
 :pattern ( ($generated@@95 $generated@@163 ($generated@@92 $generated@@163 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! ($generated@@39 $generated@@15 $generated@@165 $generated@@0 $generated@@164)
 :pattern ( ($generated@@39 $generated@@15 $generated@@165 $generated@@0 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! ($generated@@39 $generated@@14 $generated@@167 $generated $generated@@166)
 :pattern ( ($generated@@39 $generated@@14 $generated@@167 $generated $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! ($generated@@34 $generated@@15 $generated@@168 $generated@@0)
 :pattern ( ($generated@@34 $generated@@15 $generated@@168 $generated@@0))
)))
(assert (forall (($generated@@169 T@U) ) (! ($generated@@34 $generated@@14 $generated@@169 $generated)
 :pattern ( ($generated@@34 $generated@@14 $generated@@169 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Bool)
(declare-fun $generated@@174 () Bool)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@177  (=> (= ($generated@@52 $generated@@170 $generated@@171 $generated@@172)  (and true (<= ($generated@@20 ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@170 $generated@@172) $generated@@47))) ($generated@@20 ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@35 ($generated@@58 $generated@@56 $generated@@57) $generated@@171 $generated@@172) $generated@@47)))))) (=> (and ($generated@@34 $generated@@14 ($generated@@17 ($generated@@52 $generated@@170 $generated@@171 $generated@@172)) $generated) (= (ControlFlow 0 3) (- 0 2))) $generated@@173))))
(let (($generated@@178  (=> (not ($generated@@18 ($generated@@92 $generated@@14 ($generated@@17 true)))) (=> (and (= $generated@@173 true) (= (ControlFlow 0 6) 3)) $generated@@177))))
(let (($generated@@179  (=> ($generated@@18 ($generated@@92 $generated@@14 ($generated@@17 true))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@39 $generated@@35 $generated@@172 $generated@@44 $generated@@170)) (=> ($generated@@39 $generated@@35 $generated@@172 $generated@@44 $generated@@170) (=> (= $generated@@174 ($generated@@18 ($generated@@98 $generated@@35 $generated@@56 $generated@@14 $generated@@175 $generated@@172 $generated@@47))) (=> (and (= $generated@@173 $generated@@174) (= (ControlFlow 0 4) 3)) $generated@@177)))))))
(let (($generated@@180 true))
(let (($generated@@181  (=> (= $generated@@175 ($generated@@99 $generated@@36 $generated@@171 $generated@@3 $generated@@171 $generated@@3)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@180) (=> (= (ControlFlow 0 7) 4) $generated@@179)) (=> (= (ControlFlow 0 7) 6) $generated@@178)))))
(let (($generated@@182  (=> (and ($generated@@53 $generated@@170) ($generated@@50 $generated@@170)) (=> (and (and (and (or (not (= $generated@@172 $generated@@36)) (not true)) (and ($generated@@34 $generated@@35 $generated@@172 $generated@@44) ($generated@@39 $generated@@35 $generated@@172 $generated@@44 $generated@@176))) (= 0 $generated@@135)) (and (and (= $generated@@176 $generated@@170) (and ($generated@@51 $generated@@176 $generated@@171) ($generated@@53 $generated@@171))) (= (ControlFlow 0 8) 7))) $generated@@181))))
$generated@@182)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
