(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@U T@U T@U) Bool)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T T@U T@U) Bool)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 (T@U T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@1) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (= ($generated@@29 $generated@@1) $generated@@2))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (and ($generated@@30 $generated@@34 $generated@@31 $generated@@35) ($generated@@32 $generated@@35)) ($generated@@30 $generated@@34 $generated@@33 $generated@@35))
 :pattern ( ($generated@@30 $generated@@34 $generated@@31 $generated@@35))
)))
(assert (= ($generated@@11 $generated@@37) 3))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@39 $generated@@38 $generated@@40) ($generated@@36 $generated@@37 $generated@@39 $generated@@33 $generated@@40))
 :pattern ( ($generated@@36 $generated@@37 $generated@@39 $generated@@38 $generated@@40))
 :pattern ( ($generated@@36 $generated@@37 $generated@@39 $generated@@33 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@42 $generated@@41 $generated@@43) ($generated@@36 $generated@@37 $generated@@42 $generated@@31 $generated@@43))
 :pattern ( ($generated@@36 $generated@@37 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@36 $generated@@37 $generated@@42 $generated@@31 $generated@@43))
)))
(assert (= ($generated@@27 $generated@@44) 0))
(assert (= ($generated@@45 $generated@@6 $generated@@10) $generated@@44))
(assert ($generated@@46 $generated@@44))
(assert  (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@53 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@53 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@53 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@11 $generated@@54) 4)) (= ($generated@@11 $generated@@55) 5)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@11 ($generated@@56 $generated@@71 $generated@@72)) 6))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@56 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@56 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and (and (and ($generated@@32 $generated@@78) ($generated@@32 $generated@@79)) (and (or (not (= $generated@@80 $generated@@50)) (not true)) (and ($generated@@51 $generated@@37 $generated@@80 $generated@@41) ($generated@@36 $generated@@37 $generated@@80 $generated@@41 $generated@@78)))) (and ($generated@@47 $generated@@78) ($generated@@48 $generated@@78 $generated@@79))) (=> (forall (($generated@@81 T@U) ($generated@@82 T@U) )  (=> (and (or (not (= $generated@@81 $generated@@50)) (not true)) ($generated@@16 ($generated@@52 $generated@@12 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@78 $generated@@81) $generated@@1)))) (= ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@78 $generated@@81) $generated@@82) ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@79 $generated@@81) $generated@@82)))) (= ($generated@@49 $generated@@77 $generated@@78 $generated@@80) ($generated@@49 $generated@@77 $generated@@79 $generated@@80))))
 :pattern ( ($generated@@47 $generated@@78) ($generated@@48 $generated@@78 $generated@@79) ($generated@@49 $generated@@77 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (and (and ($generated@@32 $generated@@85) ($generated@@32 $generated@@86)) (and (or (not (= $generated@@87 $generated@@50)) (not true)) (and ($generated@@51 $generated@@37 $generated@@87 $generated@@41) ($generated@@36 $generated@@37 $generated@@87 $generated@@41 $generated@@85)))) (and ($generated@@47 $generated@@85) ($generated@@48 $generated@@85 $generated@@86))) (=> (forall (($generated@@88 T@U) ($generated@@89 T@U) )  (=> (and (or (not (= $generated@@88 $generated@@50)) (not true)) ($generated@@16 ($generated@@52 $generated@@12 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@85 $generated@@88) $generated@@1)))) (= ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@85 $generated@@88) $generated@@89) ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@86 $generated@@88) $generated@@89)))) (= ($generated@@83 $generated@@84 $generated@@85 $generated@@87) ($generated@@83 $generated@@84 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@47 $generated@@85) ($generated@@48 $generated@@85 $generated@@86) ($generated@@83 $generated@@84 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@90 $generated@@33 $generated@@91)  (or (= $generated@@90 $generated@@50) ($generated@@16 ($generated@@52 $generated@@12 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@91 $generated@@90) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@90 $generated@@33 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@92 $generated@@31 $generated@@93)  (or (= $generated@@92 $generated@@50) ($generated@@16 ($generated@@52 $generated@@12 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@93 $generated@@92) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@92 $generated@@31 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> ($generated@@48 $generated@@94 $generated@@95) (forall (($generated@@96 T@U) ) (!  (=> ($generated@@16 ($generated@@52 $generated@@12 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@94 $generated@@96) $generated@@1))) ($generated@@16 ($generated@@52 $generated@@12 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@95 $generated@@96) $generated@@1))))
 :pattern ( ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@95 $generated@@96) $generated@@1))
)))
 :pattern ( ($generated@@48 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 $generated@@98) $generated@@98)
 :pattern ( ($generated@@97 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 ($generated@@52 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@52 $generated@@102 $generated@@101))
)))
(assert  (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@103 $generated@@106 $generated@@107 $generated@@108 ($generated@@105 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@111 $generated@@112) $generated@@109)
 :weight 0
)) (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@103 $generated@@113 $generated@@114 $generated@@115 ($generated@@105 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@103 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@103 $generated@@122 $generated@@123 $generated@@124 ($generated@@105 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@103 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@16 ($generated@@103 $generated@@37 $generated@@54 $generated@@12 ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))  (=> (and (or (not (= $generated@@136 $generated@@131)) (not true)) ($generated@@16 ($generated@@52 $generated@@12 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@132 $generated@@136) $generated@@133)))) ($generated@@16 ($generated@@52 $generated@@12 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@134 $generated@@136) $generated@@135)))))
 :pattern ( ($generated@@103 $generated@@37 $generated@@54 $generated@@12 ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))
)))
(assert ($generated@@46 $generated@@1))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@30 ($generated@@100 $generated@@141 $generated@@138) $generated@@139 $generated@@140) ($generated@@36 $generated@@141 $generated@@138 $generated@@139 $generated@@140))
 :pattern ( ($generated@@30 ($generated@@100 $generated@@141 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> ($generated@@48 $generated@@142 $generated@@143) (=> ($generated@@30 $generated@@144 $generated@@145 $generated@@142) ($generated@@30 $generated@@144 $generated@@145 $generated@@143)))
 :pattern ( ($generated@@48 $generated@@142 $generated@@143) ($generated@@30 $generated@@144 $generated@@145 $generated@@142))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@T) ) (!  (=> ($generated@@48 $generated@@146 $generated@@147) (=> ($generated@@36 $generated@@150 $generated@@148 $generated@@149 $generated@@146) ($generated@@36 $generated@@150 $generated@@148 $generated@@149 $generated@@147)))
 :pattern ( ($generated@@48 $generated@@146 $generated@@147) ($generated@@36 $generated@@150 $generated@@148 $generated@@149 $generated@@146))
)))
(assert  (=> (<= 2 $generated@@151) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (or ($generated@@152 $generated@@154 $generated@@155 $generated@@156) (and (< 2 $generated@@151) (and (and (and ($generated@@32 $generated@@154) ($generated@@32 $generated@@155)) ($generated@@48 $generated@@154 $generated@@155)) (and (or (not (= $generated@@156 $generated@@50)) (not true)) (and ($generated@@51 $generated@@37 $generated@@156 $generated@@41) ($generated@@36 $generated@@37 $generated@@156 $generated@@41 $generated@@154)))))) (and (=> ($generated@@16 ($generated@@97 $generated@@12 ($generated@@15 true))) (=> (or (not (= ($generated@@52 $generated@@37 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@155 $generated@@156) $generated@@44)) $generated@@50)) (not true)) ($generated@@153 $generated@@154 $generated@@155 $generated@@156))) (= ($generated@@49 $generated@@154 $generated@@155 $generated@@156)  (and true (=> (or (not (= ($generated@@52 $generated@@37 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@155 $generated@@156) $generated@@44)) $generated@@50)) (not true)) ($generated@@83 $generated@@154 $generated@@155 $generated@@156))))))
 :pattern ( ($generated@@49 $generated@@154 $generated@@155 $generated@@156) ($generated@@32 $generated@@155))
))))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@51 $generated@@37 $generated@@157 $generated@@38)  (and ($generated@@51 $generated@@37 $generated@@157 $generated@@33) (or (not (= $generated@@157 $generated@@50)) (not true))))
 :pattern ( ($generated@@51 $generated@@37 $generated@@157 $generated@@38))
 :pattern ( ($generated@@51 $generated@@37 $generated@@157 $generated@@33))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@51 $generated@@37 $generated@@158 $generated@@41)  (and ($generated@@51 $generated@@37 $generated@@158 $generated@@31) (or (not (= $generated@@158 $generated@@50)) (not true))))
 :pattern ( ($generated@@51 $generated@@37 $generated@@158 $generated@@41))
 :pattern ( ($generated@@51 $generated@@37 $generated@@158 $generated@@31))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@159 $generated@@31 $generated@@160) ($generated@@36 $generated@@37 $generated@@159 $generated@@33 $generated@@160))
 :pattern ( ($generated@@36 $generated@@37 $generated@@159 $generated@@31 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (or (not (= $generated@@161 $generated@@163)) (not true)) (=> (and ($generated@@48 $generated@@161 $generated@@162) ($generated@@48 $generated@@162 $generated@@163)) ($generated@@48 $generated@@161 $generated@@163)))
 :pattern ( ($generated@@48 $generated@@161 $generated@@162) ($generated@@48 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (and (= ($generated@@164 ($generated@@45 $generated@@165 $generated@@166)) $generated@@165) (= ($generated@@29 ($generated@@45 $generated@@165 $generated@@166)) $generated@@166))
 :pattern ( ($generated@@45 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@52 $generated@@168 ($generated@@100 $generated@@168 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@100 $generated@@168 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and ($generated@@32 $generated@@169) (and (or (not (= $generated@@170 $generated@@50)) (not true)) ($generated@@51 $generated@@37 $generated@@170 $generated@@31))) ($generated@@16 ($generated@@52 $generated@@12 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@169 $generated@@170) $generated@@1)))) ($generated@@36 $generated@@37 ($generated@@52 $generated@@37 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@169 $generated@@170) $generated@@44)) $generated@@33 $generated@@169))
 :pattern ( ($generated@@52 $generated@@37 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@169 $generated@@170) $generated@@44)))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> ($generated@@51 $generated@@37 $generated@@171 $generated@@31) ($generated@@51 $generated@@37 $generated@@171 $generated@@33))
 :pattern ( ($generated@@51 $generated@@37 $generated@@171 $generated@@31))
)))
(assert (= ($generated@@28 $generated@@38) $generated@@3))
(assert (= ($generated@@172 $generated@@38) $generated@@8))
(assert (= ($generated@@28 $generated@@41) $generated@@4))
(assert (= ($generated@@172 $generated@@41) $generated@@9))
(assert (= ($generated@@28 $generated@@33) $generated@@5))
(assert (= ($generated@@172 $generated@@33) $generated@@8))
(assert (= ($generated@@28 $generated@@31) $generated@@7))
(assert (= ($generated@@172 $generated@@31) $generated@@9))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and ($generated@@32 $generated@@173) (and (or (not (= $generated@@174 $generated@@50)) (not true)) ($generated@@51 $generated@@37 $generated@@174 $generated@@31))) ($generated@@51 $generated@@37 ($generated@@52 $generated@@37 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@173 $generated@@174) $generated@@44)) $generated@@33))
 :pattern ( ($generated@@52 $generated@@37 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@173 $generated@@174) $generated@@44)))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@51 $generated@@37 $generated@@177 $generated@@33)  (or (= $generated@@177 $generated@@50) ($generated@@175 ($generated@@176 $generated@@177))))
 :pattern ( ($generated@@51 $generated@@37 $generated@@177 $generated@@33))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@51 $generated@@37 $generated@@179 $generated@@31)  (or (= $generated@@179 $generated@@50) ($generated@@178 ($generated@@176 $generated@@179))))
 :pattern ( ($generated@@51 $generated@@37 $generated@@179 $generated@@31))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@100 $generated@@181 ($generated@@97 $generated@@181 $generated@@180)) ($generated@@97 $generated@@55 ($generated@@100 $generated@@181 $generated@@180)))
 :pattern ( ($generated@@100 $generated@@181 ($generated@@97 $generated@@181 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! ($generated@@36 $generated@@12 $generated@@183 $generated $generated@@182)
 :pattern ( ($generated@@36 $generated@@12 $generated@@183 $generated $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@51 $generated@@12 $generated@@184 $generated)
 :pattern ( ($generated@@51 $generated@@12 $generated@@184 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@194  (=> (= ($generated@@49 $generated@@185 $generated@@186 $generated@@187)  (and true (=> (or (not (= ($generated@@52 $generated@@37 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@186 $generated@@187) $generated@@44)) $generated@@50)) (not true)) ($generated@@83 $generated@@185 $generated@@186 $generated@@187)))) (=> (and (=> ($generated@@16 ($generated@@97 $generated@@12 ($generated@@15 true))) (=> (or (not (= ($generated@@52 $generated@@37 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@186 $generated@@187) $generated@@44)) $generated@@50)) (not true)) ($generated@@153 $generated@@185 $generated@@186 $generated@@187))) ($generated@@51 $generated@@12 ($generated@@15 ($generated@@49 $generated@@185 $generated@@186 $generated@@187)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@188) (=> $generated@@188 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@189)))))))
(let (($generated@@195  (=> (and (and (= ($generated@@52 $generated@@37 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@186 $generated@@187) $generated@@44)) $generated@@50) (= $generated@@188 $generated@@190)) (and (= $generated@@189 true) (= (ControlFlow 0 8) 3))) $generated@@194)))
(let (($generated@@196  (=> (and (or (not (= ($generated@@52 $generated@@37 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@186 $generated@@187) $generated@@44)) $generated@@50)) (not true)) ($generated@@30 ($generated@@100 $generated@@37 $generated@@187) $generated@@31 $generated@@186)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@36 $generated@@37 $generated@@187 $generated@@41 $generated@@185)) (=> ($generated@@36 $generated@@37 $generated@@187 $generated@@41 $generated@@185) (=> (= $generated@@191 (forall (($generated@@197 T@U) ($generated@@198 T@U) )  (=> (and (and (or (not (= $generated@@197 $generated@@50)) (not true)) ($generated@@16 ($generated@@52 $generated@@12 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@186 $generated@@197) $generated@@1)))) ($generated@@16 ($generated@@52 $generated@@12 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@37 ($generated@@56 $generated@@54 $generated@@55) $generated@@186 $generated@@197) $generated@@1)))) ($generated@@16 ($generated@@103 $generated@@37 $generated@@54 $generated@@12 $generated@@192 $generated@@197 $generated@@198))))) (=> (and (and ($generated@@153 $generated@@185 $generated@@186 $generated@@187) (= $generated@@188 $generated@@190)) (and (= $generated@@189 $generated@@191) (= (ControlFlow 0 6) 3))) $generated@@194)))))))
(let (($generated@@199  (=> (and ($generated@@16 ($generated@@97 $generated@@12 ($generated@@15 true))) (= $generated@@190 ($generated@@16 ($generated@@103 $generated@@37 $generated@@54 $generated@@12 $generated@@192 $generated@@187 $generated@@44)))) (and (=> (= (ControlFlow 0 9) 6) $generated@@196) (=> (= (ControlFlow 0 9) 8) $generated@@195)))))
(let (($generated@@200  (=> (and (and (not ($generated@@16 ($generated@@97 $generated@@12 ($generated@@15 true)))) (= $generated@@188 true)) (and (= $generated@@189 true) (= (ControlFlow 0 5) 3))) $generated@@194)))
(let (($generated@@201 true))
(let (($generated@@202  (=> (= $generated@@192 ($generated@@104 $generated@@50 $generated@@186 $generated@@1 $generated@@186 $generated@@1)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@201) (=> (= (ControlFlow 0 10) 9) $generated@@199)) (=> (= (ControlFlow 0 10) 5) $generated@@200)))))
(let (($generated@@203  (=> (and ($generated@@32 $generated@@185) ($generated@@47 $generated@@185)) (=> (and (and (and (or (not (= $generated@@187 $generated@@50)) (not true)) (and ($generated@@51 $generated@@37 $generated@@187 $generated@@41) ($generated@@36 $generated@@37 $generated@@187 $generated@@41 $generated@@193))) (= 2 $generated@@151)) (and (and (= $generated@@193 $generated@@185) (and ($generated@@48 $generated@@193 $generated@@186) ($generated@@32 $generated@@186))) (= (ControlFlow 0 11) 10))) $generated@@202))))
$generated@@203)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
