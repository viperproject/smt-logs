(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 () T@U)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@21 (T@T) Int)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Bool) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (Int) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (Real) T@U)
(declare-fun $generated@@30 (T@U) Real)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@86 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@87 () T@U)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@98 () T@U)
(declare-fun $generated@@103 () T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U) Bool)
(declare-fun $generated@@106 () T@U)
(declare-fun $generated@@107 (T@T T@U) T@U)
(declare-fun $generated@@121 (T@T T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 (T@U T@U T@U) Bool)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@21 $generated@@22) 0) (= ($generated@@21 $generated@@23) 1)) (= ($generated@@21 $generated@@24) 2)) (forall (($generated@@31 Bool) ) (! (= ($generated@@26 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 Int) ) (! (= ($generated@@28 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))) (forall (($generated@@34 T@U) ) (! (= ($generated@@27 ($generated@@28 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@28 $generated@@34))
))) (forall (($generated@@35 Real) ) (! (= ($generated@@30 ($generated@@29 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@29 $generated@@35))
))) (forall (($generated@@36 T@U) ) (! (= ($generated@@29 ($generated@@30 $generated@@36)) $generated@@36)
 :pattern ( ($generated@@30 $generated@@36))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17 $generated@@18 $generated@@19 $generated@@20)
)
(assert (= ($generated@@37 $generated@@1) 0))
(assert (= ($generated@@38 $generated) $generated@@0))
(assert (= ($generated@@39 $generated@@1) $generated@@2))
(assert  (and (and (and (and (and (and (and (= ($generated@@21 $generated@@46) 3) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@21 $generated@@49) 4)) (= ($generated@@21 $generated@@50) 5)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@21 ($generated@@51 $generated@@66 $generated@@67)) 6))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (and (and (and ($generated@@43 $generated@@73) ($generated@@43 $generated@@74)) (and (or (not (= $generated@@75 $generated@@44)) (not true)) ($generated@@45 $generated@@46 $generated@@75 $generated@@47))) (and ($generated@@40 $generated@@73) ($generated@@41 $generated@@73 $generated@@74))) (=> (forall (($generated@@76 T@U) ($generated@@77 T@U) )  (=> (and (or (not (= $generated@@76 $generated@@44)) (not true)) (= $generated@@76 $generated@@75)) (= ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@76) $generated@@77) ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@74 $generated@@76) $generated@@77)))) (= ($generated@@42 $generated@@72 $generated@@73 $generated@@75) ($generated@@42 $generated@@72 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@40 $generated@@73) ($generated@@41 $generated@@73 $generated@@74) ($generated@@42 $generated@@72 $generated@@74 $generated@@75))
)))
(assert ($generated@@78 $generated@@79))
(assert ($generated@@78 $generated@@80))
(assert ($generated@@78 $generated@@81))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@83 $generated@@79)  (or (= $generated@@83 $generated@@44) (= ($generated@@82 $generated@@83) $generated@@79)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@83 $generated@@79))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@84 $generated@@80)  (or (= $generated@@84 $generated@@44) (= ($generated@@82 $generated@@84) $generated@@80)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@84 $generated@@80))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@85 $generated@@81)  (or (= $generated@@85 $generated@@44) (= ($generated@@82 $generated@@85) $generated@@81)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@85 $generated@@81))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@86 $generated@@46 $generated@@89 $generated@@87 $generated@@90) ($generated@@86 $generated@@46 $generated@@89 $generated@@88 $generated@@90))
 :pattern ( ($generated@@86 $generated@@46 $generated@@89 $generated@@87 $generated@@90))
 :pattern ( ($generated@@86 $generated@@46 $generated@@89 $generated@@88 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@86 $generated@@46 $generated@@93 $generated@@91 $generated@@94) ($generated@@86 $generated@@46 $generated@@93 $generated@@92 $generated@@94))
 :pattern ( ($generated@@86 $generated@@46 $generated@@93 $generated@@91 $generated@@94))
 :pattern ( ($generated@@86 $generated@@46 $generated@@93 $generated@@92 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@86 $generated@@46 $generated@@96 $generated@@95 $generated@@97) ($generated@@86 $generated@@46 $generated@@96 $generated@@79 $generated@@97))
 :pattern ( ($generated@@86 $generated@@46 $generated@@96 $generated@@95 $generated@@97))
 :pattern ( ($generated@@86 $generated@@46 $generated@@96 $generated@@79 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@86 $generated@@46 $generated@@99 $generated@@98 $generated@@100) ($generated@@86 $generated@@46 $generated@@99 $generated@@80 $generated@@100))
 :pattern ( ($generated@@86 $generated@@46 $generated@@99 $generated@@98 $generated@@100))
 :pattern ( ($generated@@86 $generated@@46 $generated@@99 $generated@@80 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@86 $generated@@46 $generated@@101 $generated@@47 $generated@@102) ($generated@@86 $generated@@46 $generated@@101 $generated@@81 $generated@@102))
 :pattern ( ($generated@@86 $generated@@46 $generated@@101 $generated@@47 $generated@@102))
 :pattern ( ($generated@@86 $generated@@46 $generated@@101 $generated@@81 $generated@@102))
)))
(assert (= ($generated@@37 $generated@@103) 0))
(assert (= ($generated@@104 $generated@@12 $generated@@19) $generated@@103))
(assert  (not ($generated@@105 $generated@@103)))
(assert (= ($generated@@37 $generated@@106) 0))
(assert (= ($generated@@104 $generated@@12 $generated@@20) $generated@@106))
(assert  (not ($generated@@105 $generated@@106)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@86 $generated@@46 $generated@@108 $generated@@88 $generated@@109)  (or (= $generated@@108 $generated@@44) ($generated@@26 ($generated@@107 $generated@@22 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@109 $generated@@108) $generated@@1)))))
 :pattern ( ($generated@@86 $generated@@46 $generated@@108 $generated@@88 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@86 $generated@@46 $generated@@110 $generated@@92 $generated@@111)  (or (= $generated@@110 $generated@@44) ($generated@@26 ($generated@@107 $generated@@22 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@111 $generated@@110) $generated@@1)))))
 :pattern ( ($generated@@86 $generated@@46 $generated@@110 $generated@@92 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@86 $generated@@46 $generated@@112 $generated@@79 $generated@@113)  (or (= $generated@@112 $generated@@44) ($generated@@26 ($generated@@107 $generated@@22 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@113 $generated@@112) $generated@@1)))))
 :pattern ( ($generated@@86 $generated@@46 $generated@@112 $generated@@79 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@86 $generated@@46 $generated@@114 $generated@@80 $generated@@115)  (or (= $generated@@114 $generated@@44) ($generated@@26 ($generated@@107 $generated@@22 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@115 $generated@@114) $generated@@1)))))
 :pattern ( ($generated@@86 $generated@@46 $generated@@114 $generated@@80 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@86 $generated@@46 $generated@@116 $generated@@81 $generated@@117)  (or (= $generated@@116 $generated@@44) ($generated@@26 ($generated@@107 $generated@@22 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@117 $generated@@116) $generated@@1)))))
 :pattern ( ($generated@@86 $generated@@46 $generated@@116 $generated@@81 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> ($generated@@41 $generated@@118 $generated@@119) (forall (($generated@@120 T@U) ) (!  (=> ($generated@@26 ($generated@@107 $generated@@22 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@118 $generated@@120) $generated@@1))) ($generated@@26 ($generated@@107 $generated@@22 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@119 $generated@@120) $generated@@1))))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@119 $generated@@120) $generated@@1))
)))
 :pattern ( ($generated@@41 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@121 $generated@@123 ($generated@@107 $generated@@123 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@107 $generated@@123 $generated@@122))
)))
(assert ($generated@@105 $generated@@1))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (!  (=> ($generated@@41 $generated@@124 $generated@@125) (=> ($generated@@86 $generated@@128 $generated@@126 $generated@@127 $generated@@124) ($generated@@86 $generated@@128 $generated@@126 $generated@@127 $generated@@125)))
 :pattern ( ($generated@@41 $generated@@124 $generated@@125) ($generated@@86 $generated@@128 $generated@@126 $generated@@127 $generated@@124))
)))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@26 ($generated@@129 $generated@@46 $generated@@49 $generated@@22 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@26 ($generated@@107 $generated@@22 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@158 $generated@@161) $generated@@159)))) (= $generated@@161 $generated@@160)))
 :pattern ( ($generated@@129 $generated@@46 $generated@@49 $generated@@22 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and ($generated@@43 $generated@@163) (and (or (not (= $generated@@164 $generated@@44)) (not true)) (= ($generated@@82 $generated@@164) $generated@@81))) ($generated@@45 $generated@@46 ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@163 $generated@@164) $generated@@103)) $generated@@95))
 :pattern ( ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@163 $generated@@164) $generated@@103)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@43 $generated@@165) (and (or (not (= $generated@@166 $generated@@44)) (not true)) (= ($generated@@82 $generated@@166) $generated@@81))) ($generated@@45 $generated@@46 ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@165 $generated@@166) $generated@@106)) $generated@@98))
 :pattern ( ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@165 $generated@@166) $generated@@106)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@167 $generated@@87)  (and ($generated@@45 $generated@@46 $generated@@167 $generated@@88) (or (not (= $generated@@167 $generated@@44)) (not true))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@167 $generated@@87))
 :pattern ( ($generated@@45 $generated@@46 $generated@@167 $generated@@88))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@168 $generated@@91)  (and ($generated@@45 $generated@@46 $generated@@168 $generated@@92) (or (not (= $generated@@168 $generated@@44)) (not true))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@168 $generated@@91))
 :pattern ( ($generated@@45 $generated@@46 $generated@@168 $generated@@92))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@169 $generated@@95)  (and ($generated@@45 $generated@@46 $generated@@169 $generated@@79) (or (not (= $generated@@169 $generated@@44)) (not true))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@169 $generated@@95))
 :pattern ( ($generated@@45 $generated@@46 $generated@@169 $generated@@79))
)))
(assert (forall (($generated@@170 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@170 $generated@@98)  (and ($generated@@45 $generated@@46 $generated@@170 $generated@@80) (or (not (= $generated@@170 $generated@@44)) (not true))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@170 $generated@@98))
 :pattern ( ($generated@@45 $generated@@46 $generated@@170 $generated@@80))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@171 $generated@@47)  (and ($generated@@45 $generated@@46 $generated@@171 $generated@@81) (or (not (= $generated@@171 $generated@@44)) (not true))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@171 $generated@@47))
 :pattern ( ($generated@@45 $generated@@46 $generated@@171 $generated@@81))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and ($generated@@43 $generated@@172) (and (or (not (= $generated@@173 $generated@@44)) (not true)) (= ($generated@@82 $generated@@173) $generated@@81))) ($generated@@26 ($generated@@107 $generated@@22 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@172 $generated@@173) $generated@@1)))) ($generated@@86 $generated@@46 ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@172 $generated@@173) $generated@@103)) $generated@@95 $generated@@172))
 :pattern ( ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@172 $generated@@173) $generated@@103)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and ($generated@@43 $generated@@174) (and (or (not (= $generated@@175 $generated@@44)) (not true)) (= ($generated@@82 $generated@@175) $generated@@81))) ($generated@@26 ($generated@@107 $generated@@22 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@174 $generated@@175) $generated@@1)))) ($generated@@86 $generated@@46 ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@174 $generated@@175) $generated@@106)) $generated@@98 $generated@@174))
 :pattern ( ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@174 $generated@@175) $generated@@106)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@86 $generated@@46 $generated@@176 $generated@@92 $generated@@177) ($generated@@86 $generated@@46 $generated@@176 $generated@@88 $generated@@177))
 :pattern ( ($generated@@86 $generated@@46 $generated@@176 $generated@@92 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@86 $generated@@46 $generated@@178 $generated@@79 $generated@@179) ($generated@@86 $generated@@46 $generated@@178 $generated@@92 $generated@@179))
 :pattern ( ($generated@@86 $generated@@46 $generated@@178 $generated@@79 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@86 $generated@@46 $generated@@180 $generated@@80 $generated@@181) ($generated@@86 $generated@@46 $generated@@180 $generated@@92 $generated@@181))
 :pattern ( ($generated@@86 $generated@@46 $generated@@180 $generated@@80 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@86 $generated@@46 $generated@@182 $generated@@81 $generated@@183) ($generated@@86 $generated@@46 $generated@@182 $generated@@92 $generated@@183))
 :pattern ( ($generated@@86 $generated@@46 $generated@@182 $generated@@81 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (or (not (= $generated@@184 $generated@@186)) (not true)) (=> (and ($generated@@41 $generated@@184 $generated@@185) ($generated@@41 $generated@@185 $generated@@186)) ($generated@@41 $generated@@184 $generated@@186)))
 :pattern ( ($generated@@41 $generated@@184 $generated@@185) ($generated@@41 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (and (= ($generated@@187 ($generated@@104 $generated@@188 $generated@@189)) $generated@@188) (= ($generated@@39 ($generated@@104 $generated@@188 $generated@@189)) $generated@@189))
 :pattern ( ($generated@@104 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@T) ) (! (= ($generated@@107 $generated@@191 ($generated@@121 $generated@@191 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@121 $generated@@191 $generated@@190))
)))
(assert  (=> (<= 0 $generated@@192) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (or ($generated@@193 $generated@@194 $generated@@195 $generated@@196) (and (< 0 $generated@@192) (and (and (and ($generated@@43 $generated@@194) ($generated@@43 $generated@@195)) ($generated@@41 $generated@@194 $generated@@195)) (and (or (not (= $generated@@196 $generated@@44)) (not true)) (and ($generated@@45 $generated@@46 $generated@@196 $generated@@47) ($generated@@86 $generated@@46 $generated@@196 $generated@@47 $generated@@194)))))) (= ($generated@@42 $generated@@194 $generated@@195 $generated@@196)  (and (= ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@194 $generated@@196) $generated@@103)) ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@195 $generated@@196) $generated@@103))) (= ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@194 $generated@@196) $generated@@106)) ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@195 $generated@@196) $generated@@106))))))
 :pattern ( ($generated@@42 $generated@@194 $generated@@195 $generated@@196) ($generated@@43 $generated@@195))
))))
(assert (forall (($generated@@197 T@U) ) (!  (=> ($generated@@45 $generated@@46 $generated@@197 $generated@@92) ($generated@@45 $generated@@46 $generated@@197 $generated@@88))
 :pattern ( ($generated@@45 $generated@@46 $generated@@197 $generated@@92))
)))
(assert (forall (($generated@@198 T@U) ) (!  (=> ($generated@@45 $generated@@46 $generated@@198 $generated@@79) ($generated@@45 $generated@@46 $generated@@198 $generated@@92))
 :pattern ( ($generated@@45 $generated@@46 $generated@@198 $generated@@79))
)))
(assert (forall (($generated@@199 T@U) ) (!  (=> ($generated@@45 $generated@@46 $generated@@199 $generated@@80) ($generated@@45 $generated@@46 $generated@@199 $generated@@92))
 :pattern ( ($generated@@45 $generated@@46 $generated@@199 $generated@@80))
)))
(assert (forall (($generated@@200 T@U) ) (!  (=> ($generated@@45 $generated@@46 $generated@@200 $generated@@81) ($generated@@45 $generated@@46 $generated@@200 $generated@@92))
 :pattern ( ($generated@@45 $generated@@46 $generated@@200 $generated@@81))
)))
(assert (= ($generated@@38 $generated@@95) $generated@@3))
(assert (= ($generated@@201 $generated@@95) $generated@@14))
(assert (= ($generated@@38 $generated@@87) $generated@@4))
(assert (= ($generated@@201 $generated@@87) $generated@@15))
(assert (= ($generated@@38 $generated@@91) $generated@@5))
(assert (= ($generated@@201 $generated@@91) $generated@@16))
(assert (= ($generated@@38 $generated@@98) $generated@@6))
(assert (= ($generated@@201 $generated@@98) $generated@@17))
(assert (= ($generated@@38 $generated@@47) $generated@@7))
(assert (= ($generated@@201 $generated@@47) $generated@@18))
(assert (= ($generated@@38 $generated@@88) $generated@@8))
(assert (= ($generated@@201 $generated@@88) $generated@@15))
(assert (= ($generated@@38 $generated@@92) $generated@@9))
(assert (= ($generated@@201 $generated@@92) $generated@@16))
(assert (= ($generated@@38 $generated@@79) $generated@@10))
(assert (= ($generated@@201 $generated@@79) $generated@@14))
(assert (= ($generated@@38 $generated@@80) $generated@@11))
(assert (= ($generated@@201 $generated@@80) $generated@@17))
(assert (= ($generated@@38 $generated@@81) $generated@@13))
(assert (= ($generated@@201 $generated@@81) $generated@@18))
(assert (forall (($generated@@203 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@203 $generated@@88)  (or (= $generated@@203 $generated@@44) ($generated@@202 ($generated@@82 $generated@@203))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@203 $generated@@88))
)))
(assert (forall (($generated@@204 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@204 $generated@@92)  (or (= $generated@@204 $generated@@44) ($generated@@78 ($generated@@82 $generated@@204))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@204 $generated@@92))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! ($generated@@86 $generated@@22 $generated@@206 $generated $generated@@205)
 :pattern ( ($generated@@86 $generated@@22 $generated@@206 $generated $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ) (! ($generated@@45 $generated@@22 $generated@@207 $generated)
 :pattern ( ($generated@@45 $generated@@22 $generated@@207 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () Bool)
(declare-fun $generated@@212 () Bool)
(declare-fun $generated@@213 () Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@216  (=> (and (= ($generated@@42 $generated@@208 $generated@@209 $generated@@210)  (and (= ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@208 $generated@@210) $generated@@103)) ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@209 $generated@@210) $generated@@103))) (= ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@208 $generated@@210) $generated@@106)) ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@209 $generated@@210) $generated@@106))))) ($generated@@45 $generated@@22 ($generated@@25 ($generated@@42 $generated@@208 $generated@@209 $generated@@210)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@211) (=> $generated@@211 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@212))))))
(let (($generated@@217  (=> (or (not (= ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@208 $generated@@210) $generated@@103)) ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@209 $generated@@210) $generated@@103)))) (not true)) (=> (and (= $generated@@212 true) (= (ControlFlow 0 7) 3)) $generated@@216))))
(let (($generated@@218  (=> (= ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@208 $generated@@210) $generated@@103)) ($generated@@107 $generated@@46 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@46 ($generated@@51 $generated@@49 $generated@@50) $generated@@209 $generated@@210) $generated@@103))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@86 $generated@@46 $generated@@210 $generated@@47 $generated@@208)) (=> ($generated@@86 $generated@@46 $generated@@210 $generated@@47 $generated@@208) (=> (= $generated@@213 ($generated@@26 ($generated@@129 $generated@@46 $generated@@49 $generated@@22 $generated@@214 $generated@@210 $generated@@106))) (=> (and (= $generated@@212 $generated@@213) (= (ControlFlow 0 5) 3)) $generated@@216)))))))
(let (($generated@@219  (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@86 $generated@@46 $generated@@210 $generated@@47 $generated@@208)) (=> ($generated@@86 $generated@@46 $generated@@210 $generated@@47 $generated@@208) (=> (= $generated@@211 ($generated@@26 ($generated@@129 $generated@@46 $generated@@49 $generated@@22 $generated@@214 $generated@@210 $generated@@103))) (and (=> (= (ControlFlow 0 8) 5) $generated@@218) (=> (= (ControlFlow 0 8) 7) $generated@@217)))))))
(let (($generated@@220 true))
(let (($generated@@221  (=> (= $generated@@214 ($generated@@130 $generated@@44 $generated@@209 $generated@@1 $generated@@210)) (and (=> (= (ControlFlow 0 10) 1) $generated@@220) (=> (= (ControlFlow 0 10) 8) $generated@@219)))))
(let (($generated@@222  (=> (and ($generated@@43 $generated@@208) ($generated@@40 $generated@@208)) (=> (and (and (and (or (not (= $generated@@210 $generated@@44)) (not true)) (and ($generated@@45 $generated@@46 $generated@@210 $generated@@47) ($generated@@86 $generated@@46 $generated@@210 $generated@@47 $generated@@215))) (= 0 $generated@@192)) (and (and (= $generated@@215 $generated@@208) (and ($generated@@41 $generated@@215 $generated@@209) ($generated@@43 $generated@@209))) (= (ControlFlow 0 11) 10))) $generated@@221))))
$generated@@222))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
