(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@T T@T) T@T)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U T@U) Bool)
(declare-fun $generated@@72 (T@U T@U T@U) Bool)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@77 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 (T@U T@U T@U) Bool)
(declare-fun $generated@@122 (T@U T@U T@U) Bool)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert  (and (and (and (and (and (and (and (= ($generated@@9 $generated@@33) 3) (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@35 $generated@@42 $generated@@43 ($generated@@39 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@46) $generated@@44)
 :weight 0
))) (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (or (= $generated@@51 $generated@@52) (= ($generated@@35 $generated@@47 $generated@@48 ($generated@@39 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@52) ($generated@@35 $generated@@47 $generated@@48 $generated@@50 $generated@@52)))
 :weight 0
))) (= ($generated@@9 $generated@@36) 4)) (= ($generated@@9 $generated@@37) 5)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (= ($generated@@9 ($generated@@38 $generated@@53 $generated@@54)) 6))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@40 ($generated@@38 $generated@@55 $generated@@56)) $generated@@55)
 :pattern ( ($generated@@38 $generated@@55 $generated@@56))
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@41 ($generated@@38 $generated@@57 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@38 $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and (and (and ($generated@@30 $generated@@60) ($generated@@30 $generated@@61)) (and (or (not (= $generated@@62 $generated@@31)) (not true)) ($generated@@32 $generated@@33 $generated@@62 $generated@@34))) (and ($generated@@27 $generated@@60) ($generated@@28 $generated@@60 $generated@@61))) (=> (forall (($generated@@63 T@U) ($generated@@64 T@U) )  (=> (and (or (not (= $generated@@63 $generated@@31)) (not true)) (= $generated@@63 $generated@@62)) (= ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@60 $generated@@63) $generated@@64) ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@61 $generated@@63) $generated@@64)))) (= ($generated@@29 $generated@@59 $generated@@60 $generated@@62) ($generated@@29 $generated@@59 $generated@@61 $generated@@62))))
 :pattern ( ($generated@@27 $generated@@60) ($generated@@28 $generated@@60 $generated@@61) ($generated@@29 $generated@@59 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (and (and (and ($generated@@30 $generated@@67) ($generated@@30 $generated@@68)) (and (or (not (= $generated@@69 $generated@@31)) (not true)) ($generated@@32 $generated@@33 $generated@@69 $generated@@34))) (and ($generated@@27 $generated@@67) ($generated@@28 $generated@@67 $generated@@68))) (=> (forall (($generated@@70 T@U) ($generated@@71 T@U) )  (=> (and (or (not (= $generated@@70 $generated@@31)) (not true)) (= $generated@@70 $generated@@69)) (= ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@67 $generated@@70) $generated@@71) ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@68 $generated@@70) $generated@@71)))) (= ($generated@@65 $generated@@66 $generated@@67 $generated@@69) ($generated@@65 $generated@@66 $generated@@68 $generated@@69))))
 :pattern ( ($generated@@27 $generated@@67) ($generated@@28 $generated@@67 $generated@@68) ($generated@@65 $generated@@66 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (and ($generated@@72 $generated@@75 $generated@@73 $generated@@76) ($generated@@30 $generated@@76)) ($generated@@72 $generated@@75 $generated@@74 $generated@@76))
 :pattern ( ($generated@@72 $generated@@75 $generated@@73 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@77 $generated@@33 $generated@@79 $generated@@78 $generated@@80) ($generated@@77 $generated@@33 $generated@@79 $generated@@74 $generated@@80))
 :pattern ( ($generated@@77 $generated@@33 $generated@@79 $generated@@78 $generated@@80))
 :pattern ( ($generated@@77 $generated@@33 $generated@@79 $generated@@74 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@77 $generated@@33 $generated@@81 $generated@@34 $generated@@82) ($generated@@77 $generated@@33 $generated@@81 $generated@@73 $generated@@82))
 :pattern ( ($generated@@77 $generated@@33 $generated@@81 $generated@@34 $generated@@82))
 :pattern ( ($generated@@77 $generated@@33 $generated@@81 $generated@@73 $generated@@82))
)))
(assert (= ($generated@@25 $generated@@83) 0))
(assert (= ($generated@@84 $generated@@4 $generated@@8) $generated@@83))
(assert ($generated@@85 $generated@@83))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@77 $generated@@33 $generated@@87 $generated@@74 $generated@@88)  (or (= $generated@@87 $generated@@31) ($generated@@14 ($generated@@86 $generated@@10 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@88 $generated@@87) $generated)))))
 :pattern ( ($generated@@77 $generated@@33 $generated@@87 $generated@@74 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@77 $generated@@33 $generated@@89 $generated@@73 $generated@@90)  (or (= $generated@@89 $generated@@31) ($generated@@14 ($generated@@86 $generated@@10 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@90 $generated@@89) $generated)))))
 :pattern ( ($generated@@77 $generated@@33 $generated@@89 $generated@@73 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@28 $generated@@91 $generated@@92) (forall (($generated@@93 T@U) ) (!  (=> ($generated@@14 ($generated@@86 $generated@@10 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@91 $generated@@93) $generated))) ($generated@@14 ($generated@@86 $generated@@10 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@92 $generated@@93) $generated))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@92 $generated@@93) $generated))
)))
 :pattern ( ($generated@@28 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@86 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@86 $generated@@96 $generated@@95))
)))
(assert ($generated@@85 $generated))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@72 ($generated@@94 $generated@@100 $generated@@97) $generated@@98 $generated@@99) ($generated@@77 $generated@@100 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@72 ($generated@@94 $generated@@100 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@28 $generated@@101 $generated@@102) (=> ($generated@@72 $generated@@103 $generated@@104 $generated@@101) ($generated@@72 $generated@@103 $generated@@104 $generated@@102)))
 :pattern ( ($generated@@28 $generated@@101 $generated@@102) ($generated@@72 $generated@@103 $generated@@104 $generated@@101))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (!  (=> ($generated@@28 $generated@@105 $generated@@106) (=> ($generated@@77 $generated@@109 $generated@@107 $generated@@108 $generated@@105) ($generated@@77 $generated@@109 $generated@@107 $generated@@108 $generated@@106)))
 :pattern ( ($generated@@28 $generated@@105 $generated@@106) ($generated@@77 $generated@@109 $generated@@107 $generated@@108 $generated@@105))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@110 $generated@@78)  (and ($generated@@32 $generated@@33 $generated@@110 $generated@@74) (or (not (= $generated@@110 $generated@@31)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@110 $generated@@78))
 :pattern ( ($generated@@32 $generated@@33 $generated@@110 $generated@@74))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@111 $generated@@34)  (and ($generated@@32 $generated@@33 $generated@@111 $generated@@73) (or (not (= $generated@@111 $generated@@31)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@111 $generated@@34))
 :pattern ( ($generated@@32 $generated@@33 $generated@@111 $generated@@73))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> ($generated@@77 $generated@@33 $generated@@112 $generated@@73 $generated@@113) ($generated@@77 $generated@@33 $generated@@112 $generated@@74 $generated@@113))
 :pattern ( ($generated@@77 $generated@@33 $generated@@112 $generated@@73 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or (not (= $generated@@114 $generated@@116)) (not true)) (=> (and ($generated@@28 $generated@@114 $generated@@115) ($generated@@28 $generated@@115 $generated@@116)) ($generated@@28 $generated@@114 $generated@@116)))
 :pattern ( ($generated@@28 $generated@@114 $generated@@115) ($generated@@28 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (and (= ($generated@@117 ($generated@@84 $generated@@118 $generated@@119)) $generated@@118) (= ($generated@@26 ($generated@@84 $generated@@118 $generated@@119)) $generated@@119))
 :pattern ( ($generated@@84 $generated@@118 $generated@@119))
)))
(assert  (=> (<= 2 $generated@@120) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (or ($generated@@121 $generated@@123 $generated@@124 $generated@@125) (and (< 2 $generated@@120) (and (and (and ($generated@@30 $generated@@123) ($generated@@30 $generated@@124)) ($generated@@28 $generated@@123 $generated@@124)) (and (or (not (= $generated@@125 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@125 $generated@@34) ($generated@@77 $generated@@33 $generated@@125 $generated@@34 $generated@@123)))))) (and (=> (= ($generated@@86 $generated@@33 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@123 $generated@@125) $generated@@83)) ($generated@@86 $generated@@33 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@124 $generated@@125) $generated@@83))) ($generated@@122 $generated@@123 $generated@@124 $generated@@125)) (= ($generated@@29 $generated@@123 $generated@@124 $generated@@125)  (and (= ($generated@@86 $generated@@33 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@123 $generated@@125) $generated@@83)) ($generated@@86 $generated@@33 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@124 $generated@@125) $generated@@83))) ($generated@@65 $generated@@123 $generated@@124 $generated@@125)))))
 :pattern ( ($generated@@29 $generated@@123 $generated@@124 $generated@@125) ($generated@@30 $generated@@124))
))))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@86 $generated@@127 ($generated@@94 $generated@@127 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@94 $generated@@127 $generated@@126))
)))
(assert  (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@128 $generated@@131 $generated@@132 $generated@@133 ($generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@128 $generated@@138 $generated@@139 $generated@@140 ($generated@@130 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@128 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@128 $generated@@147 $generated@@148 $generated@@149 ($generated@@130 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@128 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Bool) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@14 ($generated@@128 $generated@@33 $generated@@36 $generated@@10 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@14 ($generated@@86 $generated@@10 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@157 $generated@@160) $generated@@158)))) $generated@@159))
 :pattern ( ($generated@@128 $generated@@33 $generated@@36 $generated@@10 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@162) (and (or (not (= $generated@@163 $generated@@31)) (not true)) ($generated@@32 $generated@@33 $generated@@163 $generated@@73))) ($generated@@14 ($generated@@86 $generated@@10 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@162 $generated@@163) $generated)))) ($generated@@77 $generated@@33 ($generated@@86 $generated@@33 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@162 $generated@@163) $generated@@83)) $generated@@78 $generated@@162))
 :pattern ( ($generated@@86 $generated@@33 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@162 $generated@@163) $generated@@83)))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@164 $generated@@73) ($generated@@32 $generated@@33 $generated@@164 $generated@@74))
 :pattern ( ($generated@@32 $generated@@33 $generated@@164 $generated@@73))
)))
(assert (= ($generated@@165 $generated@@34) $generated@@1))
(assert (= ($generated@@166 $generated@@34) $generated@@6))
(assert (= ($generated@@165 $generated@@78) $generated@@2))
(assert (= ($generated@@166 $generated@@78) $generated@@7))
(assert (= ($generated@@165 $generated@@74) $generated@@3))
(assert (= ($generated@@166 $generated@@74) $generated@@7))
(assert (= ($generated@@165 $generated@@73) $generated@@5))
(assert (= ($generated@@166 $generated@@73) $generated@@6))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and ($generated@@30 $generated@@167) (and (or (not (= $generated@@168 $generated@@31)) (not true)) ($generated@@32 $generated@@33 $generated@@168 $generated@@73))) ($generated@@32 $generated@@33 ($generated@@86 $generated@@33 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@167 $generated@@168) $generated@@83)) $generated@@78))
 :pattern ( ($generated@@86 $generated@@33 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@167 $generated@@168) $generated@@83)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@171 $generated@@74)  (or (= $generated@@171 $generated@@31) ($generated@@169 ($generated@@170 $generated@@171))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@171 $generated@@74))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@173 $generated@@73)  (or (= $generated@@173 $generated@@31) ($generated@@172 ($generated@@170 $generated@@173))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@173 $generated@@73))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@179  (=> (= $generated@@174 ($generated@@129 $generated@@31 $generated@@175 $generated false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@77 $generated@@33 $generated@@176 $generated@@34 $generated@@177)) (=> ($generated@@77 $generated@@33 $generated@@176 $generated@@34 $generated@@177) (=> (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (or (not (= $generated@@180 $generated@@31)) (not true)) (=> (= $generated@@180 $generated@@176) (= ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@175 $generated@@180) $generated@@181) ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@177 $generated@@180) $generated@@181))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@175 $generated@@180) $generated@@181))
)) (=> (and ($generated@@72 ($generated@@94 $generated@@33 $generated@@176) $generated@@73 $generated@@175) (= (ControlFlow 0 2) (- 0 1))) ($generated@@77 $generated@@33 $generated@@176 $generated@@34 $generated@@177))))))))
(let (($generated@@182  (=> (and ($generated@@30 $generated@@177) ($generated@@27 $generated@@177)) (=> (and (and (and (or (not (= $generated@@176 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@176 $generated@@34) ($generated@@77 $generated@@33 $generated@@176 $generated@@34 $generated@@178))) (= 3 $generated@@120)) (and (and (= $generated@@178 $generated@@177) (and ($generated@@28 $generated@@178 $generated@@175) ($generated@@30 $generated@@175))) (= (ControlFlow 0 4) 2))) $generated@@179))))
$generated@@182)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
