(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@102 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@119 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@U T@U T@U) Bool)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (= ($generated@@14 $generated@@37) 3))
(assert  (=> (< 1 $generated@@31) (forall (($generated@@39 T@U) ) (!  (=> (and (or (not (= $generated@@39 $generated@@33)) (not true)) (= ($generated@@34 $generated@@39) $generated@@35)) ($generated@@36 $generated@@37 ($generated@@32 $generated@@39) $generated@@38))
 :pattern ( ($generated@@32 $generated@@39))
))))
(assert  (=> (< 1 $generated@@31) (forall (($generated@@41 T@U) ) (!  (=> (and (or (not (= $generated@@41 $generated@@33)) (not true)) (= ($generated@@34 $generated@@41) $generated@@35)) ($generated@@36 $generated@@37 ($generated@@40 $generated@@41) $generated@@38))
 :pattern ( ($generated@@40 $generated@@41))
))))
(assert ($generated@@42 $generated@@43))
(assert ($generated@@44 $generated@@35))
(assert  (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@46 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@46 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@46 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@14 $generated@@47) 4)) (= ($generated@@14 $generated@@48) 5)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@14 ($generated@@49 $generated@@66 $generated@@67)) 6))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@49 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@49 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@49 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@49 $generated@@70 $generated@@71))
))))
(assert  (=> (< 1 $generated@@31) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and (and ($generated@@50 $generated@@72) (and (or (not (= $generated@@73 $generated@@33)) (not true)) (= ($generated@@34 $generated@@73) $generated@@35))) ($generated@@19 ($generated@@45 $generated@@15 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@72 $generated@@73) $generated@@1)))) ($generated@@51 $generated@@37 ($generated@@32 $generated@@73) $generated@@38 $generated@@72))
 :pattern ( ($generated@@32 $generated@@73) ($generated@@45 $generated@@15 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@72 $generated@@73) $generated@@1)))
))))
(assert  (=> (< 1 $generated@@31) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (and (and ($generated@@50 $generated@@74) (and (or (not (= $generated@@75 $generated@@33)) (not true)) (= ($generated@@34 $generated@@75) $generated@@35))) ($generated@@19 ($generated@@45 $generated@@15 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@74 $generated@@75) $generated@@1)))) ($generated@@51 $generated@@37 ($generated@@40 $generated@@75) $generated@@38 $generated@@74))
 :pattern ( ($generated@@40 $generated@@75) ($generated@@45 $generated@@15 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@74 $generated@@75) $generated@@1)))
))))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@76 $generated@@43)  (or (= $generated@@76 $generated@@33) (= ($generated@@34 $generated@@76) $generated@@43)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@76 $generated@@43))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@77 $generated@@35)  (or (= $generated@@77 $generated@@33) (= ($generated@@34 $generated@@77) $generated@@35)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@77 $generated@@35))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@51 $generated@@37 $generated@@80 $generated@@78 $generated@@81) ($generated@@51 $generated@@37 $generated@@80 $generated@@79 $generated@@81))
 :pattern ( ($generated@@51 $generated@@37 $generated@@80 $generated@@78 $generated@@81))
 :pattern ( ($generated@@51 $generated@@37 $generated@@80 $generated@@79 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@51 $generated@@37 $generated@@84 $generated@@82 $generated@@85) ($generated@@51 $generated@@37 $generated@@84 $generated@@83 $generated@@85))
 :pattern ( ($generated@@51 $generated@@37 $generated@@84 $generated@@82 $generated@@85))
 :pattern ( ($generated@@51 $generated@@37 $generated@@84 $generated@@83 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@51 $generated@@37 $generated@@86 $generated@@38 $generated@@87) ($generated@@51 $generated@@37 $generated@@86 $generated@@43 $generated@@87))
 :pattern ( ($generated@@51 $generated@@37 $generated@@86 $generated@@38 $generated@@87))
 :pattern ( ($generated@@51 $generated@@37 $generated@@86 $generated@@43 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@51 $generated@@37 $generated@@89 $generated@@88 $generated@@90) ($generated@@51 $generated@@37 $generated@@89 $generated@@35 $generated@@90))
 :pattern ( ($generated@@51 $generated@@37 $generated@@89 $generated@@88 $generated@@90))
 :pattern ( ($generated@@51 $generated@@37 $generated@@89 $generated@@35 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@51 $generated@@37 $generated@@91 $generated@@79 $generated@@92)  (or (= $generated@@91 $generated@@33) ($generated@@19 ($generated@@45 $generated@@15 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@92 $generated@@91) $generated@@1)))))
 :pattern ( ($generated@@51 $generated@@37 $generated@@91 $generated@@79 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@51 $generated@@37 $generated@@93 $generated@@83 $generated@@94)  (or (= $generated@@93 $generated@@33) ($generated@@19 ($generated@@45 $generated@@15 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@94 $generated@@93) $generated@@1)))))
 :pattern ( ($generated@@51 $generated@@37 $generated@@93 $generated@@83 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@51 $generated@@37 $generated@@95 $generated@@43 $generated@@96)  (or (= $generated@@95 $generated@@33) ($generated@@19 ($generated@@45 $generated@@15 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@96 $generated@@95) $generated@@1)))))
 :pattern ( ($generated@@51 $generated@@37 $generated@@95 $generated@@43 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@51 $generated@@37 $generated@@97 $generated@@35 $generated@@98)  (or (= $generated@@97 $generated@@33) ($generated@@19 ($generated@@45 $generated@@15 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@98 $generated@@97) $generated@@1)))))
 :pattern ( ($generated@@51 $generated@@37 $generated@@97 $generated@@35 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@99 $generated@@101 $generated@@100) $generated@@100)
 :pattern ( ($generated@@99 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@102 $generated@@104 ($generated@@45 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@45 $generated@@104 $generated@@103))
)))
(assert  (=> (< 1 $generated@@31) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and (and ($generated@@50 $generated@@106) (and (or (not (= $generated@@107 $generated@@33)) (not true)) ($generated@@36 $generated@@37 $generated@@107 $generated@@83))) ($generated@@19 ($generated@@45 $generated@@15 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@106 $generated@@107) $generated@@1)))) ($generated@@51 $generated@@37 ($generated@@105 $generated@@107) $generated@@38 $generated@@106))
 :pattern ( ($generated@@105 $generated@@107) ($generated@@45 $generated@@15 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@106 $generated@@107) $generated@@1)))
))))
(assert  (=> (< 1 $generated@@31) (forall (($generated@@108 T@U) ) (!  (=> (and (or (not (= $generated@@108 $generated@@33)) (not true)) ($generated@@36 $generated@@37 $generated@@108 $generated@@83)) ($generated@@36 $generated@@37 ($generated@@105 $generated@@108) $generated@@38))
 :pattern ( ($generated@@105 $generated@@108))
))))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@109 $generated@@78)  (and ($generated@@36 $generated@@37 $generated@@109 $generated@@79) (or (not (= $generated@@109 $generated@@33)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@109 $generated@@78))
 :pattern ( ($generated@@36 $generated@@37 $generated@@109 $generated@@79))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@110 $generated@@82)  (and ($generated@@36 $generated@@37 $generated@@110 $generated@@83) (or (not (= $generated@@110 $generated@@33)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@110 $generated@@82))
 :pattern ( ($generated@@36 $generated@@37 $generated@@110 $generated@@83))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@111 $generated@@38)  (and ($generated@@36 $generated@@37 $generated@@111 $generated@@43) (or (not (= $generated@@111 $generated@@33)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@111 $generated@@38))
 :pattern ( ($generated@@36 $generated@@37 $generated@@111 $generated@@43))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@112 $generated@@88)  (and ($generated@@36 $generated@@37 $generated@@112 $generated@@35) (or (not (= $generated@@112 $generated@@33)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@112 $generated@@88))
 :pattern ( ($generated@@36 $generated@@37 $generated@@112 $generated@@35))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@51 $generated@@37 $generated@@113 $generated@@83 $generated@@114) ($generated@@51 $generated@@37 $generated@@113 $generated@@79 $generated@@114))
 :pattern ( ($generated@@51 $generated@@37 $generated@@113 $generated@@83 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@51 $generated@@37 $generated@@115 $generated@@43 $generated@@116) ($generated@@51 $generated@@37 $generated@@115 $generated@@79 $generated@@116))
 :pattern ( ($generated@@51 $generated@@37 $generated@@115 $generated@@43 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@51 $generated@@37 $generated@@117 $generated@@35 $generated@@118) ($generated@@51 $generated@@37 $generated@@117 $generated@@83 $generated@@118))
 :pattern ( ($generated@@51 $generated@@37 $generated@@117 $generated@@35 $generated@@118))
)))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (or ($generated@@120 ($generated@@99 $generated@@37 $generated@@121) ($generated@@99 $generated@@37 $generated@@122) ($generated@@99 $generated@@37 $generated@@123)) (and (< 2 $generated@@31) (and (and (and (or (not (= $generated@@121 $generated@@33)) (not true)) ($generated@@36 $generated@@37 $generated@@121 $generated@@88)) ($generated@@36 $generated@@37 $generated@@122 $generated@@82)) ($generated@@36 $generated@@37 $generated@@123 $generated@@82)))) (= ($generated@@119 ($generated@@99 $generated@@37 $generated@@121) ($generated@@99 $generated@@37 $generated@@122) ($generated@@99 $generated@@37 $generated@@123))  (and (= ($generated@@32 ($generated@@99 $generated@@37 $generated@@121)) ($generated@@105 ($generated@@99 $generated@@37 $generated@@122))) (= ($generated@@40 ($generated@@99 $generated@@37 $generated@@121)) ($generated@@105 ($generated@@99 $generated@@37 $generated@@123))))))
 :weight 3
 :pattern ( ($generated@@119 ($generated@@99 $generated@@37 $generated@@121) ($generated@@99 $generated@@37 $generated@@122) ($generated@@99 $generated@@37 $generated@@123)))
))))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (or ($generated@@120 $generated@@124 ($generated@@99 $generated@@37 $generated@@125) ($generated@@99 $generated@@37 $generated@@126)) (and (< 2 $generated@@31) (and (and (and (or (not (= $generated@@124 $generated@@33)) (not true)) ($generated@@36 $generated@@37 $generated@@124 $generated@@88)) ($generated@@36 $generated@@37 $generated@@125 $generated@@82)) ($generated@@36 $generated@@37 $generated@@126 $generated@@82)))) (= ($generated@@119 $generated@@124 ($generated@@99 $generated@@37 $generated@@125) ($generated@@99 $generated@@37 $generated@@126))  (and (= ($generated@@32 $generated@@124) ($generated@@105 ($generated@@99 $generated@@37 $generated@@125))) (= ($generated@@40 $generated@@124) ($generated@@105 ($generated@@99 $generated@@37 $generated@@126))))))
 :weight 3
 :pattern ( ($generated@@119 $generated@@124 ($generated@@99 $generated@@37 $generated@@125) ($generated@@99 $generated@@37 $generated@@126)))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@45 $generated@@128 ($generated@@102 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@102 $generated@@128 $generated@@127))
)))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@19 ($generated@@129 $generated@@37 $generated@@47 $generated@@15 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@19 ($generated@@45 $generated@@15 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@37 ($generated@@49 $generated@@47 $generated@@48) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@129 $generated@@37 $generated@@47 $generated@@15 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@163 $generated@@83) ($generated@@36 $generated@@37 $generated@@163 $generated@@79))
 :pattern ( ($generated@@36 $generated@@37 $generated@@163 $generated@@83))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@164 $generated@@43) ($generated@@36 $generated@@37 $generated@@164 $generated@@79))
 :pattern ( ($generated@@36 $generated@@37 $generated@@164 $generated@@43))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@165 $generated@@35) ($generated@@36 $generated@@37 $generated@@165 $generated@@83))
 :pattern ( ($generated@@36 $generated@@37 $generated@@165 $generated@@35))
)))
(assert (= ($generated@@30 $generated@@78) $generated@@2))
(assert (= ($generated@@166 $generated@@78) $generated@@10))
(assert (= ($generated@@30 $generated@@82) $generated@@3))
(assert (= ($generated@@166 $generated@@82) $generated@@11))
(assert (= ($generated@@30 $generated@@79) $generated@@4))
(assert (= ($generated@@166 $generated@@79) $generated@@10))
(assert (= ($generated@@30 $generated@@38) $generated@@5))
(assert (= ($generated@@166 $generated@@38) $generated@@12))
(assert (= ($generated@@30 $generated@@43) $generated@@6))
(assert (= ($generated@@166 $generated@@43) $generated@@12))
(assert (= ($generated@@30 $generated@@83) $generated@@7))
(assert (= ($generated@@166 $generated@@83) $generated@@11))
(assert (= ($generated@@30 $generated@@35) $generated@@8))
(assert (= ($generated@@166 $generated@@35) $generated@@13))
(assert (= ($generated@@30 $generated@@88) $generated@@9))
(assert (= ($generated@@166 $generated@@88) $generated@@13))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@167 $generated@@79)  (or (= $generated@@167 $generated@@33) ($generated@@42 ($generated@@34 $generated@@167))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@167 $generated@@79))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@168 $generated@@83)  (or (= $generated@@168 $generated@@33) ($generated@@44 ($generated@@34 $generated@@168))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@168 $generated@@83))
)))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (or ($generated@@120 $generated@@169 $generated@@170 $generated@@171) (and (< 2 $generated@@31) (and (and (and (or (not (= $generated@@169 $generated@@33)) (not true)) ($generated@@36 $generated@@37 $generated@@169 $generated@@88)) ($generated@@36 $generated@@37 $generated@@170 $generated@@82)) ($generated@@36 $generated@@37 $generated@@171 $generated@@82)))) (= ($generated@@119 $generated@@169 $generated@@170 $generated@@171)  (and (= ($generated@@32 $generated@@169) ($generated@@105 $generated@@170)) (= ($generated@@40 $generated@@169) ($generated@@105 $generated@@171)))))
 :pattern ( ($generated@@119 $generated@@169 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@102 $generated@@173 ($generated@@99 $generated@@173 $generated@@172)) ($generated@@99 $generated@@48 ($generated@@102 $generated@@173 $generated@@172)))
 :pattern ( ($generated@@102 $generated@@173 ($generated@@99 $generated@@173 $generated@@172)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! ($generated@@51 $generated@@15 $generated@@175 $generated $generated@@174)
 :pattern ( ($generated@@51 $generated@@15 $generated@@175 $generated $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! ($generated@@36 $generated@@15 $generated@@176 $generated)
 :pattern ( ($generated@@36 $generated@@15 $generated@@176 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@183 true))
(let (($generated@@184  (=> (and (or (not (= ($generated@@32 $generated@@177) ($generated@@105 $generated@@178))) (not true)) (= (ControlFlow 0 5) 2)) $generated@@183)))
(let (($generated@@185  (=> (= ($generated@@32 $generated@@177) ($generated@@105 $generated@@178)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= $generated@@179 $generated@@33)) (not true))) (=> (or (not (= $generated@@179 $generated@@33)) (not true)) (=> (= (ControlFlow 0 3) 2) $generated@@183))))))
(let (($generated@@186  (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (not (= $generated@@178 $generated@@33)) (not true))) (=> (or (not (= $generated@@178 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 6) 3) $generated@@185) (=> (= (ControlFlow 0 6) 5) $generated@@184))))))
(let (($generated@@187 true))
(let (($generated@@188  (=> (= $generated@@180 ($generated@@130 $generated@@33 $generated@@181 $generated@@1 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@187) (=> (= (ControlFlow 0 8) 6) $generated@@186)))))
(let (($generated@@189  (=> (and (and (and ($generated@@50 $generated@@181) ($generated@@182 $generated@@181)) (and (or (not (= $generated@@177 $generated@@33)) (not true)) (and ($generated@@36 $generated@@37 $generated@@177 $generated@@88) ($generated@@51 $generated@@37 $generated@@177 $generated@@88 $generated@@181)))) (and (and ($generated@@36 $generated@@37 $generated@@178 $generated@@82) ($generated@@36 $generated@@37 $generated@@179 $generated@@82)) (and (= 2 $generated@@31) (= (ControlFlow 0 9) 8)))) $generated@@188)))
$generated@@189))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
