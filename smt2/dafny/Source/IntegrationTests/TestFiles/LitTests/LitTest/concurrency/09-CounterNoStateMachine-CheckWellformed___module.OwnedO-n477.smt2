(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@68 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@80 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 (T@U T@U T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@1) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (= ($generated@@29 $generated@@1) $generated@@2))
(assert  (and (and (and (and (and (and (and (= ($generated@@11 $generated@@36) 3) (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@38 $generated@@45 $generated@@46 ($generated@@42 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
))) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@38 $generated@@50 $generated@@51 ($generated@@42 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@38 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))) (= ($generated@@11 $generated@@39) 4)) (= ($generated@@11 $generated@@40) 5)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@11 ($generated@@41 $generated@@56 $generated@@57)) 6))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@43 ($generated@@41 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@41 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@41 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (and (and (and ($generated@@33 $generated@@63) ($generated@@33 $generated@@64)) (and (or (not (= $generated@@65 $generated@@34)) (not true)) ($generated@@35 $generated@@36 $generated@@65 $generated@@37))) (and ($generated@@30 $generated@@63) ($generated@@31 $generated@@63 $generated@@64))) (=> (forall (($generated@@66 T@U) ($generated@@67 T@U) )  (=> (and (or (not (= $generated@@66 $generated@@34)) (not true)) (= $generated@@66 $generated@@65)) (= ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@63 $generated@@66) $generated@@67) ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@64 $generated@@66) $generated@@67)))) (= ($generated@@32 $generated@@62 $generated@@63 $generated@@65) ($generated@@32 $generated@@62 $generated@@64 $generated@@65))))
 :pattern ( ($generated@@30 $generated@@63) ($generated@@31 $generated@@63 $generated@@64) ($generated@@32 $generated@@62 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (and (and (and ($generated@@33 $generated@@70) ($generated@@33 $generated@@71)) (and (or (not (= $generated@@72 $generated@@34)) (not true)) ($generated@@35 $generated@@36 $generated@@72 $generated@@37))) (and ($generated@@30 $generated@@70) ($generated@@31 $generated@@70 $generated@@71))) (=> (forall (($generated@@73 T@U) ($generated@@74 T@U) )  (=> (and (or (not (= $generated@@73 $generated@@34)) (not true)) (= $generated@@73 $generated@@72)) (= ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@70 $generated@@73) $generated@@74) ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@71 $generated@@73) $generated@@74)))) (= ($generated@@68 $generated@@69 $generated@@70 $generated@@72) ($generated@@68 $generated@@69 $generated@@71 $generated@@72))))
 :pattern ( ($generated@@30 $generated@@70) ($generated@@31 $generated@@70 $generated@@71) ($generated@@68 $generated@@69 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and ($generated@@75 $generated@@78 $generated@@76 $generated@@79) ($generated@@33 $generated@@79)) ($generated@@75 $generated@@78 $generated@@77 $generated@@79))
 :pattern ( ($generated@@75 $generated@@78 $generated@@76 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@80 $generated@@36 $generated@@82 $generated@@81 $generated@@83) ($generated@@80 $generated@@36 $generated@@82 $generated@@77 $generated@@83))
 :pattern ( ($generated@@80 $generated@@36 $generated@@82 $generated@@81 $generated@@83))
 :pattern ( ($generated@@80 $generated@@36 $generated@@82 $generated@@77 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@80 $generated@@36 $generated@@84 $generated@@37 $generated@@85) ($generated@@80 $generated@@36 $generated@@84 $generated@@76 $generated@@85))
 :pattern ( ($generated@@80 $generated@@36 $generated@@84 $generated@@37 $generated@@85))
 :pattern ( ($generated@@80 $generated@@36 $generated@@84 $generated@@76 $generated@@85))
)))
(assert (= ($generated@@27 $generated@@86) 0))
(assert (= ($generated@@87 $generated@@7 $generated@@10) $generated@@86))
(assert ($generated@@88 $generated@@86))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@80 $generated@@36 $generated@@90 $generated@@77 $generated@@91)  (or (= $generated@@90 $generated@@34) ($generated@@16 ($generated@@89 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@91 $generated@@90) $generated@@1)))))
 :pattern ( ($generated@@80 $generated@@36 $generated@@90 $generated@@77 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@80 $generated@@36 $generated@@92 $generated@@76 $generated@@93)  (or (= $generated@@92 $generated@@34) ($generated@@16 ($generated@@89 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@93 $generated@@92) $generated@@1)))))
 :pattern ( ($generated@@80 $generated@@36 $generated@@92 $generated@@76 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> ($generated@@31 $generated@@94 $generated@@95) (forall (($generated@@96 T@U) ) (!  (=> ($generated@@16 ($generated@@89 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@94 $generated@@96) $generated@@1))) ($generated@@16 ($generated@@89 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@95 $generated@@96) $generated@@1))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@95 $generated@@96) $generated@@1))
)))
 :pattern ( ($generated@@31 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 ($generated@@89 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@89 $generated@@99 $generated@@98))
)))
(assert ($generated@@88 $generated@@1))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@75 ($generated@@97 $generated@@103 $generated@@100) $generated@@101 $generated@@102) ($generated@@80 $generated@@103 $generated@@100 $generated@@101 $generated@@102))
 :pattern ( ($generated@@75 ($generated@@97 $generated@@103 $generated@@100) $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@31 $generated@@104 $generated@@105) (=> ($generated@@75 $generated@@106 $generated@@107 $generated@@104) ($generated@@75 $generated@@106 $generated@@107 $generated@@105)))
 :pattern ( ($generated@@31 $generated@@104 $generated@@105) ($generated@@75 $generated@@106 $generated@@107 $generated@@104))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (!  (=> ($generated@@31 $generated@@108 $generated@@109) (=> ($generated@@80 $generated@@112 $generated@@110 $generated@@111 $generated@@108) ($generated@@80 $generated@@112 $generated@@110 $generated@@111 $generated@@109)))
 :pattern ( ($generated@@31 $generated@@108 $generated@@109) ($generated@@80 $generated@@112 $generated@@110 $generated@@111 $generated@@108))
)))
(assert  (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@113 $generated@@116 $generated@@117 $generated@@118 ($generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@121 $generated@@122) $generated@@119)
 :weight 0
)) (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@113 $generated@@123 $generated@@124 $generated@@125 ($generated@@115 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@113 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@113 $generated@@132 $generated@@133 $generated@@134 ($generated@@115 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@113 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@16 ($generated@@113 $generated@@36 $generated@@39 $generated@@12 ($generated@@114 $generated@@141 $generated@@142 $generated@@143 $generated@@144) $generated@@145 $generated@@146))  (=> (and (or (not (= $generated@@145 $generated@@141)) (not true)) ($generated@@16 ($generated@@89 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@142 $generated@@145) $generated@@143)))) (= $generated@@145 $generated@@144)))
 :pattern ( ($generated@@113 $generated@@36 $generated@@39 $generated@@12 ($generated@@114 $generated@@141 $generated@@142 $generated@@143 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@147 $generated@@81)  (and ($generated@@35 $generated@@36 $generated@@147 $generated@@77) (or (not (= $generated@@147 $generated@@34)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@147 $generated@@81))
 :pattern ( ($generated@@35 $generated@@36 $generated@@147 $generated@@77))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@148 $generated@@37)  (and ($generated@@35 $generated@@36 $generated@@148 $generated@@76) (or (not (= $generated@@148 $generated@@34)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@148 $generated@@37))
 :pattern ( ($generated@@35 $generated@@36 $generated@@148 $generated@@76))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> ($generated@@80 $generated@@36 $generated@@149 $generated@@76 $generated@@150) ($generated@@80 $generated@@36 $generated@@149 $generated@@77 $generated@@150))
 :pattern ( ($generated@@80 $generated@@36 $generated@@149 $generated@@76 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (or (not (= $generated@@151 $generated@@153)) (not true)) (=> (and ($generated@@31 $generated@@151 $generated@@152) ($generated@@31 $generated@@152 $generated@@153)) ($generated@@31 $generated@@151 $generated@@153)))
 :pattern ( ($generated@@31 $generated@@151 $generated@@152) ($generated@@31 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (and (= ($generated@@154 ($generated@@87 $generated@@155 $generated@@156)) $generated@@155) (= ($generated@@29 ($generated@@87 $generated@@155 $generated@@156)) $generated@@156))
 :pattern ( ($generated@@87 $generated@@155 $generated@@156))
)))
(assert  (=> (<= 2 $generated@@157) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (or ($generated@@158 $generated@@160 $generated@@161 $generated@@162) (and (< 2 $generated@@157) (and (and (and ($generated@@33 $generated@@160) ($generated@@33 $generated@@161)) ($generated@@31 $generated@@160 $generated@@161)) (and (or (not (= $generated@@162 $generated@@34)) (not true)) (and ($generated@@35 $generated@@36 $generated@@162 $generated@@37) ($generated@@80 $generated@@36 $generated@@162 $generated@@37 $generated@@160)))))) (and (=> (= ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@160 $generated@@162) $generated@@86)) ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@161 $generated@@162) $generated@@86))) ($generated@@159 $generated@@160 $generated@@161 $generated@@162)) (= ($generated@@32 $generated@@160 $generated@@161 $generated@@162)  (and (= ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@160 $generated@@162) $generated@@86)) ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@161 $generated@@162) $generated@@86))) ($generated@@68 $generated@@160 $generated@@161 $generated@@162)))))
 :pattern ( ($generated@@32 $generated@@160 $generated@@161 $generated@@162) ($generated@@33 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@89 $generated@@164 ($generated@@97 $generated@@164 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@97 $generated@@164 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and ($generated@@33 $generated@@165) (and (or (not (= $generated@@166 $generated@@34)) (not true)) ($generated@@35 $generated@@36 $generated@@166 $generated@@76))) ($generated@@16 ($generated@@89 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@165 $generated@@166) $generated@@1)))) ($generated@@80 $generated@@36 ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@165 $generated@@166) $generated@@86)) $generated@@81 $generated@@165))
 :pattern ( ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@165 $generated@@166) $generated@@86)))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> ($generated@@35 $generated@@36 $generated@@167 $generated@@76) ($generated@@35 $generated@@36 $generated@@167 $generated@@77))
 :pattern ( ($generated@@35 $generated@@36 $generated@@167 $generated@@76))
)))
(assert (= ($generated@@28 $generated@@81) $generated@@3))
(assert (= ($generated@@168 $generated@@81) $generated@@8))
(assert (= ($generated@@28 $generated@@37) $generated@@4))
(assert (= ($generated@@168 $generated@@37) $generated@@9))
(assert (= ($generated@@28 $generated@@77) $generated@@5))
(assert (= ($generated@@168 $generated@@77) $generated@@8))
(assert (= ($generated@@28 $generated@@76) $generated@@6))
(assert (= ($generated@@168 $generated@@76) $generated@@9))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and ($generated@@33 $generated@@169) (and (or (not (= $generated@@170 $generated@@34)) (not true)) ($generated@@35 $generated@@36 $generated@@170 $generated@@76))) ($generated@@35 $generated@@36 ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@169 $generated@@170) $generated@@86)) $generated@@81))
 :pattern ( ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@169 $generated@@170) $generated@@86)))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@173 $generated@@77)  (or (= $generated@@173 $generated@@34) ($generated@@171 ($generated@@172 $generated@@173))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@173 $generated@@77))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@175 $generated@@76)  (or (= $generated@@175 $generated@@34) ($generated@@174 ($generated@@172 $generated@@175))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@175 $generated@@76))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! ($generated@@80 $generated@@12 $generated@@177 $generated $generated@@176)
 :pattern ( ($generated@@80 $generated@@12 $generated@@177 $generated $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! ($generated@@35 $generated@@12 $generated@@178 $generated)
 :pattern ( ($generated@@35 $generated@@12 $generated@@178 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Bool)
(declare-fun $generated@@183 () Bool)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@187  (=> (= ($generated@@32 $generated@@179 $generated@@180 $generated@@181)  (and (= ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@179 $generated@@181) $generated@@86)) ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@180 $generated@@181) $generated@@86))) ($generated@@68 $generated@@179 $generated@@180 $generated@@181))) (=> (and (=> (= ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@179 $generated@@181) $generated@@86)) ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@180 $generated@@181) $generated@@86))) ($generated@@159 $generated@@179 $generated@@180 $generated@@181)) ($generated@@35 $generated@@12 ($generated@@15 ($generated@@32 $generated@@179 $generated@@180 $generated@@181)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@182) (=> $generated@@182 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@183)))))))
(let (($generated@@188  (=> (or (not (= ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@179 $generated@@181) $generated@@86)) ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@180 $generated@@181) $generated@@86)))) (not true)) (=> (and (= $generated@@183 true) (= (ControlFlow 0 7) 3)) $generated@@187))))
(let (($generated@@189  (=> (and (= ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@179 $generated@@181) $generated@@86)) ($generated@@89 $generated@@36 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@180 $generated@@181) $generated@@86))) ($generated@@75 ($generated@@97 $generated@@36 $generated@@181) $generated@@76 $generated@@180)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@80 $generated@@36 $generated@@181 $generated@@37 $generated@@179)) (=> ($generated@@80 $generated@@36 $generated@@181 $generated@@37 $generated@@179) (=> (and (and (= $generated@@184 (forall (($generated@@190 T@U) ($generated@@191 T@U) )  (=> (and (and (or (not (= $generated@@190 $generated@@34)) (not true)) ($generated@@16 ($generated@@89 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@36 ($generated@@41 $generated@@39 $generated@@40) $generated@@180 $generated@@190) $generated@@1)))) (= $generated@@190 $generated@@181)) ($generated@@16 ($generated@@113 $generated@@36 $generated@@39 $generated@@12 $generated@@185 $generated@@190 $generated@@191))))) ($generated@@159 $generated@@179 $generated@@180 $generated@@181)) (and (= $generated@@183 $generated@@184) (= (ControlFlow 0 5) 3))) $generated@@187))))))
(let (($generated@@192  (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@80 $generated@@36 $generated@@181 $generated@@37 $generated@@179)) (=> ($generated@@80 $generated@@36 $generated@@181 $generated@@37 $generated@@179) (=> (= $generated@@182 ($generated@@16 ($generated@@113 $generated@@36 $generated@@39 $generated@@12 $generated@@185 $generated@@181 $generated@@86))) (and (=> (= (ControlFlow 0 8) 5) $generated@@189) (=> (= (ControlFlow 0 8) 7) $generated@@188)))))))
(let (($generated@@193 true))
(let (($generated@@194  (=> (= $generated@@185 ($generated@@114 $generated@@34 $generated@@180 $generated@@1 $generated@@181)) (and (=> (= (ControlFlow 0 10) 1) $generated@@193) (=> (= (ControlFlow 0 10) 8) $generated@@192)))))
(let (($generated@@195  (=> (and ($generated@@33 $generated@@179) ($generated@@30 $generated@@179)) (=> (and (and (and (or (not (= $generated@@181 $generated@@34)) (not true)) (and ($generated@@35 $generated@@36 $generated@@181 $generated@@37) ($generated@@80 $generated@@36 $generated@@181 $generated@@37 $generated@@186))) (= 2 $generated@@157)) (and (and (= $generated@@186 $generated@@179) (and ($generated@@31 $generated@@186 $generated@@180) ($generated@@33 $generated@@180))) (= (ControlFlow 0 11) 10))) $generated@@194))))
$generated@@195))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
