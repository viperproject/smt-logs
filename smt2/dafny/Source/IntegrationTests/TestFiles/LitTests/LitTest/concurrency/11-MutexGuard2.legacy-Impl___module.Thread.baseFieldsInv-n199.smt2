(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U T@U) Bool)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@T) T@T)
(declare-fun $generated@@62 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@100 () Int)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@110 (T@U T@U) Bool)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@167 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated@@0) 0))
(assert (= ($generated@@30 $generated@@0) $generated@@1))
(assert ($generated@@31 $generated@@32))
(assert (= ($generated@@13 $generated@@34) 3))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@37 $generated@@32)  (or (= $generated@@37 $generated@@35) (= ($generated@@36 $generated@@37) $generated@@32)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 $generated@@32))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (and ($generated@@38 $generated@@41 $generated@@32 $generated@@42) ($generated@@39 $generated@@42)) ($generated@@38 $generated@@41 $generated@@40 $generated@@42))
 :pattern ( ($generated@@38 $generated@@41 $generated@@32 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@43 $generated@@34 $generated@@46 $generated@@44 $generated@@47) ($generated@@43 $generated@@34 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@43 $generated@@34 $generated@@46 $generated@@44 $generated@@47))
 :pattern ( ($generated@@43 $generated@@34 $generated@@46 $generated@@45 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@43 $generated@@34 $generated@@49 $generated@@48 $generated@@50) ($generated@@43 $generated@@34 $generated@@49 $generated@@40 $generated@@50))
 :pattern ( ($generated@@43 $generated@@34 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@43 $generated@@34 $generated@@49 $generated@@40 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@43 $generated@@34 $generated@@52 $generated@@51 $generated@@53) ($generated@@43 $generated@@34 $generated@@52 $generated@@32 $generated@@53))
 :pattern ( ($generated@@43 $generated@@34 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@43 $generated@@34 $generated@@52 $generated@@32 $generated@@53))
)))
(assert (= ($generated@@29 $generated@@54) 0))
(assert (= ($generated@@55 $generated@@6 $generated@@12) $generated@@54))
(assert  (not ($generated@@56 $generated@@54)))
(assert  (and (and (and (and (and (and (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@58 $generated@@65 $generated@@66 ($generated@@62 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@69) $generated@@67)
 :weight 0
)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@74 $generated@@75) (= ($generated@@58 $generated@@70 $generated@@71 ($generated@@62 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@75) ($generated@@58 $generated@@70 $generated@@71 $generated@@73 $generated@@75)))
 :weight 0
))) (= ($generated@@13 $generated@@59) 4)) (= ($generated@@13 $generated@@60) 5)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@13 ($generated@@61 $generated@@76 $generated@@77)) 6))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@63 ($generated@@61 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@61 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@64 ($generated@@61 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@61 $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@43 $generated@@34 $generated@@82 $generated@@45 $generated@@83)  (or (= $generated@@82 $generated@@35) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@83 $generated@@82) $generated@@0)))))
 :pattern ( ($generated@@43 $generated@@34 $generated@@82 $generated@@45 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@43 $generated@@34 $generated@@84 $generated@@40 $generated@@85)  (or (= $generated@@84 $generated@@35) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@85 $generated@@84) $generated@@0)))))
 :pattern ( ($generated@@43 $generated@@34 $generated@@84 $generated@@40 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@43 $generated@@34 $generated@@86 $generated@@32 $generated@@87)  (or (= $generated@@86 $generated@@35) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@87 $generated@@86) $generated@@0)))))
 :pattern ( ($generated@@43 $generated@@34 $generated@@86 $generated@@32 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@88 $generated@@89 $generated@@90) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@89 $generated@@91) $generated@@0))) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@90 $generated@@91) $generated@@0))))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@90 $generated@@91) $generated@@0))
)))
 :pattern ( ($generated@@88 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@95 $generated@@97 $generated@@98) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@96 $generated@@97 $generated@@99) ($generated@@96 $generated@@98 $generated@@99))
 :pattern ( ($generated@@96 $generated@@97 $generated@@99))
 :pattern ( ($generated@@96 $generated@@98 $generated@@99))
)))
 :pattern ( ($generated@@95 $generated@@97 $generated@@98))
)))
(assert  (=> (<= 2 $generated@@100) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@102 $generated@@103 $generated@@104) (and (< 2 $generated@@100) (and ($generated@@39 $generated@@103) (and (or (not (= $generated@@104 $generated@@35)) (not true)) (and ($generated@@33 $generated@@34 $generated@@104 $generated@@51) ($generated@@43 $generated@@34 $generated@@104 $generated@@51 $generated@@103)))))) (= ($generated@@101 $generated@@103 $generated@@104) ($generated@@18 ($generated@@92 $generated@@14 ($generated@@17 true)))))
 :pattern ( ($generated@@101 $generated@@103 $generated@@104) ($generated@@39 $generated@@103))
))))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 ($generated@@57 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@57 $generated@@107 $generated@@106))
)))
(assert (= ($generated@@13 $generated@@108) 7))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@33 $generated@@108 $generated@@111 ($generated@@109 $generated@@112)) (forall (($generated@@113 T@U) ) (!  (=> ($generated@@96 $generated@@111 $generated@@113) ($generated@@110 $generated@@113 $generated@@112))
 :pattern ( ($generated@@96 $generated@@111 $generated@@113))
)))
 :pattern ( ($generated@@33 $generated@@108 $generated@@111 ($generated@@109 $generated@@112)))
)))
(assert ($generated@@56 $generated@@0))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@38 ($generated@@105 $generated@@117 $generated@@114) $generated@@115 $generated@@116) ($generated@@43 $generated@@117 $generated@@114 $generated@@115 $generated@@116))
 :pattern ( ($generated@@38 ($generated@@105 $generated@@117 $generated@@114) $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> ($generated@@88 $generated@@118 $generated@@119) (=> ($generated@@38 $generated@@120 $generated@@121 $generated@@118) ($generated@@38 $generated@@120 $generated@@121 $generated@@119)))
 :pattern ( ($generated@@88 $generated@@118 $generated@@119) ($generated@@38 $generated@@120 $generated@@121 $generated@@118))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@T) ) (!  (=> ($generated@@88 $generated@@122 $generated@@123) (=> ($generated@@43 $generated@@126 $generated@@124 $generated@@125 $generated@@122) ($generated@@43 $generated@@126 $generated@@124 $generated@@125 $generated@@123)))
 :pattern ( ($generated@@88 $generated@@122 $generated@@123) ($generated@@43 $generated@@126 $generated@@124 $generated@@125 $generated@@122))
)))
(assert  (=> (< 1 $generated@@100) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and ($generated@@39 $generated@@128) (and (or (not (= $generated@@129 $generated@@35)) (not true)) ($generated@@33 $generated@@34 $generated@@129 $generated@@40))) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@128 $generated@@129) $generated@@0)))) ($generated@@43 $generated@@34 ($generated@@127 $generated@@129) $generated@@44 $generated@@128))
 :pattern ( ($generated@@127 $generated@@129) ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@128 $generated@@129) $generated@@0)))
))))
(assert  (=> (< 1 $generated@@100) (forall (($generated@@130 T@U) ) (!  (=> (and (or (not (= $generated@@130 $generated@@35)) (not true)) ($generated@@33 $generated@@34 $generated@@130 $generated@@40)) ($generated@@33 $generated@@34 ($generated@@127 $generated@@130) $generated@@44))
 :pattern ( ($generated@@127 $generated@@130))
))))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@110 $generated@@131 $generated@@44) (and (= ($generated@@105 $generated@@34 ($generated@@57 $generated@@34 $generated@@131)) $generated@@131) ($generated@@33 $generated@@34 ($generated@@57 $generated@@34 $generated@@131) $generated@@44)))
 :pattern ( ($generated@@110 $generated@@131 $generated@@44))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@110 $generated@@132 $generated@@51) (and (= ($generated@@105 $generated@@34 ($generated@@57 $generated@@34 $generated@@132)) $generated@@132) ($generated@@33 $generated@@34 ($generated@@57 $generated@@34 $generated@@132) $generated@@51)))
 :pattern ( ($generated@@110 $generated@@132 $generated@@51))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@110 $generated@@133 $generated@@45) (and (= ($generated@@105 $generated@@34 ($generated@@57 $generated@@34 $generated@@133)) $generated@@133) ($generated@@33 $generated@@34 ($generated@@57 $generated@@34 $generated@@133) $generated@@45)))
 :pattern ( ($generated@@110 $generated@@133 $generated@@45))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@110 $generated@@134 $generated@@48) (and (= ($generated@@105 $generated@@34 ($generated@@57 $generated@@34 $generated@@134)) $generated@@134) ($generated@@33 $generated@@34 ($generated@@57 $generated@@34 $generated@@134) $generated@@48)))
 :pattern ( ($generated@@110 $generated@@134 $generated@@48))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> ($generated@@110 $generated@@135 $generated@@40) (and (= ($generated@@105 $generated@@34 ($generated@@57 $generated@@34 $generated@@135)) $generated@@135) ($generated@@33 $generated@@34 ($generated@@57 $generated@@34 $generated@@135) $generated@@40)))
 :pattern ( ($generated@@110 $generated@@135 $generated@@40))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@110 $generated@@136 $generated@@32) (and (= ($generated@@105 $generated@@34 ($generated@@57 $generated@@34 $generated@@136)) $generated@@136) ($generated@@33 $generated@@34 ($generated@@57 $generated@@34 $generated@@136) $generated@@32)))
 :pattern ( ($generated@@110 $generated@@136 $generated@@32))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@137 $generated@@44)  (and ($generated@@33 $generated@@34 $generated@@137 $generated@@45) (or (not (= $generated@@137 $generated@@35)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@137 $generated@@44))
 :pattern ( ($generated@@33 $generated@@34 $generated@@137 $generated@@45))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@138 $generated@@48)  (and ($generated@@33 $generated@@34 $generated@@138 $generated@@40) (or (not (= $generated@@138 $generated@@35)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@138 $generated@@48))
 :pattern ( ($generated@@33 $generated@@34 $generated@@138 $generated@@40))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@139 $generated@@51)  (and ($generated@@33 $generated@@34 $generated@@139 $generated@@32) (or (not (= $generated@@139 $generated@@35)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@139 $generated@@51))
 :pattern ( ($generated@@33 $generated@@34 $generated@@139 $generated@@32))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@43 $generated@@34 $generated@@140 $generated@@32 $generated@@141) ($generated@@43 $generated@@34 $generated@@140 $generated@@40 $generated@@141))
 :pattern ( ($generated@@43 $generated@@34 $generated@@140 $generated@@32 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and ($generated@@39 $generated@@143) ($generated@@39 $generated@@144)) (and (or (not (= $generated@@145 $generated@@35)) (not true)) ($generated@@33 $generated@@34 $generated@@145 $generated@@51))) (and ($generated@@142 $generated@@143) ($generated@@88 $generated@@143 $generated@@144))) (=> (forall (($generated@@146 T@U) ($generated@@147 T@U) )  (=> (and (or (not (= $generated@@146 $generated@@35)) (not true)) (or (= $generated@@146 $generated@@145) (= $generated@@146 ($generated@@127 $generated@@145)))) (= ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@143 $generated@@146) $generated@@147) ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@144 $generated@@146) $generated@@147)))) (= ($generated@@101 $generated@@143 $generated@@145) ($generated@@101 $generated@@144 $generated@@145))))
 :pattern ( ($generated@@142 $generated@@143) ($generated@@88 $generated@@143 $generated@@144) ($generated@@101 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (or (not (= $generated@@148 $generated@@150)) (not true)) (=> (and ($generated@@88 $generated@@148 $generated@@149) ($generated@@88 $generated@@149 $generated@@150)) ($generated@@88 $generated@@148 $generated@@150)))
 :pattern ( ($generated@@88 $generated@@148 $generated@@149) ($generated@@88 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (and (= ($generated@@151 ($generated@@55 $generated@@152 $generated@@153)) $generated@@152) (= ($generated@@30 ($generated@@55 $generated@@152 $generated@@153)) $generated@@153))
 :pattern ( ($generated@@55 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@110 ($generated@@105 $generated@@156 $generated@@154) $generated@@155) ($generated@@33 $generated@@156 $generated@@154 $generated@@155))
 :pattern ( ($generated@@110 ($generated@@105 $generated@@156 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@43 $generated@@108 $generated@@157 ($generated@@109 $generated@@158) $generated@@159) (forall (($generated@@160 T@U) ) (!  (=> ($generated@@96 $generated@@157 $generated@@160) ($generated@@38 $generated@@160 $generated@@158 $generated@@159))
 :pattern ( ($generated@@96 $generated@@157 $generated@@160))
)))
 :pattern ( ($generated@@43 $generated@@108 $generated@@157 ($generated@@109 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@161 ($generated@@109 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@109 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@163 ($generated@@109 $generated@@164)) $generated)
 :pattern ( ($generated@@109 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@57 $generated@@166 ($generated@@105 $generated@@166 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@105 $generated@@166 $generated@@165))
)))
(assert  (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@167 $generated@@170 $generated@@171 $generated@@172 ($generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@175 $generated@@176) $generated@@173)
 :weight 0
)) (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@167 $generated@@177 $generated@@178 $generated@@179 ($generated@@169 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@167 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@167 $generated@@186 $generated@@187 $generated@@188 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@167 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Bool) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@18 ($generated@@167 $generated@@34 $generated@@59 $generated@@14 ($generated@@168 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))  (=> (and (or (not (= $generated@@199 $generated@@195)) (not true)) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@196 $generated@@199) $generated@@197)))) $generated@@198))
 :pattern ( ($generated@@167 $generated@@34 $generated@@59 $generated@@14 ($generated@@168 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@110 $generated@@201 ($generated@@109 $generated@@202)) (and (= ($generated@@105 $generated@@108 ($generated@@57 $generated@@108 $generated@@201)) $generated@@201) ($generated@@33 $generated@@108 ($generated@@57 $generated@@108 $generated@@201) ($generated@@109 $generated@@202))))
 :pattern ( ($generated@@110 $generated@@201 ($generated@@109 $generated@@202)))
)))
(assert (forall (($generated@@203 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@203 $generated@@32) ($generated@@33 $generated@@34 $generated@@203 $generated@@40))
 :pattern ( ($generated@@33 $generated@@34 $generated@@203 $generated@@32))
)))
(assert (forall (($generated@@204 T@U) ) (!  (=> ($generated@@110 $generated@@204 $generated@@32) ($generated@@110 $generated@@204 $generated@@40))
 :pattern ( ($generated@@110 $generated@@204 $generated@@32))
)))
(assert (= ($generated@@163 $generated@@44) $generated@@2))
(assert (= ($generated@@205 $generated@@44) $generated@@9))
(assert (= ($generated@@163 $generated@@51) $generated@@3))
(assert (= ($generated@@205 $generated@@51) $generated@@10))
(assert (= ($generated@@163 $generated@@45) $generated@@4))
(assert (= ($generated@@205 $generated@@45) $generated@@9))
(assert (= ($generated@@163 $generated@@48) $generated@@5))
(assert (= ($generated@@205 $generated@@48) $generated@@11))
(assert (= ($generated@@163 $generated@@40) $generated@@7))
(assert (= ($generated@@205 $generated@@40) $generated@@11))
(assert (= ($generated@@163 $generated@@32) $generated@@8))
(assert (= ($generated@@205 $generated@@32) $generated@@10))
(assert (forall (($generated@@207 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@207 $generated@@45)  (or (= $generated@@207 $generated@@35) ($generated@@206 ($generated@@36 $generated@@207))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@207 $generated@@45))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@208 $generated@@40)  (or (= $generated@@208 $generated@@35) ($generated@@31 ($generated@@36 $generated@@208))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@208 $generated@@40))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (and ($generated@@39 $generated@@209) (and (or (not (= $generated@@210 $generated@@35)) (not true)) ($generated@@33 $generated@@34 $generated@@210 $generated@@45))) ($generated@@18 ($generated@@57 $generated@@14 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@209 $generated@@210) $generated@@0)))) ($generated@@43 $generated@@108 ($generated@@57 $generated@@108 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@209 $generated@@210) $generated@@54)) ($generated@@109 $generated@@48) $generated@@209))
 :pattern ( ($generated@@57 $generated@@108 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@209 $generated@@210) $generated@@54)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@T) ) (! (= ($generated@@105 $generated@@212 ($generated@@92 $generated@@212 $generated@@211)) ($generated@@92 $generated@@60 ($generated@@105 $generated@@212 $generated@@211)))
 :pattern ( ($generated@@105 $generated@@212 ($generated@@92 $generated@@212 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and ($generated@@39 $generated@@213) (and (or (not (= $generated@@214 $generated@@35)) (not true)) ($generated@@33 $generated@@34 $generated@@214 $generated@@45))) ($generated@@33 $generated@@108 ($generated@@57 $generated@@108 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@213 $generated@@214) $generated@@54)) ($generated@@109 $generated@@48)))
 :pattern ( ($generated@@57 $generated@@108 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@213 $generated@@214) $generated@@54)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@220  (=> (and (and (= $generated@@215 ($generated@@168 $generated@@35 $generated@@216 $generated@@0 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@102 $generated@@216 $generated@@217)) (or ($generated@@101 $generated@@216 $generated@@217) ($generated@@18 ($generated@@92 $generated@@14 ($generated@@17 true)))))))
(let (($generated@@221  (=> (and ($generated@@39 $generated@@218) ($generated@@142 $generated@@218)) (=> (and (and (and (and (or (not (= $generated@@217 $generated@@35)) (not true)) (and ($generated@@33 $generated@@34 $generated@@217 $generated@@51) ($generated@@43 $generated@@34 $generated@@217 $generated@@51 $generated@@219))) (= 3 $generated@@100)) (and (= $generated@@219 $generated@@218) (and ($generated@@88 $generated@@219 $generated@@216) ($generated@@39 $generated@@216)))) (and (and (and ($generated@@102 $generated@@219 $generated@@217) (and ($generated@@101 $generated@@219 $generated@@217) ($generated@@18 ($generated@@92 $generated@@14 ($generated@@17 true))))) ($generated@@95 ($generated@@57 $generated@@108 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@219 ($generated@@127 $generated@@217)) $generated@@54)) ($generated@@57 $generated@@108 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@216 ($generated@@127 $generated@@217)) $generated@@54)))) (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (or (not (= $generated@@222 $generated@@35)) (not true)) (=> (= $generated@@222 $generated@@217) (= ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@216 $generated@@222) $generated@@223) ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@219 $generated@@222) $generated@@223))))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@34 ($generated@@61 $generated@@59 $generated@@60) $generated@@216 $generated@@222) $generated@@223))
)) (= (ControlFlow 0 3) 2)))) $generated@@220))))
$generated@@221)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
