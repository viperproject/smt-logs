(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 (T@T) Int)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 (Bool) T@U)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Real) T@U)
(declare-fun $generated@@25 (T@U) Real)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@U T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@104 () Int)
(declare-fun $generated@@105 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@16 $generated@@17) 0) (= ($generated@@16 $generated@@18) 1)) (= ($generated@@16 $generated@@19) 2)) (forall (($generated@@26 Bool) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Int) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Real) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15)
)
(assert (= ($generated@@32 $generated@@3) 0))
(assert (= ($generated@@33 $generated) $generated@@1))
(assert (= ($generated@@33 $generated@@0) $generated@@2))
(assert (= ($generated@@34 $generated@@3) $generated@@4))
(assert  (and (and (and (and (and (and (and (= ($generated@@16 $generated@@41) 3) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@16 $generated@@44) 4)) (= ($generated@@16 $generated@@45) 5)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@16 ($generated@@46 $generated@@61 $generated@@62)) 6))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and (and (and ($generated@@38 $generated@@68) ($generated@@38 $generated@@69)) (and (or (not (= $generated@@70 $generated@@39)) (not true)) ($generated@@40 $generated@@41 $generated@@70 $generated@@42))) (and ($generated@@35 $generated@@68) ($generated@@36 $generated@@68 $generated@@69))) (=> (forall (($generated@@71 T@U) ($generated@@72 T@U) )  (=> (and (or (not (= $generated@@71 $generated@@39)) (not true)) (= $generated@@71 $generated@@70)) (= ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@68 $generated@@71) $generated@@72) ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@69 $generated@@71) $generated@@72)))) (= ($generated@@37 $generated@@67 $generated@@68 $generated@@70) ($generated@@37 $generated@@67 $generated@@69 $generated@@70))))
 :pattern ( ($generated@@35 $generated@@68) ($generated@@36 $generated@@68 $generated@@69) ($generated@@37 $generated@@67 $generated@@69 $generated@@70))
)))
(assert ($generated@@73 $generated@@74))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@76 $generated@@74)  (or (= $generated@@76 $generated@@39) (= ($generated@@75 $generated@@76) $generated@@74)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@76 $generated@@74))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@77 $generated@@41 $generated@@80 $generated@@78 $generated@@81) ($generated@@77 $generated@@41 $generated@@80 $generated@@79 $generated@@81))
 :pattern ( ($generated@@77 $generated@@41 $generated@@80 $generated@@78 $generated@@81))
 :pattern ( ($generated@@77 $generated@@41 $generated@@80 $generated@@79 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@77 $generated@@41 $generated@@84 $generated@@82 $generated@@85) ($generated@@77 $generated@@41 $generated@@84 $generated@@83 $generated@@85))
 :pattern ( ($generated@@77 $generated@@41 $generated@@84 $generated@@82 $generated@@85))
 :pattern ( ($generated@@77 $generated@@41 $generated@@84 $generated@@83 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@77 $generated@@41 $generated@@86 $generated@@42 $generated@@87) ($generated@@77 $generated@@41 $generated@@86 $generated@@74 $generated@@87))
 :pattern ( ($generated@@77 $generated@@41 $generated@@86 $generated@@42 $generated@@87))
 :pattern ( ($generated@@77 $generated@@41 $generated@@86 $generated@@74 $generated@@87))
)))
(assert (= ($generated@@32 $generated@@88) 0))
(assert (= ($generated@@89 $generated@@10 $generated@@15) $generated@@88))
(assert  (not ($generated@@90 $generated@@88)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@77 $generated@@41 $generated@@92 $generated@@79 $generated@@93)  (or (= $generated@@92 $generated@@39) ($generated@@21 ($generated@@91 $generated@@17 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@93 $generated@@92) $generated@@3)))))
 :pattern ( ($generated@@77 $generated@@41 $generated@@92 $generated@@79 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@77 $generated@@41 $generated@@94 $generated@@83 $generated@@95)  (or (= $generated@@94 $generated@@39) ($generated@@21 ($generated@@91 $generated@@17 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@95 $generated@@94) $generated@@3)))))
 :pattern ( ($generated@@77 $generated@@41 $generated@@94 $generated@@83 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@77 $generated@@41 $generated@@96 $generated@@74 $generated@@97)  (or (= $generated@@96 $generated@@39) ($generated@@21 ($generated@@91 $generated@@17 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@97 $generated@@96) $generated@@3)))))
 :pattern ( ($generated@@77 $generated@@41 $generated@@96 $generated@@74 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@36 $generated@@98 $generated@@99) (forall (($generated@@100 T@U) ) (!  (=> ($generated@@21 ($generated@@91 $generated@@17 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@98 $generated@@100) $generated@@3))) ($generated@@21 ($generated@@91 $generated@@17 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@99 $generated@@100) $generated@@3))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@99 $generated@@100) $generated@@3))
)))
 :pattern ( ($generated@@36 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 ($generated@@91 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@91 $generated@@103 $generated@@102))
)))
(assert ($generated@@90 $generated@@3))
(assert  (=> (<= 0 $generated@@104) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or ($generated@@105 $generated@@106 $generated@@107 $generated@@108) (and (< 0 $generated@@104) (and (and (and ($generated@@38 $generated@@106) ($generated@@38 $generated@@107)) ($generated@@36 $generated@@106 $generated@@107)) (and (or (not (= $generated@@108 $generated@@39)) (not true)) (and ($generated@@40 $generated@@41 $generated@@108 $generated@@42) ($generated@@77 $generated@@41 $generated@@108 $generated@@42 $generated@@106)))))) (= ($generated@@37 $generated@@106 $generated@@107 $generated@@108) (= ($generated@@23 ($generated@@91 $generated@@18 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@106 $generated@@108) $generated@@88))) ($generated@@23 ($generated@@91 $generated@@18 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@107 $generated@@108) $generated@@88))))))
 :pattern ( ($generated@@37 $generated@@106 $generated@@107 $generated@@108) ($generated@@38 $generated@@107))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (and (and ($generated@@38 $generated@@109) (and (or (not (= $generated@@110 $generated@@39)) (not true)) (= ($generated@@75 $generated@@110) $generated@@74))) ($generated@@21 ($generated@@91 $generated@@17 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@109 $generated@@110) $generated@@3)))) ($generated@@77 $generated@@18 ($generated@@91 $generated@@18 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@109 $generated@@110) $generated@@88)) $generated@@0 $generated@@109))
 :pattern ( ($generated@@91 $generated@@18 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@109 $generated@@110) $generated@@88)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (!  (=> ($generated@@36 $generated@@111 $generated@@112) (=> ($generated@@77 $generated@@115 $generated@@113 $generated@@114 $generated@@111) ($generated@@77 $generated@@115 $generated@@113 $generated@@114 $generated@@112)))
 :pattern ( ($generated@@36 $generated@@111 $generated@@112) ($generated@@77 $generated@@115 $generated@@113 $generated@@114 $generated@@111))
)))
(assert  (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@116 $generated@@119 $generated@@120 $generated@@121 ($generated@@118 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@124 $generated@@125) $generated@@122)
 :weight 0
)) (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@116 $generated@@126 $generated@@127 $generated@@128 ($generated@@118 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@116 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@116 $generated@@135 $generated@@136 $generated@@137 ($generated@@118 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@116 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@21 ($generated@@116 $generated@@41 $generated@@44 $generated@@17 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))  (=> (and (or (not (= $generated@@148 $generated@@144)) (not true)) ($generated@@21 ($generated@@91 $generated@@17 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@145 $generated@@148) $generated@@146)))) (= $generated@@148 $generated@@147)))
 :pattern ( ($generated@@116 $generated@@41 $generated@@44 $generated@@17 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@150 $generated@@78)  (and ($generated@@40 $generated@@41 $generated@@150 $generated@@79) (or (not (= $generated@@150 $generated@@39)) (not true))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@150 $generated@@78))
 :pattern ( ($generated@@40 $generated@@41 $generated@@150 $generated@@79))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@151 $generated@@82)  (and ($generated@@40 $generated@@41 $generated@@151 $generated@@83) (or (not (= $generated@@151 $generated@@39)) (not true))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@151 $generated@@82))
 :pattern ( ($generated@@40 $generated@@41 $generated@@151 $generated@@83))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@152 $generated@@42)  (and ($generated@@40 $generated@@41 $generated@@152 $generated@@74) (or (not (= $generated@@152 $generated@@39)) (not true))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@152 $generated@@42))
 :pattern ( ($generated@@40 $generated@@41 $generated@@152 $generated@@74))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@77 $generated@@41 $generated@@153 $generated@@83 $generated@@154) ($generated@@77 $generated@@41 $generated@@153 $generated@@79 $generated@@154))
 :pattern ( ($generated@@77 $generated@@41 $generated@@153 $generated@@83 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@77 $generated@@41 $generated@@155 $generated@@74 $generated@@156) ($generated@@77 $generated@@41 $generated@@155 $generated@@83 $generated@@156))
 :pattern ( ($generated@@77 $generated@@41 $generated@@155 $generated@@74 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or (not (= $generated@@157 $generated@@159)) (not true)) (=> (and ($generated@@36 $generated@@157 $generated@@158) ($generated@@36 $generated@@158 $generated@@159)) ($generated@@36 $generated@@157 $generated@@159)))
 :pattern ( ($generated@@36 $generated@@157 $generated@@158) ($generated@@36 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (and (= ($generated@@160 ($generated@@89 $generated@@161 $generated@@162)) $generated@@161) (= ($generated@@34 ($generated@@89 $generated@@161 $generated@@162)) $generated@@162))
 :pattern ( ($generated@@89 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@91 $generated@@164 ($generated@@101 $generated@@164 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@101 $generated@@164 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@38 $generated@@165) (and (or (not (= $generated@@166 $generated@@39)) (not true)) (= ($generated@@75 $generated@@166) $generated@@74))) ($generated@@40 $generated@@18 ($generated@@91 $generated@@18 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@165 $generated@@166) $generated@@88)) $generated@@0))
 :pattern ( ($generated@@91 $generated@@18 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@165 $generated@@166) $generated@@88)))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> ($generated@@40 $generated@@41 $generated@@167 $generated@@83) ($generated@@40 $generated@@41 $generated@@167 $generated@@79))
 :pattern ( ($generated@@40 $generated@@41 $generated@@167 $generated@@83))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> ($generated@@40 $generated@@41 $generated@@168 $generated@@74) ($generated@@40 $generated@@41 $generated@@168 $generated@@83))
 :pattern ( ($generated@@40 $generated@@41 $generated@@168 $generated@@74))
)))
(assert (= ($generated@@33 $generated@@78) $generated@@5))
(assert (= ($generated@@169 $generated@@78) $generated@@12))
(assert (= ($generated@@33 $generated@@82) $generated@@6))
(assert (= ($generated@@169 $generated@@82) $generated@@13))
(assert (= ($generated@@33 $generated@@42) $generated@@7))
(assert (= ($generated@@169 $generated@@42) $generated@@14))
(assert (= ($generated@@33 $generated@@79) $generated@@8))
(assert (= ($generated@@169 $generated@@79) $generated@@12))
(assert (= ($generated@@33 $generated@@83) $generated@@9))
(assert (= ($generated@@169 $generated@@83) $generated@@13))
(assert (= ($generated@@33 $generated@@74) $generated@@11))
(assert (= ($generated@@169 $generated@@74) $generated@@14))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@171 $generated@@79)  (or (= $generated@@171 $generated@@39) ($generated@@170 ($generated@@75 $generated@@171))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@171 $generated@@79))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@172 $generated@@83)  (or (= $generated@@172 $generated@@39) ($generated@@73 ($generated@@75 $generated@@172))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@172 $generated@@83))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! ($generated@@77 $generated@@18 $generated@@174 $generated@@0 $generated@@173)
 :pattern ( ($generated@@77 $generated@@18 $generated@@174 $generated@@0 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! ($generated@@77 $generated@@17 $generated@@176 $generated $generated@@175)
 :pattern ( ($generated@@77 $generated@@17 $generated@@176 $generated $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! ($generated@@40 $generated@@18 $generated@@177 $generated@@0)
 :pattern ( ($generated@@40 $generated@@18 $generated@@177 $generated@@0))
)))
(assert (forall (($generated@@178 T@U) ) (! ($generated@@40 $generated@@17 $generated@@178 $generated)
 :pattern ( ($generated@@40 $generated@@17 $generated@@178 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@185  (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@77 $generated@@41 $generated@@179 $generated@@42 $generated@@180)) (=> ($generated@@77 $generated@@41 $generated@@179 $generated@@42 $generated@@180) (=> (and (and (= $generated@@181 ($generated@@21 ($generated@@116 $generated@@41 $generated@@44 $generated@@17 $generated@@182 $generated@@179 $generated@@88))) (= ($generated@@37 $generated@@180 $generated@@183 $generated@@179) (= ($generated@@23 ($generated@@91 $generated@@18 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@180 $generated@@179) $generated@@88))) ($generated@@23 ($generated@@91 $generated@@18 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@41 ($generated@@46 $generated@@44 $generated@@45) $generated@@183 $generated@@179) $generated@@88)))))) (and ($generated@@40 $generated@@17 ($generated@@20 ($generated@@37 $generated@@180 $generated@@183 $generated@@179)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@181)))))
(let (($generated@@186 true))
(let (($generated@@187  (=> (= $generated@@182 ($generated@@117 $generated@@39 $generated@@183 $generated@@3 $generated@@179)) (and (=> (= (ControlFlow 0 5) 1) $generated@@186) (=> (= (ControlFlow 0 5) 3) $generated@@185)))))
(let (($generated@@188  (=> (and ($generated@@38 $generated@@180) ($generated@@35 $generated@@180)) (=> (and (and (and (or (not (= $generated@@179 $generated@@39)) (not true)) (and ($generated@@40 $generated@@41 $generated@@179 $generated@@42) ($generated@@77 $generated@@41 $generated@@179 $generated@@42 $generated@@184))) (= 0 $generated@@104)) (and (and (= $generated@@184 $generated@@180) (and ($generated@@36 $generated@@184 $generated@@183) ($generated@@38 $generated@@183))) (= (ControlFlow 0 6) 5))) $generated@@187))))
$generated@@188)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
