(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@87 () T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@188 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@31 $generated@@2) 0))
(assert (= ($generated@@32 $generated) $generated@@0))
(assert (= ($generated@@33 $generated@@2) $generated@@3))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@40) 3) (= ($generated@@15 $generated@@47) 4)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@48 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@48 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@48 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@15 $generated@@49) 5)) (= ($generated@@15 $generated@@50) 6)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@15 ($generated@@51 $generated@@70 $generated@@71)) 7))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@51 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@51 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@51 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@51 $generated@@74 $generated@@75))
))))
(assert  (=> (<= 2 $generated@@34) (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@37 $generated@@76 $generated@@77) (and (< 2 $generated@@34) (and ($generated@@36 $generated@@76) (and (or (not (= $generated@@77 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@77 $generated@@41) ($generated@@42 $generated@@40 $generated@@77 $generated@@41 $generated@@76)))))) (and (forall (($generated@@78 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@78 $generated@@54) (=> ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@52)) ($generated@@53 $generated@@40 $generated@@78)) (=> (= ($generated@@44 $generated@@78) $generated@@77) ($generated@@55 $generated@@78))))
 :pattern ( ($generated@@43 $generated@@78))
 :pattern ( ($generated@@44 $generated@@78))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@52)) ($generated@@53 $generated@@40 $generated@@78)))
)) (= ($generated@@35 $generated@@76 $generated@@77) (forall (($generated@@79 T@U) ) (!  (=> (and ($generated@@39 $generated@@40 $generated@@79 $generated@@54) ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@52)) ($generated@@53 $generated@@40 $generated@@79))) (and (= ($generated@@44 $generated@@79) $generated@@77) (or (not (= ($generated@@43 $generated@@79) $generated@@77)) (not true))))
 :pattern ( ($generated@@43 $generated@@79))
 :pattern ( ($generated@@44 $generated@@79))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@52)) ($generated@@53 $generated@@40 $generated@@79)))
)))))
 :pattern ( ($generated@@35 $generated@@76 $generated@@77) ($generated@@36 $generated@@76))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@82 $generated@@80 $generated@@83) ($generated@@42 $generated@@40 $generated@@82 $generated@@81 $generated@@83))
 :pattern ( ($generated@@42 $generated@@40 $generated@@82 $generated@@80 $generated@@83))
 :pattern ( ($generated@@42 $generated@@40 $generated@@82 $generated@@81 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@85 $generated@@41 $generated@@86) ($generated@@42 $generated@@40 $generated@@85 $generated@@84 $generated@@86))
 :pattern ( ($generated@@42 $generated@@40 $generated@@85 $generated@@41 $generated@@86))
 :pattern ( ($generated@@42 $generated@@40 $generated@@85 $generated@@84 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@88 $generated@@54 $generated@@89) ($generated@@42 $generated@@40 $generated@@88 $generated@@87 $generated@@89))
 :pattern ( ($generated@@42 $generated@@40 $generated@@88 $generated@@54 $generated@@89))
 :pattern ( ($generated@@42 $generated@@40 $generated@@88 $generated@@87 $generated@@89))
)))
(assert (= ($generated@@31 $generated@@52) 0))
(assert (= ($generated@@90 $generated@@6 $generated@@14) $generated@@52))
(assert ($generated@@91 $generated@@52))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@92 $generated@@81 $generated@@93)  (or (= $generated@@92 $generated@@38) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@93 $generated@@92) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@92 $generated@@81 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@94 $generated@@84 $generated@@95)  (or (= $generated@@94 $generated@@38) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@95 $generated@@94) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@94 $generated@@84 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@96 $generated@@87 $generated@@97)  (or (= $generated@@96 $generated@@38) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@97 $generated@@96) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@96 $generated@@87 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 $generated@@99) $generated@@99)
 :pattern ( ($generated@@98 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@53 $generated@@102 ($generated@@46 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@46 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@39 $generated@@47 $generated@@105 ($generated@@103 $generated@@106)) (forall (($generated@@107 T@U) ) (!  (=> ($generated@@45 $generated@@105 $generated@@107) ($generated@@104 $generated@@107 $generated@@106))
 :pattern ( ($generated@@45 $generated@@105 $generated@@107))
)))
 :pattern ( ($generated@@39 $generated@@47 $generated@@105 ($generated@@103 $generated@@106)))
)))
(assert  (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@108 $generated@@111 $generated@@112 $generated@@113 ($generated@@110 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@108 $generated@@118 $generated@@119 $generated@@120 ($generated@@110 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@108 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@108 $generated@@127 $generated@@128 $generated@@129 ($generated@@110 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@108 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@20 ($generated@@108 $generated@@40 $generated@@49 $generated@@16 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))  (=> (and (or (not (= $generated@@141 $generated@@136)) (not true)) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@137 $generated@@141) $generated@@138)))) (or (= $generated@@141 $generated@@139) ($generated@@45 $generated@@140 ($generated@@53 $generated@@40 $generated@@141)))))
 :pattern ( ($generated@@108 $generated@@40 $generated@@49 $generated@@16 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))
)))
(assert ($generated@@91 $generated@@2))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@143 ($generated@@53 $generated@@147 $generated@@144) $generated@@145 $generated@@146) ($generated@@42 $generated@@147 $generated@@144 $generated@@145 $generated@@146))
 :pattern ( ($generated@@143 ($generated@@53 $generated@@147 $generated@@144) $generated@@145 $generated@@146))
)))
(assert  (=> (< 1 $generated@@34) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@148) (and (or (not (= $generated@@149 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@149 $generated@@87))) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@148 $generated@@149) $generated@@2)))) ($generated@@42 $generated@@40 ($generated@@44 $generated@@149) $generated@@41 $generated@@148))
 :pattern ( ($generated@@44 $generated@@149) ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@148 $generated@@149) $generated@@2)))
))))
(assert  (=> (< 1 $generated@@34) (forall (($generated@@150 T@U) ) (!  (=> (and (or (not (= $generated@@150 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@150 $generated@@87)) ($generated@@39 $generated@@40 ($generated@@44 $generated@@150) $generated@@41))
 :pattern ( ($generated@@44 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ) (!  (=> ($generated@@104 $generated@@151 $generated@@81) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@151)) $generated@@151) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@151) $generated@@81)))
 :pattern ( ($generated@@104 $generated@@151 $generated@@81))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@104 $generated@@152 $generated@@80) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@152)) $generated@@152) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@152) $generated@@80)))
 :pattern ( ($generated@@104 $generated@@152 $generated@@80))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@104 $generated@@153 $generated@@84) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@153)) $generated@@153) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@153) $generated@@84)))
 :pattern ( ($generated@@104 $generated@@153 $generated@@84))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@104 $generated@@154 $generated@@54) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@154)) $generated@@154) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@154) $generated@@54)))
 :pattern ( ($generated@@104 $generated@@154 $generated@@54))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> ($generated@@104 $generated@@155 $generated@@41) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@155)) $generated@@155) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@155) $generated@@41)))
 :pattern ( ($generated@@104 $generated@@155 $generated@@41))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> ($generated@@104 $generated@@156 $generated@@87) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@156)) $generated@@156) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@156) $generated@@87)))
 :pattern ( ($generated@@104 $generated@@156 $generated@@87))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@157 $generated@@80)  (and ($generated@@39 $generated@@40 $generated@@157 $generated@@81) (or (not (= $generated@@157 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@157 $generated@@80))
 :pattern ( ($generated@@39 $generated@@40 $generated@@157 $generated@@81))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@158 $generated@@41)  (and ($generated@@39 $generated@@40 $generated@@158 $generated@@84) (or (not (= $generated@@158 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@158 $generated@@41))
 :pattern ( ($generated@@39 $generated@@40 $generated@@158 $generated@@84))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@159 $generated@@54)  (and ($generated@@39 $generated@@40 $generated@@159 $generated@@87) (or (not (= $generated@@159 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@159 $generated@@54))
 :pattern ( ($generated@@39 $generated@@40 $generated@@159 $generated@@87))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@160 T@U) ) (!  (=> (or ($generated@@55 $generated@@160) (and (< 0 $generated@@34) ($generated@@39 $generated@@40 $generated@@160 $generated@@80))) (= ($generated@@43 $generated@@160) $generated@@160))
 :pattern ( ($generated@@43 $generated@@160))
))))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@161 T@U) ) (!  (=> (or ($generated@@55 $generated@@161) (and (< 0 $generated@@34) ($generated@@39 $generated@@40 $generated@@161 $generated@@80))) ($generated@@39 $generated@@40 ($generated@@43 $generated@@161) $generated@@80))
 :pattern ( ($generated@@43 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (and (= ($generated@@162 ($generated@@90 $generated@@163 $generated@@164)) $generated@@163) (= ($generated@@33 ($generated@@90 $generated@@163 $generated@@164)) $generated@@164))
 :pattern ( ($generated@@90 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> ($generated@@104 $generated@@165 $generated) (and (= ($generated@@53 $generated@@16 ($generated@@46 $generated@@16 $generated@@165)) $generated@@165) ($generated@@39 $generated@@16 ($generated@@46 $generated@@16 $generated@@165) $generated)))
 :pattern ( ($generated@@104 $generated@@165 $generated))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@104 ($generated@@53 $generated@@168 $generated@@166) $generated@@167) ($generated@@39 $generated@@168 $generated@@166 $generated@@167))
 :pattern ( ($generated@@104 ($generated@@53 $generated@@168 $generated@@166) $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@42 $generated@@47 $generated@@169 ($generated@@103 $generated@@170) $generated@@171) (forall (($generated@@172 T@U) ) (!  (=> ($generated@@45 $generated@@169 $generated@@172) ($generated@@143 $generated@@172 $generated@@170 $generated@@171))
 :pattern ( ($generated@@45 $generated@@169 $generated@@172))
)))
 :pattern ( ($generated@@42 $generated@@47 $generated@@169 ($generated@@103 $generated@@170) $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! ($generated@@39 $generated@@40 $generated@@173 $generated@@81)
 :pattern ( ($generated@@39 $generated@@40 $generated@@173 $generated@@81))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (or ($generated@@55 $generated@@175) (and (< 0 $generated@@34) (and ($generated@@39 $generated@@40 $generated@@175 $generated@@80) ($generated@@42 $generated@@40 $generated@@175 $generated@@80 $generated@@174)))) ($generated@@36 $generated@@174)) ($generated@@42 $generated@@40 ($generated@@43 $generated@@175) $generated@@80 $generated@@174))
 :pattern ( ($generated@@42 $generated@@40 ($generated@@43 $generated@@175) $generated@@80 $generated@@174))
))))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@176 ($generated@@103 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@103 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@32 ($generated@@103 $generated@@178)) $generated@@1)
 :pattern ( ($generated@@103 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@46 $generated@@180 ($generated@@53 $generated@@180 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@53 $generated@@180 $generated@@179))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@181 T@U) ) (!  (=> (or ($generated@@55 ($generated@@98 $generated@@40 $generated@@181)) (and (< 0 $generated@@34) ($generated@@39 $generated@@40 $generated@@181 $generated@@80))) (= ($generated@@43 ($generated@@98 $generated@@40 $generated@@181)) ($generated@@98 $generated@@40 $generated@@181)))
 :weight 3
 :pattern ( ($generated@@43 ($generated@@98 $generated@@40 $generated@@181)))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@104 $generated@@182 ($generated@@103 $generated@@183)) (and (= ($generated@@53 $generated@@47 ($generated@@46 $generated@@47 $generated@@182)) $generated@@182) ($generated@@39 $generated@@47 ($generated@@46 $generated@@47 $generated@@182) ($generated@@103 $generated@@183))))
 :pattern ( ($generated@@104 $generated@@182 ($generated@@103 $generated@@183)))
)))
(assert (= ($generated@@32 $generated@@81) $generated@@4))
(assert (= ($generated@@184 $generated@@81) $generated@@11))
(assert (= ($generated@@32 $generated@@80) $generated@@5))
(assert (= ($generated@@184 $generated@@80) $generated@@11))
(assert (= ($generated@@32 $generated@@84) $generated@@7))
(assert (= ($generated@@184 $generated@@84) $generated@@12))
(assert (= ($generated@@32 $generated@@54) $generated@@8))
(assert (= ($generated@@184 $generated@@54) $generated@@13))
(assert (= ($generated@@32 $generated@@41) $generated@@9))
(assert (= ($generated@@184 $generated@@41) $generated@@12))
(assert (= ($generated@@32 $generated@@87) $generated@@10))
(assert (= ($generated@@184 $generated@@87) $generated@@13))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@187 $generated@@84)  (or (= $generated@@187 $generated@@38) ($generated@@185 ($generated@@186 $generated@@187))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@187 $generated@@84))
)))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@189 $generated@@87)  (or (= $generated@@189 $generated@@38) ($generated@@188 ($generated@@186 $generated@@189))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@189 $generated@@87))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@190) (and (or (not (= $generated@@191 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@191 $generated@@84))) ($generated@@20 ($generated@@46 $generated@@16 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@190 $generated@@191) $generated@@2)))) ($generated@@42 $generated@@47 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@190 $generated@@191) $generated@@52)) ($generated@@103 $generated@@54) $generated@@190))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@190 $generated@@191) $generated@@52)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@53 $generated@@193 ($generated@@98 $generated@@193 $generated@@192)) ($generated@@98 $generated@@50 ($generated@@53 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@53 $generated@@193 ($generated@@98 $generated@@193 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and ($generated@@36 $generated@@194) (and (or (not (= $generated@@195 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@195 $generated@@84))) ($generated@@39 $generated@@47 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@194 $generated@@195) $generated@@52)) ($generated@@103 $generated@@54)))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@194 $generated@@195) $generated@@52)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! ($generated@@42 $generated@@16 $generated@@197 $generated $generated@@196)
 :pattern ( ($generated@@42 $generated@@16 $generated@@197 $generated $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! ($generated@@39 $generated@@16 $generated@@198 $generated)
 :pattern ( ($generated@@39 $generated@@16 $generated@@198 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Bool)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Bool)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Bool)
(declare-fun $generated@@206 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@207  (=> (and (and (= ($generated@@35 $generated@@199 $generated@@200) (forall (($generated@@208 T@U) ) (!  (=> (and ($generated@@39 $generated@@40 $generated@@208 $generated@@54) ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@199 $generated@@200) $generated@@52)) ($generated@@53 $generated@@40 $generated@@208))) (and (= ($generated@@44 $generated@@208) $generated@@200) (or (not (= ($generated@@43 $generated@@208) $generated@@200)) (not true))))
 :pattern ( ($generated@@43 $generated@@208))
 :pattern ( ($generated@@44 $generated@@208))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@199 $generated@@200) $generated@@52)) ($generated@@53 $generated@@40 $generated@@208)))
))) (forall (($generated@@209 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@209 $generated@@54) (=> ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@199 $generated@@200) $generated@@52)) ($generated@@53 $generated@@40 $generated@@209)) (=> (= ($generated@@44 $generated@@209) $generated@@200) ($generated@@55 $generated@@209))))
 :pattern ( ($generated@@43 $generated@@209))
 :pattern ( ($generated@@44 $generated@@209))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@199 $generated@@200) $generated@@52)) ($generated@@53 $generated@@40 $generated@@209)))
))) (and ($generated@@39 $generated@@16 ($generated@@19 ($generated@@35 $generated@@199 $generated@@200)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@201)))
(let (($generated@@210  (=> (or (not (= ($generated@@44 $generated@@202) $generated@@200)) (not true)) (=> (and (= $generated@@201 $generated@@203) (= (ControlFlow 0 7) 3)) $generated@@207))))
(let (($generated@@211  (=> (= ($generated@@44 $generated@@202) $generated@@200) (=> (and (and ($generated@@42 $generated@@40 $generated@@202 $generated@@80 $generated@@199) ($generated@@55 $generated@@202)) (and (= $generated@@201 $generated@@203) (= (ControlFlow 0 6) 3))) $generated@@207))))
(let (($generated@@212  (=> ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@199 $generated@@200) $generated@@52)) ($generated@@53 $generated@@40 $generated@@202)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= $generated@@202 $generated@@38)) (not true))) (=> (or (not (= $generated@@202 $generated@@38)) (not true)) (and (=> (= (ControlFlow 0 8) 6) $generated@@211) (=> (= (ControlFlow 0 8) 7) $generated@@210)))))))
(let (($generated@@213  (=> (not ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@199 $generated@@200) $generated@@52)) ($generated@@53 $generated@@40 $generated@@202))) (=> (and (= $generated@@201 $generated@@203) (= (ControlFlow 0 5) 3)) $generated@@207))))
(let (($generated@@214  (=> (and (and ($generated@@39 $generated@@40 $generated@@202 $generated@@54) ($generated@@42 $generated@@40 $generated@@202 $generated@@54 $generated@@199)) (= $generated@@203 ($generated@@20 ($generated@@108 $generated@@40 $generated@@49 $generated@@16 $generated@@204 $generated@@200 $generated@@52)))) (and (=> (= (ControlFlow 0 10) 8) $generated@@212) (=> (= (ControlFlow 0 10) 5) $generated@@213)))))
(let (($generated@@215  (=> (not (and ($generated@@39 $generated@@40 $generated@@202 $generated@@54) ($generated@@42 $generated@@40 $generated@@202 $generated@@54 $generated@@199))) (=> (and (= $generated@@201 true) (= (ControlFlow 0 4) 3)) $generated@@207))))
(let (($generated@@216 true))
(let (($generated@@217  (=> (and (= $generated@@204 ($generated@@109 $generated@@38 $generated@@199 $generated@@2 $generated@@200 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@199 $generated@@200) $generated@@52)))) (= $generated@@205 ($generated@@20 ($generated@@108 $generated@@40 $generated@@49 $generated@@16 $generated@@204 $generated@@200 $generated@@52)))) (and (=> (= (ControlFlow 0 11) (- 0 12)) $generated@@205) (=> $generated@@205 (and (and (=> (= (ControlFlow 0 11) 1) $generated@@216) (=> (= (ControlFlow 0 11) 10) $generated@@214)) (=> (= (ControlFlow 0 11) 4) $generated@@215)))))))
(let (($generated@@218  (=> (and ($generated@@36 $generated@@199) ($generated@@206 $generated@@199)) (=> (and (and (or (not (= $generated@@200 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@200 $generated@@41) ($generated@@42 $generated@@40 $generated@@200 $generated@@41 $generated@@199))) (and (= 2 $generated@@34) (= (ControlFlow 0 13) 11))) $generated@@217))))
$generated@@218)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
