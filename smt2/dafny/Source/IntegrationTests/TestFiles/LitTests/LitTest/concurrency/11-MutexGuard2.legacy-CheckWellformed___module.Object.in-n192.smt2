(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@T T@T) T@T)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U T@U) Bool)
(declare-fun $generated@@72 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@129 () Int)
(declare-fun $generated@@130 (T@U T@U T@U) Bool)
(declare-fun $generated@@134 (T@U T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ) (!  (not ($generated@@19 $generated@@20 $generated@@21))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21))
)))
(assert (= ($generated@@3 $generated@@23) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@26 $generated@@24 $generated@@27) ($generated@@22 $generated@@23 $generated@@26 $generated@@25 $generated@@27))
 :pattern ( ($generated@@22 $generated@@23 $generated@@26 $generated@@24 $generated@@27))
 :pattern ( ($generated@@22 $generated@@23 $generated@@26 $generated@@25 $generated@@27))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@35 $generated@@42 $generated@@43 ($generated@@39 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@46) $generated@@44)
 :weight 0
)) (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (or (= $generated@@51 $generated@@52) (= ($generated@@35 $generated@@47 $generated@@48 ($generated@@39 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@52) ($generated@@35 $generated@@47 $generated@@48 $generated@@50 $generated@@52)))
 :weight 0
))) (= ($generated@@3 $generated@@36) 4)) (= ($generated@@3 $generated@@37) 5)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (= ($generated@@3 ($generated@@38 $generated@@53 $generated@@54)) 6))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@40 ($generated@@38 $generated@@55 $generated@@56)) $generated@@55)
 :pattern ( ($generated@@38 $generated@@55 $generated@@56))
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@41 ($generated@@38 $generated@@57 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@38 $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and (and (and ($generated@@31 $generated@@60) ($generated@@31 $generated@@61)) (and (or (not (= $generated@@62 $generated@@32)) (not true)) (and ($generated@@33 $generated@@23 $generated@@62 $generated@@24) ($generated@@22 $generated@@23 $generated@@62 $generated@@24 $generated@@60)))) (and ($generated@@28 $generated@@60) ($generated@@29 $generated@@60 $generated@@61))) (=> (forall (($generated@@63 T@U) ($generated@@64 T@U) )  (=> (and (or (not (= $generated@@63 $generated@@32)) (not true)) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@60 $generated@@63) $generated)))) (= ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@60 $generated@@63) $generated@@64) ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@61 $generated@@63) $generated@@64)))) (= ($generated@@30 $generated@@59 $generated@@60 $generated@@62) ($generated@@30 $generated@@59 $generated@@61 $generated@@62))))
 :pattern ( ($generated@@28 $generated@@60) ($generated@@29 $generated@@60 $generated@@61) ($generated@@30 $generated@@59 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (and (and (and ($generated@@31 $generated@@67) ($generated@@31 $generated@@68)) (and (or (not (= $generated@@69 $generated@@32)) (not true)) (and ($generated@@33 $generated@@23 $generated@@69 $generated@@24) ($generated@@22 $generated@@23 $generated@@69 $generated@@24 $generated@@67)))) (and ($generated@@28 $generated@@67) ($generated@@29 $generated@@67 $generated@@68))) (=> (forall (($generated@@70 T@U) ($generated@@71 T@U) )  (=> (and (or (not (= $generated@@70 $generated@@32)) (not true)) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@67 $generated@@70) $generated)))) (= ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@67 $generated@@70) $generated@@71) ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@68 $generated@@70) $generated@@71)))) (= ($generated@@65 $generated@@66 $generated@@67 $generated@@69) ($generated@@65 $generated@@66 $generated@@68 $generated@@69))))
 :pattern ( ($generated@@28 $generated@@67) ($generated@@29 $generated@@67 $generated@@68) ($generated@@65 $generated@@66 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (and (and (and ($generated@@31 $generated@@74) ($generated@@31 $generated@@75)) (and (or (not (= $generated@@76 $generated@@32)) (not true)) (and ($generated@@33 $generated@@23 $generated@@76 $generated@@24) ($generated@@22 $generated@@23 $generated@@76 $generated@@24 $generated@@74)))) (and ($generated@@28 $generated@@74) ($generated@@29 $generated@@74 $generated@@75))) (=> (forall (($generated@@77 T@U) ($generated@@78 T@U) )  (=> (and (or (not (= $generated@@77 $generated@@32)) (not true)) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@74 $generated@@77) $generated)))) (= ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@74 $generated@@77) $generated@@78) ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@75 $generated@@77) $generated@@78)))) (= ($generated@@72 $generated@@73 $generated@@74 $generated@@76) ($generated@@72 $generated@@73 $generated@@75 $generated@@76))))
 :pattern ( ($generated@@28 $generated@@74) ($generated@@29 $generated@@74 $generated@@75) ($generated@@72 $generated@@73 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@79 $generated@@25 $generated@@80)  (or (= $generated@@79 $generated@@32) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@80 $generated@@79) $generated)))))
 :pattern ( ($generated@@22 $generated@@23 $generated@@79 $generated@@25 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@29 $generated@@81 $generated@@82) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@8 ($generated@@34 $generated@@4 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@81 $generated@@83) $generated))) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@82 $generated@@83) $generated))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@82 $generated@@83) $generated))
)))
 :pattern ( ($generated@@29 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@19 $generated@@88 $generated@@90) ($generated@@19 $generated@@89 $generated@@90))
 :pattern ( ($generated@@19 $generated@@88 $generated@@90))
 :pattern ( ($generated@@19 $generated@@89 $generated@@90))
)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@34 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@34 $generated@@93 $generated@@92))
)))
(assert  (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@94 $generated@@97 $generated@@98 $generated@@99 ($generated@@96 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@102 $generated@@103) $generated@@100)
 :weight 0
)) (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@94 $generated@@104 $generated@@105 $generated@@106 ($generated@@96 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@111 $generated@@112) ($generated@@94 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@111 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@94 $generated@@113 $generated@@114 $generated@@115 ($generated@@96 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@94 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)))))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@8 ($generated@@94 $generated@@23 $generated@@36 $generated@@4 ($generated@@95 $generated@@122 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))  (=> (and (or (not (= $generated@@127 $generated@@122)) (not true)) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@123 $generated@@127) $generated@@124)))) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@23 ($generated@@38 $generated@@36 $generated@@37) $generated@@125 $generated@@127) $generated@@126)))))
 :pattern ( ($generated@@94 $generated@@23 $generated@@36 $generated@@4 ($generated@@95 $generated@@122 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))
)))
(assert  (=> (<= 11 $generated@@129) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or ($generated@@130 $generated@@131 $generated@@132 $generated@@133) (and (< 11 $generated@@129) (and (and (and ($generated@@31 $generated@@131) ($generated@@31 $generated@@132)) ($generated@@29 $generated@@131 $generated@@132)) (and (or (not (= $generated@@133 $generated@@32)) (not true)) (and ($generated@@33 $generated@@23 $generated@@133 $generated@@24) ($generated@@22 $generated@@23 $generated@@133 $generated@@24 $generated@@131)))))) (=> ($generated@@72 $generated@@131 $generated@@132 $generated@@133) (and ($generated@@30 $generated@@131 $generated@@132 $generated@@133) ($generated@@65 $generated@@131 $generated@@132 $generated@@133))))
 :pattern ( ($generated@@72 $generated@@131 $generated@@132 $generated@@133))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@134 ($generated@@91 $generated@@138 $generated@@135) $generated@@136 $generated@@137) ($generated@@22 $generated@@138 $generated@@135 $generated@@136 $generated@@137))
 :pattern ( ($generated@@134 ($generated@@91 $generated@@138 $generated@@135) $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@29 $generated@@139 $generated@@140) (=> ($generated@@134 $generated@@141 $generated@@142 $generated@@139) ($generated@@134 $generated@@141 $generated@@142 $generated@@140)))
 :pattern ( ($generated@@29 $generated@@139 $generated@@140) ($generated@@134 $generated@@141 $generated@@142 $generated@@139))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@T) ) (!  (=> ($generated@@29 $generated@@143 $generated@@144) (=> ($generated@@22 $generated@@147 $generated@@145 $generated@@146 $generated@@143) ($generated@@22 $generated@@147 $generated@@145 $generated@@146 $generated@@144)))
 :pattern ( ($generated@@29 $generated@@143 $generated@@144) ($generated@@22 $generated@@147 $generated@@145 $generated@@146 $generated@@143))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@33 $generated@@23 $generated@@148 $generated@@24)  (and ($generated@@33 $generated@@23 $generated@@148 $generated@@25) (or (not (= $generated@@148 $generated@@32)) (not true))))
 :pattern ( ($generated@@33 $generated@@23 $generated@@148 $generated@@24))
 :pattern ( ($generated@@33 $generated@@23 $generated@@148 $generated@@25))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (or (not (= $generated@@149 $generated@@151)) (not true)) (=> (and ($generated@@29 $generated@@149 $generated@@150) ($generated@@29 $generated@@150 $generated@@151)) ($generated@@29 $generated@@149 $generated@@151)))
 :pattern ( ($generated@@29 $generated@@149 $generated@@150) ($generated@@29 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@34 $generated@@153 ($generated@@91 $generated@@153 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@91 $generated@@153 $generated@@152))
)))
(assert (= ($generated@@154 $generated@@24) $generated@@0))
(assert (= ($generated@@155 $generated@@24) $generated@@2))
(assert (= ($generated@@154 $generated@@25) $generated@@1))
(assert (= ($generated@@155 $generated@@25) $generated@@2))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@33 $generated@@23 $generated@@158 $generated@@25)  (or (= $generated@@158 $generated@@32) ($generated@@156 ($generated@@157 $generated@@158))))
 :pattern ( ($generated@@33 $generated@@23 $generated@@158 $generated@@25))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@91 $generated@@160 ($generated@@84 $generated@@160 $generated@@159)) ($generated@@84 $generated@@37 ($generated@@91 $generated@@160 $generated@@159)))
 :pattern ( ($generated@@91 $generated@@160 ($generated@@84 $generated@@160 $generated@@159)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 (T@U T@U T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(assert (= ($generated@@3 $generated@@164) 7))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@169 true))
(let (($generated@@170  (=> (and (=> ($generated@@72 $generated@@161 $generated@@162 $generated@@163) (and ($generated@@30 $generated@@161 $generated@@162 $generated@@163) ($generated@@65 $generated@@161 $generated@@162 $generated@@163))) (= (ControlFlow 0 8) 2)) $generated@@169)))
(let (($generated@@171  (=> ($generated@@134 ($generated@@91 $generated@@23 $generated@@163) $generated@@25 $generated@@162) (and (=> (= (ControlFlow 0 3) (- 0 7)) ($generated@@22 $generated@@23 $generated@@163 $generated@@24 $generated@@161)) (=> ($generated@@22 $generated@@23 $generated@@163 $generated@@24 $generated@@161) (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (= $generated@@163 $generated@@163) (and ($generated@@87 ($generated@@84 $generated@@164 $generated@@20) ($generated@@84 $generated@@164 $generated@@20)) (not ($generated@@87 ($generated@@84 $generated@@164 $generated@@20) ($generated@@84 $generated@@164 $generated@@20)))))) (=> (or (= $generated@@163 $generated@@163) (and ($generated@@87 ($generated@@84 $generated@@164 $generated@@20) ($generated@@84 $generated@@164 $generated@@20)) (not ($generated@@87 ($generated@@84 $generated@@164 $generated@@20) ($generated@@84 $generated@@164 $generated@@20))))) (=> (or (= $generated@@163 $generated@@163) ($generated@@130 $generated@@161 $generated@@162 $generated@@163)) (=> (and ($generated@@72 $generated@@161 $generated@@162 $generated@@163) ($generated@@134 ($generated@@91 $generated@@23 $generated@@163) $generated@@25 $generated@@162)) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@22 $generated@@23 $generated@@163 $generated@@24 $generated@@161)) (=> ($generated@@22 $generated@@23 $generated@@163 $generated@@24 $generated@@161) (=> ($generated@@165 $generated@@161 $generated@@162 $generated@@163) (=> (and ($generated@@30 $generated@@161 $generated@@162 $generated@@163) ($generated@@134 ($generated@@91 $generated@@23 $generated@@163) $generated@@25 $generated@@162)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@22 $generated@@23 $generated@@163 $generated@@24 $generated@@161)) (=> ($generated@@22 $generated@@23 $generated@@163 $generated@@24 $generated@@161) (=> ($generated@@166 $generated@@161 $generated@@162 $generated@@163) (=> (and ($generated@@65 $generated@@161 $generated@@162 $generated@@163) (= (ControlFlow 0 3) 2)) $generated@@169)))))))))))))))))
(let (($generated@@172 true))
(let (($generated@@173  (=> (= $generated@@167 ($generated@@95 $generated@@32 $generated@@162 $generated $generated@@162 $generated)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@172) (=> (= (ControlFlow 0 9) 3) $generated@@171)) (=> (= (ControlFlow 0 9) 8) $generated@@170)))))
(let (($generated@@174  (=> (and ($generated@@31 $generated@@161) ($generated@@28 $generated@@161)) (=> (and (and (and (or (not (= $generated@@163 $generated@@32)) (not true)) (and ($generated@@33 $generated@@23 $generated@@163 $generated@@24) ($generated@@22 $generated@@23 $generated@@163 $generated@@24 $generated@@168))) (= 11 $generated@@129)) (and (and (= $generated@@168 $generated@@161) (and ($generated@@29 $generated@@168 $generated@@162) ($generated@@31 $generated@@162))) (= (ControlFlow 0 10) 9))) $generated@@173))))
$generated@@174)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
