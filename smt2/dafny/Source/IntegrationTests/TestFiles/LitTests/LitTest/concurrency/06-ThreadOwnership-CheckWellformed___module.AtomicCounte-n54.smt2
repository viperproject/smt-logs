(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 (T@T) Int)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 (Bool) T@U)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Real) T@U)
(declare-fun $generated@@25 (T@U) Real)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@53 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T T@T) T@T)
(declare-fun $generated@@74 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 (T@T T@U) T@U)
(declare-fun $generated@@119 (T@U T@U) Bool)
(declare-fun $generated@@123 (T@T T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 (T@U T@U T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) Bool)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@16 $generated@@17) 0) (= ($generated@@16 $generated@@18) 1)) (= ($generated@@16 $generated@@19) 2)) (forall (($generated@@26 Bool) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Int) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Real) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15)
)
(assert (= ($generated@@32 $generated@@3) 0))
(assert (= ($generated@@33 $generated) $generated@@1))
(assert (= ($generated@@33 $generated@@0) $generated@@2))
(assert (= ($generated@@34 $generated@@3) $generated@@4))
(assert ($generated@@35 $generated@@36))
(assert (forall (($generated@@39 T@U) ) (!  (not ($generated@@37 $generated@@38 $generated@@39))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39))
)))
(assert (= ($generated@@16 $generated@@41) 3))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@44 $generated@@36)  (or (= $generated@@44 $generated@@42) (= ($generated@@43 $generated@@44) $generated@@36)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@44 $generated@@36))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (and ($generated@@45 $generated@@49 $generated@@46 $generated@@50) ($generated@@47 $generated@@50)) ($generated@@45 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@45 $generated@@49 $generated@@46 $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (and ($generated@@45 $generated@@51 $generated@@36 $generated@@52) ($generated@@47 $generated@@52)) ($generated@@45 $generated@@51 $generated@@46 $generated@@52))
 :pattern ( ($generated@@45 $generated@@51 $generated@@36 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@53 $generated@@41 $generated@@55 $generated@@54 $generated@@56) ($generated@@53 $generated@@41 $generated@@55 $generated@@48 $generated@@56))
 :pattern ( ($generated@@53 $generated@@41 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@53 $generated@@41 $generated@@55 $generated@@48 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@53 $generated@@41 $generated@@58 $generated@@57 $generated@@59) ($generated@@53 $generated@@41 $generated@@58 $generated@@46 $generated@@59))
 :pattern ( ($generated@@53 $generated@@41 $generated@@58 $generated@@57 $generated@@59))
 :pattern ( ($generated@@53 $generated@@41 $generated@@58 $generated@@46 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@53 $generated@@41 $generated@@61 $generated@@60 $generated@@62) ($generated@@53 $generated@@41 $generated@@61 $generated@@36 $generated@@62))
 :pattern ( ($generated@@53 $generated@@41 $generated@@61 $generated@@60 $generated@@62))
 :pattern ( ($generated@@53 $generated@@41 $generated@@61 $generated@@36 $generated@@62))
)))
(assert (= ($generated@@32 $generated@@63) 0))
(assert (= ($generated@@64 $generated@@9 $generated@@15) $generated@@63))
(assert  (not ($generated@@65 $generated@@63)))
(assert  (and (and (and (and (and (and (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@70 $generated@@77 $generated@@78 ($generated@@74 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@79) $generated@@81) $generated@@79)
 :weight 0
)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (= $generated@@86 $generated@@87) (= ($generated@@70 $generated@@82 $generated@@83 ($generated@@74 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@84) $generated@@87) ($generated@@70 $generated@@82 $generated@@83 $generated@@85 $generated@@87)))
 :weight 0
))) (= ($generated@@16 $generated@@71) 4)) (= ($generated@@16 $generated@@72) 5)) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@16 ($generated@@73 $generated@@88 $generated@@89)) 6))) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@75 ($generated@@73 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@73 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@76 ($generated@@73 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@73 $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (and (and (and ($generated@@47 $generated@@95) ($generated@@47 $generated@@96)) (and (or (not (= $generated@@97 $generated@@42)) (not true)) (and ($generated@@40 $generated@@41 $generated@@97 $generated@@60) ($generated@@53 $generated@@41 $generated@@97 $generated@@60 $generated@@95)))) (and ($generated@@66 $generated@@95) ($generated@@67 $generated@@95 $generated@@96))) (=> (forall (($generated@@98 T@U) ($generated@@99 T@U) )  (=> (and (or (not (= $generated@@98 $generated@@42)) (not true)) ($generated@@21 ($generated@@69 $generated@@17 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@95 $generated@@98) $generated@@3)))) (= ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@95 $generated@@98) $generated@@99) ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@96 $generated@@98) $generated@@99)))) (= ($generated@@68 $generated@@94 $generated@@95 $generated@@97) ($generated@@68 $generated@@94 $generated@@96 $generated@@97))))
 :pattern ( ($generated@@66 $generated@@95) ($generated@@67 $generated@@95 $generated@@96) ($generated@@68 $generated@@94 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (and ($generated@@47 $generated@@102) ($generated@@47 $generated@@103)) (and (or (not (= $generated@@104 $generated@@42)) (not true)) (and ($generated@@40 $generated@@41 $generated@@104 $generated@@60) ($generated@@53 $generated@@41 $generated@@104 $generated@@60 $generated@@102)))) (and ($generated@@66 $generated@@102) ($generated@@67 $generated@@102 $generated@@103))) (=> (forall (($generated@@105 T@U) ($generated@@106 T@U) )  (=> (and (or (not (= $generated@@105 $generated@@42)) (not true)) ($generated@@21 ($generated@@69 $generated@@17 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@102 $generated@@105) $generated@@3)))) (= ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@102 $generated@@105) $generated@@106) ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@103 $generated@@105) $generated@@106)))) (= ($generated@@100 $generated@@101 $generated@@102 $generated@@104) ($generated@@100 $generated@@101 $generated@@103 $generated@@104))))
 :pattern ( ($generated@@66 $generated@@102) ($generated@@67 $generated@@102 $generated@@103) ($generated@@100 $generated@@101 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@53 $generated@@41 $generated@@107 $generated@@48 $generated@@108)  (or (= $generated@@107 $generated@@42) ($generated@@21 ($generated@@69 $generated@@17 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@108 $generated@@107) $generated@@3)))))
 :pattern ( ($generated@@53 $generated@@41 $generated@@107 $generated@@48 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@53 $generated@@41 $generated@@109 $generated@@46 $generated@@110)  (or (= $generated@@109 $generated@@42) ($generated@@21 ($generated@@69 $generated@@17 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@110 $generated@@109) $generated@@3)))))
 :pattern ( ($generated@@53 $generated@@41 $generated@@109 $generated@@46 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@53 $generated@@41 $generated@@111 $generated@@36 $generated@@112)  (or (= $generated@@111 $generated@@42) ($generated@@21 ($generated@@69 $generated@@17 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@112 $generated@@111) $generated@@3)))))
 :pattern ( ($generated@@53 $generated@@41 $generated@@111 $generated@@36 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@67 $generated@@113 $generated@@114) (forall (($generated@@115 T@U) ) (!  (=> ($generated@@21 ($generated@@69 $generated@@17 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@113 $generated@@115) $generated@@3))) ($generated@@21 ($generated@@69 $generated@@17 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@114 $generated@@115) $generated@@3))))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@114 $generated@@115) $generated@@3))
)))
 :pattern ( ($generated@@67 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@116 $generated@@118 $generated@@117) $generated@@117)
 :pattern ( ($generated@@116 $generated@@118 $generated@@117))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@119 $generated@@120 $generated@@121) (forall (($generated@@122 T@U) ) (!  (=> ($generated@@37 $generated@@120 $generated@@122) ($generated@@37 $generated@@121 $generated@@122))
 :pattern ( ($generated@@37 $generated@@120 $generated@@122))
 :pattern ( ($generated@@37 $generated@@121 $generated@@122))
)))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@123 $generated@@125 ($generated@@69 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@69 $generated@@125 $generated@@124))
)))
(assert  (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@126 $generated@@129 $generated@@130 $generated@@131 ($generated@@128 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@126 $generated@@136 $generated@@137 $generated@@138 ($generated@@128 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@126 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@126 $generated@@145 $generated@@146 $generated@@147 ($generated@@128 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@126 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@21 ($generated@@126 $generated@@41 $generated@@71 $generated@@17 ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (or (not (= $generated@@159 $generated@@154)) (not true)) ($generated@@21 ($generated@@69 $generated@@17 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@155 $generated@@159) $generated@@156)))) ($generated@@21 ($generated@@69 $generated@@17 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@157 $generated@@159) $generated@@158)))))
 :pattern ( ($generated@@126 $generated@@41 $generated@@71 $generated@@17 ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert ($generated@@65 $generated@@3))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (or ($generated@@162 $generated@@163 $generated@@164 $generated@@165) (and (< 0 $generated@@161) (and (and (and ($generated@@47 $generated@@163) ($generated@@47 $generated@@164)) ($generated@@67 $generated@@163 $generated@@164)) (and (or (not (= $generated@@165 $generated@@42)) (not true)) (and ($generated@@40 $generated@@41 $generated@@165 $generated@@60) ($generated@@53 $generated@@41 $generated@@165 $generated@@60 $generated@@163)))))) (= ($generated@@68 $generated@@163 $generated@@164 $generated@@165) (<= ($generated@@23 ($generated@@69 $generated@@18 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@163 $generated@@165) $generated@@63))) ($generated@@23 ($generated@@69 $generated@@18 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@164 $generated@@165) $generated@@63))))))
 :pattern ( ($generated@@68 $generated@@163 $generated@@164 $generated@@165) ($generated@@47 $generated@@164))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and ($generated@@47 $generated@@166) (and (or (not (= $generated@@167 $generated@@42)) (not true)) (= ($generated@@43 $generated@@167) $generated@@36))) ($generated@@21 ($generated@@69 $generated@@17 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@166 $generated@@167) $generated@@3)))) ($generated@@53 $generated@@18 ($generated@@69 $generated@@18 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@166 $generated@@167) $generated@@63)) $generated@@0 $generated@@166))
 :pattern ( ($generated@@69 $generated@@18 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@166 $generated@@167) $generated@@63)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@45 ($generated@@123 $generated@@171 $generated@@168) $generated@@169 $generated@@170) ($generated@@53 $generated@@171 $generated@@168 $generated@@169 $generated@@170))
 :pattern ( ($generated@@45 ($generated@@123 $generated@@171 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@67 $generated@@172 $generated@@173) (=> ($generated@@45 $generated@@174 $generated@@175 $generated@@172) ($generated@@45 $generated@@174 $generated@@175 $generated@@173)))
 :pattern ( ($generated@@67 $generated@@172 $generated@@173) ($generated@@45 $generated@@174 $generated@@175 $generated@@172))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@T) ) (!  (=> ($generated@@67 $generated@@176 $generated@@177) (=> ($generated@@53 $generated@@180 $generated@@178 $generated@@179 $generated@@176) ($generated@@53 $generated@@180 $generated@@178 $generated@@179 $generated@@177)))
 :pattern ( ($generated@@67 $generated@@176 $generated@@177) ($generated@@53 $generated@@180 $generated@@178 $generated@@179 $generated@@176))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@181 $generated@@54)  (and ($generated@@40 $generated@@41 $generated@@181 $generated@@48) (or (not (= $generated@@181 $generated@@42)) (not true))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@181 $generated@@54))
 :pattern ( ($generated@@40 $generated@@41 $generated@@181 $generated@@48))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@182 $generated@@57)  (and ($generated@@40 $generated@@41 $generated@@182 $generated@@46) (or (not (= $generated@@182 $generated@@42)) (not true))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@182 $generated@@57))
 :pattern ( ($generated@@40 $generated@@41 $generated@@182 $generated@@46))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@183 $generated@@60)  (and ($generated@@40 $generated@@41 $generated@@183 $generated@@36) (or (not (= $generated@@183 $generated@@42)) (not true))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@183 $generated@@60))
 :pattern ( ($generated@@40 $generated@@41 $generated@@183 $generated@@36))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@53 $generated@@41 $generated@@184 $generated@@46 $generated@@185) ($generated@@53 $generated@@41 $generated@@184 $generated@@48 $generated@@185))
 :pattern ( ($generated@@53 $generated@@41 $generated@@184 $generated@@46 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@53 $generated@@41 $generated@@186 $generated@@36 $generated@@187) ($generated@@53 $generated@@41 $generated@@186 $generated@@46 $generated@@187))
 :pattern ( ($generated@@53 $generated@@41 $generated@@186 $generated@@36 $generated@@187))
)))
(assert  (=> (<= 1 $generated@@161) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (or ($generated@@188 $generated@@189 $generated@@190 $generated@@191) (and (< 1 $generated@@161) (and (and (and ($generated@@47 $generated@@189) ($generated@@47 $generated@@190)) ($generated@@67 $generated@@189 $generated@@190)) (and (or (not (= $generated@@191 $generated@@42)) (not true)) (and ($generated@@40 $generated@@41 $generated@@191 $generated@@60) ($generated@@53 $generated@@41 $generated@@191 $generated@@60 $generated@@189)))))) (and (=> ($generated@@21 ($generated@@116 $generated@@17 ($generated@@20 true))) ($generated@@162 $generated@@189 $generated@@190 $generated@@191)) (= ($generated@@100 $generated@@189 $generated@@190 $generated@@191)  (and true ($generated@@68 $generated@@189 $generated@@190 $generated@@191)))))
 :pattern ( ($generated@@100 $generated@@189 $generated@@190 $generated@@191) ($generated@@47 $generated@@190))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (or (not (= $generated@@192 $generated@@194)) (not true)) (=> (and ($generated@@67 $generated@@192 $generated@@193) ($generated@@67 $generated@@193 $generated@@194)) ($generated@@67 $generated@@192 $generated@@194)))
 :pattern ( ($generated@@67 $generated@@192 $generated@@193) ($generated@@67 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (and (= ($generated@@195 ($generated@@64 $generated@@196 $generated@@197)) $generated@@196) (= ($generated@@34 ($generated@@64 $generated@@196 $generated@@197)) $generated@@197))
 :pattern ( ($generated@@64 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@T) ) (! (= ($generated@@69 $generated@@199 ($generated@@123 $generated@@199 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@123 $generated@@199 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@47 $generated@@200) (and (or (not (= $generated@@201 $generated@@42)) (not true)) (= ($generated@@43 $generated@@201) $generated@@36))) ($generated@@40 $generated@@18 ($generated@@69 $generated@@18 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@200 $generated@@201) $generated@@63)) $generated@@0))
 :pattern ( ($generated@@69 $generated@@18 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@200 $generated@@201) $generated@@63)))
)))
(assert (forall (($generated@@202 T@U) ) (!  (=> ($generated@@40 $generated@@41 $generated@@202 $generated@@46) ($generated@@40 $generated@@41 $generated@@202 $generated@@48))
 :pattern ( ($generated@@40 $generated@@41 $generated@@202 $generated@@46))
)))
(assert (forall (($generated@@203 T@U) ) (!  (=> ($generated@@40 $generated@@41 $generated@@203 $generated@@36) ($generated@@40 $generated@@41 $generated@@203 $generated@@46))
 :pattern ( ($generated@@40 $generated@@41 $generated@@203 $generated@@36))
)))
(assert (= ($generated@@33 $generated@@57) $generated@@5))
(assert (= ($generated@@204 $generated@@57) $generated@@12))
(assert (= ($generated@@33 $generated@@54) $generated@@6))
(assert (= ($generated@@204 $generated@@54) $generated@@13))
(assert (= ($generated@@33 $generated@@48) $generated@@7))
(assert (= ($generated@@204 $generated@@48) $generated@@13))
(assert (= ($generated@@33 $generated@@46) $generated@@8))
(assert (= ($generated@@204 $generated@@46) $generated@@12))
(assert (= ($generated@@33 $generated@@36) $generated@@10))
(assert (= ($generated@@204 $generated@@36) $generated@@14))
(assert (= ($generated@@33 $generated@@60) $generated@@11))
(assert (= ($generated@@204 $generated@@60) $generated@@14))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@206 $generated@@48)  (or (= $generated@@206 $generated@@42) ($generated@@205 ($generated@@43 $generated@@206))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@206 $generated@@48))
)))
(assert (forall (($generated@@207 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@207 $generated@@46)  (or (= $generated@@207 $generated@@42) ($generated@@35 ($generated@@43 $generated@@207))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@207 $generated@@46))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@T) ) (! (= ($generated@@123 $generated@@209 ($generated@@116 $generated@@209 $generated@@208)) ($generated@@116 $generated@@72 ($generated@@123 $generated@@209 $generated@@208)))
 :pattern ( ($generated@@123 $generated@@209 ($generated@@116 $generated@@209 $generated@@208)))
)))
(assert  (=> (<= 1 $generated@@161) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (or ($generated@@188 $generated@@210 $generated@@211 $generated@@212) (and (< 1 $generated@@161) (and (and (and ($generated@@47 $generated@@210) ($generated@@47 $generated@@211)) ($generated@@67 $generated@@210 $generated@@211)) (and (or (not (= $generated@@212 $generated@@42)) (not true)) (and ($generated@@40 $generated@@41 $generated@@212 $generated@@60) ($generated@@53 $generated@@41 $generated@@212 $generated@@60 $generated@@210)))))) (=> ($generated@@100 $generated@@210 $generated@@211 $generated@@212) ($generated@@68 $generated@@210 $generated@@211 $generated@@212)))
 :pattern ( ($generated@@100 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! ($generated@@53 $generated@@18 $generated@@214 $generated@@0 $generated@@213)
 :pattern ( ($generated@@53 $generated@@18 $generated@@214 $generated@@0 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! ($generated@@53 $generated@@17 $generated@@216 $generated $generated@@215)
 :pattern ( ($generated@@53 $generated@@17 $generated@@216 $generated $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! ($generated@@40 $generated@@18 $generated@@217 $generated@@0)
 :pattern ( ($generated@@40 $generated@@18 $generated@@217 $generated@@0))
)))
(assert (forall (($generated@@218 T@U) ) (! ($generated@@40 $generated@@17 $generated@@218 $generated)
 :pattern ( ($generated@@40 $generated@@17 $generated@@218 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () Bool)
(declare-fun $generated@@224 () Bool)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@T)
(assert (= ($generated@@16 $generated@@226) 7))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@227  (=> (= (ControlFlow 0 8) (- 0 7)) (=> ($generated@@100 $generated@@219 $generated@@220 $generated@@221) (=> ($generated@@162 $generated@@219 $generated@@220 $generated@@221) (or ($generated@@68 $generated@@219 $generated@@220 $generated@@221) (<= ($generated@@23 ($generated@@69 $generated@@18 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@219 $generated@@221) $generated@@63))) ($generated@@23 ($generated@@69 $generated@@18 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@220 $generated@@221) $generated@@63))))))))))
(let (($generated@@228  (=> (= ($generated@@100 $generated@@222 $generated@@220 $generated@@221)  (and true ($generated@@68 $generated@@222 $generated@@220 $generated@@221))) (=> (and (=> ($generated@@21 ($generated@@116 $generated@@17 ($generated@@20 true))) ($generated@@162 $generated@@222 $generated@@220 $generated@@221)) ($generated@@40 $generated@@17 ($generated@@20 ($generated@@100 $generated@@222 $generated@@220 $generated@@221)) $generated)) (and (=> (= (ControlFlow 0 9) (- 0 10)) $generated@@223) (=> $generated@@223 (=> (= (ControlFlow 0 9) 8) $generated@@227)))))))
(let (($generated@@229  (=> (not ($generated@@21 ($generated@@116 $generated@@17 ($generated@@20 true)))) (=> (and (= $generated@@223 true) (= (ControlFlow 0 13) 9)) $generated@@228))))
(let (($generated@@230  (=> (and ($generated@@21 ($generated@@116 $generated@@17 ($generated@@20 true))) ($generated@@45 ($generated@@123 $generated@@41 $generated@@221) $generated@@36 $generated@@220)) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@53 $generated@@41 $generated@@221 $generated@@60 $generated@@222)) (=> ($generated@@53 $generated@@41 $generated@@221 $generated@@60 $generated@@222) (=> (and (and (= $generated@@224 (forall (($generated@@231 T@U) ($generated@@232 T@U) )  (=> (and (and (or (not (= $generated@@231 $generated@@42)) (not true)) ($generated@@21 ($generated@@69 $generated@@17 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@220 $generated@@231) $generated@@3)))) ($generated@@21 ($generated@@69 $generated@@17 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@41 ($generated@@73 $generated@@71 $generated@@72) $generated@@220 $generated@@231) $generated@@3)))) ($generated@@21 ($generated@@126 $generated@@41 $generated@@71 $generated@@17 $generated@@225 $generated@@231 $generated@@232))))) ($generated@@162 $generated@@222 $generated@@220 $generated@@221)) (and (= $generated@@223 $generated@@224) (= (ControlFlow 0 11) 9))) $generated@@228))))))
(let (($generated@@233 true))
(let (($generated@@234  (=> (and (=> ($generated@@100 $generated@@222 $generated@@220 $generated@@221) ($generated@@68 $generated@@222 $generated@@220 $generated@@221)) (= (ControlFlow 0 6) 1)) $generated@@233)))
(let (($generated@@235  (=> ($generated@@45 ($generated@@123 $generated@@41 $generated@@221) $generated@@36 $generated@@220) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@53 $generated@@41 $generated@@221 $generated@@60 $generated@@222)) (=> ($generated@@53 $generated@@41 $generated@@221 $generated@@60 $generated@@222) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (= $generated@@221 $generated@@221) (and ($generated@@119 ($generated@@116 $generated@@226 $generated@@38) ($generated@@116 $generated@@226 $generated@@38)) (not ($generated@@119 ($generated@@116 $generated@@226 $generated@@38) ($generated@@116 $generated@@226 $generated@@38)))))) (=> (or (= $generated@@221 $generated@@221) (and ($generated@@119 ($generated@@116 $generated@@226 $generated@@38) ($generated@@116 $generated@@226 $generated@@38)) (not ($generated@@119 ($generated@@116 $generated@@226 $generated@@38) ($generated@@116 $generated@@226 $generated@@38))))) (=> (or (= $generated@@221 $generated@@221) ($generated@@188 $generated@@222 $generated@@220 $generated@@221)) (=> (and ($generated@@100 $generated@@222 $generated@@220 $generated@@221) ($generated@@45 ($generated@@123 $generated@@41 $generated@@221) $generated@@36 $generated@@220)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@53 $generated@@41 $generated@@221 $generated@@60 $generated@@222)) (=> ($generated@@53 $generated@@41 $generated@@221 $generated@@60 $generated@@222) (=> ($generated@@162 $generated@@222 $generated@@220 $generated@@221) (=> (and ($generated@@68 $generated@@222 $generated@@220 $generated@@221) (= (ControlFlow 0 2) 1)) $generated@@233)))))))))))))
(let (($generated@@236  (=> (= $generated@@225 ($generated@@127 $generated@@42 $generated@@220 $generated@@3 $generated@@220 $generated@@3)) (and (and (and (=> (= (ControlFlow 0 14) 11) $generated@@230) (=> (= (ControlFlow 0 14) 13) $generated@@229)) (=> (= (ControlFlow 0 14) 2) $generated@@235)) (=> (= (ControlFlow 0 14) 6) $generated@@234)))))
(let (($generated@@237  (=> (and ($generated@@47 $generated@@222) ($generated@@66 $generated@@222)) (=> (and (and (and (or (not (= $generated@@221 $generated@@42)) (not true)) (and ($generated@@40 $generated@@41 $generated@@221 $generated@@60) ($generated@@53 $generated@@41 $generated@@221 $generated@@60 $generated@@219))) (= 1 $generated@@161)) (and (and (= $generated@@219 $generated@@222) (and ($generated@@67 $generated@@219 $generated@@220) ($generated@@47 $generated@@220))) (= (ControlFlow 0 15) 14))) $generated@@236))))
$generated@@237))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
