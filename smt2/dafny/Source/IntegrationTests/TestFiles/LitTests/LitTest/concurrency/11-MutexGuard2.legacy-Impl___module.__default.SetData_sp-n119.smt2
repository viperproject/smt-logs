(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun TBool () T@U)
(declare-fun TInt () T@U)
(declare-fun TagBool () T@U)
(declare-fun TagInt () T@U)
(declare-fun TagSet () T@U)
(declare-fun alloc () T@U)
(declare-fun allocName () T@U)
(declare-fun Tagclass._module.Universe () T@U)
(declare-fun Tagclass._module.Thread () T@U)
(declare-fun Tagclass._module.Mutex () T@U)
(declare-fun Tagclass._module.MutexGuardU32 () T@U)
(declare-fun Tagclass._module.Universe? () T@U)
(declare-fun Tagclass._module.Object () T@U)
(declare-fun Tagclass._module.OwnedU32 () T@U)
(declare-fun class._module.Universe? () T@U)
(declare-fun Tagclass._module.Object? () T@U)
(declare-fun Tagclass._module.OwnedObject () T@U)
(declare-fun Tagclass._module.Thread? () T@U)
(declare-fun class._module.OwnedObject? () T@U)
(declare-fun Tagclass._module.OwnedObject? () T@U)
(declare-fun class._module.OwnedU32? () T@U)
(declare-fun Tagclass._module.OwnedU32? () T@U)
(declare-fun class._module.Mutex? () T@U)
(declare-fun Tagclass._module.Mutex? () T@U)
(declare-fun class._module.MutexGuardU32? () T@U)
(declare-fun Tagclass._module.MutexGuardU32? () T@U)
(declare-fun tytagFamily$Universe () T@U)
(declare-fun tytagFamily$Thread () T@U)
(declare-fun tytagFamily$Mutex () T@U)
(declare-fun tytagFamily$MutexGuardU32 () T@U)
(declare-fun tytagFamily$Object () T@U)
(declare-fun tytagFamily$OwnedU32 () T@U)
(declare-fun tytagFamily$OwnedObject () T@U)
(declare-fun field$content () T@U)
(declare-fun field$owner () T@U)
(declare-fun field$mutex () T@U)
(declare-fun field$locked () T@U)
(declare-fun field$guards () T@U)
(declare-fun field$data () T@U)
(declare-fun field$nonvolatileVersion () T@U)
(declare-fun field$value () T@U)
(declare-fun Ctor (T@T) Int)
(declare-fun boolType () T@T)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun $FunctionContextHeight () Int)
(declare-fun _module.OwnedObject.inv2 (T@U T@U T@U) Bool)
(declare-fun $IsGoodHeap (T@U) Bool)
(declare-fun |_module.OwnedObject.inv2#canCall| (T@U T@U T@U) Bool)
(declare-fun $HeapSucc (T@U T@U) Bool)
(declare-fun null () T@U)
(declare-fun $Is (T@T T@U T@U) Bool)
(declare-fun refType () T@T)
(declare-fun Tclass._module.OwnedObject () T@U)
(declare-fun $IsAlloc (T@T T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.localInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.localInv2 (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.sequenceInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.sequenceInv2 (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.userInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.userInv2 (T@U T@U T@U) Bool)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun MapType0Select (T@T T@T T@U T@U) T@U)
(declare-fun FieldType () T@T)
(declare-fun BoxType () T@T)
(declare-fun MapType0Type (T@T T@T) T@T)
(declare-fun _module.OwnedObject.owner () T@U)
(declare-fun |_module.Object.localInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Object.localInv (T@U T@U) Bool)
(declare-fun |_module.Object.localInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun _module.Object.localInv2 (T@U T@U T@U) Bool)
(declare-fun $IsAllocBox (T@U T@U T@U) Bool)
(declare-fun $Box (T@T T@U) T@U)
(declare-fun Tclass._module.Object () T@U)
(declare-fun MapType0Store (T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType0TypeInv0 (T@T) T@T)
(declare-fun MapType0TypeInv1 (T@T) T@T)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun _module.Universe.legalTransitionsSequence (T@U T@U T@U T@U) Bool)
(declare-fun Tclass._module.Universe () T@U)
(declare-fun |_module.Universe.legalTransitionsSequence#canCall| (T@U T@U T@U T@U) Bool)
(declare-fun SetType () T@T)
(declare-fun TSet (T@U) T@U)
(declare-fun Tclass._module.Thread () T@U)
(declare-fun FDim (T@U) Int)
(declare-fun Tag (T@U) T@U)
(declare-fun DeclName (T@U) T@U)
(declare-fun _module.Universe.baseLegalTransitionsSequence (T@U T@U T@U) Bool)
(declare-fun |_module.Universe.baseLegalTransitionsSequence#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Universe.globalBaseInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Universe.globalBaseInv (T@U T@U) Bool)
(declare-fun |Set#Subset| (T@U T@U) Bool)
(declare-fun _module.Universe.content () T@U)
(declare-fun |Set#IsMember| (T@U T@U) Bool)
(declare-fun |Set#UnionOne| (T@U T@U) T@U)
(declare-fun _module.OwnedObject.baseFieldsInv (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.baseFieldsInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Object.universe (T@U) T@U)
(declare-fun |_module.OwnedObject.baseUserFieldsInv#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.baseUserFieldsInv (T@U T@U) Bool)
(declare-fun _module.MutexGuardU32.baseUserFieldsInv (T@U T@U) Bool)
(declare-fun |_module.MutexGuardU32.baseUserFieldsInv#canCall| (T@U T@U) Bool)
(declare-fun Tclass._module.MutexGuardU32 () T@U)
(declare-fun _module.MutexGuardU32.mutex () T@U)
(declare-fun _module.MutexGuardU32.data () T@U)
(declare-fun Lit (T@T T@U) T@U)
(declare-fun _module.Object.triggerAxioms (T@U T@U) Bool)
(declare-fun _module.Object.baseFieldsInv (T@U T@U) Bool)
(declare-fun |_module.Object.baseFieldsInv#canCall| (T@U T@U) Bool)
(declare-fun |_module.Object.triggerAxioms#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.unchangedNonvolatileFields (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.unchangedNonvolatileUserFields (T@U T@U T@U) Bool)
(declare-fun _module.OwnedU32.unchangedNonvolatileUserFields (T@U T@U T@U) Bool)
(declare-fun Tclass._module.OwnedU32 () T@U)
(declare-fun _module.Mutex.unchangedNonvolatileUserFields (T@U T@U T@U) Bool)
(declare-fun Tclass._module.Mutex () T@U)
(declare-fun _module.MutexGuardU32.unchangedNonvolatileUserFields (T@U T@U T@U) Bool)
(declare-fun implements$_module.Object (T@U) Bool)
(declare-fun Tclass._module.Thread? () T@U)
(declare-fun implements$_module.OwnedObject (T@U) Bool)
(declare-fun Tclass._module.OwnedU32? () T@U)
(declare-fun Tclass._module.Mutex? () T@U)
(declare-fun Tclass._module.MutexGuardU32? () T@U)
(declare-fun |Set#Empty| () T@U)
(declare-fun _module.Mutex.userInv (T@U T@U) Bool)
(declare-fun |_module.Mutex.userInv#canCall| (T@U T@U) Bool)
(declare-fun |_module.Mutex.localUserInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Mutex.localUserInv (T@U T@U) Bool)
(declare-fun _module.OwnedObject.localInv (T@U T@U) Bool)
(declare-fun _module.Mutex.guards () T@U)
(declare-fun |_module.OwnedObject.localInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Universe.globalInv (T@U T@U) Bool)
(declare-fun |_module.Universe.globalInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Object.inv (T@U T@U) Bool)
(declare-fun |_module.Object.inv#canCall| (T@U T@U) Bool)
(declare-fun dtype (T@U) T@U)
(declare-fun _module.Mutex.locked () T@U)
(declare-fun _module.Mutex.data () T@U)
(declare-fun |Set#Equal| (T@U T@U) Bool)
(declare-fun _module.Universe.legalTransition (T@U T@U T@U T@U) Bool)
(declare-fun |_module.Universe.legalTransition#canCall| (T@U T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.nonvolatileVersion () T@U)
(declare-fun Tclass._module.OwnedObject? () T@U)
(declare-fun Tclass._module.Object? () T@U)
(declare-fun Tclass._module.Universe? () T@U)
(declare-fun FieldOfDecl (T@U T@U) T@U)
(declare-fun $IsGhostField (T@U) Bool)
(declare-fun _module.OwnedObject.localUserInv (T@U T@U) Bool)
(declare-fun _module.OwnedU32.localUserInv (T@U T@U) Bool)
(declare-fun |_module.OwnedU32.localUserInv#canCall| (T@U T@U) Bool)
(declare-fun _module.MutexGuardU32.localUserInv (T@U T@U) Bool)
(declare-fun |_module.MutexGuardU32.localUserInv#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.userInv (T@U T@U) Bool)
(declare-fun _module.OwnedU32.userInv (T@U T@U) Bool)
(declare-fun |_module.OwnedU32.userInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Thread.baseFieldsInv (T@U T@U) Bool)
(declare-fun |_module.Thread.baseFieldsInv#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedU32.baseUserFieldsInv (T@U T@U) Bool)
(declare-fun |_module.OwnedU32.baseUserFieldsInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Mutex.baseUserFieldsInv (T@U T@U) Bool)
(declare-fun |_module.Mutex.baseUserFieldsInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Thread.localInv (T@U T@U) Bool)
(declare-fun |_module.Thread.localInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Thread.inv (T@U T@U) Bool)
(declare-fun |_module.Thread.inv#canCall| (T@U T@U) Bool)
(declare-fun _module.MutexGuardU32.userInv (T@U T@U) Bool)
(declare-fun |_module.MutexGuardU32.userInv#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.inv (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.inv#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedU32.value () T@U)
(declare-fun _module.Object.sequenceInv2 (T@U T@U T@U) Bool)
(declare-fun |_module.Object.sequenceInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun _module.Universe.globalSequenceInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Universe.globalInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Object.inv2 (T@U T@U T@U) Bool)
(declare-fun _module.Thread.localInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Thread.sequenceInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Thread.inv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.localUserInv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedU32.localUserInv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedU32.userInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Mutex.localUserInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Mutex.userInv2 (T@U T@U T@U) Bool)
(declare-fun _module.MutexGuardU32.localUserInv2 (T@U T@U T@U) Bool)
(declare-fun _module.MutexGuardU32.userInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Object.objectGlobalBaseInv (T@U T@U) Bool)
(declare-fun |_module.Object.objectGlobalBaseInv#canCall| (T@U T@U) Bool)
(declare-fun LitInt (Int) Int)
(declare-fun |_module.Object.inv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Thread.inv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Thread.localInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Thread.sequenceInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |Set#FromBoogieMap| (T@U) T@U)
(declare-fun |lambda#29| (T@U T@U T@U) T@U)
(declare-fun $IsBox (T@U T@U) Bool)
(declare-fun MapType1Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun |lambda#0| (T@U T@U T@U T@U T@U) T@U)
(declare-fun MapType1Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun |_module.OwnedObject.localUserInv#canCall| (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.userInv#canCall| (T@U T@U) Bool)
(declare-fun |_module.OwnedU32.unchangedNonvolatileUserFields#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Mutex.localUserInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.MutexGuardU32.localUserInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedU32.localUserInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Mutex.unchangedNonvolatileUserFields#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.MutexGuardU32.unchangedNonvolatileUserFields#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedU32.userInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Mutex.userInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.MutexGuardU32.userInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.localUserInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.unchangedNonvolatileFields#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.volatileOwns#canCall| (T@U) Bool)
(declare-fun _module.OwnedObject.volatileOwns (T@U) Bool)
(declare-fun DeclType (T@U) T@U)
(declare-fun |_module.OwnedObject.unchangedNonvolatileUserFields#canCall| (T@U T@U T@U) Bool)
(declare-fun Inv0_TSet (T@U) T@U)
(declare-fun _module.OwnedU32.volatileOwns (T@U) Bool)
(declare-fun |_module.OwnedU32.volatileOwns#canCall| (T@U) Bool)
(declare-fun _module.MutexGuardU32.volatileOwns (T@U) Bool)
(declare-fun |_module.MutexGuardU32.volatileOwns#canCall| (T@U) Bool)
(declare-fun _module.Mutex.volatileOwns (T@U) Bool)
(declare-fun |_module.Mutex.volatileOwns#canCall| (T@U) Bool)
(declare-fun TagFamily (T@U) T@U)
(declare-fun implements$_module.Universe (T@U) Bool)
(declare-fun |_module.Universe.globalSequenceInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Universe.globalInv2#canCall| (T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (Ctor boolType) 0) (= (Ctor intType) 1)) (= (Ctor realType) 2)) (forall ((arg0 Bool) ) (! (= (U_2_bool (bool_2_U arg0)) arg0)
 :pattern ( (bool_2_U arg0))
))) (forall ((x T@U) ) (! (= (bool_2_U (U_2_bool x)) x)
 :pattern ( (U_2_bool x))
))) (forall ((arg0@@0 Int) ) (! (= (U_2_int (int_2_U arg0@@0)) arg0@@0)
 :pattern ( (int_2_U arg0@@0))
))) (forall ((x@@0 T@U) ) (! (= (int_2_U (U_2_int x@@0)) x@@0)
 :pattern ( (U_2_int x@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@1 T@U) ) (! (= (real_2_U (U_2_real x@@1)) x@@1)
 :pattern ( (U_2_real x@@1))
))))
(assert (distinct TBool TInt TagBool TagInt TagSet alloc allocName Tagclass._module.Universe Tagclass._module.Thread Tagclass._module.Mutex Tagclass._module.MutexGuardU32 Tagclass._module.Universe? Tagclass._module.Object Tagclass._module.OwnedU32 class._module.Universe? Tagclass._module.Object? Tagclass._module.OwnedObject Tagclass._module.Thread? class._module.OwnedObject? Tagclass._module.OwnedObject? class._module.OwnedU32? Tagclass._module.OwnedU32? class._module.Mutex? Tagclass._module.Mutex? class._module.MutexGuardU32? Tagclass._module.MutexGuardU32? tytagFamily$Universe tytagFamily$Thread tytagFamily$Mutex tytagFamily$MutexGuardU32 tytagFamily$Object tytagFamily$OwnedU32 tytagFamily$OwnedObject field$content field$owner field$mutex field$locked field$guards field$data field$nonvolatileVersion field$value)
)
(assert  (and (and (and (and (and (and (and (= (Ctor refType) 3) (forall ((t0 T@T) (t1 T@T) (val T@U) (m T@U) (x0 T@U) ) (! (= (MapType0Select t0 t1 (MapType0Store t0 t1 m x0 val) x0) val)
 :weight 0
))) (forall ((u0 T@T) (u1 T@T) (val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (y0 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select u0 u1 (MapType0Store u0 u1 m@@0 x0@@0 val@@0) y0) (MapType0Select u0 u1 m@@0 y0)))
 :weight 0
))) (= (Ctor FieldType) 4)) (= (Ctor BoxType) 5)) (forall ((arg0@@2 T@T) (arg1 T@T) ) (= (Ctor (MapType0Type arg0@@2 arg1)) 6))) (forall ((arg0@@3 T@T) (arg1@@0 T@T) ) (! (= (MapType0TypeInv0 (MapType0Type arg0@@3 arg1@@0)) arg0@@3)
 :pattern ( (MapType0Type arg0@@3 arg1@@0))
))) (forall ((arg0@@4 T@T) (arg1@@1 T@T) ) (! (= (MapType0TypeInv1 (MapType0Type arg0@@4 arg1@@1)) arg1@@1)
 :pattern ( (MapType0Type arg0@@4 arg1@@1))
))))
(assert  (=> (<= 10 $FunctionContextHeight) (forall (($prevHeap T@U) ($Heap T@U) (this T@U) ) (!  (=> (or (|_module.OwnedObject.inv2#canCall| $prevHeap $Heap this) (and (< 10 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap) ($IsGoodHeap $Heap)) ($HeapSucc $prevHeap $Heap)) (and (or (not (= this null)) (not true)) (and ($Is refType this Tclass._module.OwnedObject) ($IsAlloc refType this Tclass._module.OwnedObject $prevHeap)))))) (and (and (|_module.OwnedObject.localInv2#canCall| $prevHeap $Heap this) (=> (_module.OwnedObject.localInv2 $prevHeap $Heap this) (and (|_module.OwnedObject.sequenceInv2#canCall| $prevHeap $Heap this) (=> (_module.OwnedObject.sequenceInv2 $prevHeap $Heap this) (and (|_module.OwnedObject.userInv2#canCall| $prevHeap $Heap this) (=> (_module.OwnedObject.userInv2 $prevHeap $Heap this) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap this) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) _module.OwnedObject.owner)))) (not true)) (and (|_module.Object.localInv#canCall| $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap this) _module.OwnedObject.owner))) (=> (_module.Object.localInv $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap this) _module.OwnedObject.owner))) (and (|_module.Object.localInv2#canCall| $prevHeap $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap this) _module.OwnedObject.owner))) (=> (_module.Object.localInv2 $prevHeap $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap this) _module.OwnedObject.owner))) (and (|_module.Object.localInv#canCall| $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) _module.OwnedObject.owner))) (=> (_module.Object.localInv $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) _module.OwnedObject.owner))) (let ((|currOwner#0| ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) _module.OwnedObject.owner))))
 (=> ($IsAllocBox ($Box refType |currOwner#0|) Tclass._module.Object $prevHeap) (|_module.Object.localInv2#canCall| $prevHeap $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) _module.OwnedObject.owner)))))))))))))))))) (= (_module.OwnedObject.inv2 $prevHeap $Heap this)  (and (and (and (_module.OwnedObject.localInv2 $prevHeap $Heap this) (_module.OwnedObject.sequenceInv2 $prevHeap $Heap this)) (_module.OwnedObject.userInv2 $prevHeap $Heap this)) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap this) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) _module.OwnedObject.owner)))) (not true)) (and (and (and (_module.Object.localInv $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap this) _module.OwnedObject.owner))) (_module.Object.localInv2 $prevHeap $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap this) _module.OwnedObject.owner)))) (_module.Object.localInv $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) _module.OwnedObject.owner)))) (let ((|currOwner#0@@0| ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) _module.OwnedObject.owner))))
 (=> ($IsAllocBox ($Box refType |currOwner#0@@0|) Tclass._module.Object $prevHeap) (_module.Object.localInv2 $prevHeap $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) _module.OwnedObject.owner)))))))))))
 :pattern ( (_module.OwnedObject.inv2 $prevHeap $Heap this) ($IsGoodHeap $Heap))
))))
(assert (= (Ctor SetType) 7))
(assert (forall (($prevHeap@@0 T@U) ($h0 T@U) ($h1 T@U) (this@@0 T@U) (|running#0| T@U) ) (!  (=> (and (and (and (and ($IsGoodHeap $h0) ($IsGoodHeap $h1)) (and (or (not (= this@@0 null)) (not true)) (and ($Is refType this@@0 Tclass._module.Universe) ($IsAlloc refType this@@0 Tclass._module.Universe $h0)))) (or (|_module.Universe.legalTransitionsSequence#canCall| $prevHeap@@0 $h0 this@@0 |running#0|) (and ($Is SetType |running#0| (TSet Tclass._module.Thread)) ($IsAlloc SetType |running#0| (TSet Tclass._module.Thread) $h0)))) (and ($IsHeapAnchor $h0) ($HeapSucc $h0 $h1))) (=> (forall (($o T@U) ($f T@U) )  (=> (and (or (not (= $o null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0 $o) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0 $o) $f) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1 $o) $f)))) (= (_module.Universe.legalTransitionsSequence $prevHeap@@0 $h0 this@@0 |running#0|) (_module.Universe.legalTransitionsSequence $prevHeap@@0 $h1 this@@0 |running#0|))))
 :pattern ( ($IsHeapAnchor $h0) ($HeapSucc $h0 $h1) (_module.Universe.legalTransitionsSequence $prevHeap@@0 $h1 this@@0 |running#0|))
)))
(assert (= (FDim alloc) 0))
(assert (= (Tag TBool) TagBool))
(assert (= (Tag TInt) TagInt))
(assert (= (DeclName alloc) allocName))
(assert  (=> (<= 7 $FunctionContextHeight) (forall (($prevHeap@@1 T@U) ($Heap@@0 T@U) (this@@1 T@U) ) (!  (=> (or (|_module.Universe.baseLegalTransitionsSequence#canCall| $prevHeap@@1 $Heap@@0 this@@1) (and (< 7 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@1) ($IsGoodHeap $Heap@@0)) ($HeapSucc $prevHeap@@1 $Heap@@0)) (and (or (not (= this@@1 null)) (not true)) (and ($Is refType this@@1 Tclass._module.Universe) ($IsAlloc refType this@@1 Tclass._module.Universe $prevHeap@@1)))))) (and (and (|_module.Universe.globalBaseInv#canCall| $prevHeap@@1 this@@1) (=> (_module.Universe.globalBaseInv $prevHeap@@1 this@@1) (|_module.Universe.globalBaseInv#canCall| $Heap@@0 this@@1))) (= (_module.Universe.baseLegalTransitionsSequence $prevHeap@@1 $Heap@@0 this@@1)  (and (and (and (_module.Universe.globalBaseInv $prevHeap@@1 this@@1) (_module.Universe.globalBaseInv $Heap@@0 this@@1)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@1 this@@1) _module.Universe.content)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@0 this@@1) _module.Universe.content)))) (forall ((|o#0| T@U) ) (!  (=> (and ($Is refType |o#0| Tclass._module.Object) (and (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@1 this@@1) _module.Universe.content)) ($Box refType |o#0|))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@0 this@@1) _module.Universe.content)) ($Box refType |o#0|)))) (not ($IsAllocBox ($Box refType |o#0|) Tclass._module.Object $prevHeap@@1)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@0 this@@1) _module.Universe.content)) ($Box refType |o#0|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@1 this@@1) _module.Universe.content)) ($Box refType |o#0|)))
))))))
 :pattern ( (_module.Universe.baseLegalTransitionsSequence $prevHeap@@1 $Heap@@0 this@@1) ($IsGoodHeap $Heap@@0))
))))
(assert (forall ((a T@U) (x@@2 T@U) ) (! (|Set#IsMember| (|Set#UnionOne| a x@@2) x@@2)
 :pattern ( (|Set#UnionOne| a x@@2))
)))
(assert  (=> (<= 4 $FunctionContextHeight) (forall (($Heap@@1 T@U) (this@@2 T@U) ) (!  (=> (or (|_module.OwnedObject.baseFieldsInv#canCall| $Heap@@1 this@@2) (and (< 4 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@1) (and (or (not (= this@@2 null)) (not true)) (and ($Is refType this@@2 Tclass._module.OwnedObject) ($IsAlloc refType this@@2 Tclass._module.OwnedObject $Heap@@1)))))) (and (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 (_module.Object.universe this@@2)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.OwnedObject.owner)) (|_module.OwnedObject.baseUserFieldsInv#canCall| $Heap@@1 this@@2)) (= (_module.OwnedObject.baseFieldsInv $Heap@@1 this@@2)  (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 (_module.Object.universe this@@2)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.OwnedObject.owner)) (_module.OwnedObject.baseUserFieldsInv $Heap@@1 this@@2)))))
 :pattern ( (_module.OwnedObject.baseFieldsInv $Heap@@1 this@@2) ($IsGoodHeap $Heap@@1))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@2 T@U) (this@@3 T@U) ) (!  (=> (or (|_module.MutexGuardU32.baseUserFieldsInv#canCall| $Heap@@2 this@@3) (and (< 2 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@2) (and (or (not (= this@@3 null)) (not true)) (and ($Is refType this@@3 Tclass._module.MutexGuardU32) ($IsAlloc refType this@@3 Tclass._module.MutexGuardU32 $Heap@@2)))))) (= (_module.MutexGuardU32.baseUserFieldsInv $Heap@@2 this@@3)  (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@2 (_module.Object.universe this@@3)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@2 this@@3) _module.MutexGuardU32.mutex)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@2 (_module.Object.universe this@@3)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@2 this@@3) _module.MutexGuardU32.data)))))
 :pattern ( (_module.MutexGuardU32.baseUserFieldsInv $Heap@@2 this@@3) ($IsGoodHeap $Heap@@2))
))))
(assert (forall ((a@@0 T@U) (x@@3 T@U) (y T@U) ) (!  (=> (|Set#IsMember| a@@0 y) (|Set#IsMember| (|Set#UnionOne| a@@0 x@@3) y))
 :pattern ( (|Set#UnionOne| a@@0 x@@3) (|Set#IsMember| a@@0 y))
)))
(assert (forall ((a@@1 T@U) (x@@4 T@U) (o T@U) ) (! (= (|Set#IsMember| (|Set#UnionOne| a@@1 x@@4) o)  (or (= o x@@4) (|Set#IsMember| a@@1 o)))
 :pattern ( (|Set#IsMember| (|Set#UnionOne| a@@1 x@@4) o))
)))
(assert  (=> (<= 6 $FunctionContextHeight) (forall (($Heap@@3 T@U) (this@@4 T@U) ) (!  (=> (or (|_module.Universe.globalBaseInv#canCall| $Heap@@3 this@@4) (and (< 6 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@3) (and (or (not (= this@@4 null)) (not true)) (and ($Is refType this@@4 Tclass._module.Universe) ($IsAlloc refType this@@4 Tclass._module.Universe $Heap@@3)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (forall ((|o#0@@0| T@U) ) (!  (=> ($Is refType |o#0@@0| Tclass._module.Object) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 this@@4) _module.Universe.content)) ($Box refType |o#0@@0|)) (=> (= (_module.Object.universe |o#0@@0|) this@@4) (=> (or (not (= |o#0@@0| this@@4)) (not true)) (and (|_module.Object.baseFieldsInv#canCall| $Heap@@3 |o#0@@0|) (=> (_module.Object.baseFieldsInv $Heap@@3 |o#0@@0|) (|_module.Object.triggerAxioms#canCall| $Heap@@3 |o#0@@0|)))))))
 :pattern ( (_module.Object.triggerAxioms $Heap@@3 |o#0@@0|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@3 |o#0@@0|))
 :pattern ( (_module.Object.universe |o#0@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 this@@4) _module.Universe.content)) ($Box refType |o#0@@0|)))
))) (= (_module.Universe.globalBaseInv $Heap@@3 this@@4)  (and true (forall ((|o#0@@1| T@U) ) (!  (=> (and ($Is refType |o#0@@1| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 this@@4) _module.Universe.content)) ($Box refType |o#0@@1|))) (and (and (and (= (_module.Object.universe |o#0@@1|) this@@4) (or (not (= |o#0@@1| this@@4)) (not true))) (_module.Object.baseFieldsInv $Heap@@3 |o#0@@1|)) (_module.Object.triggerAxioms $Heap@@3 |o#0@@1|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@@3 |o#0@@1|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@3 |o#0@@1|))
 :pattern ( (_module.Object.universe |o#0@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 this@@4) _module.Universe.content)) ($Box refType |o#0@@1|)))
))))))
 :pattern ( (_module.Universe.globalBaseInv $Heap@@3 this@@4) ($IsGoodHeap $Heap@@3))
))))
(assert (forall (($prevHeap@@2 T@U) ($h0@@0 T@U) ($h1@@0 T@U) (this@@5 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@0) ($IsGoodHeap $h1@@0)) (and (or (not (= this@@5 null)) (not true)) ($Is refType this@@5 Tclass._module.OwnedObject))) (and ($IsHeapAnchor $h0@@0) ($HeapSucc $h0@@0 $h1@@0))) (=> (forall (($o@@0 T@U) ($f@@0 T@U) )  (=> (and (or (not (= $o@@0 null)) (not true)) (= $o@@0 this@@5)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@0 $o@@0) $f@@0) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@0 $o@@0) $f@@0)))) (= (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@2 $h0@@0 this@@5) (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@2 $h1@@0 this@@5))))
 :pattern ( ($IsHeapAnchor $h0@@0) ($HeapSucc $h0@@0 $h1@@0) (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@2 $h1@@0 this@@5))
)))
(assert (forall (($prevHeap@@3 T@U) ($h0@@1 T@U) ($h1@@1 T@U) (this@@6 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@1) ($IsGoodHeap $h1@@1)) (and (or (not (= this@@6 null)) (not true)) ($Is refType this@@6 Tclass._module.OwnedObject))) (and ($IsHeapAnchor $h0@@1) ($HeapSucc $h0@@1 $h1@@1))) (=> (forall (($o@@1 T@U) ($f@@1 T@U) )  (=> (and (or (not (= $o@@1 null)) (not true)) (= $o@@1 this@@6)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@1 $o@@1) $f@@1) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@1 $o@@1) $f@@1)))) (= (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@3 $h0@@1 this@@6) (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@3 $h1@@1 this@@6))))
 :pattern ( ($IsHeapAnchor $h0@@1) ($HeapSucc $h0@@1 $h1@@1) (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@3 $h1@@1 this@@6))
)))
(assert (forall (($prevHeap@@4 T@U) ($h0@@2 T@U) ($h1@@2 T@U) (this@@7 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@2) ($IsGoodHeap $h1@@2)) (and (or (not (= this@@7 null)) (not true)) ($Is refType this@@7 Tclass._module.OwnedU32))) (and ($IsHeapAnchor $h0@@2) ($HeapSucc $h0@@2 $h1@@2))) (=> (forall (($o@@2 T@U) ($f@@2 T@U) )  (=> (and (or (not (= $o@@2 null)) (not true)) (= $o@@2 this@@7)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@2 $o@@2) $f@@2) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@2 $o@@2) $f@@2)))) (= (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@4 $h0@@2 this@@7) (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@4 $h1@@2 this@@7))))
 :pattern ( ($IsHeapAnchor $h0@@2) ($HeapSucc $h0@@2 $h1@@2) (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@4 $h1@@2 this@@7))
)))
(assert (forall (($prevHeap@@5 T@U) ($h0@@3 T@U) ($h1@@3 T@U) (this@@8 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@3) ($IsGoodHeap $h1@@3)) (and (or (not (= this@@8 null)) (not true)) ($Is refType this@@8 Tclass._module.Mutex))) (and ($IsHeapAnchor $h0@@3) ($HeapSucc $h0@@3 $h1@@3))) (=> (forall (($o@@3 T@U) ($f@@3 T@U) )  (=> (and (or (not (= $o@@3 null)) (not true)) (= $o@@3 this@@8)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@3 $o@@3) $f@@3) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@3 $o@@3) $f@@3)))) (= (_module.Mutex.unchangedNonvolatileUserFields $prevHeap@@5 $h0@@3 this@@8) (_module.Mutex.unchangedNonvolatileUserFields $prevHeap@@5 $h1@@3 this@@8))))
 :pattern ( ($IsHeapAnchor $h0@@3) ($HeapSucc $h0@@3 $h1@@3) (_module.Mutex.unchangedNonvolatileUserFields $prevHeap@@5 $h1@@3 this@@8))
)))
(assert (forall (($prevHeap@@6 T@U) ($h0@@4 T@U) ($h1@@4 T@U) (this@@9 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@4) ($IsGoodHeap $h1@@4)) (and (or (not (= this@@9 null)) (not true)) ($Is refType this@@9 Tclass._module.MutexGuardU32))) (and ($IsHeapAnchor $h0@@4) ($HeapSucc $h0@@4 $h1@@4))) (=> (forall (($o@@4 T@U) ($f@@4 T@U) )  (=> (and (or (not (= $o@@4 null)) (not true)) (= $o@@4 this@@9)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@4 $o@@4) $f@@4) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@4 $o@@4) $f@@4)))) (= (_module.MutexGuardU32.unchangedNonvolatileUserFields $prevHeap@@6 $h0@@4 this@@9) (_module.MutexGuardU32.unchangedNonvolatileUserFields $prevHeap@@6 $h1@@4 this@@9))))
 :pattern ( ($IsHeapAnchor $h0@@4) ($HeapSucc $h0@@4 $h1@@4) (_module.MutexGuardU32.unchangedNonvolatileUserFields $prevHeap@@6 $h1@@4 this@@9))
)))
(assert (implements$_module.Object Tclass._module.Thread?))
(assert (implements$_module.OwnedObject Tclass._module.OwnedU32?))
(assert (implements$_module.OwnedObject Tclass._module.Mutex?))
(assert (implements$_module.OwnedObject Tclass._module.MutexGuardU32?))
(assert (forall ((o@@0 T@U) ) (!  (not (|Set#IsMember| |Set#Empty| o@@0))
 :pattern ( (|Set#IsMember| |Set#Empty| o@@0))
)))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@4 T@U) (this@@10 T@U) ) (!  (=> (or (|_module.Mutex.userInv#canCall| $Heap@@4 this@@10) (and (< 9 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@4) (and (or (not (= this@@10 null)) (not true)) (and ($Is refType this@@10 Tclass._module.Mutex) ($IsAlloc refType this@@10 Tclass._module.Mutex $Heap@@4)))))) (and (and (|_module.Mutex.localUserInv#canCall| $Heap@@4 this@@10) (=> (_module.Mutex.localUserInv $Heap@@4 this@@10) (forall ((|g#0| T@U) ) (!  (=> ($Is refType |g#0| Tclass._module.MutexGuardU32) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@4 this@@10) _module.Mutex.guards)) ($Box refType |g#0|)) (|_module.OwnedObject.localInv#canCall| $Heap@@4 |g#0|)))
 :pattern ( (_module.OwnedObject.localInv $Heap@@4 |g#0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@4 this@@10) _module.Mutex.guards)) ($Box refType |g#0|)))
)))) (= (_module.Mutex.userInv $Heap@@4 this@@10)  (and (_module.Mutex.localUserInv $Heap@@4 this@@10) (forall ((|g#0@@0| T@U) ) (!  (=> (and ($Is refType |g#0@@0| Tclass._module.MutexGuardU32) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@4 this@@10) _module.Mutex.guards)) ($Box refType |g#0@@0|))) (_module.OwnedObject.localInv $Heap@@4 |g#0@@0|))
 :pattern ( (_module.OwnedObject.localInv $Heap@@4 |g#0@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@4 this@@10) _module.Mutex.guards)) ($Box refType |g#0@@0|)))
))))))
 :pattern ( (_module.Mutex.userInv $Heap@@4 this@@10) ($IsGoodHeap $Heap@@4))
))))
(assert  (=> (<= 13 $FunctionContextHeight) (forall (($Heap@@5 T@U) (this@@11 T@U) ) (!  (=> (or (|_module.Universe.globalInv#canCall| $Heap@@5 this@@11) (and (< 13 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@5) (and (or (not (= this@@11 null)) (not true)) (and ($Is refType this@@11 Tclass._module.Universe) ($IsAlloc refType this@@11 Tclass._module.Universe $Heap@@5)))))) (and (and (|_module.Universe.globalBaseInv#canCall| $Heap@@5 this@@11) (=> (_module.Universe.globalBaseInv $Heap@@5 this@@11) (forall ((|o#0@@2| T@U) ) (!  (=> ($Is refType |o#0@@2| Tclass._module.Object) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@5 this@@11) _module.Universe.content)) ($Box refType |o#0@@2|)) (|_module.Object.inv#canCall| $Heap@@5 |o#0@@2|)))
 :pattern ( (_module.Object.inv $Heap@@5 |o#0@@2|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@5 this@@11) _module.Universe.content)) ($Box refType |o#0@@2|)))
)))) (= (_module.Universe.globalInv $Heap@@5 this@@11)  (and (_module.Universe.globalBaseInv $Heap@@5 this@@11) (forall ((|o#0@@3| T@U) ) (!  (=> (and ($Is refType |o#0@@3| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@5 this@@11) _module.Universe.content)) ($Box refType |o#0@@3|))) (_module.Object.inv $Heap@@5 |o#0@@3|))
 :pattern ( (_module.Object.inv $Heap@@5 |o#0@@3|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@5 this@@11) _module.Universe.content)) ($Box refType |o#0@@3|)))
))))))
 :pattern ( (_module.Universe.globalInv $Heap@@5 this@@11) ($IsGoodHeap $Heap@@5))
))))
(assert (forall (($o@@5 T@U) ) (! (= ($Is refType $o@@5 Tclass._module.Thread?)  (or (= $o@@5 null) (= (dtype $o@@5) Tclass._module.Thread?)))
 :pattern ( ($Is refType $o@@5 Tclass._module.Thread?))
)))
(assert (forall (($o@@6 T@U) ) (! (= ($Is refType $o@@6 Tclass._module.OwnedU32?)  (or (= $o@@6 null) (= (dtype $o@@6) Tclass._module.OwnedU32?)))
 :pattern ( ($Is refType $o@@6 Tclass._module.OwnedU32?))
)))
(assert (forall (($o@@7 T@U) ) (! (= ($Is refType $o@@7 Tclass._module.Mutex?)  (or (= $o@@7 null) (= (dtype $o@@7) Tclass._module.Mutex?)))
 :pattern ( ($Is refType $o@@7 Tclass._module.Mutex?))
)))
(assert (forall (($o@@8 T@U) ) (! (= ($Is refType $o@@8 Tclass._module.MutexGuardU32?)  (or (= $o@@8 null) (= (dtype $o@@8) Tclass._module.MutexGuardU32?)))
 :pattern ( ($Is refType $o@@8 Tclass._module.MutexGuardU32?))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@6 T@U) (this@@12 T@U) ) (!  (=> (or (|_module.Mutex.localUserInv#canCall| $Heap@@6 this@@12) (and (< 1 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@6) (and (or (not (= this@@12 null)) (not true)) (and ($Is refType this@@12 Tclass._module.Mutex) ($IsAlloc refType this@@12 Tclass._module.Mutex $Heap@@6)))))) (= (_module.Mutex.localUserInv $Heap@@6 this@@12)  (and (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 this@@12) _module.Mutex.locked))) (and (and ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 this@@12) _module.Mutex.data))) _module.OwnedObject.owner)) Tclass._module.MutexGuardU32) (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 this@@12) _module.Mutex.data))) _module.OwnedObject.owner))) _module.MutexGuardU32.mutex)) this@@12)) (|Set#Equal| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 this@@12) _module.Mutex.guards)) (|Set#UnionOne| |Set#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 this@@12) _module.Mutex.data))) _module.OwnedObject.owner))))) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 this@@12) _module.Mutex.locked)))) (and (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 this@@12) _module.Mutex.data))) _module.OwnedObject.owner)) this@@12) (|Set#Equal| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 this@@12) _module.Mutex.guards)) |Set#Empty|))))))
 :pattern ( (_module.Mutex.localUserInv $Heap@@6 this@@12) ($IsGoodHeap $Heap@@6))
))))
(assert (forall (($prevHeap@@7 T@U) ($h0@@5 T@U) ($h1@@5 T@U) (this@@13 T@U) (|running#0@@0| T@U) ) (!  (=> (and (and (and (and ($IsGoodHeap $h0@@5) ($IsGoodHeap $h1@@5)) (and (or (not (= this@@13 null)) (not true)) (and ($Is refType this@@13 Tclass._module.Universe) ($IsAlloc refType this@@13 Tclass._module.Universe $h0@@5)))) (or (|_module.Universe.legalTransition#canCall| $prevHeap@@7 $h0@@5 this@@13 |running#0@@0|) (and ($Is refType |running#0@@0| Tclass._module.Thread) ($IsAlloc refType |running#0@@0| Tclass._module.Thread $h0@@5)))) (and ($IsHeapAnchor $h0@@5) ($HeapSucc $h0@@5 $h1@@5))) (=> (forall (($o@@9 T@U) ($f@@5 T@U) )  (=> (and (or (not (= $o@@9 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@5 $o@@9) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@5 $o@@9) $f@@5) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@5 $o@@9) $f@@5)))) (= (_module.Universe.legalTransition $prevHeap@@7 $h0@@5 this@@13 |running#0@@0|) (_module.Universe.legalTransition $prevHeap@@7 $h1@@5 this@@13 |running#0@@0|))))
 :pattern ( ($IsHeapAnchor $h0@@5) ($HeapSucc $h0@@5 $h1@@5) (_module.Universe.legalTransition $prevHeap@@7 $h1@@5 this@@13 |running#0@@0|))
)))
(assert (forall (($h T@U) ($o@@10 T@U) ) (!  (=> (and ($IsGoodHeap $h) (and (or (not (= $o@@10 null)) (not true)) ($Is refType $o@@10 Tclass._module.OwnedObject?))) ($Is intType ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h $o@@10) _module.OwnedObject.nonvolatileVersion)) TInt))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h $o@@10) _module.OwnedObject.nonvolatileVersion)))
)))
(assert (forall ((bx T@U) ($h@@0 T@U) ) (!  (=> (and ($IsAllocBox bx Tclass._module.Thread? $h@@0) ($IsGoodHeap $h@@0)) ($IsAllocBox bx Tclass._module.Object? $h@@0))
 :pattern ( ($IsAllocBox bx Tclass._module.Thread? $h@@0))
)))
(assert (forall ((bx@@0 T@U) ($h@@1 T@U) ) (!  (=> (and ($IsAllocBox bx@@0 Tclass._module.OwnedObject? $h@@1) ($IsGoodHeap $h@@1)) ($IsAllocBox bx@@0 Tclass._module.Object? $h@@1))
 :pattern ( ($IsAllocBox bx@@0 Tclass._module.OwnedObject? $h@@1))
)))
(assert (forall ((bx@@1 T@U) ($h@@2 T@U) ) (!  (=> (and ($IsAllocBox bx@@1 Tclass._module.OwnedU32? $h@@2) ($IsGoodHeap $h@@2)) ($IsAllocBox bx@@1 Tclass._module.OwnedObject? $h@@2))
 :pattern ( ($IsAllocBox bx@@1 Tclass._module.OwnedU32? $h@@2))
)))
(assert (forall ((bx@@2 T@U) ($h@@3 T@U) ) (!  (=> (and ($IsAllocBox bx@@2 Tclass._module.Mutex? $h@@3) ($IsGoodHeap $h@@3)) ($IsAllocBox bx@@2 Tclass._module.OwnedObject? $h@@3))
 :pattern ( ($IsAllocBox bx@@2 Tclass._module.Mutex? $h@@3))
)))
(assert (forall ((bx@@3 T@U) ($h@@4 T@U) ) (!  (=> (and ($IsAllocBox bx@@3 Tclass._module.MutexGuardU32? $h@@4) ($IsGoodHeap $h@@4)) ($IsAllocBox bx@@3 Tclass._module.OwnedObject? $h@@4))
 :pattern ( ($IsAllocBox bx@@3 Tclass._module.MutexGuardU32? $h@@4))
)))
(assert (forall ((|c#0| T@U) ($h@@5 T@U) ) (! (= ($IsAlloc refType |c#0| Tclass._module.Universe $h@@5) ($IsAlloc refType |c#0| Tclass._module.Universe? $h@@5))
 :pattern ( ($IsAlloc refType |c#0| Tclass._module.Universe $h@@5))
 :pattern ( ($IsAlloc refType |c#0| Tclass._module.Universe? $h@@5))
)))
(assert (forall ((|c#0@@0| T@U) ($h@@6 T@U) ) (! (= ($IsAlloc refType |c#0@@0| Tclass._module.Object $h@@6) ($IsAlloc refType |c#0@@0| Tclass._module.Object? $h@@6))
 :pattern ( ($IsAlloc refType |c#0@@0| Tclass._module.Object $h@@6))
 :pattern ( ($IsAlloc refType |c#0@@0| Tclass._module.Object? $h@@6))
)))
(assert (forall ((|c#0@@1| T@U) ($h@@7 T@U) ) (! (= ($IsAlloc refType |c#0@@1| Tclass._module.Thread $h@@7) ($IsAlloc refType |c#0@@1| Tclass._module.Thread? $h@@7))
 :pattern ( ($IsAlloc refType |c#0@@1| Tclass._module.Thread $h@@7))
 :pattern ( ($IsAlloc refType |c#0@@1| Tclass._module.Thread? $h@@7))
)))
(assert (forall ((|c#0@@2| T@U) ($h@@8 T@U) ) (! (= ($IsAlloc refType |c#0@@2| Tclass._module.OwnedObject $h@@8) ($IsAlloc refType |c#0@@2| Tclass._module.OwnedObject? $h@@8))
 :pattern ( ($IsAlloc refType |c#0@@2| Tclass._module.OwnedObject $h@@8))
 :pattern ( ($IsAlloc refType |c#0@@2| Tclass._module.OwnedObject? $h@@8))
)))
(assert (forall ((|c#0@@3| T@U) ($h@@9 T@U) ) (! (= ($IsAlloc refType |c#0@@3| Tclass._module.OwnedU32 $h@@9) ($IsAlloc refType |c#0@@3| Tclass._module.OwnedU32? $h@@9))
 :pattern ( ($IsAlloc refType |c#0@@3| Tclass._module.OwnedU32 $h@@9))
 :pattern ( ($IsAlloc refType |c#0@@3| Tclass._module.OwnedU32? $h@@9))
)))
(assert (forall ((|c#0@@4| T@U) ($h@@10 T@U) ) (! (= ($IsAlloc refType |c#0@@4| Tclass._module.Mutex $h@@10) ($IsAlloc refType |c#0@@4| Tclass._module.Mutex? $h@@10))
 :pattern ( ($IsAlloc refType |c#0@@4| Tclass._module.Mutex $h@@10))
 :pattern ( ($IsAlloc refType |c#0@@4| Tclass._module.Mutex? $h@@10))
)))
(assert (forall ((|c#0@@5| T@U) ($h@@11 T@U) ) (! (= ($IsAlloc refType |c#0@@5| Tclass._module.MutexGuardU32 $h@@11) ($IsAlloc refType |c#0@@5| Tclass._module.MutexGuardU32? $h@@11))
 :pattern ( ($IsAlloc refType |c#0@@5| Tclass._module.MutexGuardU32 $h@@11))
 :pattern ( ($IsAlloc refType |c#0@@5| Tclass._module.MutexGuardU32? $h@@11))
)))
(assert (= (FDim _module.OwnedObject.owner) 0))
(assert (= (FieldOfDecl class._module.OwnedObject? field$owner) _module.OwnedObject.owner))
(assert ($IsGhostField _module.OwnedObject.owner))
(assert (= (FDim _module.Mutex.guards) 0))
(assert (= (FieldOfDecl class._module.Mutex? field$guards) _module.Mutex.guards))
(assert ($IsGhostField _module.Mutex.guards))
(assert (= (FDim _module.OwnedObject.nonvolatileVersion) 0))
(assert (= (FieldOfDecl class._module.OwnedObject? field$nonvolatileVersion) _module.OwnedObject.nonvolatileVersion))
(assert ($IsGhostField _module.OwnedObject.nonvolatileVersion))
(assert (= (FDim _module.MutexGuardU32.data) 0))
(assert (= (FieldOfDecl class._module.MutexGuardU32? field$data) _module.MutexGuardU32.data))
(assert ($IsGhostField _module.MutexGuardU32.data))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap@@7 T@U) (this@@14 T@U) ) (!  (=> (or (|_module.OwnedU32.localUserInv#canCall| $Heap@@7 this@@14) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@14 null)) (not true)) ($Is refType this@@14 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.localUserInv $Heap@@7 this@@14) (_module.OwnedU32.localUserInv $Heap@@7 this@@14)))
 :pattern ( (_module.OwnedObject.localUserInv $Heap@@7 this@@14) ($Is refType this@@14 Tclass._module.OwnedU32) ($IsGoodHeap $Heap@@7))
 :pattern ( (_module.OwnedObject.localUserInv $Heap@@7 this@@14) (_module.OwnedU32.localUserInv $Heap@@7 this@@14) ($IsGoodHeap $Heap@@7))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap@@8 T@U) (this@@15 T@U) ) (!  (=> (or (|_module.MutexGuardU32.localUserInv#canCall| $Heap@@8 this@@15) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@15 null)) (not true)) ($Is refType this@@15 Tclass._module.MutexGuardU32)))) (= (_module.OwnedObject.localUserInv $Heap@@8 this@@15) (_module.MutexGuardU32.localUserInv $Heap@@8 this@@15)))
 :pattern ( (_module.OwnedObject.localUserInv $Heap@@8 this@@15) ($Is refType this@@15 Tclass._module.MutexGuardU32) ($IsGoodHeap $Heap@@8))
 :pattern ( (_module.OwnedObject.localUserInv $Heap@@8 this@@15) (_module.MutexGuardU32.localUserInv $Heap@@8 this@@15) ($IsGoodHeap $Heap@@8))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@9 T@U) (this@@16 T@U) ) (!  (=> (or (|_module.OwnedU32.userInv#canCall| $Heap@@9 this@@16) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@16 null)) (not true)) ($Is refType this@@16 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.userInv $Heap@@9 this@@16) (_module.OwnedU32.userInv $Heap@@9 this@@16)))
 :pattern ( (_module.OwnedObject.userInv $Heap@@9 this@@16) ($Is refType this@@16 Tclass._module.OwnedU32) ($IsGoodHeap $Heap@@9))
 :pattern ( (_module.OwnedObject.userInv $Heap@@9 this@@16) (_module.OwnedU32.userInv $Heap@@9 this@@16) ($IsGoodHeap $Heap@@9))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@10 T@U) (this@@17 T@U) ) (!  (=> (or (|_module.Mutex.localUserInv#canCall| $Heap@@10 this@@17) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@17 null)) (not true)) ($Is refType this@@17 Tclass._module.Mutex)))) (= (_module.OwnedObject.localUserInv $Heap@@10 this@@17) (_module.Mutex.localUserInv $Heap@@10 this@@17)))
 :pattern ( (_module.OwnedObject.localUserInv $Heap@@10 this@@17) ($Is refType this@@17 Tclass._module.Mutex) ($IsGoodHeap $Heap@@10))
 :pattern ( (_module.OwnedObject.localUserInv $Heap@@10 this@@17) (_module.Mutex.localUserInv $Heap@@10 this@@17) ($IsGoodHeap $Heap@@10))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@11 T@U) (this@@18 T@U) ) (!  (=> (or (|_module.Thread.baseFieldsInv#canCall| $Heap@@11 this@@18) (and (< 2 $FunctionContextHeight) (and (or (not (= this@@18 null)) (not true)) ($Is refType this@@18 Tclass._module.Thread)))) (= (_module.Object.baseFieldsInv $Heap@@11 this@@18) (_module.Thread.baseFieldsInv $Heap@@11 this@@18)))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@11 this@@18) ($Is refType this@@18 Tclass._module.Thread) ($IsGoodHeap $Heap@@11))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@11 this@@18) (_module.Thread.baseFieldsInv $Heap@@11 this@@18) ($IsGoodHeap $Heap@@11))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@12 T@U) (this@@19 T@U) ) (!  (=> (or (|_module.OwnedU32.baseUserFieldsInv#canCall| $Heap@@12 this@@19) (and (< 2 $FunctionContextHeight) (and (or (not (= this@@19 null)) (not true)) ($Is refType this@@19 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.baseUserFieldsInv $Heap@@12 this@@19) (_module.OwnedU32.baseUserFieldsInv $Heap@@12 this@@19)))
 :pattern ( (_module.OwnedObject.baseUserFieldsInv $Heap@@12 this@@19) ($Is refType this@@19 Tclass._module.OwnedU32) ($IsGoodHeap $Heap@@12))
 :pattern ( (_module.OwnedObject.baseUserFieldsInv $Heap@@12 this@@19) (_module.OwnedU32.baseUserFieldsInv $Heap@@12 this@@19) ($IsGoodHeap $Heap@@12))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@13 T@U) (this@@20 T@U) ) (!  (=> (or (|_module.Mutex.baseUserFieldsInv#canCall| $Heap@@13 this@@20) (and (< 2 $FunctionContextHeight) (and (or (not (= this@@20 null)) (not true)) ($Is refType this@@20 Tclass._module.Mutex)))) (= (_module.OwnedObject.baseUserFieldsInv $Heap@@13 this@@20) (_module.Mutex.baseUserFieldsInv $Heap@@13 this@@20)))
 :pattern ( (_module.OwnedObject.baseUserFieldsInv $Heap@@13 this@@20) ($Is refType this@@20 Tclass._module.Mutex) ($IsGoodHeap $Heap@@13))
 :pattern ( (_module.OwnedObject.baseUserFieldsInv $Heap@@13 this@@20) (_module.Mutex.baseUserFieldsInv $Heap@@13 this@@20) ($IsGoodHeap $Heap@@13))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@14 T@U) (this@@21 T@U) ) (!  (=> (or (|_module.MutexGuardU32.baseUserFieldsInv#canCall| $Heap@@14 this@@21) (and (< 2 $FunctionContextHeight) (and (or (not (= this@@21 null)) (not true)) ($Is refType this@@21 Tclass._module.MutexGuardU32)))) (= (_module.OwnedObject.baseUserFieldsInv $Heap@@14 this@@21) (_module.MutexGuardU32.baseUserFieldsInv $Heap@@14 this@@21)))
 :pattern ( (_module.OwnedObject.baseUserFieldsInv $Heap@@14 this@@21) ($Is refType this@@21 Tclass._module.MutexGuardU32) ($IsGoodHeap $Heap@@14))
 :pattern ( (_module.OwnedObject.baseUserFieldsInv $Heap@@14 this@@21) (_module.MutexGuardU32.baseUserFieldsInv $Heap@@14 this@@21) ($IsGoodHeap $Heap@@14))
))))
(assert  (=> (<= 4 $FunctionContextHeight) (forall (($Heap@@15 T@U) (this@@22 T@U) ) (!  (=> (or (|_module.OwnedObject.baseFieldsInv#canCall| $Heap@@15 this@@22) (and (< 4 $FunctionContextHeight) (and (or (not (= this@@22 null)) (not true)) ($Is refType this@@22 Tclass._module.OwnedObject)))) (= (_module.Object.baseFieldsInv $Heap@@15 this@@22) (_module.OwnedObject.baseFieldsInv $Heap@@15 this@@22)))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@15 this@@22) ($Is refType this@@22 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@15))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@15 this@@22) (_module.OwnedObject.baseFieldsInv $Heap@@15 this@@22) ($IsGoodHeap $Heap@@15))
))))
(assert  (=> (<= 8 $FunctionContextHeight) (forall (($Heap@@16 T@U) (this@@23 T@U) ) (!  (=> (or (|_module.Thread.localInv#canCall| $Heap@@16 this@@23) (and (< 8 $FunctionContextHeight) (and (or (not (= this@@23 null)) (not true)) ($Is refType this@@23 Tclass._module.Thread)))) (= (_module.Object.localInv $Heap@@16 this@@23) (_module.Thread.localInv $Heap@@16 this@@23)))
 :pattern ( (_module.Object.localInv $Heap@@16 this@@23) ($Is refType this@@23 Tclass._module.Thread) ($IsGoodHeap $Heap@@16))
 :pattern ( (_module.Object.localInv $Heap@@16 this@@23) (_module.Thread.localInv $Heap@@16 this@@23) ($IsGoodHeap $Heap@@16))
))))
(assert  (=> (<= 8 $FunctionContextHeight) (forall (($Heap@@17 T@U) (this@@24 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv#canCall| $Heap@@17 this@@24) (and (< 8 $FunctionContextHeight) (and (or (not (= this@@24 null)) (not true)) ($Is refType this@@24 Tclass._module.OwnedObject)))) (= (_module.Object.localInv $Heap@@17 this@@24) (_module.OwnedObject.localInv $Heap@@17 this@@24)))
 :pattern ( (_module.Object.localInv $Heap@@17 this@@24) ($Is refType this@@24 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@17))
 :pattern ( (_module.Object.localInv $Heap@@17 this@@24) (_module.OwnedObject.localInv $Heap@@17 this@@24) ($IsGoodHeap $Heap@@17))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@18 T@U) (this@@25 T@U) ) (!  (=> (or (|_module.Thread.inv#canCall| $Heap@@18 this@@25) (and (< 9 $FunctionContextHeight) (and (or (not (= this@@25 null)) (not true)) ($Is refType this@@25 Tclass._module.Thread)))) (= (_module.Object.inv $Heap@@18 this@@25) (_module.Thread.inv $Heap@@18 this@@25)))
 :pattern ( (_module.Object.inv $Heap@@18 this@@25) ($Is refType this@@25 Tclass._module.Thread) ($IsGoodHeap $Heap@@18))
 :pattern ( (_module.Object.inv $Heap@@18 this@@25) (_module.Thread.inv $Heap@@18 this@@25) ($IsGoodHeap $Heap@@18))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@19 T@U) (this@@26 T@U) ) (!  (=> (or (|_module.Mutex.userInv#canCall| $Heap@@19 this@@26) (and (< 9 $FunctionContextHeight) (and (or (not (= this@@26 null)) (not true)) ($Is refType this@@26 Tclass._module.Mutex)))) (= (_module.OwnedObject.userInv $Heap@@19 this@@26) (_module.Mutex.userInv $Heap@@19 this@@26)))
 :pattern ( (_module.OwnedObject.userInv $Heap@@19 this@@26) ($Is refType this@@26 Tclass._module.Mutex) ($IsGoodHeap $Heap@@19))
 :pattern ( (_module.OwnedObject.userInv $Heap@@19 this@@26) (_module.Mutex.userInv $Heap@@19 this@@26) ($IsGoodHeap $Heap@@19))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@20 T@U) (this@@27 T@U) ) (!  (=> (or (|_module.MutexGuardU32.userInv#canCall| $Heap@@20 this@@27) (and (< 9 $FunctionContextHeight) (and (or (not (= this@@27 null)) (not true)) ($Is refType this@@27 Tclass._module.MutexGuardU32)))) (= (_module.OwnedObject.userInv $Heap@@20 this@@27) (_module.MutexGuardU32.userInv $Heap@@20 this@@27)))
 :pattern ( (_module.OwnedObject.userInv $Heap@@20 this@@27) ($Is refType this@@27 Tclass._module.MutexGuardU32) ($IsGoodHeap $Heap@@20))
 :pattern ( (_module.OwnedObject.userInv $Heap@@20 this@@27) (_module.MutexGuardU32.userInv $Heap@@20 this@@27) ($IsGoodHeap $Heap@@20))
))))
(assert  (=> (<= 11 $FunctionContextHeight) (forall (($Heap@@21 T@U) (this@@28 T@U) ) (!  (=> (or (|_module.OwnedObject.inv#canCall| $Heap@@21 this@@28) (and (< 11 $FunctionContextHeight) (and (or (not (= this@@28 null)) (not true)) ($Is refType this@@28 Tclass._module.OwnedObject)))) (= (_module.Object.inv $Heap@@21 this@@28) (_module.OwnedObject.inv $Heap@@21 this@@28)))
 :pattern ( (_module.Object.inv $Heap@@21 this@@28) ($Is refType this@@28 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@21))
 :pattern ( (_module.Object.inv $Heap@@21 this@@28) (_module.OwnedObject.inv $Heap@@21 this@@28) ($IsGoodHeap $Heap@@21))
))))
(assert (= (FDim _module.Universe.content) 0))
(assert (= (FieldOfDecl class._module.Universe? field$content) _module.Universe.content))
(assert  (not ($IsGhostField _module.Universe.content)))
(assert (= (FDim _module.MutexGuardU32.mutex) 0))
(assert (= (FieldOfDecl class._module.MutexGuardU32? field$mutex) _module.MutexGuardU32.mutex))
(assert  (not ($IsGhostField _module.MutexGuardU32.mutex)))
(assert (= (FDim _module.Mutex.locked) 0))
(assert (= (FieldOfDecl class._module.Mutex? field$locked) _module.Mutex.locked))
(assert  (not ($IsGhostField _module.Mutex.locked)))
(assert (= (FDim _module.Mutex.data) 0))
(assert (= (FieldOfDecl class._module.Mutex? field$data) _module.Mutex.data))
(assert  (not ($IsGhostField _module.Mutex.data)))
(assert (= (FDim _module.OwnedU32.value) 0))
(assert (= (FieldOfDecl class._module.OwnedU32? field$value) _module.OwnedU32.value))
(assert  (not ($IsGhostField _module.OwnedU32.value)))
(assert  (=> (<= 8 $FunctionContextHeight) (forall (($prevHeap@@8 T@U) ($Heap@@22 T@U) (this@@29 T@U) (|running#0@@1| T@U) ) (!  (=> (or (|_module.Universe.legalTransitionsSequence#canCall| $prevHeap@@8 $Heap@@22 this@@29 |running#0@@1|) (and (< 8 $FunctionContextHeight) (and (and (and (and ($IsGoodHeap $prevHeap@@8) ($IsGoodHeap $Heap@@22)) ($HeapSucc $prevHeap@@8 $Heap@@22)) (and (or (not (= this@@29 null)) (not true)) (and ($Is refType this@@29 Tclass._module.Universe) ($IsAlloc refType this@@29 Tclass._module.Universe $prevHeap@@8)))) ($Is SetType |running#0@@1| (TSet Tclass._module.Thread))))) (and (and (|_module.Universe.baseLegalTransitionsSequence#canCall| $prevHeap@@8 $Heap@@22 this@@29) (=> (_module.Universe.baseLegalTransitionsSequence $prevHeap@@8 $Heap@@22 this@@29) (forall ((|o#0@@4| T@U) ) (!  (=> ($Is refType |o#0@@4| Tclass._module.Object) (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 this@@29) _module.Universe.content)) ($Box refType |o#0@@4|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@22 this@@29) _module.Universe.content)) ($Box refType |o#0@@4|))) (=> (not (forall (($o@@11 T@U) ($f@@6 T@U) ) (!  (=> (or (not (= $o@@11 null)) (not true)) (=> (= $o@@11 |o#0@@4|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@22 $o@@11) $f@@6) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 $o@@11) $f@@6))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@22 $o@@11) $f@@6))
))) (|_module.Object.sequenceInv2#canCall| $prevHeap@@8 $Heap@@22 |o#0@@4|))))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@8 $Heap@@22 |o#0@@4|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@22 this@@29) _module.Universe.content)) ($Box refType |o#0@@4|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 this@@29) _module.Universe.content)) ($Box refType |o#0@@4|)))
)))) (= (_module.Universe.legalTransitionsSequence $prevHeap@@8 $Heap@@22 this@@29 |running#0@@1|)  (and (and (_module.Universe.baseLegalTransitionsSequence $prevHeap@@8 $Heap@@22 this@@29) (forall ((|o#0@@5| T@U) ) (!  (=> (and ($Is refType |o#0@@5| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 this@@29) _module.Universe.content)) ($Box refType |o#0@@5|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@22 this@@29) _module.Universe.content)) ($Box refType |o#0@@5|)))) (or (forall (($o@@12 T@U) ($f@@7 T@U) ) (!  (=> (or (not (= $o@@12 null)) (not true)) (=> (= $o@@12 |o#0@@5|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@22 $o@@12) $f@@7) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 $o@@12) $f@@7))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@22 $o@@12) $f@@7))
)) (_module.Object.sequenceInv2 $prevHeap@@8 $Heap@@22 |o#0@@5|)))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@8 $Heap@@22 |o#0@@5|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@22 this@@29) _module.Universe.content)) ($Box refType |o#0@@5|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 this@@29) _module.Universe.content)) ($Box refType |o#0@@5|)))
))) (forall ((|o#1| T@U) ) (!  (=> (and ($Is refType |o#1| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 this@@29) _module.Universe.content)) ($Box refType |o#1|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 |o#1|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (and (not (|Set#IsMember| |running#0@@1| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 |o#1|) _module.OwnedObject.owner))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 |o#1|) _module.OwnedObject.owner) Tclass._module.Object $prevHeap@@8)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 |o#1|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@22 |o#1|) _module.OwnedObject.nonvolatileVersion))))))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@22 |o#1|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 |o#1|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 |o#1|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@8 this@@29) _module.Universe.content)) ($Box refType |o#1|)))
))))))
 :pattern ( (_module.Universe.legalTransitionsSequence $prevHeap@@8 $Heap@@22 this@@29 |running#0@@1|) ($IsGoodHeap $Heap@@22))
))))
(assert (forall (($prevHeap@@9 T@U) ($h0@@6 T@U) ($h1@@6 T@U) (this@@30 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@6) ($IsGoodHeap $h1@@6)) (and (or (not (= this@@30 null)) (not true)) (and ($Is refType this@@30 Tclass._module.Universe) ($IsAlloc refType this@@30 Tclass._module.Universe $h0@@6)))) (and ($IsHeapAnchor $h0@@6) ($HeapSucc $h0@@6 $h1@@6))) (=> (forall (($o@@13 T@U) ($f@@8 T@U) )  (=> (and (or (not (= $o@@13 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@6 $o@@13) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@6 $o@@13) $f@@8) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@6 $o@@13) $f@@8)))) (= (_module.Universe.globalSequenceInv2 $prevHeap@@9 $h0@@6 this@@30) (_module.Universe.globalSequenceInv2 $prevHeap@@9 $h1@@6 this@@30))))
 :pattern ( ($IsHeapAnchor $h0@@6) ($HeapSucc $h0@@6 $h1@@6) (_module.Universe.globalSequenceInv2 $prevHeap@@9 $h1@@6 this@@30))
)))
(assert (forall (($prevHeap@@10 T@U) ($h0@@7 T@U) ($h1@@7 T@U) (this@@31 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@7) ($IsGoodHeap $h1@@7)) (and (or (not (= this@@31 null)) (not true)) (and ($Is refType this@@31 Tclass._module.Universe) ($IsAlloc refType this@@31 Tclass._module.Universe $h0@@7)))) (and ($IsHeapAnchor $h0@@7) ($HeapSucc $h0@@7 $h1@@7))) (=> (forall (($o@@14 T@U) ($f@@9 T@U) )  (=> (and (or (not (= $o@@14 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@7 $o@@14) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@7 $o@@14) $f@@9) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@7 $o@@14) $f@@9)))) (= (_module.Universe.globalInv2 $prevHeap@@10 $h0@@7 this@@31) (_module.Universe.globalInv2 $prevHeap@@10 $h1@@7 this@@31))))
 :pattern ( ($IsHeapAnchor $h0@@7) ($HeapSucc $h0@@7 $h1@@7) (_module.Universe.globalInv2 $prevHeap@@10 $h1@@7 this@@31))
)))
(assert (forall (($prevHeap@@11 T@U) ($h0@@8 T@U) ($h1@@8 T@U) (this@@32 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@8) ($IsGoodHeap $h1@@8)) (and (or (not (= this@@32 null)) (not true)) (and ($Is refType this@@32 Tclass._module.Universe) ($IsAlloc refType this@@32 Tclass._module.Universe $h0@@8)))) (and ($IsHeapAnchor $h0@@8) ($HeapSucc $h0@@8 $h1@@8))) (=> (forall (($o@@15 T@U) ($f@@10 T@U) )  (=> (and (or (not (= $o@@15 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@8 $o@@15) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@8 $o@@15) $f@@10) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@8 $o@@15) $f@@10)))) (= (_module.Universe.baseLegalTransitionsSequence $prevHeap@@11 $h0@@8 this@@32) (_module.Universe.baseLegalTransitionsSequence $prevHeap@@11 $h1@@8 this@@32))))
 :pattern ( ($IsHeapAnchor $h0@@8) ($HeapSucc $h0@@8 $h1@@8) (_module.Universe.baseLegalTransitionsSequence $prevHeap@@11 $h1@@8 this@@32))
)))
(assert (forall (($prevHeap@@12 T@U) ($h0@@9 T@U) ($h1@@9 T@U) (this@@33 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@9) ($IsGoodHeap $h1@@9)) (and (or (not (= this@@33 null)) (not true)) (and ($Is refType this@@33 Tclass._module.Object) ($IsAlloc refType this@@33 Tclass._module.Object $h0@@9)))) (and ($IsHeapAnchor $h0@@9) ($HeapSucc $h0@@9 $h1@@9))) (=> (forall (($o@@16 T@U) ($f@@11 T@U) )  (=> (and (or (not (= $o@@16 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@9 $o@@16) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@9 $o@@16) $f@@11) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@9 $o@@16) $f@@11)))) (= (_module.Object.localInv2 $prevHeap@@12 $h0@@9 this@@33) (_module.Object.localInv2 $prevHeap@@12 $h1@@9 this@@33))))
 :pattern ( ($IsHeapAnchor $h0@@9) ($HeapSucc $h0@@9 $h1@@9) (_module.Object.localInv2 $prevHeap@@12 $h1@@9 this@@33))
)))
(assert (forall (($prevHeap@@13 T@U) ($h0@@10 T@U) ($h1@@10 T@U) (this@@34 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@10) ($IsGoodHeap $h1@@10)) (and (or (not (= this@@34 null)) (not true)) (and ($Is refType this@@34 Tclass._module.Object) ($IsAlloc refType this@@34 Tclass._module.Object $h0@@10)))) (and ($IsHeapAnchor $h0@@10) ($HeapSucc $h0@@10 $h1@@10))) (=> (forall (($o@@17 T@U) ($f@@12 T@U) )  (=> (and (or (not (= $o@@17 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@10 $o@@17) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@10 $o@@17) $f@@12) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@10 $o@@17) $f@@12)))) (= (_module.Object.sequenceInv2 $prevHeap@@13 $h0@@10 this@@34) (_module.Object.sequenceInv2 $prevHeap@@13 $h1@@10 this@@34))))
 :pattern ( ($IsHeapAnchor $h0@@10) ($HeapSucc $h0@@10 $h1@@10) (_module.Object.sequenceInv2 $prevHeap@@13 $h1@@10 this@@34))
)))
(assert (forall (($prevHeap@@14 T@U) ($h0@@11 T@U) ($h1@@11 T@U) (this@@35 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@11) ($IsGoodHeap $h1@@11)) (and (or (not (= this@@35 null)) (not true)) (and ($Is refType this@@35 Tclass._module.Object) ($IsAlloc refType this@@35 Tclass._module.Object $h0@@11)))) (and ($IsHeapAnchor $h0@@11) ($HeapSucc $h0@@11 $h1@@11))) (=> (forall (($o@@18 T@U) ($f@@13 T@U) )  (=> (and (or (not (= $o@@18 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@11 $o@@18) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@11 $o@@18) $f@@13) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@11 $o@@18) $f@@13)))) (= (_module.Object.inv2 $prevHeap@@14 $h0@@11 this@@35) (_module.Object.inv2 $prevHeap@@14 $h1@@11 this@@35))))
 :pattern ( ($IsHeapAnchor $h0@@11) ($HeapSucc $h0@@11 $h1@@11) (_module.Object.inv2 $prevHeap@@14 $h1@@11 this@@35))
)))
(assert (forall (($prevHeap@@15 T@U) ($h0@@12 T@U) ($h1@@12 T@U) (this@@36 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@12) ($IsGoodHeap $h1@@12)) (and (or (not (= this@@36 null)) (not true)) (and ($Is refType this@@36 Tclass._module.Thread) ($IsAlloc refType this@@36 Tclass._module.Thread $h0@@12)))) (and ($IsHeapAnchor $h0@@12) ($HeapSucc $h0@@12 $h1@@12))) (=> (forall (($o@@19 T@U) ($f@@14 T@U) )  (=> (and (or (not (= $o@@19 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@12 $o@@19) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@12 $o@@19) $f@@14) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@12 $o@@19) $f@@14)))) (= (_module.Thread.localInv2 $prevHeap@@15 $h0@@12 this@@36) (_module.Thread.localInv2 $prevHeap@@15 $h1@@12 this@@36))))
 :pattern ( ($IsHeapAnchor $h0@@12) ($HeapSucc $h0@@12 $h1@@12) (_module.Thread.localInv2 $prevHeap@@15 $h1@@12 this@@36))
)))
(assert (forall (($prevHeap@@16 T@U) ($h0@@13 T@U) ($h1@@13 T@U) (this@@37 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@13) ($IsGoodHeap $h1@@13)) (and (or (not (= this@@37 null)) (not true)) (and ($Is refType this@@37 Tclass._module.Thread) ($IsAlloc refType this@@37 Tclass._module.Thread $h0@@13)))) (and ($IsHeapAnchor $h0@@13) ($HeapSucc $h0@@13 $h1@@13))) (=> (forall (($o@@20 T@U) ($f@@15 T@U) )  (=> (and (or (not (= $o@@20 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@13 $o@@20) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@13 $o@@20) $f@@15) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@13 $o@@20) $f@@15)))) (= (_module.Thread.sequenceInv2 $prevHeap@@16 $h0@@13 this@@37) (_module.Thread.sequenceInv2 $prevHeap@@16 $h1@@13 this@@37))))
 :pattern ( ($IsHeapAnchor $h0@@13) ($HeapSucc $h0@@13 $h1@@13) (_module.Thread.sequenceInv2 $prevHeap@@16 $h1@@13 this@@37))
)))
(assert (forall (($prevHeap@@17 T@U) ($h0@@14 T@U) ($h1@@14 T@U) (this@@38 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@14) ($IsGoodHeap $h1@@14)) (and (or (not (= this@@38 null)) (not true)) (and ($Is refType this@@38 Tclass._module.Thread) ($IsAlloc refType this@@38 Tclass._module.Thread $h0@@14)))) (and ($IsHeapAnchor $h0@@14) ($HeapSucc $h0@@14 $h1@@14))) (=> (forall (($o@@21 T@U) ($f@@16 T@U) )  (=> (and (or (not (= $o@@21 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@14 $o@@21) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@14 $o@@21) $f@@16) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@14 $o@@21) $f@@16)))) (= (_module.Thread.inv2 $prevHeap@@17 $h0@@14 this@@38) (_module.Thread.inv2 $prevHeap@@17 $h1@@14 this@@38))))
 :pattern ( ($IsHeapAnchor $h0@@14) ($HeapSucc $h0@@14 $h1@@14) (_module.Thread.inv2 $prevHeap@@17 $h1@@14 this@@38))
)))
(assert (forall (($prevHeap@@18 T@U) ($h0@@15 T@U) ($h1@@15 T@U) (this@@39 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@15) ($IsGoodHeap $h1@@15)) (and (or (not (= this@@39 null)) (not true)) (and ($Is refType this@@39 Tclass._module.OwnedObject) ($IsAlloc refType this@@39 Tclass._module.OwnedObject $h0@@15)))) (and ($IsHeapAnchor $h0@@15) ($HeapSucc $h0@@15 $h1@@15))) (=> (forall (($o@@22 T@U) ($f@@17 T@U) )  (=> (and (or (not (= $o@@22 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@15 $o@@22) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@15 $o@@22) $f@@17) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@15 $o@@22) $f@@17)))) (= (_module.OwnedObject.localInv2 $prevHeap@@18 $h0@@15 this@@39) (_module.OwnedObject.localInv2 $prevHeap@@18 $h1@@15 this@@39))))
 :pattern ( ($IsHeapAnchor $h0@@15) ($HeapSucc $h0@@15 $h1@@15) (_module.OwnedObject.localInv2 $prevHeap@@18 $h1@@15 this@@39))
)))
(assert (forall (($prevHeap@@19 T@U) ($h0@@16 T@U) ($h1@@16 T@U) (this@@40 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@16) ($IsGoodHeap $h1@@16)) (and (or (not (= this@@40 null)) (not true)) (and ($Is refType this@@40 Tclass._module.OwnedObject) ($IsAlloc refType this@@40 Tclass._module.OwnedObject $h0@@16)))) (and ($IsHeapAnchor $h0@@16) ($HeapSucc $h0@@16 $h1@@16))) (=> (forall (($o@@23 T@U) ($f@@18 T@U) )  (=> (and (or (not (= $o@@23 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@16 $o@@23) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@16 $o@@23) $f@@18) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@16 $o@@23) $f@@18)))) (= (_module.OwnedObject.sequenceInv2 $prevHeap@@19 $h0@@16 this@@40) (_module.OwnedObject.sequenceInv2 $prevHeap@@19 $h1@@16 this@@40))))
 :pattern ( ($IsHeapAnchor $h0@@16) ($HeapSucc $h0@@16 $h1@@16) (_module.OwnedObject.sequenceInv2 $prevHeap@@19 $h1@@16 this@@40))
)))
(assert (forall (($prevHeap@@20 T@U) ($h0@@17 T@U) ($h1@@17 T@U) (this@@41 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@17) ($IsGoodHeap $h1@@17)) (and (or (not (= this@@41 null)) (not true)) (and ($Is refType this@@41 Tclass._module.OwnedObject) ($IsAlloc refType this@@41 Tclass._module.OwnedObject $h0@@17)))) (and ($IsHeapAnchor $h0@@17) ($HeapSucc $h0@@17 $h1@@17))) (=> (forall (($o@@24 T@U) ($f@@19 T@U) )  (=> (and (or (not (= $o@@24 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@17 $o@@24) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@17 $o@@24) $f@@19) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@17 $o@@24) $f@@19)))) (= (_module.OwnedObject.inv2 $prevHeap@@20 $h0@@17 this@@41) (_module.OwnedObject.inv2 $prevHeap@@20 $h1@@17 this@@41))))
 :pattern ( ($IsHeapAnchor $h0@@17) ($HeapSucc $h0@@17 $h1@@17) (_module.OwnedObject.inv2 $prevHeap@@20 $h1@@17 this@@41))
)))
(assert (forall (($prevHeap@@21 T@U) ($h0@@18 T@U) ($h1@@18 T@U) (this@@42 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@18) ($IsGoodHeap $h1@@18)) (and (or (not (= this@@42 null)) (not true)) (and ($Is refType this@@42 Tclass._module.OwnedObject) ($IsAlloc refType this@@42 Tclass._module.OwnedObject $h0@@18)))) (and ($IsHeapAnchor $h0@@18) ($HeapSucc $h0@@18 $h1@@18))) (=> (forall (($o@@25 T@U) ($f@@20 T@U) )  (=> (and (or (not (= $o@@25 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@18 $o@@25) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@18 $o@@25) $f@@20) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@18 $o@@25) $f@@20)))) (= (_module.OwnedObject.localUserInv2 $prevHeap@@21 $h0@@18 this@@42) (_module.OwnedObject.localUserInv2 $prevHeap@@21 $h1@@18 this@@42))))
 :pattern ( ($IsHeapAnchor $h0@@18) ($HeapSucc $h0@@18 $h1@@18) (_module.OwnedObject.localUserInv2 $prevHeap@@21 $h1@@18 this@@42))
)))
(assert (forall (($prevHeap@@22 T@U) ($h0@@19 T@U) ($h1@@19 T@U) (this@@43 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@19) ($IsGoodHeap $h1@@19)) (and (or (not (= this@@43 null)) (not true)) (and ($Is refType this@@43 Tclass._module.OwnedObject) ($IsAlloc refType this@@43 Tclass._module.OwnedObject $h0@@19)))) (and ($IsHeapAnchor $h0@@19) ($HeapSucc $h0@@19 $h1@@19))) (=> (forall (($o@@26 T@U) ($f@@21 T@U) )  (=> (and (or (not (= $o@@26 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@19 $o@@26) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@19 $o@@26) $f@@21) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@19 $o@@26) $f@@21)))) (= (_module.OwnedObject.userInv2 $prevHeap@@22 $h0@@19 this@@43) (_module.OwnedObject.userInv2 $prevHeap@@22 $h1@@19 this@@43))))
 :pattern ( ($IsHeapAnchor $h0@@19) ($HeapSucc $h0@@19 $h1@@19) (_module.OwnedObject.userInv2 $prevHeap@@22 $h1@@19 this@@43))
)))
(assert (forall (($prevHeap@@23 T@U) ($h0@@20 T@U) ($h1@@20 T@U) (this@@44 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@20) ($IsGoodHeap $h1@@20)) (and (or (not (= this@@44 null)) (not true)) (and ($Is refType this@@44 Tclass._module.OwnedU32) ($IsAlloc refType this@@44 Tclass._module.OwnedU32 $h0@@20)))) (and ($IsHeapAnchor $h0@@20) ($HeapSucc $h0@@20 $h1@@20))) (=> (forall (($o@@27 T@U) ($f@@22 T@U) )  (=> (and (or (not (= $o@@27 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@20 $o@@27) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@20 $o@@27) $f@@22) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@20 $o@@27) $f@@22)))) (= (_module.OwnedU32.localUserInv2 $prevHeap@@23 $h0@@20 this@@44) (_module.OwnedU32.localUserInv2 $prevHeap@@23 $h1@@20 this@@44))))
 :pattern ( ($IsHeapAnchor $h0@@20) ($HeapSucc $h0@@20 $h1@@20) (_module.OwnedU32.localUserInv2 $prevHeap@@23 $h1@@20 this@@44))
)))
(assert (forall (($prevHeap@@24 T@U) ($h0@@21 T@U) ($h1@@21 T@U) (this@@45 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@21) ($IsGoodHeap $h1@@21)) (and (or (not (= this@@45 null)) (not true)) (and ($Is refType this@@45 Tclass._module.OwnedU32) ($IsAlloc refType this@@45 Tclass._module.OwnedU32 $h0@@21)))) (and ($IsHeapAnchor $h0@@21) ($HeapSucc $h0@@21 $h1@@21))) (=> (forall (($o@@28 T@U) ($f@@23 T@U) )  (=> (and (or (not (= $o@@28 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@21 $o@@28) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@21 $o@@28) $f@@23) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@21 $o@@28) $f@@23)))) (= (_module.OwnedU32.userInv2 $prevHeap@@24 $h0@@21 this@@45) (_module.OwnedU32.userInv2 $prevHeap@@24 $h1@@21 this@@45))))
 :pattern ( ($IsHeapAnchor $h0@@21) ($HeapSucc $h0@@21 $h1@@21) (_module.OwnedU32.userInv2 $prevHeap@@24 $h1@@21 this@@45))
)))
(assert (forall (($prevHeap@@25 T@U) ($h0@@22 T@U) ($h1@@22 T@U) (this@@46 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@22) ($IsGoodHeap $h1@@22)) (and (or (not (= this@@46 null)) (not true)) (and ($Is refType this@@46 Tclass._module.Mutex) ($IsAlloc refType this@@46 Tclass._module.Mutex $h0@@22)))) (and ($IsHeapAnchor $h0@@22) ($HeapSucc $h0@@22 $h1@@22))) (=> (forall (($o@@29 T@U) ($f@@24 T@U) )  (=> (and (or (not (= $o@@29 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@22 $o@@29) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@22 $o@@29) $f@@24) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@22 $o@@29) $f@@24)))) (= (_module.Mutex.localUserInv2 $prevHeap@@25 $h0@@22 this@@46) (_module.Mutex.localUserInv2 $prevHeap@@25 $h1@@22 this@@46))))
 :pattern ( ($IsHeapAnchor $h0@@22) ($HeapSucc $h0@@22 $h1@@22) (_module.Mutex.localUserInv2 $prevHeap@@25 $h1@@22 this@@46))
)))
(assert (forall (($prevHeap@@26 T@U) ($h0@@23 T@U) ($h1@@23 T@U) (this@@47 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@23) ($IsGoodHeap $h1@@23)) (and (or (not (= this@@47 null)) (not true)) (and ($Is refType this@@47 Tclass._module.Mutex) ($IsAlloc refType this@@47 Tclass._module.Mutex $h0@@23)))) (and ($IsHeapAnchor $h0@@23) ($HeapSucc $h0@@23 $h1@@23))) (=> (forall (($o@@30 T@U) ($f@@25 T@U) )  (=> (and (or (not (= $o@@30 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@23 $o@@30) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@23 $o@@30) $f@@25) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@23 $o@@30) $f@@25)))) (= (_module.Mutex.userInv2 $prevHeap@@26 $h0@@23 this@@47) (_module.Mutex.userInv2 $prevHeap@@26 $h1@@23 this@@47))))
 :pattern ( ($IsHeapAnchor $h0@@23) ($HeapSucc $h0@@23 $h1@@23) (_module.Mutex.userInv2 $prevHeap@@26 $h1@@23 this@@47))
)))
(assert (forall (($prevHeap@@27 T@U) ($h0@@24 T@U) ($h1@@24 T@U) (this@@48 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@24) ($IsGoodHeap $h1@@24)) (and (or (not (= this@@48 null)) (not true)) (and ($Is refType this@@48 Tclass._module.MutexGuardU32) ($IsAlloc refType this@@48 Tclass._module.MutexGuardU32 $h0@@24)))) (and ($IsHeapAnchor $h0@@24) ($HeapSucc $h0@@24 $h1@@24))) (=> (forall (($o@@31 T@U) ($f@@26 T@U) )  (=> (and (or (not (= $o@@31 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@24 $o@@31) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@24 $o@@31) $f@@26) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@24 $o@@31) $f@@26)))) (= (_module.MutexGuardU32.localUserInv2 $prevHeap@@27 $h0@@24 this@@48) (_module.MutexGuardU32.localUserInv2 $prevHeap@@27 $h1@@24 this@@48))))
 :pattern ( ($IsHeapAnchor $h0@@24) ($HeapSucc $h0@@24 $h1@@24) (_module.MutexGuardU32.localUserInv2 $prevHeap@@27 $h1@@24 this@@48))
)))
(assert (forall (($prevHeap@@28 T@U) ($h0@@25 T@U) ($h1@@25 T@U) (this@@49 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@25) ($IsGoodHeap $h1@@25)) (and (or (not (= this@@49 null)) (not true)) (and ($Is refType this@@49 Tclass._module.MutexGuardU32) ($IsAlloc refType this@@49 Tclass._module.MutexGuardU32 $h0@@25)))) (and ($IsHeapAnchor $h0@@25) ($HeapSucc $h0@@25 $h1@@25))) (=> (forall (($o@@32 T@U) ($f@@27 T@U) )  (=> (and (or (not (= $o@@32 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@25 $o@@32) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@25 $o@@32) $f@@27) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@25 $o@@32) $f@@27)))) (= (_module.MutexGuardU32.userInv2 $prevHeap@@28 $h0@@25 this@@49) (_module.MutexGuardU32.userInv2 $prevHeap@@28 $h1@@25 this@@49))))
 :pattern ( ($IsHeapAnchor $h0@@25) ($HeapSucc $h0@@25 $h1@@25) (_module.MutexGuardU32.userInv2 $prevHeap@@28 $h1@@25 this@@49))
)))
(assert (forall (($o@@33 T@U) ($h@@12 T@U) ) (! (= ($IsAlloc refType $o@@33 Tclass._module.Universe? $h@@12)  (or (= $o@@33 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@12 $o@@33) alloc)))))
 :pattern ( ($IsAlloc refType $o@@33 Tclass._module.Universe? $h@@12))
)))
(assert (forall (($o@@34 T@U) ($h@@13 T@U) ) (! (= ($IsAlloc refType $o@@34 Tclass._module.Object? $h@@13)  (or (= $o@@34 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@13 $o@@34) alloc)))))
 :pattern ( ($IsAlloc refType $o@@34 Tclass._module.Object? $h@@13))
)))
(assert (forall (($o@@35 T@U) ($h@@14 T@U) ) (! (= ($IsAlloc refType $o@@35 Tclass._module.Thread? $h@@14)  (or (= $o@@35 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@14 $o@@35) alloc)))))
 :pattern ( ($IsAlloc refType $o@@35 Tclass._module.Thread? $h@@14))
)))
(assert (forall (($o@@36 T@U) ($h@@15 T@U) ) (! (= ($IsAlloc refType $o@@36 Tclass._module.OwnedObject? $h@@15)  (or (= $o@@36 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@15 $o@@36) alloc)))))
 :pattern ( ($IsAlloc refType $o@@36 Tclass._module.OwnedObject? $h@@15))
)))
(assert (forall (($o@@37 T@U) ($h@@16 T@U) ) (! (= ($IsAlloc refType $o@@37 Tclass._module.OwnedU32? $h@@16)  (or (= $o@@37 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@16 $o@@37) alloc)))))
 :pattern ( ($IsAlloc refType $o@@37 Tclass._module.OwnedU32? $h@@16))
)))
(assert (forall (($o@@38 T@U) ($h@@17 T@U) ) (! (= ($IsAlloc refType $o@@38 Tclass._module.Mutex? $h@@17)  (or (= $o@@38 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@17 $o@@38) alloc)))))
 :pattern ( ($IsAlloc refType $o@@38 Tclass._module.Mutex? $h@@17))
)))
(assert (forall (($o@@39 T@U) ($h@@18 T@U) ) (! (= ($IsAlloc refType $o@@39 Tclass._module.MutexGuardU32? $h@@18)  (or (= $o@@39 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@18 $o@@39) alloc)))))
 :pattern ( ($IsAlloc refType $o@@39 Tclass._module.MutexGuardU32? $h@@18))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@23 T@U) (this@@50 T@U) ) (!  (=> (or (|_module.Mutex.baseUserFieldsInv#canCall| $Heap@@23 this@@50) (and (< 2 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@23) (and (or (not (= this@@50 null)) (not true)) (and ($Is refType this@@50 Tclass._module.Mutex) ($IsAlloc refType this@@50 Tclass._module.Mutex $Heap@@23)))))) (= (_module.Mutex.baseUserFieldsInv $Heap@@23 this@@50)  (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@23 (_module.Object.universe this@@50)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@23 this@@50) _module.Mutex.data)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@23 this@@50) _module.Mutex.guards)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@23 (_module.Object.universe this@@50)) _module.Universe.content))))))
 :pattern ( (_module.Mutex.baseUserFieldsInv $Heap@@23 this@@50) ($IsGoodHeap $Heap@@23))
))))
(assert  (=> (<= 7 $FunctionContextHeight) (forall (($Heap@@24 T@U) (this@@51 T@U) ) (!  (=> (or (|_module.Object.objectGlobalBaseInv#canCall| $Heap@@24 this@@51) (and (< 7 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@24) (and (or (not (= this@@51 null)) (not true)) (and ($Is refType this@@51 Tclass._module.Object) ($IsAlloc refType this@@51 Tclass._module.Object $Heap@@24)))))) (and (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@24 (_module.Object.universe this@@51)) _module.Universe.content)) ($Box refType this@@51)) (and (|_module.Object.baseFieldsInv#canCall| $Heap@@24 this@@51) (=> (_module.Object.baseFieldsInv $Heap@@24 this@@51) (|_module.Universe.globalBaseInv#canCall| $Heap@@24 (_module.Object.universe this@@51))))) (= (_module.Object.objectGlobalBaseInv $Heap@@24 this@@51)  (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@24 (_module.Object.universe this@@51)) _module.Universe.content)) ($Box refType this@@51)) (_module.Object.baseFieldsInv $Heap@@24 this@@51)) (_module.Universe.globalBaseInv $Heap@@24 (_module.Object.universe this@@51))))))
 :pattern ( (_module.Object.objectGlobalBaseInv $Heap@@24 this@@51) ($IsGoodHeap $Heap@@24))
))))
(assert (forall ((h T@U) (k T@U) ) (!  (=> ($HeapSucc h k) (forall ((o@@1 T@U) ) (!  (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h o@@1) alloc))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o@@1) alloc))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o@@1) alloc))
)))
 :pattern ( ($HeapSucc h k))
)))
(assert (forall ((x@@5 Int) ) (! (= (LitInt x@@5) x@@5)
 :pattern ( (LitInt x@@5))
)))
(assert (forall ((x@@6 T@U) (T T@T) ) (! (= (Lit T x@@6) x@@6)
 :pattern ( (Lit T x@@6))
)))
(assert  (=> (<= 14 $FunctionContextHeight) (forall (($prevHeap@@29 T@U) ($Heap@@25 T@U) (this@@52 T@U) (|running#0@@2| T@U) ) (!  (=> (or (|_module.Universe.legalTransition#canCall| $prevHeap@@29 $Heap@@25 this@@52 |running#0@@2|) (and (< 14 $FunctionContextHeight) (and (and (and (and ($IsGoodHeap $prevHeap@@29) ($IsGoodHeap $Heap@@25)) ($HeapSucc $prevHeap@@29 $Heap@@25)) (and (or (not (= this@@52 null)) (not true)) (and ($Is refType this@@52 Tclass._module.Universe) ($IsAlloc refType this@@52 Tclass._module.Universe $prevHeap@@29)))) ($Is refType |running#0@@2| Tclass._module.Thread)))) (and (and (|_module.Universe.legalTransitionsSequence#canCall| $prevHeap@@29 $Heap@@25 this@@52 (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@2|))) (=> (_module.Universe.legalTransitionsSequence $prevHeap@@29 $Heap@@25 this@@52 (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@2|))) (and (|_module.Universe.globalInv#canCall| $prevHeap@@29 this@@52) (=> (_module.Universe.globalInv $prevHeap@@29 this@@52) (and (forall ((|o#0@@6| T@U) ) (!  (=> ($Is refType |o#0@@6| Tclass._module.Object) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 this@@52) _module.Universe.content)) ($Box refType |o#0@@6|)) (and (=> (not (forall (($o@@40 T@U) ($f@@28 T@U) ) (!  (=> (or (not (= $o@@40 null)) (not true)) (=> (= $o@@40 |o#0@@6|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@40) $f@@28) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 $o@@40) $f@@28))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@40) $f@@28))
))) (|_module.Object.inv#canCall| $Heap@@25 |o#0@@6|)) (=> (or (forall (($o@@41 T@U) ($f@@29 T@U) ) (!  (=> (or (not (= $o@@41 null)) (not true)) (=> (= $o@@41 |o#0@@6|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@41) $f@@29) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 $o@@41) $f@@29))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@41) $f@@29))
)) (_module.Object.inv $Heap@@25 |o#0@@6|)) (=> (not (forall (($o@@42 T@U) ($f@@30 T@U) ) (!  (=> (or (not (= $o@@42 null)) (not true)) (=> (= $o@@42 |o#0@@6|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@42) $f@@30) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 $o@@42) $f@@30))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@42) $f@@30))
))) (|_module.Object.inv2#canCall| $prevHeap@@29 $Heap@@25 |o#0@@6|))))))
 :pattern ( (_module.Object.inv2 $prevHeap@@29 $Heap@@25 |o#0@@6|))
 :pattern ( (_module.Object.inv $Heap@@25 |o#0@@6|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 this@@52) _module.Universe.content)) ($Box refType |o#0@@6|)))
)) (=> (forall ((|o#0@@7| T@U) ) (!  (=> (and ($Is refType |o#0@@7| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 this@@52) _module.Universe.content)) ($Box refType |o#0@@7|))) (and (or (forall (($o@@43 T@U) ($f@@31 T@U) ) (!  (=> (or (not (= $o@@43 null)) (not true)) (=> (= $o@@43 |o#0@@7|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@43) $f@@31) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 $o@@43) $f@@31))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@43) $f@@31))
)) (_module.Object.inv $Heap@@25 |o#0@@7|)) (or (forall (($o@@44 T@U) ($f@@32 T@U) ) (!  (=> (or (not (= $o@@44 null)) (not true)) (=> (= $o@@44 |o#0@@7|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@44) $f@@32) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 $o@@44) $f@@32))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@44) $f@@32))
)) (_module.Object.inv2 $prevHeap@@29 $Heap@@25 |o#0@@7|))))
 :pattern ( (_module.Object.inv2 $prevHeap@@29 $Heap@@25 |o#0@@7|))
 :pattern ( (_module.Object.inv $Heap@@25 |o#0@@7|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 this@@52) _module.Universe.content)) ($Box refType |o#0@@7|)))
)) (forall ((|o#1@@0| T@U) ) (!  (=> ($Is refType |o#1@@0| Tclass._module.Object) (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 this@@52) _module.Universe.content)) ($Box refType |o#1@@0|)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 this@@52) _module.Universe.content)) ($Box refType |o#1@@0|)))) (|_module.Object.inv#canCall| $Heap@@25 |o#1@@0|)))
 :pattern ( (_module.Object.inv $Heap@@25 |o#1@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 this@@52) _module.Universe.content)) ($Box refType |o#1@@0|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 this@@52) _module.Universe.content)) ($Box refType |o#1@@0|)))
)))))))) (= (_module.Universe.legalTransition $prevHeap@@29 $Heap@@25 this@@52 |running#0@@2|)  (and (and (and (_module.Universe.legalTransitionsSequence $prevHeap@@29 $Heap@@25 this@@52 (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@2|))) (_module.Universe.globalInv $prevHeap@@29 this@@52)) (forall ((|o#0@@8| T@U) ) (!  (=> (and ($Is refType |o#0@@8| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 this@@52) _module.Universe.content)) ($Box refType |o#0@@8|))) (and (or (forall (($o@@45 T@U) ($f@@33 T@U) ) (!  (=> (or (not (= $o@@45 null)) (not true)) (=> (= $o@@45 |o#0@@8|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@45) $f@@33) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 $o@@45) $f@@33))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@45) $f@@33))
)) (_module.Object.inv $Heap@@25 |o#0@@8|)) (or (forall (($o@@46 T@U) ($f@@34 T@U) ) (!  (=> (or (not (= $o@@46 null)) (not true)) (=> (= $o@@46 |o#0@@8|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@46) $f@@34) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 $o@@46) $f@@34))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 $o@@46) $f@@34))
)) (_module.Object.inv2 $prevHeap@@29 $Heap@@25 |o#0@@8|))))
 :pattern ( (_module.Object.inv2 $prevHeap@@29 $Heap@@25 |o#0@@8|))
 :pattern ( (_module.Object.inv $Heap@@25 |o#0@@8|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 this@@52) _module.Universe.content)) ($Box refType |o#0@@8|)))
))) (forall ((|o#1@@1| T@U) ) (!  (=> (and ($Is refType |o#1@@1| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 this@@52) _module.Universe.content)) ($Box refType |o#1@@1|)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 this@@52) _module.Universe.content)) ($Box refType |o#1@@1|))))) (_module.Object.inv $Heap@@25 |o#1@@1|))
 :pattern ( (_module.Object.inv $Heap@@25 |o#1@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@29 this@@52) _module.Universe.content)) ($Box refType |o#1@@1|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@25 this@@52) _module.Universe.content)) ($Box refType |o#1@@1|)))
))))))
 :pattern ( (_module.Universe.legalTransition $prevHeap@@29 $Heap@@25 this@@52 |running#0@@2|) ($IsGoodHeap $Heap@@25))
))))
(assert (forall ((a@@2 T@U) (b T@U) ) (! (= (|Set#Subset| a@@2 b) (forall ((o@@2 T@U) ) (!  (=> (|Set#IsMember| a@@2 o@@2) (|Set#IsMember| b o@@2))
 :pattern ( (|Set#IsMember| a@@2 o@@2))
 :pattern ( (|Set#IsMember| b o@@2))
)))
 :pattern ( (|Set#Subset| a@@2 b))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap@@26 T@U) (this@@53 T@U) ) (!  (=> (or (|_module.OwnedU32.localUserInv#canCall| $Heap@@26 this@@53) (and (< 0 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@26) (and (or (not (= this@@53 null)) (not true)) (and ($Is refType this@@53 Tclass._module.OwnedU32) ($IsAlloc refType this@@53 Tclass._module.OwnedU32 $Heap@@26)))))) (= (_module.OwnedU32.localUserInv $Heap@@26 this@@53) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.OwnedU32.localUserInv $Heap@@26 this@@53) ($IsGoodHeap $Heap@@26))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@27 T@U) (this@@54 T@U) ) (!  (=> (or (|_module.Thread.baseFieldsInv#canCall| $Heap@@27 this@@54) (and (< 2 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@27) (and (or (not (= this@@54 null)) (not true)) (and ($Is refType this@@54 Tclass._module.Thread) ($IsAlloc refType this@@54 Tclass._module.Thread $Heap@@27)))))) (= (_module.Thread.baseFieldsInv $Heap@@27 this@@54) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.Thread.baseFieldsInv $Heap@@27 this@@54) ($IsGoodHeap $Heap@@27))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@28 T@U) (this@@55 T@U) ) (!  (=> (or (|_module.OwnedU32.baseUserFieldsInv#canCall| $Heap@@28 this@@55) (and (< 2 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@28) (and (or (not (= this@@55 null)) (not true)) (and ($Is refType this@@55 Tclass._module.OwnedU32) ($IsAlloc refType this@@55 Tclass._module.OwnedU32 $Heap@@28)))))) (= (_module.OwnedU32.baseUserFieldsInv $Heap@@28 this@@55) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.OwnedU32.baseUserFieldsInv $Heap@@28 this@@55) ($IsGoodHeap $Heap@@28))
))))
(assert (forall ((x@@7 T@U) (T@@0 T@T) ) (! (= ($Box T@@0 ($Unbox T@@0 x@@7)) x@@7)
 :pattern ( ($Unbox T@@0 x@@7))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@30 T@U) ($Heap@@29 T@U) (this@@56 T@U) ) (!  (=> (or (|_module.Thread.inv2#canCall| $prevHeap@@30 $Heap@@29 this@@56) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@30) ($IsGoodHeap $Heap@@29)) ($HeapSucc $prevHeap@@30 $Heap@@29)) (and (or (not (= this@@56 null)) (not true)) (and ($Is refType this@@56 Tclass._module.Thread) ($IsAlloc refType this@@56 Tclass._module.Thread $prevHeap@@30)))))) (and (and (|_module.Thread.localInv2#canCall| $prevHeap@@30 $Heap@@29 this@@56) (=> (_module.Thread.localInv2 $prevHeap@@30 $Heap@@29 this@@56) (|_module.Thread.sequenceInv2#canCall| $prevHeap@@30 $Heap@@29 this@@56))) (= (_module.Thread.inv2 $prevHeap@@30 $Heap@@29 this@@56)  (and (_module.Thread.localInv2 $prevHeap@@30 $Heap@@29 this@@56) (_module.Thread.sequenceInv2 $prevHeap@@30 $Heap@@29 this@@56)))))
 :pattern ( (_module.Thread.inv2 $prevHeap@@30 $Heap@@29 this@@56) ($IsGoodHeap $Heap@@29))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@30 T@U) (this@@57 T@U) ) (!  (=> (or (|_module.OwnedU32.userInv#canCall| $Heap@@30 this@@57) (and (< 1 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@30) (and (or (not (= this@@57 null)) (not true)) (and ($Is refType this@@57 Tclass._module.OwnedU32) ($IsAlloc refType this@@57 Tclass._module.OwnedU32 $Heap@@30)))))) (and (|_module.OwnedU32.localUserInv#canCall| $Heap@@30 this@@57) (= (_module.OwnedU32.userInv $Heap@@30 this@@57) (_module.OwnedU32.localUserInv $Heap@@30 this@@57))))
 :pattern ( (_module.OwnedU32.userInv $Heap@@30 this@@57) ($IsGoodHeap $Heap@@30))
))))
(assert (forall ((m@@1 T@U) (bx@@4 T@U) ) (! (= (|Set#IsMember| (|Set#FromBoogieMap| m@@1) bx@@4) (U_2_bool (MapType0Select BoxType boolType m@@1 bx@@4)))
 :pattern ( (|Set#IsMember| (|Set#FromBoogieMap| m@@1) bx@@4))
)))
(assert (forall ((|l#0| T@U) (|l#1| T@U) (|l#2| T@U) (|$y#1| T@U) ) (! (= (U_2_bool (MapType0Select BoxType boolType (|lambda#29| |l#0| |l#1| |l#2|) |$y#1|))  (and ($IsBox |$y#1| |l#0|) (and (|Set#IsMember| |l#1| |$y#1|) (or (not (= ($Unbox refType |$y#1|) |l#2|)) (not true)))))
 :pattern ( (MapType0Select BoxType boolType (|lambda#29| |l#0| |l#1| |l#2|) |$y#1|))
)))
(assert (forall ((v T@U) (t0@@0 T@U) ) (! (= ($Is SetType v (TSet t0@@0)) (forall ((bx@@5 T@U) ) (!  (=> (|Set#IsMember| v bx@@5) ($IsBox bx@@5 t0@@0))
 :pattern ( (|Set#IsMember| v bx@@5))
)))
 :pattern ( ($Is SetType v (TSet t0@@0)))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@31 T@U) ($Heap@@31 T@U) (this@@58 T@U) ) (!  (=> (or (|_module.Thread.inv2#canCall| $prevHeap@@31 $Heap@@31 this@@58) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@31) ($IsGoodHeap $Heap@@31)) ($HeapSucc $prevHeap@@31 $Heap@@31)) (and (or (not (= this@@58 null)) (not true)) (and ($Is refType this@@58 Tclass._module.Thread) ($IsAlloc refType this@@58 Tclass._module.Thread $prevHeap@@31)))))) (=> (_module.Thread.inv2 $prevHeap@@31 $Heap@@31 this@@58) (and (_module.Thread.localInv2 $prevHeap@@31 $Heap@@31 this@@58) (_module.Thread.sequenceInv2 $prevHeap@@31 $Heap@@31 this@@58))))
 :pattern ( (_module.Thread.inv2 $prevHeap@@31 $Heap@@31 this@@58))
))))
(assert  (=> (<= 10 $FunctionContextHeight) (forall (($prevHeap@@32 T@U) ($Heap@@32 T@U) (this@@59 T@U) ) (!  (=> (or (|_module.OwnedObject.inv2#canCall| $prevHeap@@32 $Heap@@32 this@@59) (and (< 10 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@32) ($IsGoodHeap $Heap@@32)) ($HeapSucc $prevHeap@@32 $Heap@@32)) (and (or (not (= this@@59 null)) (not true)) (and ($Is refType this@@59 Tclass._module.OwnedObject) ($IsAlloc refType this@@59 Tclass._module.OwnedObject $prevHeap@@32)))))) (=> (_module.OwnedObject.inv2 $prevHeap@@32 $Heap@@32 this@@59) (and (_module.OwnedObject.localInv2 $prevHeap@@32 $Heap@@32 this@@59) (_module.OwnedObject.sequenceInv2 $prevHeap@@32 $Heap@@32 this@@59))))
 :pattern ( (_module.OwnedObject.inv2 $prevHeap@@32 $Heap@@32 this@@59))
))))
(assert  (=> (<= 11 $FunctionContextHeight) (forall (($prevHeap@@33 T@U) ($Heap@@33 T@U) (this@@60 T@U) ) (!  (=> (or (|_module.Object.inv2#canCall| $prevHeap@@33 $Heap@@33 this@@60) (and (< 11 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@33) ($IsGoodHeap $Heap@@33)) ($HeapSucc $prevHeap@@33 $Heap@@33)) (and (or (not (= this@@60 null)) (not true)) (and ($Is refType this@@60 Tclass._module.Object) ($IsAlloc refType this@@60 Tclass._module.Object $prevHeap@@33)))))) (=> (_module.Object.inv2 $prevHeap@@33 $Heap@@33 this@@60) (and (_module.Object.localInv2 $prevHeap@@33 $Heap@@33 this@@60) (_module.Object.sequenceInv2 $prevHeap@@33 $Heap@@33 this@@60))))
 :pattern ( (_module.Object.inv2 $prevHeap@@33 $Heap@@33 this@@60))
))))
(assert  (and (forall ((t0@@1 T@T) (t1@@0 T@T) (t2 T@T) (val@@1 T@U) (m@@2 T@U) (x0@@1 T@U) (x1 T@U) ) (! (= (MapType1Select t0@@1 t1@@0 t2 (MapType1Store t0@@1 t1@@0 t2 m@@2 x0@@1 x1 val@@1) x0@@1 x1) val@@1)
 :weight 0
)) (and (forall ((u0@@0 T@T) (u1@@0 T@T) (u2 T@T) (val@@2 T@U) (m@@3 T@U) (x0@@2 T@U) (x1@@0 T@U) (y0@@0 T@U) (y1 T@U) ) (!  (or (= x0@@2 y0@@0) (= (MapType1Select u0@@0 u1@@0 u2 (MapType1Store u0@@0 u1@@0 u2 m@@3 x0@@2 x1@@0 val@@2) y0@@0 y1) (MapType1Select u0@@0 u1@@0 u2 m@@3 y0@@0 y1)))
 :weight 0
)) (forall ((u0@@1 T@T) (u1@@1 T@T) (u2@@0 T@T) (val@@3 T@U) (m@@4 T@U) (x0@@3 T@U) (x1@@1 T@U) (y0@@1 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType1Select u0@@1 u1@@1 u2@@0 (MapType1Store u0@@1 u1@@1 u2@@0 m@@4 x0@@3 x1@@1 val@@3) y0@@1 y1@@0) (MapType1Select u0@@1 u1@@1 u2@@0 m@@4 y0@@1 y1@@0)))
 :weight 0
)))))
(assert (forall ((|l#0@@0| T@U) (|l#1@@0| T@U) (|l#2@@0| T@U) (|l#3| T@U) (|l#4| T@U) ($o@@47 T@U) ($f@@35 T@U) ) (! (= (U_2_bool (MapType1Select refType FieldType boolType (|lambda#0| |l#0@@0| |l#1@@0| |l#2@@0| |l#3| |l#4|) $o@@47 $f@@35))  (=> (and (or (not (= $o@@47 |l#0@@0|)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) |l#1@@0| $o@@47) |l#2@@0|)))) (or (= $o@@47 |l#3|) (|Set#IsMember| |l#4| ($Box refType $o@@47)))))
 :pattern ( (MapType1Select refType FieldType boolType (|lambda#0| |l#0@@0| |l#1@@0| |l#2@@0| |l#3| |l#4|) $o@@47 $f@@35))
)))
(assert ($IsGhostField alloc))
(assert (forall (($h@@19 T@U) ($o@@48 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@19) (and (or (not (= $o@@48 null)) (not true)) (= (dtype $o@@48) Tclass._module.OwnedU32?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@19 $o@@48) alloc)))) ($IsAlloc intType ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@19 $o@@48) _module.OwnedU32.value)) TInt $h@@19))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@19 $o@@48) _module.OwnedU32.value)))
)))
(assert (forall (($h@@20 T@U) ($o@@49 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@20) (and (or (not (= $o@@49 null)) (not true)) (= (dtype $o@@49) Tclass._module.Mutex?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@20 $o@@49) alloc)))) ($IsAlloc boolType ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@20 $o@@49) _module.Mutex.locked)) TBool $h@@20))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@20 $o@@49) _module.Mutex.locked)))
)))
(assert  (=> (<= 8 $FunctionContextHeight) (forall (($Heap@@34 T@U) (this@@61 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv#canCall| $Heap@@34 this@@61) (and (< 8 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@34) (and (or (not (= this@@61 null)) (not true)) (and ($Is refType this@@61 Tclass._module.OwnedObject) ($IsAlloc refType this@@61 Tclass._module.OwnedObject $Heap@@34)))))) (and (and (|_module.Object.objectGlobalBaseInv#canCall| $Heap@@34 this@@61) (=> (_module.Object.objectGlobalBaseInv $Heap@@34 this@@61) (|_module.OwnedObject.localUserInv#canCall| $Heap@@34 this@@61))) (= (_module.OwnedObject.localInv $Heap@@34 this@@61)  (and (_module.Object.objectGlobalBaseInv $Heap@@34 this@@61) (_module.OwnedObject.localUserInv $Heap@@34 this@@61)))))
 :pattern ( (_module.OwnedObject.localInv $Heap@@34 this@@61) ($IsGoodHeap $Heap@@34))
))))
(assert  (=> (<= 11 $FunctionContextHeight) (forall (($Heap@@35 T@U) (this@@62 T@U) ) (!  (=> (or (|_module.OwnedObject.inv#canCall| $Heap@@35 this@@62) (and (< 11 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@35) (and (or (not (= this@@62 null)) (not true)) (and ($Is refType this@@62 Tclass._module.OwnedObject) ($IsAlloc refType this@@62 Tclass._module.OwnedObject $Heap@@35)))))) (and (and (|_module.OwnedObject.localInv#canCall| $Heap@@35 this@@62) (=> (_module.OwnedObject.localInv $Heap@@35 this@@62) (|_module.OwnedObject.userInv#canCall| $Heap@@35 this@@62))) (= (_module.OwnedObject.inv $Heap@@35 this@@62)  (and (_module.OwnedObject.localInv $Heap@@35 this@@62) (_module.OwnedObject.userInv $Heap@@35 this@@62)))))
 :pattern ( (_module.OwnedObject.inv $Heap@@35 this@@62) ($IsGoodHeap $Heap@@35))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@34 T@U) ($Heap@@36 T@U) (this@@63 T@U) ) (!  (=> (or (|_module.OwnedU32.unchangedNonvolatileUserFields#canCall| $prevHeap@@34 $Heap@@36 this@@63) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@34) ($IsGoodHeap $Heap@@36)) ($HeapSucc $prevHeap@@34 $Heap@@36)) (and (or (not (= this@@63 null)) (not true)) (and ($Is refType this@@63 Tclass._module.OwnedU32) ($IsAlloc refType this@@63 Tclass._module.OwnedU32 $prevHeap@@34)))))) (= (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@34 $Heap@@36 this@@63)  (and true (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@63) _module.OwnedU32.value))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@36 this@@63) _module.OwnedU32.value)))))))
 :pattern ( (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@34 $Heap@@36 this@@63) ($IsGoodHeap $Heap@@36))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@35 T@U) ($Heap@@37 T@U) (this@@64 T@U) ) (!  (=> (or (|_module.Mutex.localUserInv2#canCall| $prevHeap@@35 $Heap@@37 this@@64) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@35) ($IsGoodHeap $Heap@@37)) ($HeapSucc $prevHeap@@35 $Heap@@37)) (and (or (not (= this@@64 null)) (not true)) (and ($Is refType this@@64 Tclass._module.Mutex) ($IsAlloc refType this@@64 Tclass._module.Mutex $prevHeap@@35)))))) (= (_module.Mutex.localUserInv2 $prevHeap@@35 $Heap@@37 this@@64)  (and true (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@35 this@@64) _module.Mutex.data)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@37 this@@64) _module.Mutex.data))))))
 :pattern ( (_module.Mutex.localUserInv2 $prevHeap@@35 $Heap@@37 this@@64) ($IsGoodHeap $Heap@@37))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@36 T@U) ($Heap@@38 T@U) (this@@65 T@U) ) (!  (=> (or (|_module.MutexGuardU32.localUserInv2#canCall| $prevHeap@@36 $Heap@@38 this@@65) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@36) ($IsGoodHeap $Heap@@38)) ($HeapSucc $prevHeap@@36 $Heap@@38)) (and (or (not (= this@@65 null)) (not true)) (and ($Is refType this@@65 Tclass._module.MutexGuardU32) ($IsAlloc refType this@@65 Tclass._module.MutexGuardU32 $prevHeap@@36)))))) (= (_module.MutexGuardU32.localUserInv2 $prevHeap@@36 $Heap@@38 this@@65)  (and true (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@36 this@@65) _module.MutexGuardU32.mutex)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@38 this@@65) _module.MutexGuardU32.mutex))))))
 :pattern ( (_module.MutexGuardU32.localUserInv2 $prevHeap@@36 $Heap@@38 this@@65) ($IsGoodHeap $Heap@@38))
))))
(assert (forall ((v@@0 T@U) (t T@U) (h@@0 T@U) (T@@1 T@T) ) (! (= ($IsAllocBox ($Box T@@1 v@@0) t h@@0) ($IsAlloc T@@1 v@@0 t h@@0))
 :pattern ( ($IsAllocBox ($Box T@@1 v@@0) t h@@0))
)))
(assert (forall ((h@@1 T@U) (k@@0 T@U) (bx@@6 T@U) (t@@0 T@U) ) (!  (=> ($HeapSucc h@@1 k@@0) (=> ($IsAllocBox bx@@6 t@@0 h@@1) ($IsAllocBox bx@@6 t@@0 k@@0)))
 :pattern ( ($HeapSucc h@@1 k@@0) ($IsAllocBox bx@@6 t@@0 h@@1))
)))
(assert (forall ((h@@2 T@U) (k@@1 T@U) (v@@1 T@U) (t@@1 T@U) (T@@2 T@T) ) (!  (=> ($HeapSucc h@@2 k@@1) (=> ($IsAlloc T@@2 v@@1 t@@1 h@@2) ($IsAlloc T@@2 v@@1 t@@1 k@@1)))
 :pattern ( ($HeapSucc h@@2 k@@1) ($IsAlloc T@@2 v@@1 t@@1 h@@2))
)))
(assert  (=> (< 1 $FunctionContextHeight) (forall (($h@@21 T@U) ($o@@50 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@21) (and (or (not (= $o@@50 null)) (not true)) ($Is refType $o@@50 Tclass._module.Object?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@21 $o@@50) alloc)))) ($IsAlloc refType (_module.Object.universe $o@@50) Tclass._module.Universe $h@@21))
 :pattern ( (_module.Object.universe $o@@50) ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@21 $o@@50) alloc)))
))))
(assert  (=> (< 1 $FunctionContextHeight) (forall (($o@@51 T@U) ) (!  (=> (and (or (not (= $o@@51 null)) (not true)) ($Is refType $o@@51 Tclass._module.Object?)) ($Is refType (_module.Object.universe $o@@51) Tclass._module.Universe))
 :pattern ( (_module.Object.universe $o@@51))
))))
(assert (forall (($h@@22 T@U) ($o@@52 T@U) ) (!  (=> (and ($IsGoodHeap $h@@22) (and (or (not (= $o@@52 null)) (not true)) (= (dtype $o@@52) Tclass._module.Mutex?))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@22 $o@@52) _module.Mutex.data)) Tclass._module.OwnedU32))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@22 $o@@52) _module.Mutex.data)))
)))
(assert (forall (($h@@23 T@U) ($o@@53 T@U) ) (!  (=> (and ($IsGoodHeap $h@@23) (and (or (not (= $o@@53 null)) (not true)) (= (dtype $o@@53) Tclass._module.MutexGuardU32?))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@23 $o@@53) _module.MutexGuardU32.mutex)) Tclass._module.Mutex))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@23 $o@@53) _module.MutexGuardU32.mutex)))
)))
(assert (forall (($h@@24 T@U) ($o@@54 T@U) ) (!  (=> (and ($IsGoodHeap $h@@24) (and (or (not (= $o@@54 null)) (not true)) (= (dtype $o@@54) Tclass._module.MutexGuardU32?))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@24 $o@@54) _module.MutexGuardU32.data)) Tclass._module.OwnedU32))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@24 $o@@54) _module.MutexGuardU32.data)))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap@@39 T@U) (this@@66 T@U) ) (!  (=> (or (|_module.MutexGuardU32.localUserInv#canCall| $Heap@@39 this@@66) (and (< 0 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@39) (and (or (not (= this@@66 null)) (not true)) (and ($Is refType this@@66 Tclass._module.MutexGuardU32) ($IsAlloc refType this@@66 Tclass._module.MutexGuardU32 $Heap@@39)))))) (= (_module.MutexGuardU32.localUserInv $Heap@@39 this@@66)  (and (and (and (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@39 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@39 this@@66) _module.MutexGuardU32.mutex))) _module.Mutex.locked))) (|Set#Equal| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@39 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@39 this@@66) _module.MutexGuardU32.mutex))) _module.Mutex.guards)) (|Set#UnionOne| |Set#Empty| ($Box refType this@@66)))) (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@39 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@39 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@39 this@@66) _module.MutexGuardU32.mutex))) _module.Mutex.data))) _module.OwnedObject.owner)) this@@66)) (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@39 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@39 this@@66) _module.MutexGuardU32.mutex))) _module.Mutex.data)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@39 this@@66) _module.MutexGuardU32.data))))))
 :pattern ( (_module.MutexGuardU32.localUserInv $Heap@@39 this@@66) ($IsGoodHeap $Heap@@39))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@37 T@U) ($Heap@@40 T@U) (this@@67 T@U) ) (!  (=> (or (|_module.Thread.localInv2#canCall| $prevHeap@@37 $Heap@@40 this@@67) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@67 null)) (not true)) ($Is refType this@@67 Tclass._module.Thread)))) (= (_module.Object.localInv2 $prevHeap@@37 $Heap@@40 this@@67) (_module.Thread.localInv2 $prevHeap@@37 $Heap@@40 this@@67)))
 :pattern ( (_module.Object.localInv2 $prevHeap@@37 $Heap@@40 this@@67) ($Is refType this@@67 Tclass._module.Thread) ($IsGoodHeap $Heap@@40))
 :pattern ( (_module.Object.localInv2 $prevHeap@@37 $Heap@@40 this@@67) (_module.Thread.localInv2 $prevHeap@@37 $Heap@@40 this@@67) ($IsGoodHeap $Heap@@40))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@38 T@U) ($Heap@@41 T@U) (this@@68 T@U) ) (!  (=> (or (|_module.Thread.sequenceInv2#canCall| $prevHeap@@38 $Heap@@41 this@@68) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@68 null)) (not true)) ($Is refType this@@68 Tclass._module.Thread)))) (= (_module.Object.sequenceInv2 $prevHeap@@38 $Heap@@41 this@@68) (_module.Thread.sequenceInv2 $prevHeap@@38 $Heap@@41 this@@68)))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@38 $Heap@@41 this@@68) ($Is refType this@@68 Tclass._module.Thread) ($IsGoodHeap $Heap@@41))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@38 $Heap@@41 this@@68) (_module.Thread.sequenceInv2 $prevHeap@@38 $Heap@@41 this@@68) ($IsGoodHeap $Heap@@41))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@39 T@U) ($Heap@@42 T@U) (this@@69 T@U) ) (!  (=> (or (|_module.OwnedU32.unchangedNonvolatileUserFields#canCall| $prevHeap@@39 $Heap@@42 this@@69) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@69 null)) (not true)) ($Is refType this@@69 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@39 $Heap@@42 this@@69) (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@39 $Heap@@42 this@@69)))
 :pattern ( (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@39 $Heap@@42 this@@69) ($Is refType this@@69 Tclass._module.OwnedU32) ($IsGoodHeap $Heap@@42))
 :pattern ( (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@39 $Heap@@42 this@@69) (_module.OwnedU32.unchangedNonvolatileUserFields $prevHeap@@39 $Heap@@42 this@@69) ($IsGoodHeap $Heap@@42))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@40 T@U) ($Heap@@43 T@U) (this@@70 T@U) ) (!  (=> (or (|_module.OwnedU32.localUserInv2#canCall| $prevHeap@@40 $Heap@@43 this@@70) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@70 null)) (not true)) ($Is refType this@@70 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.localUserInv2 $prevHeap@@40 $Heap@@43 this@@70) (_module.OwnedU32.localUserInv2 $prevHeap@@40 $Heap@@43 this@@70)))
 :pattern ( (_module.OwnedObject.localUserInv2 $prevHeap@@40 $Heap@@43 this@@70) ($Is refType this@@70 Tclass._module.OwnedU32) ($IsGoodHeap $Heap@@43))
 :pattern ( (_module.OwnedObject.localUserInv2 $prevHeap@@40 $Heap@@43 this@@70) (_module.OwnedU32.localUserInv2 $prevHeap@@40 $Heap@@43 this@@70) ($IsGoodHeap $Heap@@43))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@41 T@U) ($Heap@@44 T@U) (this@@71 T@U) ) (!  (=> (or (|_module.Mutex.unchangedNonvolatileUserFields#canCall| $prevHeap@@41 $Heap@@44 this@@71) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@71 null)) (not true)) ($Is refType this@@71 Tclass._module.Mutex)))) (= (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@41 $Heap@@44 this@@71) (_module.Mutex.unchangedNonvolatileUserFields $prevHeap@@41 $Heap@@44 this@@71)))
 :pattern ( (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@41 $Heap@@44 this@@71) ($Is refType this@@71 Tclass._module.Mutex) ($IsGoodHeap $Heap@@44))
 :pattern ( (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@41 $Heap@@44 this@@71) (_module.Mutex.unchangedNonvolatileUserFields $prevHeap@@41 $Heap@@44 this@@71) ($IsGoodHeap $Heap@@44))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@42 T@U) ($Heap@@45 T@U) (this@@72 T@U) ) (!  (=> (or (|_module.Mutex.localUserInv2#canCall| $prevHeap@@42 $Heap@@45 this@@72) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@72 null)) (not true)) ($Is refType this@@72 Tclass._module.Mutex)))) (= (_module.OwnedObject.localUserInv2 $prevHeap@@42 $Heap@@45 this@@72) (_module.Mutex.localUserInv2 $prevHeap@@42 $Heap@@45 this@@72)))
 :pattern ( (_module.OwnedObject.localUserInv2 $prevHeap@@42 $Heap@@45 this@@72) ($Is refType this@@72 Tclass._module.Mutex) ($IsGoodHeap $Heap@@45))
 :pattern ( (_module.OwnedObject.localUserInv2 $prevHeap@@42 $Heap@@45 this@@72) (_module.Mutex.localUserInv2 $prevHeap@@42 $Heap@@45 this@@72) ($IsGoodHeap $Heap@@45))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@43 T@U) ($Heap@@46 T@U) (this@@73 T@U) ) (!  (=> (or (|_module.MutexGuardU32.unchangedNonvolatileUserFields#canCall| $prevHeap@@43 $Heap@@46 this@@73) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@73 null)) (not true)) ($Is refType this@@73 Tclass._module.MutexGuardU32)))) (= (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@43 $Heap@@46 this@@73) (_module.MutexGuardU32.unchangedNonvolatileUserFields $prevHeap@@43 $Heap@@46 this@@73)))
 :pattern ( (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@43 $Heap@@46 this@@73) ($Is refType this@@73 Tclass._module.MutexGuardU32) ($IsGoodHeap $Heap@@46))
 :pattern ( (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@43 $Heap@@46 this@@73) (_module.MutexGuardU32.unchangedNonvolatileUserFields $prevHeap@@43 $Heap@@46 this@@73) ($IsGoodHeap $Heap@@46))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@44 T@U) ($Heap@@47 T@U) (this@@74 T@U) ) (!  (=> (or (|_module.MutexGuardU32.localUserInv2#canCall| $prevHeap@@44 $Heap@@47 this@@74) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@74 null)) (not true)) ($Is refType this@@74 Tclass._module.MutexGuardU32)))) (= (_module.OwnedObject.localUserInv2 $prevHeap@@44 $Heap@@47 this@@74) (_module.MutexGuardU32.localUserInv2 $prevHeap@@44 $Heap@@47 this@@74)))
 :pattern ( (_module.OwnedObject.localUserInv2 $prevHeap@@44 $Heap@@47 this@@74) ($Is refType this@@74 Tclass._module.MutexGuardU32) ($IsGoodHeap $Heap@@47))
 :pattern ( (_module.OwnedObject.localUserInv2 $prevHeap@@44 $Heap@@47 this@@74) (_module.MutexGuardU32.localUserInv2 $prevHeap@@44 $Heap@@47 this@@74) ($IsGoodHeap $Heap@@47))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@45 T@U) ($Heap@@48 T@U) (this@@75 T@U) ) (!  (=> (or (|_module.Thread.inv2#canCall| $prevHeap@@45 $Heap@@48 this@@75) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@75 null)) (not true)) ($Is refType this@@75 Tclass._module.Thread)))) (= (_module.Object.inv2 $prevHeap@@45 $Heap@@48 this@@75) (_module.Thread.inv2 $prevHeap@@45 $Heap@@48 this@@75)))
 :pattern ( (_module.Object.inv2 $prevHeap@@45 $Heap@@48 this@@75) ($Is refType this@@75 Tclass._module.Thread) ($IsGoodHeap $Heap@@48))
 :pattern ( (_module.Object.inv2 $prevHeap@@45 $Heap@@48 this@@75) (_module.Thread.inv2 $prevHeap@@45 $Heap@@48 this@@75) ($IsGoodHeap $Heap@@48))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@46 T@U) ($Heap@@49 T@U) (this@@76 T@U) ) (!  (=> (or (|_module.OwnedU32.userInv2#canCall| $prevHeap@@46 $Heap@@49 this@@76) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@76 null)) (not true)) ($Is refType this@@76 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.userInv2 $prevHeap@@46 $Heap@@49 this@@76) (_module.OwnedU32.userInv2 $prevHeap@@46 $Heap@@49 this@@76)))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@46 $Heap@@49 this@@76) ($Is refType this@@76 Tclass._module.OwnedU32) ($IsGoodHeap $Heap@@49))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@46 $Heap@@49 this@@76) (_module.OwnedU32.userInv2 $prevHeap@@46 $Heap@@49 this@@76) ($IsGoodHeap $Heap@@49))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@47 T@U) ($Heap@@50 T@U) (this@@77 T@U) ) (!  (=> (or (|_module.Mutex.userInv2#canCall| $prevHeap@@47 $Heap@@50 this@@77) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@77 null)) (not true)) ($Is refType this@@77 Tclass._module.Mutex)))) (= (_module.OwnedObject.userInv2 $prevHeap@@47 $Heap@@50 this@@77) (_module.Mutex.userInv2 $prevHeap@@47 $Heap@@50 this@@77)))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@47 $Heap@@50 this@@77) ($Is refType this@@77 Tclass._module.Mutex) ($IsGoodHeap $Heap@@50))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@47 $Heap@@50 this@@77) (_module.Mutex.userInv2 $prevHeap@@47 $Heap@@50 this@@77) ($IsGoodHeap $Heap@@50))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($prevHeap@@48 T@U) ($Heap@@51 T@U) (this@@78 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv2#canCall| $prevHeap@@48 $Heap@@51 this@@78) (and (< 2 $FunctionContextHeight) (and (or (not (= this@@78 null)) (not true)) ($Is refType this@@78 Tclass._module.OwnedObject)))) (= (_module.Object.localInv2 $prevHeap@@48 $Heap@@51 this@@78) (_module.OwnedObject.localInv2 $prevHeap@@48 $Heap@@51 this@@78)))
 :pattern ( (_module.Object.localInv2 $prevHeap@@48 $Heap@@51 this@@78) ($Is refType this@@78 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@51))
 :pattern ( (_module.Object.localInv2 $prevHeap@@48 $Heap@@51 this@@78) (_module.OwnedObject.localInv2 $prevHeap@@48 $Heap@@51 this@@78) ($IsGoodHeap $Heap@@51))
))))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($prevHeap@@49 T@U) ($Heap@@52 T@U) (this@@79 T@U) ) (!  (=> (or (|_module.OwnedObject.sequenceInv2#canCall| $prevHeap@@49 $Heap@@52 this@@79) (and (< 3 $FunctionContextHeight) (and (or (not (= this@@79 null)) (not true)) ($Is refType this@@79 Tclass._module.OwnedObject)))) (= (_module.Object.sequenceInv2 $prevHeap@@49 $Heap@@52 this@@79) (_module.OwnedObject.sequenceInv2 $prevHeap@@49 $Heap@@52 this@@79)))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@49 $Heap@@52 this@@79) ($Is refType this@@79 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@52))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@49 $Heap@@52 this@@79) (_module.OwnedObject.sequenceInv2 $prevHeap@@49 $Heap@@52 this@@79) ($IsGoodHeap $Heap@@52))
))))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($prevHeap@@50 T@U) ($Heap@@53 T@U) (this@@80 T@U) ) (!  (=> (or (|_module.MutexGuardU32.userInv2#canCall| $prevHeap@@50 $Heap@@53 this@@80) (and (< 3 $FunctionContextHeight) (and (or (not (= this@@80 null)) (not true)) ($Is refType this@@80 Tclass._module.MutexGuardU32)))) (= (_module.OwnedObject.userInv2 $prevHeap@@50 $Heap@@53 this@@80) (_module.MutexGuardU32.userInv2 $prevHeap@@50 $Heap@@53 this@@80)))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@50 $Heap@@53 this@@80) ($Is refType this@@80 Tclass._module.MutexGuardU32) ($IsGoodHeap $Heap@@53))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@50 $Heap@@53 this@@80) (_module.MutexGuardU32.userInv2 $prevHeap@@50 $Heap@@53 this@@80) ($IsGoodHeap $Heap@@53))
))))
(assert  (=> (<= 10 $FunctionContextHeight) (forall (($prevHeap@@51 T@U) ($Heap@@54 T@U) (this@@81 T@U) ) (!  (=> (or (|_module.OwnedObject.inv2#canCall| $prevHeap@@51 $Heap@@54 this@@81) (and (< 10 $FunctionContextHeight) (and (or (not (= this@@81 null)) (not true)) ($Is refType this@@81 Tclass._module.OwnedObject)))) (= (_module.Object.inv2 $prevHeap@@51 $Heap@@54 this@@81) (_module.OwnedObject.inv2 $prevHeap@@51 $Heap@@54 this@@81)))
 :pattern ( (_module.Object.inv2 $prevHeap@@51 $Heap@@54 this@@81) ($Is refType this@@81 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@54))
 :pattern ( (_module.Object.inv2 $prevHeap@@51 $Heap@@54 this@@81) (_module.OwnedObject.inv2 $prevHeap@@51 $Heap@@54 this@@81) ($IsGoodHeap $Heap@@54))
))))
(assert (forall ((bx@@7 T@U) ) (!  (=> ($IsBox bx@@7 Tclass._module.Universe) (and (= ($Box refType ($Unbox refType bx@@7)) bx@@7) ($Is refType ($Unbox refType bx@@7) Tclass._module.Universe)))
 :pattern ( ($IsBox bx@@7 Tclass._module.Universe))
)))
(assert (forall ((bx@@8 T@U) ) (!  (=> ($IsBox bx@@8 Tclass._module.Thread) (and (= ($Box refType ($Unbox refType bx@@8)) bx@@8) ($Is refType ($Unbox refType bx@@8) Tclass._module.Thread)))
 :pattern ( ($IsBox bx@@8 Tclass._module.Thread))
)))
(assert (forall ((bx@@9 T@U) ) (!  (=> ($IsBox bx@@9 Tclass._module.Mutex) (and (= ($Box refType ($Unbox refType bx@@9)) bx@@9) ($Is refType ($Unbox refType bx@@9) Tclass._module.Mutex)))
 :pattern ( ($IsBox bx@@9 Tclass._module.Mutex))
)))
(assert (forall ((bx@@10 T@U) ) (!  (=> ($IsBox bx@@10 Tclass._module.MutexGuardU32) (and (= ($Box refType ($Unbox refType bx@@10)) bx@@10) ($Is refType ($Unbox refType bx@@10) Tclass._module.MutexGuardU32)))
 :pattern ( ($IsBox bx@@10 Tclass._module.MutexGuardU32))
)))
(assert (forall ((bx@@11 T@U) ) (!  (=> ($IsBox bx@@11 Tclass._module.Universe?) (and (= ($Box refType ($Unbox refType bx@@11)) bx@@11) ($Is refType ($Unbox refType bx@@11) Tclass._module.Universe?)))
 :pattern ( ($IsBox bx@@11 Tclass._module.Universe?))
)))
(assert (forall ((bx@@12 T@U) ) (!  (=> ($IsBox bx@@12 Tclass._module.Object) (and (= ($Box refType ($Unbox refType bx@@12)) bx@@12) ($Is refType ($Unbox refType bx@@12) Tclass._module.Object)))
 :pattern ( ($IsBox bx@@12 Tclass._module.Object))
)))
(assert (forall ((bx@@13 T@U) ) (!  (=> ($IsBox bx@@13 Tclass._module.OwnedU32) (and (= ($Box refType ($Unbox refType bx@@13)) bx@@13) ($Is refType ($Unbox refType bx@@13) Tclass._module.OwnedU32)))
 :pattern ( ($IsBox bx@@13 Tclass._module.OwnedU32))
)))
(assert (forall ((bx@@14 T@U) ) (!  (=> ($IsBox bx@@14 Tclass._module.Object?) (and (= ($Box refType ($Unbox refType bx@@14)) bx@@14) ($Is refType ($Unbox refType bx@@14) Tclass._module.Object?)))
 :pattern ( ($IsBox bx@@14 Tclass._module.Object?))
)))
(assert (forall ((bx@@15 T@U) ) (!  (=> ($IsBox bx@@15 Tclass._module.OwnedObject) (and (= ($Box refType ($Unbox refType bx@@15)) bx@@15) ($Is refType ($Unbox refType bx@@15) Tclass._module.OwnedObject)))
 :pattern ( ($IsBox bx@@15 Tclass._module.OwnedObject))
)))
(assert (forall ((bx@@16 T@U) ) (!  (=> ($IsBox bx@@16 Tclass._module.Thread?) (and (= ($Box refType ($Unbox refType bx@@16)) bx@@16) ($Is refType ($Unbox refType bx@@16) Tclass._module.Thread?)))
 :pattern ( ($IsBox bx@@16 Tclass._module.Thread?))
)))
(assert (forall ((bx@@17 T@U) ) (!  (=> ($IsBox bx@@17 Tclass._module.OwnedObject?) (and (= ($Box refType ($Unbox refType bx@@17)) bx@@17) ($Is refType ($Unbox refType bx@@17) Tclass._module.OwnedObject?)))
 :pattern ( ($IsBox bx@@17 Tclass._module.OwnedObject?))
)))
(assert (forall ((bx@@18 T@U) ) (!  (=> ($IsBox bx@@18 Tclass._module.OwnedU32?) (and (= ($Box refType ($Unbox refType bx@@18)) bx@@18) ($Is refType ($Unbox refType bx@@18) Tclass._module.OwnedU32?)))
 :pattern ( ($IsBox bx@@18 Tclass._module.OwnedU32?))
)))
(assert (forall ((bx@@19 T@U) ) (!  (=> ($IsBox bx@@19 Tclass._module.Mutex?) (and (= ($Box refType ($Unbox refType bx@@19)) bx@@19) ($Is refType ($Unbox refType bx@@19) Tclass._module.Mutex?)))
 :pattern ( ($IsBox bx@@19 Tclass._module.Mutex?))
)))
(assert (forall ((bx@@20 T@U) ) (!  (=> ($IsBox bx@@20 Tclass._module.MutexGuardU32?) (and (= ($Box refType ($Unbox refType bx@@20)) bx@@20) ($Is refType ($Unbox refType bx@@20) Tclass._module.MutexGuardU32?)))
 :pattern ( ($IsBox bx@@20 Tclass._module.MutexGuardU32?))
)))
(assert (forall ((|c#0@@6| T@U) ) (! (= ($Is refType |c#0@@6| Tclass._module.Universe)  (and ($Is refType |c#0@@6| Tclass._module.Universe?) (or (not (= |c#0@@6| null)) (not true))))
 :pattern ( ($Is refType |c#0@@6| Tclass._module.Universe))
 :pattern ( ($Is refType |c#0@@6| Tclass._module.Universe?))
)))
(assert (forall ((|c#0@@7| T@U) ) (! (= ($Is refType |c#0@@7| Tclass._module.Object)  (and ($Is refType |c#0@@7| Tclass._module.Object?) (or (not (= |c#0@@7| null)) (not true))))
 :pattern ( ($Is refType |c#0@@7| Tclass._module.Object))
 :pattern ( ($Is refType |c#0@@7| Tclass._module.Object?))
)))
(assert (forall ((|c#0@@8| T@U) ) (! (= ($Is refType |c#0@@8| Tclass._module.Thread)  (and ($Is refType |c#0@@8| Tclass._module.Thread?) (or (not (= |c#0@@8| null)) (not true))))
 :pattern ( ($Is refType |c#0@@8| Tclass._module.Thread))
 :pattern ( ($Is refType |c#0@@8| Tclass._module.Thread?))
)))
(assert (forall ((|c#0@@9| T@U) ) (! (= ($Is refType |c#0@@9| Tclass._module.OwnedObject)  (and ($Is refType |c#0@@9| Tclass._module.OwnedObject?) (or (not (= |c#0@@9| null)) (not true))))
 :pattern ( ($Is refType |c#0@@9| Tclass._module.OwnedObject))
 :pattern ( ($Is refType |c#0@@9| Tclass._module.OwnedObject?))
)))
(assert (forall ((|c#0@@10| T@U) ) (! (= ($Is refType |c#0@@10| Tclass._module.OwnedU32)  (and ($Is refType |c#0@@10| Tclass._module.OwnedU32?) (or (not (= |c#0@@10| null)) (not true))))
 :pattern ( ($Is refType |c#0@@10| Tclass._module.OwnedU32))
 :pattern ( ($Is refType |c#0@@10| Tclass._module.OwnedU32?))
)))
(assert (forall ((|c#0@@11| T@U) ) (! (= ($Is refType |c#0@@11| Tclass._module.Mutex)  (and ($Is refType |c#0@@11| Tclass._module.Mutex?) (or (not (= |c#0@@11| null)) (not true))))
 :pattern ( ($Is refType |c#0@@11| Tclass._module.Mutex))
 :pattern ( ($Is refType |c#0@@11| Tclass._module.Mutex?))
)))
(assert (forall ((|c#0@@12| T@U) ) (! (= ($Is refType |c#0@@12| Tclass._module.MutexGuardU32)  (and ($Is refType |c#0@@12| Tclass._module.MutexGuardU32?) (or (not (= |c#0@@12| null)) (not true))))
 :pattern ( ($Is refType |c#0@@12| Tclass._module.MutexGuardU32))
 :pattern ( ($Is refType |c#0@@12| Tclass._module.MutexGuardU32?))
)))
(assert (forall (($h@@25 T@U) ($o@@55 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@25) (and (or (not (= $o@@55 null)) (not true)) (= (dtype $o@@55) Tclass._module.Mutex?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@25 $o@@55) alloc)))) ($IsAlloc refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@25 $o@@55) _module.Mutex.data)) Tclass._module.OwnedU32 $h@@25))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@25 $o@@55) _module.Mutex.data)))
)))
(assert (forall (($h@@26 T@U) ($o@@56 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@26) (and (or (not (= $o@@56 null)) (not true)) (= (dtype $o@@56) Tclass._module.MutexGuardU32?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@26 $o@@56) alloc)))) ($IsAlloc refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@26 $o@@56) _module.MutexGuardU32.mutex)) Tclass._module.Mutex $h@@26))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@26 $o@@56) _module.MutexGuardU32.mutex)))
)))
(assert (forall (($h@@27 T@U) ($o@@57 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@27) (and (or (not (= $o@@57 null)) (not true)) (= (dtype $o@@57) Tclass._module.MutexGuardU32?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@27 $o@@57) alloc)))) ($IsAlloc refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@27 $o@@57) _module.MutexGuardU32.data)) Tclass._module.OwnedU32 $h@@27))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@27 $o@@57) _module.MutexGuardU32.data)))
)))
(assert (forall (($o@@58 T@U) ($heap T@U) ) (!  (=> ($IsAlloc refType $o@@58 Tclass._module.Thread? $heap) ($IsAlloc refType $o@@58 Tclass._module.Object? $heap))
 :pattern ( ($IsAlloc refType $o@@58 Tclass._module.Thread? $heap))
)))
(assert (forall (($o@@59 T@U) ($heap@@0 T@U) ) (!  (=> ($IsAlloc refType $o@@59 Tclass._module.OwnedObject? $heap@@0) ($IsAlloc refType $o@@59 Tclass._module.Object? $heap@@0))
 :pattern ( ($IsAlloc refType $o@@59 Tclass._module.OwnedObject? $heap@@0))
)))
(assert (forall (($o@@60 T@U) ($heap@@1 T@U) ) (!  (=> ($IsAlloc refType $o@@60 Tclass._module.OwnedU32? $heap@@1) ($IsAlloc refType $o@@60 Tclass._module.OwnedObject? $heap@@1))
 :pattern ( ($IsAlloc refType $o@@60 Tclass._module.OwnedU32? $heap@@1))
)))
(assert (forall (($o@@61 T@U) ($heap@@2 T@U) ) (!  (=> ($IsAlloc refType $o@@61 Tclass._module.Mutex? $heap@@2) ($IsAlloc refType $o@@61 Tclass._module.OwnedObject? $heap@@2))
 :pattern ( ($IsAlloc refType $o@@61 Tclass._module.Mutex? $heap@@2))
)))
(assert (forall (($o@@62 T@U) ($heap@@3 T@U) ) (!  (=> ($IsAlloc refType $o@@62 Tclass._module.MutexGuardU32? $heap@@3) ($IsAlloc refType $o@@62 Tclass._module.OwnedObject? $heap@@3))
 :pattern ( ($IsAlloc refType $o@@62 Tclass._module.MutexGuardU32? $heap@@3))
)))
(assert (forall (($h@@28 T@U) ($o@@63 T@U) ) (!  (=> (and ($IsGoodHeap $h@@28) (and (or (not (= $o@@63 null)) (not true)) (= (dtype $o@@63) Tclass._module.Mutex?))) ($Is SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@28 $o@@63) _module.Mutex.guards)) (TSet Tclass._module.MutexGuardU32)))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@28 $o@@63) _module.Mutex.guards)))
)))
(assert (forall (($h@@29 T@U) ($o@@64 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@29) (and (or (not (= $o@@64 null)) (not true)) (= (dtype $o@@64) Tclass._module.Mutex?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@29 $o@@64) alloc)))) ($IsAlloc SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@29 $o@@64) _module.Mutex.guards)) (TSet Tclass._module.MutexGuardU32) $h@@29))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@29 $o@@64) _module.Mutex.guards)))
)))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($prevHeap@@52 T@U) ($Heap@@55 T@U) (this@@82 T@U) ) (!  (=> (or (|_module.MutexGuardU32.userInv2#canCall| $prevHeap@@52 $Heap@@55 this@@82) (and (< 3 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@52) ($IsGoodHeap $Heap@@55)) ($HeapSucc $prevHeap@@52 $Heap@@55)) (and (or (not (= this@@82 null)) (not true)) (and ($Is refType this@@82 Tclass._module.MutexGuardU32) ($IsAlloc refType this@@82 Tclass._module.MutexGuardU32 $prevHeap@@52)))))) (and (and (|_module.MutexGuardU32.localUserInv2#canCall| $prevHeap@@52 $Heap@@55 this@@82) (=> (_module.MutexGuardU32.localUserInv2 $prevHeap@@52 $Heap@@55 this@@82) (|_module.OwnedObject.localInv2#canCall| $prevHeap@@52 $Heap@@55 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@55 this@@82) _module.MutexGuardU32.mutex))))) (= (_module.MutexGuardU32.userInv2 $prevHeap@@52 $Heap@@55 this@@82)  (and (_module.MutexGuardU32.localUserInv2 $prevHeap@@52 $Heap@@55 this@@82) (_module.OwnedObject.localInv2 $prevHeap@@52 $Heap@@55 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@55 this@@82) _module.MutexGuardU32.mutex)))))))
 :pattern ( (_module.MutexGuardU32.userInv2 $prevHeap@@52 $Heap@@55 this@@82) ($IsGoodHeap $Heap@@55))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@53 T@U) ($Heap@@56 T@U) (this@@83 T@U) ) (!  (=> (or (|_module.Thread.localInv2#canCall| $prevHeap@@53 $Heap@@56 this@@83) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@53) ($IsGoodHeap $Heap@@56)) ($HeapSucc $prevHeap@@53 $Heap@@56)) (and (or (not (= this@@83 null)) (not true)) (and ($Is refType this@@83 Tclass._module.Thread) ($IsAlloc refType this@@83 Tclass._module.Thread $prevHeap@@53)))))) (= (_module.Thread.localInv2 $prevHeap@@53 $Heap@@56 this@@83) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.Thread.localInv2 $prevHeap@@53 $Heap@@56 this@@83) ($IsGoodHeap $Heap@@56))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@54 T@U) ($Heap@@57 T@U) (this@@84 T@U) ) (!  (=> (or (|_module.Thread.sequenceInv2#canCall| $prevHeap@@54 $Heap@@57 this@@84) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@54) ($IsGoodHeap $Heap@@57)) ($HeapSucc $prevHeap@@54 $Heap@@57)) (and (or (not (= this@@84 null)) (not true)) (and ($Is refType this@@84 Tclass._module.Thread) ($IsAlloc refType this@@84 Tclass._module.Thread $prevHeap@@54)))))) (= (_module.Thread.sequenceInv2 $prevHeap@@54 $Heap@@57 this@@84) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.Thread.sequenceInv2 $prevHeap@@54 $Heap@@57 this@@84) ($IsGoodHeap $Heap@@57))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@55 T@U) ($Heap@@58 T@U) (this@@85 T@U) ) (!  (=> (or (|_module.OwnedU32.localUserInv2#canCall| $prevHeap@@55 $Heap@@58 this@@85) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@55) ($IsGoodHeap $Heap@@58)) ($HeapSucc $prevHeap@@55 $Heap@@58)) (and (or (not (= this@@85 null)) (not true)) (and ($Is refType this@@85 Tclass._module.OwnedU32) ($IsAlloc refType this@@85 Tclass._module.OwnedU32 $prevHeap@@55)))))) (= (_module.OwnedU32.localUserInv2 $prevHeap@@55 $Heap@@58 this@@85) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.OwnedU32.localUserInv2 $prevHeap@@55 $Heap@@58 this@@85) ($IsGoodHeap $Heap@@58))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@56 T@U) ($Heap@@59 T@U) (this@@86 T@U) ) (!  (=> (or (|_module.Mutex.unchangedNonvolatileUserFields#canCall| $prevHeap@@56 $Heap@@59 this@@86) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@56) ($IsGoodHeap $Heap@@59)) ($HeapSucc $prevHeap@@56 $Heap@@59)) (and (or (not (= this@@86 null)) (not true)) (and ($Is refType this@@86 Tclass._module.Mutex) ($IsAlloc refType this@@86 Tclass._module.Mutex $prevHeap@@56)))))) (= (_module.Mutex.unchangedNonvolatileUserFields $prevHeap@@56 $Heap@@59 this@@86) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.Mutex.unchangedNonvolatileUserFields $prevHeap@@56 $Heap@@59 this@@86) ($IsGoodHeap $Heap@@59))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@57 T@U) ($Heap@@60 T@U) (this@@87 T@U) ) (!  (=> (or (|_module.Mutex.userInv2#canCall| $prevHeap@@57 $Heap@@60 this@@87) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@57) ($IsGoodHeap $Heap@@60)) ($HeapSucc $prevHeap@@57 $Heap@@60)) (and (or (not (= this@@87 null)) (not true)) (and ($Is refType this@@87 Tclass._module.Mutex) ($IsAlloc refType this@@87 Tclass._module.Mutex $prevHeap@@57)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.Mutex.localUserInv2#canCall| $prevHeap@@57 $Heap@@60 this@@87)) (= (_module.Mutex.userInv2 $prevHeap@@57 $Heap@@60 this@@87)  (and true (_module.Mutex.localUserInv2 $prevHeap@@57 $Heap@@60 this@@87)))))
 :pattern ( (_module.Mutex.userInv2 $prevHeap@@57 $Heap@@60 this@@87) ($IsGoodHeap $Heap@@60))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($prevHeap@@58 T@U) ($Heap@@61 T@U) (this@@88 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv2#canCall| $prevHeap@@58 $Heap@@61 this@@88) (and (< 2 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@58) ($IsGoodHeap $Heap@@61)) ($HeapSucc $prevHeap@@58 $Heap@@61)) (and (or (not (= this@@88 null)) (not true)) (and ($Is refType this@@88 Tclass._module.OwnedObject) ($IsAlloc refType this@@88 Tclass._module.OwnedObject $prevHeap@@58)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.OwnedObject.localUserInv2#canCall| $prevHeap@@58 $Heap@@61 this@@88)) (= (_module.OwnedObject.localInv2 $prevHeap@@58 $Heap@@61 this@@88)  (and true (_module.OwnedObject.localUserInv2 $prevHeap@@58 $Heap@@61 this@@88)))))
 :pattern ( (_module.OwnedObject.localInv2 $prevHeap@@58 $Heap@@61 this@@88) ($IsGoodHeap $Heap@@61))
))))
(assert (forall (($h0@@26 T@U) ($h1@@26 T@U) (this@@89 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@26) ($IsGoodHeap $h1@@26)) (and (or (not (= this@@89 null)) (not true)) ($Is refType this@@89 Tclass._module.Object))) (and ($IsHeapAnchor $h0@@26) ($HeapSucc $h0@@26 $h1@@26))) (=> (forall (($o@@65 T@U) ($f@@36 T@U) )  (=> (and (or (not (= $o@@65 null)) (not true)) (or (= $o@@65 this@@89) (= $o@@65 (_module.Object.universe this@@89)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@26 $o@@65) $f@@36) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@26 $o@@65) $f@@36)))) (= (_module.Object.baseFieldsInv $h0@@26 this@@89) (_module.Object.baseFieldsInv $h1@@26 this@@89))))
 :pattern ( ($IsHeapAnchor $h0@@26) ($HeapSucc $h0@@26 $h1@@26) (_module.Object.baseFieldsInv $h1@@26 this@@89))
)))
(assert (forall (($h0@@27 T@U) ($h1@@27 T@U) (this@@90 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@27) ($IsGoodHeap $h1@@27)) (and (or (not (= this@@90 null)) (not true)) ($Is refType this@@90 Tclass._module.Thread))) (and ($IsHeapAnchor $h0@@27) ($HeapSucc $h0@@27 $h1@@27))) (=> (forall (($o@@66 T@U) ($f@@37 T@U) )  (=> (and (or (not (= $o@@66 null)) (not true)) (or (= $o@@66 this@@90) (= $o@@66 (_module.Object.universe this@@90)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@27 $o@@66) $f@@37) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@27 $o@@66) $f@@37)))) (= (_module.Thread.baseFieldsInv $h0@@27 this@@90) (_module.Thread.baseFieldsInv $h1@@27 this@@90))))
 :pattern ( ($IsHeapAnchor $h0@@27) ($HeapSucc $h0@@27 $h1@@27) (_module.Thread.baseFieldsInv $h1@@27 this@@90))
)))
(assert (forall (($h0@@28 T@U) ($h1@@28 T@U) (this@@91 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@28) ($IsGoodHeap $h1@@28)) (and (or (not (= this@@91 null)) (not true)) ($Is refType this@@91 Tclass._module.OwnedObject))) (and ($IsHeapAnchor $h0@@28) ($HeapSucc $h0@@28 $h1@@28))) (=> (forall (($o@@67 T@U) ($f@@38 T@U) )  (=> (and (or (not (= $o@@67 null)) (not true)) (or (= $o@@67 this@@91) (= $o@@67 (_module.Object.universe this@@91)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@28 $o@@67) $f@@38) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@28 $o@@67) $f@@38)))) (= (_module.OwnedObject.baseFieldsInv $h0@@28 this@@91) (_module.OwnedObject.baseFieldsInv $h1@@28 this@@91))))
 :pattern ( ($IsHeapAnchor $h0@@28) ($HeapSucc $h0@@28 $h1@@28) (_module.OwnedObject.baseFieldsInv $h1@@28 this@@91))
)))
(assert (forall (($h0@@29 T@U) ($h1@@29 T@U) (this@@92 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@29) ($IsGoodHeap $h1@@29)) (and (or (not (= this@@92 null)) (not true)) ($Is refType this@@92 Tclass._module.OwnedObject))) (and ($IsHeapAnchor $h0@@29) ($HeapSucc $h0@@29 $h1@@29))) (=> (forall (($o@@68 T@U) ($f@@39 T@U) )  (=> (and (or (not (= $o@@68 null)) (not true)) (or (= $o@@68 this@@92) (= $o@@68 (_module.Object.universe this@@92)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@29 $o@@68) $f@@39) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@29 $o@@68) $f@@39)))) (= (_module.OwnedObject.baseUserFieldsInv $h0@@29 this@@92) (_module.OwnedObject.baseUserFieldsInv $h1@@29 this@@92))))
 :pattern ( ($IsHeapAnchor $h0@@29) ($HeapSucc $h0@@29 $h1@@29) (_module.OwnedObject.baseUserFieldsInv $h1@@29 this@@92))
)))
(assert (forall (($h0@@30 T@U) ($h1@@30 T@U) (this@@93 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@30) ($IsGoodHeap $h1@@30)) (and (or (not (= this@@93 null)) (not true)) ($Is refType this@@93 Tclass._module.OwnedU32))) (and ($IsHeapAnchor $h0@@30) ($HeapSucc $h0@@30 $h1@@30))) (=> (forall (($o@@69 T@U) ($f@@40 T@U) )  (=> (and (or (not (= $o@@69 null)) (not true)) (or (= $o@@69 this@@93) (= $o@@69 (_module.Object.universe this@@93)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@30 $o@@69) $f@@40) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@30 $o@@69) $f@@40)))) (= (_module.OwnedU32.baseUserFieldsInv $h0@@30 this@@93) (_module.OwnedU32.baseUserFieldsInv $h1@@30 this@@93))))
 :pattern ( ($IsHeapAnchor $h0@@30) ($HeapSucc $h0@@30 $h1@@30) (_module.OwnedU32.baseUserFieldsInv $h1@@30 this@@93))
)))
(assert (forall (($h0@@31 T@U) ($h1@@31 T@U) (this@@94 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@31) ($IsGoodHeap $h1@@31)) (and (or (not (= this@@94 null)) (not true)) ($Is refType this@@94 Tclass._module.Mutex))) (and ($IsHeapAnchor $h0@@31) ($HeapSucc $h0@@31 $h1@@31))) (=> (forall (($o@@70 T@U) ($f@@41 T@U) )  (=> (and (or (not (= $o@@70 null)) (not true)) (or (= $o@@70 this@@94) (= $o@@70 (_module.Object.universe this@@94)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@31 $o@@70) $f@@41) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@31 $o@@70) $f@@41)))) (= (_module.Mutex.baseUserFieldsInv $h0@@31 this@@94) (_module.Mutex.baseUserFieldsInv $h1@@31 this@@94))))
 :pattern ( ($IsHeapAnchor $h0@@31) ($HeapSucc $h0@@31 $h1@@31) (_module.Mutex.baseUserFieldsInv $h1@@31 this@@94))
)))
(assert (forall (($h0@@32 T@U) ($h1@@32 T@U) (this@@95 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@32) ($IsGoodHeap $h1@@32)) (and (or (not (= this@@95 null)) (not true)) ($Is refType this@@95 Tclass._module.MutexGuardU32))) (and ($IsHeapAnchor $h0@@32) ($HeapSucc $h0@@32 $h1@@32))) (=> (forall (($o@@71 T@U) ($f@@42 T@U) )  (=> (and (or (not (= $o@@71 null)) (not true)) (or (= $o@@71 this@@95) (= $o@@71 (_module.Object.universe this@@95)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@32 $o@@71) $f@@42) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@32 $o@@71) $f@@42)))) (= (_module.MutexGuardU32.baseUserFieldsInv $h0@@32 this@@95) (_module.MutexGuardU32.baseUserFieldsInv $h1@@32 this@@95))))
 :pattern ( ($IsHeapAnchor $h0@@32) ($HeapSucc $h0@@32 $h1@@32) (_module.MutexGuardU32.baseUserFieldsInv $h1@@32 this@@95))
)))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($prevHeap@@59 T@U) ($Heap@@62 T@U) (this@@96 T@U) ) (!  (=> (or (|_module.OwnedObject.sequenceInv2#canCall| $prevHeap@@59 $Heap@@62 this@@96) (and (< 3 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@59) ($IsGoodHeap $Heap@@62)) ($HeapSucc $prevHeap@@59 $Heap@@62)) (and (or (not (= this@@96 null)) (not true)) (and ($Is refType this@@96 Tclass._module.OwnedObject) ($IsAlloc refType this@@96 Tclass._module.OwnedObject $prevHeap@@59)))))) (and (=> (<= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@59 this@@96) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 this@@96) _module.OwnedObject.nonvolatileVersion)))) (and (=> (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@59 this@@96) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 this@@96) _module.OwnedObject.nonvolatileVersion)))) (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.OwnedObject.unchangedNonvolatileFields#canCall| $prevHeap@@59 $Heap@@62 this@@96))) (=> (=> (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@59 this@@96) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 this@@96) _module.OwnedObject.nonvolatileVersion)))) (and true (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@59 $Heap@@62 this@@96))) (=> ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@59 this@@96) _module.OwnedObject.owner)) Tclass._module.OwnedObject) (let ((|oldOwner#0| ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@59 this@@96) _module.OwnedObject.owner))))
(|_module.OwnedObject.volatileOwns#canCall| |oldOwner#0|)))))) (= (_module.OwnedObject.sequenceInv2 $prevHeap@@59 $Heap@@62 this@@96)  (and (and (<= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@59 this@@96) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 this@@96) _module.OwnedObject.nonvolatileVersion)))) (=> (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@59 this@@96) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 this@@96) _module.OwnedObject.nonvolatileVersion)))) (and true (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@59 $Heap@@62 this@@96)))) (=> ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@59 this@@96) _module.OwnedObject.owner)) Tclass._module.OwnedObject) (let ((|oldOwner#0@@0| ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@59 this@@96) _module.OwnedObject.owner))))
 (=> (and (not (_module.OwnedObject.volatileOwns |oldOwner#0@@0|)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@59 |oldOwner#0@@0|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 |oldOwner#0@@0|) _module.OwnedObject.nonvolatileVersion))))) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@59 this@@96) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@62 this@@96) _module.OwnedObject.nonvolatileVersion)))))))))))
 :pattern ( (_module.OwnedObject.sequenceInv2 $prevHeap@@59 $Heap@@62 this@@96) ($IsGoodHeap $Heap@@62))
))))
(assert (forall ((a@@3 T@U) (b@@0 T@U) ) (!  (=> (|Set#Equal| a@@3 b@@0) (= a@@3 b@@0))
 :pattern ( (|Set#Equal| a@@3 b@@0))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@63 T@U) (this@@97 T@U) ) (!  (=> (or (|_module.Object.triggerAxioms#canCall| $Heap@@63 this@@97) (and (< 1 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@63) (and (or (not (= this@@97 null)) (not true)) (and ($Is refType this@@97 Tclass._module.Object) ($IsAlloc refType this@@97 Tclass._module.Object $Heap@@63)))))) (_module.Object.triggerAxioms $Heap@@63 this@@97))
 :pattern ( (_module.Object.triggerAxioms $Heap@@63 this@@97))
))))
(assert (forall ((a@@4 T@U) (b@@1 T@U) (c T@U) ) (!  (=> (or (not (= a@@4 c)) (not true)) (=> (and ($HeapSucc a@@4 b@@1) ($HeapSucc b@@1 c)) ($HeapSucc a@@4 c)))
 :pattern ( ($HeapSucc a@@4 b@@1) ($HeapSucc b@@1 c))
)))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@64 T@U) (this@@98 T@U) ) (!  (=> (or (|_module.MutexGuardU32.userInv#canCall| $Heap@@64 this@@98) (and (< 9 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@64) (and (or (not (= this@@98 null)) (not true)) (and ($Is refType this@@98 Tclass._module.MutexGuardU32) ($IsAlloc refType this@@98 Tclass._module.MutexGuardU32 $Heap@@64)))))) (and (and (|_module.MutexGuardU32.localUserInv#canCall| $Heap@@64 this@@98) (=> (_module.MutexGuardU32.localUserInv $Heap@@64 this@@98) (|_module.OwnedObject.localInv#canCall| $Heap@@64 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@64 this@@98) _module.MutexGuardU32.mutex))))) (= (_module.MutexGuardU32.userInv $Heap@@64 this@@98)  (and (_module.MutexGuardU32.localUserInv $Heap@@64 this@@98) (_module.OwnedObject.localInv $Heap@@64 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@64 this@@98) _module.MutexGuardU32.mutex)))))))
 :pattern ( (_module.MutexGuardU32.userInv $Heap@@64 this@@98) ($IsGoodHeap $Heap@@64))
))))
(assert (forall ((cl T@U) (nm T@U) ) (!  (and (= (DeclType (FieldOfDecl cl nm)) cl) (= (DeclName (FieldOfDecl cl nm)) nm))
 :pattern ( (FieldOfDecl cl nm))
)))
(assert (forall ((bx@@21 T@U) ) (!  (=> ($IsBox bx@@21 TInt) (and (= ($Box intType ($Unbox intType bx@@21)) bx@@21) ($Is intType ($Unbox intType bx@@21) TInt)))
 :pattern ( ($IsBox bx@@21 TInt))
)))
(assert (forall ((bx@@22 T@U) ) (!  (=> ($IsBox bx@@22 TBool) (and (= ($Box boolType ($Unbox boolType bx@@22)) bx@@22) ($Is boolType ($Unbox boolType bx@@22) TBool)))
 :pattern ( ($IsBox bx@@22 TBool))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@65 T@U) (this@@99 T@U) ) (!  (=> (or (|_module.OwnedU32.userInv#canCall| $Heap@@65 this@@99) (and (< 1 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@65) (and (or (not (= this@@99 null)) (not true)) (and ($Is refType this@@99 Tclass._module.OwnedU32) ($IsAlloc refType this@@99 Tclass._module.OwnedU32 $Heap@@65)))))) (=> (_module.OwnedU32.userInv $Heap@@65 this@@99) (_module.OwnedU32.localUserInv $Heap@@65 this@@99)))
 :pattern ( (_module.OwnedU32.userInv $Heap@@65 this@@99))
))))
(assert  (=> (<= 8 $FunctionContextHeight) (forall (($Heap@@66 T@U) (this@@100 T@U) ) (!  (=> (or (|_module.Thread.localInv#canCall| $Heap@@66 this@@100) (and (< 8 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@66) (and (or (not (= this@@100 null)) (not true)) (and ($Is refType this@@100 Tclass._module.Thread) ($IsAlloc refType this@@100 Tclass._module.Thread $Heap@@66)))))) (=> (_module.Thread.localInv $Heap@@66 this@@100) (_module.Object.objectGlobalBaseInv $Heap@@66 this@@100)))
 :pattern ( (_module.Thread.localInv $Heap@@66 this@@100))
))))
(assert  (=> (<= 8 $FunctionContextHeight) (forall (($Heap@@67 T@U) (this@@101 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv#canCall| $Heap@@67 this@@101) (and (< 8 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@67) (and (or (not (= this@@101 null)) (not true)) (and ($Is refType this@@101 Tclass._module.OwnedObject) ($IsAlloc refType this@@101 Tclass._module.OwnedObject $Heap@@67)))))) (=> (_module.OwnedObject.localInv $Heap@@67 this@@101) (_module.Object.objectGlobalBaseInv $Heap@@67 this@@101)))
 :pattern ( (_module.OwnedObject.localInv $Heap@@67 this@@101))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@68 T@U) (this@@102 T@U) ) (!  (=> (or (|_module.Object.localInv#canCall| $Heap@@68 this@@102) (and (< 9 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@68) (and (or (not (= this@@102 null)) (not true)) (and ($Is refType this@@102 Tclass._module.Object) ($IsAlloc refType this@@102 Tclass._module.Object $Heap@@68)))))) (=> (_module.Object.localInv $Heap@@68 this@@102) (_module.Object.objectGlobalBaseInv $Heap@@68 this@@102)))
 :pattern ( (_module.Object.localInv $Heap@@68 this@@102))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@69 T@U) (this@@103 T@U) ) (!  (=> (or (|_module.Thread.inv#canCall| $Heap@@69 this@@103) (and (< 9 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@69) (and (or (not (= this@@103 null)) (not true)) (and ($Is refType this@@103 Tclass._module.Thread) ($IsAlloc refType this@@103 Tclass._module.Thread $Heap@@69)))))) (=> (_module.Thread.inv $Heap@@69 this@@103) (_module.Thread.localInv $Heap@@69 this@@103)))
 :pattern ( (_module.Thread.inv $Heap@@69 this@@103))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@70 T@U) (this@@104 T@U) ) (!  (=> (or (|_module.Mutex.userInv#canCall| $Heap@@70 this@@104) (and (< 9 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@70) (and (or (not (= this@@104 null)) (not true)) (and ($Is refType this@@104 Tclass._module.Mutex) ($IsAlloc refType this@@104 Tclass._module.Mutex $Heap@@70)))))) (=> (_module.Mutex.userInv $Heap@@70 this@@104) (_module.Mutex.localUserInv $Heap@@70 this@@104)))
 :pattern ( (_module.Mutex.userInv $Heap@@70 this@@104))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@71 T@U) (this@@105 T@U) ) (!  (=> (or (|_module.MutexGuardU32.userInv#canCall| $Heap@@71 this@@105) (and (< 9 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@71) (and (or (not (= this@@105 null)) (not true)) (and ($Is refType this@@105 Tclass._module.MutexGuardU32) ($IsAlloc refType this@@105 Tclass._module.MutexGuardU32 $Heap@@71)))))) (=> (_module.MutexGuardU32.userInv $Heap@@71 this@@105) (_module.MutexGuardU32.localUserInv $Heap@@71 this@@105)))
 :pattern ( (_module.MutexGuardU32.userInv $Heap@@71 this@@105))
))))
(assert  (=> (<= 10 $FunctionContextHeight) (forall (($Heap@@72 T@U) (this@@106 T@U) ) (!  (=> (or (|_module.OwnedObject.userInv#canCall| $Heap@@72 this@@106) (and (< 10 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@72) (and (or (not (= this@@106 null)) (not true)) (and ($Is refType this@@106 Tclass._module.OwnedObject) ($IsAlloc refType this@@106 Tclass._module.OwnedObject $Heap@@72)))))) (=> (_module.OwnedObject.userInv $Heap@@72 this@@106) (_module.OwnedObject.localUserInv $Heap@@72 this@@106)))
 :pattern ( (_module.OwnedObject.userInv $Heap@@72 this@@106))
))))
(assert  (=> (<= 11 $FunctionContextHeight) (forall (($Heap@@73 T@U) (this@@107 T@U) ) (!  (=> (or (|_module.OwnedObject.inv#canCall| $Heap@@73 this@@107) (and (< 11 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@73) (and (or (not (= this@@107 null)) (not true)) (and ($Is refType this@@107 Tclass._module.OwnedObject) ($IsAlloc refType this@@107 Tclass._module.OwnedObject $Heap@@73)))))) (=> (_module.OwnedObject.inv $Heap@@73 this@@107) (_module.OwnedObject.localInv $Heap@@73 this@@107)))
 :pattern ( (_module.OwnedObject.inv $Heap@@73 this@@107))
))))
(assert  (=> (<= 12 $FunctionContextHeight) (forall (($Heap@@74 T@U) (this@@108 T@U) ) (!  (=> (or (|_module.Object.inv#canCall| $Heap@@74 this@@108) (and (< 12 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@74) (and (or (not (= this@@108 null)) (not true)) (and ($Is refType this@@108 Tclass._module.Object) ($IsAlloc refType this@@108 Tclass._module.Object $Heap@@74)))))) (=> (_module.Object.inv $Heap@@74 this@@108) (_module.Object.localInv $Heap@@74 this@@108)))
 :pattern ( (_module.Object.inv $Heap@@74 this@@108))
))))
(assert (forall ((v@@2 T@U) (t@@2 T@U) (T@@3 T@T) ) (! (= ($IsBox ($Box T@@3 v@@2) t@@2) ($Is T@@3 v@@2 t@@2))
 :pattern ( ($IsBox ($Box T@@3 v@@2) t@@2))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($prevHeap@@60 T@U) ($Heap@@75 T@U) (this@@109 T@U) ) (!  (=> (or (|_module.OwnedObject.unchangedNonvolatileFields#canCall| $prevHeap@@60 $Heap@@75 this@@109) (and (< 2 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@60) ($IsGoodHeap $Heap@@75)) ($HeapSucc $prevHeap@@60 $Heap@@75)) (and (or (not (= this@@109 null)) (not true)) (and ($Is refType this@@109 Tclass._module.OwnedObject) ($IsAlloc refType this@@109 Tclass._module.OwnedObject $prevHeap@@60)))))) (and (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@60 this@@109) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@75 this@@109) _module.OwnedObject.owner))) (|_module.OwnedObject.unchangedNonvolatileUserFields#canCall| $prevHeap@@60 $Heap@@75 this@@109)) (= (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@60 $Heap@@75 this@@109)  (and (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@60 this@@109) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@75 this@@109) _module.OwnedObject.owner))) (_module.OwnedObject.unchangedNonvolatileUserFields $prevHeap@@60 $Heap@@75 this@@109)))))
 :pattern ( (_module.OwnedObject.unchangedNonvolatileFields $prevHeap@@60 $Heap@@75 this@@109) ($IsGoodHeap $Heap@@75))
))))
(assert (forall ((v@@3 T@U) (t0@@2 T@U) (h@@3 T@U) ) (! (= ($IsAlloc SetType v@@3 (TSet t0@@2) h@@3) (forall ((bx@@23 T@U) ) (!  (=> (|Set#IsMember| v@@3 bx@@23) ($IsAllocBox bx@@23 t0@@2 h@@3))
 :pattern ( (|Set#IsMember| v@@3 bx@@23))
)))
 :pattern ( ($IsAlloc SetType v@@3 (TSet t0@@2) h@@3))
)))
(assert (forall (($h@@30 T@U) ($o@@72 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@30) (and (or (not (= $o@@72 null)) (not true)) ($Is refType $o@@72 Tclass._module.OwnedObject?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@30 $o@@72) alloc)))) ($IsAlloc intType ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@30 $o@@72) _module.OwnedObject.nonvolatileVersion)) TInt $h@@30))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@30 $o@@72) _module.OwnedObject.nonvolatileVersion)))
)))
(assert (forall ((t@@3 T@U) ) (! (= (Inv0_TSet (TSet t@@3)) t@@3)
 :pattern ( (TSet t@@3))
)))
(assert (forall ((t@@4 T@U) ) (! (= (Tag (TSet t@@4)) TagSet)
 :pattern ( (TSet t@@4))
)))
(assert (forall ((x@@8 T@U) (T@@4 T@T) ) (! (= ($Unbox T@@4 ($Box T@@4 x@@8)) x@@8)
 :pattern ( ($Box T@@4 x@@8))
)))
(assert (forall (($h0@@33 T@U) ($h1@@33 T@U) (this@@110 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@33) ($IsGoodHeap $h1@@33)) (and (or (not (= this@@110 null)) (not true)) ($Is refType this@@110 Tclass._module.Object))) (and ($IsHeapAnchor $h0@@33) ($HeapSucc $h0@@33 $h1@@33))) (=> (forall (($o@@73 T@U) ($f@@43 T@U) )  (=> (and (or (not (= $o@@73 null)) (not true)) (= $o@@73 this@@110)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@33 $o@@73) $f@@43) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@33 $o@@73) $f@@43)))) (= (_module.Object.triggerAxioms $h0@@33 this@@110) (_module.Object.triggerAxioms $h1@@33 this@@110))))
 :pattern ( ($IsHeapAnchor $h0@@33) ($HeapSucc $h0@@33 $h1@@33) (_module.Object.triggerAxioms $h1@@33 this@@110))
)))
(assert (forall (($h@@31 T@U) ($o@@74 T@U) ) (!  (=> (and ($IsGoodHeap $h@@31) (and (or (not (= $o@@74 null)) (not true)) (= (dtype $o@@74) Tclass._module.OwnedU32?))) ($Is intType ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@31 $o@@74) _module.OwnedU32.value)) TInt))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@31 $o@@74) _module.OwnedU32.value)))
)))
(assert (forall (($h@@32 T@U) ($o@@75 T@U) ) (!  (=> (and ($IsGoodHeap $h@@32) (and (or (not (= $o@@75 null)) (not true)) (= (dtype $o@@75) Tclass._module.Mutex?))) ($Is boolType ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@32 $o@@75) _module.Mutex.locked)) TBool))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@32 $o@@75) _module.Mutex.locked)))
)))
(assert (forall (($h0@@34 T@U) ($h1@@34 T@U) (this@@111 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@34) ($IsGoodHeap $h1@@34)) (and (or (not (= this@@111 null)) (not true)) ($Is refType this@@111 Tclass._module.Universe))) (and ($IsHeapAnchor $h0@@34) ($HeapSucc $h0@@34 $h1@@34))) (=> (forall (($o@@76 T@U) ($f@@44 T@U) )  (=> (and (or (not (= $o@@76 null)) (not true)) (or (= $o@@76 this@@111) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@34 this@@111) _module.Universe.content)) ($Box refType $o@@76)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@34 $o@@76) $f@@44) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@34 $o@@76) $f@@44)))) (= (_module.Universe.globalBaseInv $h0@@34 this@@111) (_module.Universe.globalBaseInv $h1@@34 this@@111))))
 :pattern ( ($IsHeapAnchor $h0@@34) ($HeapSucc $h0@@34 $h1@@34) (_module.Universe.globalBaseInv $h1@@34 this@@111))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@61 T@U) ($Heap@@76 T@U) (this@@112 T@U) ) (!  (=> (or (|_module.MutexGuardU32.unchangedNonvolatileUserFields#canCall| $prevHeap@@61 $Heap@@76 this@@112) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@61) ($IsGoodHeap $Heap@@76)) ($HeapSucc $prevHeap@@61 $Heap@@76)) (and (or (not (= this@@112 null)) (not true)) (and ($Is refType this@@112 Tclass._module.MutexGuardU32) ($IsAlloc refType this@@112 Tclass._module.MutexGuardU32 $prevHeap@@61)))))) (= (_module.MutexGuardU32.unchangedNonvolatileUserFields $prevHeap@@61 $Heap@@76 this@@112)  (and (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@61 this@@112) _module.MutexGuardU32.mutex)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@76 this@@112) _module.MutexGuardU32.mutex))) (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@61 this@@112) _module.MutexGuardU32.data)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@76 this@@112) _module.MutexGuardU32.data))))))
 :pattern ( (_module.MutexGuardU32.unchangedNonvolatileUserFields $prevHeap@@61 $Heap@@76 this@@112) ($IsGoodHeap $Heap@@76))
))))
(assert (forall (($h@@33 T@U) ($o@@77 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@33) (and (or (not (= $o@@77 null)) (not true)) ($Is refType $o@@77 Tclass._module.OwnedObject?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@33 $o@@77) alloc)))) ($IsAlloc refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@33 $o@@77) _module.OwnedObject.owner)) Tclass._module.Object $h@@33))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@33 $o@@77) _module.OwnedObject.owner)))
)))
(assert (forall (($h0@@35 T@U) ($h1@@35 T@U) (this@@113 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@35) ($IsGoodHeap $h1@@35)) (and (or (not (= this@@113 null)) (not true)) (and ($Is refType this@@113 Tclass._module.Universe) ($IsAlloc refType this@@113 Tclass._module.Universe $h0@@35)))) (and ($IsHeapAnchor $h0@@35) ($HeapSucc $h0@@35 $h1@@35))) (=> (forall (($o@@78 T@U) ($f@@45 T@U) )  (=> (and (or (not (= $o@@78 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@35 $o@@78) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@35 $o@@78) $f@@45) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@35 $o@@78) $f@@45)))) (= (_module.Universe.globalInv $h0@@35 this@@113) (_module.Universe.globalInv $h1@@35 this@@113))))
 :pattern ( ($IsHeapAnchor $h0@@35) ($HeapSucc $h0@@35 $h1@@35) (_module.Universe.globalInv $h1@@35 this@@113))
)))
(assert (forall (($h0@@36 T@U) ($h1@@36 T@U) (this@@114 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@36) ($IsGoodHeap $h1@@36)) (and (or (not (= this@@114 null)) (not true)) (and ($Is refType this@@114 Tclass._module.Object) ($IsAlloc refType this@@114 Tclass._module.Object $h0@@36)))) (and ($IsHeapAnchor $h0@@36) ($HeapSucc $h0@@36 $h1@@36))) (=> (forall (($o@@79 T@U) ($f@@46 T@U) )  (=> (and (or (not (= $o@@79 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@36 $o@@79) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@36 $o@@79) $f@@46) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@36 $o@@79) $f@@46)))) (= (_module.Object.objectGlobalBaseInv $h0@@36 this@@114) (_module.Object.objectGlobalBaseInv $h1@@36 this@@114))))
 :pattern ( ($IsHeapAnchor $h0@@36) ($HeapSucc $h0@@36 $h1@@36) (_module.Object.objectGlobalBaseInv $h1@@36 this@@114))
)))
(assert (forall (($h0@@37 T@U) ($h1@@37 T@U) (this@@115 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@37) ($IsGoodHeap $h1@@37)) (and (or (not (= this@@115 null)) (not true)) (and ($Is refType this@@115 Tclass._module.Object) ($IsAlloc refType this@@115 Tclass._module.Object $h0@@37)))) (and ($IsHeapAnchor $h0@@37) ($HeapSucc $h0@@37 $h1@@37))) (=> (forall (($o@@80 T@U) ($f@@47 T@U) )  (=> (and (or (not (= $o@@80 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@37 $o@@80) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@37 $o@@80) $f@@47) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@37 $o@@80) $f@@47)))) (= (_module.Object.localInv $h0@@37 this@@115) (_module.Object.localInv $h1@@37 this@@115))))
 :pattern ( ($IsHeapAnchor $h0@@37) ($HeapSucc $h0@@37 $h1@@37) (_module.Object.localInv $h1@@37 this@@115))
)))
(assert (forall (($h0@@38 T@U) ($h1@@38 T@U) (this@@116 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@38) ($IsGoodHeap $h1@@38)) (and (or (not (= this@@116 null)) (not true)) (and ($Is refType this@@116 Tclass._module.Object) ($IsAlloc refType this@@116 Tclass._module.Object $h0@@38)))) (and ($IsHeapAnchor $h0@@38) ($HeapSucc $h0@@38 $h1@@38))) (=> (forall (($o@@81 T@U) ($f@@48 T@U) )  (=> (and (or (not (= $o@@81 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@38 $o@@81) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@38 $o@@81) $f@@48) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@38 $o@@81) $f@@48)))) (= (_module.Object.inv $h0@@38 this@@116) (_module.Object.inv $h1@@38 this@@116))))
 :pattern ( ($IsHeapAnchor $h0@@38) ($HeapSucc $h0@@38 $h1@@38) (_module.Object.inv $h1@@38 this@@116))
)))
(assert (forall (($h0@@39 T@U) ($h1@@39 T@U) (this@@117 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@39) ($IsGoodHeap $h1@@39)) (and (or (not (= this@@117 null)) (not true)) (and ($Is refType this@@117 Tclass._module.Thread) ($IsAlloc refType this@@117 Tclass._module.Thread $h0@@39)))) (and ($IsHeapAnchor $h0@@39) ($HeapSucc $h0@@39 $h1@@39))) (=> (forall (($o@@82 T@U) ($f@@49 T@U) )  (=> (and (or (not (= $o@@82 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@39 $o@@82) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@39 $o@@82) $f@@49) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@39 $o@@82) $f@@49)))) (= (_module.Thread.localInv $h0@@39 this@@117) (_module.Thread.localInv $h1@@39 this@@117))))
 :pattern ( ($IsHeapAnchor $h0@@39) ($HeapSucc $h0@@39 $h1@@39) (_module.Thread.localInv $h1@@39 this@@117))
)))
(assert (forall (($h0@@40 T@U) ($h1@@40 T@U) (this@@118 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@40) ($IsGoodHeap $h1@@40)) (and (or (not (= this@@118 null)) (not true)) (and ($Is refType this@@118 Tclass._module.Thread) ($IsAlloc refType this@@118 Tclass._module.Thread $h0@@40)))) (and ($IsHeapAnchor $h0@@40) ($HeapSucc $h0@@40 $h1@@40))) (=> (forall (($o@@83 T@U) ($f@@50 T@U) )  (=> (and (or (not (= $o@@83 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@40 $o@@83) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@40 $o@@83) $f@@50) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@40 $o@@83) $f@@50)))) (= (_module.Thread.inv $h0@@40 this@@118) (_module.Thread.inv $h1@@40 this@@118))))
 :pattern ( ($IsHeapAnchor $h0@@40) ($HeapSucc $h0@@40 $h1@@40) (_module.Thread.inv $h1@@40 this@@118))
)))
(assert (forall (($h0@@41 T@U) ($h1@@41 T@U) (this@@119 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@41) ($IsGoodHeap $h1@@41)) (and (or (not (= this@@119 null)) (not true)) (and ($Is refType this@@119 Tclass._module.OwnedObject) ($IsAlloc refType this@@119 Tclass._module.OwnedObject $h0@@41)))) (and ($IsHeapAnchor $h0@@41) ($HeapSucc $h0@@41 $h1@@41))) (=> (forall (($o@@84 T@U) ($f@@51 T@U) )  (=> (and (or (not (= $o@@84 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@41 $o@@84) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@41 $o@@84) $f@@51) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@41 $o@@84) $f@@51)))) (= (_module.OwnedObject.localInv $h0@@41 this@@119) (_module.OwnedObject.localInv $h1@@41 this@@119))))
 :pattern ( ($IsHeapAnchor $h0@@41) ($HeapSucc $h0@@41 $h1@@41) (_module.OwnedObject.localInv $h1@@41 this@@119))
)))
(assert (forall (($h0@@42 T@U) ($h1@@42 T@U) (this@@120 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@42) ($IsGoodHeap $h1@@42)) (and (or (not (= this@@120 null)) (not true)) (and ($Is refType this@@120 Tclass._module.OwnedObject) ($IsAlloc refType this@@120 Tclass._module.OwnedObject $h0@@42)))) (and ($IsHeapAnchor $h0@@42) ($HeapSucc $h0@@42 $h1@@42))) (=> (forall (($o@@85 T@U) ($f@@52 T@U) )  (=> (and (or (not (= $o@@85 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@42 $o@@85) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@42 $o@@85) $f@@52) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@42 $o@@85) $f@@52)))) (= (_module.OwnedObject.inv $h0@@42 this@@120) (_module.OwnedObject.inv $h1@@42 this@@120))))
 :pattern ( ($IsHeapAnchor $h0@@42) ($HeapSucc $h0@@42 $h1@@42) (_module.OwnedObject.inv $h1@@42 this@@120))
)))
(assert (forall (($h0@@43 T@U) ($h1@@43 T@U) (this@@121 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@43) ($IsGoodHeap $h1@@43)) (and (or (not (= this@@121 null)) (not true)) (and ($Is refType this@@121 Tclass._module.OwnedObject) ($IsAlloc refType this@@121 Tclass._module.OwnedObject $h0@@43)))) (and ($IsHeapAnchor $h0@@43) ($HeapSucc $h0@@43 $h1@@43))) (=> (forall (($o@@86 T@U) ($f@@53 T@U) )  (=> (and (or (not (= $o@@86 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@43 $o@@86) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@43 $o@@86) $f@@53) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@43 $o@@86) $f@@53)))) (= (_module.OwnedObject.localUserInv $h0@@43 this@@121) (_module.OwnedObject.localUserInv $h1@@43 this@@121))))
 :pattern ( ($IsHeapAnchor $h0@@43) ($HeapSucc $h0@@43 $h1@@43) (_module.OwnedObject.localUserInv $h1@@43 this@@121))
)))
(assert (forall (($h0@@44 T@U) ($h1@@44 T@U) (this@@122 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@44) ($IsGoodHeap $h1@@44)) (and (or (not (= this@@122 null)) (not true)) (and ($Is refType this@@122 Tclass._module.OwnedObject) ($IsAlloc refType this@@122 Tclass._module.OwnedObject $h0@@44)))) (and ($IsHeapAnchor $h0@@44) ($HeapSucc $h0@@44 $h1@@44))) (=> (forall (($o@@87 T@U) ($f@@54 T@U) )  (=> (and (or (not (= $o@@87 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@44 $o@@87) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@44 $o@@87) $f@@54) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@44 $o@@87) $f@@54)))) (= (_module.OwnedObject.userInv $h0@@44 this@@122) (_module.OwnedObject.userInv $h1@@44 this@@122))))
 :pattern ( ($IsHeapAnchor $h0@@44) ($HeapSucc $h0@@44 $h1@@44) (_module.OwnedObject.userInv $h1@@44 this@@122))
)))
(assert (forall (($h0@@45 T@U) ($h1@@45 T@U) (this@@123 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@45) ($IsGoodHeap $h1@@45)) (and (or (not (= this@@123 null)) (not true)) (and ($Is refType this@@123 Tclass._module.OwnedU32) ($IsAlloc refType this@@123 Tclass._module.OwnedU32 $h0@@45)))) (and ($IsHeapAnchor $h0@@45) ($HeapSucc $h0@@45 $h1@@45))) (=> (forall (($o@@88 T@U) ($f@@55 T@U) )  (=> (and (or (not (= $o@@88 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@45 $o@@88) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@45 $o@@88) $f@@55) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@45 $o@@88) $f@@55)))) (= (_module.OwnedU32.localUserInv $h0@@45 this@@123) (_module.OwnedU32.localUserInv $h1@@45 this@@123))))
 :pattern ( ($IsHeapAnchor $h0@@45) ($HeapSucc $h0@@45 $h1@@45) (_module.OwnedU32.localUserInv $h1@@45 this@@123))
)))
(assert (forall (($h0@@46 T@U) ($h1@@46 T@U) (this@@124 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@46) ($IsGoodHeap $h1@@46)) (and (or (not (= this@@124 null)) (not true)) (and ($Is refType this@@124 Tclass._module.OwnedU32) ($IsAlloc refType this@@124 Tclass._module.OwnedU32 $h0@@46)))) (and ($IsHeapAnchor $h0@@46) ($HeapSucc $h0@@46 $h1@@46))) (=> (forall (($o@@89 T@U) ($f@@56 T@U) )  (=> (and (or (not (= $o@@89 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@46 $o@@89) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@46 $o@@89) $f@@56) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@46 $o@@89) $f@@56)))) (= (_module.OwnedU32.userInv $h0@@46 this@@124) (_module.OwnedU32.userInv $h1@@46 this@@124))))
 :pattern ( ($IsHeapAnchor $h0@@46) ($HeapSucc $h0@@46 $h1@@46) (_module.OwnedU32.userInv $h1@@46 this@@124))
)))
(assert (forall (($h0@@47 T@U) ($h1@@47 T@U) (this@@125 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@47) ($IsGoodHeap $h1@@47)) (and (or (not (= this@@125 null)) (not true)) (and ($Is refType this@@125 Tclass._module.Mutex) ($IsAlloc refType this@@125 Tclass._module.Mutex $h0@@47)))) (and ($IsHeapAnchor $h0@@47) ($HeapSucc $h0@@47 $h1@@47))) (=> (forall (($o@@90 T@U) ($f@@57 T@U) )  (=> (and (or (not (= $o@@90 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@47 $o@@90) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@47 $o@@90) $f@@57) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@47 $o@@90) $f@@57)))) (= (_module.Mutex.localUserInv $h0@@47 this@@125) (_module.Mutex.localUserInv $h1@@47 this@@125))))
 :pattern ( ($IsHeapAnchor $h0@@47) ($HeapSucc $h0@@47 $h1@@47) (_module.Mutex.localUserInv $h1@@47 this@@125))
)))
(assert (forall (($h0@@48 T@U) ($h1@@48 T@U) (this@@126 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@48) ($IsGoodHeap $h1@@48)) (and (or (not (= this@@126 null)) (not true)) (and ($Is refType this@@126 Tclass._module.Mutex) ($IsAlloc refType this@@126 Tclass._module.Mutex $h0@@48)))) (and ($IsHeapAnchor $h0@@48) ($HeapSucc $h0@@48 $h1@@48))) (=> (forall (($o@@91 T@U) ($f@@58 T@U) )  (=> (and (or (not (= $o@@91 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@48 $o@@91) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@48 $o@@91) $f@@58) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@48 $o@@91) $f@@58)))) (= (_module.Mutex.userInv $h0@@48 this@@126) (_module.Mutex.userInv $h1@@48 this@@126))))
 :pattern ( ($IsHeapAnchor $h0@@48) ($HeapSucc $h0@@48 $h1@@48) (_module.Mutex.userInv $h1@@48 this@@126))
)))
(assert (forall (($h0@@49 T@U) ($h1@@49 T@U) (this@@127 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@49) ($IsGoodHeap $h1@@49)) (and (or (not (= this@@127 null)) (not true)) (and ($Is refType this@@127 Tclass._module.MutexGuardU32) ($IsAlloc refType this@@127 Tclass._module.MutexGuardU32 $h0@@49)))) (and ($IsHeapAnchor $h0@@49) ($HeapSucc $h0@@49 $h1@@49))) (=> (forall (($o@@92 T@U) ($f@@59 T@U) )  (=> (and (or (not (= $o@@92 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@49 $o@@92) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@49 $o@@92) $f@@59) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@49 $o@@92) $f@@59)))) (= (_module.MutexGuardU32.localUserInv $h0@@49 this@@127) (_module.MutexGuardU32.localUserInv $h1@@49 this@@127))))
 :pattern ( ($IsHeapAnchor $h0@@49) ($HeapSucc $h0@@49 $h1@@49) (_module.MutexGuardU32.localUserInv $h1@@49 this@@127))
)))
(assert (forall (($h0@@50 T@U) ($h1@@50 T@U) (this@@128 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@50) ($IsGoodHeap $h1@@50)) (and (or (not (= this@@128 null)) (not true)) (and ($Is refType this@@128 Tclass._module.MutexGuardU32) ($IsAlloc refType this@@128 Tclass._module.MutexGuardU32 $h0@@50)))) (and ($IsHeapAnchor $h0@@50) ($HeapSucc $h0@@50 $h1@@50))) (=> (forall (($o@@93 T@U) ($f@@60 T@U) )  (=> (and (or (not (= $o@@93 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@50 $o@@93) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@50 $o@@93) $f@@60) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@50 $o@@93) $f@@60)))) (= (_module.MutexGuardU32.userInv $h0@@50 this@@128) (_module.MutexGuardU32.userInv $h1@@50 this@@128))))
 :pattern ( ($IsHeapAnchor $h0@@50) ($HeapSucc $h0@@50 $h1@@50) (_module.MutexGuardU32.userInv $h1@@50 this@@128))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((this@@129 T@U) ) (!  (=> (or (|_module.OwnedU32.volatileOwns#canCall| this@@129) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@129 null)) (not true)) ($Is refType this@@129 Tclass._module.OwnedU32)))) (= (_module.OwnedU32.volatileOwns this@@129) (U_2_bool (Lit boolType (bool_2_U false)))))
 :pattern ( (_module.OwnedU32.volatileOwns this@@129))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((this@@130 T@U) ) (!  (=> (or (|_module.MutexGuardU32.volatileOwns#canCall| this@@130) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@130 null)) (not true)) ($Is refType this@@130 Tclass._module.MutexGuardU32)))) (= (_module.MutexGuardU32.volatileOwns this@@130) (U_2_bool (Lit boolType (bool_2_U false)))))
 :pattern ( (_module.MutexGuardU32.volatileOwns this@@130))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((this@@131 T@U) ) (!  (=> (or (|_module.OwnedU32.volatileOwns#canCall| this@@131) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@131 null)) (not true)) ($Is refType this@@131 Tclass._module.OwnedU32)))) (= (_module.OwnedObject.volatileOwns this@@131) (_module.OwnedU32.volatileOwns this@@131)))
 :pattern ( (_module.OwnedObject.volatileOwns this@@131) ($Is refType this@@131 Tclass._module.OwnedU32))
 :pattern ( (_module.OwnedObject.volatileOwns this@@131) (_module.OwnedU32.volatileOwns this@@131))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((this@@132 T@U) ) (!  (=> (or (|_module.Mutex.volatileOwns#canCall| this@@132) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@132 null)) (not true)) ($Is refType this@@132 Tclass._module.Mutex)))) (= (_module.Mutex.volatileOwns this@@132) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.Mutex.volatileOwns this@@132))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((this@@133 T@U) ) (!  (=> (or (|_module.Mutex.volatileOwns#canCall| this@@133) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@133 null)) (not true)) ($Is refType this@@133 Tclass._module.Mutex)))) (= (_module.OwnedObject.volatileOwns this@@133) (_module.Mutex.volatileOwns this@@133)))
 :pattern ( (_module.OwnedObject.volatileOwns this@@133) ($Is refType this@@133 Tclass._module.Mutex))
 :pattern ( (_module.OwnedObject.volatileOwns this@@133) (_module.Mutex.volatileOwns this@@133))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((this@@134 T@U) ) (!  (=> (or (|_module.MutexGuardU32.volatileOwns#canCall| this@@134) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@134 null)) (not true)) ($Is refType this@@134 Tclass._module.MutexGuardU32)))) (= (_module.OwnedObject.volatileOwns this@@134) (_module.MutexGuardU32.volatileOwns this@@134)))
 :pattern ( (_module.OwnedObject.volatileOwns this@@134) ($Is refType this@@134 Tclass._module.MutexGuardU32))
 :pattern ( (_module.OwnedObject.volatileOwns this@@134) (_module.MutexGuardU32.volatileOwns this@@134))
))))
(assert (forall ((bx@@24 T@U) (t@@5 T@U) ) (!  (=> ($IsBox bx@@24 (TSet t@@5)) (and (= ($Box SetType ($Unbox SetType bx@@24)) bx@@24) ($Is SetType ($Unbox SetType bx@@24) (TSet t@@5))))
 :pattern ( ($IsBox bx@@24 (TSet t@@5)))
)))
(assert (forall (($o@@94 T@U) ) (!  (=> ($Is refType $o@@94 Tclass._module.Thread?) ($Is refType $o@@94 Tclass._module.Object?))
 :pattern ( ($Is refType $o@@94 Tclass._module.Thread?))
)))
(assert (forall ((bx@@25 T@U) ) (!  (=> ($IsBox bx@@25 Tclass._module.Thread?) ($IsBox bx@@25 Tclass._module.Object?))
 :pattern ( ($IsBox bx@@25 Tclass._module.Thread?))
)))
(assert (forall (($o@@95 T@U) ) (!  (=> ($Is refType $o@@95 Tclass._module.OwnedObject?) ($Is refType $o@@95 Tclass._module.Object?))
 :pattern ( ($Is refType $o@@95 Tclass._module.OwnedObject?))
)))
(assert (forall ((bx@@26 T@U) ) (!  (=> ($IsBox bx@@26 Tclass._module.OwnedObject?) ($IsBox bx@@26 Tclass._module.Object?))
 :pattern ( ($IsBox bx@@26 Tclass._module.OwnedObject?))
)))
(assert (forall (($o@@96 T@U) ) (!  (=> ($Is refType $o@@96 Tclass._module.OwnedU32?) ($Is refType $o@@96 Tclass._module.OwnedObject?))
 :pattern ( ($Is refType $o@@96 Tclass._module.OwnedU32?))
)))
(assert (forall ((bx@@27 T@U) ) (!  (=> ($IsBox bx@@27 Tclass._module.OwnedU32?) ($IsBox bx@@27 Tclass._module.OwnedObject?))
 :pattern ( ($IsBox bx@@27 Tclass._module.OwnedU32?))
)))
(assert (forall (($o@@97 T@U) ) (!  (=> ($Is refType $o@@97 Tclass._module.Mutex?) ($Is refType $o@@97 Tclass._module.OwnedObject?))
 :pattern ( ($Is refType $o@@97 Tclass._module.Mutex?))
)))
(assert (forall ((bx@@28 T@U) ) (!  (=> ($IsBox bx@@28 Tclass._module.Mutex?) ($IsBox bx@@28 Tclass._module.OwnedObject?))
 :pattern ( ($IsBox bx@@28 Tclass._module.Mutex?))
)))
(assert (forall (($o@@98 T@U) ) (!  (=> ($Is refType $o@@98 Tclass._module.MutexGuardU32?) ($Is refType $o@@98 Tclass._module.OwnedObject?))
 :pattern ( ($Is refType $o@@98 Tclass._module.MutexGuardU32?))
)))
(assert (forall ((bx@@29 T@U) ) (!  (=> ($IsBox bx@@29 Tclass._module.MutexGuardU32?) ($IsBox bx@@29 Tclass._module.OwnedObject?))
 :pattern ( ($IsBox bx@@29 Tclass._module.MutexGuardU32?))
)))
(assert (forall ((h@@4 T@U) (r T@U) (f T@U) (x@@9 T@U) ) (!  (=> ($IsGoodHeap (MapType0Store refType (MapType0Type FieldType BoxType) h@@4 r (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@4 r) f x@@9))) ($HeapSucc h@@4 (MapType0Store refType (MapType0Type FieldType BoxType) h@@4 r (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@4 r) f x@@9))))
 :pattern ( (MapType0Store refType (MapType0Type FieldType BoxType) h@@4 r (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@4 r) f x@@9)))
)))
(assert (= (Tag Tclass._module.Universe) Tagclass._module.Universe))
(assert (= (TagFamily Tclass._module.Universe) tytagFamily$Universe))
(assert (= (Tag Tclass._module.Thread) Tagclass._module.Thread))
(assert (= (TagFamily Tclass._module.Thread) tytagFamily$Thread))
(assert (= (Tag Tclass._module.Mutex) Tagclass._module.Mutex))
(assert (= (TagFamily Tclass._module.Mutex) tytagFamily$Mutex))
(assert (= (Tag Tclass._module.MutexGuardU32) Tagclass._module.MutexGuardU32))
(assert (= (TagFamily Tclass._module.MutexGuardU32) tytagFamily$MutexGuardU32))
(assert (= (Tag Tclass._module.Universe?) Tagclass._module.Universe?))
(assert (= (TagFamily Tclass._module.Universe?) tytagFamily$Universe))
(assert (= (Tag Tclass._module.Object) Tagclass._module.Object))
(assert (= (TagFamily Tclass._module.Object) tytagFamily$Object))
(assert (= (Tag Tclass._module.OwnedU32) Tagclass._module.OwnedU32))
(assert (= (TagFamily Tclass._module.OwnedU32) tytagFamily$OwnedU32))
(assert (= (Tag Tclass._module.Object?) Tagclass._module.Object?))
(assert (= (TagFamily Tclass._module.Object?) tytagFamily$Object))
(assert (= (Tag Tclass._module.OwnedObject) Tagclass._module.OwnedObject))
(assert (= (TagFamily Tclass._module.OwnedObject) tytagFamily$OwnedObject))
(assert (= (Tag Tclass._module.Thread?) Tagclass._module.Thread?))
(assert (= (TagFamily Tclass._module.Thread?) tytagFamily$Thread))
(assert (= (Tag Tclass._module.OwnedObject?) Tagclass._module.OwnedObject?))
(assert (= (TagFamily Tclass._module.OwnedObject?) tytagFamily$OwnedObject))
(assert (= (Tag Tclass._module.OwnedU32?) Tagclass._module.OwnedU32?))
(assert (= (TagFamily Tclass._module.OwnedU32?) tytagFamily$OwnedU32))
(assert (= (Tag Tclass._module.Mutex?) Tagclass._module.Mutex?))
(assert (= (TagFamily Tclass._module.Mutex?) tytagFamily$Mutex))
(assert (= (Tag Tclass._module.MutexGuardU32?) Tagclass._module.MutexGuardU32?))
(assert (= (TagFamily Tclass._module.MutexGuardU32?) tytagFamily$MutexGuardU32))
(assert (forall (($h@@34 T@U) ($o@@99 T@U) ) (!  (=> (and ($IsGoodHeap $h@@34) (and (or (not (= $o@@99 null)) (not true)) ($Is refType $o@@99 Tclass._module.OwnedObject?))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@34 $o@@99) _module.OwnedObject.owner)) Tclass._module.Object))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@34 $o@@99) _module.OwnedObject.owner)))
)))
(assert (forall (($o@@100 T@U) ) (! (= ($Is refType $o@@100 Tclass._module.Universe?)  (or (= $o@@100 null) (implements$_module.Universe (dtype $o@@100))))
 :pattern ( ($Is refType $o@@100 Tclass._module.Universe?))
)))
(assert (forall (($o@@101 T@U) ) (! (= ($Is refType $o@@101 Tclass._module.Object?)  (or (= $o@@101 null) (implements$_module.Object (dtype $o@@101))))
 :pattern ( ($Is refType $o@@101 Tclass._module.Object?))
)))
(assert (forall (($o@@102 T@U) ) (! (= ($Is refType $o@@102 Tclass._module.OwnedObject?)  (or (= $o@@102 null) (implements$_module.OwnedObject (dtype $o@@102))))
 :pattern ( ($Is refType $o@@102 Tclass._module.OwnedObject?))
)))
(assert (forall (($h@@35 T@U) ($o@@103 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@35) (and (or (not (= $o@@103 null)) (not true)) ($Is refType $o@@103 Tclass._module.Universe?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@35 $o@@103) alloc)))) ($IsAlloc SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@35 $o@@103) _module.Universe.content)) (TSet Tclass._module.Object) $h@@35))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@35 $o@@103) _module.Universe.content)))
)))
(assert (forall ((a@@5 T@U) (b@@2 T@U) ) (! (= (|Set#Equal| a@@5 b@@2) (forall ((o@@3 T@U) ) (! (= (|Set#IsMember| a@@5 o@@3) (|Set#IsMember| b@@2 o@@3))
 :pattern ( (|Set#IsMember| a@@5 o@@3))
 :pattern ( (|Set#IsMember| b@@2 o@@3))
)))
 :pattern ( (|Set#Equal| a@@5 b@@2))
)))
(assert  (=> (<= 5 $FunctionContextHeight) (forall (($prevHeap@@62 T@U) ($Heap@@77 T@U) (this@@135 T@U) ) (!  (=> (or (|_module.Universe.globalSequenceInv2#canCall| $prevHeap@@62 $Heap@@77 this@@135) (and (< 5 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@62) ($IsGoodHeap $Heap@@77)) ($HeapSucc $prevHeap@@62 $Heap@@77)) (and (or (not (= this@@135 null)) (not true)) (and ($Is refType this@@135 Tclass._module.Universe) ($IsAlloc refType this@@135 Tclass._module.Universe $prevHeap@@62)))))) (and (forall ((|o#0@@9| T@U) ) (!  (=> ($Is refType |o#0@@9| Tclass._module.Object) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@62 this@@135) _module.Universe.content)) ($Box refType |o#0@@9|)) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@77 this@@135) _module.Universe.content)) ($Box refType |o#0@@9|)) (|_module.Object.sequenceInv2#canCall| $prevHeap@@62 $Heap@@77 |o#0@@9|))))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@62 $Heap@@77 |o#0@@9|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@77 this@@135) _module.Universe.content)) ($Box refType |o#0@@9|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@62 this@@135) _module.Universe.content)) ($Box refType |o#0@@9|)))
)) (= (_module.Universe.globalSequenceInv2 $prevHeap@@62 $Heap@@77 this@@135) (forall ((|o#0@@10| T@U) ) (!  (=> (and ($Is refType |o#0@@10| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@62 this@@135) _module.Universe.content)) ($Box refType |o#0@@10|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@77 this@@135) _module.Universe.content)) ($Box refType |o#0@@10|)) (_module.Object.sequenceInv2 $prevHeap@@62 $Heap@@77 |o#0@@10|)))
 :pattern ( (_module.Object.sequenceInv2 $prevHeap@@62 $Heap@@77 |o#0@@10|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@77 this@@135) _module.Universe.content)) ($Box refType |o#0@@10|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@62 this@@135) _module.Universe.content)) ($Box refType |o#0@@10|)))
)))))
 :pattern ( (_module.Universe.globalSequenceInv2 $prevHeap@@62 $Heap@@77 this@@135) ($IsGoodHeap $Heap@@77))
))))
(assert  (=> (<= 12 $FunctionContextHeight) (forall (($prevHeap@@63 T@U) ($Heap@@78 T@U) (this@@136 T@U) ) (!  (=> (or (|_module.Universe.globalInv2#canCall| $prevHeap@@63 $Heap@@78 this@@136) (and (< 12 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@63) ($IsGoodHeap $Heap@@78)) ($HeapSucc $prevHeap@@63 $Heap@@78)) (and (or (not (= this@@136 null)) (not true)) (and ($Is refType this@@136 Tclass._module.Universe) ($IsAlloc refType this@@136 Tclass._module.Universe $prevHeap@@63)))))) (and (forall ((|o#0@@11| T@U) ) (!  (=> ($Is refType |o#0@@11| Tclass._module.Object) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@63 this@@136) _module.Universe.content)) ($Box refType |o#0@@11|)) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@78 this@@136) _module.Universe.content)) ($Box refType |o#0@@11|)) (|_module.Object.inv2#canCall| $prevHeap@@63 $Heap@@78 |o#0@@11|))))
 :pattern ( (_module.Object.inv2 $prevHeap@@63 $Heap@@78 |o#0@@11|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@78 this@@136) _module.Universe.content)) ($Box refType |o#0@@11|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@63 this@@136) _module.Universe.content)) ($Box refType |o#0@@11|)))
)) (= (_module.Universe.globalInv2 $prevHeap@@63 $Heap@@78 this@@136) (forall ((|o#0@@12| T@U) ) (!  (=> (and ($Is refType |o#0@@12| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@63 this@@136) _module.Universe.content)) ($Box refType |o#0@@12|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@78 this@@136) _module.Universe.content)) ($Box refType |o#0@@12|)) (_module.Object.inv2 $prevHeap@@63 $Heap@@78 |o#0@@12|)))
 :pattern ( (_module.Object.inv2 $prevHeap@@63 $Heap@@78 |o#0@@12|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@78 this@@136) _module.Universe.content)) ($Box refType |o#0@@12|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@63 this@@136) _module.Universe.content)) ($Box refType |o#0@@12|)))
)))))
 :pattern ( (_module.Universe.globalInv2 $prevHeap@@63 $Heap@@78 this@@136) ($IsGoodHeap $Heap@@78))
))))
(assert (forall ((x@@10 Int) ) (! (= ($Box intType (int_2_U (LitInt x@@10))) (Lit BoxType ($Box intType (int_2_U x@@10))))
 :pattern ( ($Box intType (int_2_U (LitInt x@@10))))
)))
(assert (forall ((x@@11 T@U) (T@@5 T@T) ) (! (= ($Box T@@5 (Lit T@@5 x@@11)) (Lit BoxType ($Box T@@5 x@@11)))
 :pattern ( ($Box T@@5 (Lit T@@5 x@@11)))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@64 T@U) ($Heap@@79 T@U) (this@@137 T@U) ) (!  (=> (or (|_module.OwnedU32.userInv2#canCall| $prevHeap@@64 $Heap@@79 this@@137) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@64) ($IsGoodHeap $Heap@@79)) ($HeapSucc $prevHeap@@64 $Heap@@79)) (and (or (not (= this@@137 null)) (not true)) (and ($Is refType this@@137 Tclass._module.OwnedU32) ($IsAlloc refType this@@137 Tclass._module.OwnedU32 $prevHeap@@64)))))) (=> (_module.OwnedU32.userInv2 $prevHeap@@64 $Heap@@79 this@@137) (_module.OwnedU32.localUserInv2 $prevHeap@@64 $Heap@@79 this@@137)))
 :pattern ( (_module.OwnedU32.userInv2 $prevHeap@@64 $Heap@@79 this@@137))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@65 T@U) ($Heap@@80 T@U) (this@@138 T@U) ) (!  (=> (or (|_module.Mutex.userInv2#canCall| $prevHeap@@65 $Heap@@80 this@@138) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@65) ($IsGoodHeap $Heap@@80)) ($HeapSucc $prevHeap@@65 $Heap@@80)) (and (or (not (= this@@138 null)) (not true)) (and ($Is refType this@@138 Tclass._module.Mutex) ($IsAlloc refType this@@138 Tclass._module.Mutex $prevHeap@@65)))))) (=> (_module.Mutex.userInv2 $prevHeap@@65 $Heap@@80 this@@138) (_module.Mutex.localUserInv2 $prevHeap@@65 $Heap@@80 this@@138)))
 :pattern ( (_module.Mutex.userInv2 $prevHeap@@65 $Heap@@80 this@@138))
))))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($prevHeap@@66 T@U) ($Heap@@81 T@U) (this@@139 T@U) ) (!  (=> (or (|_module.MutexGuardU32.userInv2#canCall| $prevHeap@@66 $Heap@@81 this@@139) (and (< 3 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@66) ($IsGoodHeap $Heap@@81)) ($HeapSucc $prevHeap@@66 $Heap@@81)) (and (or (not (= this@@139 null)) (not true)) (and ($Is refType this@@139 Tclass._module.MutexGuardU32) ($IsAlloc refType this@@139 Tclass._module.MutexGuardU32 $prevHeap@@66)))))) (=> (_module.MutexGuardU32.userInv2 $prevHeap@@66 $Heap@@81 this@@139) (_module.MutexGuardU32.localUserInv2 $prevHeap@@66 $Heap@@81 this@@139)))
 :pattern ( (_module.MutexGuardU32.userInv2 $prevHeap@@66 $Heap@@81 this@@139))
))))
(assert  (=> (<= 4 $FunctionContextHeight) (forall (($prevHeap@@67 T@U) ($Heap@@82 T@U) (this@@140 T@U) ) (!  (=> (or (|_module.OwnedObject.userInv2#canCall| $prevHeap@@67 $Heap@@82 this@@140) (and (< 4 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@67) ($IsGoodHeap $Heap@@82)) ($HeapSucc $prevHeap@@67 $Heap@@82)) (and (or (not (= this@@140 null)) (not true)) (and ($Is refType this@@140 Tclass._module.OwnedObject) ($IsAlloc refType this@@140 Tclass._module.OwnedObject $prevHeap@@67)))))) (=> (_module.OwnedObject.userInv2 $prevHeap@@67 $Heap@@82 this@@140) (_module.OwnedObject.localUserInv2 $prevHeap@@67 $Heap@@82 this@@140)))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@67 $Heap@@82 this@@140))
))))
(assert  (=> (<= 8 $FunctionContextHeight) (forall (($Heap@@83 T@U) (this@@141 T@U) ) (!  (=> (or (|_module.Thread.localInv#canCall| $Heap@@83 this@@141) (and (< 8 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@83) (and (or (not (= this@@141 null)) (not true)) (and ($Is refType this@@141 Tclass._module.Thread) ($IsAlloc refType this@@141 Tclass._module.Thread $Heap@@83)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.Object.objectGlobalBaseInv#canCall| $Heap@@83 this@@141)) (= (_module.Thread.localInv $Heap@@83 this@@141)  (and true (_module.Object.objectGlobalBaseInv $Heap@@83 this@@141)))))
 :pattern ( (_module.Thread.localInv $Heap@@83 this@@141) ($IsGoodHeap $Heap@@83))
))))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($Heap@@84 T@U) (this@@142 T@U) ) (!  (=> (or (|_module.Thread.inv#canCall| $Heap@@84 this@@142) (and (< 9 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@84) (and (or (not (= this@@142 null)) (not true)) (and ($Is refType this@@142 Tclass._module.Thread) ($IsAlloc refType this@@142 Tclass._module.Thread $Heap@@84)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.Thread.localInv#canCall| $Heap@@84 this@@142)) (= (_module.Thread.inv $Heap@@84 this@@142)  (and true (_module.Thread.localInv $Heap@@84 this@@142)))))
 :pattern ( (_module.Thread.inv $Heap@@84 this@@142) ($IsGoodHeap $Heap@@84))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((this@@143 T@U) ) (!  (=> (or (|_module.OwnedU32.volatileOwns#canCall| (Lit refType this@@143)) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@143 null)) (not true)) ($Is refType this@@143 Tclass._module.OwnedU32)))) (= (_module.OwnedU32.volatileOwns (Lit refType this@@143)) (U_2_bool (Lit boolType (bool_2_U false)))))
 :weight 3
 :pattern ( (_module.OwnedU32.volatileOwns (Lit refType this@@143)))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((this@@144 T@U) ) (!  (=> (or (|_module.MutexGuardU32.volatileOwns#canCall| (Lit refType this@@144)) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@144 null)) (not true)) ($Is refType this@@144 Tclass._module.MutexGuardU32)))) (= (_module.MutexGuardU32.volatileOwns (Lit refType this@@144)) (U_2_bool (Lit boolType (bool_2_U false)))))
 :weight 3
 :pattern ( (_module.MutexGuardU32.volatileOwns (Lit refType this@@144)))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((this@@145 T@U) ) (!  (=> (or (|_module.Mutex.volatileOwns#canCall| (Lit refType this@@145)) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@145 null)) (not true)) ($Is refType this@@145 Tclass._module.Mutex)))) (= (_module.Mutex.volatileOwns (Lit refType this@@145)) (U_2_bool (Lit boolType (bool_2_U true)))))
 :weight 3
 :pattern ( (_module.Mutex.volatileOwns (Lit refType this@@145)))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@85 T@U) (this@@146 T@U) ) (!  (=> (or (|_module.Object.triggerAxioms#canCall| $Heap@@85 this@@146) (and (< 1 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@85) (and (or (not (= this@@146 null)) (not true)) (and ($Is refType this@@146 Tclass._module.Object) ($IsAlloc refType this@@146 Tclass._module.Object $Heap@@85)))))) (= (_module.Object.triggerAxioms $Heap@@85 this@@146)  (and (or ($Is refType this@@146 Tclass._module.OwnedObject) ($Is refType this@@146 Tclass._module.Thread)) (not (and ($Is refType this@@146 Tclass._module.OwnedObject) ($Is refType this@@146 Tclass._module.Thread))))))
 :pattern ( (_module.Object.triggerAxioms $Heap@@85 this@@146) ($IsGoodHeap $Heap@@85))
))))
(assert (forall (($h@@36 T@U) ($o@@104 T@U) ) (!  (=> (and ($IsGoodHeap $h@@36) (and (or (not (= $o@@104 null)) (not true)) ($Is refType $o@@104 Tclass._module.Universe?))) ($Is SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@36 $o@@104) _module.Universe.content)) (TSet Tclass._module.Object)))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@36 $o@@104) _module.Universe.content)))
)))
(assert (forall ((h@@5 T@U) (v@@4 T@U) ) (! ($IsAlloc intType v@@4 TInt h@@5)
 :pattern ( ($IsAlloc intType v@@4 TInt h@@5))
)))
(assert (forall ((h@@6 T@U) (v@@5 T@U) ) (! ($IsAlloc boolType v@@5 TBool h@@6)
 :pattern ( ($IsAlloc boolType v@@5 TBool h@@6))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@68 T@U) ($Heap@@86 T@U) (this@@147 T@U) ) (!  (=> (or (|_module.OwnedU32.userInv2#canCall| $prevHeap@@68 $Heap@@86 this@@147) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@68) ($IsGoodHeap $Heap@@86)) ($HeapSucc $prevHeap@@68 $Heap@@86)) (and (or (not (= this@@147 null)) (not true)) (and ($Is refType this@@147 Tclass._module.OwnedU32) ($IsAlloc refType this@@147 Tclass._module.OwnedU32 $prevHeap@@68)))))) (and (|_module.OwnedU32.localUserInv2#canCall| $prevHeap@@68 $Heap@@86 this@@147) (= (_module.OwnedU32.userInv2 $prevHeap@@68 $Heap@@86 this@@147) (_module.OwnedU32.localUserInv2 $prevHeap@@68 $Heap@@86 this@@147))))
 :pattern ( (_module.OwnedU32.userInv2 $prevHeap@@68 $Heap@@86 this@@147) ($IsGoodHeap $Heap@@86))
))))
(assert (forall ((v@@6 T@U) ) (! ($Is intType v@@6 TInt)
 :pattern ( ($Is intType v@@6 TInt))
)))
(assert (forall ((v@@7 T@U) ) (! ($Is boolType v@@7 TBool)
 :pattern ( ($Is boolType v@@7 TBool))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $Heap@@87 () T@U)
(declare-fun |universe#0| () T@U)
(declare-fun |running#0@@3| () T@U)
(declare-fun |mutex#0| () T@U)
(declare-fun |defass#guard#0| () Bool)
(declare-fun |guard#0| () T@U)
(declare-fun $_ModifiesFrame@0 () T@U)
(declare-fun $Heap@0 () T@U)
(declare-fun |call4formal@guard#0| () T@U)
(declare-fun $Heap@1 () T@U)
(declare-fun |call4formal@guard#0@0| () T@U)
(declare-fun $Heap@2 () T@U)
(declare-fun |a#0@0| () Int)
(declare-fun $Heap@3 () T@U)
(declare-fun $Heap@4 () T@U)
(declare-fun |b#0@0| () Int)
(declare-fun $Heap@5 () T@U)
(declare-fun $Heap@6 () T@U)
(declare-fun $Heap@7 () T@U)
(declare-fun $Heap@8 () T@U)
(declare-fun |$rhs#0@0| () Int)
(declare-fun $Heap@9 () T@U)
(declare-fun $obj0@0 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 2) (let ((anon0_correct  (=> (and (and (and ($IsGoodHeap $Heap@@87) ($IsHeapAnchor $Heap@@87)) (and ($Is refType |universe#0| Tclass._module.Universe) ($IsAlloc refType |universe#0| Tclass._module.Universe $Heap@@87))) (and (and ($Is refType |running#0@@3| Tclass._module.Thread) ($IsAlloc refType |running#0@@3| Tclass._module.Thread $Heap@@87)) (and ($Is refType |mutex#0| Tclass._module.Mutex) ($IsAlloc refType |mutex#0| Tclass._module.Mutex $Heap@@87)))) (=> (and (and (and (and (=> |defass#guard#0| (and ($Is refType |guard#0| Tclass._module.MutexGuardU32) ($IsAlloc refType |guard#0| Tclass._module.MutexGuardU32 $Heap@@87))) true) (= 21 $FunctionContextHeight)) (and (and (|_module.Universe.globalInv#canCall| $Heap@@87 |universe#0|) (and (_module.Universe.globalInv $Heap@@87 |universe#0|) (and (_module.Universe.globalBaseInv $Heap@@87 |universe#0|) (forall ((|o#8| T@U) ) (!  (=> (and ($Is refType |o#8| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |o#8|))) (_module.Object.inv $Heap@@87 |o#8|))
 :pattern ( (_module.Object.inv $Heap@@87 |o#8|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |o#8|)))
))))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |running#0@@3|)))) (and (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |mutex#0|)) (= $_ModifiesFrame@0 (|lambda#0| null $Heap@@87 alloc |universe#0| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content))))) (and (or (not (= |universe#0| null)) (not true)) (forall (($o@@105 T@U) ($f@@61 T@U) )  (=> (and (and (or (not (= $o@@105 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 $o@@105) alloc)))) (or (= $o@@105 |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType $o@@105)))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@105 $f@@61)))))) (and (and (=> (|_module.Universe.globalInv#canCall| $Heap@@87 |universe#0|) (or (_module.Universe.globalInv $Heap@@87 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@@87 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@@87 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true))))))) (=> (|_module.Universe.globalInv#canCall| $Heap@@87 |universe#0|) (or (_module.Universe.globalInv $Heap@@87 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@@87 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@@87 |universe#0|) (forall ((|o#0@@13| T@U) ) (!  (=> (and ($Is refType |o#0@@13| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@13|))) (and (and (and (= (_module.Object.universe |o#0@@13|) |universe#0|) (or (not (= |o#0@@13| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@@87 |o#0@@13|)) (_module.Object.triggerAxioms $Heap@@87 |o#0@@13|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@@87 |o#0@@13|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@@87 |o#0@@13|))
 :pattern ( (_module.Object.universe |o#0@@13|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@13|)))
))))))) (and (=> (|_module.Universe.globalInv#canCall| $Heap@@87 |universe#0|) (or (_module.Universe.globalInv $Heap@@87 |universe#0|) (forall ((|o#1@@2| T@U) ) (!  (=> (and ($Is refType |o#1@@2| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@2|))) (_module.Object.inv $Heap@@87 |o#1@@2|))
 :pattern ( (_module.Object.inv $Heap@@87 |o#1@@2|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@2|)))
)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |running#0@@3|)))))) (=> (and (and (and (and (and (and (and (and (and ($IsGoodHeap $Heap@0) ($IsHeapAnchor $Heap@0)) (|_module.Universe.globalInv#canCall| $Heap@0 |universe#0|)) (and (|_module.Universe.globalInv#canCall| $Heap@0 |universe#0|) (and (_module.Universe.globalInv $Heap@0 |universe#0|) (and (_module.Universe.globalBaseInv $Heap@0 |universe#0|) (forall ((|o#3| T@U) ) (!  (=> (and ($Is refType |o#3| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#3|))) (_module.Object.inv $Heap@0 |o#3|))
 :pattern ( (_module.Object.inv $Heap@0 |o#3|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#3|)))
)))))) (and (and (|_module.Universe.legalTransitionsSequence#canCall| $Heap@@87 $Heap@0 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) |running#0@@3|))) (=> (_module.Universe.legalTransitionsSequence $Heap@@87 $Heap@0 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) |running#0@@3|))) (|_module.Universe.globalSequenceInv2#canCall| $Heap@@87 $Heap@0 |universe#0|))) (and (|_module.Universe.legalTransitionsSequence#canCall| $Heap@@87 $Heap@0 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) |running#0@@3|))) (and (_module.Universe.legalTransitionsSequence $Heap@@87 $Heap@0 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) |running#0@@3|))) (and (and (_module.Universe.baseLegalTransitionsSequence $Heap@@87 $Heap@0 |universe#0|) (forall ((|o#7| T@U) ) (!  (=> (and ($Is refType |o#7| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |o#7|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#7|)))) (or (forall (($o@@106 T@U) ($f@@62 T@U) ) (!  (=> (or (not (= $o@@106 null)) (not true)) (=> (= $o@@106 |o#7|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@106) $f@@62) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 $o@@106) $f@@62))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@106) $f@@62))
)) (_module.Object.sequenceInv2 $Heap@@87 $Heap@0 |o#7|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@@87 $Heap@0 |o#7|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#7|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |o#7|)))
))) (forall ((|o#8@@0| T@U) ) (!  (=> (and ($Is refType |o#8@@0| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@0|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |o#8@@0|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (and (not (|Set#IsMember| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) |running#0@@3|)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |o#8@@0|) _module.OwnedObject.owner))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |o#8@@0|) _module.OwnedObject.owner) Tclass._module.Object $Heap@@87)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |o#8@@0|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#8@@0|) _module.OwnedObject.nonvolatileVersion))))))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#8@@0|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |o#8@@0|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |o#8@@0|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@0|)))
))))))) (and (and (and (|_module.Universe.globalSequenceInv2#canCall| $Heap@@87 $Heap@0 |universe#0|) (and (_module.Universe.globalSequenceInv2 $Heap@@87 $Heap@0 |universe#0|) (forall ((|o#9| T@U) ) (!  (=> (and ($Is refType |o#9| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |o#9|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#9|)) (_module.Object.sequenceInv2 $Heap@@87 $Heap@0 |o#9|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@@87 $Heap@0 |o#9|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#9|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType |o#9|)))
)))) (forall (($o@@107 T@U) ) (!  (=> (and (or (not (= $o@@107 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 $o@@107) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@107) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 $o@@107)) (or (= $o@@107 |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@87 |universe#0|) _module.Universe.content)) ($Box refType $o@@107)))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@107))
))) (and ($HeapSucc $Heap@@87 $Heap@0) (forall (($o@@108 T@U) ($f@@63 T@U) )  (=> (and (and (or (not (= $o@@108 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@108) alloc)))) (or (= $o@@108 |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType $o@@108)))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@108 $f@@63))))))) (and (and (and (and ($Is refType |call4formal@guard#0| Tclass._module.MutexGuardU32) ($IsAlloc refType |call4formal@guard#0| Tclass._module.MutexGuardU32 $Heap@@87)) (=> (|_module.Universe.globalInv#canCall| $Heap@0 |universe#0|) (or (_module.Universe.globalInv $Heap@0 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@0 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@0 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true)))))))) (and (and (=> (|_module.Universe.globalInv#canCall| $Heap@0 |universe#0|) (or (_module.Universe.globalInv $Heap@0 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@0 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@0 |universe#0|) (forall ((|o#0@@14| T@U) ) (!  (=> (and ($Is refType |o#0@@14| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@14|))) (and (and (and (= (_module.Object.universe |o#0@@14|) |universe#0|) (or (not (= |o#0@@14| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@0 |o#0@@14|)) (_module.Object.triggerAxioms $Heap@0 |o#0@@14|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@0 |o#0@@14|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@0 |o#0@@14|))
 :pattern ( (_module.Object.universe |o#0@@14|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@14|)))
)))))) (=> (|_module.Universe.globalInv#canCall| $Heap@0 |universe#0|) (or (_module.Universe.globalInv $Heap@0 |universe#0|) (forall ((|o#1@@3| T@U) ) (!  (=> (and ($Is refType |o#1@@3| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@3|))) (_module.Object.inv $Heap@0 |o#1@@3|))
 :pattern ( (_module.Object.inv $Heap@0 |o#1@@3|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@3|)))
))))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |running#0@@3|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |mutex#0|))))) (and (and (and ($IsGoodHeap $Heap@1) ($IsHeapAnchor $Heap@1)) (and ($Is refType |call4formal@guard#0@0| Tclass._module.MutexGuardU32) ($IsAlloc refType |call4formal@guard#0@0| Tclass._module.MutexGuardU32 $Heap@1))) (and (and (|_module.Universe.globalInv#canCall| $Heap@1 |universe#0|) (=> (_module.Universe.globalInv $Heap@1 |universe#0|) (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@0 $Heap@1 |universe#0|))) (and (|_module.Universe.globalInv#canCall| $Heap@1 |universe#0|) (and (_module.Universe.globalInv $Heap@1 |universe#0|) (and (_module.Universe.globalBaseInv $Heap@1 |universe#0|) (forall ((|o#3@@0| T@U) ) (!  (=> (and ($Is refType |o#3@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@0|))) (_module.Object.inv $Heap@1 |o#3@@0|))
 :pattern ( (_module.Object.inv $Heap@1 |o#3@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@0|)))
))))))))) (and (and (and (and (and (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@0 $Heap@1 |universe#0|) (and (_module.Universe.baseLegalTransitionsSequence $Heap@0 $Heap@1 |universe#0|) (and (and (and (_module.Universe.globalBaseInv $Heap@0 |universe#0|) (_module.Universe.globalBaseInv $Heap@1 |universe#0|)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)))) (forall ((|o#6| T@U) ) (!  (=> (and ($Is refType |o#6| Tclass._module.Object) (and (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#6|))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#6|)))) (not ($IsAllocBox ($Box refType |o#6|) Tclass._module.Object $Heap@0)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#6|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#6|)))
))))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |call4formal@guard#0@0|))) (and (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |call4formal@guard#0@0|) _module.OwnedObject.owner)) |running#0@@3|) (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex)) |mutex#0|))) (and (and (and (forall (($o@@109 T@U) ) (!  (=> (and (or (not (= $o@@109 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@109) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@109) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@109)) (or (= $o@@109 |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |universe#0|) _module.Universe.content)) ($Box refType $o@@109)))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@109))
)) ($HeapSucc $Heap@0 $Heap@1)) (and (or (not (= |universe#0| null)) (not true)) (forall (($o@@110 T@U) ($f@@64 T@U) )  (=> (and (and (or (not (= $o@@110 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@110) alloc)))) (or (= $o@@110 |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType $o@@110)))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@110 $f@@64)))))) (and (and (=> (|_module.Universe.globalInv#canCall| $Heap@1 |universe#0|) (or (_module.Universe.globalInv $Heap@1 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@1 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@1 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true))))))) (=> (|_module.Universe.globalInv#canCall| $Heap@1 |universe#0|) (or (_module.Universe.globalInv $Heap@1 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@1 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@1 |universe#0|) (forall ((|o#0@@15| T@U) ) (!  (=> (and ($Is refType |o#0@@15| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@15|))) (and (and (and (= (_module.Object.universe |o#0@@15|) |universe#0|) (or (not (= |o#0@@15| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@1 |o#0@@15|)) (_module.Object.triggerAxioms $Heap@1 |o#0@@15|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@1 |o#0@@15|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@1 |o#0@@15|))
 :pattern ( (_module.Object.universe |o#0@@15|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@15|)))
))))))) (and (=> (|_module.Universe.globalInv#canCall| $Heap@1 |universe#0|) (or (_module.Universe.globalInv $Heap@1 |universe#0|) (forall ((|o#1@@4| T@U) ) (!  (=> (and ($Is refType |o#1@@4| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@4|))) (_module.Object.inv $Heap@1 |o#1@@4|))
 :pattern ( (_module.Object.inv $Heap@1 |o#1@@4|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@4|)))
)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |running#0@@3|)))))) (and (and (and (and ($IsGoodHeap $Heap@2) ($IsHeapAnchor $Heap@2)) (|_module.Universe.globalInv#canCall| $Heap@2 |universe#0|)) (and (|_module.Universe.globalInv#canCall| $Heap@2 |universe#0|) (and (_module.Universe.globalInv $Heap@2 |universe#0|) (and (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (forall ((|o#3@@1| T@U) ) (!  (=> (and ($Is refType |o#3@@1| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@1|))) (_module.Object.inv $Heap@2 |o#3@@1|))
 :pattern ( (_module.Object.inv $Heap@2 |o#3@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@1|)))
)))))) (and (and (|_module.Universe.legalTransitionsSequence#canCall| $Heap@1 $Heap@2 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) |running#0@@3|))) (=> (_module.Universe.legalTransitionsSequence $Heap@1 $Heap@2 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) |running#0@@3|))) (|_module.Universe.globalSequenceInv2#canCall| $Heap@1 $Heap@2 |universe#0|))) (and (|_module.Universe.legalTransitionsSequence#canCall| $Heap@1 $Heap@2 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) |running#0@@3|))) (and (_module.Universe.legalTransitionsSequence $Heap@1 $Heap@2 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) |running#0@@3|))) (and (and (_module.Universe.baseLegalTransitionsSequence $Heap@1 $Heap@2 |universe#0|) (forall ((|o#7@@0| T@U) ) (!  (=> (and ($Is refType |o#7@@0| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@0|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@0|)))) (or (forall (($o@@111 T@U) ($f@@65 T@U) ) (!  (=> (or (not (= $o@@111 null)) (not true)) (=> (= $o@@111 |o#7@@0|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@111) $f@@65) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@111) $f@@65))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@111) $f@@65))
)) (_module.Object.sequenceInv2 $Heap@1 $Heap@2 |o#7@@0|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@1 $Heap@2 |o#7@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@0|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@0|)))
))) (forall ((|o#8@@1| T@U) ) (!  (=> (and ($Is refType |o#8@@1| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@1|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |o#8@@1|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (and (not (|Set#IsMember| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) |running#0@@3|)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |o#8@@1|) _module.OwnedObject.owner))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |o#8@@1|) _module.OwnedObject.owner) Tclass._module.Object $Heap@1)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |o#8@@1|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#8@@1|) _module.OwnedObject.nonvolatileVersion))))))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#8@@1|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |o#8@@1|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |o#8@@1|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@1|)))
))))))))) (and (and (and (and (and (and (|_module.Universe.globalSequenceInv2#canCall| $Heap@1 $Heap@2 |universe#0|) (and (_module.Universe.globalSequenceInv2 $Heap@1 $Heap@2 |universe#0|) (forall ((|o#9@@0| T@U) ) (!  (=> (and ($Is refType |o#9@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@0|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@0|)) (_module.Object.sequenceInv2 $Heap@1 $Heap@2 |o#9@@0|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@1 $Heap@2 |o#9@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@0|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@0|)))
)))) (forall (($o@@112 T@U) ) (!  (=> (and (or (not (= $o@@112 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@112) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@112) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@112)) (or (= $o@@112 |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |universe#0|) _module.Universe.content)) ($Box refType $o@@112)))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@112))
))) (and (and ($HeapSucc $Heap@1 $Heap@2) (or (not (= |call4formal@guard#0@0| null)) (not true))) (and (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex)) null)) (not true)) (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex))) _module.Mutex.data)) null)) (not true))))) (and (and (and (= |a#0@0| (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex))) _module.Mutex.data))) _module.OwnedU32.value)))) (or (not (= |universe#0| null)) (not true))) (and ($IsAlloc refType |universe#0| Tclass._module.Universe $Heap@2) ($IsAlloc refType |running#0@@3| Tclass._module.Thread $Heap@2))) (and (and ($IsAlloc refType |running#0@@3| Tclass._module.Thread $Heap@2) (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@2 $Heap@2 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true)))))))))))) (and (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@2 $Heap@2 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (forall ((|o#0@@16| T@U) ) (!  (=> (and ($Is refType |o#0@@16| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@16|))) (and (and (and (= (_module.Object.universe |o#0@@16|) |universe#0|) (or (not (= |o#0@@16| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@2 |o#0@@16|)) (_module.Object.triggerAxioms $Heap@2 |o#0@@16|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@2 |o#0@@16|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@2 |o#0@@16|))
 :pattern ( (_module.Object.universe |o#0@@16|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@16|)))
)))))))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@2 $Heap@2 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true))))))))))))))) (and (and (and (and (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@2 $Heap@2 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (forall ((|o#1@@5| T@U) ) (!  (=> (and ($Is refType |o#1@@5| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@5|))) (and (and (and (= (_module.Object.universe |o#1@@5|) |universe#0|) (or (not (= |o#1@@5| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@2 |o#1@@5|)) (_module.Object.triggerAxioms $Heap@2 |o#1@@5|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@2 |o#1@@5|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@2 |o#1@@5|))
 :pattern ( (_module.Object.universe |o#1@@5|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@5|)))
)))))))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@2 $Heap@2 |universe#0|) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)))))))))) (and (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@2 $Heap@2 |universe#0|) (forall ((|o#2| T@U) ) (!  (=> (and ($Is refType |o#2| Tclass._module.Object) (and (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#2|))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#2|)))) (not ($IsAllocBox ($Box refType |o#2|) Tclass._module.Object $Heap@2)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#2|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#2|)))
)))))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#3@@2| T@U) ) (!  (=> (and ($Is refType |o#3@@2| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@2|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@2|)))) (or (forall (($o@@113 T@U) ($f@@66 T@U) ) (!  (=> (or (not (= $o@@113 null)) (not true)) (=> (= $o@@113 |o#3@@2|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@113) $f@@66) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@113) $f@@66))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@113) $f@@66))
)) (_module.Object.sequenceInv2 $Heap@2 $Heap@2 |o#3@@2|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@2 $Heap@2 |o#3@@2|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@2|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@2|)))
)))))))) (and (and (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@2 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#4| T@U) ) (!  (=> (and ($Is refType |o#4| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#4|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (and (not (|Set#IsMember| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.owner))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.owner) Tclass._module.Object $Heap@2)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.nonvolatileVersion))))))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#4|)))
)))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.globalInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalInv $Heap@2 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true)))))))))) (and (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.globalInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalInv $Heap@2 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (forall ((|o#5| T@U) ) (!  (=> (and ($Is refType |o#5| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#5|))) (and (and (and (= (_module.Object.universe |o#5|) |universe#0|) (or (not (= |o#5| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@2 |o#5|)) (_module.Object.triggerAxioms $Heap@2 |o#5|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@2 |o#5|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@2 |o#5|))
 :pattern ( (_module.Object.universe |o#5|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#5|)))
)))))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.globalInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalInv $Heap@2 |universe#0|) (forall ((|o#6@@0| T@U) ) (!  (=> (and ($Is refType |o#6@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#6@@0|))) (_module.Object.inv $Heap@2 |o#6@@0|))
 :pattern ( (_module.Object.inv $Heap@2 |o#6@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#6@@0|)))
))))))))) (and (and (and (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (forall ((|o#7@@1| T@U) ) (!  (=> (and ($Is refType |o#7@@1| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@1|))) (and (or (forall (($o@@114 T@U) ($f@@67 T@U) ) (!  (=> (or (not (= $o@@114 null)) (not true)) (=> (= $o@@114 |o#7@@1|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@114) $f@@67) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@114) $f@@67))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@114) $f@@67))
)) (_module.Object.inv $Heap@2 |o#7@@1|)) (or (forall (($o@@115 T@U) ($f@@68 T@U) ) (!  (=> (or (not (= $o@@115 null)) (not true)) (=> (= $o@@115 |o#7@@1|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@115) $f@@68) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@115) $f@@68))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@115) $f@@68))
)) (_module.Object.inv2 $Heap@2 $Heap@2 |o#7@@1|))))
 :pattern ( (_module.Object.inv2 $Heap@2 $Heap@2 |o#7@@1|))
 :pattern ( (_module.Object.inv $Heap@2 |o#7@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@1|)))
)))) (=> (|_module.Universe.legalTransition#canCall| $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@2 $Heap@2 |universe#0| |running#0@@3|) (forall ((|o#8@@2| T@U) ) (!  (=> (and ($Is refType |o#8@@2| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@2|)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@2|))))) (_module.Object.inv $Heap@2 |o#8@@2|))
 :pattern ( (_module.Object.inv $Heap@2 |o#8@@2|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@2|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@2|)))
))))) (and ($IsGoodHeap $Heap@3) ($IsHeapAnchor $Heap@3))) (and (and (|_module.Universe.globalInv#canCall| $Heap@2 |universe#0|) (=> (_module.Universe.globalInv $Heap@2 |universe#0|) (|_module.Universe.globalInv2#canCall| $Heap@2 $Heap@2 |universe#0|))) (and (|_module.Universe.globalInv#canCall| $Heap@2 |universe#0|) (and (_module.Universe.globalInv $Heap@2 |universe#0|) (and (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (forall ((|o#10| T@U) ) (!  (=> (and ($Is refType |o#10| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#10|))) (_module.Object.inv $Heap@2 |o#10|))
 :pattern ( (_module.Object.inv $Heap@2 |o#10|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#10|)))
))))))))) (and (and (and (and (and (|_module.Universe.globalInv2#canCall| $Heap@2 $Heap@2 |universe#0|) (and (_module.Universe.globalInv2 $Heap@2 $Heap@2 |universe#0|) (forall ((|o#11| T@U) ) (!  (=> (and ($Is refType |o#11| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#11|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#11|)) (_module.Object.inv2 $Heap@2 $Heap@2 |o#11|)))
 :pattern ( (_module.Object.inv2 $Heap@2 $Heap@2 |o#11|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#11|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#11|)))
)))) (= $Heap@2 $Heap@3)) (and (or (not (= |universe#0| null)) (not true)) (forall (($o@@116 T@U) ($f@@69 T@U) )  (=> (and (and (or (not (= $o@@116 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@116) alloc)))) (or (= $o@@116 |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType $o@@116)))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@116 $f@@69)))))) (and (and (=> (|_module.Universe.globalInv#canCall| $Heap@3 |universe#0|) (or (_module.Universe.globalInv $Heap@3 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@3 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@3 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true))))))) (=> (|_module.Universe.globalInv#canCall| $Heap@3 |universe#0|) (or (_module.Universe.globalInv $Heap@3 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@3 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@3 |universe#0|) (forall ((|o#0@@17| T@U) ) (!  (=> (and ($Is refType |o#0@@17| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@17|))) (and (and (and (= (_module.Object.universe |o#0@@17|) |universe#0|) (or (not (= |o#0@@17| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@3 |o#0@@17|)) (_module.Object.triggerAxioms $Heap@3 |o#0@@17|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@3 |o#0@@17|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@3 |o#0@@17|))
 :pattern ( (_module.Object.universe |o#0@@17|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@17|)))
))))))) (and (=> (|_module.Universe.globalInv#canCall| $Heap@3 |universe#0|) (or (_module.Universe.globalInv $Heap@3 |universe#0|) (forall ((|o#1@@6| T@U) ) (!  (=> (and ($Is refType |o#1@@6| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@6|))) (_module.Object.inv $Heap@3 |o#1@@6|))
 :pattern ( (_module.Object.inv $Heap@3 |o#1@@6|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@6|)))
)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |running#0@@3|))))) (and (and (and (and ($IsGoodHeap $Heap@4) ($IsHeapAnchor $Heap@4)) (|_module.Universe.globalInv#canCall| $Heap@4 |universe#0|)) (and (|_module.Universe.globalInv#canCall| $Heap@4 |universe#0|) (and (_module.Universe.globalInv $Heap@4 |universe#0|) (and (_module.Universe.globalBaseInv $Heap@4 |universe#0|) (forall ((|o#3@@3| T@U) ) (!  (=> (and ($Is refType |o#3@@3| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@3|))) (_module.Object.inv $Heap@4 |o#3@@3|))
 :pattern ( (_module.Object.inv $Heap@4 |o#3@@3|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@3|)))
)))))) (and (and (|_module.Universe.legalTransitionsSequence#canCall| $Heap@3 $Heap@4 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) |running#0@@3|))) (=> (_module.Universe.legalTransitionsSequence $Heap@3 $Heap@4 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) |running#0@@3|))) (|_module.Universe.globalSequenceInv2#canCall| $Heap@3 $Heap@4 |universe#0|))) (and (|_module.Universe.legalTransitionsSequence#canCall| $Heap@3 $Heap@4 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) |running#0@@3|))) (and (_module.Universe.legalTransitionsSequence $Heap@3 $Heap@4 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) |running#0@@3|))) (and (and (_module.Universe.baseLegalTransitionsSequence $Heap@3 $Heap@4 |universe#0|) (forall ((|o#7@@2| T@U) ) (!  (=> (and ($Is refType |o#7@@2| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@2|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@2|)))) (or (forall (($o@@117 T@U) ($f@@70 T@U) ) (!  (=> (or (not (= $o@@117 null)) (not true)) (=> (= $o@@117 |o#7@@2|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@117) $f@@70) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@117) $f@@70))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@117) $f@@70))
)) (_module.Object.sequenceInv2 $Heap@3 $Heap@4 |o#7@@2|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@3 $Heap@4 |o#7@@2|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@2|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@2|)))
))) (forall ((|o#8@@3| T@U) ) (!  (=> (and ($Is refType |o#8@@3| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@3|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#8@@3|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (and (not (|Set#IsMember| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) |running#0@@3|)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#8@@3|) _module.OwnedObject.owner))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#8@@3|) _module.OwnedObject.owner) Tclass._module.Object $Heap@3)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#8@@3|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |o#8@@3|) _module.OwnedObject.nonvolatileVersion))))))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |o#8@@3|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#8@@3|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#8@@3|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@3|)))
)))))))))) (and (and (and (and (and (and (and (|_module.Universe.globalSequenceInv2#canCall| $Heap@3 $Heap@4 |universe#0|) (and (_module.Universe.globalSequenceInv2 $Heap@3 $Heap@4 |universe#0|) (forall ((|o#9@@1| T@U) ) (!  (=> (and ($Is refType |o#9@@1| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@1|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@1|)) (_module.Object.sequenceInv2 $Heap@3 $Heap@4 |o#9@@1|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@3 $Heap@4 |o#9@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@1|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@1|)))
)))) (forall (($o@@118 T@U) ) (!  (=> (and (or (not (= $o@@118 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@118) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@118) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@118)) (or (= $o@@118 |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType $o@@118)))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@118))
))) (and (and ($HeapSucc $Heap@3 $Heap@4) (or (not (= |call4formal@guard#0@0| null)) (not true))) (and (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex)) null)) (not true)) (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex))) _module.Mutex.data)) null)) (not true))))) (and (and (and (= |b#0@0| (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex))) _module.Mutex.data))) _module.OwnedU32.value)))) (or (not (= |universe#0| null)) (not true))) (and ($IsAlloc refType |universe#0| Tclass._module.Universe $Heap@4) ($IsAlloc refType |running#0@@3| Tclass._module.Thread $Heap@4))) (and (and ($IsAlloc refType |running#0@@3| Tclass._module.Thread $Heap@4) (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@4 $Heap@4 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@4 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@4 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true)))))))))))) (and (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@4 $Heap@4 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@4 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@4 |universe#0|) (forall ((|o#0@@18| T@U) ) (!  (=> (and ($Is refType |o#0@@18| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@18|))) (and (and (and (= (_module.Object.universe |o#0@@18|) |universe#0|) (or (not (= |o#0@@18| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@4 |o#0@@18|)) (_module.Object.triggerAxioms $Heap@4 |o#0@@18|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@4 |o#0@@18|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@4 |o#0@@18|))
 :pattern ( (_module.Object.universe |o#0@@18|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@18|)))
)))))))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@4 $Heap@4 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@4 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@4 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true))))))))))))))) (and (and (and (and (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@4 $Heap@4 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@4 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@4 |universe#0|) (forall ((|o#1@@7| T@U) ) (!  (=> (and ($Is refType |o#1@@7| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@7|))) (and (and (and (= (_module.Object.universe |o#1@@7|) |universe#0|) (or (not (= |o#1@@7| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@4 |o#1@@7|)) (_module.Object.triggerAxioms $Heap@4 |o#1@@7|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@4 |o#1@@7|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@4 |o#1@@7|))
 :pattern ( (_module.Object.universe |o#1@@7|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@7|)))
)))))))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@4 $Heap@4 |universe#0|) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)))))))))) (and (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@4 $Heap@4 |universe#0|) (forall ((|o#2@@0| T@U) ) (!  (=> (and ($Is refType |o#2@@0| Tclass._module.Object) (and (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#2@@0|))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#2@@0|)))) (not ($IsAllocBox ($Box refType |o#2@@0|) Tclass._module.Object $Heap@4)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#2@@0|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#2@@0|)))
)))))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#3@@4| T@U) ) (!  (=> (and ($Is refType |o#3@@4| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@4|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@4|)))) (or (forall (($o@@119 T@U) ($f@@71 T@U) ) (!  (=> (or (not (= $o@@119 null)) (not true)) (=> (= $o@@119 |o#3@@4|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@119) $f@@71) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@119) $f@@71))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@119) $f@@71))
)) (_module.Object.sequenceInv2 $Heap@4 $Heap@4 |o#3@@4|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@4 $Heap@4 |o#3@@4|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@4|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@4|)))
)))))))) (and (and (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@4 $Heap@4 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#4@@0| T@U) ) (!  (=> (and ($Is refType |o#4@@0| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#4@@0|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |o#4@@0|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (and (not (|Set#IsMember| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |o#4@@0|) _module.OwnedObject.owner))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |o#4@@0|) _module.OwnedObject.owner) Tclass._module.Object $Heap@4)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |o#4@@0|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |o#4@@0|) _module.OwnedObject.nonvolatileVersion))))))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |o#4@@0|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |o#4@@0|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |o#4@@0|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#4@@0|)))
)))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (=> (|_module.Universe.globalInv#canCall| $Heap@4 |universe#0|) (or (_module.Universe.globalInv $Heap@4 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@4 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@4 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true)))))))))) (and (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (=> (|_module.Universe.globalInv#canCall| $Heap@4 |universe#0|) (or (_module.Universe.globalInv $Heap@4 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@4 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@4 |universe#0|) (forall ((|o#5@@0| T@U) ) (!  (=> (and ($Is refType |o#5@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#5@@0|))) (and (and (and (= (_module.Object.universe |o#5@@0|) |universe#0|) (or (not (= |o#5@@0| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@4 |o#5@@0|)) (_module.Object.triggerAxioms $Heap@4 |o#5@@0|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@4 |o#5@@0|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@4 |o#5@@0|))
 :pattern ( (_module.Object.universe |o#5@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#5@@0|)))
)))))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (=> (|_module.Universe.globalInv#canCall| $Heap@4 |universe#0|) (or (_module.Universe.globalInv $Heap@4 |universe#0|) (forall ((|o#6@@1| T@U) ) (!  (=> (and ($Is refType |o#6@@1| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#6@@1|))) (_module.Object.inv $Heap@4 |o#6@@1|))
 :pattern ( (_module.Object.inv $Heap@4 |o#6@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#6@@1|)))
))))))))) (and (and (and (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (forall ((|o#7@@3| T@U) ) (!  (=> (and ($Is refType |o#7@@3| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@3|))) (and (or (forall (($o@@120 T@U) ($f@@72 T@U) ) (!  (=> (or (not (= $o@@120 null)) (not true)) (=> (= $o@@120 |o#7@@3|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@120) $f@@72) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@120) $f@@72))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@120) $f@@72))
)) (_module.Object.inv $Heap@4 |o#7@@3|)) (or (forall (($o@@121 T@U) ($f@@73 T@U) ) (!  (=> (or (not (= $o@@121 null)) (not true)) (=> (= $o@@121 |o#7@@3|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@121) $f@@73) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@121) $f@@73))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@121) $f@@73))
)) (_module.Object.inv2 $Heap@4 $Heap@4 |o#7@@3|))))
 :pattern ( (_module.Object.inv2 $Heap@4 $Heap@4 |o#7@@3|))
 :pattern ( (_module.Object.inv $Heap@4 |o#7@@3|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@3|)))
)))) (=> (|_module.Universe.legalTransition#canCall| $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@4 $Heap@4 |universe#0| |running#0@@3|) (forall ((|o#8@@4| T@U) ) (!  (=> (and ($Is refType |o#8@@4| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@4|)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@4|))))) (_module.Object.inv $Heap@4 |o#8@@4|))
 :pattern ( (_module.Object.inv $Heap@4 |o#8@@4|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@4|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@4|)))
))))) (and ($IsGoodHeap $Heap@5) ($IsHeapAnchor $Heap@5))) (and (and (|_module.Universe.globalInv#canCall| $Heap@4 |universe#0|) (=> (_module.Universe.globalInv $Heap@4 |universe#0|) (|_module.Universe.globalInv2#canCall| $Heap@4 $Heap@4 |universe#0|))) (and (|_module.Universe.globalInv#canCall| $Heap@4 |universe#0|) (and (_module.Universe.globalInv $Heap@4 |universe#0|) (and (_module.Universe.globalBaseInv $Heap@4 |universe#0|) (forall ((|o#10@@0| T@U) ) (!  (=> (and ($Is refType |o#10@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#10@@0|))) (_module.Object.inv $Heap@4 |o#10@@0|))
 :pattern ( (_module.Object.inv $Heap@4 |o#10@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#10@@0|)))
))))))))) (and (and (and (and (and (|_module.Universe.globalInv2#canCall| $Heap@4 $Heap@4 |universe#0|) (and (_module.Universe.globalInv2 $Heap@4 $Heap@4 |universe#0|) (forall ((|o#11@@0| T@U) ) (!  (=> (and ($Is refType |o#11@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#11@@0|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#11@@0|)) (_module.Object.inv2 $Heap@4 $Heap@4 |o#11@@0|)))
 :pattern ( (_module.Object.inv2 $Heap@4 $Heap@4 |o#11@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#11@@0|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |universe#0|) _module.Universe.content)) ($Box refType |o#11@@0|)))
)))) (= $Heap@4 $Heap@5)) (and (or (not (= |universe#0| null)) (not true)) (forall (($o@@122 T@U) ($f@@74 T@U) )  (=> (and (and (or (not (= $o@@122 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@122) alloc)))) (or (= $o@@122 |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType $o@@122)))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@122 $f@@74)))))) (and (and (=> (|_module.Universe.globalInv#canCall| $Heap@5 |universe#0|) (or (_module.Universe.globalInv $Heap@5 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@5 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@5 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true))))))) (=> (|_module.Universe.globalInv#canCall| $Heap@5 |universe#0|) (or (_module.Universe.globalInv $Heap@5 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@5 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@5 |universe#0|) (forall ((|o#0@@19| T@U) ) (!  (=> (and ($Is refType |o#0@@19| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@19|))) (and (and (and (= (_module.Object.universe |o#0@@19|) |universe#0|) (or (not (= |o#0@@19| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@5 |o#0@@19|)) (_module.Object.triggerAxioms $Heap@5 |o#0@@19|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@5 |o#0@@19|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@5 |o#0@@19|))
 :pattern ( (_module.Object.universe |o#0@@19|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@19|)))
))))))) (and (=> (|_module.Universe.globalInv#canCall| $Heap@5 |universe#0|) (or (_module.Universe.globalInv $Heap@5 |universe#0|) (forall ((|o#1@@8| T@U) ) (!  (=> (and ($Is refType |o#1@@8| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@8|))) (_module.Object.inv $Heap@5 |o#1@@8|))
 :pattern ( (_module.Object.inv $Heap@5 |o#1@@8|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@8|)))
)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType |running#0@@3|))))) (and (and (and (and ($IsGoodHeap $Heap@6) ($IsHeapAnchor $Heap@6)) (|_module.Universe.globalInv#canCall| $Heap@6 |universe#0|)) (and (|_module.Universe.globalInv#canCall| $Heap@6 |universe#0|) (and (_module.Universe.globalInv $Heap@6 |universe#0|) (and (_module.Universe.globalBaseInv $Heap@6 |universe#0|) (forall ((|o#3@@5| T@U) ) (!  (=> (and ($Is refType |o#3@@5| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@5|))) (_module.Object.inv $Heap@6 |o#3@@5|))
 :pattern ( (_module.Object.inv $Heap@6 |o#3@@5|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@5|)))
)))))) (and (and (and (|_module.Universe.legalTransitionsSequence#canCall| $Heap@5 $Heap@6 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) |running#0@@3|))) (=> (_module.Universe.legalTransitionsSequence $Heap@5 $Heap@6 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) |running#0@@3|))) (|_module.Universe.globalSequenceInv2#canCall| $Heap@5 $Heap@6 |universe#0|))) (and (|_module.Universe.legalTransitionsSequence#canCall| $Heap@5 $Heap@6 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) |running#0@@3|))) (and (_module.Universe.legalTransitionsSequence $Heap@5 $Heap@6 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) |running#0@@3|))) (and (and (_module.Universe.baseLegalTransitionsSequence $Heap@5 $Heap@6 |universe#0|) (forall ((|o#7@@4| T@U) ) (!  (=> (and ($Is refType |o#7@@4| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@4|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@4|)))) (or (forall (($o@@123 T@U) ($f@@75 T@U) ) (!  (=> (or (not (= $o@@123 null)) (not true)) (=> (= $o@@123 |o#7@@4|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@123) $f@@75) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@123) $f@@75))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@123) $f@@75))
)) (_module.Object.sequenceInv2 $Heap@5 $Heap@6 |o#7@@4|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@5 $Heap@6 |o#7@@4|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@4|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@4|)))
))) (forall ((|o#8@@5| T@U) ) (!  (=> (and ($Is refType |o#8@@5| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@5|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |o#8@@5|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (and (not (|Set#IsMember| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) |running#0@@3|)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |o#8@@5|) _module.OwnedObject.owner))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |o#8@@5|) _module.OwnedObject.owner) Tclass._module.Object $Heap@5)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |o#8@@5|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |o#8@@5|) _module.OwnedObject.nonvolatileVersion))))))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |o#8@@5|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |o#8@@5|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |o#8@@5|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@5|)))
)))))) (and (and (|_module.Universe.globalSequenceInv2#canCall| $Heap@5 $Heap@6 |universe#0|) (and (_module.Universe.globalSequenceInv2 $Heap@5 $Heap@6 |universe#0|) (forall ((|o#9@@2| T@U) ) (!  (=> (and ($Is refType |o#9@@2| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@2|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@2|)) (_module.Object.sequenceInv2 $Heap@5 $Heap@6 |o#9@@2|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@5 $Heap@6 |o#9@@2|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@2|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@2|)))
)))) (and (forall (($o@@124 T@U) ) (!  (=> (and (or (not (= $o@@124 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@124) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@124) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@124)) (or (= $o@@124 |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |universe#0|) _module.Universe.content)) ($Box refType $o@@124)))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@124))
)) ($HeapSucc $Heap@5 $Heap@6))))))) (and (and (and (and (and (and (= |a#0@0| |b#0@0|) (or (not (= |universe#0| null)) (not true))) (and ($IsAlloc refType |universe#0| Tclass._module.Universe $Heap@6) ($IsAlloc refType |running#0@@3| Tclass._module.Thread $Heap@6))) (and (and ($IsAlloc refType |running#0@@3| Tclass._module.Thread $Heap@6) (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@6 $Heap@6 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@6 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@6 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true)))))))))))) (and (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@6 $Heap@6 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@6 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@6 |universe#0|) (forall ((|o#0@@20| T@U) ) (!  (=> (and ($Is refType |o#0@@20| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@20|))) (and (and (and (= (_module.Object.universe |o#0@@20|) |universe#0|) (or (not (= |o#0@@20| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@6 |o#0@@20|)) (_module.Object.triggerAxioms $Heap@6 |o#0@@20|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@6 |o#0@@20|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@6 |o#0@@20|))
 :pattern ( (_module.Object.universe |o#0@@20|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@20|)))
)))))))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@6 $Heap@6 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@6 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@6 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true)))))))))))))) (and (and (and (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@6 $Heap@6 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@6 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@6 |universe#0|) (forall ((|o#1@@9| T@U) ) (!  (=> (and ($Is refType |o#1@@9| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@9|))) (and (and (and (= (_module.Object.universe |o#1@@9|) |universe#0|) (or (not (= |o#1@@9| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@6 |o#1@@9|)) (_module.Object.triggerAxioms $Heap@6 |o#1@@9|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@6 |o#1@@9|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@6 |o#1@@9|))
 :pattern ( (_module.Object.universe |o#1@@9|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@9|)))
)))))))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@6 $Heap@6 |universe#0|) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)))))))))) (and (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.baseLegalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0|) (or (_module.Universe.baseLegalTransitionsSequence $Heap@6 $Heap@6 |universe#0|) (forall ((|o#2@@1| T@U) ) (!  (=> (and ($Is refType |o#2@@1| Tclass._module.Object) (and (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#2@@1|))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#2@@1|)))) (not ($IsAllocBox ($Box refType |o#2@@1|) Tclass._module.Object $Heap@6)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#2@@1|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#2@@1|)))
)))))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#3@@6| T@U) ) (!  (=> (and ($Is refType |o#3@@6| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@6|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@6|)))) (or (forall (($o@@125 T@U) ($f@@76 T@U) ) (!  (=> (or (not (= $o@@125 null)) (not true)) (=> (= $o@@125 |o#3@@6|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@125) $f@@76) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@125) $f@@76))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@125) $f@@76))
)) (_module.Object.sequenceInv2 $Heap@6 $Heap@6 |o#3@@6|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@6 $Heap@6 |o#3@@6|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@6|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@6|)))
)))))))) (and (and (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (=> (|_module.Universe.legalTransitionsSequence#canCall| $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.legalTransitionsSequence $Heap@6 $Heap@6 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#4@@1| T@U) ) (!  (=> (and ($Is refType |o#4@@1| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#4@@1|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |o#4@@1|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (and (not (|Set#IsMember| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |o#4@@1|) _module.OwnedObject.owner))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |o#4@@1|) _module.OwnedObject.owner) Tclass._module.Object $Heap@6)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |o#4@@1|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |o#4@@1|) _module.OwnedObject.nonvolatileVersion))))))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |o#4@@1|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |o#4@@1|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |o#4@@1|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#4@@1|)))
)))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (=> (|_module.Universe.globalInv#canCall| $Heap@6 |universe#0|) (or (_module.Universe.globalInv $Heap@6 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@6 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@6 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true)))))))))) (and (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (=> (|_module.Universe.globalInv#canCall| $Heap@6 |universe#0|) (or (_module.Universe.globalInv $Heap@6 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@6 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@6 |universe#0|) (forall ((|o#5@@1| T@U) ) (!  (=> (and ($Is refType |o#5@@1| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#5@@1|))) (and (and (and (= (_module.Object.universe |o#5@@1|) |universe#0|) (or (not (= |o#5@@1| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@6 |o#5@@1|)) (_module.Object.triggerAxioms $Heap@6 |o#5@@1|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@6 |o#5@@1|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@6 |o#5@@1|))
 :pattern ( (_module.Object.universe |o#5@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#5@@1|)))
)))))))) (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (=> (|_module.Universe.globalInv#canCall| $Heap@6 |universe#0|) (or (_module.Universe.globalInv $Heap@6 |universe#0|) (forall ((|o#6@@2| T@U) ) (!  (=> (and ($Is refType |o#6@@2| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#6@@2|))) (_module.Object.inv $Heap@6 |o#6@@2|))
 :pattern ( (_module.Object.inv $Heap@6 |o#6@@2|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#6@@2|)))
)))))))))) (and (and (and (and (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (forall ((|o#7@@5| T@U) ) (!  (=> (and ($Is refType |o#7@@5| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@5|))) (and (or (forall (($o@@126 T@U) ($f@@77 T@U) ) (!  (=> (or (not (= $o@@126 null)) (not true)) (=> (= $o@@126 |o#7@@5|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@126) $f@@77) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@126) $f@@77))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@126) $f@@77))
)) (_module.Object.inv $Heap@6 |o#7@@5|)) (or (forall (($o@@127 T@U) ($f@@78 T@U) ) (!  (=> (or (not (= $o@@127 null)) (not true)) (=> (= $o@@127 |o#7@@5|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@127) $f@@78) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@127) $f@@78))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@127) $f@@78))
)) (_module.Object.inv2 $Heap@6 $Heap@6 |o#7@@5|))))
 :pattern ( (_module.Object.inv2 $Heap@6 $Heap@6 |o#7@@5|))
 :pattern ( (_module.Object.inv $Heap@6 |o#7@@5|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@5|)))
)))) (=> (|_module.Universe.legalTransition#canCall| $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition $Heap@6 $Heap@6 |universe#0| |running#0@@3|) (forall ((|o#8@@6| T@U) ) (!  (=> (and ($Is refType |o#8@@6| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@6|)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@6|))))) (_module.Object.inv $Heap@6 |o#8@@6|))
 :pattern ( (_module.Object.inv $Heap@6 |o#8@@6|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@6|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@6|)))
))))) (and ($IsGoodHeap $Heap@7) ($IsHeapAnchor $Heap@7))) (and (and (|_module.Universe.globalInv#canCall| $Heap@6 |universe#0|) (=> (_module.Universe.globalInv $Heap@6 |universe#0|) (|_module.Universe.globalInv2#canCall| $Heap@6 $Heap@6 |universe#0|))) (and (|_module.Universe.globalInv#canCall| $Heap@6 |universe#0|) (and (_module.Universe.globalInv $Heap@6 |universe#0|) (and (_module.Universe.globalBaseInv $Heap@6 |universe#0|) (forall ((|o#10@@1| T@U) ) (!  (=> (and ($Is refType |o#10@@1| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#10@@1|))) (_module.Object.inv $Heap@6 |o#10@@1|))
 :pattern ( (_module.Object.inv $Heap@6 |o#10@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#10@@1|)))
))))))) (and (and (and (|_module.Universe.globalInv2#canCall| $Heap@6 $Heap@6 |universe#0|) (and (_module.Universe.globalInv2 $Heap@6 $Heap@6 |universe#0|) (forall ((|o#11@@1| T@U) ) (!  (=> (and ($Is refType |o#11@@1| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#11@@1|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#11@@1|)) (_module.Object.inv2 $Heap@6 $Heap@6 |o#11@@1|)))
 :pattern ( (_module.Object.inv2 $Heap@6 $Heap@6 |o#11@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#11@@1|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |universe#0|) _module.Universe.content)) ($Box refType |o#11@@1|)))
)))) (= $Heap@6 $Heap@7)) (and (or (not (= |universe#0| null)) (not true)) (forall (($o@@128 T@U) ($f@@79 T@U) )  (=> (and (and (or (not (= $o@@128 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@128) alloc)))) (or (= $o@@128 |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType $o@@128)))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@128 $f@@79)))))))) (and (and (and (and (and (=> (|_module.Universe.globalInv#canCall| $Heap@7 |universe#0|) (or (_module.Universe.globalInv $Heap@7 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@7 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@7 |universe#0|) (U_2_bool (Lit boolType (bool_2_U true))))))) (=> (|_module.Universe.globalInv#canCall| $Heap@7 |universe#0|) (or (_module.Universe.globalInv $Heap@7 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@7 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@7 |universe#0|) (forall ((|o#0@@21| T@U) ) (!  (=> (and ($Is refType |o#0@@21| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@21|))) (and (and (and (= (_module.Object.universe |o#0@@21|) |universe#0|) (or (not (= |o#0@@21| |universe#0|)) (not true))) (_module.Object.baseFieldsInv $Heap@7 |o#0@@21|)) (_module.Object.triggerAxioms $Heap@7 |o#0@@21|)))
 :pattern ( (_module.Object.triggerAxioms $Heap@7 |o#0@@21|))
 :pattern ( (_module.Object.baseFieldsInv $Heap@7 |o#0@@21|))
 :pattern ( (_module.Object.universe |o#0@@21|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@21|)))
))))))) (and (=> (|_module.Universe.globalInv#canCall| $Heap@7 |universe#0|) (or (_module.Universe.globalInv $Heap@7 |universe#0|) (forall ((|o#1@@10| T@U) ) (!  (=> (and ($Is refType |o#1@@10| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@10|))) (_module.Object.inv $Heap@7 |o#1@@10|))
 :pattern ( (_module.Object.inv $Heap@7 |o#1@@10|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@10|)))
)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType |running#0@@3|)))) (and (and ($IsGoodHeap $Heap@8) ($IsHeapAnchor $Heap@8)) (|_module.Universe.globalInv#canCall| $Heap@8 |universe#0|))) (and (and (and (|_module.Universe.globalInv#canCall| $Heap@8 |universe#0|) (and (_module.Universe.globalInv $Heap@8 |universe#0|) (and (_module.Universe.globalBaseInv $Heap@8 |universe#0|) (forall ((|o#3@@7| T@U) ) (!  (=> (and ($Is refType |o#3@@7| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@7|))) (_module.Object.inv $Heap@8 |o#3@@7|))
 :pattern ( (_module.Object.inv $Heap@8 |o#3@@7|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@7|)))
))))) (and (|_module.Universe.legalTransitionsSequence#canCall| $Heap@7 $Heap@8 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) |running#0@@3|))) (=> (_module.Universe.legalTransitionsSequence $Heap@7 $Heap@8 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) |running#0@@3|))) (|_module.Universe.globalSequenceInv2#canCall| $Heap@7 $Heap@8 |universe#0|)))) (and (and (|_module.Universe.legalTransitionsSequence#canCall| $Heap@7 $Heap@8 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) |running#0@@3|))) (and (_module.Universe.legalTransitionsSequence $Heap@7 $Heap@8 |universe#0| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) |running#0@@3|))) (and (and (_module.Universe.baseLegalTransitionsSequence $Heap@7 $Heap@8 |universe#0|) (forall ((|o#7@@6| T@U) ) (!  (=> (and ($Is refType |o#7@@6| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@6|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@6|)))) (or (forall (($o@@129 T@U) ($f@@80 T@U) ) (!  (=> (or (not (= $o@@129 null)) (not true)) (=> (= $o@@129 |o#7@@6|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@129) $f@@80) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@129) $f@@80))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@129) $f@@80))
)) (_module.Object.sequenceInv2 $Heap@7 $Heap@8 |o#7@@6|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@7 $Heap@8 |o#7@@6|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@6|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@6|)))
))) (forall ((|o#8@@7| T@U) ) (!  (=> (and ($Is refType |o#8@@7| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@7|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |o#8@@7|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (and (not (|Set#IsMember| (|Set#FromBoogieMap| (|lambda#29| Tclass._module.Thread ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) |running#0@@3|)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |o#8@@7|) _module.OwnedObject.owner))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |o#8@@7|) _module.OwnedObject.owner) Tclass._module.Object $Heap@7)) (= (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |o#8@@7|) _module.OwnedObject.nonvolatileVersion))) (U_2_int ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |o#8@@7|) _module.OwnedObject.nonvolatileVersion))))))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |o#8@@7|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox intType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |o#8@@7|) _module.OwnedObject.nonvolatileVersion)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |o#8@@7|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@7|)))
))))) (and (|_module.Universe.globalSequenceInv2#canCall| $Heap@7 $Heap@8 |universe#0|) (and (_module.Universe.globalSequenceInv2 $Heap@7 $Heap@8 |universe#0|) (forall ((|o#9@@3| T@U) ) (!  (=> (and ($Is refType |o#9@@3| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@3|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@3|)) (_module.Object.sequenceInv2 $Heap@7 $Heap@8 |o#9@@3|)))
 :pattern ( (_module.Object.sequenceInv2 $Heap@7 $Heap@8 |o#9@@3|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@3|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@3|)))
))))))) (and (and (and (and (forall (($o@@130 T@U) ) (!  (=> (and (or (not (= $o@@130 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@130) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@130) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@130)) (or (= $o@@130 |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |universe#0|) _module.Universe.content)) ($Box refType $o@@130)))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@130))
)) ($HeapSucc $Heap@7 $Heap@8)) (and (or (not (= |call4formal@guard#0@0| null)) (not true)) (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex)) null)) (not true)))) (and (and (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex))) _module.Mutex.data)) null)) (not true)) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex))) _module.Mutex.data)) _module.OwnedU32.value))) (and (= |$rhs#0@0| (LitInt 42)) (= $Heap@9 (MapType0Store refType (MapType0Type FieldType BoxType) $Heap@8 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex))) _module.Mutex.data)) (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex))) _module.Mutex.data))) _module.OwnedU32.value ($Box intType (int_2_U |$rhs#0@0|)))))))) (and (and (and ($IsGoodHeap $Heap@9) (or (not (= |call4formal@guard#0@0| null)) (not true))) (and (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex)) null)) (not true)) (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex))) _module.Mutex.data)) null)) (not true)))) (and (and (= $obj0@0 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex))) _module.Mutex.data))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $obj0@0 _module.OwnedObject.nonvolatileVersion))) (and (or (not (= |call4formal@guard#0@0| null)) (not true)) (= (ControlFlow 0 2) (- 0 1)))))))))) (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 |call4formal@guard#0@0|) _module.MutexGuardU32.mutex)) null)) (not true)))))))
anon0_correct))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
