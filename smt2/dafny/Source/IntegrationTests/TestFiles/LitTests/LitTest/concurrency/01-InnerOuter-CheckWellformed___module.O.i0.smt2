(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@87 () T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@37) 3) (= ($generated@@15 $generated@@44) 4)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@45 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@45 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@45 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@15 $generated@@46) 5)) (= ($generated@@15 $generated@@47) 6)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@15 ($generated@@48 $generated@@67 $generated@@68)) 7))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@48 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@48 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@48 $generated@@71 $generated@@72))
))))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (or ($generated@@34 $generated@@73 $generated@@74) (and (< 2 $generated@@31) (and ($generated@@33 $generated@@73) (and (or (not (= $generated@@74 $generated@@35)) (not true)) (and ($generated@@36 $generated@@37 $generated@@74 $generated@@38) ($generated@@39 $generated@@37 $generated@@74 $generated@@38 $generated@@73)))))) (and (forall (($generated@@75 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@75 $generated@@51) (=> ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@73 $generated@@74) $generated@@49)) ($generated@@50 $generated@@37 $generated@@75)) (=> (= ($generated@@41 $generated@@75) $generated@@74) ($generated@@52 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@40 $generated@@74 $generated@@75))
 :pattern ( ($generated@@41 $generated@@75))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@73 $generated@@74) $generated@@49)) ($generated@@50 $generated@@37 $generated@@75)))
)) (= ($generated@@32 $generated@@73 $generated@@74) (forall (($generated@@76 T@U) ) (!  (=> (and ($generated@@36 $generated@@37 $generated@@76 $generated@@51) ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@73 $generated@@74) $generated@@49)) ($generated@@50 $generated@@37 $generated@@76))) (and (= ($generated@@41 $generated@@76) $generated@@74) (or (not (= ($generated@@40 $generated@@74 $generated@@76) $generated@@74)) (not true))))
 :pattern ( ($generated@@40 $generated@@74 $generated@@76))
 :pattern ( ($generated@@41 $generated@@76))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@73 $generated@@74) $generated@@49)) ($generated@@50 $generated@@37 $generated@@76)))
)))))
 :pattern ( ($generated@@32 $generated@@73 $generated@@74) ($generated@@33 $generated@@73))
))))
(assert (= ($generated@@77 $generated@@2) 0))
(assert (= ($generated@@78 $generated) $generated@@0))
(assert (= ($generated@@79 $generated@@2) $generated@@3))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@39 $generated@@37 $generated@@82 $generated@@80 $generated@@83) ($generated@@39 $generated@@37 $generated@@82 $generated@@81 $generated@@83))
 :pattern ( ($generated@@39 $generated@@37 $generated@@82 $generated@@80 $generated@@83))
 :pattern ( ($generated@@39 $generated@@37 $generated@@82 $generated@@81 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@39 $generated@@37 $generated@@85 $generated@@38 $generated@@86) ($generated@@39 $generated@@37 $generated@@85 $generated@@84 $generated@@86))
 :pattern ( ($generated@@39 $generated@@37 $generated@@85 $generated@@38 $generated@@86))
 :pattern ( ($generated@@39 $generated@@37 $generated@@85 $generated@@84 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@39 $generated@@37 $generated@@88 $generated@@51 $generated@@89) ($generated@@39 $generated@@37 $generated@@88 $generated@@87 $generated@@89))
 :pattern ( ($generated@@39 $generated@@37 $generated@@88 $generated@@51 $generated@@89))
 :pattern ( ($generated@@39 $generated@@37 $generated@@88 $generated@@87 $generated@@89))
)))
(assert (= ($generated@@77 $generated@@49) 0))
(assert (= ($generated@@90 $generated@@6 $generated@@14) $generated@@49))
(assert ($generated@@91 $generated@@49))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@39 $generated@@37 $generated@@92 $generated@@81 $generated@@93)  (or (= $generated@@92 $generated@@35) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@93 $generated@@92) $generated@@2)))))
 :pattern ( ($generated@@39 $generated@@37 $generated@@92 $generated@@81 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@39 $generated@@37 $generated@@94 $generated@@84 $generated@@95)  (or (= $generated@@94 $generated@@35) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@95 $generated@@94) $generated@@2)))))
 :pattern ( ($generated@@39 $generated@@37 $generated@@94 $generated@@84 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@39 $generated@@37 $generated@@96 $generated@@87 $generated@@97)  (or (= $generated@@96 $generated@@35) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@97 $generated@@96) $generated@@2)))))
 :pattern ( ($generated@@39 $generated@@37 $generated@@96 $generated@@87 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 $generated@@99) $generated@@99)
 :pattern ( ($generated@@98 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@50 $generated@@102 ($generated@@43 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@43 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@36 $generated@@44 $generated@@105 ($generated@@103 $generated@@106)) (forall (($generated@@107 T@U) ) (!  (=> ($generated@@42 $generated@@105 $generated@@107) ($generated@@104 $generated@@107 $generated@@106))
 :pattern ( ($generated@@42 $generated@@105 $generated@@107))
)))
 :pattern ( ($generated@@36 $generated@@44 $generated@@105 ($generated@@103 $generated@@106)))
)))
(assert  (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@108 $generated@@111 $generated@@112 $generated@@113 ($generated@@110 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@108 $generated@@118 $generated@@119 $generated@@120 ($generated@@110 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@108 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@108 $generated@@127 $generated@@128 $generated@@129 ($generated@@110 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@108 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@20 ($generated@@108 $generated@@37 $generated@@46 $generated@@16 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))  (=> (and (or (not (= $generated@@141 $generated@@136)) (not true)) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@137 $generated@@141) $generated@@138)))) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@139 $generated@@141) $generated@@140)))))
 :pattern ( ($generated@@108 $generated@@37 $generated@@46 $generated@@16 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))
)))
(assert ($generated@@91 $generated@@2))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (or ($generated@@52 ($generated@@98 $generated@@37 $generated@@143) ($generated@@98 $generated@@37 $generated@@144)) (and (< 0 $generated@@31) (and (and (or (not (= $generated@@143 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@143 $generated@@38)) ($generated@@36 $generated@@37 $generated@@144 $generated@@80)))) (= ($generated@@40 ($generated@@98 $generated@@37 $generated@@143) ($generated@@98 $generated@@37 $generated@@144)) ($generated@@98 $generated@@37 $generated@@144)))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@98 $generated@@37 $generated@@143) ($generated@@98 $generated@@37 $generated@@144)))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@145 ($generated@@50 $generated@@149 $generated@@146) $generated@@147 $generated@@148) ($generated@@39 $generated@@149 $generated@@146 $generated@@147 $generated@@148))
 :pattern ( ($generated@@145 ($generated@@50 $generated@@149 $generated@@146) $generated@@147 $generated@@148))
)))
(assert  (=> (< 1 $generated@@31) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and ($generated@@33 $generated@@150) (and (or (not (= $generated@@151 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@151 $generated@@87))) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@150 $generated@@151) $generated@@2)))) ($generated@@39 $generated@@37 ($generated@@41 $generated@@151) $generated@@38 $generated@@150))
 :pattern ( ($generated@@41 $generated@@151) ($generated@@43 $generated@@16 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@150 $generated@@151) $generated@@2)))
))))
(assert  (=> (< 1 $generated@@31) (forall (($generated@@152 T@U) ) (!  (=> (and (or (not (= $generated@@152 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@152 $generated@@87)) ($generated@@36 $generated@@37 ($generated@@41 $generated@@152) $generated@@38))
 :pattern ( ($generated@@41 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@104 $generated@@153 $generated@@81) (and (= ($generated@@50 $generated@@37 ($generated@@43 $generated@@37 $generated@@153)) $generated@@153) ($generated@@36 $generated@@37 ($generated@@43 $generated@@37 $generated@@153) $generated@@81)))
 :pattern ( ($generated@@104 $generated@@153 $generated@@81))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@104 $generated@@154 $generated@@80) (and (= ($generated@@50 $generated@@37 ($generated@@43 $generated@@37 $generated@@154)) $generated@@154) ($generated@@36 $generated@@37 ($generated@@43 $generated@@37 $generated@@154) $generated@@80)))
 :pattern ( ($generated@@104 $generated@@154 $generated@@80))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> ($generated@@104 $generated@@155 $generated@@84) (and (= ($generated@@50 $generated@@37 ($generated@@43 $generated@@37 $generated@@155)) $generated@@155) ($generated@@36 $generated@@37 ($generated@@43 $generated@@37 $generated@@155) $generated@@84)))
 :pattern ( ($generated@@104 $generated@@155 $generated@@84))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> ($generated@@104 $generated@@156 $generated@@51) (and (= ($generated@@50 $generated@@37 ($generated@@43 $generated@@37 $generated@@156)) $generated@@156) ($generated@@36 $generated@@37 ($generated@@43 $generated@@37 $generated@@156) $generated@@51)))
 :pattern ( ($generated@@104 $generated@@156 $generated@@51))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> ($generated@@104 $generated@@157 $generated@@38) (and (= ($generated@@50 $generated@@37 ($generated@@43 $generated@@37 $generated@@157)) $generated@@157) ($generated@@36 $generated@@37 ($generated@@43 $generated@@37 $generated@@157) $generated@@38)))
 :pattern ( ($generated@@104 $generated@@157 $generated@@38))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> ($generated@@104 $generated@@158 $generated@@87) (and (= ($generated@@50 $generated@@37 ($generated@@43 $generated@@37 $generated@@158)) $generated@@158) ($generated@@36 $generated@@37 ($generated@@43 $generated@@37 $generated@@158) $generated@@87)))
 :pattern ( ($generated@@104 $generated@@158 $generated@@87))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@159 $generated@@80)  (and ($generated@@36 $generated@@37 $generated@@159 $generated@@81) (or (not (= $generated@@159 $generated@@35)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@159 $generated@@80))
 :pattern ( ($generated@@36 $generated@@37 $generated@@159 $generated@@81))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@160 $generated@@38)  (and ($generated@@36 $generated@@37 $generated@@160 $generated@@84) (or (not (= $generated@@160 $generated@@35)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@160 $generated@@38))
 :pattern ( ($generated@@36 $generated@@37 $generated@@160 $generated@@84))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@161 $generated@@51)  (and ($generated@@36 $generated@@37 $generated@@161 $generated@@87) (or (not (= $generated@@161 $generated@@35)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@161 $generated@@51))
 :pattern ( ($generated@@36 $generated@@37 $generated@@161 $generated@@87))
)))
(assert  (=> (<= 3 $generated@@31) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (or ($generated@@163 $generated@@164 $generated@@165) (and (< 3 $generated@@31) (and ($generated@@33 $generated@@164) (and (or (not (= $generated@@165 $generated@@35)) (not true)) (and ($generated@@36 $generated@@37 $generated@@165 $generated@@51) ($generated@@39 $generated@@37 $generated@@165 $generated@@51 $generated@@164)))))) (and (=> ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@164 ($generated@@41 $generated@@165)) $generated@@49)) ($generated@@50 $generated@@37 $generated@@165)) ($generated@@34 $generated@@164 ($generated@@41 $generated@@165))) (= ($generated@@162 $generated@@164 $generated@@165)  (and ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@164 ($generated@@41 $generated@@165)) $generated@@49)) ($generated@@50 $generated@@37 $generated@@165)) ($generated@@32 $generated@@164 ($generated@@41 $generated@@165))))))
 :pattern ( ($generated@@162 $generated@@164 $generated@@165) ($generated@@33 $generated@@164))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (and (= ($generated@@166 ($generated@@90 $generated@@167 $generated@@168)) $generated@@167) (= ($generated@@79 ($generated@@90 $generated@@167 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@90 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> ($generated@@104 $generated@@169 $generated) (and (= ($generated@@50 $generated@@16 ($generated@@43 $generated@@16 $generated@@169)) $generated@@169) ($generated@@36 $generated@@16 ($generated@@43 $generated@@16 $generated@@169) $generated)))
 :pattern ( ($generated@@104 $generated@@169 $generated))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@T) ) (! (= ($generated@@104 ($generated@@50 $generated@@172 $generated@@170) $generated@@171) ($generated@@36 $generated@@172 $generated@@170 $generated@@171))
 :pattern ( ($generated@@104 ($generated@@50 $generated@@172 $generated@@170) $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@39 $generated@@44 $generated@@173 ($generated@@103 $generated@@174) $generated@@175) (forall (($generated@@176 T@U) ) (!  (=> ($generated@@42 $generated@@173 $generated@@176) ($generated@@145 $generated@@176 $generated@@174 $generated@@175))
 :pattern ( ($generated@@42 $generated@@173 $generated@@176))
)))
 :pattern ( ($generated@@39 $generated@@44 $generated@@173 ($generated@@103 $generated@@174) $generated@@175))
)))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (or ($generated@@52 $generated@@177 $generated@@178) (and (< 0 $generated@@31) (and (and (or (not (= $generated@@177 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@177 $generated@@38)) ($generated@@36 $generated@@37 $generated@@178 $generated@@80)))) (= ($generated@@40 $generated@@177 $generated@@178) $generated@@178))
 :pattern ( ($generated@@40 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ) (! ($generated@@36 $generated@@37 $generated@@179 $generated@@81)
 :pattern ( ($generated@@36 $generated@@37 $generated@@179 $generated@@81))
)))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (or ($generated@@52 $generated@@181 $generated@@182) (and (< 0 $generated@@31) (and (and (or (not (= $generated@@181 $generated@@35)) (not true)) ($generated@@39 $generated@@37 $generated@@181 $generated@@38 $generated@@180)) (and ($generated@@36 $generated@@37 $generated@@182 $generated@@80) ($generated@@39 $generated@@37 $generated@@182 $generated@@80 $generated@@180))))) ($generated@@33 $generated@@180)) ($generated@@39 $generated@@37 ($generated@@40 $generated@@181 $generated@@182) $generated@@80 $generated@@180))
 :pattern ( ($generated@@39 $generated@@37 ($generated@@40 $generated@@181 $generated@@182) $generated@@80 $generated@@180))
))))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@183 ($generated@@103 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@103 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@78 ($generated@@103 $generated@@185)) $generated@@1)
 :pattern ( ($generated@@103 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@T) ) (! (= ($generated@@43 $generated@@187 ($generated@@50 $generated@@187 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@50 $generated@@187 $generated@@186))
)))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (or ($generated@@52 $generated@@188 $generated@@189) (and (< 0 $generated@@31) (and (and (or (not (= $generated@@188 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@188 $generated@@38)) ($generated@@36 $generated@@37 $generated@@189 $generated@@80)))) ($generated@@36 $generated@@37 ($generated@@40 $generated@@188 $generated@@189) $generated@@80))
 :pattern ( ($generated@@40 $generated@@188 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@104 $generated@@190 ($generated@@103 $generated@@191)) (and (= ($generated@@50 $generated@@44 ($generated@@43 $generated@@44 $generated@@190)) $generated@@190) ($generated@@36 $generated@@44 ($generated@@43 $generated@@44 $generated@@190) ($generated@@103 $generated@@191))))
 :pattern ( ($generated@@104 $generated@@190 ($generated@@103 $generated@@191)))
)))
(assert (= ($generated@@78 $generated@@81) $generated@@4))
(assert (= ($generated@@192 $generated@@81) $generated@@11))
(assert (= ($generated@@78 $generated@@80) $generated@@5))
(assert (= ($generated@@192 $generated@@80) $generated@@11))
(assert (= ($generated@@78 $generated@@84) $generated@@7))
(assert (= ($generated@@192 $generated@@84) $generated@@12))
(assert (= ($generated@@78 $generated@@51) $generated@@8))
(assert (= ($generated@@192 $generated@@51) $generated@@13))
(assert (= ($generated@@78 $generated@@38) $generated@@9))
(assert (= ($generated@@192 $generated@@38) $generated@@12))
(assert (= ($generated@@78 $generated@@87) $generated@@10))
(assert (= ($generated@@192 $generated@@87) $generated@@13))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@195 $generated@@84)  (or (= $generated@@195 $generated@@35) ($generated@@193 ($generated@@194 $generated@@195))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@195 $generated@@84))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@197 $generated@@87)  (or (= $generated@@197 $generated@@35) ($generated@@196 ($generated@@194 $generated@@197))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@197 $generated@@87))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and ($generated@@33 $generated@@198) (and (or (not (= $generated@@199 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@199 $generated@@84))) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@198 $generated@@199) $generated@@2)))) ($generated@@39 $generated@@44 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@198 $generated@@199) $generated@@49)) ($generated@@103 $generated@@51) $generated@@198))
 :pattern ( ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@198 $generated@@199) $generated@@49)))
)))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (or ($generated@@52 $generated@@200 ($generated@@98 $generated@@37 $generated@@201)) (and (< 0 $generated@@31) (and (and (or (not (= $generated@@200 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@200 $generated@@38)) ($generated@@36 $generated@@37 $generated@@201 $generated@@80)))) (= ($generated@@40 $generated@@200 ($generated@@98 $generated@@37 $generated@@201)) ($generated@@98 $generated@@37 $generated@@201)))
 :weight 3
 :pattern ( ($generated@@40 $generated@@200 ($generated@@98 $generated@@37 $generated@@201)))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@T) ) (! (= ($generated@@50 $generated@@203 ($generated@@98 $generated@@203 $generated@@202)) ($generated@@98 $generated@@47 ($generated@@50 $generated@@203 $generated@@202)))
 :pattern ( ($generated@@50 $generated@@203 ($generated@@98 $generated@@203 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and ($generated@@33 $generated@@204) (and (or (not (= $generated@@205 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@205 $generated@@84))) ($generated@@36 $generated@@44 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@204 $generated@@205) $generated@@49)) ($generated@@103 $generated@@51)))
 :pattern ( ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@204 $generated@@205) $generated@@49)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! ($generated@@39 $generated@@16 $generated@@207 $generated $generated@@206)
 :pattern ( ($generated@@39 $generated@@16 $generated@@207 $generated $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! ($generated@@36 $generated@@16 $generated@@208 $generated)
 :pattern ( ($generated@@36 $generated@@16 $generated@@208 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () Bool)
(declare-fun $generated@@212 () Bool)
(declare-fun $generated@@213 () Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@216  (=> (= ($generated@@162 $generated@@209 $generated@@210)  (and ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@209 ($generated@@41 $generated@@210)) $generated@@49)) ($generated@@50 $generated@@37 $generated@@210)) ($generated@@32 $generated@@209 ($generated@@41 $generated@@210)))) (=> (and (=> ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@209 ($generated@@41 $generated@@210)) $generated@@49)) ($generated@@50 $generated@@37 $generated@@210)) ($generated@@34 $generated@@209 ($generated@@41 $generated@@210))) ($generated@@36 $generated@@16 ($generated@@19 ($generated@@162 $generated@@209 $generated@@210)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@211) (=> $generated@@211 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@212)))))))
(let (($generated@@217  (=> (not ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@209 ($generated@@41 $generated@@210)) $generated@@49)) ($generated@@50 $generated@@37 $generated@@210))) (=> (and (= $generated@@212 true) (= (ControlFlow 0 7) 3)) $generated@@216))))
(let (($generated@@218  (=> ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@209 ($generated@@41 $generated@@210)) $generated@@49)) ($generated@@50 $generated@@37 $generated@@210)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= ($generated@@41 $generated@@210) $generated@@35)) (not true))) (=> (or (not (= ($generated@@41 $generated@@210) $generated@@35)) (not true)) (=> ($generated@@145 ($generated@@50 $generated@@37 ($generated@@41 $generated@@210)) $generated@@84 $generated@@209) (=> (and (and (= $generated@@213 (forall (($generated@@219 T@U) ($generated@@220 T@U) )  (=> (and (and (or (not (= $generated@@219 $generated@@35)) (not true)) ($generated@@20 ($generated@@43 $generated@@16 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@209 $generated@@219) $generated@@2)))) (or (= $generated@@219 ($generated@@41 $generated@@210)) ($generated@@42 ($generated@@43 $generated@@44 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@37 ($generated@@48 $generated@@46 $generated@@47) $generated@@209 ($generated@@41 $generated@@210)) $generated@@49)) ($generated@@50 $generated@@37 $generated@@219)))) ($generated@@20 ($generated@@108 $generated@@37 $generated@@46 $generated@@16 $generated@@214 $generated@@219 $generated@@220))))) ($generated@@34 $generated@@209 ($generated@@41 $generated@@210))) (and (= $generated@@212 $generated@@213) (= (ControlFlow 0 5) 3))) $generated@@216)))))))
(let (($generated@@221  (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= ($generated@@41 $generated@@210) $generated@@35)) (not true))) (=> (or (not (= ($generated@@41 $generated@@210) $generated@@35)) (not true)) (=> (= $generated@@211 ($generated@@20 ($generated@@108 $generated@@37 $generated@@46 $generated@@16 $generated@@214 ($generated@@41 $generated@@210) $generated@@49))) (and (=> (= (ControlFlow 0 8) 5) $generated@@218) (=> (= (ControlFlow 0 8) 7) $generated@@217)))))))
(let (($generated@@222 true))
(let (($generated@@223  (=> (= $generated@@214 ($generated@@109 $generated@@35 $generated@@209 $generated@@2 $generated@@209 $generated@@2)) (and (=> (= (ControlFlow 0 10) 1) $generated@@222) (=> (= (ControlFlow 0 10) 8) $generated@@221)))))
(let (($generated@@224  (=> (and ($generated@@33 $generated@@209) ($generated@@215 $generated@@209)) (=> (and (and (or (not (= $generated@@210 $generated@@35)) (not true)) (and ($generated@@36 $generated@@37 $generated@@210 $generated@@51) ($generated@@39 $generated@@37 $generated@@210 $generated@@51 $generated@@209))) (and (= 3 $generated@@31) (= (ControlFlow 0 11) 10))) $generated@@223))))
$generated@@224))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
