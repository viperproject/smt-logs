(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 (T@T) Int)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 (Bool) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (Int) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (Real) T@U)
(declare-fun $generated@@27 (T@U) Real)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@100 () T@U)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@113 (T@T T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@119 (T@U T@U) Bool)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@223 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@18 $generated@@19) 0) (= ($generated@@18 $generated@@20) 1)) (= ($generated@@18 $generated@@21) 2)) (forall (($generated@@28 Bool) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Int) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 Real) ) (! (= ($generated@@27 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17)
)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@18 $generated@@40) 3) (= ($generated@@18 $generated@@47) 4)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@48 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@48 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@48 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@18 $generated@@49) 5)) (= ($generated@@18 $generated@@50) 6)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@18 ($generated@@51 $generated@@70 $generated@@71)) 7))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@51 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@51 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@51 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@51 $generated@@74 $generated@@75))
))))
(assert  (=> (<= 2 $generated@@34) (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@37 $generated@@76 $generated@@77) (and (< 2 $generated@@34) (and ($generated@@36 $generated@@76) (and (or (not (= $generated@@77 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@77 $generated@@41) ($generated@@42 $generated@@40 $generated@@77 $generated@@41 $generated@@76)))))) (and (forall (($generated@@78 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@78 $generated@@54) (=> ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@52)) ($generated@@53 $generated@@40 $generated@@78)) (=> (= ($generated@@44 $generated@@78) $generated@@77) ($generated@@55 $generated@@77 $generated@@78))))
 :pattern ( ($generated@@43 $generated@@77 $generated@@78))
 :pattern ( ($generated@@44 $generated@@78))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@52)) ($generated@@53 $generated@@40 $generated@@78)))
)) (= ($generated@@35 $generated@@76 $generated@@77) (forall (($generated@@79 T@U) ) (!  (=> (and ($generated@@39 $generated@@40 $generated@@79 $generated@@54) ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@52)) ($generated@@53 $generated@@40 $generated@@79))) (and (= ($generated@@44 $generated@@79) $generated@@77) (or (not (= ($generated@@43 $generated@@77 $generated@@79) $generated@@77)) (not true))))
 :pattern ( ($generated@@43 $generated@@77 $generated@@79))
 :pattern ( ($generated@@44 $generated@@79))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@52)) ($generated@@53 $generated@@40 $generated@@79)))
)))))
 :pattern ( ($generated@@35 $generated@@76 $generated@@77) ($generated@@36 $generated@@76))
))))
(assert (= ($generated@@80 $generated@@2) 0))
(assert (= ($generated@@81 $generated) $generated@@0))
(assert (= ($generated@@82 $generated@@2) $generated@@3))
(assert ($generated@@83 $generated@@84))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@86 $generated@@84)  (or (= $generated@@86 $generated@@38) (= ($generated@@85 $generated@@86) $generated@@84)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@86 $generated@@84))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and ($generated@@87 $generated@@89 $generated@@84 $generated@@90) ($generated@@36 $generated@@90)) ($generated@@87 $generated@@89 $generated@@88 $generated@@90))
 :pattern ( ($generated@@87 $generated@@89 $generated@@84 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@93 $generated@@91 $generated@@94) ($generated@@42 $generated@@40 $generated@@93 $generated@@92 $generated@@94))
 :pattern ( ($generated@@42 $generated@@40 $generated@@93 $generated@@91 $generated@@94))
 :pattern ( ($generated@@42 $generated@@40 $generated@@93 $generated@@92 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@96 $generated@@41 $generated@@97) ($generated@@42 $generated@@40 $generated@@96 $generated@@95 $generated@@97))
 :pattern ( ($generated@@42 $generated@@40 $generated@@96 $generated@@41 $generated@@97))
 :pattern ( ($generated@@42 $generated@@40 $generated@@96 $generated@@95 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@98 $generated@@54 $generated@@99) ($generated@@42 $generated@@40 $generated@@98 $generated@@88 $generated@@99))
 :pattern ( ($generated@@42 $generated@@40 $generated@@98 $generated@@54 $generated@@99))
 :pattern ( ($generated@@42 $generated@@40 $generated@@98 $generated@@88 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@101 $generated@@100 $generated@@102) ($generated@@42 $generated@@40 $generated@@101 $generated@@84 $generated@@102))
 :pattern ( ($generated@@42 $generated@@40 $generated@@101 $generated@@100 $generated@@102))
 :pattern ( ($generated@@42 $generated@@40 $generated@@101 $generated@@84 $generated@@102))
)))
(assert (= ($generated@@80 $generated@@52) 0))
(assert (= ($generated@@103 $generated@@6 $generated@@17) $generated@@52))
(assert ($generated@@104 $generated@@52))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@105 $generated@@92 $generated@@106)  (or (= $generated@@105 $generated@@38) ($generated@@23 ($generated@@46 $generated@@19 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@106 $generated@@105) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@105 $generated@@92 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@107 $generated@@95 $generated@@108)  (or (= $generated@@107 $generated@@38) ($generated@@23 ($generated@@46 $generated@@19 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@108 $generated@@107) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@107 $generated@@95 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@109 $generated@@88 $generated@@110)  (or (= $generated@@109 $generated@@38) ($generated@@23 ($generated@@46 $generated@@19 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@110 $generated@@109) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@109 $generated@@88 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@111 $generated@@84 $generated@@112)  (or (= $generated@@111 $generated@@38) ($generated@@23 ($generated@@46 $generated@@19 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@112 $generated@@111) $generated@@2)))))
 :pattern ( ($generated@@42 $generated@@40 $generated@@111 $generated@@84 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@113 $generated@@115 $generated@@114) $generated@@114)
 :pattern ( ($generated@@113 $generated@@115 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@53 $generated@@117 ($generated@@46 $generated@@117 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@46 $generated@@117 $generated@@116))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@39 $generated@@47 $generated@@120 ($generated@@118 $generated@@121)) (forall (($generated@@122 T@U) ) (!  (=> ($generated@@45 $generated@@120 $generated@@122) ($generated@@119 $generated@@122 $generated@@121))
 :pattern ( ($generated@@45 $generated@@120 $generated@@122))
)))
 :pattern ( ($generated@@39 $generated@@47 $generated@@120 ($generated@@118 $generated@@121)))
)))
(assert  (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@123 $generated@@126 $generated@@127 $generated@@128 ($generated@@125 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@123 $generated@@133 $generated@@134 $generated@@135 ($generated@@125 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@123 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@123 $generated@@142 $generated@@143 $generated@@144 ($generated@@125 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@123 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@23 ($generated@@123 $generated@@40 $generated@@49 $generated@@19 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@156 $generated@@157))  (=> (and (or (not (= $generated@@156 $generated@@151)) (not true)) ($generated@@23 ($generated@@46 $generated@@19 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@152 $generated@@156) $generated@@153)))) ($generated@@23 ($generated@@46 $generated@@19 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@154 $generated@@156) $generated@@155)))))
 :pattern ( ($generated@@123 $generated@@40 $generated@@49 $generated@@19 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@156 $generated@@157))
)))
(assert ($generated@@104 $generated@@2))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or ($generated@@55 ($generated@@113 $generated@@40 $generated@@158) ($generated@@113 $generated@@40 $generated@@159)) (and (< 0 $generated@@34) (and (and (or (not (= $generated@@158 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@158 $generated@@41)) ($generated@@39 $generated@@40 $generated@@159 $generated@@91)))) (= ($generated@@43 ($generated@@113 $generated@@40 $generated@@158) ($generated@@113 $generated@@40 $generated@@159)) ($generated@@113 $generated@@40 $generated@@159)))
 :weight 3
 :pattern ( ($generated@@43 ($generated@@113 $generated@@40 $generated@@158) ($generated@@113 $generated@@40 $generated@@159)))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@87 ($generated@@53 $generated@@163 $generated@@160) $generated@@161 $generated@@162) ($generated@@42 $generated@@163 $generated@@160 $generated@@161 $generated@@162))
 :pattern ( ($generated@@87 ($generated@@53 $generated@@163 $generated@@160) $generated@@161 $generated@@162))
)))
(assert  (=> (< 1 $generated@@34) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@164) (and (or (not (= $generated@@165 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@165 $generated@@88))) ($generated@@23 ($generated@@46 $generated@@19 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@164 $generated@@165) $generated@@2)))) ($generated@@42 $generated@@40 ($generated@@44 $generated@@165) $generated@@41 $generated@@164))
 :pattern ( ($generated@@44 $generated@@165) ($generated@@46 $generated@@19 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@164 $generated@@165) $generated@@2)))
))))
(assert  (=> (< 1 $generated@@34) (forall (($generated@@166 T@U) ) (!  (=> (and (or (not (= $generated@@166 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@166 $generated@@88)) ($generated@@39 $generated@@40 ($generated@@44 $generated@@166) $generated@@41))
 :pattern ( ($generated@@44 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ) (!  (=> ($generated@@119 $generated@@167 $generated@@92) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@167)) $generated@@167) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@167) $generated@@92)))
 :pattern ( ($generated@@119 $generated@@167 $generated@@92))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> ($generated@@119 $generated@@168 $generated@@91) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@168)) $generated@@168) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@168) $generated@@91)))
 :pattern ( ($generated@@119 $generated@@168 $generated@@91))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> ($generated@@119 $generated@@169 $generated@@95) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@169)) $generated@@169) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@169) $generated@@95)))
 :pattern ( ($generated@@119 $generated@@169 $generated@@95))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> ($generated@@119 $generated@@170 $generated@@54) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@170)) $generated@@170) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@170) $generated@@54)))
 :pattern ( ($generated@@119 $generated@@170 $generated@@54))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> ($generated@@119 $generated@@171 $generated@@41) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@171)) $generated@@171) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@171) $generated@@41)))
 :pattern ( ($generated@@119 $generated@@171 $generated@@41))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> ($generated@@119 $generated@@172 $generated@@88) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@172)) $generated@@172) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@172) $generated@@88)))
 :pattern ( ($generated@@119 $generated@@172 $generated@@88))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> ($generated@@119 $generated@@173 $generated@@84) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@173)) $generated@@173) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@173) $generated@@84)))
 :pattern ( ($generated@@119 $generated@@173 $generated@@84))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> ($generated@@119 $generated@@174 $generated@@100) (and (= ($generated@@53 $generated@@40 ($generated@@46 $generated@@40 $generated@@174)) $generated@@174) ($generated@@39 $generated@@40 ($generated@@46 $generated@@40 $generated@@174) $generated@@100)))
 :pattern ( ($generated@@119 $generated@@174 $generated@@100))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@175 $generated@@91)  (and ($generated@@39 $generated@@40 $generated@@175 $generated@@92) (or (not (= $generated@@175 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@175 $generated@@91))
 :pattern ( ($generated@@39 $generated@@40 $generated@@175 $generated@@92))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@176 $generated@@41)  (and ($generated@@39 $generated@@40 $generated@@176 $generated@@95) (or (not (= $generated@@176 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@176 $generated@@41))
 :pattern ( ($generated@@39 $generated@@40 $generated@@176 $generated@@95))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@177 $generated@@54)  (and ($generated@@39 $generated@@40 $generated@@177 $generated@@88) (or (not (= $generated@@177 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@177 $generated@@54))
 :pattern ( ($generated@@39 $generated@@40 $generated@@177 $generated@@88))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@178 $generated@@100)  (and ($generated@@39 $generated@@40 $generated@@178 $generated@@84) (or (not (= $generated@@178 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@178 $generated@@100))
 :pattern ( ($generated@@39 $generated@@40 $generated@@178 $generated@@84))
)))
(assert  (=> (<= 3 $generated@@34) (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (or ($generated@@180 $generated@@181 $generated@@182) (and (< 3 $generated@@34) (and ($generated@@36 $generated@@181) (and (or (not (= $generated@@182 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@182 $generated@@54) ($generated@@42 $generated@@40 $generated@@182 $generated@@54 $generated@@181)))))) (and (=> ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@181 ($generated@@44 $generated@@182)) $generated@@52)) ($generated@@53 $generated@@40 $generated@@182)) ($generated@@37 $generated@@181 ($generated@@44 $generated@@182))) (= ($generated@@179 $generated@@181 $generated@@182)  (and ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@181 ($generated@@44 $generated@@182)) $generated@@52)) ($generated@@53 $generated@@40 $generated@@182)) ($generated@@35 $generated@@181 ($generated@@44 $generated@@182))))))
 :pattern ( ($generated@@179 $generated@@181 $generated@@182) ($generated@@36 $generated@@181))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@42 $generated@@40 $generated@@183 $generated@@84 $generated@@184) ($generated@@42 $generated@@40 $generated@@183 $generated@@88 $generated@@184))
 :pattern ( ($generated@@42 $generated@@40 $generated@@183 $generated@@84 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (and (= ($generated@@185 ($generated@@103 $generated@@186 $generated@@187)) $generated@@186) (= ($generated@@82 ($generated@@103 $generated@@186 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@103 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> ($generated@@119 $generated@@188 $generated) (and (= ($generated@@53 $generated@@19 ($generated@@46 $generated@@19 $generated@@188)) $generated@@188) ($generated@@39 $generated@@19 ($generated@@46 $generated@@19 $generated@@188) $generated)))
 :pattern ( ($generated@@119 $generated@@188 $generated))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@T) ) (! (= ($generated@@119 ($generated@@53 $generated@@191 $generated@@189) $generated@@190) ($generated@@39 $generated@@191 $generated@@189 $generated@@190))
 :pattern ( ($generated@@119 ($generated@@53 $generated@@191 $generated@@189) $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@42 $generated@@47 $generated@@192 ($generated@@118 $generated@@193) $generated@@194) (forall (($generated@@195 T@U) ) (!  (=> ($generated@@45 $generated@@192 $generated@@195) ($generated@@87 $generated@@195 $generated@@193 $generated@@194))
 :pattern ( ($generated@@45 $generated@@192 $generated@@195))
)))
 :pattern ( ($generated@@42 $generated@@47 $generated@@192 ($generated@@118 $generated@@193) $generated@@194))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (or ($generated@@55 $generated@@196 $generated@@197) (and (< 0 $generated@@34) (and (and (or (not (= $generated@@196 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@196 $generated@@41)) ($generated@@39 $generated@@40 $generated@@197 $generated@@91)))) (= ($generated@@43 $generated@@196 $generated@@197) $generated@@197))
 :pattern ( ($generated@@43 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ) (! ($generated@@39 $generated@@40 $generated@@198 $generated@@92)
 :pattern ( ($generated@@39 $generated@@40 $generated@@198 $generated@@92))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (or ($generated@@55 $generated@@200 $generated@@201) (and (< 0 $generated@@34) (and (and (or (not (= $generated@@200 $generated@@38)) (not true)) ($generated@@42 $generated@@40 $generated@@200 $generated@@41 $generated@@199)) (and ($generated@@39 $generated@@40 $generated@@201 $generated@@91) ($generated@@42 $generated@@40 $generated@@201 $generated@@91 $generated@@199))))) ($generated@@36 $generated@@199)) ($generated@@42 $generated@@40 ($generated@@43 $generated@@200 $generated@@201) $generated@@91 $generated@@199))
 :pattern ( ($generated@@42 $generated@@40 ($generated@@43 $generated@@200 $generated@@201) $generated@@91 $generated@@199))
))))
(assert (forall (($generated@@203 T@U) ) (! (= ($generated@@202 ($generated@@118 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@118 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ) (! (= ($generated@@81 ($generated@@118 $generated@@204)) $generated@@1)
 :pattern ( ($generated@@118 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@T) ) (! (= ($generated@@46 $generated@@206 ($generated@@53 $generated@@206 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@53 $generated@@206 $generated@@205))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (or ($generated@@55 $generated@@207 $generated@@208) (and (< 0 $generated@@34) (and (and (or (not (= $generated@@207 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@207 $generated@@41)) ($generated@@39 $generated@@40 $generated@@208 $generated@@91)))) ($generated@@39 $generated@@40 ($generated@@43 $generated@@207 $generated@@208) $generated@@91))
 :pattern ( ($generated@@43 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@119 $generated@@209 ($generated@@118 $generated@@210)) (and (= ($generated@@53 $generated@@47 ($generated@@46 $generated@@47 $generated@@209)) $generated@@209) ($generated@@39 $generated@@47 ($generated@@46 $generated@@47 $generated@@209) ($generated@@118 $generated@@210))))
 :pattern ( ($generated@@119 $generated@@209 ($generated@@118 $generated@@210)))
)))
(assert (forall (($generated@@211 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@211 $generated@@84) ($generated@@39 $generated@@40 $generated@@211 $generated@@88))
 :pattern ( ($generated@@39 $generated@@40 $generated@@211 $generated@@84))
)))
(assert (forall (($generated@@212 T@U) ) (!  (=> ($generated@@119 $generated@@212 $generated@@84) ($generated@@119 $generated@@212 $generated@@88))
 :pattern ( ($generated@@119 $generated@@212 $generated@@84))
)))
(assert (= ($generated@@81 $generated@@92) $generated@@4))
(assert (= ($generated@@213 $generated@@92) $generated@@13))
(assert (= ($generated@@81 $generated@@91) $generated@@5))
(assert (= ($generated@@213 $generated@@91) $generated@@13))
(assert (= ($generated@@81 $generated@@95) $generated@@7))
(assert (= ($generated@@213 $generated@@95) $generated@@14))
(assert (= ($generated@@81 $generated@@54) $generated@@8))
(assert (= ($generated@@213 $generated@@54) $generated@@15))
(assert (= ($generated@@81 $generated@@41) $generated@@9))
(assert (= ($generated@@213 $generated@@41) $generated@@14))
(assert (= ($generated@@81 $generated@@88) $generated@@10))
(assert (= ($generated@@213 $generated@@88) $generated@@15))
(assert (= ($generated@@81 $generated@@84) $generated@@11))
(assert (= ($generated@@213 $generated@@84) $generated@@16))
(assert (= ($generated@@81 $generated@@100) $generated@@12))
(assert (= ($generated@@213 $generated@@100) $generated@@16))
(assert (forall (($generated@@215 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@215 $generated@@95)  (or (= $generated@@215 $generated@@38) ($generated@@214 ($generated@@85 $generated@@215))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@215 $generated@@95))
)))
(assert (forall (($generated@@216 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@216 $generated@@88)  (or (= $generated@@216 $generated@@38) ($generated@@83 ($generated@@85 $generated@@216))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@216 $generated@@88))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@217) (and (or (not (= $generated@@218 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@218 $generated@@95))) ($generated@@23 ($generated@@46 $generated@@19 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@217 $generated@@218) $generated@@2)))) ($generated@@42 $generated@@47 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@217 $generated@@218) $generated@@52)) ($generated@@118 $generated@@54) $generated@@217))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@217 $generated@@218) $generated@@52)))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (or ($generated@@55 $generated@@219 ($generated@@113 $generated@@40 $generated@@220)) (and (< 0 $generated@@34) (and (and (or (not (= $generated@@219 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@219 $generated@@41)) ($generated@@39 $generated@@40 $generated@@220 $generated@@91)))) (= ($generated@@43 $generated@@219 ($generated@@113 $generated@@40 $generated@@220)) ($generated@@113 $generated@@40 $generated@@220)))
 :weight 3
 :pattern ( ($generated@@43 $generated@@219 ($generated@@113 $generated@@40 $generated@@220)))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@T) ) (! (= ($generated@@53 $generated@@222 ($generated@@113 $generated@@222 $generated@@221)) ($generated@@113 $generated@@50 ($generated@@53 $generated@@222 $generated@@221)))
 :pattern ( ($generated@@53 $generated@@222 ($generated@@113 $generated@@222 $generated@@221)))
)))
(assert  (=> (<= 4 $generated@@34) (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (or ($generated@@224 $generated@@225 $generated@@226) (and (< 4 $generated@@34) (and ($generated@@36 $generated@@225) (and (or (not (= $generated@@226 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@226 $generated@@100) ($generated@@42 $generated@@40 $generated@@226 $generated@@100 $generated@@225)))))) (and (=> ($generated@@23 ($generated@@113 $generated@@19 ($generated@@22 true))) ($generated@@180 $generated@@225 $generated@@226)) (= ($generated@@223 $generated@@225 $generated@@226)  (and true ($generated@@179 $generated@@225 $generated@@226)))))
 :pattern ( ($generated@@223 $generated@@225 $generated@@226) ($generated@@36 $generated@@225))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and ($generated@@36 $generated@@227) (and (or (not (= $generated@@228 $generated@@38)) (not true)) ($generated@@39 $generated@@40 $generated@@228 $generated@@95))) ($generated@@39 $generated@@47 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@227 $generated@@228) $generated@@52)) ($generated@@118 $generated@@54)))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@227 $generated@@228) $generated@@52)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! ($generated@@42 $generated@@19 $generated@@230 $generated $generated@@229)
 :pattern ( ($generated@@42 $generated@@19 $generated@@230 $generated $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! ($generated@@39 $generated@@19 $generated@@231 $generated)
 :pattern ( ($generated@@39 $generated@@19 $generated@@231 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () Bool)
(declare-fun $generated@@235 () Bool)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@238  (=> (and (and (= ($generated@@223 $generated@@232 $generated@@233)  (and true ($generated@@179 $generated@@232 $generated@@233))) (=> ($generated@@23 ($generated@@113 $generated@@19 ($generated@@22 true))) ($generated@@180 $generated@@232 $generated@@233))) (and ($generated@@39 $generated@@19 ($generated@@22 ($generated@@223 $generated@@232 $generated@@233)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@234)))
(let (($generated@@239  (=> (not ($generated@@23 ($generated@@113 $generated@@19 ($generated@@22 true)))) (=> (and (= $generated@@234 true) (= (ControlFlow 0 5) 3)) $generated@@238))))
(let (($generated@@240  (=> (and ($generated@@23 ($generated@@113 $generated@@19 ($generated@@22 true))) ($generated@@87 ($generated@@53 $generated@@40 $generated@@233) $generated@@88 $generated@@232)) (=> (and (and (= $generated@@235 (forall (($generated@@241 T@U) ($generated@@242 T@U) )  (=> (and (and (or (not (= $generated@@241 $generated@@38)) (not true)) ($generated@@23 ($generated@@46 $generated@@19 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@232 $generated@@241) $generated@@2)))) ($generated@@23 ($generated@@46 $generated@@19 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@40 ($generated@@51 $generated@@49 $generated@@50) $generated@@232 $generated@@241) $generated@@2)))) ($generated@@23 ($generated@@123 $generated@@40 $generated@@49 $generated@@19 $generated@@236 $generated@@241 $generated@@242))))) ($generated@@180 $generated@@232 $generated@@233)) (and (= $generated@@234 $generated@@235) (= (ControlFlow 0 4) 3))) $generated@@238))))
(let (($generated@@243 true))
(let (($generated@@244  (=> (= $generated@@236 ($generated@@124 $generated@@38 $generated@@232 $generated@@2 $generated@@232 $generated@@2)) (and (and (=> (= (ControlFlow 0 6) 1) $generated@@243) (=> (= (ControlFlow 0 6) 4) $generated@@240)) (=> (= (ControlFlow 0 6) 5) $generated@@239)))))
(let (($generated@@245  (=> (and ($generated@@36 $generated@@232) ($generated@@237 $generated@@232)) (=> (and (and (or (not (= $generated@@233 $generated@@38)) (not true)) (and ($generated@@39 $generated@@40 $generated@@233 $generated@@100) ($generated@@42 $generated@@40 $generated@@233 $generated@@100 $generated@@232))) (and (= 4 $generated@@34) (= (ControlFlow 0 7) 6))) $generated@@244))))
$generated@@245)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
