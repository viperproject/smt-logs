(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 (T@T) Int)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 (Bool) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (Int) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (Real) T@U)
(declare-fun $generated@@27 (T@U) Real)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@46 (T@U Int) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@49 (T@U) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@U) Int)
(declare-fun $generated@@55 (T@U) Int)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@66 (Int Int) T@U)
(declare-fun $generated@@71 (Int) Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 () Int)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Int)
(declare-fun $generated@@148 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@152 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@154 (T@T T@T) T@T)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@209 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@18 $generated@@19) 0) (= ($generated@@18 $generated@@20) 1)) (= ($generated@@18 $generated@@21) 2)) (forall (($generated@@28 Bool) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Int) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 Real) ) (! (= ($generated@@27 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17)
)
(assert (= ($generated@@34 $generated) $generated@@1))
(assert (= ($generated@@34 $generated@@0) $generated@@2))
(assert (= ($generated@@18 $generated@@36) 3))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@35 $generated@@36 ($generated@@37 $generated@@41 $generated@@42) $generated@@38)  (and ($generated@@35 $generated@@36 $generated@@41 $generated@@39) ($generated@@35 $generated@@36 $generated@@42 $generated@@40)))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@37 $generated@@41 $generated@@42) $generated@@38))
)))
(assert (forall (($generated@@45 T@U) ) (!  (=> ($generated@@43 $generated@@45) ($generated@@44 $generated@@45))
 :pattern ( ($generated@@43 $generated@@45))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 Int) ) (!  (=> (and (<= 0 $generated@@52) (< $generated@@52 ($generated@@48 $generated@@51))) (< ($generated@@49 ($generated@@50 $generated@@36 ($generated@@46 $generated@@51 $generated@@52))) ($generated@@49 ($generated@@47 $generated@@51))))
 :pattern ( ($generated@@46 $generated@@51 $generated@@52) ($generated@@47 $generated@@51))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@53 $generated@@56 $generated@@57)  (and (= ($generated@@54 $generated@@56) ($generated@@54 $generated@@57)) (= ($generated@@55 $generated@@56) ($generated@@55 $generated@@57))))
 :pattern ( ($generated@@53 $generated@@56 $generated@@57))
)))
(assert (= ($generated@@48 $generated@@58) 0))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@35 $generated@@36 $generated@@60 $generated@@59) ($generated@@44 $generated@@60))
 :pattern ( ($generated@@44 $generated@@60) ($generated@@35 $generated@@36 $generated@@60 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@35 $generated@@36 $generated@@62 $generated@@38) ($generated@@61 $generated@@62))
 :pattern ( ($generated@@61 $generated@@62) ($generated@@35 $generated@@36 $generated@@62 $generated@@38))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@35 $generated@@36 $generated@@65 $generated@@64) ($generated@@63 $generated@@65))
 :pattern ( ($generated@@63 $generated@@65) ($generated@@35 $generated@@36 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@67 Int) ($generated@@68 Int) ) (! (= ($generated@@35 $generated@@36 ($generated@@66 $generated@@67 $generated@@68) $generated@@59)  (and ($generated@@35 $generated@@20 ($generated@@24 $generated@@67) $generated@@0) ($generated@@35 $generated@@20 ($generated@@24 $generated@@68) $generated@@0)))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@66 $generated@@67 $generated@@68) $generated@@59))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@53 $generated@@69 $generated@@70) (= $generated@@69 $generated@@70))
 :pattern ( ($generated@@53 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@44 $generated@@77) (= ($generated@@76 $generated@@77) $generated@@9))
 :pattern ( ($generated@@44 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@61 $generated@@78) (= ($generated@@76 $generated@@78) $generated@@11))
 :pattern ( ($generated@@61 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@63 $generated@@79) (= ($generated@@76 $generated@@79) $generated@@12))
 :pattern ( ($generated@@63 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@80 $generated@@40)  (and ($generated@@35 $generated@@36 $generated@@80 $generated@@59) (and (and (<= ($generated@@71 0) ($generated@@54 $generated@@80)) (< ($generated@@54 $generated@@80) 8)) (and (<= ($generated@@71 0) ($generated@@55 $generated@@80)) (< ($generated@@55 $generated@@80) 8)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@80 $generated@@40))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@50 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@50 $generated@@83 $generated@@82))
)))
(assert (= ($generated@@18 $generated@@88) 4))
(assert  (=> (<= 0 $generated@@84) (forall (($generated@@90 T@U) ) (!  (=> (or ($generated@@86 ($generated@@73 $generated@@36 $generated@@90)) (and (< 0 $generated@@84) ($generated@@35 $generated@@36 $generated@@90 $generated@@64))) (and (forall (($generated@@91 Int) ($generated@@92 Int) ) (!  (=> (and (<= ($generated@@71 0) $generated@@91) (<= ($generated@@71 0) $generated@@92)) (=> (<= ($generated@@71 0) $generated@@91) (=> (< $generated@@91 $generated@@92) (and ($generated@@63 ($generated@@73 $generated@@36 $generated@@90)) (=> (< $generated@@92 ($generated@@48 ($generated@@73 $generated@@88 ($generated@@87 ($generated@@73 $generated@@36 $generated@@90))))) (and (and ($generated@@43 ($generated@@89 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@73 $generated@@88 ($generated@@87 ($generated@@73 $generated@@36 $generated@@90))) $generated@@91)))) ($generated@@43 ($generated@@89 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@73 $generated@@88 ($generated@@87 ($generated@@73 $generated@@36 $generated@@90))) $generated@@92))))) (and (and ($generated@@63 ($generated@@73 $generated@@36 $generated@@90)) ($generated@@61 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@73 $generated@@88 ($generated@@87 ($generated@@73 $generated@@36 $generated@@90))) $generated@@91)))) (and ($generated@@63 ($generated@@73 $generated@@36 $generated@@90)) ($generated@@61 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@73 $generated@@88 ($generated@@87 ($generated@@73 $generated@@36 $generated@@90))) $generated@@92)))))))))))
 :pattern ( ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@90) $generated@@92)) ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@90) $generated@@91)))
)) (= ($generated@@85 ($generated@@73 $generated@@36 $generated@@90)) (forall (($generated@@93 Int) ($generated@@94 Int) ) (!  (=> (and (<= ($generated@@71 0) $generated@@93) (<= ($generated@@71 0) $generated@@94)) (=> (and (and (<= ($generated@@71 0) $generated@@93) (< $generated@@93 $generated@@94)) (< $generated@@94 ($generated@@48 ($generated@@73 $generated@@88 ($generated@@87 ($generated@@73 $generated@@36 $generated@@90)))))) (not ($generated@@53 ($generated@@89 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@73 $generated@@88 ($generated@@87 ($generated@@73 $generated@@36 $generated@@90))) $generated@@93))) ($generated@@89 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@73 $generated@@88 ($generated@@87 ($generated@@73 $generated@@36 $generated@@90))) $generated@@94)))))))
 :pattern ( ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@90) $generated@@94)) ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@90) $generated@@93)))
)))))
 :weight 3
 :pattern ( ($generated@@85 ($generated@@73 $generated@@36 $generated@@90)))
))))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@44 $generated@@95) (exists (($generated@@96 Int) ($generated@@97 Int) ) (= $generated@@95 ($generated@@66 $generated@@96 $generated@@97))))
 :pattern ( ($generated@@44 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@61 $generated@@98) (exists (($generated@@99 T@U) ($generated@@100 T@U) ) (= $generated@@98 ($generated@@37 $generated@@99 $generated@@100))))
 :pattern ( ($generated@@61 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@63 $generated@@101) (exists (($generated@@102 T@U) ) (= $generated@@101 ($generated@@47 $generated@@102))))
 :pattern ( ($generated@@63 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@103 $generated@@104 $generated@@64) (and (= ($generated@@81 $generated@@36 ($generated@@50 $generated@@36 $generated@@104)) $generated@@104) ($generated@@35 $generated@@36 ($generated@@50 $generated@@36 $generated@@104) $generated@@64)))
 :pattern ( ($generated@@103 $generated@@104 $generated@@64))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@103 $generated@@105 $generated@@38) (and (= ($generated@@81 $generated@@36 ($generated@@50 $generated@@36 $generated@@105)) $generated@@105) ($generated@@35 $generated@@36 ($generated@@50 $generated@@36 $generated@@105) $generated@@38)))
 :pattern ( ($generated@@103 $generated@@105 $generated@@38))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@103 $generated@@106 $generated@@39) (and (= ($generated@@81 $generated@@36 ($generated@@50 $generated@@36 $generated@@106)) $generated@@106) ($generated@@35 $generated@@36 ($generated@@50 $generated@@36 $generated@@106) $generated@@39)))
 :pattern ( ($generated@@103 $generated@@106 $generated@@39))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@103 $generated@@107 $generated@@40) (and (= ($generated@@81 $generated@@36 ($generated@@50 $generated@@36 $generated@@107)) $generated@@107) ($generated@@35 $generated@@36 ($generated@@50 $generated@@36 $generated@@107) $generated@@40)))
 :pattern ( ($generated@@103 $generated@@107 $generated@@40))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@103 $generated@@108 $generated@@59) (and (= ($generated@@81 $generated@@36 ($generated@@50 $generated@@36 $generated@@108)) $generated@@108) ($generated@@35 $generated@@36 ($generated@@50 $generated@@36 $generated@@108) $generated@@59)))
 :pattern ( ($generated@@103 $generated@@108 $generated@@59))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@35 $generated@@36 ($generated@@47 $generated@@110) $generated@@64) ($generated@@35 $generated@@88 $generated@@110 ($generated@@109 $generated@@38)))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@47 $generated@@110) $generated@@64))
)))
(assert  (=> (<= 0 $generated@@84) (forall (($generated@@111 T@U) ) (!  (=> (or ($generated@@86 $generated@@111) (and (< 0 $generated@@84) ($generated@@35 $generated@@36 $generated@@111 $generated@@64))) (and (forall (($generated@@112 Int) ($generated@@113 Int) ) (!  (=> (and (<= ($generated@@71 0) $generated@@112) (<= ($generated@@71 0) $generated@@113)) (=> (<= ($generated@@71 0) $generated@@112) (=> (< $generated@@112 $generated@@113) (and ($generated@@63 $generated@@111) (=> (< $generated@@113 ($generated@@48 ($generated@@87 $generated@@111))) (and (and ($generated@@43 ($generated@@89 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@111) $generated@@112)))) ($generated@@43 ($generated@@89 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@111) $generated@@113))))) (and (and ($generated@@63 $generated@@111) ($generated@@61 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@111) $generated@@112)))) (and ($generated@@63 $generated@@111) ($generated@@61 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@111) $generated@@113)))))))))))
 :pattern ( ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@111) $generated@@113)) ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@111) $generated@@112)))
)) (= ($generated@@85 $generated@@111) (forall (($generated@@114 Int) ($generated@@115 Int) ) (!  (=> (and (<= ($generated@@71 0) $generated@@114) (<= ($generated@@71 0) $generated@@115)) (=> (and (and (<= ($generated@@71 0) $generated@@114) (< $generated@@114 $generated@@115)) (< $generated@@115 ($generated@@48 ($generated@@87 $generated@@111)))) (not ($generated@@53 ($generated@@89 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@111) $generated@@114))) ($generated@@89 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@111) $generated@@115)))))))
 :pattern ( ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@111) $generated@@115)) ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@111) $generated@@114)))
)))))
 :pattern ( ($generated@@85 $generated@@111))
))))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@103 $generated@@116 $generated@@0) (and (= ($generated@@81 $generated@@20 ($generated@@50 $generated@@20 $generated@@116)) $generated@@116) ($generated@@35 $generated@@20 ($generated@@50 $generated@@20 $generated@@116) $generated@@0)))
 :pattern ( ($generated@@103 $generated@@116 $generated@@0))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@103 $generated@@117 $generated) (and (= ($generated@@81 $generated@@19 ($generated@@50 $generated@@19 $generated@@117)) $generated@@117) ($generated@@35 $generated@@19 ($generated@@50 $generated@@19 $generated@@117) $generated)))
 :pattern ( ($generated@@103 $generated@@117 $generated))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@103 ($generated@@81 $generated@@120 $generated@@118) $generated@@119) ($generated@@35 $generated@@120 $generated@@118 $generated@@119))
 :pattern ( ($generated@@103 ($generated@@81 $generated@@120 $generated@@118) $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (<= 0 ($generated@@48 $generated@@121))
 :pattern ( ($generated@@48 $generated@@121))
)))
(assert (forall (($generated@@122 Int) ($generated@@123 Int) ) (! (= ($generated@@76 ($generated@@66 $generated@@122 $generated@@123)) $generated@@9)
 :pattern ( ($generated@@66 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 Int) ($generated@@125 Int) ) (! (= ($generated@@54 ($generated@@66 $generated@@124 $generated@@125)) $generated@@124)
 :pattern ( ($generated@@66 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 Int) ($generated@@127 Int) ) (! (= ($generated@@55 ($generated@@66 $generated@@126 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@66 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@76 ($generated@@37 $generated@@128 $generated@@129)) $generated@@11)
 :pattern ( ($generated@@37 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@130 ($generated@@37 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@37 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@89 ($generated@@37 $generated@@133 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@37 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@135 ($generated@@109 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@109 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@34 ($generated@@109 $generated@@137)) $generated@@3)
 :pattern ( ($generated@@109 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@76 ($generated@@47 $generated@@138)) $generated@@12)
 :pattern ( ($generated@@47 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@87 ($generated@@47 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@47 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@50 $generated@@141 ($generated@@81 $generated@@141 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@81 $generated@@141 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (< ($generated@@49 $generated@@142) ($generated@@49 ($generated@@37 $generated@@142 $generated@@143)))
 :pattern ( ($generated@@37 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (< ($generated@@49 $generated@@145) ($generated@@49 ($generated@@37 $generated@@144 $generated@@145)))
 :pattern ( ($generated@@37 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (< ($generated@@146 $generated@@147) ($generated@@49 ($generated@@47 $generated@@147)))
 :pattern ( ($generated@@47 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@148 $generated@@159 $generated@@160 $generated@@161 ($generated@@155 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@164 $generated@@165) $generated@@162)
 :weight 0
)) (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@148 $generated@@166 $generated@@167 $generated@@168 ($generated@@155 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@148 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or (= $generated@@181 $generated@@183) (= ($generated@@148 $generated@@175 $generated@@176 $generated@@177 ($generated@@155 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@148 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (= ($generated@@18 $generated@@149) 5)) (= ($generated@@18 $generated@@150) 6)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@152 $generated@@184 $generated@@185 ($generated@@156 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@186) $generated@@188) $generated@@186)
 :weight 0
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@193 $generated@@194) (= ($generated@@152 $generated@@189 $generated@@190 ($generated@@156 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@191) $generated@@194) ($generated@@152 $generated@@189 $generated@@190 $generated@@192 $generated@@194)))
 :weight 0
))) (= ($generated@@18 $generated@@153) 7)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@18 ($generated@@154 $generated@@195 $generated@@196)) 8))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@157 ($generated@@154 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@154 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@158 ($generated@@154 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@154 $generated@@199 $generated@@200))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Bool) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@23 ($generated@@148 $generated@@149 $generated@@150 $generated@@19 ($generated@@151 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))  (=> (and (or (not (= $generated@@205 $generated@@201)) (not true)) ($generated@@23 ($generated@@50 $generated@@19 ($generated@@152 $generated@@150 $generated@@153 ($generated@@152 $generated@@149 ($generated@@154 $generated@@150 $generated@@153) $generated@@202 $generated@@205) $generated@@203)))) $generated@@204))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150 $generated@@19 ($generated@@151 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@103 $generated@@207 ($generated@@109 $generated@@208)) (and (= ($generated@@81 $generated@@88 ($generated@@50 $generated@@88 $generated@@207)) $generated@@207) ($generated@@35 $generated@@88 ($generated@@50 $generated@@88 $generated@@207) ($generated@@109 $generated@@208))))
 :pattern ( ($generated@@103 $generated@@207 ($generated@@109 $generated@@208)))
)))
(assert (= ($generated@@34 $generated@@64) $generated@@5))
(assert (= ($generated@@209 $generated@@64) $generated@@13))
(assert (= ($generated@@34 $generated@@38) $generated@@6))
(assert (= ($generated@@209 $generated@@38) $generated@@14))
(assert (= ($generated@@34 $generated@@39) $generated@@7))
(assert (= ($generated@@209 $generated@@39) $generated@@15))
(assert (= ($generated@@34 $generated@@40) $generated@@8))
(assert (= ($generated@@209 $generated@@40) $generated@@16))
(assert (= ($generated@@34 $generated@@59) $generated@@10))
(assert (= ($generated@@209 $generated@@59) $generated@@17))
(assert (forall (($generated@@210 Int) ($generated@@211 Int) ) (! (= ($generated@@66 ($generated@@71 $generated@@210) ($generated@@71 $generated@@211)) ($generated@@73 $generated@@36 ($generated@@66 $generated@@210 $generated@@211)))
 :pattern ( ($generated@@66 ($generated@@71 $generated@@210) ($generated@@71 $generated@@211)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (= ($generated@@37 ($generated@@73 $generated@@36 $generated@@212) ($generated@@73 $generated@@36 $generated@@213)) ($generated@@73 $generated@@36 ($generated@@37 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@37 ($generated@@73 $generated@@36 $generated@@212) ($generated@@73 $generated@@36 $generated@@213)))
)))
(assert (forall (($generated@@214 Int) ) (! (= ($generated@@81 $generated@@20 ($generated@@24 ($generated@@71 $generated@@214))) ($generated@@73 $generated@@153 ($generated@@81 $generated@@20 ($generated@@24 $generated@@214))))
 :pattern ( ($generated@@81 $generated@@20 ($generated@@24 ($generated@@71 $generated@@214))))
)))
(assert (forall (($generated@@215 T@U) ) (! (= ($generated@@47 ($generated@@73 $generated@@88 $generated@@215)) ($generated@@73 $generated@@36 ($generated@@47 $generated@@215)))
 :pattern ( ($generated@@47 ($generated@@73 $generated@@88 $generated@@215)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@T) ) (! (= ($generated@@81 $generated@@217 ($generated@@73 $generated@@217 $generated@@216)) ($generated@@73 $generated@@153 ($generated@@81 $generated@@217 $generated@@216)))
 :pattern ( ($generated@@81 $generated@@217 ($generated@@73 $generated@@217 $generated@@216)))
)))
(assert (forall (($generated@@218 T@U) ) (!  (=> (= ($generated@@48 $generated@@218) 0) (= $generated@@218 $generated@@58))
 :pattern ( ($generated@@48 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= ($generated@@35 $generated@@88 $generated@@219 ($generated@@109 $generated@@220)) (forall (($generated@@221 Int) ) (!  (=> (and (<= 0 $generated@@221) (< $generated@@221 ($generated@@48 $generated@@219))) ($generated@@103 ($generated@@46 $generated@@219 $generated@@221) $generated@@220))
 :pattern ( ($generated@@46 $generated@@219 $generated@@221))
)))
 :pattern ( ($generated@@35 $generated@@88 $generated@@219 ($generated@@109 $generated@@220)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 Int) ) (!  (=> (and (<= 0 $generated@@223) (< $generated@@223 ($generated@@48 $generated@@222))) (< ($generated@@49 ($generated@@50 $generated@@36 ($generated@@46 $generated@@222 $generated@@223))) ($generated@@146 $generated@@222)))
 :pattern ( ($generated@@49 ($generated@@50 $generated@@36 ($generated@@46 $generated@@222 $generated@@223))))
)))
(assert (forall (($generated@@224 T@U) ) (! ($generated@@35 $generated@@20 $generated@@224 $generated@@0)
 :pattern ( ($generated@@35 $generated@@20 $generated@@224 $generated@@0))
)))
(assert (forall (($generated@@225 T@U) ) (! ($generated@@35 $generated@@19 $generated@@225 $generated)
 :pattern ( ($generated@@35 $generated@@19 $generated@@225 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@226 () Int)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@234 true))
(let (($generated@@235  (=> (and (not (and (and (<= ($generated@@71 0) $generated@@226) (< $generated@@226 $generated@@227)) (< $generated@@227 ($generated@@48 ($generated@@87 $generated@@228))))) (= (ControlFlow 0 7) 2)) $generated@@234)))
(let (($generated@@236  (=> (and (and (and (<= ($generated@@71 0) $generated@@226) (< $generated@@226 $generated@@227)) (< $generated@@227 ($generated@@48 ($generated@@87 $generated@@228)))) ($generated@@63 $generated@@228)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= 0 $generated@@226) (< $generated@@226 ($generated@@48 ($generated@@87 $generated@@228))))) (=> (and (<= 0 $generated@@226) (< $generated@@226 ($generated@@48 ($generated@@87 $generated@@228)))) (=> (and ($generated@@61 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@228) $generated@@226))) ($generated@@63 $generated@@228)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 $generated@@227) (< $generated@@227 ($generated@@48 ($generated@@87 $generated@@228))))) (=> (and (<= 0 $generated@@227) (< $generated@@227 ($generated@@48 ($generated@@87 $generated@@228)))) (=> (and ($generated@@61 ($generated@@50 $generated@@36 ($generated@@46 ($generated@@87 $generated@@228) $generated@@227))) (= (ControlFlow 0 4) 2)) $generated@@234)))))))))
(let (($generated@@237  (=> (not (and (<= ($generated@@71 0) $generated@@226) (< $generated@@226 $generated@@227))) (and (=> (= (ControlFlow 0 9) 4) $generated@@236) (=> (= (ControlFlow 0 9) 7) $generated@@235)))))
(let (($generated@@238  (=> (and (and (<= ($generated@@71 0) $generated@@226) (< $generated@@226 $generated@@227)) ($generated@@63 $generated@@228)) (and (=> (= (ControlFlow 0 8) 4) $generated@@236) (=> (= (ControlFlow 0 8) 7) $generated@@235)))))
(let (($generated@@239  (=> (< $generated@@226 ($generated@@71 0)) (and (=> (= (ControlFlow 0 11) 8) $generated@@238) (=> (= (ControlFlow 0 11) 9) $generated@@237)))))
(let (($generated@@240  (=> (<= ($generated@@71 0) $generated@@226) (and (=> (= (ControlFlow 0 10) 8) $generated@@238) (=> (= (ControlFlow 0 10) 9) $generated@@237)))))
(let (($generated@@241  (=> (and (<= ($generated@@71 0) $generated@@226) (<= ($generated@@71 0) $generated@@227)) (and (=> (= (ControlFlow 0 12) 10) $generated@@240) (=> (= (ControlFlow 0 12) 11) $generated@@239)))))
(let (($generated@@242  (=> (and (not (and (<= ($generated@@71 0) $generated@@226) (<= ($generated@@71 0) $generated@@227))) (= (ControlFlow 0 3) 2)) $generated@@234)))
(let (($generated@@243 true))
(let (($generated@@244  (=> (= $generated@@229 ($generated@@151 $generated@@230 $generated@@231 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@243) (=> (= (ControlFlow 0 13) 12) $generated@@241)) (=> (= (ControlFlow 0 13) 3) $generated@@242)))))
(let (($generated@@245  (=> (and (and (and ($generated@@232 $generated@@231) ($generated@@233 $generated@@231)) ($generated@@35 $generated@@36 $generated@@228 $generated@@64)) (and (= 0 $generated@@84) (= (ControlFlow 0 14) 13))) $generated@@244)))
$generated@@245)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
