(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@93 (T@T T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (T@U T@U) T@U)
(declare-fun $generated@@112 () Int)
(declare-fun $generated@@113 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@114 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@115 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@212 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@U T@U T@U T@U T@U T@U T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ) (!  (not ($generated@@27 $generated@@28 $generated@@29))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29))
)))
(assert (= ($generated@@10 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@35 $generated@@36)) (forall (($generated@@39 T@U) ) (!  (=> ($generated@@33 $generated@@39 $generated@@37) ($generated@@33 $generated@@39 $generated@@35))
 :pattern ( ($generated@@33 $generated@@39 $generated@@37))
 :pattern ( ($generated@@33 $generated@@39 $generated@@35))
))) (forall (($generated@@40 T@U) ) (!  (=> ($generated@@33 $generated@@40 $generated@@36) ($generated@@33 $generated@@40 $generated@@38))
 :pattern ( ($generated@@33 $generated@@40 $generated@@36))
 :pattern ( ($generated@@33 $generated@@40 $generated@@38))
))) ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@37 $generated@@38)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@35 $generated@@36)) ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@37 $generated@@38)))
)))
(assert (= ($generated@@10 $generated@@42) 4))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@45 $generated@@43 $generated@@46) ($generated@@41 $generated@@42 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@41 $generated@@42 $generated@@45 $generated@@43 $generated@@46))
 :pattern ( ($generated@@41 $generated@@42 $generated@@45 $generated@@44 $generated@@46))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@50 $generated@@52 $generated@@53 $generated@@55 $generated@@54 $generated@@56) (= ($generated@@27 ($generated@@47 $generated@@52 ($generated@@48 $generated@@44) $generated@@55 ($generated@@49 $generated@@52 $generated@@53 $generated@@54) $generated@@56) $generated@@51) ($generated@@27 ($generated@@47 $generated@@52 $generated@@53 $generated@@55 $generated@@54 $generated@@56) $generated@@51)))
 :pattern ( ($generated@@27 ($generated@@47 $generated@@52 ($generated@@48 $generated@@44) $generated@@55 ($generated@@49 $generated@@52 $generated@@53 $generated@@54) $generated@@56) $generated@@51))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@59 $generated@@66 $generated@@67 ($generated@@63 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@70) $generated@@68)
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@75 $generated@@76) (= ($generated@@59 $generated@@71 $generated@@72 ($generated@@63 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@76) ($generated@@59 $generated@@71 $generated@@72 $generated@@74 $generated@@76)))
 :weight 0
))) (= ($generated@@10 $generated@@60) 5)) (= ($generated@@10 $generated@@61) 6)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (= ($generated@@10 ($generated@@62 $generated@@77 $generated@@78)) 7))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@62 $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@83 $generated@@44 $generated@@84)  (or (= $generated@@83 $generated@@57) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@42 ($generated@@62 $generated@@60 $generated@@61) $generated@@84 $generated@@83) $generated@@2)))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@83 $generated@@44 $generated@@84))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and ($generated@@86 $generated@@90) (and ($generated@@33 $generated@@92 $generated@@88) ($generated@@30 $generated@@31 $generated@@91 ($generated@@32 $generated@@88 $generated@@89)))) (= ($generated@@87 ($generated@@47 $generated@@88 $generated@@89 $generated@@85 $generated@@91 $generated@@92) $generated@@28) ($generated@@87 ($generated@@47 $generated@@88 $generated@@89 $generated@@90 $generated@@91 $generated@@92) $generated@@28)))
 :pattern ( ($generated@@47 $generated@@88 $generated@@89 $generated@@85 $generated@@91 $generated@@92) ($generated@@86 $generated@@90))
 :pattern ( ($generated@@47 $generated@@88 $generated@@89 $generated@@90 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@93 $generated@@95 ($generated@@58 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@58 $generated@@95 $generated@@94))
)))
(assert (= ($generated@@10 $generated@@96) 8))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@30 $generated@@96 $generated@@97 ($generated@@48 $generated@@98)) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@27 $generated@@97 $generated@@99) ($generated@@33 $generated@@99 $generated@@98))
 :pattern ( ($generated@@27 $generated@@97 $generated@@99))
)))
 :pattern ( ($generated@@30 $generated@@96 $generated@@97 ($generated@@48 $generated@@98)))
)))
(assert ($generated@@86 $generated@@85))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@100 ($generated@@93 $generated@@104 $generated@@101) $generated@@102 $generated@@103) ($generated@@41 $generated@@104 $generated@@101 $generated@@102 $generated@@103))
 :pattern ( ($generated@@100 ($generated@@93 $generated@@104 $generated@@101) $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@41 $generated@@31 $generated@@108 ($generated@@105 $generated@@106 $generated@@107) $generated@@109) ($generated@@41 $generated@@31 $generated@@108 ($generated@@32 $generated@@106 $generated@@107) $generated@@109))
 :pattern ( ($generated@@41 $generated@@31 $generated@@108 ($generated@@105 $generated@@106 $generated@@107) $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@33 $generated@@110 $generated@@44) (and (= ($generated@@93 $generated@@42 ($generated@@58 $generated@@42 $generated@@110)) $generated@@110) ($generated@@30 $generated@@42 ($generated@@58 $generated@@42 $generated@@110) $generated@@44)))
 :pattern ( ($generated@@33 $generated@@110 $generated@@44))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@33 $generated@@111 $generated@@43) (and (= ($generated@@93 $generated@@42 ($generated@@58 $generated@@42 $generated@@111)) $generated@@111) ($generated@@30 $generated@@42 ($generated@@58 $generated@@42 $generated@@111) $generated@@43)))
 :pattern ( ($generated@@33 $generated@@111 $generated@@43))
)))
(assert  (=> (<= 0 $generated@@112) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or ($generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@119) (and (< 0 $generated@@112) (and (and ($generated@@86 $generated@@118) ($generated@@30 $generated@@31 $generated@@119 ($generated@@105 $generated@@116 $generated@@117))) (forall (($generated@@120 T@U) ) (!  (=> ($generated@@33 $generated@@120 $generated@@116) ($generated@@50 $generated@@116 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
 :pattern ( ($generated@@50 $generated@@116 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))))) (= ($generated@@113 $generated@@116 $generated@@117 $generated@@118 $generated@@119) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@33 $generated@@121 $generated@@116) ($generated@@33 $generated@@122 $generated@@116)) (=> (= ($generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@119 $generated@@121) ($generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@119 $generated@@122)) (= $generated@@121 $generated@@122)))
 :pattern ( ($generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@119 $generated@@122) ($generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@119 $generated@@121))
))))
 :pattern ( ($generated@@113 $generated@@116 $generated@@117 $generated@@118 $generated@@119) ($generated@@86 $generated@@118))
))))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@30 $generated@@42 $generated@@123 $generated@@43)  (and ($generated@@30 $generated@@42 $generated@@123 $generated@@44) (or (not (= $generated@@123 $generated@@57)) (not true))))
 :pattern ( ($generated@@30 $generated@@42 $generated@@123 $generated@@43))
 :pattern ( ($generated@@30 $generated@@42 $generated@@123 $generated@@44))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@86 $generated@@127) ($generated@@41 $generated@@31 $generated@@124 ($generated@@32 $generated@@125 $generated@@126) $generated@@127)) (forall (($generated@@128 T@U) ) (!  (=> (and ($generated@@100 $generated@@128 $generated@@125 $generated@@127) ($generated@@50 $generated@@125 $generated@@126 $generated@@127 $generated@@124 $generated@@128)) ($generated@@100 ($generated@@115 $generated@@125 $generated@@126 $generated@@127 $generated@@124 $generated@@128) $generated@@126 $generated@@127))
 :pattern ( ($generated@@115 $generated@@125 $generated@@126 $generated@@127 $generated@@124 $generated@@128))
)))
 :pattern ( ($generated@@41 $generated@@31 $generated@@124 ($generated@@32 $generated@@125 $generated@@126) $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@47 $generated@@129 $generated@@130 $generated@@132 $generated@@131 $generated@@133) ($generated@@58 $generated@@96 ($generated@@115 $generated@@129 ($generated@@48 $generated@@44) $generated@@132 ($generated@@49 $generated@@129 $generated@@130 $generated@@131) $generated@@133)))
 :pattern ( ($generated@@47 $generated@@129 $generated@@130 $generated@@132 $generated@@131 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@87 $generated@@134 $generated@@135) (= $generated@@134 $generated@@135))
 :pattern ( ($generated@@87 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@50 $generated@@136 ($generated@@48 $generated@@44) $generated@@139 ($generated@@49 $generated@@136 $generated@@137 $generated@@138) $generated@@140) ($generated@@50 $generated@@136 $generated@@137 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@50 $generated@@136 ($generated@@48 $generated@@44) $generated@@139 ($generated@@49 $generated@@136 $generated@@137 $generated@@138) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@141 ($generated@@32 $generated@@142 $generated@@143)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and ($generated@@86 $generated@@144) ($generated@@33 $generated@@145 $generated@@142)) ($generated@@50 $generated@@142 $generated@@143 $generated@@144 $generated@@141 $generated@@145)) ($generated@@33 ($generated@@115 $generated@@142 $generated@@143 $generated@@144 $generated@@141 $generated@@145) $generated@@143))
 :pattern ( ($generated@@115 $generated@@142 $generated@@143 $generated@@144 $generated@@141 $generated@@145))
)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@141 ($generated@@32 $generated@@142 $generated@@143)))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> ($generated@@33 $generated@@146 $generated) (and (= ($generated@@93 $generated@@11 ($generated@@58 $generated@@11 $generated@@146)) $generated@@146) ($generated@@30 $generated@@11 ($generated@@58 $generated@@11 $generated@@146) $generated)))
 :pattern ( ($generated@@33 $generated@@146 $generated))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@33 ($generated@@93 $generated@@149 $generated@@147) $generated@@148) ($generated@@30 $generated@@149 $generated@@147 $generated@@148))
 :pattern ( ($generated@@33 ($generated@@93 $generated@@149 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> ($generated@@150 $generated@@151) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@33 $generated@@153 $generated@@151) ($generated@@100 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@100 $generated@@153 $generated@@151 $generated@@152))
)))
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@41 $generated@@96 $generated@@154 ($generated@@48 $generated@@155) $generated@@156) (forall (($generated@@157 T@U) ) (!  (=> ($generated@@27 $generated@@154 $generated@@157) ($generated@@100 $generated@@157 $generated@@155 $generated@@156))
 :pattern ( ($generated@@27 $generated@@154 $generated@@157))
)))
 :pattern ( ($generated@@41 $generated@@96 $generated@@154 ($generated@@48 $generated@@155) $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@158 ($generated@@32 $generated@@159 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@32 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@161 ($generated@@32 $generated@@162 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@32 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@164 ($generated@@105 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@105 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@167 ($generated@@105 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@105 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@30 $generated@@42 $generated@@170 $generated@@44)
 :pattern ( ($generated@@30 $generated@@42 $generated@@170 $generated@@44))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@171 ($generated@@48 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@48 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@26 ($generated@@48 $generated@@173)) $generated@@1)
 :pattern ( ($generated@@48 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@58 $generated@@175 ($generated@@93 $generated@@175 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@93 $generated@@175 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@178 ($generated@@105 $generated@@176 $generated@@177))  (and ($generated@@30 $generated@@31 $generated@@178 ($generated@@32 $generated@@176 $generated@@177)) (forall (($generated@@179 T@U) )  (=> ($generated@@33 $generated@@179 $generated@@176) ($generated@@87 ($generated@@47 $generated@@176 $generated@@177 $generated@@85 $generated@@178 $generated@@179) $generated@@28)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@178 ($generated@@105 $generated@@176 $generated@@177)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@86 $generated@@183) (= ($generated@@41 $generated@@31 $generated@@180 ($generated@@32 $generated@@181 $generated@@182) $generated@@183) (forall (($generated@@184 T@U) ) (!  (=> (and (and ($generated@@33 $generated@@184 $generated@@181) ($generated@@100 $generated@@184 $generated@@181 $generated@@183)) ($generated@@50 $generated@@181 $generated@@182 $generated@@183 $generated@@180 $generated@@184)) (forall (($generated@@185 T@U) ) (!  (=> (and (or (not (= $generated@@185 $generated@@57)) (not true)) ($generated@@27 ($generated@@47 $generated@@181 $generated@@182 $generated@@183 $generated@@180 $generated@@184) ($generated@@93 $generated@@42 $generated@@185))) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@42 ($generated@@62 $generated@@60 $generated@@61) $generated@@183 $generated@@185) $generated@@2))))
 :pattern ( ($generated@@27 ($generated@@47 $generated@@181 $generated@@182 $generated@@183 $generated@@180 $generated@@184) ($generated@@93 $generated@@42 $generated@@185)))
)))
 :pattern ( ($generated@@115 $generated@@181 $generated@@182 $generated@@183 $generated@@180 $generated@@184))
 :pattern ( ($generated@@47 $generated@@181 $generated@@182 $generated@@183 $generated@@180 $generated@@184))
))))
 :pattern ( ($generated@@41 $generated@@31 $generated@@180 ($generated@@32 $generated@@181 $generated@@182) $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@33 $generated@@188 ($generated@@32 $generated@@186 $generated@@187)) (and (= ($generated@@93 $generated@@31 ($generated@@58 $generated@@31 $generated@@188)) $generated@@188) ($generated@@30 $generated@@31 ($generated@@58 $generated@@31 $generated@@188) ($generated@@32 $generated@@186 $generated@@187))))
 :pattern ( ($generated@@33 $generated@@188 ($generated@@32 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@33 $generated@@191 ($generated@@105 $generated@@189 $generated@@190)) (and (= ($generated@@93 $generated@@31 ($generated@@58 $generated@@31 $generated@@191)) $generated@@191) ($generated@@30 $generated@@31 ($generated@@58 $generated@@31 $generated@@191) ($generated@@105 $generated@@189 $generated@@190))))
 :pattern ( ($generated@@33 $generated@@191 ($generated@@105 $generated@@189 $generated@@190)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (and (= ($generated@@26 ($generated@@32 $generated@@193 $generated@@194)) $generated@@5) (= ($generated@@192 ($generated@@32 $generated@@193 $generated@@194)) $generated@@8))
 :pattern ( ($generated@@32 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (and (= ($generated@@26 ($generated@@105 $generated@@195 $generated@@196)) $generated@@6) (= ($generated@@192 ($generated@@105 $generated@@195 $generated@@196)) $generated@@9))
 :pattern ( ($generated@@105 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and ($generated@@86 $generated@@199) (and ($generated@@33 $generated@@201 $generated@@197) ($generated@@30 $generated@@31 $generated@@200 ($generated@@32 $generated@@197 $generated@@198)))) ($generated@@87 ($generated@@47 $generated@@197 $generated@@198 $generated@@85 $generated@@200 $generated@@201) $generated@@28)) (= ($generated@@50 $generated@@197 $generated@@198 $generated@@85 $generated@@200 $generated@@201) ($generated@@50 $generated@@197 $generated@@198 $generated@@199 $generated@@200 $generated@@201)))
 :pattern ( ($generated@@50 $generated@@197 $generated@@198 $generated@@85 $generated@@200 $generated@@201) ($generated@@86 $generated@@199))
 :pattern ( ($generated@@50 $generated@@197 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@115 $generated@@202 ($generated@@48 $generated@@44) $generated@@205 ($generated@@49 $generated@@202 $generated@@203 $generated@@204) $generated@@206) ($generated@@93 $generated@@96 ($generated@@47 $generated@@202 $generated@@203 $generated@@205 $generated@@204 $generated@@206)))
 :pattern ( ($generated@@115 $generated@@202 ($generated@@48 $generated@@44) $generated@@205 ($generated@@49 $generated@@202 $generated@@203 $generated@@204) $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@33 $generated@@207 ($generated@@48 $generated@@208)) (and (= ($generated@@93 $generated@@96 ($generated@@58 $generated@@96 $generated@@207)) $generated@@207) ($generated@@30 $generated@@96 ($generated@@58 $generated@@96 $generated@@207) ($generated@@48 $generated@@208))))
 :pattern ( ($generated@@33 $generated@@207 ($generated@@48 $generated@@208)))
)))
(assert (= ($generated@@26 $generated@@44) $generated@@3))
(assert (= ($generated@@192 $generated@@44) $generated@@7))
(assert (= ($generated@@26 $generated@@43) $generated@@4))
(assert (= ($generated@@192 $generated@@43) $generated@@7))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@87 $generated@@209 $generated@@210) (forall (($generated@@211 T@U) ) (! (= ($generated@@27 $generated@@209 $generated@@211) ($generated@@27 $generated@@210 $generated@@211))
 :pattern ( ($generated@@27 $generated@@209 $generated@@211))
 :pattern ( ($generated@@27 $generated@@210 $generated@@211))
)))
 :pattern ( ($generated@@87 $generated@@209 $generated@@210))
)))
(assert  (and (forall (($generated@@215 T@T) ($generated@@216 T@T) ($generated@@217 T@T) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@212 $generated@@215 $generated@@216 $generated@@217 ($generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@220 $generated@@221) $generated@@218)
 :weight 0
)) (and (forall (($generated@@222 T@T) ($generated@@223 T@T) ($generated@@224 T@T) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@212 $generated@@222 $generated@@223 $generated@@224 ($generated@@214 $generated@@222 $generated@@223 $generated@@224 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@212 $generated@@222 $generated@@223 $generated@@224 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)) (forall (($generated@@231 T@T) ($generated@@232 T@T) ($generated@@233 T@T) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@212 $generated@@231 $generated@@232 $generated@@233 ($generated@@214 $generated@@231 $generated@@232 $generated@@233 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@212 $generated@@231 $generated@@232 $generated@@233 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (= ($generated@@15 ($generated@@212 $generated@@42 $generated@@60 $generated@@11 ($generated@@213 $generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))  (=> (and (or (not (= $generated@@253 $generated@@240)) (not true)) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@42 ($generated@@62 $generated@@60 $generated@@61) $generated@@241 $generated@@253) $generated@@242)))) (exists (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (and (and (and ($generated@@33 $generated@@255 $generated@@243) ($generated@@30 $generated@@42 $generated@@256 $generated@@244)) ($generated@@27 ($generated@@47 $generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@255) ($generated@@93 $generated@@42 $generated@@256))) (= ($generated@@93 $generated@@42 $generated@@253) ($generated@@93 $generated@@42 $generated@@256)))
 :pattern ( ($generated@@27 ($generated@@47 $generated@@249 $generated@@250 $generated@@251 $generated@@252 $generated@@255) ($generated@@93 $generated@@42 $generated@@256)))
))))
 :pattern ( ($generated@@212 $generated@@42 $generated@@60 $generated@@11 ($generated@@213 $generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! ($generated@@41 $generated@@11 $generated@@258 $generated $generated@@257)
 :pattern ( ($generated@@41 $generated@@11 $generated@@258 $generated $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! ($generated@@30 $generated@@11 $generated@@259 $generated)
 :pattern ( ($generated@@30 $generated@@11 $generated@@259 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 () Bool)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () Bool)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () Bool)
(declare-fun $generated@@275 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@276 true))
(let (($generated@@277  (=> (and (or (not (= ($generated@@115 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@264) ($generated@@115 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@265))) (not true)) (= (ControlFlow 0 5) 2)) $generated@@276)))
(let (($generated@@278  (=> (and (= ($generated@@115 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@264) ($generated@@115 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@265)) (= (ControlFlow 0 4) 2)) $generated@@276)))
(let (($generated@@279  (=> (and (and ($generated@@33 $generated@@264 $generated@@260) ($generated@@100 $generated@@264 $generated@@260 $generated@@262)) (and ($generated@@33 $generated@@265 $generated@@260) ($generated@@100 $generated@@265 $generated@@260 $generated@@262))) (and (=> (= (ControlFlow 0 6) (- 0 8)) ($generated@@50 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@264)) (=> ($generated@@50 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@264) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@50 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@265)) (=> ($generated@@50 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@265) (and (=> (= (ControlFlow 0 6) 4) $generated@@278) (=> (= (ControlFlow 0 6) 5) $generated@@277)))))))))
(let (($generated@@280  (=> (and (not (and (and ($generated@@33 $generated@@264 $generated@@260) ($generated@@100 $generated@@264 $generated@@260 $generated@@262)) (and ($generated@@33 $generated@@265 $generated@@260) ($generated@@100 $generated@@265 $generated@@260 $generated@@262)))) (= (ControlFlow 0 3) 2)) $generated@@276)))
(let (($generated@@281 true))
(let (($generated@@282  (=> (not ($generated@@27 ($generated@@47 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@266) ($generated@@93 $generated@@42 $generated@@267))) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@281) (=> (= (ControlFlow 0 11) 6) $generated@@279)) (=> (= (ControlFlow 0 11) 3) $generated@@280)))))
(let (($generated@@283  (=> ($generated@@27 ($generated@@47 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@266) ($generated@@93 $generated@@42 $generated@@267)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@281) (=> (= (ControlFlow 0 10) 6) $generated@@279)) (=> (= (ControlFlow 0 10) 3) $generated@@280)))))
(let (($generated@@284  (=> (and (and ($generated@@33 $generated@@266 $generated@@260) ($generated@@100 $generated@@266 $generated@@260 $generated@@262)) (and ($generated@@30 $generated@@42 $generated@@267 $generated@@44) ($generated@@41 $generated@@42 $generated@@267 $generated@@44 $generated@@262))) (and (=> (= (ControlFlow 0 12) (- 0 14)) true) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@50 $generated@@260 ($generated@@48 $generated@@44) $generated@@262 ($generated@@49 $generated@@260 $generated@@261 $generated@@263) $generated@@266)) (=> ($generated@@50 $generated@@260 ($generated@@48 $generated@@44) $generated@@262 ($generated@@49 $generated@@260 $generated@@261 $generated@@263) $generated@@266) (and (=> (= (ControlFlow 0 12) 10) $generated@@283) (=> (= (ControlFlow 0 12) 11) $generated@@282))))))))
(let (($generated@@285  (=> (not (and (and ($generated@@33 $generated@@266 $generated@@260) ($generated@@100 $generated@@266 $generated@@260 $generated@@262)) (and ($generated@@30 $generated@@42 $generated@@267 $generated@@44) ($generated@@41 $generated@@42 $generated@@267 $generated@@44 $generated@@262)))) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@281) (=> (= (ControlFlow 0 9) 6) $generated@@279)) (=> (= (ControlFlow 0 9) 3) $generated@@280)))))
(let (($generated@@286  (and (=> (= (ControlFlow 0 15) (- 0 16)) $generated@@268) (=> $generated@@268 (and (=> (= (ControlFlow 0 15) 12) $generated@@284) (=> (= (ControlFlow 0 15) 9) $generated@@285))))))
(let (($generated@@287  (=> (not ($generated@@27 ($generated@@47 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@269) ($generated@@93 $generated@@42 $generated@@270))) (=> (and (= $generated@@268 $generated@@271) (= (ControlFlow 0 19) 15)) $generated@@286))))
(let (($generated@@288  (=> ($generated@@27 ($generated@@47 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@269) ($generated@@93 $generated@@42 $generated@@270)) (=> (and (= $generated@@268 $generated@@271) (= (ControlFlow 0 18) 15)) $generated@@286))))
(let (($generated@@289  (=> (and (and ($generated@@33 $generated@@269 $generated@@260) ($generated@@100 $generated@@269 $generated@@260 $generated@@262)) (and ($generated@@30 $generated@@42 $generated@@270 $generated@@44) ($generated@@41 $generated@@42 $generated@@270 $generated@@44 $generated@@262))) (and (=> (= (ControlFlow 0 20) (- 0 22)) true) (and (=> (= (ControlFlow 0 20) (- 0 21)) ($generated@@50 $generated@@260 ($generated@@48 $generated@@44) $generated@@262 ($generated@@49 $generated@@260 $generated@@261 $generated@@263) $generated@@269)) (=> ($generated@@50 $generated@@260 ($generated@@48 $generated@@44) $generated@@262 ($generated@@49 $generated@@260 $generated@@261 $generated@@263) $generated@@269) (=> (= $generated@@271 (forall (($generated@@290 T@U) ($generated@@291 T@U) )  (=> (and (and (or (not (= $generated@@290 $generated@@57)) (not true)) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@42 ($generated@@62 $generated@@60 $generated@@61) $generated@@262 $generated@@290) $generated@@2)))) ($generated@@27 ($generated@@47 $generated@@260 ($generated@@48 $generated@@44) $generated@@262 ($generated@@49 $generated@@260 $generated@@261 $generated@@263) $generated@@269) ($generated@@93 $generated@@42 $generated@@290))) ($generated@@15 ($generated@@212 $generated@@42 $generated@@60 $generated@@11 $generated@@272 $generated@@290 $generated@@291))))) (and (=> (= (ControlFlow 0 20) 18) $generated@@288) (=> (= (ControlFlow 0 20) 19) $generated@@287)))))))))
(let (($generated@@292  (=> (not (and (and ($generated@@33 $generated@@269 $generated@@260) ($generated@@100 $generated@@269 $generated@@260 $generated@@262)) (and ($generated@@30 $generated@@42 $generated@@270 $generated@@44) ($generated@@41 $generated@@42 $generated@@270 $generated@@44 $generated@@262)))) (=> (and (= $generated@@268 true) (= (ControlFlow 0 17) 15)) $generated@@286))))
(let (($generated@@293  (=> (= $generated@@272 ($generated@@213 $generated@@57 $generated@@262 $generated@@2 $generated@@260 $generated@@44 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@260 $generated@@261 $generated@@262 $generated@@263)) (=> (and (and (and ($generated@@33 $generated@@273 $generated@@260) ($generated@@100 $generated@@273 $generated@@260 $generated@@262)) ($generated@@100 ($generated@@93 $generated@@31 $generated@@263) ($generated@@32 $generated@@260 $generated@@261) $generated@@262)) (and (and ($generated@@100 $generated@@273 $generated@@260 $generated@@262) (= $generated@@274 (forall (($generated@@294 T@U) ($generated@@295 T@U) )  (=> (and (and (or (not (= $generated@@294 $generated@@57)) (not true)) ($generated@@15 ($generated@@58 $generated@@11 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@42 ($generated@@62 $generated@@60 $generated@@61) $generated@@262 $generated@@294) $generated@@2)))) ($generated@@27 ($generated@@47 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@273) ($generated@@93 $generated@@42 $generated@@294))) ($generated@@15 ($generated@@212 $generated@@42 $generated@@60 $generated@@11 $generated@@272 $generated@@294 $generated@@295)))))) (and ($generated@@50 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@273) (forall (($generated@@296 T@U) ) (!  (=> ($generated@@33 $generated@@296 $generated@@260) ($generated@@50 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@296))
 :pattern ( ($generated@@50 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@296))
))))) (and (=> (= (ControlFlow 0 23) (- 0 24)) $generated@@274) (=> $generated@@274 (and (=> (= (ControlFlow 0 23) 20) $generated@@289) (=> (= (ControlFlow 0 23) 17) $generated@@292))))))))
(let (($generated@@297  (=> (and ($generated@@86 $generated@@262) ($generated@@275 $generated@@262)) (=> (and (and ($generated@@150 $generated@@260) ($generated@@30 $generated@@31 $generated@@263 ($generated@@105 $generated@@260 $generated@@261))) (and (= 0 $generated@@112) (= (ControlFlow 0 25) 23))) $generated@@293))))
$generated@@297))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
