(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U Int) Int)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U Int) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@50 (Int) Int)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@122 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@T T@T) T@T)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@128 (T@T) T@T)
(declare-fun $generated@@177 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (= ($generated@@8 $generated@@30) 3))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 Int) ) (!  (=> (or ($generated@@28 $generated@@36 $generated@@37) (and (< 0 $generated@@25) (and ($generated@@27 $generated@@35) ($generated@@29 $generated@@30 $generated@@36 ($generated@@31 $generated $generated))))) (= ($generated@@26 $generated@@36 $generated@@37) ($generated@@15 ($generated@@32 $generated@@10 ($generated@@33 $generated $generated $generated@@35 $generated@@36 ($generated@@34 $generated@@10 ($generated@@14 $generated@@37)))))))
 :pattern ( ($generated@@26 $generated@@36 $generated@@37) ($generated@@27 $generated@@35))
))))
(assert (forall (($generated@@40 T@U) ) (!  (not ($generated@@38 $generated@@39 $generated@@40))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (and (and ($generated@@29 $generated@@30 $generated@@43 ($generated@@41 $generated@@44 $generated@@45)) (forall (($generated@@48 T@U) ) (!  (=> ($generated@@42 $generated@@48 $generated@@46) ($generated@@42 $generated@@48 $generated@@44))
 :pattern ( ($generated@@42 $generated@@48 $generated@@46))
 :pattern ( ($generated@@42 $generated@@48 $generated@@44))
))) (forall (($generated@@49 T@U) ) (!  (=> ($generated@@42 $generated@@49 $generated@@45) ($generated@@42 $generated@@49 $generated@@47))
 :pattern ( ($generated@@42 $generated@@49 $generated@@45))
 :pattern ( ($generated@@42 $generated@@49 $generated@@47))
))) ($generated@@29 $generated@@30 $generated@@43 ($generated@@41 $generated@@46 $generated@@47)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@43 ($generated@@41 $generated@@44 $generated@@45)) ($generated@@29 $generated@@30 $generated@@43 ($generated@@41 $generated@@46 $generated@@47)))
)))
(assert (forall (($generated@@51 Int) ) (! (= ($generated@@50 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@52 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@27 $generated@@60) (and ($generated@@42 $generated@@62 $generated@@58) ($generated@@29 $generated@@30 $generated@@61 ($generated@@41 $generated@@58 $generated@@59)))) (= ($generated@@57 ($generated@@55 $generated@@58 $generated@@59 $generated@@56 $generated@@61 $generated@@62) $generated@@39) ($generated@@57 ($generated@@55 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62) $generated@@39)))
 :pattern ( ($generated@@55 $generated@@58 $generated@@59 $generated@@56 $generated@@61 $generated@@62) ($generated@@27 $generated@@60))
 :pattern ( ($generated@@55 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 Int) ) (!  (=> (or ($generated@@28 $generated@@64 ($generated@@50 $generated@@65)) (and (< 0 $generated@@25) (and ($generated@@27 $generated@@63) ($generated@@29 $generated@@30 $generated@@64 ($generated@@31 $generated $generated))))) (= ($generated@@26 $generated@@64 ($generated@@50 $generated@@65)) ($generated@@15 ($generated@@32 $generated@@10 ($generated@@33 $generated $generated $generated@@63 $generated@@64 ($generated@@34 $generated@@10 ($generated@@14 ($generated@@50 $generated@@65))))))))
 :weight 3
 :pattern ( ($generated@@26 $generated@@64 ($generated@@50 $generated@@65)) ($generated@@27 $generated@@63))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@34 $generated@@67 ($generated@@32 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@32 $generated@@67 $generated@@66))
)))
(assert ($generated@@27 $generated@@56))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@57 $generated@@68 $generated@@69) (= $generated@@68 $generated@@69))
 :pattern ( ($generated@@57 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@71 ($generated@@41 $generated@@72 $generated@@73)) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@74) ($generated@@42 $generated@@75 $generated@@72)) ($generated@@70 $generated@@72 $generated@@73 $generated@@74 $generated@@71 $generated@@75)) ($generated@@42 ($generated@@33 $generated@@72 $generated@@73 $generated@@74 $generated@@71 $generated@@75) $generated@@73))
 :pattern ( ($generated@@33 $generated@@72 $generated@@73 $generated@@74 $generated@@71 $generated@@75))
)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@71 ($generated@@41 $generated@@72 $generated@@73)))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@42 $generated@@76 $generated) (and (= ($generated@@34 $generated@@10 ($generated@@32 $generated@@10 $generated@@76)) $generated@@76) ($generated@@29 $generated@@10 ($generated@@32 $generated@@10 $generated@@76) $generated)))
 :pattern ( ($generated@@42 $generated@@76 $generated))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@42 ($generated@@34 $generated@@79 $generated@@77) $generated@@78) ($generated@@29 $generated@@79 $generated@@77 $generated@@78))
 :pattern ( ($generated@@42 ($generated@@34 $generated@@79 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@80 ($generated@@41 $generated@@81 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@41 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@83 ($generated@@41 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@41 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 ($generated@@86 $generated@@88 $generated@@89)) $generated@@88)
 :pattern ( ($generated@@86 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@90 ($generated@@86 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@86 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@93 ($generated@@31 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@31 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@96 ($generated@@31 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@31 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@32 $generated@@100 ($generated@@34 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@34 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@103 ($generated@@31 $generated@@101 $generated@@102))  (and ($generated@@29 $generated@@30 $generated@@103 ($generated@@86 $generated@@101 $generated@@102)) (forall (($generated@@104 T@U) )  (=> ($generated@@42 $generated@@104 $generated@@101) ($generated@@70 $generated@@101 $generated@@102 $generated@@56 $generated@@103 $generated@@104)))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@103 ($generated@@31 $generated@@101 $generated@@102)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@107 ($generated@@86 $generated@@105 $generated@@106))  (and ($generated@@29 $generated@@30 $generated@@107 ($generated@@41 $generated@@105 $generated@@106)) (forall (($generated@@108 T@U) )  (=> ($generated@@42 $generated@@108 $generated@@105) ($generated@@57 ($generated@@55 $generated@@105 $generated@@106 $generated@@56 $generated@@107 $generated@@108) $generated@@39)))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@107 ($generated@@86 $generated@@105 $generated@@106)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@42 $generated@@111 ($generated@@41 $generated@@109 $generated@@110)) (and (= ($generated@@34 $generated@@30 ($generated@@32 $generated@@30 $generated@@111)) $generated@@111) ($generated@@29 $generated@@30 ($generated@@32 $generated@@30 $generated@@111) ($generated@@41 $generated@@109 $generated@@110))))
 :pattern ( ($generated@@42 $generated@@111 ($generated@@41 $generated@@109 $generated@@110)))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@42 $generated@@114 ($generated@@86 $generated@@112 $generated@@113)) (and (= ($generated@@34 $generated@@30 ($generated@@32 $generated@@30 $generated@@114)) $generated@@114) ($generated@@29 $generated@@30 ($generated@@32 $generated@@30 $generated@@114) ($generated@@86 $generated@@112 $generated@@113))))
 :pattern ( ($generated@@42 $generated@@114 ($generated@@86 $generated@@112 $generated@@113)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> ($generated@@42 $generated@@117 ($generated@@31 $generated@@115 $generated@@116)) (and (= ($generated@@34 $generated@@30 ($generated@@32 $generated@@30 $generated@@117)) $generated@@117) ($generated@@29 $generated@@30 ($generated@@32 $generated@@30 $generated@@117) ($generated@@31 $generated@@115 $generated@@116))))
 :pattern ( ($generated@@42 $generated@@117 ($generated@@31 $generated@@115 $generated@@116)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@118 $generated@@129 $generated@@130 $generated@@131 ($generated@@125 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@118 $generated@@136 $generated@@137 $generated@@138 ($generated@@125 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@118 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@118 $generated@@145 $generated@@146 $generated@@147 ($generated@@125 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@118 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))) (= ($generated@@8 $generated@@119) 4)) (= ($generated@@8 $generated@@120) 5)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@122 $generated@@154 $generated@@155 ($generated@@126 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@156) $generated@@158) $generated@@156)
 :weight 0
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@163 $generated@@164) (= ($generated@@122 $generated@@159 $generated@@160 ($generated@@126 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@122 $generated@@159 $generated@@160 $generated@@162 $generated@@164)))
 :weight 0
))) (= ($generated@@8 $generated@@123) 6)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@8 ($generated@@124 $generated@@165 $generated@@166)) 7))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@127 ($generated@@124 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@124 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@128 ($generated@@124 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@124 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@13 ($generated@@118 $generated@@119 $generated@@120 $generated@@9 ($generated@@121 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@122 $generated@@120 $generated@@123 ($generated@@122 $generated@@119 ($generated@@124 $generated@@120 $generated@@123) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@118 $generated@@119 $generated@@120 $generated@@9 ($generated@@121 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (and (= ($generated@@24 ($generated@@41 $generated@@178 $generated@@179)) $generated@@2) (= ($generated@@177 ($generated@@41 $generated@@178 $generated@@179)) $generated@@5))
 :pattern ( ($generated@@41 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (and (= ($generated@@24 ($generated@@86 $generated@@180 $generated@@181)) $generated@@3) (= ($generated@@177 ($generated@@86 $generated@@180 $generated@@181)) $generated@@6))
 :pattern ( ($generated@@86 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (and (= ($generated@@24 ($generated@@31 $generated@@182 $generated@@183)) $generated@@4) (= ($generated@@177 ($generated@@31 $generated@@182 $generated@@183)) $generated@@7))
 :pattern ( ($generated@@31 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@186) (and ($generated@@42 $generated@@188 $generated@@184) ($generated@@29 $generated@@30 $generated@@187 ($generated@@41 $generated@@184 $generated@@185)))) ($generated@@57 ($generated@@55 $generated@@184 $generated@@185 $generated@@56 $generated@@187 $generated@@188) $generated@@39)) (= ($generated@@70 $generated@@184 $generated@@185 $generated@@56 $generated@@187 $generated@@188) ($generated@@70 $generated@@184 $generated@@185 $generated@@186 $generated@@187 $generated@@188)))
 :pattern ( ($generated@@70 $generated@@184 $generated@@185 $generated@@56 $generated@@187 $generated@@188) ($generated@@27 $generated@@186))
 :pattern ( ($generated@@70 $generated@@184 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Int) ) (!  (=> (or ($generated@@28 ($generated@@52 $generated@@30 $generated@@190) ($generated@@50 $generated@@191)) (and (< 0 $generated@@25) (and ($generated@@27 $generated@@189) ($generated@@29 $generated@@30 $generated@@190 ($generated@@31 $generated $generated))))) (= ($generated@@26 ($generated@@52 $generated@@30 $generated@@190) ($generated@@50 $generated@@191)) ($generated@@15 ($generated@@32 $generated@@10 ($generated@@33 $generated $generated $generated@@189 ($generated@@52 $generated@@30 $generated@@190) ($generated@@34 $generated@@10 ($generated@@14 ($generated@@50 $generated@@191))))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@52 $generated@@30 $generated@@190) ($generated@@50 $generated@@191)) ($generated@@27 $generated@@189))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@57 $generated@@192 $generated@@193) (forall (($generated@@194 T@U) ) (! (= ($generated@@38 $generated@@192 $generated@@194) ($generated@@38 $generated@@193 $generated@@194))
 :pattern ( ($generated@@38 $generated@@192 $generated@@194))
 :pattern ( ($generated@@38 $generated@@193 $generated@@194))
)))
 :pattern ( ($generated@@57 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@34 $generated@@10 ($generated@@14 ($generated@@50 $generated@@195))) ($generated@@52 $generated@@123 ($generated@@34 $generated@@10 ($generated@@14 $generated@@195))))
 :pattern ( ($generated@@34 $generated@@10 ($generated@@14 ($generated@@50 $generated@@195))))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@T) ) (! (= ($generated@@34 $generated@@197 ($generated@@52 $generated@@197 $generated@@196)) ($generated@@52 $generated@@123 ($generated@@34 $generated@@197 $generated@@196)))
 :pattern ( ($generated@@34 $generated@@197 ($generated@@52 $generated@@197 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ) (! ($generated@@29 $generated@@10 $generated@@198 $generated)
 :pattern ( ($generated@@29 $generated@@10 $generated@@198 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@204  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@13 ($generated@@52 $generated@@9 ($generated@@12 true))))))
(let (($generated@@205 true))
(let (($generated@@206  (=> (= $generated@@199 ($generated@@121 $generated@@200 $generated@@201 $generated@@1 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@205) (=> (= (ControlFlow 0 4) 3) $generated@@204)))))
(let (($generated@@207  (=> (and (and (and ($generated@@27 $generated@@201) ($generated@@202 $generated@@201)) ($generated@@29 $generated@@30 $generated@@203 ($generated@@31 $generated $generated))) (and (= 0 $generated@@25) (= (ControlFlow 0 5) 4))) $generated@@206)))
$generated@@207)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
