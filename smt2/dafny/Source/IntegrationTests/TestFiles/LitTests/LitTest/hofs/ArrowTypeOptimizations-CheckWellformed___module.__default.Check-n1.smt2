(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U Int) Int)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@U Int) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@106 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T) T@T)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@161 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@6 $generated@@28) 3))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 Int) ) (!  (=> (or ($generated@@26 $generated@@34 $generated@@35) (and (< 0 $generated@@23) (and ($generated@@25 $generated@@33) ($generated@@27 $generated@@28 $generated@@34 ($generated@@29 $generated $generated))))) (= ($generated@@24 $generated@@34 $generated@@35) ($generated@@13 ($generated@@30 $generated@@8 ($generated@@31 $generated $generated $generated@@33 $generated@@34 ($generated@@32 $generated@@8 ($generated@@12 $generated@@35)))))))
 :pattern ( ($generated@@24 $generated@@34 $generated@@35) ($generated@@25 $generated@@33))
))))
(assert (forall (($generated@@38 T@U) ) (!  (not ($generated@@36 $generated@@37 $generated@@38))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@28 $generated@@41 ($generated@@39 $generated@@42 $generated@@43)) (forall (($generated@@46 T@U) ) (!  (=> ($generated@@40 $generated@@46 $generated@@44) ($generated@@40 $generated@@46 $generated@@42))
 :pattern ( ($generated@@40 $generated@@46 $generated@@44))
 :pattern ( ($generated@@40 $generated@@46 $generated@@42))
))) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@40 $generated@@47 $generated@@43) ($generated@@40 $generated@@47 $generated@@45))
 :pattern ( ($generated@@40 $generated@@47 $generated@@43))
 :pattern ( ($generated@@40 $generated@@47 $generated@@45))
))) ($generated@@27 $generated@@28 $generated@@41 ($generated@@39 $generated@@44 $generated@@45)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@41 ($generated@@39 $generated@@42 $generated@@43)) ($generated@@27 $generated@@28 $generated@@41 ($generated@@39 $generated@@44 $generated@@45)))
)))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@48 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (and ($generated@@25 $generated@@58) (and ($generated@@40 $generated@@60 $generated@@56) ($generated@@27 $generated@@28 $generated@@59 ($generated@@39 $generated@@56 $generated@@57)))) (= ($generated@@55 ($generated@@53 $generated@@56 $generated@@57 $generated@@54 $generated@@59 $generated@@60) $generated@@37) ($generated@@55 ($generated@@53 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60) $generated@@37)))
 :pattern ( ($generated@@53 $generated@@56 $generated@@57 $generated@@54 $generated@@59 $generated@@60) ($generated@@25 $generated@@58))
 :pattern ( ($generated@@53 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 Int) ) (!  (=> (or ($generated@@26 $generated@@62 ($generated@@48 $generated@@63)) (and (< 0 $generated@@23) (and ($generated@@25 $generated@@61) ($generated@@27 $generated@@28 $generated@@62 ($generated@@29 $generated $generated))))) (= ($generated@@24 $generated@@62 ($generated@@48 $generated@@63)) ($generated@@13 ($generated@@30 $generated@@8 ($generated@@31 $generated $generated $generated@@61 $generated@@62 ($generated@@32 $generated@@8 ($generated@@12 ($generated@@48 $generated@@63))))))))
 :weight 3
 :pattern ( ($generated@@24 $generated@@62 ($generated@@48 $generated@@63)) ($generated@@25 $generated@@61))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@32 $generated@@65 ($generated@@30 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@30 $generated@@65 $generated@@64))
)))
(assert ($generated@@25 $generated@@54))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@55 $generated@@66 $generated@@67) (= $generated@@66 $generated@@67))
 :pattern ( ($generated@@55 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@69 ($generated@@39 $generated@@70 $generated@@71)) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and (and ($generated@@25 $generated@@72) ($generated@@40 $generated@@73 $generated@@70)) ($generated@@68 $generated@@70 $generated@@71 $generated@@72 $generated@@69 $generated@@73)) ($generated@@40 ($generated@@31 $generated@@70 $generated@@71 $generated@@72 $generated@@69 $generated@@73) $generated@@71))
 :pattern ( ($generated@@31 $generated@@70 $generated@@71 $generated@@72 $generated@@69 $generated@@73))
)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@69 ($generated@@39 $generated@@70 $generated@@71)))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@40 $generated@@74 $generated) (and (= ($generated@@32 $generated@@8 ($generated@@30 $generated@@8 $generated@@74)) $generated@@74) ($generated@@27 $generated@@8 ($generated@@30 $generated@@8 $generated@@74) $generated)))
 :pattern ( ($generated@@40 $generated@@74 $generated))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@40 ($generated@@32 $generated@@77 $generated@@75) $generated@@76) ($generated@@27 $generated@@77 $generated@@75 $generated@@76))
 :pattern ( ($generated@@40 ($generated@@32 $generated@@77 $generated@@75) $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 ($generated@@39 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@39 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@81 ($generated@@39 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@39 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@84 ($generated@@29 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@29 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 ($generated@@29 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@29 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@30 $generated@@91 ($generated@@32 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@32 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@94 ($generated@@29 $generated@@92 $generated@@93))  (and ($generated@@27 $generated@@28 $generated@@94 ($generated@@39 $generated@@92 $generated@@93)) (forall (($generated@@95 T@U) )  (=> ($generated@@40 $generated@@95 $generated@@92) ($generated@@55 ($generated@@53 $generated@@92 $generated@@93 $generated@@54 $generated@@94 $generated@@95) $generated@@37)))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@94 ($generated@@29 $generated@@92 $generated@@93)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@40 $generated@@98 ($generated@@39 $generated@@96 $generated@@97)) (and (= ($generated@@32 $generated@@28 ($generated@@30 $generated@@28 $generated@@98)) $generated@@98) ($generated@@27 $generated@@28 ($generated@@30 $generated@@28 $generated@@98) ($generated@@39 $generated@@96 $generated@@97))))
 :pattern ( ($generated@@40 $generated@@98 ($generated@@39 $generated@@96 $generated@@97)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@40 $generated@@101 ($generated@@29 $generated@@99 $generated@@100)) (and (= ($generated@@32 $generated@@28 ($generated@@30 $generated@@28 $generated@@101)) $generated@@101) ($generated@@27 $generated@@28 ($generated@@30 $generated@@28 $generated@@101) ($generated@@29 $generated@@99 $generated@@100))))
 :pattern ( ($generated@@40 $generated@@101 ($generated@@29 $generated@@99 $generated@@100)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@102 $generated@@113 $generated@@114 $generated@@115 ($generated@@109 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@118 $generated@@119) $generated@@116)
 :weight 0
)) (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@102 $generated@@120 $generated@@121 $generated@@122 ($generated@@109 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@102 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@102 $generated@@129 $generated@@130 $generated@@131 ($generated@@109 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)))) (= ($generated@@6 $generated@@103) 4)) (= ($generated@@6 $generated@@104) 5)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@106 $generated@@138 $generated@@139 ($generated@@110 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@140) $generated@@142) $generated@@140)
 :weight 0
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@147 $generated@@148) (= ($generated@@106 $generated@@143 $generated@@144 ($generated@@110 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@106 $generated@@143 $generated@@144 $generated@@146 $generated@@148)))
 :weight 0
))) (= ($generated@@6 $generated@@107) 6)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@6 ($generated@@108 $generated@@149 $generated@@150)) 7))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@111 ($generated@@108 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@108 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@112 ($generated@@108 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@108 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@11 ($generated@@102 $generated@@103 $generated@@104 $generated@@7 ($generated@@105 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (or (not (= $generated@@159 $generated@@155)) (not true)) ($generated@@11 ($generated@@30 $generated@@7 ($generated@@106 $generated@@104 $generated@@107 ($generated@@106 $generated@@103 ($generated@@108 $generated@@104 $generated@@107) $generated@@156 $generated@@159) $generated@@157)))) $generated@@158))
 :pattern ( ($generated@@102 $generated@@103 $generated@@104 $generated@@7 ($generated@@105 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (and (= ($generated@@22 ($generated@@39 $generated@@162 $generated@@163)) $generated@@2) (= ($generated@@161 ($generated@@39 $generated@@162 $generated@@163)) $generated@@4))
 :pattern ( ($generated@@39 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (and (= ($generated@@22 ($generated@@29 $generated@@164 $generated@@165)) $generated@@3) (= ($generated@@161 ($generated@@29 $generated@@164 $generated@@165)) $generated@@5))
 :pattern ( ($generated@@29 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and ($generated@@25 $generated@@168) (and ($generated@@40 $generated@@170 $generated@@166) ($generated@@27 $generated@@28 $generated@@169 ($generated@@39 $generated@@166 $generated@@167)))) ($generated@@55 ($generated@@53 $generated@@166 $generated@@167 $generated@@54 $generated@@169 $generated@@170) $generated@@37)) (= ($generated@@68 $generated@@166 $generated@@167 $generated@@54 $generated@@169 $generated@@170) ($generated@@68 $generated@@166 $generated@@167 $generated@@168 $generated@@169 $generated@@170)))
 :pattern ( ($generated@@68 $generated@@166 $generated@@167 $generated@@54 $generated@@169 $generated@@170) ($generated@@25 $generated@@168))
 :pattern ( ($generated@@68 $generated@@166 $generated@@167 $generated@@168 $generated@@169 $generated@@170))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Int) ) (!  (=> (or ($generated@@26 ($generated@@50 $generated@@28 $generated@@172) ($generated@@48 $generated@@173)) (and (< 0 $generated@@23) (and ($generated@@25 $generated@@171) ($generated@@27 $generated@@28 $generated@@172 ($generated@@29 $generated $generated))))) (= ($generated@@24 ($generated@@50 $generated@@28 $generated@@172) ($generated@@48 $generated@@173)) ($generated@@13 ($generated@@30 $generated@@8 ($generated@@31 $generated $generated $generated@@171 ($generated@@50 $generated@@28 $generated@@172) ($generated@@32 $generated@@8 ($generated@@12 ($generated@@48 $generated@@173))))))))
 :weight 3
 :pattern ( ($generated@@24 ($generated@@50 $generated@@28 $generated@@172) ($generated@@48 $generated@@173)) ($generated@@25 $generated@@171))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@55 $generated@@174 $generated@@175) (forall (($generated@@176 T@U) ) (! (= ($generated@@36 $generated@@174 $generated@@176) ($generated@@36 $generated@@175 $generated@@176))
 :pattern ( ($generated@@36 $generated@@174 $generated@@176))
 :pattern ( ($generated@@36 $generated@@175 $generated@@176))
)))
 :pattern ( ($generated@@55 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@32 $generated@@8 ($generated@@12 ($generated@@48 $generated@@177))) ($generated@@50 $generated@@107 ($generated@@32 $generated@@8 ($generated@@12 $generated@@177))))
 :pattern ( ($generated@@32 $generated@@8 ($generated@@12 ($generated@@48 $generated@@177))))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@T) ) (! (= ($generated@@32 $generated@@179 ($generated@@50 $generated@@179 $generated@@178)) ($generated@@50 $generated@@107 ($generated@@32 $generated@@179 $generated@@178)))
 :pattern ( ($generated@@32 $generated@@179 ($generated@@50 $generated@@179 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (! ($generated@@27 $generated@@8 $generated@@180 $generated)
 :pattern ( ($generated@@27 $generated@@8 $generated@@180 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@187  (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@11 ($generated@@50 $generated@@7 ($generated@@10 true)))) (=> ($generated@@11 ($generated@@50 $generated@@7 ($generated@@10 true))) (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@68 $generated $generated $generated@@181 $generated@@182 ($generated@@32 $generated@@8 ($generated@@12 $generated@@183))))))))
(let (($generated@@188 true))
(let (($generated@@189  (=> (= $generated@@184 ($generated@@105 $generated@@185 $generated@@181 $generated@@1 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@188) (=> (= (ControlFlow 0 5) 3) $generated@@187)))))
(let (($generated@@190  (=> (and (and (and ($generated@@25 $generated@@181) ($generated@@186 $generated@@181)) ($generated@@27 $generated@@28 $generated@@182 ($generated@@29 $generated $generated))) (and (= 0 $generated@@23) (= (ControlFlow 0 6) 5))) $generated@@189)))
$generated@@190)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
