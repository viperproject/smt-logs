(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun TInt () T@U)
(declare-fun TagInt () T@U)
(declare-fun TagSet () T@U)
(declare-fun alloc () T@U)
(declare-fun Tagclass._System.nat () T@U)
(declare-fun Tagclass._System.object? () T@U)
(declare-fun Tagclass._System.object () T@U)
(declare-fun Tagclass._System.___hFunc1 () T@U)
(declare-fun Tagclass._System.___hPartialFunc1 () T@U)
(declare-fun Tagclass._System.___hTotalFunc1 () T@U)
(declare-fun Tagclass._System.___hFunc2 () T@U)
(declare-fun Tagclass._System.___hPartialFunc2 () T@U)
(declare-fun Tagclass._System.___hTotalFunc2 () T@U)
(declare-fun tytagFamily$nat () T@U)
(declare-fun tytagFamily$object () T@U)
(declare-fun |tytagFamily$_#Func1| () T@U)
(declare-fun |tytagFamily$_#PartialFunc1| () T@U)
(declare-fun |tytagFamily$_#TotalFunc1| () T@U)
(declare-fun |tytagFamily$_#Func2| () T@U)
(declare-fun |tytagFamily$_#PartialFunc2| () T@U)
(declare-fun |tytagFamily$_#TotalFunc2| () T@U)
(declare-fun Ctor (T@T) Int)
(declare-fun boolType () T@T)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun Tag (T@U) T@U)
(declare-fun |Set#IsMember| (T@U T@U) Bool)
(declare-fun Reads1 (T@U T@U T@U T@U T@U) T@U)
(declare-fun Handle1 (T@U T@U T@U) T@U)
(declare-fun MapType0Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType1Type (T@T T@T) T@T)
(declare-fun refType () T@T)
(declare-fun FieldType () T@T)
(declare-fun BoxType () T@T)
(declare-fun SetType () T@T)
(declare-fun MapType0Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun MapType1Select (T@T T@T T@U T@U) T@U)
(declare-fun MapType1Store (T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType1TypeInv0 (T@T) T@T)
(declare-fun MapType1TypeInv1 (T@T) T@T)
(declare-fun |lambda#3| (T@U) T@U)
(declare-fun $IsBox (T@U T@U) Bool)
(declare-fun $Is (T@T T@U T@U) Bool)
(declare-fun HandleTypeType () T@T)
(declare-fun Tclass._System.___hTotalFunc2 (T@U T@U T@U) T@U)
(declare-fun Tclass._System.___hPartialFunc2 (T@U T@U T@U) T@U)
(declare-fun Requires2 (T@U T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $OneHeap () T@U)
(declare-fun $IsAlloc (T@T T@U T@U T@U) Bool)
(declare-fun Tclass._System.nat () T@U)
(declare-fun Tclass._System.___hFunc2 (T@U T@U T@U) T@U)
(declare-fun Tclass._System.___hFunc2_0 (T@U) T@U)
(declare-fun Tclass._System.___hFunc2_1 (T@U) T@U)
(declare-fun Tclass._System.___hFunc2_2 (T@U) T@U)
(declare-fun Tclass._System.___hPartialFunc2_0 (T@U) T@U)
(declare-fun Tclass._System.___hPartialFunc2_1 (T@U) T@U)
(declare-fun Tclass._System.___hPartialFunc2_2 (T@U) T@U)
(declare-fun Tclass._System.___hTotalFunc2_0 (T@U) T@U)
(declare-fun Tclass._System.___hTotalFunc2_1 (T@U) T@U)
(declare-fun Tclass._System.___hTotalFunc2_2 (T@U) T@U)
(declare-fun |Set#Empty| () T@U)
(declare-fun TagFamily (T@U) T@U)
(declare-fun $Box (T@T T@U) T@U)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun Tclass._System.___hFunc1 (T@U T@U) T@U)
(declare-fun Tclass._System.object () T@U)
(declare-fun Tclass._System.object? () T@U)
(declare-fun |lambda#43| (T@U T@U T@U T@U T@U) T@U)
(declare-fun Apply2 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun null () T@U)
(declare-fun $HeapSucc (T@U T@U) Bool)
(declare-fun LayerTypeType () T@T)
(declare-fun |lambda#57| (Int T@U T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun |lambda#53| (T@U Int T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun LitInt (Int) Int)
(declare-fun Lit (T@T T@U) T@U)
(declare-fun $IsGoodHeap (T@U) Bool)
(declare-fun |Set#Equal| (T@U T@U) Bool)
(declare-fun Reads2 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun |lambda#692| (T@U T@U T@U T@U T@U Int T@U T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun |lambda#688| (T@U T@U T@U T@U T@U T@U Int T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun _module.__default.Sum (T@U Int T@U) Int)
(declare-fun AtLayer (T@T T@U T@U) T@U)
(declare-fun |lambda#6| (T@U) T@U)
(declare-fun Requires1 (T@U T@U T@U T@U T@U) Bool)
(declare-fun TSet (T@U) T@U)
(declare-fun $IsAllocBox (T@U T@U T@U) Bool)
(declare-fun Apply1 (T@U T@U T@U T@U T@U) T@U)
(declare-fun SetRef_to_SetBox (T@U) T@U)
(declare-fun Tclass._System.___hPartialFunc1 (T@U T@U) T@U)
(declare-fun Tclass._System.___hTotalFunc1 (T@U T@U) T@U)
(declare-fun $FunctionContextHeight () Int)
(declare-fun $LS (T@U) T@U)
(declare-fun |_module.__default.Sum#canCall| (Int T@U) Bool)
(declare-fun |lambda#4| (Bool) T@U)
(declare-fun |lambda#754| (T@U T@U T@U T@U T@U) T@U)
(declare-fun Tclass._System.___hFunc1_0 (T@U) T@U)
(declare-fun Tclass._System.___hFunc1_1 (T@U) T@U)
(declare-fun Tclass._System.___hPartialFunc1_0 (T@U) T@U)
(declare-fun Tclass._System.___hPartialFunc1_1 (T@U) T@U)
(declare-fun Tclass._System.___hTotalFunc1_0 (T@U) T@U)
(declare-fun Tclass._System.___hTotalFunc1_1 (T@U) T@U)
(declare-fun Inv0_TSet (T@U) T@U)
(declare-fun |lambda#0| (T@U T@U T@U Bool) T@U)
(declare-fun |lambda#773| (T@U T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun |lambda#170| (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun |lambda#5| (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= (Ctor boolType) 0) (= (Ctor intType) 1)) (= (Ctor realType) 2)) (forall ((arg0 Bool) ) (! (= (U_2_bool (bool_2_U arg0)) arg0)
 :pattern ( (bool_2_U arg0))
))) (forall ((x T@U) ) (! (= (bool_2_U (U_2_bool x)) x)
 :pattern ( (U_2_bool x))
))) (forall ((arg0@@0 Int) ) (! (= (U_2_int (int_2_U arg0@@0)) arg0@@0)
 :pattern ( (int_2_U arg0@@0))
))) (forall ((x@@0 T@U) ) (! (= (int_2_U (U_2_int x@@0)) x@@0)
 :pattern ( (U_2_int x@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@1 T@U) ) (! (= (real_2_U (U_2_real x@@1)) x@@1)
 :pattern ( (U_2_real x@@1))
))))
(assert (distinct TInt TagInt TagSet alloc Tagclass._System.nat Tagclass._System.object? Tagclass._System.object Tagclass._System.___hFunc1 Tagclass._System.___hPartialFunc1 Tagclass._System.___hTotalFunc1 Tagclass._System.___hFunc2 Tagclass._System.___hPartialFunc2 Tagclass._System.___hTotalFunc2 tytagFamily$nat tytagFamily$object |tytagFamily$_#Func1| |tytagFamily$_#PartialFunc1| |tytagFamily$_#TotalFunc1| |tytagFamily$_#Func2| |tytagFamily$_#PartialFunc2| |tytagFamily$_#TotalFunc2|)
)
(assert (= (Tag TInt) TagInt))
(assert  (and (and (and (and (and (and (and (and (and (and (forall ((t0 T@T) (t1 T@T) (t2 T@T) (val T@U) (m T@U) (x0 T@U) (x1 T@U) ) (! (= (MapType0Select t0 t1 t2 (MapType0Store t0 t1 t2 m x0 x1 val) x0 x1) val)
 :weight 0
)) (and (forall ((u0 T@T) (u1 T@T) (u2 T@T) (val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (x1@@0 T@U) (y0 T@U) (y1 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select u0 u1 u2 (MapType0Store u0 u1 u2 m@@0 x0@@0 x1@@0 val@@0) y0 y1) (MapType0Select u0 u1 u2 m@@0 y0 y1)))
 :weight 0
)) (forall ((u0@@0 T@T) (u1@@0 T@T) (u2@@0 T@T) (val@@1 T@U) (m@@1 T@U) (x0@@1 T@U) (x1@@1 T@U) (y0@@0 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType0Select u0@@0 u1@@0 u2@@0 (MapType0Store u0@@0 u1@@0 u2@@0 m@@1 x0@@1 x1@@1 val@@1) y0@@0 y1@@0) (MapType0Select u0@@0 u1@@0 u2@@0 m@@1 y0@@0 y1@@0)))
 :weight 0
)))) (forall ((t0@@0 T@T) (t1@@0 T@T) (val@@2 T@U) (m@@2 T@U) (x0@@2 T@U) ) (! (= (MapType1Select t0@@0 t1@@0 (MapType1Store t0@@0 t1@@0 m@@2 x0@@2 val@@2) x0@@2) val@@2)
 :weight 0
))) (forall ((u0@@1 T@T) (u1@@1 T@T) (val@@3 T@U) (m@@3 T@U) (x0@@3 T@U) (y0@@1 T@U) ) (!  (or (= x0@@3 y0@@1) (= (MapType1Select u0@@1 u1@@1 (MapType1Store u0@@1 u1@@1 m@@3 x0@@3 val@@3) y0@@1) (MapType1Select u0@@1 u1@@1 m@@3 y0@@1)))
 :weight 0
))) (forall ((arg0@@2 T@T) (arg1 T@T) ) (= (Ctor (MapType1Type arg0@@2 arg1)) 3))) (forall ((arg0@@3 T@T) (arg1@@0 T@T) ) (! (= (MapType1TypeInv0 (MapType1Type arg0@@3 arg1@@0)) arg0@@3)
 :pattern ( (MapType1Type arg0@@3 arg1@@0))
))) (forall ((arg0@@4 T@T) (arg1@@1 T@T) ) (! (= (MapType1TypeInv1 (MapType1Type arg0@@4 arg1@@1)) arg1@@1)
 :pattern ( (MapType1Type arg0@@4 arg1@@1))
))) (= (Ctor refType) 4)) (= (Ctor FieldType) 5)) (= (Ctor BoxType) 6)) (= (Ctor SetType) 7)))
(assert (forall ((t0@@1 T@U) (t1@@1 T@U) (heap T@U) (h T@U) (r T@U) (rd T@U) (bx0 T@U) (bx T@U) ) (! (= (|Set#IsMember| (Reads1 t0@@1 t1@@1 heap (Handle1 h r rd) bx0) bx) (|Set#IsMember| (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType SetType rd heap bx0) bx))
 :pattern ( (|Set#IsMember| (Reads1 t0@@1 t1@@1 heap (Handle1 h r rd) bx0) bx))
)))
(assert (forall ((|l#0| T@U) (|$l#9#heap#0| T@U) (|$l#9#x#0| T@U) ) (! (= (U_2_bool (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType boolType (|lambda#3| |l#0|) |$l#9#heap#0| |$l#9#x#0|)) ($IsBox |$l#9#x#0| |l#0|))
 :pattern ( (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType boolType (|lambda#3| |l#0|) |$l#9#heap#0| |$l#9#x#0|))
)))
(assert (= (Ctor HandleTypeType) 8))
(assert (forall ((|#$T0| T@U) (|#$T1| T@U) (|#$R| T@U) (|f#0| T@U) ) (! (= ($Is HandleTypeType |f#0| (Tclass._System.___hTotalFunc2 |#$T0| |#$T1| |#$R|))  (and ($Is HandleTypeType |f#0| (Tclass._System.___hPartialFunc2 |#$T0| |#$T1| |#$R|)) (forall ((|x0#0| T@U) (|x1#0| T@U) )  (=> (and ($IsBox |x0#0| |#$T0|) ($IsBox |x1#0| |#$T1|)) (Requires2 |#$T0| |#$T1| |#$R| $OneHeap |f#0| |x0#0| |x1#0|)))))
 :pattern ( ($Is HandleTypeType |f#0| (Tclass._System.___hTotalFunc2 |#$T0| |#$T1| |#$R|)))
)))
(assert (forall ((|x#0| T@U) ($h T@U) ) (! ($IsAlloc intType |x#0| Tclass._System.nat $h)
 :pattern ( ($IsAlloc intType |x#0| Tclass._System.nat $h))
)))
(assert (forall ((|#$T0@@0| T@U) (|#$T1@@0| T@U) (|#$R@@0| T@U) ) (! (= (Tclass._System.___hFunc2_0 (Tclass._System.___hFunc2 |#$T0@@0| |#$T1@@0| |#$R@@0|)) |#$T0@@0|)
 :pattern ( (Tclass._System.___hFunc2 |#$T0@@0| |#$T1@@0| |#$R@@0|))
)))
(assert (forall ((|#$T0@@1| T@U) (|#$T1@@1| T@U) (|#$R@@1| T@U) ) (! (= (Tclass._System.___hFunc2_1 (Tclass._System.___hFunc2 |#$T0@@1| |#$T1@@1| |#$R@@1|)) |#$T1@@1|)
 :pattern ( (Tclass._System.___hFunc2 |#$T0@@1| |#$T1@@1| |#$R@@1|))
)))
(assert (forall ((|#$T0@@2| T@U) (|#$T1@@2| T@U) (|#$R@@2| T@U) ) (! (= (Tclass._System.___hFunc2_2 (Tclass._System.___hFunc2 |#$T0@@2| |#$T1@@2| |#$R@@2|)) |#$R@@2|)
 :pattern ( (Tclass._System.___hFunc2 |#$T0@@2| |#$T1@@2| |#$R@@2|))
)))
(assert (forall ((|#$T0@@3| T@U) (|#$T1@@3| T@U) (|#$R@@3| T@U) ) (! (= (Tclass._System.___hPartialFunc2_0 (Tclass._System.___hPartialFunc2 |#$T0@@3| |#$T1@@3| |#$R@@3|)) |#$T0@@3|)
 :pattern ( (Tclass._System.___hPartialFunc2 |#$T0@@3| |#$T1@@3| |#$R@@3|))
)))
(assert (forall ((|#$T0@@4| T@U) (|#$T1@@4| T@U) (|#$R@@4| T@U) ) (! (= (Tclass._System.___hPartialFunc2_1 (Tclass._System.___hPartialFunc2 |#$T0@@4| |#$T1@@4| |#$R@@4|)) |#$T1@@4|)
 :pattern ( (Tclass._System.___hPartialFunc2 |#$T0@@4| |#$T1@@4| |#$R@@4|))
)))
(assert (forall ((|#$T0@@5| T@U) (|#$T1@@5| T@U) (|#$R@@5| T@U) ) (! (= (Tclass._System.___hPartialFunc2_2 (Tclass._System.___hPartialFunc2 |#$T0@@5| |#$T1@@5| |#$R@@5|)) |#$R@@5|)
 :pattern ( (Tclass._System.___hPartialFunc2 |#$T0@@5| |#$T1@@5| |#$R@@5|))
)))
(assert (forall ((|#$T0@@6| T@U) (|#$T1@@6| T@U) (|#$R@@6| T@U) ) (! (= (Tclass._System.___hTotalFunc2_0 (Tclass._System.___hTotalFunc2 |#$T0@@6| |#$T1@@6| |#$R@@6|)) |#$T0@@6|)
 :pattern ( (Tclass._System.___hTotalFunc2 |#$T0@@6| |#$T1@@6| |#$R@@6|))
)))
(assert (forall ((|#$T0@@7| T@U) (|#$T1@@7| T@U) (|#$R@@7| T@U) ) (! (= (Tclass._System.___hTotalFunc2_1 (Tclass._System.___hTotalFunc2 |#$T0@@7| |#$T1@@7| |#$R@@7|)) |#$T1@@7|)
 :pattern ( (Tclass._System.___hTotalFunc2 |#$T0@@7| |#$T1@@7| |#$R@@7|))
)))
(assert (forall ((|#$T0@@8| T@U) (|#$T1@@8| T@U) (|#$R@@8| T@U) ) (! (= (Tclass._System.___hTotalFunc2_2 (Tclass._System.___hTotalFunc2 |#$T0@@8| |#$T1@@8| |#$R@@8|)) |#$R@@8|)
 :pattern ( (Tclass._System.___hTotalFunc2 |#$T0@@8| |#$T1@@8| |#$R@@8|))
)))
(assert (forall ((o T@U) ) (!  (not (|Set#IsMember| |Set#Empty| o))
 :pattern ( (|Set#IsMember| |Set#Empty| o))
)))
(assert (forall ((|#$T0@@9| T@U) (|#$T1@@9| T@U) (|#$R@@9| T@U) ) (!  (and (= (Tag (Tclass._System.___hFunc2 |#$T0@@9| |#$T1@@9| |#$R@@9|)) Tagclass._System.___hFunc2) (= (TagFamily (Tclass._System.___hFunc2 |#$T0@@9| |#$T1@@9| |#$R@@9|)) |tytagFamily$_#Func2|))
 :pattern ( (Tclass._System.___hFunc2 |#$T0@@9| |#$T1@@9| |#$R@@9|))
)))
(assert (forall ((|#$T0@@10| T@U) (|#$T1@@10| T@U) (|#$R@@10| T@U) ) (!  (and (= (Tag (Tclass._System.___hPartialFunc2 |#$T0@@10| |#$T1@@10| |#$R@@10|)) Tagclass._System.___hPartialFunc2) (= (TagFamily (Tclass._System.___hPartialFunc2 |#$T0@@10| |#$T1@@10| |#$R@@10|)) |tytagFamily$_#PartialFunc2|))
 :pattern ( (Tclass._System.___hPartialFunc2 |#$T0@@10| |#$T1@@10| |#$R@@10|))
)))
(assert (forall ((|#$T0@@11| T@U) (|#$T1@@11| T@U) (|#$R@@11| T@U) ) (!  (and (= (Tag (Tclass._System.___hTotalFunc2 |#$T0@@11| |#$T1@@11| |#$R@@11|)) Tagclass._System.___hTotalFunc2) (= (TagFamily (Tclass._System.___hTotalFunc2 |#$T0@@11| |#$T1@@11| |#$R@@11|)) |tytagFamily$_#TotalFunc2|))
 :pattern ( (Tclass._System.___hTotalFunc2 |#$T0@@11| |#$T1@@11| |#$R@@11|))
)))
(assert (forall ((|#$T0@@12| T@U) (|#$T1@@12| T@U) (|#$R@@12| T@U) (bx@@0 T@U) ) (!  (=> ($IsBox bx@@0 (Tclass._System.___hFunc2 |#$T0@@12| |#$T1@@12| |#$R@@12|)) (and (= ($Box HandleTypeType ($Unbox HandleTypeType bx@@0)) bx@@0) ($Is HandleTypeType ($Unbox HandleTypeType bx@@0) (Tclass._System.___hFunc2 |#$T0@@12| |#$T1@@12| |#$R@@12|))))
 :pattern ( ($IsBox bx@@0 (Tclass._System.___hFunc2 |#$T0@@12| |#$T1@@12| |#$R@@12|)))
)))
(assert (forall ((|#$T0@@13| T@U) (|#$T1@@13| T@U) (|#$R@@13| T@U) (bx@@1 T@U) ) (!  (=> ($IsBox bx@@1 (Tclass._System.___hPartialFunc2 |#$T0@@13| |#$T1@@13| |#$R@@13|)) (and (= ($Box HandleTypeType ($Unbox HandleTypeType bx@@1)) bx@@1) ($Is HandleTypeType ($Unbox HandleTypeType bx@@1) (Tclass._System.___hPartialFunc2 |#$T0@@13| |#$T1@@13| |#$R@@13|))))
 :pattern ( ($IsBox bx@@1 (Tclass._System.___hPartialFunc2 |#$T0@@13| |#$T1@@13| |#$R@@13|)))
)))
(assert (forall ((|#$T0@@14| T@U) (|#$T1@@14| T@U) (|#$R@@14| T@U) (bx@@2 T@U) ) (!  (=> ($IsBox bx@@2 (Tclass._System.___hTotalFunc2 |#$T0@@14| |#$T1@@14| |#$R@@14|)) (and (= ($Box HandleTypeType ($Unbox HandleTypeType bx@@2)) bx@@2) ($Is HandleTypeType ($Unbox HandleTypeType bx@@2) (Tclass._System.___hTotalFunc2 |#$T0@@14| |#$T1@@14| |#$R@@14|))))
 :pattern ( ($IsBox bx@@2 (Tclass._System.___hTotalFunc2 |#$T0@@14| |#$T1@@14| |#$R@@14|)))
)))
(assert (forall ((f T@U) (t0@@2 T@U) (t1@@2 T@U) (u0@@2 T@U) (u1@@2 T@U) ) (!  (=> (and (and ($Is HandleTypeType f (Tclass._System.___hFunc1 t0@@2 t1@@2)) (forall ((bx@@3 T@U) ) (!  (=> ($IsBox bx@@3 u0@@2) ($IsBox bx@@3 t0@@2))
 :pattern ( ($IsBox bx@@3 u0@@2))
 :pattern ( ($IsBox bx@@3 t0@@2))
))) (forall ((bx@@4 T@U) ) (!  (=> ($IsBox bx@@4 t1@@2) ($IsBox bx@@4 u1@@2))
 :pattern ( ($IsBox bx@@4 t1@@2))
 :pattern ( ($IsBox bx@@4 u1@@2))
))) ($Is HandleTypeType f (Tclass._System.___hFunc1 u0@@2 u1@@2)))
 :pattern ( ($Is HandleTypeType f (Tclass._System.___hFunc1 t0@@2 t1@@2)) ($Is HandleTypeType f (Tclass._System.___hFunc1 u0@@2 u1@@2)))
)))
(assert (forall ((|c#0| T@U) ($h@@0 T@U) ) (! (= ($IsAlloc refType |c#0| Tclass._System.object $h@@0) ($IsAlloc refType |c#0| Tclass._System.object? $h@@0))
 :pattern ( ($IsAlloc refType |c#0| Tclass._System.object $h@@0))
 :pattern ( ($IsAlloc refType |c#0| Tclass._System.object? $h@@0))
)))
(assert (forall ((|l#0@@0| T@U) (|l#1| T@U) (|l#2| T@U) (|l#3| T@U) (|l#4| T@U) (|$l#32#heap#0| T@U) (|$l#32#y#0| T@U) ) (! (= (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType (|lambda#43| |l#0@@0| |l#1| |l#2| |l#3| |l#4|) |$l#32#heap#0| |$l#32#y#0|) ($Box intType ($Unbox intType (Apply2 |l#0@@0| |l#1| |l#2| |$l#32#heap#0| |l#3| |l#4| ($Box intType ($Unbox intType |$l#32#y#0|))))))
 :pattern ( (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType (|lambda#43| |l#0@@0| |l#1| |l#2| |l#3| |l#4|) |$l#32#heap#0| |$l#32#y#0|))
)))
(assert (forall (($o T@U) ($h@@1 T@U) ) (! (= ($IsAlloc refType $o Tclass._System.object? $h@@1)  (or (= $o null) (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) $h@@1 $o) alloc)))))
 :pattern ( ($IsAlloc refType $o Tclass._System.object? $h@@1))
)))
(assert (forall ((h@@0 T@U) (k T@U) ) (!  (=> ($HeapSucc h@@0 k) (forall ((o@@0 T@U) ) (!  (=> (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h@@0 o@@0) alloc))) (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) k o@@0) alloc))))
 :pattern ( (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) k o@@0) alloc))
)))
 :pattern ( ($HeapSucc h@@0 k))
)))
(assert (= (Ctor LayerTypeType) 9))
(assert (forall ((|l#0@@1| Int) (|l#1@@0| T@U) (|l#2@@0| T@U) (|l#3@@0| T@U) (|l#4@@0| T@U) (|l#5| T@U) (|l#6| T@U) (|l#7| T@U) (|l#8| T@U) (|$l#33#ly#0| T@U) ) (! (= (MapType1Select LayerTypeType HandleTypeType (|lambda#57| |l#0@@1| |l#1@@0| |l#2@@0| |l#3@@0| |l#4@@0| |l#5| |l#6| |l#7| |l#8|) |$l#33#ly#0|) (Handle1 (|lambda#53| |$l#33#ly#0| |l#0@@1| |l#1@@0| |l#2@@0| |l#3@@0| |l#4@@0| |l#5| |l#6| |$l#33#ly#0|) |l#7| |l#8|))
 :pattern ( (MapType1Select LayerTypeType HandleTypeType (|lambda#57| |l#0@@1| |l#1@@0| |l#2@@0| |l#3@@0| |l#4@@0| |l#5| |l#6| |l#7| |l#8|) |$l#33#ly#0|))
)))
(assert (forall ((x@@2 Int) ) (! (= (LitInt x@@2) x@@2)
 :pattern ( (LitInt x@@2))
)))
(assert (forall ((x@@3 T@U) (T T@T) ) (! (= (Lit T x@@3) x@@3)
 :pattern ( (Lit T x@@3))
)))
(assert (forall ((t0@@3 T@U) (t1@@3 T@U) (heap@@0 T@U) (f@@0 T@U) (bx0@@0 T@U) ) (!  (=> (and ($IsGoodHeap heap@@0) (and ($IsBox bx0@@0 t0@@3) ($Is HandleTypeType f@@0 (Tclass._System.___hFunc1 t0@@3 t1@@3)))) (= (|Set#Equal| (Reads1 t0@@3 t1@@3 $OneHeap f@@0 bx0@@0) |Set#Empty|) (|Set#Equal| (Reads1 t0@@3 t1@@3 heap@@0 f@@0 bx0@@0) |Set#Empty|)))
 :pattern ( (Reads1 t0@@3 t1@@3 $OneHeap f@@0 bx0@@0) ($IsGoodHeap heap@@0))
 :pattern ( (Reads1 t0@@3 t1@@3 heap@@0 f@@0 bx0@@0))
)))
(assert (forall ((|#$T0@@15| T@U) (|#$T1@@15| T@U) (|#$R@@15| T@U) (|f#0@@0| T@U) ) (! (= ($Is HandleTypeType |f#0@@0| (Tclass._System.___hPartialFunc2 |#$T0@@15| |#$T1@@15| |#$R@@15|))  (and ($Is HandleTypeType |f#0@@0| (Tclass._System.___hFunc2 |#$T0@@15| |#$T1@@15| |#$R@@15|)) (forall ((|x0#0@@0| T@U) (|x1#0@@0| T@U) )  (=> (and ($IsBox |x0#0@@0| |#$T0@@15|) ($IsBox |x1#0@@0| |#$T1@@15|)) (|Set#Equal| (Reads2 |#$T0@@15| |#$T1@@15| |#$R@@15| $OneHeap |f#0@@0| |x0#0@@0| |x1#0@@0|) |Set#Empty|)))))
 :pattern ( ($Is HandleTypeType |f#0@@0| (Tclass._System.___hPartialFunc2 |#$T0@@15| |#$T1@@15| |#$R@@15|)))
)))
(assert (forall ((x@@4 T@U) (T@@0 T@T) ) (! (= ($Box T@@0 ($Unbox T@@0 x@@4)) x@@4)
 :pattern ( ($Unbox T@@0 x@@4))
)))
(assert (forall ((|l#0@@2| T@U) (|l#1@@1| T@U) (|l#2@@1| T@U) (|l#3@@1| T@U) (|l#4@@1| T@U) (|l#5@@0| Int) (|l#6@@0| T@U) (|l#7@@0| T@U) (|l#8@@0| T@U) (|l#9| T@U) (|l#10| T@U) (|l#11| T@U) (|l#12| T@U) (|l#13| T@U) (|$l#21#ly#0| T@U) ) (! (= (MapType1Select LayerTypeType HandleTypeType (|lambda#692| |l#0@@2| |l#1@@1| |l#2@@1| |l#3@@1| |l#4@@1| |l#5@@0| |l#6@@0| |l#7@@0| |l#8@@0| |l#9| |l#10| |l#11| |l#12| |l#13|) |$l#21#ly#0|) (Handle1 (|lambda#688| |l#0@@2| |l#1@@1| |l#2@@1| |l#3@@1| |l#4@@1| |$l#21#ly#0| |l#5@@0| |l#6@@0| |l#7@@0| |l#8@@0| |l#9| |l#10| |l#11| |$l#21#ly#0|) |l#12| |l#13|))
 :pattern ( (MapType1Select LayerTypeType HandleTypeType (|lambda#692| |l#0@@2| |l#1@@1| |l#2@@1| |l#3@@1| |l#4@@1| |l#5@@0| |l#6@@0| |l#7@@0| |l#8@@0| |l#9| |l#10| |l#11| |l#12| |l#13|) |$l#21#ly#0|))
)))
(assert (forall ((|l#0@@3| T@U) (|l#1@@2| Int) (|l#2@@2| T@U) (|l#3@@2| T@U) (|l#4@@2| T@U) (|l#5@@1| T@U) (|l#6@@1| T@U) (|l#7@@1| T@U) (|l#8@@1| T@U) (|$l#33#heap#0| T@U) (|$l#33#x#0| T@U) ) (! (= (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType (|lambda#53| |l#0@@3| |l#1@@2| |l#2@@2| |l#3@@2| |l#4@@2| |l#5@@1| |l#6@@1| |l#7@@1| |l#8@@1|) |$l#33#heap#0| |$l#33#x#0|) ($Box intType (int_2_U (_module.__default.Sum |l#0@@3| |l#1@@2| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| |l#2@@2| |l#3@@2| |l#4@@2| |l#5@@1| ($Box intType ($Unbox intType |$l#33#x#0|))) |l#6@@1| |l#7@@1|)) |l#8@@1|))))))
 :pattern ( (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType (|lambda#53| |l#0@@3| |l#1@@2| |l#2@@2| |l#3@@2| |l#4@@2| |l#5@@1| |l#6@@1| |l#7@@1| |l#8@@1|) |$l#33#heap#0| |$l#33#x#0|))
)))
(assert (forall ((t0@@4 T@U) (t1@@4 T@U) (h0 T@U) (h1 T@U) (f@@1 T@U) (bx0@@1 T@U) ) (!  (=> (and (and (and ($HeapSucc h0 h1) (and ($IsGoodHeap h0) ($IsGoodHeap h1))) (and ($IsBox bx0@@1 t0@@4) ($Is HandleTypeType f@@1 (Tclass._System.___hFunc1 t0@@4 t1@@4)))) (forall ((o@@1 T@U) (fld T@U) )  (=> (and (or (not (= o@@1 null)) (not true)) (|Set#IsMember| (Reads1 t0@@4 t1@@4 h0 f@@1 bx0@@1) ($Box refType o@@1))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0 o@@1) fld) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1 o@@1) fld))))) (= (Requires1 t0@@4 t1@@4 h0 f@@1 bx0@@1) (Requires1 t0@@4 t1@@4 h1 f@@1 bx0@@1)))
 :pattern ( ($HeapSucc h0 h1) (Requires1 t0@@4 t1@@4 h1 f@@1 bx0@@1))
)))
(assert (forall ((t0@@5 T@U) (t1@@5 T@U) (h0@@0 T@U) (h1@@0 T@U) (f@@2 T@U) (bx0@@2 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@0 h1@@0) (and ($IsGoodHeap h0@@0) ($IsGoodHeap h1@@0))) (and ($IsBox bx0@@2 t0@@5) ($Is HandleTypeType f@@2 (Tclass._System.___hFunc1 t0@@5 t1@@5)))) (forall ((o@@2 T@U) (fld@@0 T@U) )  (=> (and (or (not (= o@@2 null)) (not true)) (|Set#IsMember| (Reads1 t0@@5 t1@@5 h1@@0 f@@2 bx0@@2) ($Box refType o@@2))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@0 o@@2) fld@@0) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@0 o@@2) fld@@0))))) (= (Requires1 t0@@5 t1@@5 h0@@0 f@@2 bx0@@2) (Requires1 t0@@5 t1@@5 h1@@0 f@@2 bx0@@2)))
 :pattern ( ($HeapSucc h0@@0 h1@@0) (Requires1 t0@@5 t1@@5 h1@@0 f@@2 bx0@@2))
)))
(assert (forall ((v T@U) (t0@@6 T@U) ) (! (= ($Is SetType v (TSet t0@@6)) (forall ((bx@@5 T@U) ) (!  (=> (|Set#IsMember| v bx@@5) ($IsBox bx@@5 t0@@6))
 :pattern ( (|Set#IsMember| v bx@@5))
)))
 :pattern ( ($Is SetType v (TSet t0@@6)))
)))
(assert (forall ((f@@3 T@U) (ly T@U) (A T@T) ) (! (= (AtLayer A f@@3 ly) (MapType1Select LayerTypeType A f@@3 ly))
 :pattern ( (AtLayer A f@@3 ly))
)))
(assert (forall ((|x#0@@0| T@U) ) (! (= ($Is intType |x#0@@0| Tclass._System.nat) (<= (LitInt 0) (U_2_int |x#0@@0|)))
 :pattern ( ($Is intType |x#0@@0| Tclass._System.nat))
)))
(assert ($IsGoodHeap $OneHeap))
(assert (forall ((v@@0 T@U) (t T@U) (h@@1 T@U) (T@@1 T@T) ) (! (= ($IsAllocBox ($Box T@@1 v@@0) t h@@1) ($IsAlloc T@@1 v@@0 t h@@1))
 :pattern ( ($IsAllocBox ($Box T@@1 v@@0) t h@@1))
)))
(assert (forall ((h@@2 T@U) (k@@0 T@U) (bx@@6 T@U) (t@@0 T@U) ) (!  (=> ($HeapSucc h@@2 k@@0) (=> ($IsAllocBox bx@@6 t@@0 h@@2) ($IsAllocBox bx@@6 t@@0 k@@0)))
 :pattern ( ($HeapSucc h@@2 k@@0) ($IsAllocBox bx@@6 t@@0 h@@2))
)))
(assert (forall ((h@@3 T@U) (k@@1 T@U) (v@@1 T@U) (t@@1 T@U) (T@@2 T@T) ) (!  (=> ($HeapSucc h@@3 k@@1) (=> ($IsAlloc T@@2 v@@1 t@@1 h@@3) ($IsAlloc T@@2 v@@1 t@@1 k@@1)))
 :pattern ( ($HeapSucc h@@3 k@@1) ($IsAlloc T@@2 v@@1 t@@1 h@@3))
)))
(assert (forall ((t0@@7 T@U) (t1@@6 T@U) (h0@@1 T@U) (h1@@1 T@U) (f@@4 T@U) (bx0@@3 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@1 h1@@1) (and ($IsGoodHeap h0@@1) ($IsGoodHeap h1@@1))) (and ($IsBox bx0@@3 t0@@7) ($Is HandleTypeType f@@4 (Tclass._System.___hFunc1 t0@@7 t1@@6)))) (forall ((o@@3 T@U) (fld@@1 T@U) )  (=> (and (or (not (= o@@3 null)) (not true)) (|Set#IsMember| (Reads1 t0@@7 t1@@6 h0@@1 f@@4 bx0@@3) ($Box refType o@@3))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@1 o@@3) fld@@1) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@1 o@@3) fld@@1))))) (= (Reads1 t0@@7 t1@@6 h0@@1 f@@4 bx0@@3) (Reads1 t0@@7 t1@@6 h1@@1 f@@4 bx0@@3)))
 :pattern ( ($HeapSucc h0@@1 h1@@1) (Reads1 t0@@7 t1@@6 h1@@1 f@@4 bx0@@3))
)))
(assert (forall ((t0@@8 T@U) (t1@@7 T@U) (h0@@2 T@U) (h1@@2 T@U) (f@@5 T@U) (bx0@@4 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@2 h1@@2) (and ($IsGoodHeap h0@@2) ($IsGoodHeap h1@@2))) (and ($IsBox bx0@@4 t0@@8) ($Is HandleTypeType f@@5 (Tclass._System.___hFunc1 t0@@8 t1@@7)))) (forall ((o@@4 T@U) (fld@@2 T@U) )  (=> (and (or (not (= o@@4 null)) (not true)) (|Set#IsMember| (Reads1 t0@@8 t1@@7 h1@@2 f@@5 bx0@@4) ($Box refType o@@4))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@2 o@@4) fld@@2) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@2 o@@4) fld@@2))))) (= (Reads1 t0@@8 t1@@7 h0@@2 f@@5 bx0@@4) (Reads1 t0@@8 t1@@7 h1@@2 f@@5 bx0@@4)))
 :pattern ( ($HeapSucc h0@@2 h1@@2) (Reads1 t0@@8 t1@@7 h1@@2 f@@5 bx0@@4))
)))
(assert (forall ((t0@@9 T@U) (t1@@8 T@U) (h0@@3 T@U) (h1@@3 T@U) (f@@6 T@U) (bx0@@5 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@3 h1@@3) (and ($IsGoodHeap h0@@3) ($IsGoodHeap h1@@3))) (and ($IsBox bx0@@5 t0@@9) ($Is HandleTypeType f@@6 (Tclass._System.___hFunc1 t0@@9 t1@@8)))) (forall ((o@@5 T@U) (fld@@3 T@U) )  (=> (and (or (not (= o@@5 null)) (not true)) (|Set#IsMember| (Reads1 t0@@9 t1@@8 h0@@3 f@@6 bx0@@5) ($Box refType o@@5))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@3 o@@5) fld@@3) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@3 o@@5) fld@@3))))) (= (Apply1 t0@@9 t1@@8 h0@@3 f@@6 bx0@@5) (Apply1 t0@@9 t1@@8 h1@@3 f@@6 bx0@@5)))
 :pattern ( ($HeapSucc h0@@3 h1@@3) (Apply1 t0@@9 t1@@8 h1@@3 f@@6 bx0@@5))
)))
(assert (forall ((t0@@10 T@U) (t1@@9 T@U) (h0@@4 T@U) (h1@@4 T@U) (f@@7 T@U) (bx0@@6 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@4 h1@@4) (and ($IsGoodHeap h0@@4) ($IsGoodHeap h1@@4))) (and ($IsBox bx0@@6 t0@@10) ($Is HandleTypeType f@@7 (Tclass._System.___hFunc1 t0@@10 t1@@9)))) (forall ((o@@6 T@U) (fld@@4 T@U) )  (=> (and (or (not (= o@@6 null)) (not true)) (|Set#IsMember| (Reads1 t0@@10 t1@@9 h1@@4 f@@7 bx0@@6) ($Box refType o@@6))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@4 o@@6) fld@@4) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@4 o@@6) fld@@4))))) (= (Apply1 t0@@10 t1@@9 h0@@4 f@@7 bx0@@6) (Apply1 t0@@10 t1@@9 h1@@4 f@@7 bx0@@6)))
 :pattern ( ($HeapSucc h0@@4 h1@@4) (Apply1 t0@@10 t1@@9 h1@@4 f@@7 bx0@@6))
)))
(assert (forall ((s T@U) (bx@@7 T@U) ) (! (= (|Set#IsMember| (SetRef_to_SetBox s) bx@@7) (U_2_bool (MapType1Select refType boolType s ($Unbox refType bx@@7))))
 :pattern ( (|Set#IsMember| (SetRef_to_SetBox s) bx@@7))
)))
(assert (forall ((|#$T0@@16| T@U) (|#$R@@16| T@U) (|f#0@@1| T@U) ($h@@2 T@U) ) (! (= ($IsAlloc HandleTypeType |f#0@@1| (Tclass._System.___hPartialFunc1 |#$T0@@16| |#$R@@16|) $h@@2) ($IsAlloc HandleTypeType |f#0@@1| (Tclass._System.___hFunc1 |#$T0@@16| |#$R@@16|) $h@@2))
 :pattern ( ($IsAlloc HandleTypeType |f#0@@1| (Tclass._System.___hPartialFunc1 |#$T0@@16| |#$R@@16|) $h@@2))
)))
(assert (forall ((|#$T0@@17| T@U) (|#$R@@17| T@U) (|f#0@@2| T@U) ($h@@3 T@U) ) (! (= ($IsAlloc HandleTypeType |f#0@@2| (Tclass._System.___hTotalFunc1 |#$T0@@17| |#$R@@17|) $h@@3) ($IsAlloc HandleTypeType |f#0@@2| (Tclass._System.___hPartialFunc1 |#$T0@@17| |#$R@@17|) $h@@3))
 :pattern ( ($IsAlloc HandleTypeType |f#0@@2| (Tclass._System.___hTotalFunc1 |#$T0@@17| |#$R@@17|) $h@@3))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($ly T@U) ($Heap T@U) (|n#0| Int) (|f#0@@3| T@U) ) (!  (=> (or (|_module.__default.Sum#canCall| (LitInt |n#0|) |f#0@@3|) (and (< 0 $FunctionContextHeight) (and (and ($IsGoodHeap $Heap) (<= (LitInt 0) |n#0|)) ($Is HandleTypeType |f#0@@3| (Tclass._System.___hTotalFunc1 TInt TInt))))) (and (=> (or (not (= (LitInt |n#0|) (LitInt 0))) (not true)) (|_module.__default.Sum#canCall| (LitInt (- |n#0| 1)) |f#0@@3|)) (= (_module.__default.Sum ($LS $ly) (LitInt |n#0|) |f#0@@3|) (ite (= (LitInt |n#0|) (LitInt 0)) 0 (+ (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap |f#0@@3| ($Box intType (int_2_U (LitInt (- |n#0| 1))))))) (_module.__default.Sum ($LS $ly) (LitInt (- |n#0| 1)) |f#0@@3|))))))
 :weight 3
 :pattern ( (_module.__default.Sum ($LS $ly) (LitInt |n#0|) |f#0@@3|) ($IsGoodHeap $Heap))
))))
(assert (forall ((t0@@11 T@U) (t1@@10 T@U) (heap@@1 T@U) (h@@4 T@U) (r@@0 T@U) (rd@@0 T@U) (bx0@@7 T@U) ) (! (= (Apply1 t0@@11 t1@@10 heap@@1 (Handle1 h@@4 r@@0 rd@@0) bx0@@7) (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType h@@4 heap@@1 bx0@@7))
 :pattern ( (Apply1 t0@@11 t1@@10 heap@@1 (Handle1 h@@4 r@@0 rd@@0) bx0@@7))
)))
(assert (forall ((bx@@8 T@U) ) (!  (=> ($IsBox bx@@8 Tclass._System.nat) (and (= ($Box intType ($Unbox intType bx@@8)) bx@@8) ($Is intType ($Unbox intType bx@@8) Tclass._System.nat)))
 :pattern ( ($IsBox bx@@8 Tclass._System.nat))
)))
(assert (forall ((bx@@9 T@U) ) (!  (=> ($IsBox bx@@9 Tclass._System.object?) (and (= ($Box refType ($Unbox refType bx@@9)) bx@@9) ($Is refType ($Unbox refType bx@@9) Tclass._System.object?)))
 :pattern ( ($IsBox bx@@9 Tclass._System.object?))
)))
(assert (forall ((bx@@10 T@U) ) (!  (=> ($IsBox bx@@10 Tclass._System.object) (and (= ($Box refType ($Unbox refType bx@@10)) bx@@10) ($Is refType ($Unbox refType bx@@10) Tclass._System.object)))
 :pattern ( ($IsBox bx@@10 Tclass._System.object))
)))
(assert (forall ((|c#0@@0| T@U) ) (! (= ($Is refType |c#0@@0| Tclass._System.object)  (and ($Is refType |c#0@@0| Tclass._System.object?) (or (not (= |c#0@@0| null)) (not true))))
 :pattern ( ($Is refType |c#0@@0| Tclass._System.object))
 :pattern ( ($Is refType |c#0@@0| Tclass._System.object?))
)))
(assert (forall (($ly@@0 T@U) (|n#0@@0| Int) (|f#0@@4| T@U) ) (! (= (_module.__default.Sum ($LS $ly@@0) |n#0@@0| |f#0@@4|) (_module.__default.Sum $ly@@0 |n#0@@0| |f#0@@4|))
 :pattern ( (_module.__default.Sum ($LS $ly@@0) |n#0@@0| |f#0@@4|))
)))
(assert (forall ((f@@8 T@U) (t0@@12 T@U) (t1@@11 T@U) (t2@@0 T@U) (h@@5 T@U) ) (!  (=> ($IsGoodHeap h@@5) (= ($IsAlloc HandleTypeType f@@8 (Tclass._System.___hFunc2 t0@@12 t1@@11 t2@@0) h@@5) (forall ((bx0@@8 T@U) (bx1 T@U) ) (!  (=> (and (and (and ($IsBox bx0@@8 t0@@12) ($IsAllocBox bx0@@8 t0@@12 h@@5)) (and ($IsBox bx1 t1@@11) ($IsAllocBox bx1 t1@@11 h@@5))) (Requires2 t0@@12 t1@@11 t2@@0 h@@5 f@@8 bx0@@8 bx1)) (forall ((r@@1 T@U) ) (!  (=> (and (or (not (= r@@1 null)) (not true)) (|Set#IsMember| (Reads2 t0@@12 t1@@11 t2@@0 h@@5 f@@8 bx0@@8 bx1) ($Box refType r@@1))) (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h@@5 r@@1) alloc))))
 :pattern ( (|Set#IsMember| (Reads2 t0@@12 t1@@11 t2@@0 h@@5 f@@8 bx0@@8 bx1) ($Box refType r@@1)))
)))
 :pattern ( (Apply2 t0@@12 t1@@11 t2@@0 h@@5 f@@8 bx0@@8 bx1))
 :pattern ( (Reads2 t0@@12 t1@@11 t2@@0 h@@5 f@@8 bx0@@8 bx1))
))))
 :pattern ( ($IsAlloc HandleTypeType f@@8 (Tclass._System.___hFunc2 t0@@12 t1@@11 t2@@0) h@@5))
)))
(assert (forall ((|l#0@@4| T@U) (|l#1@@3| T@U) (|l#2@@3| T@U) (|l#3@@3| T@U) (|l#4@@3| T@U) (|l#5@@2| T@U) (|l#6@@2| Int) (|l#7@@2| T@U) (|l#8@@2| T@U) (|l#9@@0| T@U) (|l#10@@0| T@U) (|l#11@@0| T@U) (|l#12@@0| T@U) (|l#13@@0| T@U) (|$l#21#heap#0| T@U) (|$l#21#x#0| T@U) ) (! (= (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType (|lambda#688| |l#0@@4| |l#1@@3| |l#2@@3| |l#3@@3| |l#4@@3| |l#5@@2| |l#6@@2| |l#7@@2| |l#8@@2| |l#9@@0| |l#10@@0| |l#11@@0| |l#12@@0| |l#13@@0|) |$l#21#heap#0| |$l#21#x#0|) ($Box intType (int_2_U (+ (U_2_int ($Unbox intType (Apply2 |l#0@@4| |l#1@@3| |l#2@@3| |$l#21#heap#0| |l#3@@3| ($Box intType ($Unbox intType |$l#21#x#0|)) |l#4@@3|))) (_module.__default.Sum |l#5@@2| |l#6@@2| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| |l#7@@2| |l#8@@2| |l#9@@0| |l#10@@0| ($Box intType ($Unbox intType |$l#21#x#0|))) |l#11@@0| |l#12@@0|)) |l#13@@0|)))))))
 :pattern ( (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType (|lambda#688| |l#0@@4| |l#1@@3| |l#2@@3| |l#3@@3| |l#4@@3| |l#5@@2| |l#6@@2| |l#7@@2| |l#8@@2| |l#9@@0| |l#10@@0| |l#11@@0| |l#12@@0| |l#13@@0|) |$l#21#heap#0| |$l#21#x#0|))
)))
(assert (forall ((f@@9 T@U) (t0@@13 T@U) (t1@@12 T@U) (h@@6 T@U) ) (!  (=> (and ($IsGoodHeap h@@6) ($IsAlloc HandleTypeType f@@9 (Tclass._System.___hFunc1 t0@@13 t1@@12) h@@6)) (forall ((bx0@@9 T@U) ) (!  (=> (and ($IsAllocBox bx0@@9 t0@@13 h@@6) (Requires1 t0@@13 t1@@12 h@@6 f@@9 bx0@@9)) ($IsAllocBox (Apply1 t0@@13 t1@@12 h@@6 f@@9 bx0@@9) t1@@12 h@@6))
 :pattern ( (Apply1 t0@@13 t1@@12 h@@6 f@@9 bx0@@9))
)))
 :pattern ( ($IsAlloc HandleTypeType f@@9 (Tclass._System.___hFunc1 t0@@13 t1@@12) h@@6))
)))
(assert (forall ((|l#0@@5| Bool) (|$l#9#o#0| T@U) ) (! (= (U_2_bool (MapType1Select refType boolType (|lambda#4| |l#0@@5|) |$l#9#o#0|)) |l#0@@5|)
 :pattern ( (MapType1Select refType boolType (|lambda#4| |l#0@@5|) |$l#9#o#0|))
)))
(assert (forall ((|l#0@@6| T@U) (|$l#9#ly#0| T@U) ) (! (= (MapType1Select LayerTypeType HandleTypeType (|lambda#6| |l#0@@6|) |$l#9#ly#0|) |l#0@@6|)
 :pattern ( (MapType1Select LayerTypeType HandleTypeType (|lambda#6| |l#0@@6|) |$l#9#ly#0|))
)))
(assert (forall ((f@@10 T@U) (t0@@14 T@U) (t1@@13 T@U) (t2@@1 T@U) ) (! (= ($Is HandleTypeType f@@10 (Tclass._System.___hFunc2 t0@@14 t1@@13 t2@@1)) (forall ((h@@7 T@U) (bx0@@10 T@U) (bx1@@0 T@U) ) (!  (=> (and (and ($IsGoodHeap h@@7) (and ($IsBox bx0@@10 t0@@14) ($IsBox bx1@@0 t1@@13))) (Requires2 t0@@14 t1@@13 t2@@1 h@@7 f@@10 bx0@@10 bx1@@0)) ($IsBox (Apply2 t0@@14 t1@@13 t2@@1 h@@7 f@@10 bx0@@10 bx1@@0) t2@@1))
 :pattern ( (Apply2 t0@@14 t1@@13 t2@@1 h@@7 f@@10 bx0@@10 bx1@@0))
)))
 :pattern ( ($Is HandleTypeType f@@10 (Tclass._System.___hFunc2 t0@@14 t1@@13 t2@@1)))
)))
(assert (forall ((a T@U) (b T@U) ) (!  (=> (|Set#Equal| a b) (= a b))
 :pattern ( (|Set#Equal| a b))
)))
(assert (forall ((t0@@15 T@U) (t1@@14 T@U) (t2@@2 T@U) (heap@@2 T@U) (f@@11 T@U) (bx0@@11 T@U) (bx1@@1 T@U) ) (!  (=> (and ($IsGoodHeap heap@@2) (and (and ($IsBox bx0@@11 t0@@15) ($IsBox bx1@@1 t1@@14)) ($Is HandleTypeType f@@11 (Tclass._System.___hFunc2 t0@@15 t1@@14 t2@@2)))) (= (|Set#Equal| (Reads2 t0@@15 t1@@14 t2@@2 $OneHeap f@@11 bx0@@11 bx1@@1) |Set#Empty|) (|Set#Equal| (Reads2 t0@@15 t1@@14 t2@@2 heap@@2 f@@11 bx0@@11 bx1@@1) |Set#Empty|)))
 :pattern ( (Reads2 t0@@15 t1@@14 t2@@2 $OneHeap f@@11 bx0@@11 bx1@@1) ($IsGoodHeap heap@@2))
 :pattern ( (Reads2 t0@@15 t1@@14 t2@@2 heap@@2 f@@11 bx0@@11 bx1@@1))
)))
(assert (forall ((a@@0 T@U) (b@@0 T@U) (c T@U) ) (!  (=> (or (not (= a@@0 c)) (not true)) (=> (and ($HeapSucc a@@0 b@@0) ($HeapSucc b@@0 c)) ($HeapSucc a@@0 c)))
 :pattern ( ($HeapSucc a@@0 b@@0) ($HeapSucc b@@0 c))
)))
(assert (forall ((f@@12 T@U) (t0@@16 T@U) (t1@@15 T@U) ) (! (= ($Is HandleTypeType f@@12 (Tclass._System.___hFunc1 t0@@16 t1@@15)) (forall ((h@@8 T@U) (bx0@@12 T@U) ) (!  (=> (and (and ($IsGoodHeap h@@8) ($IsBox bx0@@12 t0@@16)) (Requires1 t0@@16 t1@@15 h@@8 f@@12 bx0@@12)) ($IsBox (Apply1 t0@@16 t1@@15 h@@8 f@@12 bx0@@12) t1@@15))
 :pattern ( (Apply1 t0@@16 t1@@15 h@@8 f@@12 bx0@@12))
)))
 :pattern ( ($Is HandleTypeType f@@12 (Tclass._System.___hFunc1 t0@@16 t1@@15)))
)))
(assert (forall ((f@@13 T@U) (t0@@17 T@U) (t1@@16 T@U) (t2@@3 T@U) (h@@9 T@U) ) (!  (=> (and ($IsGoodHeap h@@9) ($IsAlloc HandleTypeType f@@13 (Tclass._System.___hFunc2 t0@@17 t1@@16 t2@@3) h@@9)) (forall ((bx0@@13 T@U) (bx1@@2 T@U) ) (!  (=> (and (and ($IsAllocBox bx0@@13 t0@@17 h@@9) ($IsAllocBox bx1@@2 t1@@16 h@@9)) (Requires2 t0@@17 t1@@16 t2@@3 h@@9 f@@13 bx0@@13 bx1@@2)) ($IsAllocBox (Apply2 t0@@17 t1@@16 t2@@3 h@@9 f@@13 bx0@@13 bx1@@2) t2@@3 h@@9))
 :pattern ( (Apply2 t0@@17 t1@@16 t2@@3 h@@9 f@@13 bx0@@13 bx1@@2))
)))
 :pattern ( ($IsAlloc HandleTypeType f@@13 (Tclass._System.___hFunc2 t0@@17 t1@@16 t2@@3) h@@9))
)))
(assert (forall ((|l#0@@7| T@U) (|l#1@@4| T@U) (|l#2@@4| T@U) (|l#3@@4| T@U) (|l#4@@4| T@U) (|$l#62#heap#0| T@U) (|$l#62#w#0| T@U) ) (! (= (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType (|lambda#754| |l#0@@7| |l#1@@4| |l#2@@4| |l#3@@4| |l#4@@4|) |$l#62#heap#0| |$l#62#w#0|) ($Box intType ($Unbox intType (Apply2 |l#0@@7| |l#1@@4| |l#2@@4| |$l#62#heap#0| |l#3@@4| ($Box intType ($Unbox intType |$l#62#w#0|)) |l#4@@4|))))
 :pattern ( (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType (|lambda#754| |l#0@@7| |l#1@@4| |l#2@@4| |l#3@@4| |l#4@@4|) |$l#62#heap#0| |$l#62#w#0|))
)))
(assert (forall ((bx@@11 T@U) ) (!  (=> ($IsBox bx@@11 TInt) (and (= ($Box intType ($Unbox intType bx@@11)) bx@@11) ($Is intType ($Unbox intType bx@@11) TInt)))
 :pattern ( ($IsBox bx@@11 TInt))
)))
(assert (forall ((v@@2 T@U) (t@@2 T@U) (T@@3 T@T) ) (! (= ($IsBox ($Box T@@3 v@@2) t@@2) ($Is T@@3 v@@2 t@@2))
 :pattern ( ($IsBox ($Box T@@3 v@@2) t@@2))
)))
(assert (forall ((t0@@18 T@U) (t1@@17 T@U) (heap@@3 T@U) (h@@10 T@U) (r@@2 T@U) (rd@@1 T@U) (bx0@@14 T@U) ) (!  (=> (U_2_bool (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType boolType r@@2 heap@@3 bx0@@14)) (Requires1 t0@@18 t1@@17 heap@@3 (Handle1 h@@10 r@@2 rd@@1) bx0@@14))
 :pattern ( (Requires1 t0@@18 t1@@17 heap@@3 (Handle1 h@@10 r@@2 rd@@1) bx0@@14))
)))
(assert (forall ((v@@3 T@U) (t0@@19 T@U) (h@@11 T@U) ) (! (= ($IsAlloc SetType v@@3 (TSet t0@@19) h@@11) (forall ((bx@@12 T@U) ) (!  (=> (|Set#IsMember| v@@3 bx@@12) ($IsAllocBox bx@@12 t0@@19 h@@11))
 :pattern ( (|Set#IsMember| v@@3 bx@@12))
)))
 :pattern ( ($IsAlloc SetType v@@3 (TSet t0@@19) h@@11))
)))
(assert (forall ((|#$T0@@18| T@U) (|#$R@@18| T@U) ) (! (= (Tclass._System.___hFunc1_0 (Tclass._System.___hFunc1 |#$T0@@18| |#$R@@18|)) |#$T0@@18|)
 :pattern ( (Tclass._System.___hFunc1 |#$T0@@18| |#$R@@18|))
)))
(assert (forall ((|#$T0@@19| T@U) (|#$R@@19| T@U) ) (! (= (Tclass._System.___hFunc1_1 (Tclass._System.___hFunc1 |#$T0@@19| |#$R@@19|)) |#$R@@19|)
 :pattern ( (Tclass._System.___hFunc1 |#$T0@@19| |#$R@@19|))
)))
(assert (forall ((|#$T0@@20| T@U) (|#$R@@20| T@U) ) (! (= (Tclass._System.___hPartialFunc1_0 (Tclass._System.___hPartialFunc1 |#$T0@@20| |#$R@@20|)) |#$T0@@20|)
 :pattern ( (Tclass._System.___hPartialFunc1 |#$T0@@20| |#$R@@20|))
)))
(assert (forall ((|#$T0@@21| T@U) (|#$R@@21| T@U) ) (! (= (Tclass._System.___hPartialFunc1_1 (Tclass._System.___hPartialFunc1 |#$T0@@21| |#$R@@21|)) |#$R@@21|)
 :pattern ( (Tclass._System.___hPartialFunc1 |#$T0@@21| |#$R@@21|))
)))
(assert (forall ((|#$T0@@22| T@U) (|#$R@@22| T@U) ) (! (= (Tclass._System.___hTotalFunc1_0 (Tclass._System.___hTotalFunc1 |#$T0@@22| |#$R@@22|)) |#$T0@@22|)
 :pattern ( (Tclass._System.___hTotalFunc1 |#$T0@@22| |#$R@@22|))
)))
(assert (forall ((|#$T0@@23| T@U) (|#$R@@23| T@U) ) (! (= (Tclass._System.___hTotalFunc1_1 (Tclass._System.___hTotalFunc1 |#$T0@@23| |#$R@@23|)) |#$R@@23|)
 :pattern ( (Tclass._System.___hTotalFunc1 |#$T0@@23| |#$R@@23|))
)))
(assert (forall (($o@@0 T@U) ) (! ($Is refType $o@@0 Tclass._System.object?)
 :pattern ( ($Is refType $o@@0 Tclass._System.object?))
)))
(assert (forall ((t@@3 T@U) ) (! (= (Inv0_TSet (TSet t@@3)) t@@3)
 :pattern ( (TSet t@@3))
)))
(assert (forall ((t@@4 T@U) ) (! (= (Tag (TSet t@@4)) TagSet)
 :pattern ( (TSet t@@4))
)))
(assert (forall ((x@@5 T@U) (T@@4 T@T) ) (! (= ($Unbox T@@4 ($Box T@@4 x@@5)) x@@5)
 :pattern ( ($Box T@@4 x@@5))
)))
(assert (forall ((t0@@20 T@U) (t1@@18 T@U) (t2@@4 T@U) (heap@@4 T@U) (f@@14 T@U) (bx0@@15 T@U) (bx1@@3 T@U) ) (!  (=> (and (and ($IsGoodHeap heap@@4) (and (and ($IsBox bx0@@15 t0@@20) ($IsBox bx1@@3 t1@@18)) ($Is HandleTypeType f@@14 (Tclass._System.___hFunc2 t0@@20 t1@@18 t2@@4)))) (|Set#Equal| (Reads2 t0@@20 t1@@18 t2@@4 $OneHeap f@@14 bx0@@15 bx1@@3) |Set#Empty|)) (= (Requires2 t0@@20 t1@@18 t2@@4 $OneHeap f@@14 bx0@@15 bx1@@3) (Requires2 t0@@20 t1@@18 t2@@4 heap@@4 f@@14 bx0@@15 bx1@@3)))
 :pattern ( (Requires2 t0@@20 t1@@18 t2@@4 $OneHeap f@@14 bx0@@15 bx1@@3) ($IsGoodHeap heap@@4))
 :pattern ( (Requires2 t0@@20 t1@@18 t2@@4 heap@@4 f@@14 bx0@@15 bx1@@3))
)))
(assert (forall ((|#$T0@@24| T@U) (|#$R@@24| T@U) (|f#0@@5| T@U) ) (! (= ($Is HandleTypeType |f#0@@5| (Tclass._System.___hTotalFunc1 |#$T0@@24| |#$R@@24|))  (and ($Is HandleTypeType |f#0@@5| (Tclass._System.___hPartialFunc1 |#$T0@@24| |#$R@@24|)) (forall ((|x0#0@@1| T@U) )  (=> ($IsBox |x0#0@@1| |#$T0@@24|) (Requires1 |#$T0@@24| |#$R@@24| $OneHeap |f#0@@5| |x0#0@@1|)))))
 :pattern ( ($Is HandleTypeType |f#0@@5| (Tclass._System.___hTotalFunc1 |#$T0@@24| |#$R@@24|)))
)))
(assert (forall ((f@@15 T@U) (t0@@21 T@U) (t1@@19 T@U) (t2@@5 T@U) (u0@@3 T@U) (u1@@3 T@U) (u2@@1 T@U) ) (!  (=> (and (and (and ($Is HandleTypeType f@@15 (Tclass._System.___hFunc2 t0@@21 t1@@19 t2@@5)) (forall ((bx@@13 T@U) ) (!  (=> ($IsBox bx@@13 u0@@3) ($IsBox bx@@13 t0@@21))
 :pattern ( ($IsBox bx@@13 u0@@3))
 :pattern ( ($IsBox bx@@13 t0@@21))
))) (forall ((bx@@14 T@U) ) (!  (=> ($IsBox bx@@14 u1@@3) ($IsBox bx@@14 t1@@19))
 :pattern ( ($IsBox bx@@14 u1@@3))
 :pattern ( ($IsBox bx@@14 t1@@19))
))) (forall ((bx@@15 T@U) ) (!  (=> ($IsBox bx@@15 t2@@5) ($IsBox bx@@15 u2@@1))
 :pattern ( ($IsBox bx@@15 t2@@5))
 :pattern ( ($IsBox bx@@15 u2@@1))
))) ($Is HandleTypeType f@@15 (Tclass._System.___hFunc2 u0@@3 u1@@3 u2@@1)))
 :pattern ( ($Is HandleTypeType f@@15 (Tclass._System.___hFunc2 t0@@21 t1@@19 t2@@5)) ($Is HandleTypeType f@@15 (Tclass._System.___hFunc2 u0@@3 u1@@3 u2@@1)))
)))
(assert (forall ((|#$T0@@25| T@U) (|#$R@@25| T@U) (|f#0@@6| T@U) ) (! (= ($Is HandleTypeType |f#0@@6| (Tclass._System.___hPartialFunc1 |#$T0@@25| |#$R@@25|))  (and ($Is HandleTypeType |f#0@@6| (Tclass._System.___hFunc1 |#$T0@@25| |#$R@@25|)) (forall ((|x0#0@@2| T@U) )  (=> ($IsBox |x0#0@@2| |#$T0@@25|) (|Set#Equal| (Reads1 |#$T0@@25| |#$R@@25| $OneHeap |f#0@@6| |x0#0@@2|) |Set#Empty|)))))
 :pattern ( ($Is HandleTypeType |f#0@@6| (Tclass._System.___hPartialFunc1 |#$T0@@25| |#$R@@25|)))
)))
(assert (forall ((f@@16 T@U) (ly@@0 T@U) (A@@0 T@T) ) (! (= (AtLayer A@@0 f@@16 ($LS ly@@0)) (AtLayer A@@0 f@@16 ly@@0))
 :pattern ( (AtLayer A@@0 f@@16 ($LS ly@@0)))
)))
(assert (forall ((f@@17 T@U) (t0@@22 T@U) (t1@@20 T@U) (h@@12 T@U) ) (!  (=> ($IsGoodHeap h@@12) (= ($IsAlloc HandleTypeType f@@17 (Tclass._System.___hFunc1 t0@@22 t1@@20) h@@12) (forall ((bx0@@16 T@U) ) (!  (=> (and (and ($IsBox bx0@@16 t0@@22) ($IsAllocBox bx0@@16 t0@@22 h@@12)) (Requires1 t0@@22 t1@@20 h@@12 f@@17 bx0@@16)) (forall ((r@@3 T@U) ) (!  (=> (and (or (not (= r@@3 null)) (not true)) (|Set#IsMember| (Reads1 t0@@22 t1@@20 h@@12 f@@17 bx0@@16) ($Box refType r@@3))) (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h@@12 r@@3) alloc))))
 :pattern ( (|Set#IsMember| (Reads1 t0@@22 t1@@20 h@@12 f@@17 bx0@@16) ($Box refType r@@3)))
)))
 :pattern ( (Apply1 t0@@22 t1@@20 h@@12 f@@17 bx0@@16))
 :pattern ( (Reads1 t0@@22 t1@@20 h@@12 f@@17 bx0@@16))
))))
 :pattern ( ($IsAlloc HandleTypeType f@@17 (Tclass._System.___hFunc1 t0@@22 t1@@20) h@@12))
)))
(assert (forall ((|#$T0@@26| T@U) (|#$R@@26| T@U) (bx@@16 T@U) ) (!  (=> ($IsBox bx@@16 (Tclass._System.___hFunc1 |#$T0@@26| |#$R@@26|)) (and (= ($Box HandleTypeType ($Unbox HandleTypeType bx@@16)) bx@@16) ($Is HandleTypeType ($Unbox HandleTypeType bx@@16) (Tclass._System.___hFunc1 |#$T0@@26| |#$R@@26|))))
 :pattern ( ($IsBox bx@@16 (Tclass._System.___hFunc1 |#$T0@@26| |#$R@@26|)))
)))
(assert (forall ((|#$T0@@27| T@U) (|#$R@@27| T@U) (bx@@17 T@U) ) (!  (=> ($IsBox bx@@17 (Tclass._System.___hPartialFunc1 |#$T0@@27| |#$R@@27|)) (and (= ($Box HandleTypeType ($Unbox HandleTypeType bx@@17)) bx@@17) ($Is HandleTypeType ($Unbox HandleTypeType bx@@17) (Tclass._System.___hPartialFunc1 |#$T0@@27| |#$R@@27|))))
 :pattern ( ($IsBox bx@@17 (Tclass._System.___hPartialFunc1 |#$T0@@27| |#$R@@27|)))
)))
(assert (forall ((|#$T0@@28| T@U) (|#$R@@28| T@U) (bx@@18 T@U) ) (!  (=> ($IsBox bx@@18 (Tclass._System.___hTotalFunc1 |#$T0@@28| |#$R@@28|)) (and (= ($Box HandleTypeType ($Unbox HandleTypeType bx@@18)) bx@@18) ($Is HandleTypeType ($Unbox HandleTypeType bx@@18) (Tclass._System.___hTotalFunc1 |#$T0@@28| |#$R@@28|))))
 :pattern ( ($IsBox bx@@18 (Tclass._System.___hTotalFunc1 |#$T0@@28| |#$R@@28|)))
)))
(assert (forall ((|l#0@@8| T@U) (|l#1@@5| T@U) (|l#2@@5| T@U) (|l#3@@5| Bool) ($o@@1 T@U) ($f T@U) ) (! (= (U_2_bool (MapType0Select refType FieldType boolType (|lambda#0| |l#0@@8| |l#1@@5| |l#2@@5| |l#3@@5|) $o@@1 $f))  (=> (and (or (not (= $o@@1 |l#0@@8|)) (not true)) (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) |l#1@@5| $o@@1) |l#2@@5|)))) |l#3@@5|))
 :pattern ( (MapType0Select refType FieldType boolType (|lambda#0| |l#0@@8| |l#1@@5| |l#2@@5| |l#3@@5|) $o@@1 $f))
)))
(assert (forall ((|#$T0@@29| T@U) (|#$T1@@16| T@U) (|#$R@@29| T@U) (|f#0@@7| T@U) ($h@@4 T@U) ) (! (= ($IsAlloc HandleTypeType |f#0@@7| (Tclass._System.___hPartialFunc2 |#$T0@@29| |#$T1@@16| |#$R@@29|) $h@@4) ($IsAlloc HandleTypeType |f#0@@7| (Tclass._System.___hFunc2 |#$T0@@29| |#$T1@@16| |#$R@@29|) $h@@4))
 :pattern ( ($IsAlloc HandleTypeType |f#0@@7| (Tclass._System.___hPartialFunc2 |#$T0@@29| |#$T1@@16| |#$R@@29|) $h@@4))
)))
(assert (forall ((|#$T0@@30| T@U) (|#$T1@@17| T@U) (|#$R@@30| T@U) (|f#0@@8| T@U) ($h@@5 T@U) ) (! (= ($IsAlloc HandleTypeType |f#0@@8| (Tclass._System.___hTotalFunc2 |#$T0@@30| |#$T1@@17| |#$R@@30|) $h@@5) ($IsAlloc HandleTypeType |f#0@@8| (Tclass._System.___hPartialFunc2 |#$T0@@30| |#$T1@@17| |#$R@@30|) $h@@5))
 :pattern ( ($IsAlloc HandleTypeType |f#0@@8| (Tclass._System.___hTotalFunc2 |#$T0@@30| |#$T1@@17| |#$R@@30|) $h@@5))
)))
(assert (forall ((|l#0@@9| T@U) (|l#1@@6| T@U) (|l#2@@6| T@U) (|l#3@@6| T@U) (|l#4@@5| T@U) (|l#5@@3| T@U) (|l#6@@3| T@U) (|l#7@@3| T@U) (|$l#61#ly#0| T@U) ) (! (= (MapType1Select LayerTypeType HandleTypeType (|lambda#773| |l#0@@9| |l#1@@6| |l#2@@6| |l#3@@6| |l#4@@5| |l#5@@3| |l#6@@3| |l#7@@3|) |$l#61#ly#0|) (Handle1 (|lambda#170| |l#0@@9| |l#1@@6| (Lit HandleTypeType (AtLayer HandleTypeType |l#2@@6| |$l#61#ly#0|)) |l#3@@6| |l#4@@5| (Lit HandleTypeType (AtLayer HandleTypeType |l#5@@3| |$l#61#ly#0|))) |l#6@@3| |l#7@@3|))
 :pattern ( (MapType1Select LayerTypeType HandleTypeType (|lambda#773| |l#0@@9| |l#1@@6| |l#2@@6| |l#3@@6| |l#4@@5| |l#5@@3| |l#6@@3| |l#7@@3|) |$l#61#ly#0|))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($ly@@1 T@U) ($Heap@@0 T@U) (|n#0@@1| Int) (|f#0@@9| T@U) ) (!  (=> (or (|_module.__default.Sum#canCall| (LitInt |n#0@@1|) (Lit HandleTypeType |f#0@@9|)) (and (< 0 $FunctionContextHeight) (and (and ($IsGoodHeap $Heap@@0) (<= (LitInt 0) |n#0@@1|)) ($Is HandleTypeType |f#0@@9| (Tclass._System.___hTotalFunc1 TInt TInt))))) (and (=> (or (not (= (LitInt |n#0@@1|) (LitInt 0))) (not true)) (|_module.__default.Sum#canCall| (LitInt (- |n#0@@1| 1)) (Lit HandleTypeType |f#0@@9|))) (= (_module.__default.Sum ($LS $ly@@1) (LitInt |n#0@@1|) (Lit HandleTypeType |f#0@@9|)) (ite (= (LitInt |n#0@@1|) (LitInt 0)) 0 (+ (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@0 (Lit HandleTypeType |f#0@@9|) ($Box intType (int_2_U (LitInt (- |n#0@@1| 1))))))) (_module.__default.Sum ($LS $ly@@1) (LitInt (- |n#0@@1| 1)) (Lit HandleTypeType |f#0@@9|)))))))
 :weight 3
 :pattern ( (_module.__default.Sum ($LS $ly@@1) (LitInt |n#0@@1|) (Lit HandleTypeType |f#0@@9|)) ($IsGoodHeap $Heap@@0))
))))
(assert (forall ((|#$T0@@31| T@U) (|#$R@@31| T@U) ) (!  (and (= (Tag (Tclass._System.___hFunc1 |#$T0@@31| |#$R@@31|)) Tagclass._System.___hFunc1) (= (TagFamily (Tclass._System.___hFunc1 |#$T0@@31| |#$R@@31|)) |tytagFamily$_#Func1|))
 :pattern ( (Tclass._System.___hFunc1 |#$T0@@31| |#$R@@31|))
)))
(assert (forall ((|#$T0@@32| T@U) (|#$R@@32| T@U) ) (!  (and (= (Tag (Tclass._System.___hPartialFunc1 |#$T0@@32| |#$R@@32|)) Tagclass._System.___hPartialFunc1) (= (TagFamily (Tclass._System.___hPartialFunc1 |#$T0@@32| |#$R@@32|)) |tytagFamily$_#PartialFunc1|))
 :pattern ( (Tclass._System.___hPartialFunc1 |#$T0@@32| |#$R@@32|))
)))
(assert (forall ((|#$T0@@33| T@U) (|#$R@@33| T@U) ) (!  (and (= (Tag (Tclass._System.___hTotalFunc1 |#$T0@@33| |#$R@@33|)) Tagclass._System.___hTotalFunc1) (= (TagFamily (Tclass._System.___hTotalFunc1 |#$T0@@33| |#$R@@33|)) |tytagFamily$_#TotalFunc1|))
 :pattern ( (Tclass._System.___hTotalFunc1 |#$T0@@33| |#$R@@33|))
)))
(assert (forall ((t0@@23 T@U) (t1@@21 T@U) (heap@@5 T@U) (f@@18 T@U) (bx0@@17 T@U) ) (!  (=> (and (and ($IsGoodHeap heap@@5) (and ($IsBox bx0@@17 t0@@23) ($Is HandleTypeType f@@18 (Tclass._System.___hFunc1 t0@@23 t1@@21)))) (|Set#Equal| (Reads1 t0@@23 t1@@21 $OneHeap f@@18 bx0@@17) |Set#Empty|)) (= (Requires1 t0@@23 t1@@21 $OneHeap f@@18 bx0@@17) (Requires1 t0@@23 t1@@21 heap@@5 f@@18 bx0@@17)))
 :pattern ( (Requires1 t0@@23 t1@@21 $OneHeap f@@18 bx0@@17) ($IsGoodHeap heap@@5))
 :pattern ( (Requires1 t0@@23 t1@@21 heap@@5 f@@18 bx0@@17))
)))
(assert (forall ((t0@@24 T@U) (t1@@22 T@U) (t2@@6 T@U) (h0@@5 T@U) (h1@@5 T@U) (f@@19 T@U) (bx0@@18 T@U) (bx1@@4 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@5 h1@@5) (and ($IsGoodHeap h0@@5) ($IsGoodHeap h1@@5))) (and (and ($IsBox bx0@@18 t0@@24) ($IsBox bx1@@4 t1@@22)) ($Is HandleTypeType f@@19 (Tclass._System.___hFunc2 t0@@24 t1@@22 t2@@6)))) (forall ((o@@7 T@U) (fld@@5 T@U) )  (=> (and (or (not (= o@@7 null)) (not true)) (|Set#IsMember| (Reads2 t0@@24 t1@@22 t2@@6 h0@@5 f@@19 bx0@@18 bx1@@4) ($Box refType o@@7))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@5 o@@7) fld@@5) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@5 o@@7) fld@@5))))) (= (Requires2 t0@@24 t1@@22 t2@@6 h0@@5 f@@19 bx0@@18 bx1@@4) (Requires2 t0@@24 t1@@22 t2@@6 h1@@5 f@@19 bx0@@18 bx1@@4)))
 :pattern ( ($HeapSucc h0@@5 h1@@5) (Requires2 t0@@24 t1@@22 t2@@6 h1@@5 f@@19 bx0@@18 bx1@@4))
)))
(assert (forall ((t0@@25 T@U) (t1@@23 T@U) (t2@@7 T@U) (h0@@6 T@U) (h1@@6 T@U) (f@@20 T@U) (bx0@@19 T@U) (bx1@@5 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@6 h1@@6) (and ($IsGoodHeap h0@@6) ($IsGoodHeap h1@@6))) (and (and ($IsBox bx0@@19 t0@@25) ($IsBox bx1@@5 t1@@23)) ($Is HandleTypeType f@@20 (Tclass._System.___hFunc2 t0@@25 t1@@23 t2@@7)))) (forall ((o@@8 T@U) (fld@@6 T@U) )  (=> (and (or (not (= o@@8 null)) (not true)) (|Set#IsMember| (Reads2 t0@@25 t1@@23 t2@@7 h1@@6 f@@20 bx0@@19 bx1@@5) ($Box refType o@@8))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@6 o@@8) fld@@6) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@6 o@@8) fld@@6))))) (= (Requires2 t0@@25 t1@@23 t2@@7 h0@@6 f@@20 bx0@@19 bx1@@5) (Requires2 t0@@25 t1@@23 t2@@7 h1@@6 f@@20 bx0@@19 bx1@@5)))
 :pattern ( ($HeapSucc h0@@6 h1@@6) (Requires2 t0@@25 t1@@23 t2@@7 h1@@6 f@@20 bx0@@19 bx1@@5))
)))
(assert (forall ((bx@@19 T@U) (t@@5 T@U) ) (!  (=> ($IsBox bx@@19 (TSet t@@5)) (and (= ($Box SetType ($Unbox SetType bx@@19)) bx@@19) ($Is SetType ($Unbox SetType bx@@19) (TSet t@@5))))
 :pattern ( ($IsBox bx@@19 (TSet t@@5)))
)))
(assert (= (Tag Tclass._System.nat) Tagclass._System.nat))
(assert (= (TagFamily Tclass._System.nat) tytagFamily$nat))
(assert (= (Tag Tclass._System.object?) Tagclass._System.object?))
(assert (= (TagFamily Tclass._System.object?) tytagFamily$object))
(assert (= (Tag Tclass._System.object) Tagclass._System.object))
(assert (= (TagFamily Tclass._System.object) tytagFamily$object))
(assert (forall ((s@@0 T@U) ) (! ($Is SetType (SetRef_to_SetBox s@@0) (TSet Tclass._System.object?))
 :pattern ( (SetRef_to_SetBox s@@0))
)))
(assert (forall ((a@@1 T@U) (b@@1 T@U) ) (! (= (|Set#Equal| a@@1 b@@1) (forall ((o@@9 T@U) ) (! (= (|Set#IsMember| a@@1 o@@9) (|Set#IsMember| b@@1 o@@9))
 :pattern ( (|Set#IsMember| a@@1 o@@9))
 :pattern ( (|Set#IsMember| b@@1 o@@9))
)))
 :pattern ( (|Set#Equal| a@@1 b@@1))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($ly@@2 T@U) ($Heap@@1 T@U) (|n#0@@2| Int) (|f#0@@10| T@U) ) (!  (=> (or (|_module.__default.Sum#canCall| |n#0@@2| |f#0@@10|) (and (< 0 $FunctionContextHeight) (and (and ($IsGoodHeap $Heap@@1) (<= (LitInt 0) |n#0@@2|)) ($Is HandleTypeType |f#0@@10| (Tclass._System.___hTotalFunc1 TInt TInt))))) (and (=> (or (not (= |n#0@@2| (LitInt 0))) (not true)) (|_module.__default.Sum#canCall| (- |n#0@@2| 1) |f#0@@10|)) (= (_module.__default.Sum ($LS $ly@@2) |n#0@@2| |f#0@@10|) (ite (= |n#0@@2| (LitInt 0)) 0 (+ (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@1 |f#0@@10| ($Box intType (int_2_U (- |n#0@@2| 1)))))) (_module.__default.Sum $ly@@2 (- |n#0@@2| 1) |f#0@@10|))))))
 :pattern ( (_module.__default.Sum ($LS $ly@@2) |n#0@@2| |f#0@@10|) ($IsGoodHeap $Heap@@1))
))))
(assert (forall ((t0@@26 T@U) (t1@@24 T@U) (t2@@8 T@U) (h0@@7 T@U) (h1@@7 T@U) (f@@21 T@U) (bx0@@20 T@U) (bx1@@6 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@7 h1@@7) (and ($IsGoodHeap h0@@7) ($IsGoodHeap h1@@7))) (and (and ($IsBox bx0@@20 t0@@26) ($IsBox bx1@@6 t1@@24)) ($Is HandleTypeType f@@21 (Tclass._System.___hFunc2 t0@@26 t1@@24 t2@@8)))) (forall ((o@@10 T@U) (fld@@7 T@U) )  (=> (and (or (not (= o@@10 null)) (not true)) (|Set#IsMember| (Reads2 t0@@26 t1@@24 t2@@8 h0@@7 f@@21 bx0@@20 bx1@@6) ($Box refType o@@10))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@7 o@@10) fld@@7) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@7 o@@10) fld@@7))))) (= (Reads2 t0@@26 t1@@24 t2@@8 h0@@7 f@@21 bx0@@20 bx1@@6) (Reads2 t0@@26 t1@@24 t2@@8 h1@@7 f@@21 bx0@@20 bx1@@6)))
 :pattern ( ($HeapSucc h0@@7 h1@@7) (Reads2 t0@@26 t1@@24 t2@@8 h1@@7 f@@21 bx0@@20 bx1@@6))
)))
(assert (forall ((t0@@27 T@U) (t1@@25 T@U) (t2@@9 T@U) (h0@@8 T@U) (h1@@8 T@U) (f@@22 T@U) (bx0@@21 T@U) (bx1@@7 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@8 h1@@8) (and ($IsGoodHeap h0@@8) ($IsGoodHeap h1@@8))) (and (and ($IsBox bx0@@21 t0@@27) ($IsBox bx1@@7 t1@@25)) ($Is HandleTypeType f@@22 (Tclass._System.___hFunc2 t0@@27 t1@@25 t2@@9)))) (forall ((o@@11 T@U) (fld@@8 T@U) )  (=> (and (or (not (= o@@11 null)) (not true)) (|Set#IsMember| (Reads2 t0@@27 t1@@25 t2@@9 h1@@8 f@@22 bx0@@21 bx1@@7) ($Box refType o@@11))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@8 o@@11) fld@@8) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@8 o@@11) fld@@8))))) (= (Reads2 t0@@27 t1@@25 t2@@9 h0@@8 f@@22 bx0@@21 bx1@@7) (Reads2 t0@@27 t1@@25 t2@@9 h1@@8 f@@22 bx0@@21 bx1@@7)))
 :pattern ( ($HeapSucc h0@@8 h1@@8) (Reads2 t0@@27 t1@@25 t2@@9 h1@@8 f@@22 bx0@@21 bx1@@7))
)))
(assert (forall ((t0@@28 T@U) (t1@@26 T@U) (t2@@10 T@U) (h0@@9 T@U) (h1@@9 T@U) (f@@23 T@U) (bx0@@22 T@U) (bx1@@8 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@9 h1@@9) (and ($IsGoodHeap h0@@9) ($IsGoodHeap h1@@9))) (and (and ($IsBox bx0@@22 t0@@28) ($IsBox bx1@@8 t1@@26)) ($Is HandleTypeType f@@23 (Tclass._System.___hFunc2 t0@@28 t1@@26 t2@@10)))) (forall ((o@@12 T@U) (fld@@9 T@U) )  (=> (and (or (not (= o@@12 null)) (not true)) (|Set#IsMember| (Reads2 t0@@28 t1@@26 t2@@10 h0@@9 f@@23 bx0@@22 bx1@@8) ($Box refType o@@12))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@9 o@@12) fld@@9) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@9 o@@12) fld@@9))))) (= (Apply2 t0@@28 t1@@26 t2@@10 h0@@9 f@@23 bx0@@22 bx1@@8) (Apply2 t0@@28 t1@@26 t2@@10 h1@@9 f@@23 bx0@@22 bx1@@8)))
 :pattern ( ($HeapSucc h0@@9 h1@@9) (Apply2 t0@@28 t1@@26 t2@@10 h1@@9 f@@23 bx0@@22 bx1@@8))
)))
(assert (forall ((t0@@29 T@U) (t1@@27 T@U) (t2@@11 T@U) (h0@@10 T@U) (h1@@10 T@U) (f@@24 T@U) (bx0@@23 T@U) (bx1@@9 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@10 h1@@10) (and ($IsGoodHeap h0@@10) ($IsGoodHeap h1@@10))) (and (and ($IsBox bx0@@23 t0@@29) ($IsBox bx1@@9 t1@@27)) ($Is HandleTypeType f@@24 (Tclass._System.___hFunc2 t0@@29 t1@@27 t2@@11)))) (forall ((o@@13 T@U) (fld@@10 T@U) )  (=> (and (or (not (= o@@13 null)) (not true)) (|Set#IsMember| (Reads2 t0@@29 t1@@27 t2@@11 h1@@10 f@@24 bx0@@23 bx1@@9) ($Box refType o@@13))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@10 o@@13) fld@@10) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@10 o@@13) fld@@10))))) (= (Apply2 t0@@29 t1@@27 t2@@11 h0@@10 f@@24 bx0@@23 bx1@@9) (Apply2 t0@@29 t1@@27 t2@@11 h1@@10 f@@24 bx0@@23 bx1@@9)))
 :pattern ( ($HeapSucc h0@@10 h1@@10) (Apply2 t0@@29 t1@@27 t2@@11 h1@@10 f@@24 bx0@@23 bx1@@9))
)))
(assert (forall ((x@@6 Int) ) (! (= ($Box intType (int_2_U (LitInt x@@6))) (Lit BoxType ($Box intType (int_2_U x@@6))))
 :pattern ( ($Box intType (int_2_U (LitInt x@@6))))
)))
(assert (forall ((x@@7 T@U) (T@@5 T@T) ) (! (= ($Box T@@5 (Lit T@@5 x@@7)) (Lit BoxType ($Box T@@5 x@@7)))
 :pattern ( ($Box T@@5 (Lit T@@5 x@@7)))
)))
(assert (forall ((|l#0@@10| T@U) (|l#1@@7| T@U) (|l#2@@7| T@U) (|l#3@@7| T@U) (|l#4@@6| T@U) (|l#5@@4| T@U) (|$l#5#heap#0| T@U) (|$l#5#x#0| T@U) ) (! (= (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType (|lambda#170| |l#0@@10| |l#1@@7| |l#2@@7| |l#3@@7| |l#4@@6| |l#5@@4|) |$l#5#heap#0| |$l#5#x#0|) ($Box intType (int_2_U (+ (U_2_int ($Unbox intType (Apply1 |l#0@@10| |l#1@@7| |$l#5#heap#0| |l#2@@7| ($Box intType ($Unbox intType |$l#5#x#0|))))) (U_2_int ($Unbox intType (Apply1 |l#3@@7| |l#4@@6| |$l#5#heap#0| |l#5@@4| ($Box intType ($Unbox intType |$l#5#x#0|)))))))))
 :pattern ( (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType (|lambda#170| |l#0@@10| |l#1@@7| |l#2@@7| |l#3@@7| |l#4@@6| |l#5@@4|) |$l#5#heap#0| |$l#5#x#0|))
)))
(assert (forall ((h@@13 T@U) (v@@4 T@U) ) (! ($IsAlloc intType v@@4 TInt h@@13)
 :pattern ( ($IsAlloc intType v@@4 TInt h@@13))
)))
(assert (forall ((|l#0@@11| T@U) (|$l#9#heap#0@@0| T@U) (|$l#9#x#0@@0| T@U) ) (! (= (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType SetType (|lambda#5| |l#0@@11|) |$l#9#heap#0@@0| |$l#9#x#0@@0|) |l#0@@11|)
 :pattern ( (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType SetType (|lambda#5| |l#0@@11|) |$l#9#heap#0@@0| |$l#9#x#0@@0|))
)))
(assert (forall ((v@@5 T@U) ) (! ($Is intType v@@5 TInt)
 :pattern ( ($Is intType v@@5 TInt))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun |$lambdaHeap#6@0| () T@U)
(declare-fun $Heap@@2 () T@U)
(declare-fun |$lambdaHeap#8@0| () T@U)
(declare-fun |$lambdaHeap#7@0| () T@U)
(declare-fun |$_Frame#l7@0| () T@U)
(declare-fun |n'#0| () Int)
(declare-fun |$lambdaHeap#0_1@0| () T@U)
(declare-fun |$lambdaHeap#0_0@0| () T@U)
(declare-fun |$_Frame#l0_0@0| () T@U)
(declare-fun |n#0@@3| () Int)
(declare-fun |$lambdaHeap#0_9_1@0| () T@U)
(declare-fun |$lambdaHeap#0_9_0@0| () T@U)
(declare-fun |$_Frame#l0_9_0@0| () T@U)
(declare-fun |$lambdaHeap#0_9_3@0| () T@U)
(declare-fun |$lambdaHeap#0_9_2@0| () T@U)
(declare-fun |##f#0_9_2@0| () T@U)
(declare-fun |g#0| () T@U)
(declare-fun |x#0_9_1@0| () Int)
(declare-fun $LZ () T@U)
(declare-fun |lambdaResult#0_9_2| () Int)
(declare-fun |$_Frame#l0_9_2@0| () T@U)
(declare-fun |$lambdaHeap#0_9_5@0| () T@U)
(declare-fun |$lambdaHeap#0_9_4@0| () T@U)
(declare-fun |$_Frame#l0_9_4@0| () T@U)
(declare-fun |##f#0_9_3@0| () T@U)
(declare-fun |##f#0_9_0@0| () T@U)
(declare-fun |$lambdaHeap#0_7_0@0| () T@U)
(declare-fun |$lambdaHeap#0_7_2@0| () T@U)
(declare-fun |$lambdaHeap#0_7_1@0| () T@U)
(declare-fun |$_Frame#l0_7_1@0| () T@U)
(declare-fun |y#0_7_2@0| () Int)
(declare-fun |$_Frame#l0_7_3@0| () T@U)
(declare-fun |$lambdaHeap#0_7_3@0| () T@U)
(declare-fun |lambdaResult#0_7_3| () Int)
(declare-fun |$lambdaHeap#0_7_4@0| () T@U)
(declare-fun |$lambdaHeap#0_7_6@0| () T@U)
(declare-fun |$lambdaHeap#0_7_5@0| () T@U)
(declare-fun |$_Frame#l0_7_5@0| () T@U)
(declare-fun |##f#0_7_4@0| () T@U)
(declare-fun |##f#0_7_3@0| () T@U)
(declare-fun |##f#0_7_1@0| () T@U)
(declare-fun |##f#0_7_0@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0@0| () T@U)
(declare-fun |$lambdaHeap#0_5_2@0| () T@U)
(declare-fun |$lambdaHeap#0_5_1@0| () T@U)
(declare-fun |$_Frame#l0_5_1@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0_2_0@0| () T@U)
(declare-fun |y#0_5_0_0_2_1@0| () Int)
(declare-fun |$_Frame#l0_5_0_0_2_1@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0_2_1@0| () T@U)
(declare-fun |lambdaResult#0_5_0_0_2_1| () Int)
(declare-fun |i#0_5_0_0@0| () Int)
(declare-fun |$lambdaHeap#0_5_0_0_2_2@0| () T@U)
(declare-fun |##f#0_5_0_0_2_1@0| () T@U)
(declare-fun |##f#0_5_0_0_2_0@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0_0_0@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0_0_2@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0_0_1@0| () T@U)
(declare-fun |$_Frame#l0_5_0_0_0_1@0| () T@U)
(declare-fun $Heap@4 () T@U)
(declare-fun |##f#0_5_0_0_0_0@0| () T@U)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun |y#0_5_0_0_1_0@0| () Int)
(declare-fun |$_Frame#l0_5_0_0_1_0@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0_1_0@0| () T@U)
(declare-fun |lambdaResult#0_5_0_0_1_0| () Int)
(declare-fun |$lambdaHeap#0_5_0_0_1_1@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0_1_2@0| () T@U)
(declare-fun |##f#0_5_0_0_1_1@0| () T@U)
(declare-fun |##f#0_5_0_0_1_0@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0_3_1@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0_3_0@0| () T@U)
(declare-fun |$_Frame#l0_5_0_0_3_0@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0_3_2@0| () T@U)
(declare-fun $Heap@5 () T@U)
(declare-fun |##f#0_5_0_0_3_1@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0_1@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0_0@0| () T@U)
(declare-fun |$_Frame#l0_5_0_0_0@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_1@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_0@0| () T@U)
(declare-fun |$_Frame#l0_5_0_0@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_3@0| () T@U)
(declare-fun |$lambdaHeap#0_5_0_2@0| () T@U)
(declare-fun |$_Frame#l0_5_0_2@0| () T@U)
(declare-fun |$lambdaHeap#0_5_4@0| () T@U)
(declare-fun |$lambdaHeap#0_5_3@0| () T@U)
(declare-fun |$_Frame#l0_5_3@0| () T@U)
(declare-fun |$lambdaHeap#0_5_6@0| () T@U)
(declare-fun |$lambdaHeap#0_5_5@0| () T@U)
(declare-fun |$_Frame#l0_5_5@0| () T@U)
(declare-fun |$lambdaHeap#0_5_7@0| () T@U)
(declare-fun $Heap@3 () T@U)
(declare-fun |$lambdaHeap#0_5_9@0| () T@U)
(declare-fun |$lambdaHeap#0_5_8@0| () T@U)
(declare-fun |$_Frame#l0_5_8@0| () T@U)
(declare-fun |##f#0_5_6@0| () T@U)
(declare-fun |##f#0_5_5@0| () T@U)
(declare-fun |g##0_5_0@0| () T@U)
(declare-fun |f##0_5_0@0| () T@U)
(declare-fun |##f#0_5_1@0| () T@U)
(declare-fun |##f#0_5_0@0| () T@U)
(declare-fun |$lambdaHeap#0_4_0@0| () T@U)
(declare-fun |$lambdaHeap#0_4_2@0| () T@U)
(declare-fun |$lambdaHeap#0_4_1@0| () T@U)
(declare-fun |$_Frame#l0_4_1@0| () T@U)
(declare-fun |$lambdaHeap#0_4_3@0| () T@U)
(declare-fun $Heap@2 () T@U)
(declare-fun |$lambdaHeap#0_4_5@0| () T@U)
(declare-fun |$lambdaHeap#0_4_4@0| () T@U)
(declare-fun |$lambdaHeap#0_4_7@0| () T@U)
(declare-fun |$lambdaHeap#0_4_6@0| () T@U)
(declare-fun |$_Frame#l0_4_6@0| () T@U)
(declare-fun |$_Frame#l0_4_4@0| () T@U)
(declare-fun |##f#0_4_4@0| () T@U)
(declare-fun |##f#0_4_3@0| () T@U)
(declare-fun |##f#0_4_1@0| () T@U)
(declare-fun |##f#0_4_0@0| () T@U)
(declare-fun |$lambdaHeap#0_3_0@0| () T@U)
(declare-fun |$lambdaHeap#0_3_2@0| () T@U)
(declare-fun |$lambdaHeap#0_3_1@0| () T@U)
(declare-fun |$lambdaHeap#0_3_4@0| () T@U)
(declare-fun |$lambdaHeap#0_3_3@0| () T@U)
(declare-fun |$_Frame#l0_3_3@0| () T@U)
(declare-fun |$_Frame#l0_3_1@0| () T@U)
(declare-fun |$lambdaHeap#0_3_6@0| () T@U)
(declare-fun |$lambdaHeap#0_3_5@0| () T@U)
(declare-fun |$lambdaHeap#0_3_8@0| () T@U)
(declare-fun |$lambdaHeap#0_3_7@0| () T@U)
(declare-fun |$_Frame#l0_3_7@0| () T@U)
(declare-fun |$_Frame#l0_3_5@0| () T@U)
(declare-fun |$lambdaHeap#0_3_9@0| () T@U)
(declare-fun |$lambdaHeap#0_3_10@0| () T@U)
(declare-fun $Heap@1 () T@U)
(declare-fun |$lambdaHeap#0_3_11@0| () T@U)
(declare-fun |##f#0_3_5@0| () T@U)
(declare-fun |A#0@0| () T@U)
(declare-fun |B#0@0| () T@U)
(declare-fun |##f#0_3_4@0| () T@U)
(declare-fun |g##0_3_0@0| () T@U)
(declare-fun |f##0_3_0@0| () T@U)
(declare-fun |##f#0_3_1@0| () T@U)
(declare-fun |##f#0_3_0@0| () T@U)
(declare-fun |$lambdaHeap#0_2_0@0| () T@U)
(declare-fun |$lambdaHeap#0_2_1@0| () T@U)
(declare-fun |$lambdaHeap#0_2_2@0| () T@U)
(declare-fun $Heap@0 () T@U)
(declare-fun |##f#0_2_2@0| () T@U)
(declare-fun |##f#0_2_1@0| () T@U)
(declare-fun |##f#0_2_0@0| () T@U)
(declare-fun |$lambdaHeap#0_1_0@0| () T@U)
(declare-fun |$lambdaHeap#0_1_1@0| () T@U)
(declare-fun |$lambdaHeap#0_1_2@0| () T@U)
(declare-fun |$lambdaHeap#0_1_4@0| () T@U)
(declare-fun |$lambdaHeap#0_1_3@0| () T@U)
(declare-fun |$_Frame#l0_1_3@0| () T@U)
(declare-fun |##f#0_1_5@0| () T@U)
(declare-fun |##f#0_1_4@0| () T@U)
(declare-fun |##f#0_1_3@0| () T@U)
(declare-fun |##f#0_1_0@0| () T@U)
(declare-fun |$lambdaHeap#0_0_0@0| () T@U)
(declare-fun |$lambdaHeap#0_0_1@0| () T@U)
(declare-fun |$lambdaHeap#0_0_3@0| () T@U)
(declare-fun |$lambdaHeap#0_0_2@0| () T@U)
(declare-fun |$_Frame#l0_0_2@0| () T@U)
(declare-fun |$lambdaHeap#0_0_5@0| () T@U)
(declare-fun |$lambdaHeap#0_0_4@0| () T@U)
(declare-fun |$_Frame#l0_0_4@0| () T@U)
(declare-fun |$lambdaHeap#0_0_6@0| () T@U)
(declare-fun |$lambdaHeap#0_0_7@0| () T@U)
(declare-fun |##f#0_0_7@0| () T@U)
(declare-fun |##f#0_0_6@0| () T@U)
(declare-fun |##f#0_0_4@0| () T@U)
(declare-fun |##f#0_0_2@0| () T@U)
(declare-fun |##f#0_0_1@0| () T@U)
(declare-fun |##f#0_0_0@0| () T@U)
(declare-fun $Heap@7 () T@U)
(declare-fun |y#0_6_0@0| () Int)
(declare-fun |$_Frame#l0_6_0@0| () T@U)
(declare-fun |$lambdaHeap#0_6_0@0| () T@U)
(declare-fun |lambdaResult#0_6_0| () Int)
(declare-fun |$lambdaHeap#0_6_1@0| () T@U)
(declare-fun |$lambdaHeap#0_6_3@0| () T@U)
(declare-fun |$lambdaHeap#0_6_2@0| () T@U)
(declare-fun |$_Frame#l0_6_2@0| () T@U)
(declare-fun |y#0_6_3@0| () Int)
(declare-fun |$_Frame#l0_6_4@0| () T@U)
(declare-fun |$lambdaHeap#0_6_4@0| () T@U)
(declare-fun |lambdaResult#0_6_4| () Int)
(declare-fun |$lambdaHeap#0_6_5@0| () T@U)
(declare-fun |$lambdaHeap#0_6_7@0| () T@U)
(declare-fun |$lambdaHeap#0_6_6@0| () T@U)
(declare-fun |$_Frame#l0_6_6@0| () T@U)
(declare-fun |##f#0_6_4@0| () T@U)
(declare-fun |##f#0_6_3@0| () T@U)
(declare-fun |##f#0_6_1@0| () T@U)
(declare-fun |##f#0_6_0@0| () T@U)
(declare-fun |$lambdaHeap#0_8_1@0| () T@U)
(declare-fun |$lambdaHeap#0_8_0@0| () T@U)
(declare-fun |##f#0_8_0@0| () T@U)
(declare-fun |x#0_8_0@0| () Int)
(declare-fun |lambdaResult#0_8_0| () Int)
(declare-fun |$_Frame#l0_8_0@0| () T@U)
(declare-fun |$lambdaHeap#0_8_3@0| () T@U)
(declare-fun |$lambdaHeap#0_8_2@0| () T@U)
(declare-fun |$_Frame#l0_8_2@0| () T@U)
(declare-fun |$lambdaHeap#0_8_4@0| () T@U)
(declare-fun $Heap@6 () T@U)
(declare-fun |$lambdaHeap#0_8_6@0| () T@U)
(declare-fun |$lambdaHeap#0_8_5@0| () T@U)
(declare-fun |$_Frame#l0_8_5@0| () T@U)
(declare-fun |##f#0_8_4@0| () T@U)
(declare-fun |##f#0_8_3@0| () T@U)
(declare-fun |##f#0_8_1@0| () T@U)
(declare-fun $_ModifiesFrame@0 () T@U)
(declare-fun |A#0| () T@U)
(declare-fun |B#0| () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 432) (let ((anon415_Else_correct true))
(let ((anon415_Then_correct true))
(let ((anon414_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#6@0|) (or (= $Heap@@2 |$lambdaHeap#6@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#6@0|))) (and (=> (= (ControlFlow 0 430) 428) anon415_Then_correct) (=> (= (ControlFlow 0 430) 429) anon415_Else_correct)))))
(let ((anon419_Else_correct true))
(let ((anon419_Then_correct true))
(let ((anon418_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#8@0|) (or (= |$lambdaHeap#7@0| |$lambdaHeap#8@0|) ($HeapSucc |$lambdaHeap#7@0| |$lambdaHeap#8@0|))) (and (=> (= (ControlFlow 0 424) 422) anon419_Then_correct) (=> (= (ControlFlow 0 424) 423) anon419_Else_correct)))))
(let ((anon418_Else_correct true))
(let ((anon417_Then_correct  (=> (and (= |$_Frame#l7@0| (|lambda#0| null |$lambdaHeap#7@0| alloc false)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat |$lambdaHeap#7@0|)) (and (=> (= (ControlFlow 0 425) 424) anon418_Then_correct) (=> (= (ControlFlow 0 425) 421) anon418_Else_correct)))))
(let ((anon417_Else_correct true))
(let ((anon416_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#7@0|) (or (= $Heap@@2 |$lambdaHeap#7@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#7@0|))) (and (=> (= (ControlFlow 0 426) 425) anon417_Then_correct) (=> (= (ControlFlow 0 426) 420) anon417_Else_correct)))))
(let ((anon424_Else_correct true))
(let ((anon424_Then_correct true))
(let ((anon423_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_1@0|) (or (= |$lambdaHeap#0_0@0| |$lambdaHeap#0_1@0|) ($HeapSucc |$lambdaHeap#0_0@0| |$lambdaHeap#0_1@0|))) (and (=> (= (ControlFlow 0 415) 413) anon424_Then_correct) (=> (= (ControlFlow 0 415) 414) anon424_Else_correct)))))
(let ((anon423_Else_correct true))
(let ((anon422_Then_correct  (=> (and (= |$_Frame#l0_0@0| (|lambda#0| null |$lambdaHeap#0_0@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_0@0|)) (and (=> (= (ControlFlow 0 416) 415) anon423_Then_correct) (=> (= (ControlFlow 0 416) 412) anon423_Else_correct)))))
(let ((anon422_Else_correct true))
(let ((anon421_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_0@0|))) (and (=> (= (ControlFlow 0 417) 416) anon422_Then_correct) (=> (= (ControlFlow 0 417) 411) anon422_Else_correct)))))
(let ((anon421_Else_correct true))
(let ((anon420_Then_correct  (=> ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 418) 417) anon421_Then_correct) (=> (= (ControlFlow 0 418) 410) anon421_Else_correct)))))
(let ((anon429_Else_correct true))
(let ((anon429_Then_correct true))
(let ((anon428_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_9_1@0|) (or (= |$lambdaHeap#0_9_0@0| |$lambdaHeap#0_9_1@0|) ($HeapSucc |$lambdaHeap#0_9_0@0| |$lambdaHeap#0_9_1@0|))) (and (=> (= (ControlFlow 0 406) 404) anon429_Then_correct) (=> (= (ControlFlow 0 406) 405) anon429_Else_correct)))))
(let ((anon428_Else_correct true))
(let ((anon427_Then_correct  (=> (and (= |$_Frame#l0_9_0@0| (|lambda#0| null |$lambdaHeap#0_9_0@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_9_0@0|)) (and (=> (= (ControlFlow 0 407) 406) anon428_Then_correct) (=> (= (ControlFlow 0 407) 403) anon428_Else_correct)))))
(let ((anon427_Else_correct true))
(let ((anon426_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_9_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_9_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_9_0@0|))) (and (=> (= (ControlFlow 0 408) 407) anon427_Then_correct) (=> (= (ControlFlow 0 408) 402) anon427_Else_correct)))))
(let ((anon433_Else_correct true))
(let ((anon433_Then_correct true))
(let ((anon432_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_9_3@0|) (or (= |$lambdaHeap#0_9_2@0| |$lambdaHeap#0_9_3@0|) ($HeapSucc |$lambdaHeap#0_9_2@0| |$lambdaHeap#0_9_3@0|))) (and (=> (= (ControlFlow 0 398) 396) anon433_Then_correct) (=> (= (ControlFlow 0 398) 397) anon433_Else_correct)))))
(let ((anon37_correct true))
(let ((anon432_Else_correct  (=> (= |##f#0_9_2@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |x#0_9_1@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_9_2@0| (Tclass._System.___hTotalFunc1 TInt TInt) |$lambdaHeap#0_9_2@0|) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |x#0_9_1@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (=> (and (and (= |lambdaResult#0_9_2| (_module.__default.Sum ($LS $LZ) |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |x#0_9_1@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |x#0_9_1@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and ($Is intType (int_2_U |lambdaResult#0_9_2|) TInt) (= (ControlFlow 0 395) 393))) anon37_correct)))))
(let ((anon431_Then_correct  (=> (<= (LitInt 0) |x#0_9_1@0|) (=> (and (= |$_Frame#l0_9_2@0| (|lambda#0| null |$lambdaHeap#0_9_2@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_9_2@0|)) (and (=> (= (ControlFlow 0 399) 398) anon432_Then_correct) (=> (= (ControlFlow 0 399) 395) anon432_Else_correct))))))
(let ((anon431_Else_correct  (=> (and (< |x#0_9_1@0| (LitInt 0)) (= (ControlFlow 0 394) 393)) anon37_correct)))
(let ((anon430_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_9_2@0|) (or (= $Heap@@2 |$lambdaHeap#0_9_2@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_9_2@0|))) (and (=> (= (ControlFlow 0 400) 399) anon431_Then_correct) (=> (= (ControlFlow 0 400) 394) anon431_Else_correct)))))
(let ((anon437_Else_correct true))
(let ((anon437_Then_correct true))
(let ((anon436_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_9_5@0|) (or (= |$lambdaHeap#0_9_4@0| |$lambdaHeap#0_9_5@0|) ($HeapSucc |$lambdaHeap#0_9_4@0| |$lambdaHeap#0_9_5@0|))) (and (=> (= (ControlFlow 0 389) 387) anon437_Then_correct) (=> (= (ControlFlow 0 389) 388) anon437_Else_correct)))))
(let ((anon436_Else_correct true))
(let ((anon435_Then_correct  (=> (and (= |$_Frame#l0_9_4@0| (|lambda#0| null |$lambdaHeap#0_9_4@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_9_4@0|)) (and (=> (= (ControlFlow 0 390) 389) anon436_Then_correct) (=> (= (ControlFlow 0 390) 386) anon436_Else_correct)))))
(let ((anon435_Else_correct true))
(let ((anon434_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_9_4@0|) (or (= $Heap@@2 |$lambdaHeap#0_9_4@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_9_4@0|))) (and (=> (= (ControlFlow 0 391) 390) anon435_Then_correct) (=> (= (ControlFlow 0 391) 385) anon435_Else_correct)))))
(let ((anon434_Else_correct  (=> (= |##f#0_9_3@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_9_3@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (=> (and (and (forall ((|$l#0_9_40#x#0| T@U) )  (=> (<= (LitInt 0) (U_2_int |$l#0_9_40#x#0|)) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_9_40#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))))) (and (forall ((|$l#0_9_43#x#0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_9_43#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) (= (ControlFlow 0 384) (- 0 383))) (= (_module.__default.Sum ($LS ($LS $LZ)) |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (+ (U_2_int ($Unbox intType (Apply1 Tclass._System.nat TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| Tclass._System.nat) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))))))))
(let ((anon430_Else_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 392) 391) anon434_Then_correct) (=> (= (ControlFlow 0 392) 384) anon434_Else_correct)))))
(let ((anon426_Else_correct  (=> (= |##f#0_9_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_9_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (=> (and (and (forall ((|$l#0_9_13#x#0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_9_13#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (U_2_bool (Lit boolType (bool_2_U false)))) (and (=> (= (ControlFlow 0 401) 400) anon430_Then_correct) (=> (= (ControlFlow 0 401) 392) anon430_Else_correct)))))))
(let ((anon425_Then_correct  (=> ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 409) 408) anon426_Then_correct) (=> (= (ControlFlow 0 409) 401) anon426_Else_correct)))))
(let ((anon455_Else_correct true))
(let ((anon455_Then_correct true))
(let ((anon454_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_7_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_7_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_7_0@0|))) (and (=> (= (ControlFlow 0 381) 379) anon455_Then_correct) (=> (= (ControlFlow 0 381) 380) anon455_Else_correct)))))
(let ((anon459_Else_correct true))
(let ((anon459_Then_correct true))
(let ((anon458_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_7_2@0|) (or (= |$lambdaHeap#0_7_1@0| |$lambdaHeap#0_7_2@0|) ($HeapSucc |$lambdaHeap#0_7_1@0| |$lambdaHeap#0_7_2@0|))) (and (=> (= (ControlFlow 0 375) 373) anon459_Then_correct) (=> (= (ControlFlow 0 375) 374) anon459_Else_correct)))))
(let ((anon458_Else_correct true))
(let ((anon457_Then_correct  (=> (and (= |$_Frame#l0_7_1@0| (|lambda#0| null |$lambdaHeap#0_7_1@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_7_1@0|)) (and (=> (= (ControlFlow 0 376) 375) anon458_Then_correct) (=> (= (ControlFlow 0 376) 372) anon458_Else_correct)))))
(let ((anon457_Else_correct true))
(let ((anon456_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_7_1@0|) (or (= $Heap@@2 |$lambdaHeap#0_7_1@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_7_1@0|))) (and (=> (= (ControlFlow 0 377) 376) anon457_Then_correct) (=> (= (ControlFlow 0 377) 371) anon457_Else_correct)))))
(let ((anon91_correct true))
(let ((anon461_Else_correct  (=> (and (< |y#0_7_2@0| (LitInt 0)) (= (ControlFlow 0 368) 366)) anon91_correct)))
(let ((anon461_Then_correct  (=> (<= (LitInt 0) |y#0_7_2@0|) (=> (and (and (= |$_Frame#l0_7_3@0| (|lambda#0| null |$lambdaHeap#0_7_3@0| alloc false)) (= |lambdaResult#0_7_3| (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |y#0_7_2@0|))))))) (and ($Is intType (int_2_U |lambdaResult#0_7_3|) TInt) (= (ControlFlow 0 367) 366))) anon91_correct))))
(let ((anon460_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_7_3@0|) (or (= $Heap@@2 |$lambdaHeap#0_7_3@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_7_3@0|))) (and (=> (= (ControlFlow 0 369) 367) anon461_Then_correct) (=> (= (ControlFlow 0 369) 368) anon461_Else_correct)))))
(let ((anon463_Else_correct true))
(let ((anon463_Then_correct true))
(let ((anon462_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_7_4@0|) (or (= $Heap@@2 |$lambdaHeap#0_7_4@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_7_4@0|))) (and (=> (= (ControlFlow 0 364) 362) anon463_Then_correct) (=> (= (ControlFlow 0 364) 363) anon463_Else_correct)))))
(let ((anon467_Else_correct true))
(let ((anon467_Then_correct true))
(let ((anon466_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_7_6@0|) (or (= |$lambdaHeap#0_7_5@0| |$lambdaHeap#0_7_6@0|) ($HeapSucc |$lambdaHeap#0_7_5@0| |$lambdaHeap#0_7_6@0|))) (and (=> (= (ControlFlow 0 358) 356) anon467_Then_correct) (=> (= (ControlFlow 0 358) 357) anon467_Else_correct)))))
(let ((anon466_Else_correct true))
(let ((anon465_Then_correct  (=> (and (= |$_Frame#l0_7_5@0| (|lambda#0| null |$lambdaHeap#0_7_5@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_7_5@0|)) (and (=> (= (ControlFlow 0 359) 358) anon466_Then_correct) (=> (= (ControlFlow 0 359) 355) anon466_Else_correct)))))
(let ((anon465_Else_correct true))
(let ((anon464_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_7_5@0|) (or (= $Heap@@2 |$lambdaHeap#0_7_5@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_7_5@0|))) (and (=> (= (ControlFlow 0 360) 359) anon465_Then_correct) (=> (= (ControlFlow 0 360) 354) anon465_Else_correct)))))
(let ((anon464_Else_correct  (=> (= |##f#0_7_4@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_7_4@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (=> (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (forall ((|$l#0_7_43#x#0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_7_43#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) (= (ControlFlow 0 353) (- 0 352))) (= (+ (_module.__default.Sum ($LS ($LS $LZ)) |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (+ (+ (U_2_int ($Unbox intType (Apply1 Tclass._System.nat TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| Tclass._System.nat) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))))))))
(let ((anon462_Else_correct  (=> (and (and (= |##f#0_7_3@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_7_3@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 361) 360) anon464_Then_correct) (=> (= (ControlFlow 0 361) 353) anon464_Else_correct)))))
(let ((anon460_Else_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 365) 364) anon462_Then_correct) (=> (= (ControlFlow 0 365) 361) anon462_Else_correct)))))
(let ((anon456_Else_correct  (=> (= |##f#0_7_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_7_1@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (=> (and (and (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (forall ((|$l#0_7_18#x#0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_7_18#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) (U_2_bool (Lit boolType (bool_2_U false)))) (and (=> (= (ControlFlow 0 370) 369) anon460_Then_correct) (=> (= (ControlFlow 0 370) 365) anon460_Else_correct)))))))
(let ((anon454_Else_correct  (=> (and (and (= |##f#0_7_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_7_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 378) 377) anon456_Then_correct) (=> (= (ControlFlow 0 378) 370) anon456_Else_correct)))))
(let ((anon453_Then_correct  (=> ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 382) 381) anon454_Then_correct) (=> (= (ControlFlow 0 382) 378) anon454_Else_correct)))))
(let ((anon487_Else_correct true))
(let ((anon487_Then_correct true))
(let ((anon486_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_0@0|))) (and (=> (= (ControlFlow 0 350) 348) anon487_Then_correct) (=> (= (ControlFlow 0 350) 349) anon487_Else_correct)))))
(let ((anon491_Else_correct true))
(let ((anon491_Then_correct true))
(let ((anon490_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_2@0|) (or (= |$lambdaHeap#0_5_1@0| |$lambdaHeap#0_5_2@0|) ($HeapSucc |$lambdaHeap#0_5_1@0| |$lambdaHeap#0_5_2@0|))) (and (=> (= (ControlFlow 0 344) 342) anon491_Then_correct) (=> (= (ControlFlow 0 344) 343) anon491_Else_correct)))))
(let ((anon490_Else_correct true))
(let ((anon489_Then_correct  (=> (and (= |$_Frame#l0_5_1@0| (|lambda#0| null |$lambdaHeap#0_5_1@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_5_1@0|)) (and (=> (= (ControlFlow 0 345) 344) anon490_Then_correct) (=> (= (ControlFlow 0 345) 341) anon490_Else_correct)))))
(let ((anon489_Else_correct true))
(let ((anon488_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_1@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_1@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_1@0|))) (and (=> (= (ControlFlow 0 346) 345) anon489_Then_correct) (=> (= (ControlFlow 0 346) 340) anon489_Else_correct)))))
(let ((anon517_Else_correct true))
(let ((anon517_Then_correct true))
(let ((anon516_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_2_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_0_0_2_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_0_0_2_0@0|))) (and (=> (= (ControlFlow 0 332) 330) anon517_Then_correct) (=> (= (ControlFlow 0 332) 331) anon517_Else_correct)))))
(let ((anon201_correct true))
(let ((anon519_Else_correct  (=> (and (< |y#0_5_0_0_2_1@0| (LitInt 0)) (= (ControlFlow 0 327) 325)) anon201_correct)))
(let ((anon519_Then_correct  (=> (<= (LitInt 0) |y#0_5_0_0_2_1@0|) (=> (and (and (= |$_Frame#l0_5_0_0_2_1@0| (|lambda#0| null |$lambdaHeap#0_5_0_0_2_1@0| alloc false)) (= |lambdaResult#0_5_0_0_2_1| (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|)) ($Box intType (int_2_U |y#0_5_0_0_2_1@0|))))))) (and ($Is intType (int_2_U |lambdaResult#0_5_0_0_2_1|) TInt) (= (ControlFlow 0 326) 325))) anon201_correct))))
(let ((anon518_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_2_1@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_0_0_2_1@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_0_0_2_1@0|))) (and (=> (= (ControlFlow 0 328) 326) anon519_Then_correct) (=> (= (ControlFlow 0 328) 327) anon519_Else_correct)))))
(let ((anon521_Else_correct true))
(let ((anon521_Then_correct true))
(let ((anon520_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_2_2@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_0_0_2_2@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_0_0_2_2@0|))) (and (=> (= (ControlFlow 0 323) 321) anon521_Then_correct) (=> (= (ControlFlow 0 323) 322) anon521_Else_correct)))))
(let ((anon520_Else_correct  (=> (= |##f#0_5_0_0_2_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (=> (and (and ($IsAlloc HandleTypeType |##f#0_5_0_0_2_1@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (= (ControlFlow 0 320) (- 0 319)))) (= (_module.__default.Sum ($LS ($LS $LZ)) |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (+ (U_2_int ($Unbox intType (Apply1 Tclass._System.nat TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| Tclass._System.nat) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))))))))
(let ((anon518_Else_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 324) 323) anon520_Then_correct) (=> (= (ControlFlow 0 324) 320) anon520_Else_correct)))))
(let ((anon516_Else_correct  (=> (= |##f#0_5_0_0_2_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (=> (and (and ($IsAlloc HandleTypeType |##f#0_5_0_0_2_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (U_2_bool (Lit boolType (bool_2_U false))))) (and (=> (= (ControlFlow 0 329) 328) anon518_Then_correct) (=> (= (ControlFlow 0 329) 324) anon518_Else_correct))))))
(let ((anon515_Then_correct  (=> ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 333) 332) anon516_Then_correct) (=> (= (ControlFlow 0 333) 329) anon516_Else_correct)))))
(let ((anon531_Else_correct true))
(let ((anon531_Then_correct true))
(let ((anon530_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_0_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_0_0_0_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_0_0_0_0@0|))) (and (=> (= (ControlFlow 0 317) 315) anon531_Then_correct) (=> (= (ControlFlow 0 317) 316) anon531_Else_correct)))))
(let ((anon535_Else_correct true))
(let ((anon535_Then_correct true))
(let ((anon534_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_0_2@0|) (or (= |$lambdaHeap#0_5_0_0_0_1@0| |$lambdaHeap#0_5_0_0_0_2@0|) ($HeapSucc |$lambdaHeap#0_5_0_0_0_1@0| |$lambdaHeap#0_5_0_0_0_2@0|))) (and (=> (= (ControlFlow 0 311) 309) anon535_Then_correct) (=> (= (ControlFlow 0 311) 310) anon535_Else_correct)))))
(let ((anon534_Else_correct true))
(let ((anon533_Then_correct  (=> (and (= |$_Frame#l0_5_0_0_0_1@0| (|lambda#0| null |$lambdaHeap#0_5_0_0_0_1@0| alloc false)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat |$lambdaHeap#0_5_0_0_0_1@0|)) (and (=> (= (ControlFlow 0 312) 311) anon534_Then_correct) (=> (= (ControlFlow 0 312) 308) anon534_Else_correct)))))
(let ((anon533_Else_correct true))
(let ((anon532_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_0_1@0|) (or (= $Heap@4 |$lambdaHeap#0_5_0_0_0_1@0|) ($HeapSucc $Heap@4 |$lambdaHeap#0_5_0_0_0_1@0|))) (and (=> (= (ControlFlow 0 313) 312) anon533_Then_correct) (=> (= (ControlFlow 0 313) 307) anon533_Else_correct)))))
(let ((anon532_Else_correct  (=> (and (forall ((|$l#0_5_0_0_0_14#x#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_5_0_0_0_14#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (= (ControlFlow 0 306) (- 0 305))) (= (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@4 |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@4 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType (int_2_U |i#0_5_0_0@0|)))))))))
(let ((anon530_Else_correct  (=> (and (= |##f#0_5_0_0_0_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_5_0_0_0_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (=> (and (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and ($IsGoodHeap $Heap@4) ($IsHeapAnchor $Heap@4))) (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (forall ((|$l#17#x#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#17#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))))) (and (= (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@4 |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@4 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType (int_2_U |i#0_5_0_0@0|)))))) (= $Heap@@2 $Heap@4)))) (and (=> (= (ControlFlow 0 314) 313) anon532_Then_correct) (=> (= (ControlFlow 0 314) 306) anon532_Else_correct))))))
(let ((anon529_Then_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 318) 317) anon530_Then_correct) (=> (= (ControlFlow 0 318) 314) anon530_Else_correct)))))
(let ((anon210_correct true))
(let ((anon524_Else_correct  (=> (and (< |y#0_5_0_0_1_0@0| (LitInt 0)) (= (ControlFlow 0 303) 301)) anon210_correct)))
(let ((anon524_Then_correct  (=> (<= (LitInt 0) |y#0_5_0_0_1_0@0|) (=> (and (and (= |$_Frame#l0_5_0_0_1_0@0| (|lambda#0| null |$lambdaHeap#0_5_0_0_1_0@0| alloc false)) (= |lambdaResult#0_5_0_0_1_0| (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|)) ($Box intType (int_2_U |y#0_5_0_0_1_0@0|))))))) (and ($Is intType (int_2_U |lambdaResult#0_5_0_0_1_0|) TInt) (= (ControlFlow 0 302) 301))) anon210_correct))))
(let ((anon523_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_1_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_0_0_1_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_0_0_1_0@0|))) (and (=> (= (ControlFlow 0 304) 302) anon524_Then_correct) (=> (= (ControlFlow 0 304) 303) anon524_Else_correct)))))
(let ((anon526_Else_correct true))
(let ((anon526_Then_correct true))
(let ((anon525_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_1_1@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_0_0_1_1@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_0_0_1_1@0|))) (and (=> (= (ControlFlow 0 299) 297) anon526_Then_correct) (=> (= (ControlFlow 0 299) 298) anon526_Else_correct)))))
(let ((anon528_Else_correct true))
(let ((anon528_Then_correct true))
(let ((anon527_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_1_2@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_0_0_1_2@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_0_0_1_2@0|))) (and (=> (= (ControlFlow 0 295) 293) anon528_Then_correct) (=> (= (ControlFlow 0 295) 294) anon528_Else_correct)))))
(let ((anon527_Else_correct  (=> (= |##f#0_5_0_0_1_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (=> (and (and ($IsAlloc HandleTypeType |##f#0_5_0_0_1_1@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (= (ControlFlow 0 292) (- 0 291)))) (= (+ (U_2_int ($Unbox intType (Apply1 Tclass._System.nat TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| Tclass._System.nat) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))))))))
(let ((anon525_Else_correct  (=> (= |##f#0_5_0_0_1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (=> (and (and ($IsAlloc HandleTypeType |##f#0_5_0_0_1_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 296) 295) anon527_Then_correct) (=> (= (ControlFlow 0 296) 292) anon527_Else_correct))))))
(let ((anon523_Else_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 300) 299) anon525_Then_correct) (=> (= (ControlFlow 0 300) 296) anon525_Else_correct)))))
(let ((anon512_Else_correct true))
(let ((anon512_Then_correct true))
(let ((anon511_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_3_1@0|) (or (= |$lambdaHeap#0_5_0_0_3_0@0| |$lambdaHeap#0_5_0_0_3_1@0|) ($HeapSucc |$lambdaHeap#0_5_0_0_3_0@0| |$lambdaHeap#0_5_0_0_3_1@0|))) (and (=> (= (ControlFlow 0 288) 286) anon512_Then_correct) (=> (= (ControlFlow 0 288) 287) anon512_Else_correct)))))
(let ((anon511_Else_correct true))
(let ((anon510_Then_correct  (=> (and (= |$_Frame#l0_5_0_0_3_0@0| (|lambda#0| null |$lambdaHeap#0_5_0_0_3_0@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_5_0_0_3_0@0|)) (and (=> (= (ControlFlow 0 289) 288) anon511_Then_correct) (=> (= (ControlFlow 0 289) 285) anon511_Else_correct)))))
(let ((anon510_Else_correct true))
(let ((anon509_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_3_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_0_0_3_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_0_0_3_0@0|))) (and (=> (= (ControlFlow 0 290) 289) anon510_Then_correct) (=> (= (ControlFlow 0 290) 284) anon510_Else_correct)))))
(let ((anon514_Else_correct true))
(let ((anon514_Then_correct true))
(let ((anon513_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_3_2@0|) (or (= $Heap@5 |$lambdaHeap#0_5_0_0_3_2@0|) ($HeapSucc $Heap@5 |$lambdaHeap#0_5_0_0_3_2@0|))) (and (=> (= (ControlFlow 0 282) 280) anon514_Then_correct) (=> (= (ControlFlow 0 282) 281) anon514_Else_correct)))))
(let ((anon513_Else_correct  (=> (= |##f#0_5_0_0_3_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (=> (and (and ($IsAlloc HandleTypeType |##f#0_5_0_0_3_1@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@5) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (= (ControlFlow 0 279) (- 0 278)))) (= (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@5 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType (int_2_U |i#0_5_0_0@0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))))))))
(let ((anon509_Else_correct  (=> (forall ((|$l#0_5_0_0_3_9#x#0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_5_0_0_3_9#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (=> (and ($IsGoodHeap $Heap@5) ($IsHeapAnchor $Heap@5)) (=> (and (and (and (forall ((|$l#15#x#0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#15#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (= (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@5 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType (int_2_U |i#0_5_0_0@0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |i#0_5_0_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))))) (and (= $Heap@@2 $Heap@5) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat $Heap@5))) (and (=> (= (ControlFlow 0 283) 282) anon513_Then_correct) (=> (= (ControlFlow 0 283) 279) anon513_Else_correct)))))))
(let ((anon507_Else_correct true))
(let ((anon507_Then_correct true))
(let ((anon506_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_1@0|) (or (= |$lambdaHeap#0_5_0_0_0@0| |$lambdaHeap#0_5_0_0_1@0|) ($HeapSucc |$lambdaHeap#0_5_0_0_0@0| |$lambdaHeap#0_5_0_0_1@0|))) (and (=> (= (ControlFlow 0 275) 273) anon507_Then_correct) (=> (= (ControlFlow 0 275) 274) anon507_Else_correct)))))
(let ((anon506_Else_correct true))
(let ((anon505_Then_correct  (=> (and (= |$_Frame#l0_5_0_0_0@0| (|lambda#0| null |$lambdaHeap#0_5_0_0_0@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_5_0_0_0@0|)) (and (=> (= (ControlFlow 0 276) 275) anon506_Then_correct) (=> (= (ControlFlow 0 276) 272) anon506_Else_correct)))))
(let ((anon505_Else_correct true))
(let ((anon504_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_0_0_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_0_0_0@0|))) (and (=> (= (ControlFlow 0 277) 276) anon505_Then_correct) (=> (= (ControlFlow 0 277) 271) anon505_Else_correct)))))
(let ((anon504_Else_correct true))
(let ((anon529_Else_correct  (=> (and (= (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType (int_2_U |i#0_5_0_0@0|))))) (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType (int_2_U |i#0_5_0_0@0|)))))) (= (ControlFlow 0 269) (- 0 268))) (= (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType (int_2_U |i#0_5_0_0@0|))))) (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType (int_2_U |i#0_5_0_0@0|)))))))))
(let ((anon494_Else_correct  (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 334) 333) anon515_Then_correct) (=> (= (ControlFlow 0 334) 318) anon529_Then_correct)) (=> (= (ControlFlow 0 334) 269) anon529_Else_correct)) (=> (= (ControlFlow 0 334) 304) anon523_Then_correct)) (=> (= (ControlFlow 0 334) 300) anon523_Else_correct)) (=> (= (ControlFlow 0 334) 290) anon509_Then_correct)) (=> (= (ControlFlow 0 334) 283) anon509_Else_correct)) (=> (= (ControlFlow 0 334) 277) anon504_Then_correct)) (=> (= (ControlFlow 0 334) 270) anon504_Else_correct))))
(let ((anon498_Else_correct true))
(let ((anon498_Then_correct true))
(let ((anon497_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_1@0|) (or (= |$lambdaHeap#0_5_0_0@0| |$lambdaHeap#0_5_0_1@0|) ($HeapSucc |$lambdaHeap#0_5_0_0@0| |$lambdaHeap#0_5_0_1@0|))) (and (=> (= (ControlFlow 0 265) 263) anon498_Then_correct) (=> (= (ControlFlow 0 265) 264) anon498_Else_correct)))))
(let ((anon497_Else_correct true))
(let ((anon496_Then_correct  (=> (and (= |$_Frame#l0_5_0_0@0| (|lambda#0| null |$lambdaHeap#0_5_0_0@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_5_0_0@0|)) (and (=> (= (ControlFlow 0 266) 265) anon497_Then_correct) (=> (= (ControlFlow 0 266) 262) anon497_Else_correct)))))
(let ((anon496_Else_correct true))
(let ((anon495_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_0_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_0_0@0|))) (and (=> (= (ControlFlow 0 267) 266) anon496_Then_correct) (=> (= (ControlFlow 0 267) 261) anon496_Else_correct)))))
(let ((anon502_Else_correct true))
(let ((anon502_Then_correct true))
(let ((anon501_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_3@0|) (or (= |$lambdaHeap#0_5_0_2@0| |$lambdaHeap#0_5_0_3@0|) ($HeapSucc |$lambdaHeap#0_5_0_2@0| |$lambdaHeap#0_5_0_3@0|))) (and (=> (= (ControlFlow 0 258) 256) anon502_Then_correct) (=> (= (ControlFlow 0 258) 257) anon502_Else_correct)))))
(let ((anon501_Else_correct true))
(let ((anon500_Then_correct  (=> (and (= |$_Frame#l0_5_0_2@0| (|lambda#0| null |$lambdaHeap#0_5_0_2@0| alloc false)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat |$lambdaHeap#0_5_0_2@0|)) (and (=> (= (ControlFlow 0 259) 258) anon501_Then_correct) (=> (= (ControlFlow 0 259) 255) anon501_Else_correct)))))
(let ((anon500_Else_correct true))
(let ((anon499_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_0_2@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_0_2@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_0_2@0|))) (and (=> (= (ControlFlow 0 260) 259) anon500_Then_correct) (=> (= (ControlFlow 0 260) 254) anon500_Else_correct)))))
(let ((anon499_Else_correct true))
(let ((anon153_correct  (=> (and (<= (LitInt 0) |i#0_5_0_0@0|) (< |i#0_5_0_0@0| |n'#0|)) (and (and (and (=> (= (ControlFlow 0 335) 334) anon494_Else_correct) (=> (= (ControlFlow 0 335) 267) anon495_Then_correct)) (=> (= (ControlFlow 0 335) 260) anon499_Then_correct)) (=> (= (ControlFlow 0 335) 253) anon499_Else_correct)))))
(let ((anon493_Else_correct  (=> (and (< |i#0_5_0_0@0| (LitInt 0)) (= (ControlFlow 0 337) 335)) anon153_correct)))
(let ((anon493_Then_correct  (=> (and (<= (LitInt 0) |i#0_5_0_0@0|) (= (ControlFlow 0 336) 335)) anon153_correct)))
(let ((anon492_Then_correct  (and (=> (= (ControlFlow 0 338) 336) anon493_Then_correct) (=> (= (ControlFlow 0 338) 337) anon493_Else_correct))))
(let ((anon539_Else_correct true))
(let ((anon539_Then_correct true))
(let ((anon538_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_4@0|) (or (= |$lambdaHeap#0_5_3@0| |$lambdaHeap#0_5_4@0|) ($HeapSucc |$lambdaHeap#0_5_3@0| |$lambdaHeap#0_5_4@0|))) (and (=> (= (ControlFlow 0 249) 247) anon539_Then_correct) (=> (= (ControlFlow 0 249) 248) anon539_Else_correct)))))
(let ((anon538_Else_correct true))
(let ((anon537_Then_correct  (=> (and (= |$_Frame#l0_5_3@0| (|lambda#0| null |$lambdaHeap#0_5_3@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_5_3@0|)) (and (=> (= (ControlFlow 0 250) 249) anon538_Then_correct) (=> (= (ControlFlow 0 250) 246) anon538_Else_correct)))))
(let ((anon537_Else_correct true))
(let ((anon536_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_3@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_3@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_3@0|))) (and (=> (= (ControlFlow 0 251) 250) anon537_Then_correct) (=> (= (ControlFlow 0 251) 245) anon537_Else_correct)))))
(let ((anon543_Else_correct true))
(let ((anon543_Then_correct true))
(let ((anon542_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_6@0|) (or (= |$lambdaHeap#0_5_5@0| |$lambdaHeap#0_5_6@0|) ($HeapSucc |$lambdaHeap#0_5_5@0| |$lambdaHeap#0_5_6@0|))) (and (=> (= (ControlFlow 0 241) 239) anon543_Then_correct) (=> (= (ControlFlow 0 241) 240) anon543_Else_correct)))))
(let ((anon542_Else_correct true))
(let ((anon541_Then_correct  (=> (and (= |$_Frame#l0_5_5@0| (|lambda#0| null |$lambdaHeap#0_5_5@0| alloc false)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat |$lambdaHeap#0_5_5@0|)) (and (=> (= (ControlFlow 0 242) 241) anon542_Then_correct) (=> (= (ControlFlow 0 242) 238) anon542_Else_correct)))))
(let ((anon541_Else_correct true))
(let ((anon540_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_5@0|) (or (= $Heap@@2 |$lambdaHeap#0_5_5@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_5_5@0|))) (and (=> (= (ControlFlow 0 243) 242) anon541_Then_correct) (=> (= (ControlFlow 0 243) 237) anon541_Else_correct)))))
(let ((anon545_Else_correct true))
(let ((anon545_Then_correct true))
(let ((anon544_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_7@0|) (or (= $Heap@3 |$lambdaHeap#0_5_7@0|) ($HeapSucc $Heap@3 |$lambdaHeap#0_5_7@0|))) (and (=> (= (ControlFlow 0 234) 232) anon545_Then_correct) (=> (= (ControlFlow 0 234) 233) anon545_Else_correct)))))
(let ((anon549_Else_correct true))
(let ((anon549_Then_correct true))
(let ((anon548_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_9@0|) (or (= |$lambdaHeap#0_5_8@0| |$lambdaHeap#0_5_9@0|) ($HeapSucc |$lambdaHeap#0_5_8@0| |$lambdaHeap#0_5_9@0|))) (and (=> (= (ControlFlow 0 228) 226) anon549_Then_correct) (=> (= (ControlFlow 0 228) 227) anon549_Else_correct)))))
(let ((anon548_Else_correct true))
(let ((anon547_Then_correct  (=> (and (= |$_Frame#l0_5_8@0| (|lambda#0| null |$lambdaHeap#0_5_8@0| alloc false)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat |$lambdaHeap#0_5_8@0|)) (and (=> (= (ControlFlow 0 229) 228) anon548_Then_correct) (=> (= (ControlFlow 0 229) 225) anon548_Else_correct)))))
(let ((anon547_Else_correct true))
(let ((anon546_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_5_8@0|) (or (= $Heap@3 |$lambdaHeap#0_5_8@0|) ($HeapSucc $Heap@3 |$lambdaHeap#0_5_8@0|))) (and (=> (= (ControlFlow 0 230) 229) anon547_Then_correct) (=> (= (ControlFlow 0 230) 224) anon547_Else_correct)))))
(let ((anon546_Else_correct  (=> (= |##f#0_5_6@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_5_6@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@3) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (=> (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (forall ((|$l#0_5_65#x#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_5_65#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) (= (ControlFlow 0 223) (- 0 222))) (= (+ (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@3 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (+ (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@3 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))))))))
(let ((anon544_Else_correct  (=> (and (and (= |##f#0_5_5@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_5_5@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@3)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@3))) (and (=> (= (ControlFlow 0 231) 230) anon546_Then_correct) (=> (= (ControlFlow 0 231) 223) anon546_Else_correct)))))
(let ((anon540_Else_correct  (=> (and (forall ((|$l#0_5_42#x#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_5_42#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (= |g##0_5_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (and (=> (= (ControlFlow 0 235) (- 0 236)) (forall ((|i#1| Int) ) (!  (=> (and (<= (LitInt 0) |i#1|) (< |i#1| |n'#0|)) (= (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 |f##0_5_0@0| ($Box intType (int_2_U |i#1|))))) (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 |g##0_5_0@0| ($Box intType (int_2_U |i#1|)))))))
 :pattern ( ($Unbox intType (Apply1 TInt TInt $Heap@@2 |g##0_5_0@0| ($Box intType (int_2_U |i#1|)))))
 :pattern ( ($Unbox intType (Apply1 TInt TInt $Heap@@2 |f##0_5_0@0| ($Box intType (int_2_U |i#1|)))))
))) (=> (forall ((|i#1@@0| T@U) ) (!  (=> (and (<= (LitInt 0) (U_2_int |i#1@@0|)) (< (U_2_int |i#1@@0|) |n'#0|)) (= (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 |f##0_5_0@0| ($Box intType |i#1@@0|)))) (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 |g##0_5_0@0| ($Box intType |i#1@@0|))))))
 :pattern ( ($Unbox intType (Apply1 TInt TInt $Heap@@2 |g##0_5_0@0| ($Box intType |i#1@@0|))))
 :pattern ( ($Unbox intType (Apply1 TInt TInt $Heap@@2 |f##0_5_0@0| ($Box intType |i#1@@0|))))
)) (=> (and ($IsGoodHeap $Heap@3) ($IsHeapAnchor $Heap@3)) (=> (and (and (and (|_module.__default.Sum#canCall| |n'#0| |f##0_5_0@0|) (|_module.__default.Sum#canCall| |n'#0| |g##0_5_0@0|)) (= (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| |f##0_5_0@0|) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| |g##0_5_0@0|))) (and (= $Heap@@2 $Heap@3) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@3))) (and (=> (= (ControlFlow 0 235) 234) anon544_Then_correct) (=> (= (ControlFlow 0 235) 231) anon544_Else_correct)))))))))
(let ((anon536_Else_correct  (=> (and (forall ((|$l#0_5_30#x#0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_5_30#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (= |f##0_5_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (and (=> (= (ControlFlow 0 244) 243) anon540_Then_correct) (=> (= (ControlFlow 0 244) 235) anon540_Else_correct)))))
(let ((anon492_Else_correct  (=> (forall ((|i#0_5_0_1| T@U) )  (=> (and (<= (LitInt 0) (U_2_int |i#0_5_0_1|)) (< (U_2_int |i#0_5_0_1|) |n'#0|)) (= (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType |i#0_5_0_1|)))) (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType |i#0_5_0_1|))))))) (and (=> (= (ControlFlow 0 252) 251) anon536_Then_correct) (=> (= (ControlFlow 0 252) 244) anon536_Else_correct)))))
(let ((anon488_Else_correct  (=> (= |##f#0_5_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and (and ($IsAlloc HandleTypeType |##f#0_5_1@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (forall ((|$l#0_5_18#x#0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_5_18#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))))) (and (=> (= (ControlFlow 0 339) 338) anon492_Then_correct) (=> (= (ControlFlow 0 339) 252) anon492_Else_correct))))))
(let ((anon486_Else_correct  (=> (and (and (= |##f#0_5_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_5_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 347) 346) anon488_Then_correct) (=> (= (ControlFlow 0 347) 339) anon488_Else_correct)))))
(let ((anon485_Then_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 351) 350) anon486_Then_correct) (=> (= (ControlFlow 0 351) 347) anon486_Else_correct)))))
(let ((anon552_Else_correct true))
(let ((anon552_Then_correct true))
(let ((anon551_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_4_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_4_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_4_0@0|))) (and (=> (= (ControlFlow 0 220) 218) anon552_Then_correct) (=> (= (ControlFlow 0 220) 219) anon552_Else_correct)))))
(let ((anon556_Else_correct true))
(let ((anon556_Then_correct true))
(let ((anon555_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_4_2@0|) (or (= |$lambdaHeap#0_4_1@0| |$lambdaHeap#0_4_2@0|) ($HeapSucc |$lambdaHeap#0_4_1@0| |$lambdaHeap#0_4_2@0|))) (and (=> (= (ControlFlow 0 214) 212) anon556_Then_correct) (=> (= (ControlFlow 0 214) 213) anon556_Else_correct)))))
(let ((anon555_Else_correct true))
(let ((anon554_Then_correct  (=> (and (= |$_Frame#l0_4_1@0| (|lambda#0| null |$lambdaHeap#0_4_1@0| alloc false)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat |$lambdaHeap#0_4_1@0|)) (and (=> (= (ControlFlow 0 215) 214) anon555_Then_correct) (=> (= (ControlFlow 0 215) 211) anon555_Else_correct)))))
(let ((anon554_Else_correct true))
(let ((anon553_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_4_1@0|) (or (= $Heap@@2 |$lambdaHeap#0_4_1@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_4_1@0|))) (and (=> (= (ControlFlow 0 216) 215) anon554_Then_correct) (=> (= (ControlFlow 0 216) 210) anon554_Else_correct)))))
(let ((anon558_Else_correct true))
(let ((anon558_Then_correct true))
(let ((anon557_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_4_3@0|) (or (= $Heap@2 |$lambdaHeap#0_4_3@0|) ($HeapSucc $Heap@2 |$lambdaHeap#0_4_3@0|))) (and (=> (= (ControlFlow 0 208) 206) anon558_Then_correct) (=> (= (ControlFlow 0 208) 207) anon558_Else_correct)))))
(let ((anon562_Else_correct true))
(let ((anon562_Then_correct true))
(let ((anon561_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_4_5@0|) (or (= |$lambdaHeap#0_4_4@0| |$lambdaHeap#0_4_5@0|) ($HeapSucc |$lambdaHeap#0_4_4@0| |$lambdaHeap#0_4_5@0|))) (and (=> (= (ControlFlow 0 202) 200) anon562_Then_correct) (=> (= (ControlFlow 0 202) 201) anon562_Else_correct)))))
(let ((anon566_Else_correct true))
(let ((anon566_Then_correct true))
(let ((anon565_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_4_7@0|) (or (= |$lambdaHeap#0_4_6@0| |$lambdaHeap#0_4_7@0|) ($HeapSucc |$lambdaHeap#0_4_6@0| |$lambdaHeap#0_4_7@0|))) (and (=> (= (ControlFlow 0 197) 195) anon566_Then_correct) (=> (= (ControlFlow 0 197) 196) anon566_Else_correct)))))
(let ((anon565_Else_correct true))
(let ((anon564_Then_correct  (=> (and (= |$_Frame#l0_4_6@0| (|lambda#0| null |$lambdaHeap#0_4_6@0| alloc false)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat |$lambdaHeap#0_4_6@0|)) (and (=> (= (ControlFlow 0 198) 197) anon565_Then_correct) (=> (= (ControlFlow 0 198) 194) anon565_Else_correct)))))
(let ((anon564_Else_correct true))
(let ((anon563_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_4_6@0|) (or (= |$lambdaHeap#0_4_4@0| |$lambdaHeap#0_4_6@0|) ($HeapSucc |$lambdaHeap#0_4_4@0| |$lambdaHeap#0_4_6@0|))) (and (=> (= (ControlFlow 0 199) 198) anon564_Then_correct) (=> (= (ControlFlow 0 199) 193) anon564_Else_correct)))))
(let ((anon563_Else_correct true))
(let ((anon560_Then_correct  (=> (= |$_Frame#l0_4_4@0| (|lambda#0| null |$lambdaHeap#0_4_4@0| alloc false)) (and (and (=> (= (ControlFlow 0 203) 202) anon561_Then_correct) (=> (= (ControlFlow 0 203) 199) anon563_Then_correct)) (=> (= (ControlFlow 0 203) 192) anon563_Else_correct)))))
(let ((anon560_Else_correct true))
(let ((anon559_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_4_4@0|) (or (= $Heap@2 |$lambdaHeap#0_4_4@0|) ($HeapSucc $Heap@2 |$lambdaHeap#0_4_4@0|))) (and (=> (= (ControlFlow 0 204) 203) anon560_Then_correct) (=> (= (ControlFlow 0 204) 191) anon560_Else_correct)))))
(let ((anon559_Else_correct  (=> (= |##f#0_4_4@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#773| TInt TInt (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) TInt TInt (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_4_4@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#773| TInt TInt (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) TInt TInt (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (=> (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (forall ((|$l#0_4_62#w#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_4_62#w#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#773| TInt TInt (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) TInt TInt (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) (= (ControlFlow 0 190) (- 0 189))) (= (+ (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (+ (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#773| TInt TInt (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) TInt TInt (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))))))))
(let ((anon557_Else_correct  (=> (and (and (= |##f#0_4_3@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_4_3@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@2))) (and (=> (= (ControlFlow 0 205) 204) anon559_Then_correct) (=> (= (ControlFlow 0 205) 190) anon559_Else_correct)))))
(let ((anon553_Else_correct  (=> (= |##f#0_4_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_4_1@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (=> (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (forall ((|$l#0_4_18#x#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_4_18#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) (and ($IsGoodHeap $Heap@2) ($IsHeapAnchor $Heap@2))) (=> (and (and (and (and (forall ((|$l#51#x#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#51#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (and (forall ((|$l#58#w#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#58#w#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#773| TInt TInt (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) TInt TInt (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) (= (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#692| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|)) |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#773| TInt TInt (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) TInt TInt (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) (and (= $Heap@@2 $Heap@2) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@2))) (and (=> (= (ControlFlow 0 209) 208) anon557_Then_correct) (=> (= (ControlFlow 0 209) 205) anon557_Else_correct))))))))
(let ((anon551_Else_correct  (=> (and (and (= |##f#0_4_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_4_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 217) 216) anon553_Then_correct) (=> (= (ControlFlow 0 217) 209) anon553_Else_correct)))))
(let ((anon550_Then_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 221) 220) anon551_Then_correct) (=> (= (ControlFlow 0 221) 217) anon551_Else_correct)))))
(let ((anon569_Else_correct true))
(let ((anon569_Then_correct true))
(let ((anon568_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_3_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_3_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_3_0@0|))) (and (=> (= (ControlFlow 0 187) 185) anon569_Then_correct) (=> (= (ControlFlow 0 187) 186) anon569_Else_correct)))))
(let ((anon573_Else_correct true))
(let ((anon573_Then_correct true))
(let ((anon572_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_3_2@0|) (or (= |$lambdaHeap#0_3_1@0| |$lambdaHeap#0_3_2@0|) ($HeapSucc |$lambdaHeap#0_3_1@0| |$lambdaHeap#0_3_2@0|))) (and (=> (= (ControlFlow 0 181) 179) anon573_Then_correct) (=> (= (ControlFlow 0 181) 180) anon573_Else_correct)))))
(let ((anon577_Else_correct true))
(let ((anon577_Then_correct true))
(let ((anon576_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_3_4@0|) (or (= |$lambdaHeap#0_3_3@0| |$lambdaHeap#0_3_4@0|) ($HeapSucc |$lambdaHeap#0_3_3@0| |$lambdaHeap#0_3_4@0|))) (and (=> (= (ControlFlow 0 176) 174) anon577_Then_correct) (=> (= (ControlFlow 0 176) 175) anon577_Else_correct)))))
(let ((anon576_Else_correct true))
(let ((anon575_Then_correct  (=> (and (= |$_Frame#l0_3_3@0| (|lambda#0| null |$lambdaHeap#0_3_3@0| alloc false)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat |$lambdaHeap#0_3_3@0|)) (and (=> (= (ControlFlow 0 177) 176) anon576_Then_correct) (=> (= (ControlFlow 0 177) 173) anon576_Else_correct)))))
(let ((anon575_Else_correct true))
(let ((anon574_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_3_3@0|) (or (= |$lambdaHeap#0_3_1@0| |$lambdaHeap#0_3_3@0|) ($HeapSucc |$lambdaHeap#0_3_1@0| |$lambdaHeap#0_3_3@0|))) (and (=> (= (ControlFlow 0 178) 177) anon575_Then_correct) (=> (= (ControlFlow 0 178) 172) anon575_Else_correct)))))
(let ((anon574_Else_correct true))
(let ((anon571_Then_correct  (=> (= |$_Frame#l0_3_1@0| (|lambda#0| null |$lambdaHeap#0_3_1@0| alloc false)) (and (and (=> (= (ControlFlow 0 182) 181) anon572_Then_correct) (=> (= (ControlFlow 0 182) 178) anon574_Then_correct)) (=> (= (ControlFlow 0 182) 171) anon574_Else_correct)))))
(let ((anon571_Else_correct true))
(let ((anon570_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_3_1@0|) (or (= $Heap@@2 |$lambdaHeap#0_3_1@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_3_1@0|))) (and (=> (= (ControlFlow 0 183) 182) anon571_Then_correct) (=> (= (ControlFlow 0 183) 170) anon571_Else_correct)))))
(let ((anon581_Else_correct true))
(let ((anon581_Then_correct true))
(let ((anon580_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_3_6@0|) (or (= |$lambdaHeap#0_3_5@0| |$lambdaHeap#0_3_6@0|) ($HeapSucc |$lambdaHeap#0_3_5@0| |$lambdaHeap#0_3_6@0|))) (and (=> (= (ControlFlow 0 166) 164) anon581_Then_correct) (=> (= (ControlFlow 0 166) 165) anon581_Else_correct)))))
(let ((anon585_Else_correct true))
(let ((anon585_Then_correct true))
(let ((anon584_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_3_8@0|) (or (= |$lambdaHeap#0_3_7@0| |$lambdaHeap#0_3_8@0|) ($HeapSucc |$lambdaHeap#0_3_7@0| |$lambdaHeap#0_3_8@0|))) (and (=> (= (ControlFlow 0 161) 159) anon585_Then_correct) (=> (= (ControlFlow 0 161) 160) anon585_Else_correct)))))
(let ((anon584_Else_correct true))
(let ((anon583_Then_correct  (=> (and (= |$_Frame#l0_3_7@0| (|lambda#0| null |$lambdaHeap#0_3_7@0| alloc false)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat |$lambdaHeap#0_3_7@0|)) (and (=> (= (ControlFlow 0 162) 161) anon584_Then_correct) (=> (= (ControlFlow 0 162) 158) anon584_Else_correct)))))
(let ((anon583_Else_correct true))
(let ((anon582_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_3_7@0|) (or (= |$lambdaHeap#0_3_5@0| |$lambdaHeap#0_3_7@0|) ($HeapSucc |$lambdaHeap#0_3_5@0| |$lambdaHeap#0_3_7@0|))) (and (=> (= (ControlFlow 0 163) 162) anon583_Then_correct) (=> (= (ControlFlow 0 163) 157) anon583_Else_correct)))))
(let ((anon582_Else_correct true))
(let ((anon579_Then_correct  (=> (= |$_Frame#l0_3_5@0| (|lambda#0| null |$lambdaHeap#0_3_5@0| alloc false)) (and (and (=> (= (ControlFlow 0 167) 166) anon580_Then_correct) (=> (= (ControlFlow 0 167) 163) anon582_Then_correct)) (=> (= (ControlFlow 0 167) 156) anon582_Else_correct)))))
(let ((anon579_Else_correct true))
(let ((anon578_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_3_5@0|) (or (= $Heap@@2 |$lambdaHeap#0_3_5@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_3_5@0|))) (and (=> (= (ControlFlow 0 168) 167) anon579_Then_correct) (=> (= (ControlFlow 0 168) 155) anon579_Else_correct)))))
(let ((anon587_Else_correct true))
(let ((anon587_Then_correct true))
(let ((anon586_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_3_9@0|) (or (= $Heap@@2 |$lambdaHeap#0_3_9@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_3_9@0|))) (and (=> (= (ControlFlow 0 153) 151) anon587_Then_correct) (=> (= (ControlFlow 0 153) 152) anon587_Else_correct)))))
(let ((anon589_Else_correct true))
(let ((anon589_Then_correct true))
(let ((anon588_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_3_10@0|) (or (= $Heap@1 |$lambdaHeap#0_3_10@0|) ($HeapSucc $Heap@1 |$lambdaHeap#0_3_10@0|))) (and (=> (= (ControlFlow 0 148) 146) anon589_Then_correct) (=> (= (ControlFlow 0 148) 147) anon589_Else_correct)))))
(let ((anon591_Else_correct true))
(let ((anon591_Then_correct true))
(let ((anon590_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_3_11@0|) (or (= $Heap@1 |$lambdaHeap#0_3_11@0|) ($HeapSucc $Heap@1 |$lambdaHeap#0_3_11@0|))) (and (=> (= (ControlFlow 0 144) 142) anon591_Then_correct) (=> (= (ControlFlow 0 144) 143) anon591_Else_correct)))))
(let ((anon590_Else_correct  (=> (= |##f#0_3_5@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#170| TInt TInt |A#0@0| TInt TInt |B#0@0|) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_3_5@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@1) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#170| TInt TInt |A#0@0| TInt TInt |B#0@0|) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (=> (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#170| TInt TInt |A#0@0| TInt TInt |B#0@0|) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (= (ControlFlow 0 141) (- 0 140))) (= (+ (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@1 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#773| TInt TInt (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) TInt TInt (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (+ (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@1 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#170| TInt TInt |A#0@0| TInt TInt |B#0@0|) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))))))))))
(let ((anon588_Else_correct  (=> (and (and (= |##f#0_3_4@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_3_4@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@1)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@1))) (and (=> (= (ControlFlow 0 145) 144) anon590_Then_correct) (=> (= (ControlFlow 0 145) 141) anon590_Else_correct)))))
(let ((anon586_Else_correct  (=> (= |g##0_3_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#170| TInt TInt |A#0@0| TInt TInt |B#0@0|) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (=> (= (ControlFlow 0 149) (- 0 150)) (forall ((|i#1@@1| Int) ) (!  (=> (and (<= (LitInt 0) |i#1@@1|) (< |i#1@@1| |n'#0|)) (= (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 |f##0_3_0@0| ($Box intType (int_2_U |i#1@@1|))))) (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 |g##0_3_0@0| ($Box intType (int_2_U |i#1@@1|)))))))
 :pattern ( ($Unbox intType (Apply1 TInt TInt $Heap@@2 |g##0_3_0@0| ($Box intType (int_2_U |i#1@@1|)))))
 :pattern ( ($Unbox intType (Apply1 TInt TInt $Heap@@2 |f##0_3_0@0| ($Box intType (int_2_U |i#1@@1|)))))
))) (=> (forall ((|i#1@@2| T@U) ) (!  (=> (and (<= (LitInt 0) (U_2_int |i#1@@2|)) (< (U_2_int |i#1@@2|) |n'#0|)) (= (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 |f##0_3_0@0| ($Box intType |i#1@@2|)))) (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@@2 |g##0_3_0@0| ($Box intType |i#1@@2|))))))
 :pattern ( ($Unbox intType (Apply1 TInt TInt $Heap@@2 |g##0_3_0@0| ($Box intType |i#1@@2|))))
 :pattern ( ($Unbox intType (Apply1 TInt TInt $Heap@@2 |f##0_3_0@0| ($Box intType |i#1@@2|))))
)) (=> (and ($IsGoodHeap $Heap@1) ($IsHeapAnchor $Heap@1)) (=> (and (and (and (|_module.__default.Sum#canCall| |n'#0| |f##0_3_0@0|) (|_module.__default.Sum#canCall| |n'#0| |g##0_3_0@0|)) (= (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| |f##0_3_0@0|) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| |g##0_3_0@0|))) (and (= $Heap@@2 $Heap@1) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@1))) (and (=> (= (ControlFlow 0 149) 148) anon588_Then_correct) (=> (= (ControlFlow 0 149) 145) anon588_Else_correct)))))))))
(let ((anon578_Else_correct  (=> (and (forall ((|$l#0_3_68#w#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_3_68#w#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (= |f##0_3_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#773| TInt TInt (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) TInt TInt (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (and (=> (= (ControlFlow 0 154) 153) anon586_Then_correct) (=> (= (ControlFlow 0 154) 149) anon586_Else_correct)))))
(let ((anon570_Else_correct  (=> (= |##f#0_3_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#773| TInt TInt (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) TInt TInt (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and (and ($IsAlloc HandleTypeType |##f#0_3_1@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#773| TInt TInt (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) TInt TInt (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (forall ((|$l#0_3_39#w#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_3_39#w#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#773| TInt TInt (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) TInt TInt (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))))) (and (=> (= (ControlFlow 0 169) 168) anon578_Then_correct) (=> (= (ControlFlow 0 169) 154) anon578_Else_correct))))))
(let ((anon568_Else_correct  (=> (and (and (= |##f#0_3_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_3_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 184) 183) anon570_Then_correct) (=> (= (ControlFlow 0 184) 169) anon570_Else_correct)))))
(let ((anon567_Then_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 188) 187) anon568_Then_correct) (=> (= (ControlFlow 0 188) 184) anon568_Else_correct)))))
(let ((anon594_Else_correct true))
(let ((anon594_Then_correct true))
(let ((anon593_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_2_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_2_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_2_0@0|))) (and (=> (= (ControlFlow 0 138) 136) anon594_Then_correct) (=> (= (ControlFlow 0 138) 137) anon594_Else_correct)))))
(let ((anon596_Else_correct true))
(let ((anon596_Then_correct true))
(let ((anon595_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_2_1@0|) (or (= $Heap@@2 |$lambdaHeap#0_2_1@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_2_1@0|))) (and (=> (= (ControlFlow 0 134) 132) anon596_Then_correct) (=> (= (ControlFlow 0 134) 133) anon596_Else_correct)))))
(let ((anon598_Else_correct true))
(let ((anon598_Then_correct true))
(let ((anon597_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_2_2@0|) (or (= $Heap@0 |$lambdaHeap#0_2_2@0|) ($HeapSucc $Heap@0 |$lambdaHeap#0_2_2@0|))) (and (=> (= (ControlFlow 0 130) 128) anon598_Then_correct) (=> (= (ControlFlow 0 130) 129) anon598_Else_correct)))))
(let ((anon597_Else_correct  (=> (= |##f#0_2_2@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (=> (and (and (and (and ($IsAlloc HandleTypeType |##f#0_2_2@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@0) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@0) ($IsAlloc HandleTypeType |A#0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@0))) (and (and (|_module.__default.Sum#canCall| |n'#0| |A#0@0|) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@0)) (and ($IsAlloc HandleTypeType |B#0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@0) (|_module.__default.Sum#canCall| |n'#0| |B#0@0|)))) (and (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (|_module.__default.Sum#canCall| |n'#0| |A#0@0|)) (|_module.__default.Sum#canCall| |n'#0| |B#0@0|)) (= (ControlFlow 0 127) (- 0 126)))) (= (+ (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@0 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#170| TInt TInt |A#0@0| TInt TInt |B#0@0|) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (+ (+ (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@0 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| |A#0@0|)) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| |B#0@0|)))))))
(let ((anon595_Else_correct  (=> (= |##f#0_2_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#170| TInt TInt |A#0@0| TInt TInt |B#0@0|) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_2_1@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#170| TInt TInt |A#0@0| TInt TInt |B#0@0|) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (=> (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#170| TInt TInt |A#0@0| TInt TInt |B#0@0|) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and ($IsGoodHeap $Heap@0) ($IsHeapAnchor $Heap@0))) (=> (and (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#170| TInt TInt |A#0@0| TInt TInt |B#0@0|) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (|_module.__default.Sum#canCall| |n'#0| |A#0@0|) (|_module.__default.Sum#canCall| |n'#0| |B#0@0|))) (= (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#170| TInt TInt |A#0@0| TInt TInt |B#0@0|) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (+ (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| |A#0@0|) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| |B#0@0|)))) (and (= $Heap@@2 $Heap@0) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@0))) (and (=> (= (ControlFlow 0 131) 130) anon597_Then_correct) (=> (= (ControlFlow 0 131) 127) anon597_Else_correct))))))))
(let ((anon593_Else_correct  (=> (and (and (= |##f#0_2_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_2_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 135) 134) anon595_Then_correct) (=> (= (ControlFlow 0 135) 131) anon595_Else_correct)))))
(let ((anon592_Then_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 139) 138) anon593_Then_correct) (=> (= (ControlFlow 0 139) 135) anon593_Else_correct)))))
(let ((anon601_Else_correct true))
(let ((anon601_Then_correct true))
(let ((anon600_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_1_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_1_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_1_0@0|))) (and (=> (= (ControlFlow 0 124) 122) anon601_Then_correct) (=> (= (ControlFlow 0 124) 123) anon601_Else_correct)))))
(let ((anon603_Else_correct true))
(let ((anon603_Then_correct true))
(let ((anon602_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_1_1@0|) (or (= $Heap@@2 |$lambdaHeap#0_1_1@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_1_1@0|))) (and (=> (= (ControlFlow 0 120) 118) anon603_Then_correct) (=> (= (ControlFlow 0 120) 119) anon603_Else_correct)))))
(let ((anon605_Else_correct true))
(let ((anon605_Then_correct true))
(let ((anon604_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_1_2@0|) (or (= $Heap@@2 |$lambdaHeap#0_1_2@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_1_2@0|))) (and (=> (= (ControlFlow 0 116) 114) anon605_Then_correct) (=> (= (ControlFlow 0 116) 115) anon605_Else_correct)))))
(let ((anon609_Else_correct true))
(let ((anon609_Then_correct true))
(let ((anon608_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_1_4@0|) (or (= |$lambdaHeap#0_1_3@0| |$lambdaHeap#0_1_4@0|) ($HeapSucc |$lambdaHeap#0_1_3@0| |$lambdaHeap#0_1_4@0|))) (and (=> (= (ControlFlow 0 110) 108) anon609_Then_correct) (=> (= (ControlFlow 0 110) 109) anon609_Else_correct)))))
(let ((anon608_Else_correct true))
(let ((anon607_Then_correct  (=> (and (= |$_Frame#l0_1_3@0| (|lambda#0| null |$lambdaHeap#0_1_3@0| alloc false)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat |$lambdaHeap#0_1_3@0|)) (and (=> (= (ControlFlow 0 111) 110) anon608_Then_correct) (=> (= (ControlFlow 0 111) 107) anon608_Else_correct)))))
(let ((anon607_Else_correct true))
(let ((anon606_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_1_3@0|) (or (= $Heap@@2 |$lambdaHeap#0_1_3@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_1_3@0|))) (and (=> (= (ControlFlow 0 112) 111) anon607_Then_correct) (=> (= (ControlFlow 0 112) 106) anon607_Else_correct)))))
(let ((anon606_Else_correct  (=> (= |##f#0_1_5@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_1_5@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (=> (and (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and (forall ((|$l#0_1_28#w#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_1_28#w#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) (= (ControlFlow 0 105) (- 0 104))) (= (+ (+ (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| |A#0@0|)) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| |B#0@0|)) (+ (+ (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))))))))
(let ((anon604_Else_correct  (=> (and (and (= |##f#0_1_4@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_1_4@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 113) 112) anon606_Then_correct) (=> (= (ControlFlow 0 113) 105) anon606_Else_correct)))))
(let ((anon602_Else_correct  (=> (and (and (= |##f#0_1_3@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_1_3@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 117) 116) anon604_Then_correct) (=> (= (ControlFlow 0 117) 113) anon604_Else_correct)))))
(let ((anon600_Else_correct  (=> (= |##f#0_1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (=> (and (and (and (and ($IsAlloc HandleTypeType |##f#0_1_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) ($IsAlloc HandleTypeType |A#0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2))) (and (and (|_module.__default.Sum#canCall| |n'#0| |A#0@0|) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2)) (and ($IsAlloc HandleTypeType |B#0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| |B#0@0|)))) (and (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (|_module.__default.Sum#canCall| |n'#0| |A#0@0|)) (|_module.__default.Sum#canCall| |n'#0| |B#0@0|)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 121) 120) anon602_Then_correct) (=> (= (ControlFlow 0 121) 117) anon602_Else_correct))))))
(let ((anon599_Then_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 125) 124) anon600_Then_correct) (=> (= (ControlFlow 0 125) 121) anon600_Else_correct)))))
(let ((anon612_Else_correct true))
(let ((anon612_Then_correct true))
(let ((anon611_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_0_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_0_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_0_0@0|))) (and (=> (= (ControlFlow 0 102) 100) anon612_Then_correct) (=> (= (ControlFlow 0 102) 101) anon612_Else_correct)))))
(let ((anon614_Else_correct true))
(let ((anon614_Then_correct true))
(let ((anon613_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_0_1@0|) (or (= $Heap@@2 |$lambdaHeap#0_0_1@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_0_1@0|))) (and (=> (= (ControlFlow 0 98) 96) anon614_Then_correct) (=> (= (ControlFlow 0 98) 97) anon614_Else_correct)))))
(let ((anon618_Else_correct true))
(let ((anon618_Then_correct true))
(let ((anon617_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_0_3@0|) (or (= |$lambdaHeap#0_0_2@0| |$lambdaHeap#0_0_3@0|) ($HeapSucc |$lambdaHeap#0_0_2@0| |$lambdaHeap#0_0_3@0|))) (and (=> (= (ControlFlow 0 92) 90) anon618_Then_correct) (=> (= (ControlFlow 0 92) 91) anon618_Else_correct)))))
(let ((anon617_Else_correct true))
(let ((anon616_Then_correct  (=> (and (= |$_Frame#l0_0_2@0| (|lambda#0| null |$lambdaHeap#0_0_2@0| alloc false)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat |$lambdaHeap#0_0_2@0|)) (and (=> (= (ControlFlow 0 93) 92) anon617_Then_correct) (=> (= (ControlFlow 0 93) 89) anon617_Else_correct)))))
(let ((anon616_Else_correct true))
(let ((anon615_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_0_2@0|) (or (= $Heap@@2 |$lambdaHeap#0_0_2@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_0_2@0|))) (and (=> (= (ControlFlow 0 94) 93) anon616_Then_correct) (=> (= (ControlFlow 0 94) 88) anon616_Else_correct)))))
(let ((anon622_Else_correct true))
(let ((anon622_Then_correct true))
(let ((anon621_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_0_5@0|) (or (= |$lambdaHeap#0_0_4@0| |$lambdaHeap#0_0_5@0|) ($HeapSucc |$lambdaHeap#0_0_4@0| |$lambdaHeap#0_0_5@0|))) (and (=> (= (ControlFlow 0 84) 82) anon622_Then_correct) (=> (= (ControlFlow 0 84) 83) anon622_Else_correct)))))
(let ((anon621_Else_correct true))
(let ((anon620_Then_correct  (=> (and (= |$_Frame#l0_0_4@0| (|lambda#0| null |$lambdaHeap#0_0_4@0| alloc false)) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat |$lambdaHeap#0_0_4@0|)) (and (=> (= (ControlFlow 0 85) 84) anon621_Then_correct) (=> (= (ControlFlow 0 85) 81) anon621_Else_correct)))))
(let ((anon620_Else_correct true))
(let ((anon619_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_0_4@0|) (or (= $Heap@@2 |$lambdaHeap#0_0_4@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_0_4@0|))) (and (=> (= (ControlFlow 0 86) 85) anon620_Then_correct) (=> (= (ControlFlow 0 86) 80) anon620_Else_correct)))))
(let ((anon624_Else_correct true))
(let ((anon624_Then_correct true))
(let ((anon623_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_0_6@0|) (or (= $Heap@@2 |$lambdaHeap#0_0_6@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_0_6@0|))) (and (=> (= (ControlFlow 0 78) 76) anon624_Then_correct) (=> (= (ControlFlow 0 78) 77) anon624_Else_correct)))))
(let ((anon626_Else_correct true))
(let ((anon626_Then_correct true))
(let ((anon625_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_0_7@0|) (or (= $Heap@@2 |$lambdaHeap#0_0_7@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_0_7@0|))) (and (=> (= (ControlFlow 0 74) 72) anon626_Then_correct) (=> (= (ControlFlow 0 74) 73) anon626_Else_correct)))))
(let ((anon625_Else_correct  (=> (= |##f#0_0_7@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_0_7@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (=> (and (and (and (and (forall ((|$l#0_0_47#x#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_0_47#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (= (ControlFlow 0 71) (- 0 70))) (= (+ (+ (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (+ (+ (+ (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))))))))))
(let ((anon623_Else_correct  (=> (and (and (= |##f#0_0_6@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_0_6@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 75) 74) anon625_Then_correct) (=> (= (ControlFlow 0 75) 71) anon625_Else_correct)))))
(let ((anon619_Else_correct  (=> (and (and (= |##f#0_0_4@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_0_4@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 79) 78) anon623_Then_correct) (=> (= (ControlFlow 0 79) 75) anon623_Else_correct)))))
(let ((anon615_Else_correct  (=> (= |##f#0_0_2@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_0_2@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (=> (and (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and (forall ((|$l#0_0_23#w#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_0_23#w#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2)) (and (=> (= (ControlFlow 0 87) 86) anon619_Then_correct) (=> (= (ControlFlow 0 87) 79) anon619_Else_correct)))))))
(let ((anon613_Else_correct  (=> (and (and (= |##f#0_0_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_0_1@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 95) 94) anon615_Then_correct) (=> (= (ControlFlow 0 95) 87) anon615_Else_correct)))))
(let ((anon611_Else_correct  (=> (and (and (= |##f#0_0_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_0_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 99) 98) anon613_Then_correct) (=> (= (ControlFlow 0 99) 95) anon613_Else_correct)))))
(let ((anon610_Then_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 103) 102) anon611_Then_correct) (=> (= (ControlFlow 0 103) 99) anon611_Else_correct)))))
(let ((GeneratedUnifiedExit_correct  (=> (= (ControlFlow 0 68) (- 0 67)) (= (_module.__default.Sum ($LS ($LS $LZ)) |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (+ (+ (+ (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@7 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))))))))
(let ((anon610_Else_correct  (=> (= (_module.__default.Sum ($LS $LZ) |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (+ (+ (+ (_module.__default.Sum ($LS $LZ) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (_module.__default.Sum ($LS $LZ) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS $LZ) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))))) (=> (and (= $Heap@7 $Heap@@2) (= (ControlFlow 0 69) 68)) GeneratedUnifiedExit_correct))))
(let ((anon108_correct true))
(let ((anon470_Else_correct  (=> (and (< |y#0_6_0@0| (LitInt 0)) (= (ControlFlow 0 65) 63)) anon108_correct)))
(let ((anon470_Then_correct  (=> (<= (LitInt 0) |y#0_6_0@0|) (=> (and (and (= |$_Frame#l0_6_0@0| (|lambda#0| null |$lambdaHeap#0_6_0@0| alloc false)) (= |lambdaResult#0_6_0| (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |y#0_6_0@0|))))))) (and ($Is intType (int_2_U |lambdaResult#0_6_0|) TInt) (= (ControlFlow 0 64) 63))) anon108_correct))))
(let ((anon469_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_6_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_6_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_6_0@0|))) (and (=> (= (ControlFlow 0 66) 64) anon470_Then_correct) (=> (= (ControlFlow 0 66) 65) anon470_Else_correct)))))
(let ((anon472_Else_correct true))
(let ((anon472_Then_correct true))
(let ((anon471_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_6_1@0|) (or (= $Heap@@2 |$lambdaHeap#0_6_1@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_6_1@0|))) (and (=> (= (ControlFlow 0 61) 59) anon472_Then_correct) (=> (= (ControlFlow 0 61) 60) anon472_Else_correct)))))
(let ((anon476_Else_correct true))
(let ((anon476_Then_correct true))
(let ((anon475_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_6_3@0|) (or (= |$lambdaHeap#0_6_2@0| |$lambdaHeap#0_6_3@0|) ($HeapSucc |$lambdaHeap#0_6_2@0| |$lambdaHeap#0_6_3@0|))) (and (=> (= (ControlFlow 0 55) 53) anon476_Then_correct) (=> (= (ControlFlow 0 55) 54) anon476_Else_correct)))))
(let ((anon475_Else_correct true))
(let ((anon474_Then_correct  (=> (and (= |$_Frame#l0_6_2@0| (|lambda#0| null |$lambdaHeap#0_6_2@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_6_2@0|)) (and (=> (= (ControlFlow 0 56) 55) anon475_Then_correct) (=> (= (ControlFlow 0 56) 52) anon475_Else_correct)))))
(let ((anon474_Else_correct true))
(let ((anon473_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_6_2@0|) (or (= $Heap@@2 |$lambdaHeap#0_6_2@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_6_2@0|))) (and (=> (= (ControlFlow 0 57) 56) anon474_Then_correct) (=> (= (ControlFlow 0 57) 51) anon474_Else_correct)))))
(let ((anon124_correct true))
(let ((anon478_Else_correct  (=> (and (< |y#0_6_3@0| (LitInt 0)) (= (ControlFlow 0 48) 46)) anon124_correct)))
(let ((anon478_Then_correct  (=> (<= (LitInt 0) |y#0_6_3@0|) (=> (and (and (= |$_Frame#l0_6_4@0| (|lambda#0| null |$lambdaHeap#0_6_4@0| alloc false)) (= |lambdaResult#0_6_4| (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |y#0_6_3@0|))))))) (and ($Is intType (int_2_U |lambdaResult#0_6_4|) TInt) (= (ControlFlow 0 47) 46))) anon124_correct))))
(let ((anon477_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_6_4@0|) (or (= $Heap@@2 |$lambdaHeap#0_6_4@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_6_4@0|))) (and (=> (= (ControlFlow 0 49) 47) anon478_Then_correct) (=> (= (ControlFlow 0 49) 48) anon478_Else_correct)))))
(let ((anon480_Else_correct true))
(let ((anon480_Then_correct true))
(let ((anon479_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_6_5@0|) (or (= $Heap@@2 |$lambdaHeap#0_6_5@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_6_5@0|))) (and (=> (= (ControlFlow 0 43) 41) anon480_Then_correct) (=> (= (ControlFlow 0 43) 42) anon480_Else_correct)))))
(let ((anon484_Else_correct true))
(let ((anon484_Then_correct true))
(let ((anon483_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_6_7@0|) (or (= |$lambdaHeap#0_6_6@0| |$lambdaHeap#0_6_7@0|) ($HeapSucc |$lambdaHeap#0_6_6@0| |$lambdaHeap#0_6_7@0|))) (and (=> (= (ControlFlow 0 37) 35) anon484_Then_correct) (=> (= (ControlFlow 0 37) 36) anon484_Else_correct)))))
(let ((anon483_Else_correct true))
(let ((anon482_Then_correct  (=> (and (= |$_Frame#l0_6_6@0| (|lambda#0| null |$lambdaHeap#0_6_6@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_6_6@0|)) (and (=> (= (ControlFlow 0 38) 37) anon483_Then_correct) (=> (= (ControlFlow 0 38) 34) anon483_Else_correct)))))
(let ((anon482_Else_correct true))
(let ((anon481_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_6_6@0|) (or (= $Heap@@2 |$lambdaHeap#0_6_6@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_6_6@0|))) (and (=> (= (ControlFlow 0 39) 38) anon482_Then_correct) (=> (= (ControlFlow 0 39) 33) anon482_Else_correct)))))
(let ((anon481_Else_correct  (=> (= |##f#0_6_4@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_6_4@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (=> (and (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (forall ((|$l#0_6_47#x#0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_6_47#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) (= (ControlFlow 0 32) (- 0 31))) (= (+ (+ (U_2_int ($Unbox intType (Apply1 Tclass._System.nat TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| Tclass._System.nat) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (+ (+ (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))))))))
(let ((anon479_Else_correct  (=> (and (and (= |##f#0_6_3@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_6_3@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 40) 39) anon481_Then_correct) (=> (= (ControlFlow 0 40) 32) anon481_Else_correct)))))
(let ((anon477_Else_correct  (and (=> (= (ControlFlow 0 44) (- 0 45)) (= (U_2_int ($Unbox intType (Apply1 Tclass._System.nat TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| Tclass._System.nat) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))) ($Box intType (int_2_U |n'#0|))))) (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|))))))) (=> (= (U_2_int ($Unbox intType (Apply1 Tclass._System.nat TInt $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| Tclass._System.nat) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))) ($Box intType (int_2_U |n'#0|))))) (U_2_int ($Unbox intType (Apply2 TInt TInt TInt $Heap@@2 |g#0| ($Box intType (int_2_U |n'#0|)) ($Box intType (int_2_U |n'#0|)))))) (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 44) 43) anon479_Then_correct) (=> (= (ControlFlow 0 44) 40) anon479_Else_correct)))))))
(let ((anon473_Else_correct  (=> (= |##f#0_6_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and (and ($IsAlloc HandleTypeType |##f#0_6_1@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (forall ((|$l#0_6_20#x#0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_6_20#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))))) (and (=> (= (ControlFlow 0 50) 49) anon477_Then_correct) (=> (= (ControlFlow 0 50) 44) anon477_Else_correct))))))
(let ((anon471_Else_correct  (=> (and (and (= |##f#0_6_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_6_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) (and (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2))) (and (=> (= (ControlFlow 0 58) 57) anon473_Then_correct) (=> (= (ControlFlow 0 58) 50) anon473_Else_correct)))))
(let ((anon469_Else_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 62) 61) anon471_Then_correct) (=> (= (ControlFlow 0 62) 58) anon471_Else_correct)))))
(let ((anon442_Else_correct true))
(let ((anon442_Then_correct true))
(let ((anon441_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_8_1@0|) (or (= |$lambdaHeap#0_8_0@0| |$lambdaHeap#0_8_1@0|) ($HeapSucc |$lambdaHeap#0_8_0@0| |$lambdaHeap#0_8_1@0|))) (and (=> (= (ControlFlow 0 28) 26) anon442_Then_correct) (=> (= (ControlFlow 0 28) 27) anon442_Else_correct)))))
(let ((anon54_correct true))
(let ((anon441_Else_correct  (=> (= |##f#0_8_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |x#0_8_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_8_0@0| (Tclass._System.___hTotalFunc1 TInt TInt) |$lambdaHeap#0_8_0@0|) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |x#0_8_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (=> (and (and (= |lambdaResult#0_8_0| (_module.__default.Sum ($LS $LZ) |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |x#0_8_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |x#0_8_0@0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (and ($Is intType (int_2_U |lambdaResult#0_8_0|) TInt) (= (ControlFlow 0 25) 23))) anon54_correct)))))
(let ((anon440_Then_correct  (=> (<= (LitInt 0) |x#0_8_0@0|) (=> (and (= |$_Frame#l0_8_0@0| (|lambda#0| null |$lambdaHeap#0_8_0@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_8_0@0|)) (and (=> (= (ControlFlow 0 29) 28) anon441_Then_correct) (=> (= (ControlFlow 0 29) 25) anon441_Else_correct))))))
(let ((anon440_Else_correct  (=> (and (< |x#0_8_0@0| (LitInt 0)) (= (ControlFlow 0 24) 23)) anon54_correct)))
(let ((anon439_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_8_0@0|) (or (= $Heap@@2 |$lambdaHeap#0_8_0@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_8_0@0|))) (and (=> (= (ControlFlow 0 30) 29) anon440_Then_correct) (=> (= (ControlFlow 0 30) 24) anon440_Else_correct)))))
(let ((anon446_Else_correct true))
(let ((anon446_Then_correct true))
(let ((anon445_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_8_3@0|) (or (= |$lambdaHeap#0_8_2@0| |$lambdaHeap#0_8_3@0|) ($HeapSucc |$lambdaHeap#0_8_2@0| |$lambdaHeap#0_8_3@0|))) (and (=> (= (ControlFlow 0 19) 17) anon446_Then_correct) (=> (= (ControlFlow 0 19) 18) anon446_Else_correct)))))
(let ((anon445_Else_correct true))
(let ((anon444_Then_correct  (=> (and (= |$_Frame#l0_8_2@0| (|lambda#0| null |$lambdaHeap#0_8_2@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_8_2@0|)) (and (=> (= (ControlFlow 0 20) 19) anon445_Then_correct) (=> (= (ControlFlow 0 20) 16) anon445_Else_correct)))))
(let ((anon444_Else_correct true))
(let ((anon443_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_8_2@0|) (or (= $Heap@@2 |$lambdaHeap#0_8_2@0|) ($HeapSucc $Heap@@2 |$lambdaHeap#0_8_2@0|))) (and (=> (= (ControlFlow 0 21) 20) anon444_Then_correct) (=> (= (ControlFlow 0 21) 15) anon444_Else_correct)))))
(let ((anon448_Else_correct true))
(let ((anon448_Then_correct true))
(let ((anon447_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_8_4@0|) (or (= $Heap@6 |$lambdaHeap#0_8_4@0|) ($HeapSucc $Heap@6 |$lambdaHeap#0_8_4@0|))) (and (=> (= (ControlFlow 0 13) 11) anon448_Then_correct) (=> (= (ControlFlow 0 13) 12) anon448_Else_correct)))))
(let ((anon452_Else_correct true))
(let ((anon452_Then_correct true))
(let ((anon451_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_8_6@0|) (or (= |$lambdaHeap#0_8_5@0| |$lambdaHeap#0_8_6@0|) ($HeapSucc |$lambdaHeap#0_8_5@0| |$lambdaHeap#0_8_6@0|))) (and (=> (= (ControlFlow 0 7) 5) anon452_Then_correct) (=> (= (ControlFlow 0 7) 6) anon452_Else_correct)))))
(let ((anon451_Else_correct true))
(let ((anon450_Then_correct  (=> (and (= |$_Frame#l0_8_5@0| (|lambda#0| null |$lambdaHeap#0_8_5@0| alloc false)) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat |$lambdaHeap#0_8_5@0|)) (and (=> (= (ControlFlow 0 8) 7) anon451_Then_correct) (=> (= (ControlFlow 0 8) 4) anon451_Else_correct)))))
(let ((anon450_Else_correct true))
(let ((anon449_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_8_5@0|) (or (= $Heap@6 |$lambdaHeap#0_8_5@0|) ($HeapSucc $Heap@6 |$lambdaHeap#0_8_5@0|))) (and (=> (= (ControlFlow 0 9) 8) anon450_Then_correct) (=> (= (ControlFlow 0 9) 3) anon450_Else_correct)))))
(let ((anon449_Else_correct  (=> (= |##f#0_8_4@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_8_4@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@6) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (=> (and (and (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (forall ((|$l#0_8_48#x#0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_8_48#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) (= (ControlFlow 0 2) (- 0 1))) (= (+ (U_2_int ($Unbox intType (Apply1 Tclass._System.nat TInt $Heap@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| Tclass._System.nat) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (+ (_module.__default.Sum ($LS ($LS $LZ)) |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (_module.__default.Sum ($LS ($LS $LZ)) |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))))))))
(let ((anon447_Else_correct  (=> (and (and (= |##f#0_8_3@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#0_8_3@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@6)) (and (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@6))) (and (=> (= (ControlFlow 0 10) 9) anon449_Then_correct) (=> (= (ControlFlow 0 10) 2) anon449_Else_correct)))))
(let ((anon443_Else_correct  (=> (= |##f#0_8_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_8_1@0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (=> (and (and (forall ((|$l#0_8_22#x#0| T@U) )  (=> (<= (LitInt 0) (U_2_int |$l#0_8_22#x#0|)) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_8_22#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))))) (and (forall ((|$l#0_8_25#x#0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#0_8_25#x#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ)))))) (and ($IsGoodHeap $Heap@6) ($IsHeapAnchor $Heap@6))) (=> (and (and (and (forall ((|$l#15#x#0@@0| T@U) ) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#15#x#0@@0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (|_module.__default.Sum#canCall| |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (= (U_2_int ($Unbox intType (Apply1 TInt TInt $Heap@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n#0@@3| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))) ($Box intType (int_2_U |n'#0|))))) (_module.__default.Sum ($LS ($LS $LZ)) |n#0@@3| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))))) (and (= $Heap@@2 $Heap@6) ($IsAlloc intType (int_2_U |n#0@@3|) Tclass._System.nat $Heap@6))) (and (=> (= (ControlFlow 0 14) 13) anon447_Then_correct) (=> (= (ControlFlow 0 14) 10) anon447_Else_correct))))))))
(let ((anon439_Else_correct  (=> ($IsAlloc intType (int_2_U |n'#0|) Tclass._System.nat $Heap@@2) (and (=> (= (ControlFlow 0 22) 21) anon443_Then_correct) (=> (= (ControlFlow 0 22) 14) anon443_Else_correct)))))
(let ((anon416_Else_correct  (=> (and (forall ((|$l#89#w#0| T@U) ) (|_module.__default.Sum#canCall| |n'#0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#43| TInt TInt TInt |g#0| ($Box intType |$l#89#w#0|)) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ))))) (= |B#0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#57| |n'#0| TInt TInt TInt |g#0| (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false)))) ($LS $LZ))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 419) 418) anon420_Then_correct) (=> (= (ControlFlow 0 419) 409) anon425_Then_correct)) (=> (= (ControlFlow 0 419) 382) anon453_Then_correct)) (=> (= (ControlFlow 0 419) 351) anon485_Then_correct)) (=> (= (ControlFlow 0 419) 221) anon550_Then_correct)) (=> (= (ControlFlow 0 419) 188) anon567_Then_correct)) (=> (= (ControlFlow 0 419) 139) anon592_Then_correct)) (=> (= (ControlFlow 0 419) 125) anon599_Then_correct)) (=> (= (ControlFlow 0 419) 103) anon610_Then_correct)) (=> (= (ControlFlow 0 419) 69) anon610_Else_correct)) (=> (= (ControlFlow 0 419) 66) anon469_Then_correct)) (=> (= (ControlFlow 0 419) 62) anon469_Else_correct)) (=> (= (ControlFlow 0 419) 30) anon439_Then_correct)) (=> (= (ControlFlow 0 419) 22) anon439_Else_correct)))))
(let ((anon414_Else_correct  (=> (= |A#0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#6| (Handle1 (|lambda#754| TInt TInt TInt |g#0| ($Box intType (int_2_U |n'#0|))) (|lambda#3| TInt) (|lambda#5| (SetRef_to_SetBox (|lambda#4| false))))) ($LS $LZ)))) (and (=> (= (ControlFlow 0 427) 426) anon416_Then_correct) (=> (= (ControlFlow 0 427) 419) anon416_Else_correct)))))
(let ((anon0_correct  (=> (= $_ModifiesFrame@0 (|lambda#0| null $Heap@@2 alloc false)) (and (=> (= (ControlFlow 0 431) 430) anon414_Then_correct) (=> (= (ControlFlow 0 431) 427) anon414_Else_correct)))))
(let ((PreconditionGeneratedEntry_correct  (=> (and ($IsGoodHeap $Heap@@2) ($IsHeapAnchor $Heap@@2)) (=> (and (and (and (and (<= (LitInt 0) |n#0@@3|) (<= (LitInt 0) |n'#0|)) (and ($Is HandleTypeType |g#0| (Tclass._System.___hTotalFunc2 TInt TInt TInt)) ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc2 TInt TInt TInt) $Heap@@2))) (and (and ($Is HandleTypeType |A#0| (Tclass._System.___hTotalFunc1 TInt TInt)) ($IsAlloc HandleTypeType |A#0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) true)) (and (and (and ($Is HandleTypeType |B#0| (Tclass._System.___hTotalFunc1 TInt TInt)) ($IsAlloc HandleTypeType |B#0| (Tclass._System.___hTotalFunc1 TInt TInt) $Heap@@2)) true) (and (and (= 3 $FunctionContextHeight) (U_2_bool (Lit boolType (bool_2_U true)))) (and (= |n#0@@3| (+ |n'#0| 1)) (= (ControlFlow 0 432) 431))))) anon0_correct))))
PreconditionGeneratedEntry_correct))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
