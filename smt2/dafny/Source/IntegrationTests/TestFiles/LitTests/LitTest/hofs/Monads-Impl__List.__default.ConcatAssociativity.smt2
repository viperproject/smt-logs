(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 () Int)
(declare-fun $generated@@68 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@70 (T@U T@U T@U) Bool)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@107 (T@U) Int)
(declare-fun $generated@@108 (T@U) Int)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@121 (T@T T@T) T@T)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T) T@T)
(declare-fun $generated@@125 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated@@21) $generated@@2))
(assert (= ($generated@@4 $generated@@23) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@25 $generated@@27) ($generated@@22 $generated@@23 $generated@@21 ($generated@@24 $generated@@26) $generated@@27))
 :pattern ( ($generated@@22 $generated@@23 $generated@@21 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ) (! ($generated@@28 $generated@@23 $generated@@21 ($generated@@24 $generated@@29))
 :pattern ( ($generated@@28 $generated@@23 $generated@@21 ($generated@@24 $generated@@29)))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@32) (= $generated@@31 $generated@@32))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (and ($generated@@33 $generated@@36) ($generated@@33 $generated@@37)) (= ($generated@@30 $generated@@36 $generated@@37)  (and (= ($generated@@34 $generated@@36) ($generated@@34 $generated@@37)) ($generated@@30 ($generated@@35 $generated@@36) ($generated@@35 $generated@@37)))))
 :pattern ( ($generated@@30 $generated@@36 $generated@@37) ($generated@@33 $generated@@36))
 :pattern ( ($generated@@30 $generated@@36 $generated@@37) ($generated@@33 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@38 $generated@@40 $generated@@39) $generated@@39)
 :pattern ( ($generated@@38 $generated@@40 $generated@@39))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@28 $generated@@23 ($generated@@41 $generated@@44 $generated@@45) ($generated@@24 $generated@@43))  (and ($generated@@42 $generated@@44 $generated@@43) ($generated@@28 $generated@@23 $generated@@45 ($generated@@24 $generated@@43))))
 :pattern ( ($generated@@28 $generated@@23 ($generated@@41 $generated@@44 $generated@@45) ($generated@@24 $generated@@43)))
)))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@33 $generated@@46) (= ($generated@@20 $generated@@46) $generated@@1))
 :pattern ( ($generated@@33 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@47 $generated@@48) (= ($generated@@20 $generated@@48) $generated@@2))
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 ($generated@@49 $generated@@52 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@49 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (!  (=> ($generated@@33 $generated@@53) (exists (($generated@@54 T@U) ($generated@@55 T@U) ) (= $generated@@53 ($generated@@41 $generated@@54 $generated@@55))))
 :pattern ( ($generated@@33 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@47 $generated@@56) (= $generated@@56 $generated@@21))
 :pattern ( ($generated@@47 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@57 ($generated@@50 $generated@@61 $generated@@58) $generated@@59 $generated@@60) ($generated@@22 $generated@@61 $generated@@58 $generated@@59 $generated@@60))
 :pattern ( ($generated@@57 ($generated@@50 $generated@@61 $generated@@58) $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@64 T@U) ) (!  (and (= ($generated@@62 ($generated@@24 $generated@@64)) $generated@@0) (= ($generated@@63 ($generated@@24 $generated@@64)) $generated@@3))
 :pattern ( ($generated@@24 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@65 $generated@@66) (or ($generated@@33 $generated@@66) ($generated@@47 $generated@@66)))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (= ($generated@@4 $generated@@71) 4))
(assert  (=> (<= 1 $generated@@67) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (or ($generated@@70 $generated@@72 ($generated@@38 $generated@@23 $generated@@74) ($generated@@38 $generated@@23 $generated@@75)) (and (< 1 $generated@@67) (and ($generated@@28 $generated@@23 $generated@@74 ($generated@@24 $generated@@72)) ($generated@@28 $generated@@23 $generated@@75 ($generated@@24 $generated@@72))))) (and (=> ($generated@@9 ($generated@@38 $generated@@5 ($generated@@8 ($generated@@33 ($generated@@38 $generated@@23 $generated@@74))))) (let (($generated@@76 ($generated@@38 $generated@@23 ($generated@@35 ($generated@@38 $generated@@23 $generated@@74)))))
($generated@@70 $generated@@72 $generated@@76 ($generated@@38 $generated@@23 $generated@@75)))) (= ($generated@@68 $generated@@72 ($generated@@69 $generated@@73) ($generated@@38 $generated@@23 $generated@@74) ($generated@@38 $generated@@23 $generated@@75)) (ite ($generated@@33 ($generated@@38 $generated@@23 $generated@@74)) (let (($generated@@77 ($generated@@38 $generated@@23 ($generated@@35 ($generated@@38 $generated@@23 $generated@@74)))))
(let (($generated@@78 ($generated@@38 $generated@@71 ($generated@@34 ($generated@@38 $generated@@23 $generated@@74)))))
($generated@@38 $generated@@23 ($generated@@41 $generated@@78 ($generated@@38 $generated@@23 ($generated@@68 $generated@@72 ($generated@@69 $generated@@73) $generated@@77 ($generated@@38 $generated@@23 $generated@@75))))))) $generated@@75))))
 :weight 3
 :pattern ( ($generated@@68 $generated@@72 ($generated@@69 $generated@@73) ($generated@@38 $generated@@23 $generated@@74) ($generated@@38 $generated@@23 $generated@@75)))
))))
(assert  (=> (<= 1 $generated@@67) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (or ($generated@@70 $generated@@79 $generated@@81 $generated@@82) (and (< 1 $generated@@67) (and ($generated@@28 $generated@@23 $generated@@81 ($generated@@24 $generated@@79)) ($generated@@28 $generated@@23 $generated@@82 ($generated@@24 $generated@@79))))) (and (=> ($generated@@33 $generated@@81) (let (($generated@@83 ($generated@@35 $generated@@81)))
($generated@@70 $generated@@79 $generated@@83 $generated@@82))) (= ($generated@@68 $generated@@79 ($generated@@69 $generated@@80) $generated@@81 $generated@@82) (ite ($generated@@33 $generated@@81) (let (($generated@@84 ($generated@@35 $generated@@81)))
(let (($generated@@85 ($generated@@34 $generated@@81)))
($generated@@41 $generated@@85 ($generated@@68 $generated@@79 $generated@@80 $generated@@84 $generated@@82)))) $generated@@82))))
 :pattern ( ($generated@@68 $generated@@79 ($generated@@69 $generated@@80) $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@28 $generated@@23 $generated@@87 ($generated@@24 $generated@@86)) (or ($generated@@33 $generated@@87) ($generated@@47 $generated@@87)))
 :pattern ( ($generated@@47 $generated@@87) ($generated@@28 $generated@@23 $generated@@87 ($generated@@24 $generated@@86)))
 :pattern ( ($generated@@33 $generated@@87) ($generated@@28 $generated@@23 $generated@@87 ($generated@@24 $generated@@86)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@42 ($generated@@50 $generated@@90 $generated@@88) $generated@@89) ($generated@@28 $generated@@90 $generated@@88 $generated@@89))
 :pattern ( ($generated@@42 ($generated@@50 $generated@@90 $generated@@88) $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and ($generated@@47 $generated@@91) ($generated@@47 $generated@@92)) ($generated@@30 $generated@@91 $generated@@92))
 :pattern ( ($generated@@30 $generated@@91 $generated@@92) ($generated@@47 $generated@@91))
 :pattern ( ($generated@@30 $generated@@91 $generated@@92) ($generated@@47 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@20 ($generated@@41 $generated@@93 $generated@@94)) $generated@@1)
 :pattern ( ($generated@@41 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@34 ($generated@@41 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@41 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@35 ($generated@@41 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@41 $generated@@97 $generated@@98))
)))
(assert  (=> (<= 1 $generated@@67) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@70 $generated@@99 $generated@@101 $generated@@102) (and (< 1 $generated@@67) (and ($generated@@28 $generated@@23 $generated@@101 ($generated@@24 $generated@@99)) ($generated@@28 $generated@@23 $generated@@102 ($generated@@24 $generated@@99))))) ($generated@@28 $generated@@23 ($generated@@68 $generated@@99 $generated@@100 $generated@@101 $generated@@102) ($generated@@24 $generated@@99)))
 :pattern ( ($generated@@68 $generated@@99 $generated@@100 $generated@@101 $generated@@102))
))))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 ($generated@@24 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@24 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@49 $generated@@106 ($generated@@50 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@50 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (< ($generated@@107 $generated@@109) ($generated@@108 ($generated@@41 $generated@@109 $generated@@110)))
 :pattern ( ($generated@@41 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (< ($generated@@108 $generated@@112) ($generated@@108 ($generated@@41 $generated@@111 $generated@@112)))
 :pattern ( ($generated@@41 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and ($generated@@25 $generated@@115) (and ($generated@@33 $generated@@113) ($generated@@22 $generated@@23 $generated@@113 ($generated@@24 $generated@@114) $generated@@115))) ($generated@@57 ($generated@@34 $generated@@113) $generated@@114 $generated@@115))
 :pattern ( ($generated@@57 ($generated@@34 $generated@@113) $generated@@114 $generated@@115))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@116 $generated@@126 $generated@@127 $generated@@128 ($generated@@122 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@116 $generated@@133 $generated@@134 $generated@@135 ($generated@@122 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@116 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@116 $generated@@142 $generated@@143 $generated@@144 ($generated@@122 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@116 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (= ($generated@@4 $generated@@117) 5)) (= ($generated@@4 $generated@@118) 6)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@120 $generated@@151 $generated@@152 ($generated@@123 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@153) $generated@@155) $generated@@153)
 :weight 0
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@160 $generated@@161) (= ($generated@@120 $generated@@156 $generated@@157 ($generated@@123 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@158) $generated@@161) ($generated@@120 $generated@@156 $generated@@157 $generated@@159 $generated@@161)))
 :weight 0
))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (= ($generated@@4 ($generated@@121 $generated@@162 $generated@@163)) 7))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (! (= ($generated@@124 ($generated@@121 $generated@@164 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@121 $generated@@164 $generated@@165))
))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@125 ($generated@@121 $generated@@166 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@121 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Bool) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@9 ($generated@@116 $generated@@117 $generated@@118 $generated@@5 ($generated@@119 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))  (=> (and (or (not (= $generated@@172 $generated@@168)) (not true)) ($generated@@9 ($generated@@49 $generated@@5 ($generated@@120 $generated@@118 $generated@@71 ($generated@@120 $generated@@117 ($generated@@121 $generated@@118 $generated@@71) $generated@@169 $generated@@172) $generated@@170)))) $generated@@171))
 :pattern ( ($generated@@116 $generated@@117 $generated@@118 $generated@@5 ($generated@@119 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))
)))
(assert  (=> (<= 1 $generated@@67) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (or ($generated@@70 $generated@@175 $generated@@177 $generated@@178) (and (< 1 $generated@@67) (and (and ($generated@@28 $generated@@23 $generated@@177 ($generated@@24 $generated@@175)) ($generated@@22 $generated@@23 $generated@@177 ($generated@@24 $generated@@175) $generated@@174)) (and ($generated@@28 $generated@@23 $generated@@178 ($generated@@24 $generated@@175)) ($generated@@22 $generated@@23 $generated@@178 ($generated@@24 $generated@@175) $generated@@174))))) ($generated@@25 $generated@@174)) ($generated@@22 $generated@@23 ($generated@@68 $generated@@175 $generated@@176 $generated@@177 $generated@@178) ($generated@@24 $generated@@175) $generated@@174))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@68 $generated@@175 $generated@@176 $generated@@177 $generated@@178) ($generated@@24 $generated@@175) $generated@@174))
))))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@107 ($generated@@50 $generated@@23 $generated@@179)) ($generated@@108 $generated@@179))
 :pattern ( ($generated@@107 ($generated@@50 $generated@@23 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@68 $generated@@180 ($generated@@69 $generated@@181) $generated@@182 $generated@@183) ($generated@@68 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
 :pattern ( ($generated@@68 $generated@@180 ($generated@@69 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@42 $generated@@185 ($generated@@24 $generated@@184)) (and (= ($generated@@50 $generated@@23 ($generated@@49 $generated@@23 $generated@@185)) $generated@@185) ($generated@@28 $generated@@23 ($generated@@49 $generated@@23 $generated@@185) ($generated@@24 $generated@@184))))
 :pattern ( ($generated@@42 $generated@@185 ($generated@@24 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@25 $generated@@188) (and ($generated@@33 $generated@@186) ($generated@@22 $generated@@23 $generated@@186 ($generated@@24 $generated@@187) $generated@@188))) ($generated@@22 $generated@@23 ($generated@@35 $generated@@186) ($generated@@24 $generated@@187) $generated@@188))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@35 $generated@@186) ($generated@@24 $generated@@187) $generated@@188))
)))
(assert (= $generated@@21 ($generated@@38 $generated@@23 $generated@@21)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@41 ($generated@@38 $generated@@71 $generated@@189) ($generated@@38 $generated@@23 $generated@@190)) ($generated@@38 $generated@@23 ($generated@@41 $generated@@189 $generated@@190)))
 :pattern ( ($generated@@41 ($generated@@38 $generated@@71 $generated@@189) ($generated@@38 $generated@@23 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@T) ) (! (= ($generated@@50 $generated@@192 ($generated@@38 $generated@@192 $generated@@191)) ($generated@@38 $generated@@71 ($generated@@50 $generated@@192 $generated@@191)))
 :pattern ( ($generated@@50 $generated@@192 ($generated@@38 $generated@@192 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@25 $generated@@196) (= ($generated@@22 $generated@@23 ($generated@@41 $generated@@194 $generated@@195) ($generated@@24 $generated@@193) $generated@@196)  (and ($generated@@57 $generated@@194 $generated@@193 $generated@@196) ($generated@@22 $generated@@23 $generated@@195 ($generated@@24 $generated@@193) $generated@@196))))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@41 $generated@@194 $generated@@195) ($generated@@24 $generated@@193) $generated@@196))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 (T@U) Bool)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@207  (=> (and (and (= $generated@@197 ($generated@@119 $generated@@198 $generated@@199 $generated false)) ($generated@@65 $generated@@200)) (and ($generated@@65 $generated@@201) ($generated@@65 $generated@@202))) (=> (and (and (and ($generated@@25 $generated@@203) ($generated@@204 $generated@@203)) (= $generated@@199 $generated@@203)) (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (and (and (and ($generated@@28 $generated@@23 $generated@@208 ($generated@@24 $generated@@205)) ($generated@@28 $generated@@23 $generated@@209 ($generated@@24 $generated@@205))) ($generated@@28 $generated@@23 $generated@@210 ($generated@@24 $generated@@205))) ($generated@@9 ($generated@@38 $generated@@5 ($generated@@8 true)))) (or (< ($generated@@108 $generated@@208) ($generated@@108 $generated@@200)) (and (= ($generated@@108 $generated@@208) ($generated@@108 $generated@@200)) (or (< ($generated@@108 $generated@@209) ($generated@@108 $generated@@201)) (and (= ($generated@@108 $generated@@209) ($generated@@108 $generated@@201)) (< ($generated@@108 $generated@@210) ($generated@@108 $generated@@202))))))) ($generated@@30 ($generated@@68 $generated@@205 ($generated@@69 $generated@@206) ($generated@@68 $generated@@205 ($generated@@69 $generated@@206) $generated@@208 $generated@@209) $generated@@210) ($generated@@68 $generated@@205 ($generated@@69 $generated@@206) $generated@@208 ($generated@@68 $generated@@205 ($generated@@69 $generated@@206) $generated@@209 $generated@@210))))
 :pattern ( ($generated@@68 $generated@@205 ($generated@@69 $generated@@206) $generated@@208 ($generated@@68 $generated@@205 ($generated@@69 $generated@@206) $generated@@209 $generated@@210)))
 :pattern ( ($generated@@68 $generated@@205 ($generated@@69 $generated@@206) ($generated@@68 $generated@@205 ($generated@@69 $generated@@206) $generated@@208 $generated@@209) $generated@@210))
)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@30 ($generated@@68 $generated@@205 ($generated@@69 ($generated@@69 $generated@@206)) ($generated@@68 $generated@@205 ($generated@@69 ($generated@@69 $generated@@206)) $generated@@200 $generated@@201) $generated@@202) ($generated@@68 $generated@@205 ($generated@@69 ($generated@@69 $generated@@206)) $generated@@200 ($generated@@68 $generated@@205 ($generated@@69 ($generated@@69 $generated@@206)) $generated@@201 $generated@@202)))))))
(let (($generated@@211  (=> (and ($generated@@25 $generated@@199) ($generated@@204 $generated@@199)) (=> (and (and (and (and ($generated@@28 $generated@@23 $generated@@200 ($generated@@24 $generated@@205)) ($generated@@22 $generated@@23 $generated@@200 ($generated@@24 $generated@@205) $generated@@199)) ($generated@@65 $generated@@200)) (and (and ($generated@@28 $generated@@23 $generated@@201 ($generated@@24 $generated@@205)) ($generated@@22 $generated@@23 $generated@@201 ($generated@@24 $generated@@205) $generated@@199)) ($generated@@65 $generated@@201))) (and (and (and ($generated@@28 $generated@@23 $generated@@202 ($generated@@24 $generated@@205)) ($generated@@22 $generated@@23 $generated@@202 ($generated@@24 $generated@@205) $generated@@199)) ($generated@@65 $generated@@202)) (and (= 2 $generated@@67) (= (ControlFlow 0 3) 2)))) $generated@@207))))
$generated@@211)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
