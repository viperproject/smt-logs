(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@U T@U) T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@T T@T) T@T)
(declare-fun $generated@@60 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@82 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 (T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@1) 0))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@28 $generated@@1) $generated@@2))
(assert (forall (($generated@@31 T@U) ) (!  (not ($generated@@29 $generated@@30 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31))
)))
(assert (= ($generated@@10 $generated@@33) 3))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@37 $generated@@34)  (or (= $generated@@37 $generated@@35) (= ($generated@@36 $generated@@37) $generated@@34)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@37 $generated@@34))
)))
(assert (= ($generated@@10 $generated@@38) 4))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and (and ($generated@@32 $generated@@38 $generated@@41 ($generated@@39 $generated@@42 $generated@@43)) (forall (($generated@@46 T@U) ) (!  (=> ($generated@@40 $generated@@46 $generated@@44) ($generated@@40 $generated@@46 $generated@@42))
 :pattern ( ($generated@@40 $generated@@46 $generated@@44))
 :pattern ( ($generated@@40 $generated@@46 $generated@@42))
))) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@40 $generated@@47 $generated@@43) ($generated@@40 $generated@@47 $generated@@45))
 :pattern ( ($generated@@40 $generated@@47 $generated@@43))
 :pattern ( ($generated@@40 $generated@@47 $generated@@45))
))) ($generated@@32 $generated@@38 $generated@@41 ($generated@@39 $generated@@44 $generated@@45)))
 :pattern ( ($generated@@32 $generated@@38 $generated@@41 ($generated@@39 $generated@@42 $generated@@43)) ($generated@@32 $generated@@38 $generated@@41 ($generated@@39 $generated@@44 $generated@@45)))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@48 $generated@@33 $generated@@50 $generated@@49 $generated@@51) ($generated@@48 $generated@@33 $generated@@50 $generated@@34 $generated@@51))
 :pattern ( ($generated@@48 $generated@@33 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@48 $generated@@33 $generated@@50 $generated@@34 $generated@@51))
)))
(assert (= ($generated@@26 $generated@@52) 0))
(assert (= ($generated@@53 $generated@@5 $generated@@9) $generated@@52))
(assert  (not ($generated@@54 $generated@@52)))
(assert  (and (and (and (and (and (and (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@56 $generated@@63 $generated@@64 ($generated@@60 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@67) $generated@@65)
 :weight 0
)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (or (= $generated@@72 $generated@@73) (= ($generated@@56 $generated@@68 $generated@@69 ($generated@@60 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@73) ($generated@@56 $generated@@68 $generated@@69 $generated@@71 $generated@@73)))
 :weight 0
))) (= ($generated@@10 $generated@@57) 5)) (= ($generated@@10 $generated@@58) 6)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (= ($generated@@10 ($generated@@59 $generated@@74 $generated@@75)) 7))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@61 ($generated@@59 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@59 $generated@@76 $generated@@77))
))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@62 ($generated@@59 $generated@@78 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@59 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@48 $generated@@33 $generated@@80 $generated@@34 $generated@@81)  (or (= $generated@@80 $generated@@35) ($generated@@15 ($generated@@55 $generated@@11 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@33 ($generated@@59 $generated@@57 $generated@@58) $generated@@81 $generated@@80) $generated@@1)))))
 :pattern ( ($generated@@48 $generated@@33 $generated@@80 $generated@@34 $generated@@81))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and ($generated@@84 $generated@@88) (and ($generated@@40 $generated@@90 $generated@@86) ($generated@@32 $generated@@38 $generated@@89 ($generated@@39 $generated@@86 $generated@@87)))) (= ($generated@@85 ($generated@@82 $generated@@86 $generated@@87 $generated@@83 $generated@@89 $generated@@90) $generated@@30) ($generated@@85 ($generated@@82 $generated@@86 $generated@@87 $generated@@88 $generated@@89 $generated@@90) $generated@@30)))
 :pattern ( ($generated@@82 $generated@@86 $generated@@87 $generated@@83 $generated@@89 $generated@@90) ($generated@@84 $generated@@88))
 :pattern ( ($generated@@82 $generated@@86 $generated@@87 $generated@@88 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@55 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@55 $generated@@93 $generated@@92))
)))
(assert ($generated@@54 $generated@@1))
(assert ($generated@@84 $generated@@83))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@98 $generated@@95) $generated@@96 $generated@@97) ($generated@@48 $generated@@98 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@94 ($generated@@91 $generated@@98 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and (and ($generated@@84 $generated@@99) (and (or (not (= $generated@@100 $generated@@35)) (not true)) (= ($generated@@36 $generated@@100) $generated@@34))) ($generated@@15 ($generated@@55 $generated@@11 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@33 ($generated@@59 $generated@@57 $generated@@58) $generated@@99 $generated@@100) $generated@@1)))) ($generated@@48 $generated@@38 ($generated@@55 $generated@@38 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@33 ($generated@@59 $generated@@57 $generated@@58) $generated@@99 $generated@@100) $generated@@52)) ($generated@@39 $generated $generated) $generated@@99))
 :pattern ( ($generated@@55 $generated@@38 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@33 ($generated@@59 $generated@@57 $generated@@58) $generated@@99 $generated@@100) $generated@@52)))
)))
(assert  (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@101 $generated@@104 $generated@@105 $generated@@106 ($generated@@103 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@109 $generated@@110) $generated@@107)
 :weight 0
)) (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@116 $generated@@118) (= ($generated@@101 $generated@@111 $generated@@112 $generated@@113 ($generated@@103 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@101 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@101 $generated@@120 $generated@@121 $generated@@122 ($generated@@103 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@101 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@15 ($generated@@101 $generated@@33 $generated@@57 $generated@@11 ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))  (=> (and (or (not (= $generated@@133 $generated@@129)) (not true)) ($generated@@15 ($generated@@55 $generated@@11 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@33 ($generated@@59 $generated@@57 $generated@@58) $generated@@130 $generated@@133) $generated@@131)))) (= $generated@@133 $generated@@132)))
 :pattern ( ($generated@@101 $generated@@33 $generated@@57 $generated@@11 ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@135) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (or ($generated@@137 $generated@@138 $generated@@139) (and (< 1 $generated@@135) (and ($generated@@84 $generated@@138) (and ($generated@@32 $generated@@33 $generated@@139 $generated@@49) ($generated@@48 $generated@@33 $generated@@139 $generated@@49 $generated@@138))))) ($generated@@32 $generated@@38 ($generated@@136 $generated@@138 $generated@@139) ($generated@@39 $generated $generated)))
 :pattern ( ($generated@@136 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@40 $generated@@140 $generated@@49) (and (= ($generated@@91 $generated@@33 ($generated@@55 $generated@@33 $generated@@140)) $generated@@140) ($generated@@32 $generated@@33 ($generated@@55 $generated@@33 $generated@@140) $generated@@49)))
 :pattern ( ($generated@@40 $generated@@140 $generated@@49))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> ($generated@@40 $generated@@141 $generated@@34) (and (= ($generated@@91 $generated@@33 ($generated@@55 $generated@@33 $generated@@141)) $generated@@141) ($generated@@32 $generated@@33 ($generated@@55 $generated@@33 $generated@@141) $generated@@34)))
 :pattern ( ($generated@@40 $generated@@141 $generated@@34))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@142 $generated@@49)  (and ($generated@@32 $generated@@33 $generated@@142 $generated@@34) (or (not (= $generated@@142 $generated@@35)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@142 $generated@@49))
 :pattern ( ($generated@@32 $generated@@33 $generated@@142 $generated@@34))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and ($generated@@84 $generated@@148) ($generated@@48 $generated@@38 $generated@@145 ($generated@@39 $generated@@146 $generated@@147) $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and ($generated@@94 $generated@@149 $generated@@146 $generated@@148) ($generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149)) ($generated@@94 ($generated@@143 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149) $generated@@147 $generated@@148))
 :pattern ( ($generated@@143 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149))
)))
 :pattern ( ($generated@@48 $generated@@38 $generated@@145 ($generated@@39 $generated@@146 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@85 $generated@@150 $generated@@151) (= $generated@@150 $generated@@151))
 :pattern ( ($generated@@85 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@32 $generated@@38 $generated@@152 ($generated@@39 $generated@@153 $generated@@154)) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and ($generated@@84 $generated@@155) ($generated@@40 $generated@@156 $generated@@153)) ($generated@@144 $generated@@153 $generated@@154 $generated@@155 $generated@@152 $generated@@156)) ($generated@@40 ($generated@@143 $generated@@153 $generated@@154 $generated@@155 $generated@@152 $generated@@156) $generated@@154))
 :pattern ( ($generated@@143 $generated@@153 $generated@@154 $generated@@155 $generated@@152 $generated@@156))
)))
 :pattern ( ($generated@@32 $generated@@38 $generated@@152 ($generated@@39 $generated@@153 $generated@@154)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (and (= ($generated@@157 ($generated@@53 $generated@@158 $generated@@159)) $generated@@158) (= ($generated@@28 ($generated@@53 $generated@@158 $generated@@159)) $generated@@159))
 :pattern ( ($generated@@53 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> ($generated@@40 $generated@@160 $generated) (and (= ($generated@@91 $generated@@12 ($generated@@55 $generated@@12 $generated@@160)) $generated@@160) ($generated@@32 $generated@@12 ($generated@@55 $generated@@12 $generated@@160) $generated)))
 :pattern ( ($generated@@40 $generated@@160 $generated))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@40 ($generated@@91 $generated@@163 $generated@@161) $generated@@162) ($generated@@32 $generated@@163 $generated@@161 $generated@@162))
 :pattern ( ($generated@@40 ($generated@@91 $generated@@163 $generated@@161) $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@164 ($generated@@39 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@39 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@167 ($generated@@39 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@39 $generated@@168 $generated@@169))
)))
(assert  (=> (<= 1 $generated@@135) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (or ($generated@@137 $generated@@170 $generated@@171) (and (< 1 $generated@@135) (and ($generated@@84 $generated@@170) ($generated@@32 $generated@@33 $generated@@171 $generated@@49)))) (= ($generated@@136 $generated@@170 $generated@@171) ($generated@@55 $generated@@38 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@33 ($generated@@59 $generated@@57 $generated@@58) $generated@@170 $generated@@171) $generated@@52))))
 :pattern ( ($generated@@136 $generated@@170 $generated@@171) ($generated@@84 $generated@@170))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@55 $generated@@173 ($generated@@91 $generated@@173 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@91 $generated@@173 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@84 $generated@@177) (= ($generated@@48 $generated@@38 $generated@@174 ($generated@@39 $generated@@175 $generated@@176) $generated@@177) (forall (($generated@@178 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@178 $generated@@175) ($generated@@94 $generated@@178 $generated@@175 $generated@@177)) ($generated@@144 $generated@@175 $generated@@176 $generated@@177 $generated@@174 $generated@@178)) (forall (($generated@@179 T@U) ) (!  (=> (and (or (not (= $generated@@179 $generated@@35)) (not true)) ($generated@@29 ($generated@@82 $generated@@175 $generated@@176 $generated@@177 $generated@@174 $generated@@178) ($generated@@91 $generated@@33 $generated@@179))) ($generated@@15 ($generated@@55 $generated@@11 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@33 ($generated@@59 $generated@@57 $generated@@58) $generated@@177 $generated@@179) $generated@@1))))
 :pattern ( ($generated@@29 ($generated@@82 $generated@@175 $generated@@176 $generated@@177 $generated@@174 $generated@@178) ($generated@@91 $generated@@33 $generated@@179)))
)))
 :pattern ( ($generated@@143 $generated@@175 $generated@@176 $generated@@177 $generated@@174 $generated@@178))
 :pattern ( ($generated@@82 $generated@@175 $generated@@176 $generated@@177 $generated@@174 $generated@@178))
))))
 :pattern ( ($generated@@48 $generated@@38 $generated@@174 ($generated@@39 $generated@@175 $generated@@176) $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@40 $generated@@182 ($generated@@39 $generated@@180 $generated@@181)) (and (= ($generated@@91 $generated@@38 ($generated@@55 $generated@@38 $generated@@182)) $generated@@182) ($generated@@32 $generated@@38 ($generated@@55 $generated@@38 $generated@@182) ($generated@@39 $generated@@180 $generated@@181))))
 :pattern ( ($generated@@40 $generated@@182 ($generated@@39 $generated@@180 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (and (= ($generated@@27 ($generated@@39 $generated@@184 $generated@@185)) $generated@@3) (= ($generated@@183 ($generated@@39 $generated@@184 $generated@@185)) $generated@@7))
 :pattern ( ($generated@@39 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and ($generated@@84 $generated@@186) (and (or (not (= $generated@@187 $generated@@35)) (not true)) (= ($generated@@36 $generated@@187) $generated@@34))) ($generated@@32 $generated@@38 ($generated@@55 $generated@@38 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@33 ($generated@@59 $generated@@57 $generated@@58) $generated@@186 $generated@@187) $generated@@52)) ($generated@@39 $generated $generated)))
 :pattern ( ($generated@@55 $generated@@38 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@33 ($generated@@59 $generated@@57 $generated@@58) $generated@@186 $generated@@187) $generated@@52)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and ($generated@@84 $generated@@190) (and ($generated@@40 $generated@@192 $generated@@188) ($generated@@32 $generated@@38 $generated@@191 ($generated@@39 $generated@@188 $generated@@189)))) ($generated@@85 ($generated@@82 $generated@@188 $generated@@189 $generated@@83 $generated@@191 $generated@@192) $generated@@30)) (= ($generated@@144 $generated@@188 $generated@@189 $generated@@83 $generated@@191 $generated@@192) ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191 $generated@@192)))
 :pattern ( ($generated@@144 $generated@@188 $generated@@189 $generated@@83 $generated@@191 $generated@@192) ($generated@@84 $generated@@190))
 :pattern ( ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
)))
(assert (= ($generated@@27 $generated@@49) $generated@@4))
(assert (= ($generated@@183 $generated@@49) $generated@@8))
(assert (= ($generated@@27 $generated@@34) $generated@@6))
(assert (= ($generated@@183 $generated@@34) $generated@@8))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@85 $generated@@193 $generated@@194) (forall (($generated@@195 T@U) ) (! (= ($generated@@29 $generated@@193 $generated@@195) ($generated@@29 $generated@@194 $generated@@195))
 :pattern ( ($generated@@29 $generated@@193 $generated@@195))
 :pattern ( ($generated@@29 $generated@@194 $generated@@195))
)))
 :pattern ( ($generated@@85 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! ($generated@@48 $generated@@12 $generated@@197 $generated $generated@@196)
 :pattern ( ($generated@@48 $generated@@12 $generated@@197 $generated $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! ($generated@@32 $generated@@12 $generated@@198 $generated)
 :pattern ( ($generated@@32 $generated@@12 $generated@@198 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () Bool)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@204  (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= $generated@@199 $generated@@35)) (not true))) (=> (or (not (= $generated@@199 $generated@@35)) (not true)) (=> (and (and (= $generated@@200 ($generated@@15 ($generated@@101 $generated@@33 $generated@@57 $generated@@11 $generated@@201 $generated@@199 $generated@@52))) (= ($generated@@136 $generated@@202 $generated@@199) ($generated@@55 $generated@@38 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@33 ($generated@@59 $generated@@57 $generated@@58) $generated@@202 $generated@@199) $generated@@52)))) (and ($generated@@32 $generated@@38 ($generated@@136 $generated@@202 $generated@@199) ($generated@@39 $generated $generated)) (= (ControlFlow 0 3) (- 0 2)))) $generated@@200)))))
(let (($generated@@205 true))
(let (($generated@@206  (=> (= $generated@@201 ($generated@@102 $generated@@35 $generated@@202 $generated@@1 $generated@@199)) (and (=> (= (ControlFlow 0 5) 1) $generated@@205) (=> (= (ControlFlow 0 5) 3) $generated@@204)))))
(let (($generated@@207  (=> (and (and (and ($generated@@84 $generated@@202) ($generated@@203 $generated@@202)) ($generated@@32 $generated@@33 $generated@@199 $generated@@49)) (and (= 1 $generated@@135) (= (ControlFlow 0 6) 5))) $generated@@206)))
$generated@@207)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
