(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U Int) Int)
(declare-fun $generated@@22 (Int) Bool)
(declare-fun $generated@@23 (Int) Int)
(declare-fun $generated@@26 (T@U Int) Int)
(declare-fun $generated@@27 (Int) Bool)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@33 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U Int) Bool)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@63 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 (T@T T@T) T@T)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T) T@T)
(declare-fun $generated@@129 (T@T) T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@24 T@U) ($generated@@25 Int) ) (!  (=> (or ($generated@@22 $generated@@25) (and (< 0 $generated@@20) (<= ($generated@@23 0) $generated@@25))) (<= ($generated@@23 0) ($generated@@21 $generated@@24 $generated@@25)))
 :pattern ( ($generated@@21 $generated@@24 $generated@@25))
))))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@28 T@U) ($generated@@29 Int) ) (!  (=> (or ($generated@@27 $generated@@29) (and (< 0 $generated@@20) (<= ($generated@@23 0) $generated@@29))) (<= ($generated@@23 0) ($generated@@26 $generated@@28 $generated@@29)))
 :pattern ( ($generated@@26 $generated@@28 $generated@@29))
))))
(assert (forall (($generated@@32 T@U) ) (!  (not ($generated@@30 $generated@@31 $generated@@32))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@34 $generated@@39 ($generated@@35 $generated@@38) $generated@@40) ($generated@@36 $generated@@38 ($generated@@11 ($generated@@37 $generated@@6 $generated@@40))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@34 $generated@@39 ($generated@@35 $generated@@38) $generated@@40))
)))
(assert (= ($generated@@4 $generated@@42) 3))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@42 $generated@@45 ($generated@@43 $generated@@46 $generated@@47)) (forall (($generated@@50 T@U) ) (!  (=> ($generated@@44 $generated@@50 $generated@@48) ($generated@@44 $generated@@50 $generated@@46))
 :pattern ( ($generated@@44 $generated@@50 $generated@@48))
 :pattern ( ($generated@@44 $generated@@50 $generated@@46))
))) (forall (($generated@@51 T@U) ) (!  (=> ($generated@@44 $generated@@51 $generated@@47) ($generated@@44 $generated@@51 $generated@@49))
 :pattern ( ($generated@@44 $generated@@51 $generated@@47))
 :pattern ( ($generated@@44 $generated@@51 $generated@@49))
))) ($generated@@41 $generated@@42 $generated@@45 ($generated@@43 $generated@@48 $generated@@49)))
 :pattern ( ($generated@@41 $generated@@42 $generated@@45 ($generated@@43 $generated@@46 $generated@@47)) ($generated@@41 $generated@@42 $generated@@45 ($generated@@43 $generated@@48 $generated@@49)))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 Int) ) (!  (=> (<= ($generated@@23 0) $generated@@53) (= ($generated@@36 $generated@@52 $generated@@53) true))
 :pattern ( ($generated@@36 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@54 Int) ) (! (= ($generated@@23 $generated@@54) $generated@@54)
 :pattern ( ($generated@@23 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@55 $generated@@57 $generated@@56) $generated@@56)
 :pattern ( ($generated@@55 $generated@@57 $generated@@56))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 Int) ) (!  (=> (or ($generated@@27 ($generated@@23 $generated@@62)) (and (< 0 $generated@@20) (and ($generated@@59 $generated@@61) (<= ($generated@@23 0) $generated@@62)))) (= ($generated@@26 ($generated@@58 $generated@@60) ($generated@@23 $generated@@62)) (ite (= ($generated@@23 $generated@@62) ($generated@@23 0)) 0 ($generated@@21 ($generated@@58 $generated@@60) ($generated@@23 (- $generated@@62 1))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@58 $generated@@60) ($generated@@23 $generated@@62)) ($generated@@59 $generated@@61))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and ($generated@@59 $generated@@68) (and ($generated@@44 $generated@@70 $generated@@66) ($generated@@41 $generated@@42 $generated@@69 ($generated@@43 $generated@@66 $generated@@67)))) (= ($generated@@65 ($generated@@63 $generated@@66 $generated@@67 $generated@@64 $generated@@69 $generated@@70) $generated@@31) ($generated@@65 ($generated@@63 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70) $generated@@31)))
 :pattern ( ($generated@@63 $generated@@66 $generated@@67 $generated@@64 $generated@@69 $generated@@70) ($generated@@59 $generated@@68))
 :pattern ( ($generated@@63 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@71 $generated@@34 $generated@@34 $generated@@74 ($generated@@35 $generated@@73) $generated@@75) ($generated@@72 $generated@@6 ($generated@@10 ($generated@@21 $generated@@73 ($generated@@11 ($generated@@37 $generated@@6 $generated@@75))))))
 :pattern ( ($generated@@71 $generated@@34 $generated@@34 $generated@@74 ($generated@@35 $generated@@73) $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@72 $generated@@77 ($generated@@37 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@37 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@41 $generated@@6 $generated@@78 $generated@@34) (<= ($generated@@23 0) ($generated@@11 $generated@@78)))
 :pattern ( ($generated@@41 $generated@@6 $generated@@78 $generated@@34))
)))
(assert ($generated@@59 $generated@@64))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@44 $generated@@79 $generated@@34) (and (= ($generated@@72 $generated@@6 ($generated@@37 $generated@@6 $generated@@79)) $generated@@79) ($generated@@41 $generated@@6 ($generated@@37 $generated@@6 $generated@@79) $generated@@34)))
 :pattern ( ($generated@@44 $generated@@79 $generated@@34))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@80 T@U) ($generated@@81 Int) ) (!  (=> (or ($generated@@22 $generated@@81) (and (< 0 $generated@@20) (<= ($generated@@23 0) $generated@@81))) (and (=> (or (not (= $generated@@81 ($generated@@23 0))) (not true)) ($generated@@27 (- $generated@@81 1))) (= ($generated@@21 ($generated@@58 $generated@@80) $generated@@81) (ite (= $generated@@81 ($generated@@23 0)) 0 ($generated@@26 $generated@@80 (- $generated@@81 1))))))
 :pattern ( ($generated@@21 ($generated@@58 $generated@@80) $generated@@81))
))))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 Int) ) (!  (=> (or ($generated@@27 $generated@@84) (and (< 0 $generated@@20) (and ($generated@@59 $generated@@83) (<= ($generated@@23 0) $generated@@84)))) (= ($generated@@26 ($generated@@58 $generated@@82) $generated@@84) (ite (= $generated@@84 ($generated@@23 0)) 0 ($generated@@21 $generated@@82 (- $generated@@84 1)))))
 :pattern ( ($generated@@26 ($generated@@58 $generated@@82) $generated@@84) ($generated@@59 $generated@@83))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@30 ($generated@@63 $generated@@34 $generated@@34 $generated@@87 ($generated@@35 $generated@@86) $generated@@88) $generated@@85) false)
 :pattern ( ($generated@@30 ($generated@@63 $generated@@34 $generated@@34 $generated@@87 ($generated@@35 $generated@@86) $generated@@88) $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@65 $generated@@89 $generated@@90) (= $generated@@89 $generated@@90))
 :pattern ( ($generated@@65 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@91 ($generated@@43 $generated@@92 $generated@@93)) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (and (and ($generated@@59 $generated@@94) ($generated@@44 $generated@@95 $generated@@92)) ($generated@@33 $generated@@92 $generated@@93 $generated@@94 $generated@@91 $generated@@95)) ($generated@@44 ($generated@@71 $generated@@92 $generated@@93 $generated@@94 $generated@@91 $generated@@95) $generated@@93))
 :pattern ( ($generated@@71 $generated@@92 $generated@@93 $generated@@94 $generated@@91 $generated@@95))
)))
 :pattern ( ($generated@@41 $generated@@42 $generated@@91 ($generated@@43 $generated@@92 $generated@@93)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@44 ($generated@@72 $generated@@98 $generated@@96) $generated@@97) ($generated@@41 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@44 ($generated@@72 $generated@@98 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@99 ($generated@@43 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@43 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@102 ($generated@@43 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@43 $generated@@103 $generated@@104))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@105 T@U) ($generated@@106 Int) ) (!  (=> (or ($generated@@22 ($generated@@23 $generated@@106)) (and (< 0 $generated@@20) (<= ($generated@@23 0) $generated@@106))) (and (=> (or (not (= ($generated@@23 $generated@@106) ($generated@@23 0))) (not true)) ($generated@@27 ($generated@@23 (- $generated@@106 1)))) (= ($generated@@21 ($generated@@58 $generated@@105) ($generated@@23 $generated@@106)) (ite (= ($generated@@23 $generated@@106) ($generated@@23 0)) 0 ($generated@@26 ($generated@@58 $generated@@105) ($generated@@23 (- $generated@@106 1)))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@58 $generated@@105) ($generated@@23 $generated@@106)))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@37 $generated@@108 ($generated@@72 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@72 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 Int) ) (! (= ($generated@@21 ($generated@@58 $generated@@109) $generated@@110) ($generated@@21 $generated@@109 $generated@@110))
 :pattern ( ($generated@@21 ($generated@@58 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 Int) ) (! (= ($generated@@26 ($generated@@58 $generated@@111) $generated@@112) ($generated@@26 $generated@@111 $generated@@112))
 :pattern ( ($generated@@26 ($generated@@58 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 Int) ) (! (= ($generated@@21 $generated@@113 $generated@@115) ($generated@@11 ($generated@@37 $generated@@6 ($generated@@71 $generated@@34 $generated@@34 $generated@@114 ($generated@@35 $generated@@113) ($generated@@72 $generated@@6 ($generated@@10 $generated@@115))))))
 :pattern ( ($generated@@21 $generated@@113 $generated@@115) ($generated@@59 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@44 $generated@@118 ($generated@@43 $generated@@116 $generated@@117)) (and (= ($generated@@72 $generated@@42 ($generated@@37 $generated@@42 $generated@@118)) $generated@@118) ($generated@@41 $generated@@42 ($generated@@37 $generated@@42 $generated@@118) ($generated@@43 $generated@@116 $generated@@117))))
 :pattern ( ($generated@@44 $generated@@118 ($generated@@43 $generated@@116 $generated@@117)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@119 $generated@@130 $generated@@131 $generated@@132 ($generated@@126 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@135 $generated@@136) $generated@@133)
 :weight 0
)) (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@119 $generated@@137 $generated@@138 $generated@@139 ($generated@@126 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@119 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@119 $generated@@146 $generated@@147 $generated@@148 ($generated@@126 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)))) (= ($generated@@4 $generated@@120) 4)) (= ($generated@@4 $generated@@121) 5)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@123 $generated@@155 $generated@@156 ($generated@@127 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@157) $generated@@159) $generated@@157)
 :weight 0
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@164 $generated@@165) (= ($generated@@123 $generated@@160 $generated@@161 ($generated@@127 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@162) $generated@@165) ($generated@@123 $generated@@160 $generated@@161 $generated@@163 $generated@@165)))
 :weight 0
))) (= ($generated@@4 $generated@@124) 6)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@4 ($generated@@125 $generated@@166 $generated@@167)) 7))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@128 ($generated@@125 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@125 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@129 ($generated@@125 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@125 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@9 ($generated@@119 $generated@@120 $generated@@121 $generated@@5 ($generated@@122 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))  (=> (and (or (not (= $generated@@176 $generated@@172)) (not true)) ($generated@@9 ($generated@@37 $generated@@5 ($generated@@123 $generated@@121 $generated@@124 ($generated@@123 $generated@@120 ($generated@@125 $generated@@121 $generated@@124) $generated@@173 $generated@@176) $generated@@174)))) $generated@@175))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121 $generated@@5 ($generated@@122 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (and (= ($generated@@178 ($generated@@43 $generated@@180 $generated@@181)) $generated@@1) (= ($generated@@179 ($generated@@43 $generated@@180 $generated@@181)) $generated@@3))
 :pattern ( ($generated@@43 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and ($generated@@59 $generated@@184) (and ($generated@@44 $generated@@186 $generated@@182) ($generated@@41 $generated@@42 $generated@@185 ($generated@@43 $generated@@182 $generated@@183)))) ($generated@@65 ($generated@@63 $generated@@182 $generated@@183 $generated@@64 $generated@@185 $generated@@186) $generated@@31)) (= ($generated@@33 $generated@@182 $generated@@183 $generated@@64 $generated@@185 $generated@@186) ($generated@@33 $generated@@182 $generated@@183 $generated@@184 $generated@@185 $generated@@186)))
 :pattern ( ($generated@@33 $generated@@182 $generated@@183 $generated@@64 $generated@@185 $generated@@186) ($generated@@59 $generated@@184))
 :pattern ( ($generated@@33 $generated@@182 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@35 ($generated@@58 $generated@@187)) ($generated@@35 $generated@@187))
 :pattern ( ($generated@@35 ($generated@@58 $generated@@187)))
)))
(assert (= ($generated@@178 $generated@@34) $generated@@0))
(assert (= ($generated@@179 $generated@@34) $generated@@2))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@65 $generated@@188 $generated@@189) (forall (($generated@@190 T@U) ) (! (= ($generated@@30 $generated@@188 $generated@@190) ($generated@@30 $generated@@189 $generated@@190))
 :pattern ( ($generated@@30 $generated@@188 $generated@@190))
 :pattern ( ($generated@@30 $generated@@189 $generated@@190))
)))
 :pattern ( ($generated@@65 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@72 $generated@@6 ($generated@@10 ($generated@@23 $generated@@191))) ($generated@@55 $generated@@124 ($generated@@72 $generated@@6 ($generated@@10 $generated@@191))))
 :pattern ( ($generated@@72 $generated@@6 ($generated@@10 ($generated@@23 $generated@@191))))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@72 $generated@@193 ($generated@@55 $generated@@193 $generated@@192)) ($generated@@55 $generated@@124 ($generated@@72 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@72 $generated@@193 ($generated@@55 $generated@@193 $generated@@192)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Bool)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@201  (=> (or (not (= $generated@@194 ($generated@@23 0))) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (not (= 0 $generated@@20)) (not true))) (=> (or (not (= 0 $generated@@20)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@41 $generated@@6 ($generated@@10 (- $generated@@194 1)) $generated@@34)) (=> ($generated@@41 $generated@@6 ($generated@@10 (- $generated@@194 1)) $generated@@34) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@33 $generated@@34 $generated@@34 $generated@@195 ($generated@@35 ($generated@@58 $generated@@196)) ($generated@@72 $generated@@6 ($generated@@10 (- $generated@@194 1))))) (=> ($generated@@33 $generated@@34 $generated@@34 $generated@@195 ($generated@@35 ($generated@@58 $generated@@196)) ($generated@@72 $generated@@6 ($generated@@10 (- $generated@@194 1)))) (=> (and (and (= $generated@@197 (forall (($generated@@202 T@U) ($generated@@203 T@U) )  (=> (and (and (or (not (= $generated@@202 $generated@@198)) (not true)) ($generated@@9 ($generated@@37 $generated@@5 ($generated@@123 $generated@@121 $generated@@124 ($generated@@123 $generated@@120 ($generated@@125 $generated@@121 $generated@@124) $generated@@195 $generated@@202) $generated)))) ($generated@@30 ($generated@@63 $generated@@34 $generated@@34 $generated@@195 ($generated@@35 ($generated@@58 $generated@@196)) ($generated@@72 $generated@@6 ($generated@@10 (- $generated@@194 1)))) ($generated@@72 $generated@@120 $generated@@202))) ($generated@@9 ($generated@@119 $generated@@120 $generated@@121 $generated@@5 $generated@@199 $generated@@202 $generated@@203))))) (= ($generated@@26 ($generated@@58 $generated@@196) $generated@@194) ($generated@@21 ($generated@@58 $generated@@196) (- $generated@@194 1)))) (and ($generated@@41 $generated@@6 ($generated@@10 ($generated@@26 ($generated@@58 $generated@@196) $generated@@194)) $generated@@34) (= (ControlFlow 0 5) (- 0 4)))) $generated@@197))))))))))
(let (($generated@@204  (=> (and (= $generated@@194 ($generated@@23 0)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@41 $generated@@6 ($generated@@10 ($generated@@23 0)) $generated@@34))))
(let (($generated@@205 true))
(let (($generated@@206  (=> (= $generated@@199 ($generated@@122 $generated@@198 $generated@@195 $generated false)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@205) (=> (= (ControlFlow 0 9) 3) $generated@@204)) (=> (= (ControlFlow 0 9) 5) $generated@@201)))))
(let (($generated@@207  (=> (and (and (and ($generated@@59 $generated@@195) ($generated@@200 $generated@@195)) (<= ($generated@@23 0) $generated@@194)) (and (= 0 $generated@@20) (= (ControlFlow 0 10) 9))) $generated@@206)))
$generated@@207))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 5) (- 8))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
