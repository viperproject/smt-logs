(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun TBool () T@U)
(declare-fun TagBool () T@U)
(declare-fun TagSet () T@U)
(declare-fun alloc () T@U)
(declare-fun Tagclass._System.object? () T@U)
(declare-fun Tagclass._System.object () T@U)
(declare-fun Tagclass._System.___hFunc1 () T@U)
(declare-fun Tagclass._System.___hFunc0 () T@U)
(declare-fun Tagclass._System.___hFunc2 () T@U)
(declare-fun tytagFamily$object () T@U)
(declare-fun |tytagFamily$_#Func1| () T@U)
(declare-fun |tytagFamily$_#Func0| () T@U)
(declare-fun |tytagFamily$_#Func2| () T@U)
(declare-fun Ctor (T@T) Int)
(declare-fun boolType () T@T)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun $IsAlloc (T@T T@U T@U T@U) Bool)
(declare-fun HandleTypeType () T@T)
(declare-fun Tclass._System.___hFunc0 (T@U) T@U)
(declare-fun $IsGoodHeap (T@U) Bool)
(declare-fun Requires0 (T@U T@U T@U) Bool)
(declare-fun |Set#IsMember| (T@U T@U) Bool)
(declare-fun Reads0 (T@U T@U T@U) T@U)
(declare-fun $Box (T@T T@U) T@U)
(declare-fun refType () T@T)
(declare-fun null () T@U)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun MapType0Select (T@T T@T T@U T@U) T@U)
(declare-fun FieldType () T@T)
(declare-fun BoxType () T@T)
(declare-fun MapType0Type (T@T T@T) T@T)
(declare-fun MapType0Store (T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType0TypeInv0 (T@T) T@T)
(declare-fun MapType0TypeInv1 (T@T) T@T)
(declare-fun Requires1 (T@U T@U T@U T@U T@U) Bool)
(declare-fun Apply1 (T@U T@U T@U T@U T@U) T@U)
(declare-fun |Requires1#Handle| (T@U T@U T@U) T@U)
(declare-fun Tag (T@U) T@U)
(declare-fun $FunctionContextHeight () Int)
(declare-fun _module.__default.QQ (T@U T@U T@U T@U T@U) T@U)
(declare-fun |_module.__default.QQ#canCall| (T@U T@U T@U T@U T@U) Bool)
(declare-fun $Is (T@T T@U T@U) Bool)
(declare-fun Tclass._System.___hFunc1 (T@U T@U) T@U)
(declare-fun $IsBox (T@U T@U) Bool)
(declare-fun $IsAllocBox (T@U T@U T@U) Bool)
(declare-fun Apply0 (T@U T@U T@U) T@U)
(declare-fun Lit (T@T T@U) T@U)
(declare-fun AtLayer (T@T T@U T@U) T@U)
(declare-fun |lambda#156| (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun |lambda#4| (T@U) T@U)
(declare-fun Handle0 (T@U T@U T@U) T@U)
(declare-fun |lambda#132| (T@U) T@U)
(declare-fun |lambda#133| (Bool) T@U)
(declare-fun |lambda#135| (T@U) T@U)
(declare-fun SetRef_to_SetBox (T@U) T@U)
(declare-fun |lambda#2| (Bool) T@U)
(declare-fun $LS (T@U) T@U)
(declare-fun $LZ () T@U)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun $HeapSucc (T@U T@U) Bool)
(declare-fun SetType () T@T)
(declare-fun TSet (T@U) T@U)
(declare-fun Tclass._System.object? () T@U)
(declare-fun |lambda#141| (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun Tclass._System.___hFunc2 (T@U T@U T@U) T@U)
(declare-fun Tclass._System.___hFunc2_0 (T@U) T@U)
(declare-fun Tclass._System.___hFunc2_1 (T@U) T@U)
(declare-fun Tclass._System.___hFunc2_2 (T@U) T@U)
(declare-fun |Set#Empty| () T@U)
(declare-fun TagFamily (T@U) T@U)
(declare-fun |_module.__default.P#requires| (T@U T@U T@U T@U T@U) Bool)
(declare-fun Tclass._System.object () T@U)
(declare-fun Reads1 (T@U T@U T@U T@U T@U) T@U)
(declare-fun |Reads1#Handle| (T@U T@U T@U) T@U)
(declare-fun $OneHeap () T@U)
(declare-fun |Set#Equal| (T@U T@U) Bool)
(declare-fun _module.__default.P (T@U T@U T@U T@U T@U) T@U)
(declare-fun |_module.__default.P#canCall| (T@U T@U T@U T@U T@U) Bool)
(declare-fun LayerTypeType () T@T)
(declare-fun |lambda#137| (T@U T@U T@U T@U) T@U)
(declare-fun |lambda#152| (T@U T@U T@U T@U) T@U)
(declare-fun Apply2 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun Reads2 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun Requires2 (T@U T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun |_module.__default.P#Handle| (T@U T@U) T@U)
(declare-fun Tclass._System.___hFunc1_0 (T@U) T@U)
(declare-fun Tclass._System.___hFunc1_1 (T@U) T@U)
(declare-fun Inv0_TSet (T@U) T@U)
(declare-fun Tclass._System.___hFunc0_0 (T@U) T@U)
(declare-fun MapType1Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun |lambda#30| (T@U T@U T@U Bool) T@U)
(declare-fun MapType1Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun |lambda#130| (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= (Ctor boolType) 0) (= (Ctor intType) 1)) (= (Ctor realType) 2)) (forall ((arg0 Bool) ) (! (= (U_2_bool (bool_2_U arg0)) arg0)
 :pattern ( (bool_2_U arg0))
))) (forall ((x T@U) ) (! (= (bool_2_U (U_2_bool x)) x)
 :pattern ( (U_2_bool x))
))) (forall ((arg0@@0 Int) ) (! (= (U_2_int (int_2_U arg0@@0)) arg0@@0)
 :pattern ( (int_2_U arg0@@0))
))) (forall ((x@@0 T@U) ) (! (= (int_2_U (U_2_int x@@0)) x@@0)
 :pattern ( (U_2_int x@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@1 T@U) ) (! (= (real_2_U (U_2_real x@@1)) x@@1)
 :pattern ( (U_2_real x@@1))
))))
(assert (distinct TBool TagBool TagSet alloc Tagclass._System.object? Tagclass._System.object Tagclass._System.___hFunc1 Tagclass._System.___hFunc0 Tagclass._System.___hFunc2 tytagFamily$object |tytagFamily$_#Func1| |tytagFamily$_#Func0| |tytagFamily$_#Func2|)
)
(assert  (and (and (and (and (and (and (and (and (= (Ctor HandleTypeType) 3) (= (Ctor refType) 4)) (forall ((t0 T@T) (t1 T@T) (val T@U) (m T@U) (x0 T@U) ) (! (= (MapType0Select t0 t1 (MapType0Store t0 t1 m x0 val) x0) val)
 :weight 0
))) (forall ((u0 T@T) (u1 T@T) (val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (y0 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select u0 u1 (MapType0Store u0 u1 m@@0 x0@@0 val@@0) y0) (MapType0Select u0 u1 m@@0 y0)))
 :weight 0
))) (= (Ctor FieldType) 5)) (= (Ctor BoxType) 6)) (forall ((arg0@@2 T@T) (arg1 T@T) ) (= (Ctor (MapType0Type arg0@@2 arg1)) 7))) (forall ((arg0@@3 T@T) (arg1@@0 T@T) ) (! (= (MapType0TypeInv0 (MapType0Type arg0@@3 arg1@@0)) arg0@@3)
 :pattern ( (MapType0Type arg0@@3 arg1@@0))
))) (forall ((arg0@@4 T@T) (arg1@@1 T@T) ) (! (= (MapType0TypeInv1 (MapType0Type arg0@@4 arg1@@1)) arg1@@1)
 :pattern ( (MapType0Type arg0@@4 arg1@@1))
))))
(assert (forall ((f T@U) (t0@@0 T@U) (h T@U) ) (!  (=> ($IsGoodHeap h) (= ($IsAlloc HandleTypeType f (Tclass._System.___hFunc0 t0@@0) h)  (=> (Requires0 t0@@0 h f) (forall ((r T@U) ) (!  (=> (and (or (not (= r null)) (not true)) (|Set#IsMember| (Reads0 t0@@0 h f) ($Box refType r))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h r) alloc))))
 :pattern ( (|Set#IsMember| (Reads0 t0@@0 h f) ($Box refType r)))
)))))
 :pattern ( ($IsAlloc HandleTypeType f (Tclass._System.___hFunc0 t0@@0) h))
)))
(assert (forall ((|#$T0| T@U) (|#$R| T@U) ($self T@U) ($heap T@U) (|$fh$0x#0| T@U) ) (! (= (Requires1 |#$T0| |#$R| $heap $self |$fh$0x#0|) (U_2_bool ($Unbox boolType (Apply1 |#$T0| TBool $heap (|Requires1#Handle| |#$T0| |#$R| $self) |$fh$0x#0|))))
 :pattern ( (Requires1 |#$T0| |#$R| $heap $self |$fh$0x#0|))
)))
(assert (forall ((|#$T0@@0| T@U) (|#$R@@0| T@U) ($self@@0 T@U) ($heap@@0 T@U) (|$fh$0x#0@@0| T@U) ) (! (= (Apply1 |#$T0@@0| TBool $heap@@0 (|Requires1#Handle| |#$T0@@0| |#$R@@0| $self@@0) |$fh$0x#0@@0|) ($Box boolType (bool_2_U (Requires1 |#$T0@@0| |#$R@@0| $heap@@0 $self@@0 |$fh$0x#0@@0|))))
 :pattern ( (Apply1 |#$T0@@0| TBool $heap@@0 (|Requires1#Handle| |#$T0@@0| |#$R@@0| $self@@0) |$fh$0x#0@@0|))
)))
(assert (= (Tag TBool) TagBool))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((_module._default.QQ$U T@U) (_module._default.QQ$V T@U) ($Heap T@U) (|f#0| T@U) (|x#0| T@U) ) (!  (=> (or (|_module.__default.QQ#canCall| _module._default.QQ$U _module._default.QQ$V $Heap |f#0| |x#0|) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $Heap) (and ($Is HandleTypeType |f#0| (Tclass._System.___hFunc1 _module._default.QQ$U _module._default.QQ$V)) ($IsAlloc HandleTypeType |f#0| (Tclass._System.___hFunc1 _module._default.QQ$U _module._default.QQ$V) $Heap))) (and ($IsBox |x#0| _module._default.QQ$U) ($IsAllocBox |x#0| _module._default.QQ$U $Heap))) (U_2_bool ($Unbox boolType (Apply1 _module._default.QQ$U TBool $Heap ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U TBool) $Heap (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#156| _module._default.QQ$U _module._default.QQ$V (Tclass._System.___hFunc1 _module._default.QQ$U _module._default.QQ$V) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U $Heap (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))))))) ($IsBox (_module.__default.QQ _module._default.QQ$U _module._default.QQ$V $Heap |f#0| |x#0|) _module._default.QQ$V))
 :pattern ( (_module.__default.QQ _module._default.QQ$U _module._default.QQ$V $Heap |f#0| |x#0|))
))))
(assert (= (Ctor SetType) 8))
(assert (forall ((_module._default.QQ$U@@0 T@U) (_module._default.QQ$V@@0 T@U) ($h0 T@U) ($h1 T@U) (|f#0@@0| T@U) (|x#0@@0| T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0) ($IsGoodHeap $h1)) (or (|_module.__default.QQ#canCall| _module._default.QQ$U@@0 _module._default.QQ$V@@0 $h0 |f#0@@0| |x#0@@0|) (and ($Is HandleTypeType |f#0@@0| (Tclass._System.___hFunc1 _module._default.QQ$U@@0 _module._default.QQ$V@@0)) ($IsBox |x#0@@0| _module._default.QQ$U@@0)))) (and ($IsHeapAnchor $h0) ($HeapSucc $h0 $h1))) (=> (forall (($o T@U) ($f T@U) )  (=> (and (or (not (= $o null)) (not true)) (|Set#IsMember| ($Unbox SetType (Apply1 _module._default.QQ$U@@0 (TSet Tclass._System.object?) $h0 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@0 (TSet Tclass._System.object?)) $h0 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#141| _module._default.QQ$U@@0 _module._default.QQ$V@@0 (Tclass._System.___hFunc1 _module._default.QQ$U@@0 _module._default.QQ$V@@0) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@0|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@0 $h0 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@0|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))) ($Box refType $o))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0 $o) $f) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1 $o) $f)))) (= (_module.__default.QQ _module._default.QQ$U@@0 _module._default.QQ$V@@0 $h0 |f#0@@0| |x#0@@0|) (_module.__default.QQ _module._default.QQ$U@@0 _module._default.QQ$V@@0 $h1 |f#0@@0| |x#0@@0|))))
 :pattern ( ($IsHeapAnchor $h0) ($HeapSucc $h0 $h1) (_module.__default.QQ _module._default.QQ$U@@0 _module._default.QQ$V@@0 $h1 |f#0@@0| |x#0@@0|))
)))
(assert (forall ((|#$T0@@1| T@U) (|#$T1| T@U) (|#$R@@1| T@U) ) (! (= (Tclass._System.___hFunc2_0 (Tclass._System.___hFunc2 |#$T0@@1| |#$T1| |#$R@@1|)) |#$T0@@1|)
 :pattern ( (Tclass._System.___hFunc2 |#$T0@@1| |#$T1| |#$R@@1|))
)))
(assert (forall ((|#$T0@@2| T@U) (|#$T1@@0| T@U) (|#$R@@2| T@U) ) (! (= (Tclass._System.___hFunc2_1 (Tclass._System.___hFunc2 |#$T0@@2| |#$T1@@0| |#$R@@2|)) |#$T1@@0|)
 :pattern ( (Tclass._System.___hFunc2 |#$T0@@2| |#$T1@@0| |#$R@@2|))
)))
(assert (forall ((|#$T0@@3| T@U) (|#$T1@@1| T@U) (|#$R@@3| T@U) ) (! (= (Tclass._System.___hFunc2_2 (Tclass._System.___hFunc2 |#$T0@@3| |#$T1@@1| |#$R@@3|)) |#$R@@3|)
 :pattern ( (Tclass._System.___hFunc2 |#$T0@@3| |#$T1@@1| |#$R@@3|))
)))
(assert (forall ((o T@U) ) (!  (not (|Set#IsMember| |Set#Empty| o))
 :pattern ( (|Set#IsMember| |Set#Empty| o))
)))
(assert (forall ((|#$T0@@4| T@U) (|#$T1@@2| T@U) (|#$R@@4| T@U) ) (!  (and (= (Tag (Tclass._System.___hFunc2 |#$T0@@4| |#$T1@@2| |#$R@@4|)) Tagclass._System.___hFunc2) (= (TagFamily (Tclass._System.___hFunc2 |#$T0@@4| |#$T1@@2| |#$R@@4|)) |tytagFamily$_#Func2|))
 :pattern ( (Tclass._System.___hFunc2 |#$T0@@4| |#$T1@@2| |#$R@@4|))
)))
(assert (forall ((_module._default.P$A T@U) (_module._default.P$B T@U) ($Heap@@0 T@U) (|f#0@@1| T@U) (|x#0@@1| T@U) ) (!  (=> (and (and ($IsGoodHeap $Heap@@0) ($Is HandleTypeType |f#0@@1| (Tclass._System.___hFunc1 _module._default.P$A _module._default.P$B))) ($IsBox |x#0@@1| _module._default.P$A)) (= (|_module.__default.P#requires| _module._default.P$A _module._default.P$B $Heap@@0 |f#0@@1| |x#0@@1|) (Requires1 _module._default.P$A _module._default.P$B $Heap@@0 |f#0@@1| |x#0@@1|)))
 :pattern ( (|_module.__default.P#requires| _module._default.P$A _module._default.P$B $Heap@@0 |f#0@@1| |x#0@@1|) ($IsGoodHeap $Heap@@0))
)))
(assert (forall ((|#$T0@@5| T@U) (|#$T1@@3| T@U) (|#$R@@5| T@U) (bx T@U) ) (!  (=> ($IsBox bx (Tclass._System.___hFunc2 |#$T0@@5| |#$T1@@3| |#$R@@5|)) (and (= ($Box HandleTypeType ($Unbox HandleTypeType bx)) bx) ($Is HandleTypeType ($Unbox HandleTypeType bx) (Tclass._System.___hFunc2 |#$T0@@5| |#$T1@@3| |#$R@@5|))))
 :pattern ( ($IsBox bx (Tclass._System.___hFunc2 |#$T0@@5| |#$T1@@3| |#$R@@5|)))
)))
(assert (forall ((f@@0 T@U) (t0@@1 T@U) (t1@@0 T@U) (u0@@0 T@U) (u1@@0 T@U) ) (!  (=> (and (and ($Is HandleTypeType f@@0 (Tclass._System.___hFunc1 t0@@1 t1@@0)) (forall ((bx@@0 T@U) ) (!  (=> ($IsBox bx@@0 u0@@0) ($IsBox bx@@0 t0@@1))
 :pattern ( ($IsBox bx@@0 u0@@0))
 :pattern ( ($IsBox bx@@0 t0@@1))
))) (forall ((bx@@1 T@U) ) (!  (=> ($IsBox bx@@1 t1@@0) ($IsBox bx@@1 u1@@0))
 :pattern ( ($IsBox bx@@1 t1@@0))
 :pattern ( ($IsBox bx@@1 u1@@0))
))) ($Is HandleTypeType f@@0 (Tclass._System.___hFunc1 u0@@0 u1@@0)))
 :pattern ( ($Is HandleTypeType f@@0 (Tclass._System.___hFunc1 t0@@1 t1@@0)) ($Is HandleTypeType f@@0 (Tclass._System.___hFunc1 u0@@0 u1@@0)))
)))
(assert (forall ((|c#0| T@U) ($h T@U) ) (! (= ($IsAlloc refType |c#0| Tclass._System.object $h) ($IsAlloc refType |c#0| Tclass._System.object? $h))
 :pattern ( ($IsAlloc refType |c#0| Tclass._System.object $h))
 :pattern ( ($IsAlloc refType |c#0| Tclass._System.object? $h))
)))
(assert (forall (($bx T@U) (|#$T0@@6| T@U) (|#$R@@6| T@U) ($self@@1 T@U) ($heap@@1 T@U) (|$fh$0x#0@@1| T@U) ) (!  (=> (Requires1 |#$T0@@6| |#$R@@6| $heap@@1 $self@@1 |$fh$0x#0@@1|) (= (|Set#IsMember| (Reads1 |#$T0@@6| (TSet Tclass._System.object?) $heap@@1 (|Reads1#Handle| |#$T0@@6| |#$R@@6| $self@@1) |$fh$0x#0@@1|) $bx) (|Set#IsMember| (Reads1 |#$T0@@6| |#$R@@6| $heap@@1 $self@@1 |$fh$0x#0@@1|) $bx)))
 :pattern ( (|Set#IsMember| (Reads1 |#$T0@@6| (TSet Tclass._System.object?) $heap@@1 (|Reads1#Handle| |#$T0@@6| |#$R@@6| $self@@1) |$fh$0x#0@@1|) $bx))
)))
(assert (forall ((t0@@2 T@U) (heap T@U) (h@@0 T@U) (r@@0 T@U) (rd T@U) ) (! (= (Apply0 t0@@2 heap (Handle0 h@@0 r@@0 rd)) (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) BoxType h@@0 heap))
 :pattern ( (Apply0 t0@@2 heap (Handle0 h@@0 r@@0 rd)))
)))
(assert (forall (($o@@0 T@U) ($h@@0 T@U) ) (! (= ($IsAlloc refType $o@@0 Tclass._System.object? $h@@0)  (or (= $o@@0 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@0 $o@@0) alloc)))))
 :pattern ( ($IsAlloc refType $o@@0 Tclass._System.object? $h@@0))
)))
(assert (forall (($bx@@0 T@U) (|#$T0@@7| T@U) (|#$R@@7| T@U) ($self@@2 T@U) ($heap@@2 T@U) (|$fh$0x#0@@2| T@U) ) (!  (=> (Requires1 |#$T0@@7| |#$R@@7| $heap@@2 $self@@2 |$fh$0x#0@@2|) (= (|Set#IsMember| (Reads1 |#$T0@@7| TBool $heap@@2 (|Requires1#Handle| |#$T0@@7| |#$R@@7| $self@@2) |$fh$0x#0@@2|) $bx@@0) (|Set#IsMember| (Reads1 |#$T0@@7| |#$R@@7| $heap@@2 $self@@2 |$fh$0x#0@@2|) $bx@@0)))
 :pattern ( (|Set#IsMember| (Reads1 |#$T0@@7| TBool $heap@@2 (|Requires1#Handle| |#$T0@@7| |#$R@@7| $self@@2) |$fh$0x#0@@2|) $bx@@0))
)))
(assert (forall ((h@@1 T@U) (k T@U) ) (!  (=> ($HeapSucc h@@1 k) (forall ((o@@0 T@U) ) (!  (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@1 o@@0) alloc))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o@@0) alloc))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o@@0) alloc))
)))
 :pattern ( ($HeapSucc h@@1 k))
)))
(assert (forall ((x@@2 T@U) (T T@T) ) (! (= (Lit T x@@2) x@@2)
 :pattern ( (Lit T x@@2))
)))
(assert (forall ((t0@@3 T@U) (t1@@1 T@U) (heap@@0 T@U) (f@@1 T@U) (bx0 T@U) ) (!  (=> (and ($IsGoodHeap heap@@0) (and ($IsBox bx0 t0@@3) ($Is HandleTypeType f@@1 (Tclass._System.___hFunc1 t0@@3 t1@@1)))) (= (|Set#Equal| (Reads1 t0@@3 t1@@1 $OneHeap f@@1 bx0) |Set#Empty|) (|Set#Equal| (Reads1 t0@@3 t1@@1 heap@@0 f@@1 bx0) |Set#Empty|)))
 :pattern ( (Reads1 t0@@3 t1@@1 $OneHeap f@@1 bx0) ($IsGoodHeap heap@@0))
 :pattern ( (Reads1 t0@@3 t1@@1 heap@@0 f@@1 bx0))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((_module._default.P$A@@0 T@U) (_module._default.P$B@@0 T@U) ($Heap@@1 T@U) (|f#0@@2| T@U) (|x#0@@2| T@U) ) (!  (=> (or (|_module.__default.P#canCall| _module._default.P$A@@0 _module._default.P$B@@0 $Heap@@1 |f#0@@2| |x#0@@2|) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $Heap@@1) (and ($Is HandleTypeType |f#0@@2| (Tclass._System.___hFunc1 _module._default.P$A@@0 _module._default.P$B@@0)) ($IsAlloc HandleTypeType |f#0@@2| (Tclass._System.___hFunc1 _module._default.P$A@@0 _module._default.P$B@@0) $Heap@@1))) (and ($IsBox |x#0@@2| _module._default.P$A@@0) ($IsAllocBox |x#0@@2| _module._default.P$A@@0 $Heap@@1))) (Requires1 _module._default.P$A@@0 _module._default.P$B@@0 $Heap@@1 |f#0@@2| |x#0@@2|)))) ($IsBox (_module.__default.P _module._default.P$A@@0 _module._default.P$B@@0 $Heap@@1 |f#0@@2| |x#0@@2|) _module._default.P$B@@0))
 :pattern ( (_module.__default.P _module._default.P$A@@0 _module._default.P$B@@0 $Heap@@1 |f#0@@2| |x#0@@2|))
))))
(assert (forall ((t0@@4 T@U) (heap@@1 T@U) (h@@2 T@U) (r@@1 T@U) (rd@@0 T@U) (bx@@2 T@U) ) (! (= (|Set#IsMember| (Reads0 t0@@4 heap@@1 (Handle0 h@@2 r@@1 rd@@0)) bx@@2) (|Set#IsMember| (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) SetType rd@@0 heap@@1) bx@@2))
 :pattern ( (|Set#IsMember| (Reads0 t0@@4 heap@@1 (Handle0 h@@2 r@@1 rd@@0)) bx@@2))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((_module._default.QQ$U@@1 T@U) (_module._default.QQ$V@@1 T@U) ($Heap@@2 T@U) (|f#0@@3| T@U) (|x#0@@3| T@U) ) (!  (=> (or (|_module.__default.QQ#canCall| _module._default.QQ$U@@1 _module._default.QQ$V@@1 $Heap@@2 |f#0@@3| |x#0@@3|) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $Heap@@2) (and ($Is HandleTypeType |f#0@@3| (Tclass._System.___hFunc1 _module._default.QQ$U@@1 _module._default.QQ$V@@1)) ($IsAlloc HandleTypeType |f#0@@3| (Tclass._System.___hFunc1 _module._default.QQ$U@@1 _module._default.QQ$V@@1) $Heap@@2))) (and ($IsBox |x#0@@3| _module._default.QQ$U@@1) ($IsAllocBox |x#0@@3| _module._default.QQ$U@@1 $Heap@@2))) (U_2_bool ($Unbox boolType (Apply1 _module._default.QQ$U@@1 TBool $Heap@@2 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@1 TBool) $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#156| _module._default.QQ$U@@1 _module._default.QQ$V@@1 (Tclass._System.___hFunc1 _module._default.QQ$U@@1 _module._default.QQ$V@@1) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@3|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@1 $Heap@@2 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@3|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))))))) ($IsAllocBox (_module.__default.QQ _module._default.QQ$U@@1 _module._default.QQ$V@@1 $Heap@@2 |f#0@@3| |x#0@@3|) _module._default.QQ$V@@1 $Heap@@2))
 :pattern ( ($IsAllocBox (_module.__default.QQ _module._default.QQ$U@@1 _module._default.QQ$V@@1 $Heap@@2 |f#0@@3| |x#0@@3|) _module._default.QQ$V@@1 $Heap@@2))
))))
(assert (forall ((x@@3 T@U) (T@@0 T@T) ) (! (= ($Box T@@0 ($Unbox T@@0 x@@3)) x@@3)
 :pattern ( ($Unbox T@@0 x@@3))
)))
(assert (forall ((t0@@5 T@U) (heap@@2 T@U) (f@@2 T@U) ) (!  (=> (and (and ($IsGoodHeap heap@@2) ($Is HandleTypeType f@@2 (Tclass._System.___hFunc0 t0@@5))) (|Set#Equal| (Reads0 t0@@5 $OneHeap f@@2) |Set#Empty|)) (= (Requires0 t0@@5 $OneHeap f@@2) (Requires0 t0@@5 heap@@2 f@@2)))
 :pattern ( (Requires0 t0@@5 $OneHeap f@@2) ($IsGoodHeap heap@@2))
 :pattern ( (Requires0 t0@@5 heap@@2 f@@2))
)))
(assert (forall ((t0@@6 T@U) (t1@@2 T@U) (h0 T@U) (h1 T@U) (f@@3 T@U) (bx0@@0 T@U) ) (!  (=> (and (and (and ($HeapSucc h0 h1) (and ($IsGoodHeap h0) ($IsGoodHeap h1))) (and ($IsBox bx0@@0 t0@@6) ($Is HandleTypeType f@@3 (Tclass._System.___hFunc1 t0@@6 t1@@2)))) (forall ((o@@1 T@U) (fld T@U) )  (=> (and (or (not (= o@@1 null)) (not true)) (|Set#IsMember| (Reads1 t0@@6 t1@@2 h0 f@@3 bx0@@0) ($Box refType o@@1))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0 o@@1) fld) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1 o@@1) fld))))) (= (Requires1 t0@@6 t1@@2 h0 f@@3 bx0@@0) (Requires1 t0@@6 t1@@2 h1 f@@3 bx0@@0)))
 :pattern ( ($HeapSucc h0 h1) (Requires1 t0@@6 t1@@2 h1 f@@3 bx0@@0))
)))
(assert (forall ((t0@@7 T@U) (t1@@3 T@U) (h0@@0 T@U) (h1@@0 T@U) (f@@4 T@U) (bx0@@1 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@0 h1@@0) (and ($IsGoodHeap h0@@0) ($IsGoodHeap h1@@0))) (and ($IsBox bx0@@1 t0@@7) ($Is HandleTypeType f@@4 (Tclass._System.___hFunc1 t0@@7 t1@@3)))) (forall ((o@@2 T@U) (fld@@0 T@U) )  (=> (and (or (not (= o@@2 null)) (not true)) (|Set#IsMember| (Reads1 t0@@7 t1@@3 h1@@0 f@@4 bx0@@1) ($Box refType o@@2))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@0 o@@2) fld@@0) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@0 o@@2) fld@@0))))) (= (Requires1 t0@@7 t1@@3 h0@@0 f@@4 bx0@@1) (Requires1 t0@@7 t1@@3 h1@@0 f@@4 bx0@@1)))
 :pattern ( ($HeapSucc h0@@0 h1@@0) (Requires1 t0@@7 t1@@3 h1@@0 f@@4 bx0@@1))
)))
(assert (forall ((v T@U) (t0@@8 T@U) ) (! (= ($Is SetType v (TSet t0@@8)) (forall ((bx@@3 T@U) ) (!  (=> (|Set#IsMember| v bx@@3) ($IsBox bx@@3 t0@@8))
 :pattern ( (|Set#IsMember| v bx@@3))
)))
 :pattern ( ($Is SetType v (TSet t0@@8)))
)))
(assert (= (Ctor LayerTypeType) 9))
(assert (forall ((f@@5 T@U) (ly T@U) (A T@T) ) (! (= (AtLayer A f@@5 ly) (MapType0Select LayerTypeType A f@@5 ly))
 :pattern ( (AtLayer A f@@5 ly))
)))
(assert ($IsGoodHeap $OneHeap))
(assert (forall ((|l#0| T@U) (|l#1| T@U) (|l#2| T@U) (|l#3| T@U) (|$l#0#heap#0| T@U) ) (! (= (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) BoxType (|lambda#137| |l#0| |l#1| |l#2| |l#3|) |$l#0#heap#0|) ($Box HandleTypeType (|Reads1#Handle| |l#0| |l#1| ($Unbox HandleTypeType (Apply0 |l#2| |$l#0#heap#0| |l#3|)))))
 :pattern ( (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) BoxType (|lambda#137| |l#0| |l#1| |l#2| |l#3|) |$l#0#heap#0|))
)))
(assert (forall ((|l#0@@0| T@U) (|l#1@@0| T@U) (|l#2@@0| T@U) (|l#3@@0| T@U) (|$l#3#heap#0| T@U) ) (! (= (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) BoxType (|lambda#152| |l#0@@0| |l#1@@0| |l#2@@0| |l#3@@0|) |$l#3#heap#0|) ($Box HandleTypeType (|Requires1#Handle| |l#0@@0| |l#1@@0| ($Unbox HandleTypeType (Apply0 |l#2@@0| |$l#3#heap#0| |l#3@@0|)))))
 :pattern ( (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) BoxType (|lambda#152| |l#0@@0| |l#1@@0| |l#2@@0| |l#3@@0|) |$l#3#heap#0|))
)))
(assert (forall ((v@@0 T@U) (t T@U) (h@@3 T@U) (T@@1 T@T) ) (! (= ($IsAllocBox ($Box T@@1 v@@0) t h@@3) ($IsAlloc T@@1 v@@0 t h@@3))
 :pattern ( ($IsAllocBox ($Box T@@1 v@@0) t h@@3))
)))
(assert (forall ((h@@4 T@U) (k@@0 T@U) (bx@@4 T@U) (t@@0 T@U) ) (!  (=> ($HeapSucc h@@4 k@@0) (=> ($IsAllocBox bx@@4 t@@0 h@@4) ($IsAllocBox bx@@4 t@@0 k@@0)))
 :pattern ( ($HeapSucc h@@4 k@@0) ($IsAllocBox bx@@4 t@@0 h@@4))
)))
(assert (forall ((h@@5 T@U) (k@@1 T@U) (v@@1 T@U) (t@@1 T@U) (T@@2 T@T) ) (!  (=> ($HeapSucc h@@5 k@@1) (=> ($IsAlloc T@@2 v@@1 t@@1 h@@5) ($IsAlloc T@@2 v@@1 t@@1 k@@1)))
 :pattern ( ($HeapSucc h@@5 k@@1) ($IsAlloc T@@2 v@@1 t@@1 h@@5))
)))
(assert (forall ((t0@@9 T@U) (t1@@4 T@U) (h0@@1 T@U) (h1@@1 T@U) (f@@6 T@U) (bx0@@2 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@1 h1@@1) (and ($IsGoodHeap h0@@1) ($IsGoodHeap h1@@1))) (and ($IsBox bx0@@2 t0@@9) ($Is HandleTypeType f@@6 (Tclass._System.___hFunc1 t0@@9 t1@@4)))) (forall ((o@@3 T@U) (fld@@1 T@U) )  (=> (and (or (not (= o@@3 null)) (not true)) (|Set#IsMember| (Reads1 t0@@9 t1@@4 h0@@1 f@@6 bx0@@2) ($Box refType o@@3))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@1 o@@3) fld@@1) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@1 o@@3) fld@@1))))) (= (Reads1 t0@@9 t1@@4 h0@@1 f@@6 bx0@@2) (Reads1 t0@@9 t1@@4 h1@@1 f@@6 bx0@@2)))
 :pattern ( ($HeapSucc h0@@1 h1@@1) (Reads1 t0@@9 t1@@4 h1@@1 f@@6 bx0@@2))
)))
(assert (forall ((t0@@10 T@U) (t1@@5 T@U) (h0@@2 T@U) (h1@@2 T@U) (f@@7 T@U) (bx0@@3 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@2 h1@@2) (and ($IsGoodHeap h0@@2) ($IsGoodHeap h1@@2))) (and ($IsBox bx0@@3 t0@@10) ($Is HandleTypeType f@@7 (Tclass._System.___hFunc1 t0@@10 t1@@5)))) (forall ((o@@4 T@U) (fld@@2 T@U) )  (=> (and (or (not (= o@@4 null)) (not true)) (|Set#IsMember| (Reads1 t0@@10 t1@@5 h1@@2 f@@7 bx0@@3) ($Box refType o@@4))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@2 o@@4) fld@@2) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@2 o@@4) fld@@2))))) (= (Reads1 t0@@10 t1@@5 h0@@2 f@@7 bx0@@3) (Reads1 t0@@10 t1@@5 h1@@2 f@@7 bx0@@3)))
 :pattern ( ($HeapSucc h0@@2 h1@@2) (Reads1 t0@@10 t1@@5 h1@@2 f@@7 bx0@@3))
)))
(assert (forall ((t0@@11 T@U) (t1@@6 T@U) (h0@@3 T@U) (h1@@3 T@U) (f@@8 T@U) (bx0@@4 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@3 h1@@3) (and ($IsGoodHeap h0@@3) ($IsGoodHeap h1@@3))) (and ($IsBox bx0@@4 t0@@11) ($Is HandleTypeType f@@8 (Tclass._System.___hFunc1 t0@@11 t1@@6)))) (forall ((o@@5 T@U) (fld@@3 T@U) )  (=> (and (or (not (= o@@5 null)) (not true)) (|Set#IsMember| (Reads1 t0@@11 t1@@6 h0@@3 f@@8 bx0@@4) ($Box refType o@@5))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@3 o@@5) fld@@3) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@3 o@@5) fld@@3))))) (= (Apply1 t0@@11 t1@@6 h0@@3 f@@8 bx0@@4) (Apply1 t0@@11 t1@@6 h1@@3 f@@8 bx0@@4)))
 :pattern ( ($HeapSucc h0@@3 h1@@3) (Apply1 t0@@11 t1@@6 h1@@3 f@@8 bx0@@4))
)))
(assert (forall ((t0@@12 T@U) (t1@@7 T@U) (h0@@4 T@U) (h1@@4 T@U) (f@@9 T@U) (bx0@@5 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@4 h1@@4) (and ($IsGoodHeap h0@@4) ($IsGoodHeap h1@@4))) (and ($IsBox bx0@@5 t0@@12) ($Is HandleTypeType f@@9 (Tclass._System.___hFunc1 t0@@12 t1@@7)))) (forall ((o@@6 T@U) (fld@@4 T@U) )  (=> (and (or (not (= o@@6 null)) (not true)) (|Set#IsMember| (Reads1 t0@@12 t1@@7 h1@@4 f@@9 bx0@@5) ($Box refType o@@6))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@4 o@@6) fld@@4) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@4 o@@6) fld@@4))))) (= (Apply1 t0@@12 t1@@7 h0@@4 f@@9 bx0@@5) (Apply1 t0@@12 t1@@7 h1@@4 f@@9 bx0@@5)))
 :pattern ( ($HeapSucc h0@@4 h1@@4) (Apply1 t0@@12 t1@@7 h1@@4 f@@9 bx0@@5))
)))
(assert (forall ((|#$R@@8| T@U) ) (!  (and (= (Tag (Tclass._System.___hFunc0 |#$R@@8|)) Tagclass._System.___hFunc0) (= (TagFamily (Tclass._System.___hFunc0 |#$R@@8|)) |tytagFamily$_#Func0|))
 :pattern ( (Tclass._System.___hFunc0 |#$R@@8|))
)))
(assert (forall ((s T@U) (bx@@5 T@U) ) (! (= (|Set#IsMember| (SetRef_to_SetBox s) bx@@5) (U_2_bool (MapType0Select refType boolType s ($Unbox refType bx@@5))))
 :pattern ( (|Set#IsMember| (SetRef_to_SetBox s) bx@@5))
)))
(assert (forall ((|#$T0@@8| T@U) (|#$R@@9| T@U) ($self@@3 T@U) ($heap@@3 T@U) (|$fh$0x#0@@3| T@U) ) (! (= (Requires1 |#$T0@@8| TBool $heap@@3 (|Requires1#Handle| |#$T0@@8| |#$R@@9| $self@@3) |$fh$0x#0@@3|) true)
 :pattern ( (Requires1 |#$T0@@8| TBool $heap@@3 (|Requires1#Handle| |#$T0@@8| |#$R@@9| $self@@3) |$fh$0x#0@@3|))
)))
(assert (forall ((_module._default.P$A@@1 T@U) (_module._default.P$B@@1 T@U) ($h0@@0 T@U) ($h1@@0 T@U) (|f#0@@4| T@U) (|x#0@@4| T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@0) ($IsGoodHeap $h1@@0)) (or (|_module.__default.P#canCall| _module._default.P$A@@1 _module._default.P$B@@1 $h0@@0 |f#0@@4| |x#0@@4|) (and ($Is HandleTypeType |f#0@@4| (Tclass._System.___hFunc1 _module._default.P$A@@1 _module._default.P$B@@1)) ($IsBox |x#0@@4| _module._default.P$A@@1)))) (and ($IsHeapAnchor $h0@@0) ($HeapSucc $h0@@0 $h1@@0))) (=> (forall (($o@@1 T@U) ($f@@0 T@U) )  (=> (and (or (not (= $o@@1 null)) (not true)) (|Set#IsMember| (Reads1 _module._default.P$A@@1 _module._default.P$B@@1 $h0@@0 |f#0@@4| |x#0@@4|) ($Box refType $o@@1))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@0 $o@@1) $f@@0) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@0 $o@@1) $f@@0)))) (= (_module.__default.P _module._default.P$A@@1 _module._default.P$B@@1 $h0@@0 |f#0@@4| |x#0@@4|) (_module.__default.P _module._default.P$A@@1 _module._default.P$B@@1 $h1@@0 |f#0@@4| |x#0@@4|))))
 :pattern ( ($IsHeapAnchor $h0@@0) ($HeapSucc $h0@@0 $h1@@0) (_module.__default.P _module._default.P$A@@1 _module._default.P$B@@1 $h1@@0 |f#0@@4| |x#0@@4|))
)))
(assert (forall ((bx@@6 T@U) ) (!  (=> ($IsBox bx@@6 Tclass._System.object?) (and (= ($Box refType ($Unbox refType bx@@6)) bx@@6) ($Is refType ($Unbox refType bx@@6) Tclass._System.object?)))
 :pattern ( ($IsBox bx@@6 Tclass._System.object?))
)))
(assert (forall ((bx@@7 T@U) ) (!  (=> ($IsBox bx@@7 Tclass._System.object) (and (= ($Box refType ($Unbox refType bx@@7)) bx@@7) ($Is refType ($Unbox refType bx@@7) Tclass._System.object)))
 :pattern ( ($IsBox bx@@7 Tclass._System.object))
)))
(assert (forall ((|c#0@@0| T@U) ) (! (= ($Is refType |c#0@@0| Tclass._System.object)  (and ($Is refType |c#0@@0| Tclass._System.object?) (or (not (= |c#0@@0| null)) (not true))))
 :pattern ( ($Is refType |c#0@@0| Tclass._System.object))
 :pattern ( ($Is refType |c#0@@0| Tclass._System.object?))
)))
(assert (forall ((f@@10 T@U) (t0@@13 T@U) (t1@@8 T@U) (t2 T@U) (h@@6 T@U) ) (!  (=> ($IsGoodHeap h@@6) (= ($IsAlloc HandleTypeType f@@10 (Tclass._System.___hFunc2 t0@@13 t1@@8 t2) h@@6) (forall ((bx0@@6 T@U) (bx1 T@U) ) (!  (=> (and (and (and ($IsBox bx0@@6 t0@@13) ($IsAllocBox bx0@@6 t0@@13 h@@6)) (and ($IsBox bx1 t1@@8) ($IsAllocBox bx1 t1@@8 h@@6))) (Requires2 t0@@13 t1@@8 t2 h@@6 f@@10 bx0@@6 bx1)) (forall ((r@@2 T@U) ) (!  (=> (and (or (not (= r@@2 null)) (not true)) (|Set#IsMember| (Reads2 t0@@13 t1@@8 t2 h@@6 f@@10 bx0@@6 bx1) ($Box refType r@@2))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@6 r@@2) alloc))))
 :pattern ( (|Set#IsMember| (Reads2 t0@@13 t1@@8 t2 h@@6 f@@10 bx0@@6 bx1) ($Box refType r@@2)))
)))
 :pattern ( (Apply2 t0@@13 t1@@8 t2 h@@6 f@@10 bx0@@6 bx1))
 :pattern ( (Reads2 t0@@13 t1@@8 t2 h@@6 f@@10 bx0@@6 bx1))
))))
 :pattern ( ($IsAlloc HandleTypeType f@@10 (Tclass._System.___hFunc2 t0@@13 t1@@8 t2) h@@6))
)))
(assert (forall ((f@@11 T@U) (t0@@14 T@U) (t1@@9 T@U) (h@@7 T@U) ) (!  (=> (and ($IsGoodHeap h@@7) ($IsAlloc HandleTypeType f@@11 (Tclass._System.___hFunc1 t0@@14 t1@@9) h@@7)) (forall ((bx0@@7 T@U) ) (!  (=> (and ($IsAllocBox bx0@@7 t0@@14 h@@7) (Requires1 t0@@14 t1@@9 h@@7 f@@11 bx0@@7)) ($IsAllocBox (Apply1 t0@@14 t1@@9 h@@7 f@@11 bx0@@7) t1@@9 h@@7))
 :pattern ( (Apply1 t0@@14 t1@@9 h@@7 f@@11 bx0@@7))
)))
 :pattern ( ($IsAlloc HandleTypeType f@@11 (Tclass._System.___hFunc1 t0@@14 t1@@9) h@@7))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((_module._default.P$A@@2 T@U) (_module._default.P$B@@2 T@U) ($Heap@@3 T@U) (|f#0@@5| T@U) (|x#0@@5| T@U) ) (!  (=> (or (|_module.__default.P#canCall| _module._default.P$A@@2 _module._default.P$B@@2 $Heap@@3 |f#0@@5| |x#0@@5|) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $Heap@@3) (and ($Is HandleTypeType |f#0@@5| (Tclass._System.___hFunc1 _module._default.P$A@@2 _module._default.P$B@@2)) ($IsAlloc HandleTypeType |f#0@@5| (Tclass._System.___hFunc1 _module._default.P$A@@2 _module._default.P$B@@2) $Heap@@3))) (and ($IsBox |x#0@@5| _module._default.P$A@@2) ($IsAllocBox |x#0@@5| _module._default.P$A@@2 $Heap@@3))) (Requires1 _module._default.P$A@@2 _module._default.P$B@@2 $Heap@@3 |f#0@@5| |x#0@@5|)))) ($IsAllocBox (_module.__default.P _module._default.P$A@@2 _module._default.P$B@@2 $Heap@@3 |f#0@@5| |x#0@@5|) _module._default.P$B@@2 $Heap@@3))
 :pattern ( ($IsAllocBox (_module.__default.P _module._default.P$A@@2 _module._default.P$B@@2 $Heap@@3 |f#0@@5| |x#0@@5|) _module._default.P$B@@2 $Heap@@3))
))))
(assert (forall ((|#$T0@@9| T@U) (|#$R@@10| T@U) ($self@@4 T@U) ($heap@@4 T@U) (|$fh$0x#0@@4| T@U) ) (! (= (Reads1 |#$T0@@9| |#$R@@10| $heap@@4 $self@@4 |$fh$0x#0@@4|) ($Unbox SetType (Apply1 |#$T0@@9| (TSet Tclass._System.object?) $heap@@4 (|Reads1#Handle| |#$T0@@9| |#$R@@10| $self@@4) |$fh$0x#0@@4|)))
 :pattern ( (Reads1 |#$T0@@9| |#$R@@10| $heap@@4 $self@@4 |$fh$0x#0@@4|))
)))
(assert (forall ((|l#0@@1| Bool) (|$l#0#o#0| T@U) ) (! (= (U_2_bool (MapType0Select refType boolType (|lambda#2| |l#0@@1|) |$l#0#o#0|)) |l#0@@1|)
 :pattern ( (MapType0Select refType boolType (|lambda#2| |l#0@@1|) |$l#0#o#0|))
)))
(assert (forall ((|l#0@@2| T@U) (|$l#0#ly#0| T@U) ) (! (= (MapType0Select LayerTypeType HandleTypeType (|lambda#4| |l#0@@2|) |$l#0#ly#0|) |l#0@@2|)
 :pattern ( (MapType0Select LayerTypeType HandleTypeType (|lambda#4| |l#0@@2|) |$l#0#ly#0|))
)))
(assert (forall ((|l#0@@3| T@U) (|$l#1#heap#0| T@U) ) (! (= (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) BoxType (|lambda#132| |l#0@@3|) |$l#1#heap#0|) |l#0@@3|)
 :pattern ( (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) BoxType (|lambda#132| |l#0@@3|) |$l#1#heap#0|))
)))
(assert (forall ((|l#0@@4| Bool) (|$l#1#heap#0@@0| T@U) ) (! (= (U_2_bool (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) boolType (|lambda#133| |l#0@@4|) |$l#1#heap#0@@0|)) |l#0@@4|)
 :pattern ( (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) boolType (|lambda#133| |l#0@@4|) |$l#1#heap#0@@0|))
)))
(assert (forall ((|l#0@@5| T@U) (|$l#1#heap#0@@1| T@U) ) (! (= (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) SetType (|lambda#135| |l#0@@5|) |$l#1#heap#0@@1|) |l#0@@5|)
 :pattern ( (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) SetType (|lambda#135| |l#0@@5|) |$l#1#heap#0@@1|))
)))
(assert (forall ((f@@12 T@U) (t0@@15 T@U) (t1@@10 T@U) (t2@@0 T@U) ) (! (= ($Is HandleTypeType f@@12 (Tclass._System.___hFunc2 t0@@15 t1@@10 t2@@0)) (forall ((h@@8 T@U) (bx0@@8 T@U) (bx1@@0 T@U) ) (!  (=> (and (and ($IsGoodHeap h@@8) (and ($IsBox bx0@@8 t0@@15) ($IsBox bx1@@0 t1@@10))) (Requires2 t0@@15 t1@@10 t2@@0 h@@8 f@@12 bx0@@8 bx1@@0)) ($IsBox (Apply2 t0@@15 t1@@10 t2@@0 h@@8 f@@12 bx0@@8 bx1@@0) t2@@0))
 :pattern ( (Apply2 t0@@15 t1@@10 t2@@0 h@@8 f@@12 bx0@@8 bx1@@0))
)))
 :pattern ( ($Is HandleTypeType f@@12 (Tclass._System.___hFunc2 t0@@15 t1@@10 t2@@0)))
)))
(assert (forall ((t0@@16 T@U) (heap@@3 T@U) (f@@13 T@U) ) (!  (=> (and ($IsGoodHeap heap@@3) ($Is HandleTypeType f@@13 (Tclass._System.___hFunc0 t0@@16))) (= (|Set#Equal| (Reads0 t0@@16 $OneHeap f@@13) |Set#Empty|) (|Set#Equal| (Reads0 t0@@16 heap@@3 f@@13) |Set#Empty|)))
 :pattern ( (Reads0 t0@@16 $OneHeap f@@13) ($IsGoodHeap heap@@3))
 :pattern ( (Reads0 t0@@16 heap@@3 f@@13))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((_module._default.P$A@@3 T@U) (_module._default.P$B@@3 T@U) ($Heap@@4 T@U) (|f#0@@6| T@U) (|x#0@@6| T@U) ) (!  (=> (or (|_module.__default.P#canCall| _module._default.P$A@@3 _module._default.P$B@@3 $Heap@@4 |f#0@@6| |x#0@@6|) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $Heap@@4) ($Is HandleTypeType |f#0@@6| (Tclass._System.___hFunc1 _module._default.P$A@@3 _module._default.P$B@@3))) ($IsBox |x#0@@6| _module._default.P$A@@3)) (Requires1 _module._default.P$A@@3 _module._default.P$B@@3 $Heap@@4 |f#0@@6| |x#0@@6|)))) (= (_module.__default.P _module._default.P$A@@3 _module._default.P$B@@3 $Heap@@4 |f#0@@6| |x#0@@6|) (Apply1 _module._default.P$A@@3 _module._default.P$B@@3 $Heap@@4 |f#0@@6| |x#0@@6|)))
 :pattern ( (_module.__default.P _module._default.P$A@@3 _module._default.P$B@@3 $Heap@@4 |f#0@@6| |x#0@@6|) ($IsGoodHeap $Heap@@4))
))))
(assert (forall ((_module._default.P$A@@4 T@U) (_module._default.P$B@@4 T@U) ($heap@@5 T@U) (|$fh$0x#0@@5| T@U) (|$fh$0x#1| T@U) ) (! (= (Requires2 (Tclass._System.___hFunc1 _module._default.P$A@@4 _module._default.P$B@@4) _module._default.P$A@@4 _module._default.P$B@@4 $heap@@5 (|_module.__default.P#Handle| _module._default.P$A@@4 _module._default.P$B@@4) |$fh$0x#0@@5| |$fh$0x#1|) (|_module.__default.P#requires| _module._default.P$A@@4 _module._default.P$B@@4 $heap@@5 ($Unbox HandleTypeType |$fh$0x#0@@5|) |$fh$0x#1|))
 :pattern ( (Requires2 (Tclass._System.___hFunc1 _module._default.P$A@@4 _module._default.P$B@@4) _module._default.P$A@@4 _module._default.P$B@@4 $heap@@5 (|_module.__default.P#Handle| _module._default.P$A@@4 _module._default.P$B@@4) |$fh$0x#0@@5| |$fh$0x#1|))
)))
(assert (forall ((a T@U) (b T@U) ) (!  (=> (|Set#Equal| a b) (= a b))
 :pattern ( (|Set#Equal| a b))
)))
(assert (forall ((_module._default.P$A@@5 T@U) (_module._default.P$B@@5 T@U) ($heap@@6 T@U) (|$fh$0x#0@@6| T@U) (|$fh$0x#1@@0| T@U) ) (! (= (_module.__default.P _module._default.P$A@@5 _module._default.P$B@@5 $heap@@6 |$fh$0x#0@@6| |$fh$0x#1@@0|) (Apply2 (Tclass._System.___hFunc1 _module._default.P$A@@5 _module._default.P$B@@5) _module._default.P$A@@5 _module._default.P$B@@5 $heap@@6 (|_module.__default.P#Handle| _module._default.P$A@@5 _module._default.P$B@@5) ($Box HandleTypeType |$fh$0x#0@@6|) |$fh$0x#1@@0|))
 :pattern ( (_module.__default.P _module._default.P$A@@5 _module._default.P$B@@5 $heap@@6 |$fh$0x#0@@6| |$fh$0x#1@@0|))
)))
(assert (forall ((t0@@17 T@U) (t1@@11 T@U) (t2@@1 T@U) (heap@@4 T@U) (f@@14 T@U) (bx0@@9 T@U) (bx1@@1 T@U) ) (!  (=> (and ($IsGoodHeap heap@@4) (and (and ($IsBox bx0@@9 t0@@17) ($IsBox bx1@@1 t1@@11)) ($Is HandleTypeType f@@14 (Tclass._System.___hFunc2 t0@@17 t1@@11 t2@@1)))) (= (|Set#Equal| (Reads2 t0@@17 t1@@11 t2@@1 $OneHeap f@@14 bx0@@9 bx1@@1) |Set#Empty|) (|Set#Equal| (Reads2 t0@@17 t1@@11 t2@@1 heap@@4 f@@14 bx0@@9 bx1@@1) |Set#Empty|)))
 :pattern ( (Reads2 t0@@17 t1@@11 t2@@1 $OneHeap f@@14 bx0@@9 bx1@@1) ($IsGoodHeap heap@@4))
 :pattern ( (Reads2 t0@@17 t1@@11 t2@@1 heap@@4 f@@14 bx0@@9 bx1@@1))
)))
(assert (forall ((|#$T0@@10| T@U) (|#$R@@11| T@U) ($self@@5 T@U) ($heap@@7 T@U) (|$fh$0x#0@@7| T@U) ) (! (= (Requires1 |#$T0@@10| (TSet Tclass._System.object?) $heap@@7 (|Reads1#Handle| |#$T0@@10| |#$R@@11| $self@@5) |$fh$0x#0@@7|) (Requires1 |#$T0@@10| |#$R@@11| $heap@@7 $self@@5 |$fh$0x#0@@7|))
 :pattern ( (Requires1 |#$T0@@10| (TSet Tclass._System.object?) $heap@@7 (|Reads1#Handle| |#$T0@@10| |#$R@@11| $self@@5) |$fh$0x#0@@7|))
)))
(assert (forall ((a@@0 T@U) (b@@0 T@U) (c T@U) ) (!  (=> (or (not (= a@@0 c)) (not true)) (=> (and ($HeapSucc a@@0 b@@0) ($HeapSucc b@@0 c)) ($HeapSucc a@@0 c)))
 :pattern ( ($HeapSucc a@@0 b@@0) ($HeapSucc b@@0 c))
)))
(assert (forall ((f@@15 T@U) (t0@@18 T@U) (t1@@12 T@U) ) (! (= ($Is HandleTypeType f@@15 (Tclass._System.___hFunc1 t0@@18 t1@@12)) (forall ((h@@9 T@U) (bx0@@10 T@U) ) (!  (=> (and (and ($IsGoodHeap h@@9) ($IsBox bx0@@10 t0@@18)) (Requires1 t0@@18 t1@@12 h@@9 f@@15 bx0@@10)) ($IsBox (Apply1 t0@@18 t1@@12 h@@9 f@@15 bx0@@10) t1@@12))
 :pattern ( (Apply1 t0@@18 t1@@12 h@@9 f@@15 bx0@@10))
)))
 :pattern ( ($Is HandleTypeType f@@15 (Tclass._System.___hFunc1 t0@@18 t1@@12)))
)))
(assert (forall ((f@@16 T@U) (t0@@19 T@U) (t1@@13 T@U) (t2@@2 T@U) (h@@10 T@U) ) (!  (=> (and ($IsGoodHeap h@@10) ($IsAlloc HandleTypeType f@@16 (Tclass._System.___hFunc2 t0@@19 t1@@13 t2@@2) h@@10)) (forall ((bx0@@11 T@U) (bx1@@2 T@U) ) (!  (=> (and (and ($IsAllocBox bx0@@11 t0@@19 h@@10) ($IsAllocBox bx1@@2 t1@@13 h@@10)) (Requires2 t0@@19 t1@@13 t2@@2 h@@10 f@@16 bx0@@11 bx1@@2)) ($IsAllocBox (Apply2 t0@@19 t1@@13 t2@@2 h@@10 f@@16 bx0@@11 bx1@@2) t2@@2 h@@10))
 :pattern ( (Apply2 t0@@19 t1@@13 t2@@2 h@@10 f@@16 bx0@@11 bx1@@2))
)))
 :pattern ( ($IsAlloc HandleTypeType f@@16 (Tclass._System.___hFunc2 t0@@19 t1@@13 t2@@2) h@@10))
)))
(assert (forall ((t0@@20 T@U) (h0@@5 T@U) (h1@@5 T@U) (f@@17 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@5 h1@@5) (and ($IsGoodHeap h0@@5) ($IsGoodHeap h1@@5))) ($Is HandleTypeType f@@17 (Tclass._System.___hFunc0 t0@@20))) (forall ((o@@7 T@U) (fld@@5 T@U) )  (=> (and (or (not (= o@@7 null)) (not true)) (|Set#IsMember| (Reads0 t0@@20 h0@@5 f@@17) ($Box refType o@@7))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@5 o@@7) fld@@5) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@5 o@@7) fld@@5))))) (= (Requires0 t0@@20 h0@@5 f@@17) (Requires0 t0@@20 h1@@5 f@@17)))
 :pattern ( ($HeapSucc h0@@5 h1@@5) (Requires0 t0@@20 h1@@5 f@@17))
)))
(assert (forall ((t0@@21 T@U) (h0@@6 T@U) (h1@@6 T@U) (f@@18 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@6 h1@@6) (and ($IsGoodHeap h0@@6) ($IsGoodHeap h1@@6))) ($Is HandleTypeType f@@18 (Tclass._System.___hFunc0 t0@@21))) (forall ((o@@8 T@U) (fld@@6 T@U) )  (=> (and (or (not (= o@@8 null)) (not true)) (|Set#IsMember| (Reads0 t0@@21 h1@@6 f@@18) ($Box refType o@@8))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@6 o@@8) fld@@6) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@6 o@@8) fld@@6))))) (= (Requires0 t0@@21 h0@@6 f@@18) (Requires0 t0@@21 h1@@6 f@@18)))
 :pattern ( ($HeapSucc h0@@6 h1@@6) (Requires0 t0@@21 h1@@6 f@@18))
)))
(assert (forall ((bx@@8 T@U) ) (!  (=> ($IsBox bx@@8 TBool) (and (= ($Box boolType ($Unbox boolType bx@@8)) bx@@8) ($Is boolType ($Unbox boolType bx@@8) TBool)))
 :pattern ( ($IsBox bx@@8 TBool))
)))
(assert (forall ((v@@2 T@U) (t@@2 T@U) (T@@3 T@T) ) (! (= ($IsBox ($Box T@@3 v@@2) t@@2) ($Is T@@3 v@@2 t@@2))
 :pattern ( ($IsBox ($Box T@@3 v@@2) t@@2))
)))
(assert (forall ((_module._default.P$A@@6 T@U) (_module._default.P$B@@6 T@U) ($heap@@8 T@U) (|$fh$0x#0@@8| T@U) (|$fh$0x#1@@1| T@U) ) (! (= (Apply2 (Tclass._System.___hFunc1 _module._default.P$A@@6 _module._default.P$B@@6) _module._default.P$A@@6 _module._default.P$B@@6 $heap@@8 (|_module.__default.P#Handle| _module._default.P$A@@6 _module._default.P$B@@6) |$fh$0x#0@@8| |$fh$0x#1@@1|) (_module.__default.P _module._default.P$A@@6 _module._default.P$B@@6 $heap@@8 ($Unbox HandleTypeType |$fh$0x#0@@8|) |$fh$0x#1@@1|))
 :pattern ( (Apply2 (Tclass._System.___hFunc1 _module._default.P$A@@6 _module._default.P$B@@6) _module._default.P$A@@6 _module._default.P$B@@6 $heap@@8 (|_module.__default.P#Handle| _module._default.P$A@@6 _module._default.P$B@@6) |$fh$0x#0@@8| |$fh$0x#1@@1|))
)))
(assert (forall ((v@@3 T@U) (t0@@22 T@U) (h@@11 T@U) ) (! (= ($IsAlloc SetType v@@3 (TSet t0@@22) h@@11) (forall ((bx@@9 T@U) ) (!  (=> (|Set#IsMember| v@@3 bx@@9) ($IsAllocBox bx@@9 t0@@22 h@@11))
 :pattern ( (|Set#IsMember| v@@3 bx@@9))
)))
 :pattern ( ($IsAlloc SetType v@@3 (TSet t0@@22) h@@11))
)))
(assert (forall ((|#$T0@@11| T@U) (|#$R@@12| T@U) ) (! (= (Tclass._System.___hFunc1_0 (Tclass._System.___hFunc1 |#$T0@@11| |#$R@@12|)) |#$T0@@11|)
 :pattern ( (Tclass._System.___hFunc1 |#$T0@@11| |#$R@@12|))
)))
(assert (forall ((|#$T0@@12| T@U) (|#$R@@13| T@U) ) (! (= (Tclass._System.___hFunc1_1 (Tclass._System.___hFunc1 |#$T0@@12| |#$R@@13|)) |#$R@@13|)
 :pattern ( (Tclass._System.___hFunc1 |#$T0@@12| |#$R@@13|))
)))
(assert (forall (($o@@2 T@U) ) (! ($Is refType $o@@2 Tclass._System.object?)
 :pattern ( ($Is refType $o@@2 Tclass._System.object?))
)))
(assert (forall ((t@@3 T@U) ) (! (= (Inv0_TSet (TSet t@@3)) t@@3)
 :pattern ( (TSet t@@3))
)))
(assert (forall ((t@@4 T@U) ) (! (= (Tag (TSet t@@4)) TagSet)
 :pattern ( (TSet t@@4))
)))
(assert (forall ((|#$R@@14| T@U) ) (! (= (Tclass._System.___hFunc0_0 (Tclass._System.___hFunc0 |#$R@@14|)) |#$R@@14|)
 :pattern ( (Tclass._System.___hFunc0 |#$R@@14|))
)))
(assert (forall ((x@@4 T@U) (T@@4 T@T) ) (! (= ($Unbox T@@4 ($Box T@@4 x@@4)) x@@4)
 :pattern ( ($Box T@@4 x@@4))
)))
(assert (forall ((t0@@23 T@U) (t1@@14 T@U) (t2@@3 T@U) (heap@@5 T@U) (f@@19 T@U) (bx0@@12 T@U) (bx1@@3 T@U) ) (!  (=> (and (and ($IsGoodHeap heap@@5) (and (and ($IsBox bx0@@12 t0@@23) ($IsBox bx1@@3 t1@@14)) ($Is HandleTypeType f@@19 (Tclass._System.___hFunc2 t0@@23 t1@@14 t2@@3)))) (|Set#Equal| (Reads2 t0@@23 t1@@14 t2@@3 $OneHeap f@@19 bx0@@12 bx1@@3) |Set#Empty|)) (= (Requires2 t0@@23 t1@@14 t2@@3 $OneHeap f@@19 bx0@@12 bx1@@3) (Requires2 t0@@23 t1@@14 t2@@3 heap@@5 f@@19 bx0@@12 bx1@@3)))
 :pattern ( (Requires2 t0@@23 t1@@14 t2@@3 $OneHeap f@@19 bx0@@12 bx1@@3) ($IsGoodHeap heap@@5))
 :pattern ( (Requires2 t0@@23 t1@@14 t2@@3 heap@@5 f@@19 bx0@@12 bx1@@3))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((_module._default.QQ$U@@2 T@U) (_module._default.QQ$V@@2 T@U) ($Heap@@5 T@U) (|f#0@@7| T@U) (|x#0@@7| T@U) ) (!  (=> (or (|_module.__default.QQ#canCall| _module._default.QQ$U@@2 _module._default.QQ$V@@2 $Heap@@5 |f#0@@7| |x#0@@7|) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $Heap@@5) ($Is HandleTypeType |f#0@@7| (Tclass._System.___hFunc1 _module._default.QQ$U@@2 _module._default.QQ$V@@2))) ($IsBox |x#0@@7| _module._default.QQ$U@@2)) (U_2_bool ($Unbox boolType (Apply1 _module._default.QQ$U@@2 TBool $Heap@@5 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@2 TBool) $Heap@@5 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#156| _module._default.QQ$U@@2 _module._default.QQ$V@@2 (Tclass._System.___hFunc1 _module._default.QQ$U@@2 _module._default.QQ$V@@2) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@7|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@2 $Heap@@5 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@7|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))))))) (= (_module.__default.QQ _module._default.QQ$U@@2 _module._default.QQ$V@@2 $Heap@@5 |f#0@@7| |x#0@@7|) (Apply2 (Tclass._System.___hFunc1 _module._default.QQ$U@@2 _module._default.QQ$V@@2) _module._default.QQ$U@@2 _module._default.QQ$V@@2 $Heap@@5 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc2 (Tclass._System.___hFunc1 _module._default.QQ$U@@2 _module._default.QQ$V@@2) _module._default.QQ$U@@2 _module._default.QQ$V@@2) $Heap@@5 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType (|_module.__default.P#Handle| _module._default.QQ$U@@2 _module._default.QQ$V@@2))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))) ($Box HandleTypeType ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@2 _module._default.QQ$V@@2) $Heap@@5 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@7|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))) (Apply0 _module._default.QQ$U@@2 $Heap@@5 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@7|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))))
 :pattern ( (_module.__default.QQ _module._default.QQ$U@@2 _module._default.QQ$V@@2 $Heap@@5 |f#0@@7| |x#0@@7|) ($IsGoodHeap $Heap@@5))
))))
(assert (forall ((t0@@24 T@U) (h0@@7 T@U) (h1@@7 T@U) (f@@20 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@7 h1@@7) (and ($IsGoodHeap h0@@7) ($IsGoodHeap h1@@7))) ($Is HandleTypeType f@@20 (Tclass._System.___hFunc0 t0@@24))) (forall ((o@@9 T@U) (fld@@7 T@U) )  (=> (and (or (not (= o@@9 null)) (not true)) (|Set#IsMember| (Reads0 t0@@24 h0@@7 f@@20) ($Box refType o@@9))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@7 o@@9) fld@@7) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@7 o@@9) fld@@7))))) (= (Reads0 t0@@24 h0@@7 f@@20) (Reads0 t0@@24 h1@@7 f@@20)))
 :pattern ( ($HeapSucc h0@@7 h1@@7) (Reads0 t0@@24 h1@@7 f@@20))
)))
(assert (forall ((t0@@25 T@U) (h0@@8 T@U) (h1@@8 T@U) (f@@21 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@8 h1@@8) (and ($IsGoodHeap h0@@8) ($IsGoodHeap h1@@8))) ($Is HandleTypeType f@@21 (Tclass._System.___hFunc0 t0@@25))) (forall ((o@@10 T@U) (fld@@8 T@U) )  (=> (and (or (not (= o@@10 null)) (not true)) (|Set#IsMember| (Reads0 t0@@25 h1@@8 f@@21) ($Box refType o@@10))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@8 o@@10) fld@@8) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@8 o@@10) fld@@8))))) (= (Reads0 t0@@25 h0@@8 f@@21) (Reads0 t0@@25 h1@@8 f@@21)))
 :pattern ( ($HeapSucc h0@@8 h1@@8) (Reads0 t0@@25 h1@@8 f@@21))
)))
(assert (forall ((t0@@26 T@U) (h0@@9 T@U) (h1@@9 T@U) (f@@22 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@9 h1@@9) (and ($IsGoodHeap h0@@9) ($IsGoodHeap h1@@9))) ($Is HandleTypeType f@@22 (Tclass._System.___hFunc0 t0@@26))) (forall ((o@@11 T@U) (fld@@9 T@U) )  (=> (and (or (not (= o@@11 null)) (not true)) (|Set#IsMember| (Reads0 t0@@26 h0@@9 f@@22) ($Box refType o@@11))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@9 o@@11) fld@@9) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@9 o@@11) fld@@9))))) (= (Apply0 t0@@26 h0@@9 f@@22) (Apply0 t0@@26 h1@@9 f@@22)))
 :pattern ( ($HeapSucc h0@@9 h1@@9) (Apply0 t0@@26 h1@@9 f@@22))
)))
(assert (forall ((t0@@27 T@U) (h0@@10 T@U) (h1@@10 T@U) (f@@23 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@10 h1@@10) (and ($IsGoodHeap h0@@10) ($IsGoodHeap h1@@10))) ($Is HandleTypeType f@@23 (Tclass._System.___hFunc0 t0@@27))) (forall ((o@@12 T@U) (fld@@10 T@U) )  (=> (and (or (not (= o@@12 null)) (not true)) (|Set#IsMember| (Reads0 t0@@27 h1@@10 f@@23) ($Box refType o@@12))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@10 o@@12) fld@@10) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@10 o@@12) fld@@10))))) (= (Apply0 t0@@27 h0@@10 f@@23) (Apply0 t0@@27 h1@@10 f@@23)))
 :pattern ( ($HeapSucc h0@@10 h1@@10) (Apply0 t0@@27 h1@@10 f@@23))
)))
(assert (forall ((f@@24 T@U) (t0@@28 T@U) (t1@@15 T@U) (t2@@4 T@U) (u0@@1 T@U) (u1@@1 T@U) (u2 T@U) ) (!  (=> (and (and (and ($Is HandleTypeType f@@24 (Tclass._System.___hFunc2 t0@@28 t1@@15 t2@@4)) (forall ((bx@@10 T@U) ) (!  (=> ($IsBox bx@@10 u0@@1) ($IsBox bx@@10 t0@@28))
 :pattern ( ($IsBox bx@@10 u0@@1))
 :pattern ( ($IsBox bx@@10 t0@@28))
))) (forall ((bx@@11 T@U) ) (!  (=> ($IsBox bx@@11 u1@@1) ($IsBox bx@@11 t1@@15))
 :pattern ( ($IsBox bx@@11 u1@@1))
 :pattern ( ($IsBox bx@@11 t1@@15))
))) (forall ((bx@@12 T@U) ) (!  (=> ($IsBox bx@@12 t2@@4) ($IsBox bx@@12 u2))
 :pattern ( ($IsBox bx@@12 t2@@4))
 :pattern ( ($IsBox bx@@12 u2))
))) ($Is HandleTypeType f@@24 (Tclass._System.___hFunc2 u0@@1 u1@@1 u2)))
 :pattern ( ($Is HandleTypeType f@@24 (Tclass._System.___hFunc2 t0@@28 t1@@15 t2@@4)) ($Is HandleTypeType f@@24 (Tclass._System.___hFunc2 u0@@1 u1@@1 u2)))
)))
(assert (forall ((f@@25 T@U) (ly@@0 T@U) (A@@0 T@T) ) (! (= (AtLayer A@@0 f@@25 ($LS ly@@0)) (AtLayer A@@0 f@@25 ly@@0))
 :pattern ( (AtLayer A@@0 f@@25 ($LS ly@@0)))
)))
(assert (forall ((f@@26 T@U) (t0@@29 T@U) (t1@@16 T@U) (h@@12 T@U) ) (!  (=> ($IsGoodHeap h@@12) (= ($IsAlloc HandleTypeType f@@26 (Tclass._System.___hFunc1 t0@@29 t1@@16) h@@12) (forall ((bx0@@13 T@U) ) (!  (=> (and (and ($IsBox bx0@@13 t0@@29) ($IsAllocBox bx0@@13 t0@@29 h@@12)) (Requires1 t0@@29 t1@@16 h@@12 f@@26 bx0@@13)) (forall ((r@@3 T@U) ) (!  (=> (and (or (not (= r@@3 null)) (not true)) (|Set#IsMember| (Reads1 t0@@29 t1@@16 h@@12 f@@26 bx0@@13) ($Box refType r@@3))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@12 r@@3) alloc))))
 :pattern ( (|Set#IsMember| (Reads1 t0@@29 t1@@16 h@@12 f@@26 bx0@@13) ($Box refType r@@3)))
)))
 :pattern ( (Apply1 t0@@29 t1@@16 h@@12 f@@26 bx0@@13))
 :pattern ( (Reads1 t0@@29 t1@@16 h@@12 f@@26 bx0@@13))
))))
 :pattern ( ($IsAlloc HandleTypeType f@@26 (Tclass._System.___hFunc1 t0@@29 t1@@16) h@@12))
)))
(assert (forall ((|#$T0@@13| T@U) (|#$R@@15| T@U) (bx@@13 T@U) ) (!  (=> ($IsBox bx@@13 (Tclass._System.___hFunc1 |#$T0@@13| |#$R@@15|)) (and (= ($Box HandleTypeType ($Unbox HandleTypeType bx@@13)) bx@@13) ($Is HandleTypeType ($Unbox HandleTypeType bx@@13) (Tclass._System.___hFunc1 |#$T0@@13| |#$R@@15|))))
 :pattern ( ($IsBox bx@@13 (Tclass._System.___hFunc1 |#$T0@@13| |#$R@@15|)))
)))
(assert  (and (forall ((t0@@30 T@T) (t1@@17 T@T) (t2@@5 T@T) (val@@1 T@U) (m@@1 T@U) (x0@@1 T@U) (x1 T@U) ) (! (= (MapType1Select t0@@30 t1@@17 t2@@5 (MapType1Store t0@@30 t1@@17 t2@@5 m@@1 x0@@1 x1 val@@1) x0@@1 x1) val@@1)
 :weight 0
)) (and (forall ((u0@@2 T@T) (u1@@2 T@T) (u2@@0 T@T) (val@@2 T@U) (m@@2 T@U) (x0@@2 T@U) (x1@@0 T@U) (y0@@0 T@U) (y1 T@U) ) (!  (or (= x0@@2 y0@@0) (= (MapType1Select u0@@2 u1@@2 u2@@0 (MapType1Store u0@@2 u1@@2 u2@@0 m@@2 x0@@2 x1@@0 val@@2) y0@@0 y1) (MapType1Select u0@@2 u1@@2 u2@@0 m@@2 y0@@0 y1)))
 :weight 0
)) (forall ((u0@@3 T@T) (u1@@3 T@T) (u2@@1 T@T) (val@@3 T@U) (m@@3 T@U) (x0@@3 T@U) (x1@@1 T@U) (y0@@1 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType1Select u0@@3 u1@@3 u2@@1 (MapType1Store u0@@3 u1@@3 u2@@1 m@@3 x0@@3 x1@@1 val@@3) y0@@1 y1@@0) (MapType1Select u0@@3 u1@@3 u2@@1 m@@3 y0@@1 y1@@0)))
 :weight 0
)))))
(assert (forall ((|l#0@@6| T@U) (|l#1@@1| T@U) (|l#2@@1| T@U) (|l#3@@1| Bool) ($o@@3 T@U) ($f@@1 T@U) ) (! (= (U_2_bool (MapType1Select refType FieldType boolType (|lambda#30| |l#0@@6| |l#1@@1| |l#2@@1| |l#3@@1|) $o@@3 $f@@1))  (=> (and (or (not (= $o@@3 |l#0@@6|)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) |l#1@@1| $o@@3) |l#2@@1|)))) |l#3@@1|))
 :pattern ( (MapType1Select refType FieldType boolType (|lambda#30| |l#0@@6| |l#1@@1| |l#2@@1| |l#3@@1|) $o@@3 $f@@1))
)))
(assert (forall ((|#$T0@@14| T@U) (|#$R@@16| T@U) ) (!  (and (= (Tag (Tclass._System.___hFunc1 |#$T0@@14| |#$R@@16|)) Tagclass._System.___hFunc1) (= (TagFamily (Tclass._System.___hFunc1 |#$T0@@14| |#$R@@16|)) |tytagFamily$_#Func1|))
 :pattern ( (Tclass._System.___hFunc1 |#$T0@@14| |#$R@@16|))
)))
(assert (forall ((t0@@31 T@U) (t1@@18 T@U) (heap@@6 T@U) (f@@27 T@U) (bx0@@14 T@U) ) (!  (=> (and (and ($IsGoodHeap heap@@6) (and ($IsBox bx0@@14 t0@@31) ($Is HandleTypeType f@@27 (Tclass._System.___hFunc1 t0@@31 t1@@18)))) (|Set#Equal| (Reads1 t0@@31 t1@@18 $OneHeap f@@27 bx0@@14) |Set#Empty|)) (= (Requires1 t0@@31 t1@@18 $OneHeap f@@27 bx0@@14) (Requires1 t0@@31 t1@@18 heap@@6 f@@27 bx0@@14)))
 :pattern ( (Requires1 t0@@31 t1@@18 $OneHeap f@@27 bx0@@14) ($IsGoodHeap heap@@6))
 :pattern ( (Requires1 t0@@31 t1@@18 heap@@6 f@@27 bx0@@14))
)))
(assert (forall ((|#$T0@@15| T@U) (|#$R@@17| T@U) ($self@@6 T@U) ($heap@@9 T@U) (|$fh$0x#0@@9| T@U) ) (! (= (Apply1 |#$T0@@15| (TSet Tclass._System.object?) $heap@@9 (|Reads1#Handle| |#$T0@@15| |#$R@@17| $self@@6) |$fh$0x#0@@9|) ($Box SetType (Reads1 |#$T0@@15| |#$R@@17| $heap@@9 $self@@6 |$fh$0x#0@@9|)))
 :pattern ( (Apply1 |#$T0@@15| (TSet Tclass._System.object?) $heap@@9 (|Reads1#Handle| |#$T0@@15| |#$R@@17| $self@@6) |$fh$0x#0@@9|))
)))
(assert (forall ((f@@28 T@U) (t0@@32 T@U) ) (! (= ($Is HandleTypeType f@@28 (Tclass._System.___hFunc0 t0@@32)) (forall ((h@@13 T@U) ) (!  (=> (and ($IsGoodHeap h@@13) (Requires0 t0@@32 h@@13 f@@28)) ($IsBox (Apply0 t0@@32 h@@13 f@@28) t0@@32))
 :pattern ( (Apply0 t0@@32 h@@13 f@@28))
)))
 :pattern ( ($Is HandleTypeType f@@28 (Tclass._System.___hFunc0 t0@@32)))
)))
(assert (forall ((t0@@33 T@U) (t1@@19 T@U) (t2@@6 T@U) (h0@@11 T@U) (h1@@11 T@U) (f@@29 T@U) (bx0@@15 T@U) (bx1@@4 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@11 h1@@11) (and ($IsGoodHeap h0@@11) ($IsGoodHeap h1@@11))) (and (and ($IsBox bx0@@15 t0@@33) ($IsBox bx1@@4 t1@@19)) ($Is HandleTypeType f@@29 (Tclass._System.___hFunc2 t0@@33 t1@@19 t2@@6)))) (forall ((o@@13 T@U) (fld@@11 T@U) )  (=> (and (or (not (= o@@13 null)) (not true)) (|Set#IsMember| (Reads2 t0@@33 t1@@19 t2@@6 h0@@11 f@@29 bx0@@15 bx1@@4) ($Box refType o@@13))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@11 o@@13) fld@@11) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@11 o@@13) fld@@11))))) (= (Requires2 t0@@33 t1@@19 t2@@6 h0@@11 f@@29 bx0@@15 bx1@@4) (Requires2 t0@@33 t1@@19 t2@@6 h1@@11 f@@29 bx0@@15 bx1@@4)))
 :pattern ( ($HeapSucc h0@@11 h1@@11) (Requires2 t0@@33 t1@@19 t2@@6 h1@@11 f@@29 bx0@@15 bx1@@4))
)))
(assert (forall ((t0@@34 T@U) (t1@@20 T@U) (t2@@7 T@U) (h0@@12 T@U) (h1@@12 T@U) (f@@30 T@U) (bx0@@16 T@U) (bx1@@5 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@12 h1@@12) (and ($IsGoodHeap h0@@12) ($IsGoodHeap h1@@12))) (and (and ($IsBox bx0@@16 t0@@34) ($IsBox bx1@@5 t1@@20)) ($Is HandleTypeType f@@30 (Tclass._System.___hFunc2 t0@@34 t1@@20 t2@@7)))) (forall ((o@@14 T@U) (fld@@12 T@U) )  (=> (and (or (not (= o@@14 null)) (not true)) (|Set#IsMember| (Reads2 t0@@34 t1@@20 t2@@7 h1@@12 f@@30 bx0@@16 bx1@@5) ($Box refType o@@14))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@12 o@@14) fld@@12) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@12 o@@14) fld@@12))))) (= (Requires2 t0@@34 t1@@20 t2@@7 h0@@12 f@@30 bx0@@16 bx1@@5) (Requires2 t0@@34 t1@@20 t2@@7 h1@@12 f@@30 bx0@@16 bx1@@5)))
 :pattern ( ($HeapSucc h0@@12 h1@@12) (Requires2 t0@@34 t1@@20 t2@@7 h1@@12 f@@30 bx0@@16 bx1@@5))
)))
(assert (forall ((bx@@14 T@U) (t@@5 T@U) ) (!  (=> ($IsBox bx@@14 (TSet t@@5)) (and (= ($Box SetType ($Unbox SetType bx@@14)) bx@@14) ($Is SetType ($Unbox SetType bx@@14) (TSet t@@5))))
 :pattern ( ($IsBox bx@@14 (TSet t@@5)))
)))
(assert (forall ((|#$R@@18| T@U) (bx@@15 T@U) ) (!  (=> ($IsBox bx@@15 (Tclass._System.___hFunc0 |#$R@@18|)) (and (= ($Box HandleTypeType ($Unbox HandleTypeType bx@@15)) bx@@15) ($Is HandleTypeType ($Unbox HandleTypeType bx@@15) (Tclass._System.___hFunc0 |#$R@@18|))))
 :pattern ( ($IsBox bx@@15 (Tclass._System.___hFunc0 |#$R@@18|)))
)))
(assert (= (Tag Tclass._System.object?) Tagclass._System.object?))
(assert (= (TagFamily Tclass._System.object?) tytagFamily$object))
(assert (= (Tag Tclass._System.object) Tagclass._System.object))
(assert (= (TagFamily Tclass._System.object) tytagFamily$object))
(assert (forall ((s@@0 T@U) ) (! ($Is SetType (SetRef_to_SetBox s@@0) (TSet Tclass._System.object?))
 :pattern ( (SetRef_to_SetBox s@@0))
)))
(assert (forall ((f@@31 T@U) (t0@@35 T@U) (h@@14 T@U) ) (!  (=> (and ($IsGoodHeap h@@14) ($IsAlloc HandleTypeType f@@31 (Tclass._System.___hFunc0 t0@@35) h@@14)) (=> (Requires0 t0@@35 h@@14 f@@31) ($IsAllocBox (Apply0 t0@@35 h@@14 f@@31) t0@@35 h@@14)))
 :pattern ( ($IsAlloc HandleTypeType f@@31 (Tclass._System.___hFunc0 t0@@35) h@@14))
)))
(assert (forall ((a@@1 T@U) (b@@1 T@U) ) (! (= (|Set#Equal| a@@1 b@@1) (forall ((o@@15 T@U) ) (! (= (|Set#IsMember| a@@1 o@@15) (|Set#IsMember| b@@1 o@@15))
 :pattern ( (|Set#IsMember| a@@1 o@@15))
 :pattern ( (|Set#IsMember| b@@1 o@@15))
)))
 :pattern ( (|Set#Equal| a@@1 b@@1))
)))
(assert (forall ((f@@32 T@U) (t0@@36 T@U) (u0@@4 T@U) ) (!  (=> (and ($Is HandleTypeType f@@32 (Tclass._System.___hFunc0 t0@@36)) (forall ((bx@@16 T@U) ) (!  (=> ($IsBox bx@@16 t0@@36) ($IsBox bx@@16 u0@@4))
 :pattern ( ($IsBox bx@@16 t0@@36))
 :pattern ( ($IsBox bx@@16 u0@@4))
))) ($Is HandleTypeType f@@32 (Tclass._System.___hFunc0 u0@@4)))
 :pattern ( ($Is HandleTypeType f@@32 (Tclass._System.___hFunc0 t0@@36)) ($Is HandleTypeType f@@32 (Tclass._System.___hFunc0 u0@@4)))
)))
(assert (forall ((t0@@37 T@U) (t1@@21 T@U) (t2@@8 T@U) (h0@@13 T@U) (h1@@13 T@U) (f@@33 T@U) (bx0@@17 T@U) (bx1@@6 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@13 h1@@13) (and ($IsGoodHeap h0@@13) ($IsGoodHeap h1@@13))) (and (and ($IsBox bx0@@17 t0@@37) ($IsBox bx1@@6 t1@@21)) ($Is HandleTypeType f@@33 (Tclass._System.___hFunc2 t0@@37 t1@@21 t2@@8)))) (forall ((o@@16 T@U) (fld@@13 T@U) )  (=> (and (or (not (= o@@16 null)) (not true)) (|Set#IsMember| (Reads2 t0@@37 t1@@21 t2@@8 h0@@13 f@@33 bx0@@17 bx1@@6) ($Box refType o@@16))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@13 o@@16) fld@@13) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@13 o@@16) fld@@13))))) (= (Reads2 t0@@37 t1@@21 t2@@8 h0@@13 f@@33 bx0@@17 bx1@@6) (Reads2 t0@@37 t1@@21 t2@@8 h1@@13 f@@33 bx0@@17 bx1@@6)))
 :pattern ( ($HeapSucc h0@@13 h1@@13) (Reads2 t0@@37 t1@@21 t2@@8 h1@@13 f@@33 bx0@@17 bx1@@6))
)))
(assert (forall ((t0@@38 T@U) (t1@@22 T@U) (t2@@9 T@U) (h0@@14 T@U) (h1@@14 T@U) (f@@34 T@U) (bx0@@18 T@U) (bx1@@7 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@14 h1@@14) (and ($IsGoodHeap h0@@14) ($IsGoodHeap h1@@14))) (and (and ($IsBox bx0@@18 t0@@38) ($IsBox bx1@@7 t1@@22)) ($Is HandleTypeType f@@34 (Tclass._System.___hFunc2 t0@@38 t1@@22 t2@@9)))) (forall ((o@@17 T@U) (fld@@14 T@U) )  (=> (and (or (not (= o@@17 null)) (not true)) (|Set#IsMember| (Reads2 t0@@38 t1@@22 t2@@9 h1@@14 f@@34 bx0@@18 bx1@@7) ($Box refType o@@17))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@14 o@@17) fld@@14) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@14 o@@17) fld@@14))))) (= (Reads2 t0@@38 t1@@22 t2@@9 h0@@14 f@@34 bx0@@18 bx1@@7) (Reads2 t0@@38 t1@@22 t2@@9 h1@@14 f@@34 bx0@@18 bx1@@7)))
 :pattern ( ($HeapSucc h0@@14 h1@@14) (Reads2 t0@@38 t1@@22 t2@@9 h1@@14 f@@34 bx0@@18 bx1@@7))
)))
(assert (forall ((t0@@39 T@U) (t1@@23 T@U) (t2@@10 T@U) (h0@@15 T@U) (h1@@15 T@U) (f@@35 T@U) (bx0@@19 T@U) (bx1@@8 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@15 h1@@15) (and ($IsGoodHeap h0@@15) ($IsGoodHeap h1@@15))) (and (and ($IsBox bx0@@19 t0@@39) ($IsBox bx1@@8 t1@@23)) ($Is HandleTypeType f@@35 (Tclass._System.___hFunc2 t0@@39 t1@@23 t2@@10)))) (forall ((o@@18 T@U) (fld@@15 T@U) )  (=> (and (or (not (= o@@18 null)) (not true)) (|Set#IsMember| (Reads2 t0@@39 t1@@23 t2@@10 h0@@15 f@@35 bx0@@19 bx1@@8) ($Box refType o@@18))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@15 o@@18) fld@@15) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@15 o@@18) fld@@15))))) (= (Apply2 t0@@39 t1@@23 t2@@10 h0@@15 f@@35 bx0@@19 bx1@@8) (Apply2 t0@@39 t1@@23 t2@@10 h1@@15 f@@35 bx0@@19 bx1@@8)))
 :pattern ( ($HeapSucc h0@@15 h1@@15) (Apply2 t0@@39 t1@@23 t2@@10 h1@@15 f@@35 bx0@@19 bx1@@8))
)))
(assert (forall ((t0@@40 T@U) (t1@@24 T@U) (t2@@11 T@U) (h0@@16 T@U) (h1@@16 T@U) (f@@36 T@U) (bx0@@20 T@U) (bx1@@9 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@16 h1@@16) (and ($IsGoodHeap h0@@16) ($IsGoodHeap h1@@16))) (and (and ($IsBox bx0@@20 t0@@40) ($IsBox bx1@@9 t1@@24)) ($Is HandleTypeType f@@36 (Tclass._System.___hFunc2 t0@@40 t1@@24 t2@@11)))) (forall ((o@@19 T@U) (fld@@16 T@U) )  (=> (and (or (not (= o@@19 null)) (not true)) (|Set#IsMember| (Reads2 t0@@40 t1@@24 t2@@11 h1@@16 f@@36 bx0@@20 bx1@@9) ($Box refType o@@19))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h0@@16 o@@19) fld@@16) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h1@@16 o@@19) fld@@16))))) (= (Apply2 t0@@40 t1@@24 t2@@11 h0@@16 f@@36 bx0@@20 bx1@@9) (Apply2 t0@@40 t1@@24 t2@@11 h1@@16 f@@36 bx0@@20 bx1@@9)))
 :pattern ( ($HeapSucc h0@@16 h1@@16) (Apply2 t0@@40 t1@@24 t2@@11 h1@@16 f@@36 bx0@@20 bx1@@9))
)))
(assert (forall ((|l#0@@7| T@U) (|l#1@@2| T@U) (|l#2@@2| T@U) (|l#3@@2| T@U) (|l#4| T@U) (|l#5| T@U) (|$l#0#ly#0@@0| T@U) ) (! (= (MapType0Select LayerTypeType HandleTypeType (|lambda#141| |l#0@@7| |l#1@@2| |l#2@@2| |l#3@@2| |l#4| |l#5|) |$l#0#ly#0@@0|) (Handle0 (|lambda#137| |l#0@@7| |l#1@@2| |l#2@@2| (Lit HandleTypeType (AtLayer HandleTypeType |l#3@@2| |$l#0#ly#0@@0|))) |l#4| |l#5|))
 :pattern ( (MapType0Select LayerTypeType HandleTypeType (|lambda#141| |l#0@@7| |l#1@@2| |l#2@@2| |l#3@@2| |l#4| |l#5|) |$l#0#ly#0@@0|))
)))
(assert (forall ((|l#0@@8| T@U) (|l#1@@3| T@U) (|l#2@@3| T@U) (|l#3@@3| T@U) (|l#4@@0| T@U) (|l#5@@0| T@U) (|$l#3#ly#0| T@U) ) (! (= (MapType0Select LayerTypeType HandleTypeType (|lambda#156| |l#0@@8| |l#1@@3| |l#2@@3| |l#3@@3| |l#4@@0| |l#5@@0|) |$l#3#ly#0|) (Handle0 (|lambda#152| |l#0@@8| |l#1@@3| |l#2@@3| (Lit HandleTypeType (AtLayer HandleTypeType |l#3@@3| |$l#3#ly#0|))) |l#4@@0| |l#5@@0|))
 :pattern ( (MapType0Select LayerTypeType HandleTypeType (|lambda#156| |l#0@@8| |l#1@@3| |l#2@@3| |l#3@@3| |l#4@@0| |l#5@@0|) |$l#3#ly#0|))
)))
(assert (forall ((x@@5 T@U) (T@@5 T@T) ) (! (= ($Box T@@5 (Lit T@@5 x@@5)) (Lit BoxType ($Box T@@5 x@@5)))
 :pattern ( ($Box T@@5 (Lit T@@5 x@@5)))
)))
(assert (forall (($bx@@1 T@U) (_module._default.P$A@@7 T@U) (_module._default.P$B@@7 T@U) ($heap@@10 T@U) (|$fh$0x#0@@10| T@U) (|$fh$0x#1@@2| T@U) ) (! (= (|Set#IsMember| (Reads2 (Tclass._System.___hFunc1 _module._default.P$A@@7 _module._default.P$B@@7) _module._default.P$A@@7 _module._default.P$B@@7 $heap@@10 (|_module.__default.P#Handle| _module._default.P$A@@7 _module._default.P$B@@7) |$fh$0x#0@@10| |$fh$0x#1@@2|) $bx@@1) (|Set#IsMember| (Reads1 _module._default.P$A@@7 _module._default.P$B@@7 $heap@@10 ($Unbox HandleTypeType |$fh$0x#0@@10|) |$fh$0x#1@@2|) $bx@@1))
 :pattern ( (|Set#IsMember| (Reads2 (Tclass._System.___hFunc1 _module._default.P$A@@7 _module._default.P$B@@7) _module._default.P$A@@7 _module._default.P$B@@7 $heap@@10 (|_module.__default.P#Handle| _module._default.P$A@@7 _module._default.P$B@@7) |$fh$0x#0@@10| |$fh$0x#1@@2|) $bx@@1))
)))
(assert (forall ((t0@@41 T@U) (heap@@7 T@U) (h@@15 T@U) (r@@4 T@U) (rd@@1 T@U) ) (!  (=> (U_2_bool (MapType0Select (MapType0Type refType (MapType0Type FieldType BoxType)) boolType r@@4 heap@@7)) (Requires0 t0@@41 heap@@7 (Handle0 h@@15 r@@4 rd@@1)))
 :pattern ( (Requires0 t0@@41 heap@@7 (Handle0 h@@15 r@@4 rd@@1)))
)))
(assert (forall ((|l#0@@9| T@U) (|l#1@@4| T@U) (|l#2@@4| T@U) (|l#3@@4| T@U) ($o@@4 T@U) ($f@@2 T@U) ) (! (= (U_2_bool (MapType1Select refType FieldType boolType (|lambda#130| |l#0@@9| |l#1@@4| |l#2@@4| |l#3@@4|) $o@@4 $f@@2))  (=> (and (or (not (= $o@@4 |l#0@@9|)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) |l#1@@4| $o@@4) |l#2@@4|)))) (|Set#IsMember| |l#3@@4| ($Box refType $o@@4))))
 :pattern ( (MapType1Select refType FieldType boolType (|lambda#130| |l#0@@9| |l#1@@4| |l#2@@4| |l#3@@4|) $o@@4 $f@@2))
)))
(assert (forall ((h@@16 T@U) (v@@4 T@U) ) (! ($IsAlloc boolType v@@4 TBool h@@16)
 :pattern ( ($IsAlloc boolType v@@4 TBool h@@16))
)))
(assert (forall ((v@@5 T@U) ) (! ($Is boolType v@@5 TBool)
 :pattern ( ($Is boolType v@@5 TBool))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun |$lambdaHeap#1@0| () T@U)
(declare-fun |$lambdaHeap#0@0| () T@U)
(declare-fun |$_Frame#l0@0| () T@U)
(declare-fun $Heap@@6 () T@U)
(declare-fun |$lambdaHeap#2@0| () T@U)
(declare-fun |$lambdaHeap#4@0| () T@U)
(declare-fun |$lambdaHeap#3@0| () T@U)
(declare-fun |$_Frame#l3@0| () T@U)
(declare-fun |$lambdaHeap#5@0| () T@U)
(declare-fun |$lambdaHeap#7@0| () T@U)
(declare-fun |$lambdaHeap#6@0| () T@U)
(declare-fun |$_Frame#l6@0| () T@U)
(declare-fun |$lambdaHeap#8@0| () T@U)
(declare-fun |$_Frame#l9@0| () T@U)
(declare-fun |$lambdaHeap#9@0| () T@U)
(declare-fun |$lambdaHeap#10@0| () T@U)
(declare-fun |$lambdaHeap#11@0| () T@U)
(declare-fun _module._default.QQ$U@@3 () T@U)
(declare-fun _module._default.QQ$V@@3 () T@U)
(declare-fun |f#0@@8| () T@U)
(declare-fun |x#0@@8| () T@U)
(declare-fun |b$reqreads#2@0| () Bool)
(declare-fun $_ReadsFrame@0 () T@U)
(declare-fun |b$reqreads#1@0| () Bool)
(declare-fun |b$reqreads#0@0| () Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 57) (let ((anon56_Else_correct true))
(let ((anon56_Then_correct true))
(let ((anon55_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#1@0|) (or (= |$lambdaHeap#0@0| |$lambdaHeap#1@0|) ($HeapSucc |$lambdaHeap#0@0| |$lambdaHeap#1@0|))) (and (=> (= (ControlFlow 0 52) 50) anon56_Then_correct) (=> (= (ControlFlow 0 52) 51) anon56_Else_correct)))))
(let ((anon55_Else_correct true))
(let ((anon54_Then_correct  (=> (= |$_Frame#l0@0| (|lambda#30| null |$lambdaHeap#0@0| alloc false)) (and (=> (= (ControlFlow 0 53) (- 0 54)) true) (and (=> (= (ControlFlow 0 53) 52) anon55_Then_correct) (=> (= (ControlFlow 0 53) 49) anon55_Else_correct))))))
(let ((anon54_Else_correct true))
(let ((anon53_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0@0|) (or (= $Heap@@6 |$lambdaHeap#0@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#0@0|))) (and (=> (= (ControlFlow 0 55) 53) anon54_Then_correct) (=> (= (ControlFlow 0 55) 48) anon54_Else_correct)))))
(let ((anon58_Else_correct true))
(let ((anon58_Then_correct true))
(let ((anon57_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#2@0|) (or (= $Heap@@6 |$lambdaHeap#2@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#2@0|))) (and (=> (= (ControlFlow 0 47) 45) anon58_Then_correct) (=> (= (ControlFlow 0 47) 46) anon58_Else_correct)))))
(let ((anon62_Else_correct true))
(let ((anon62_Then_correct true))
(let ((anon61_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#4@0|) (or (= |$lambdaHeap#3@0| |$lambdaHeap#4@0|) ($HeapSucc |$lambdaHeap#3@0| |$lambdaHeap#4@0|))) (and (=> (= (ControlFlow 0 38) 36) anon62_Then_correct) (=> (= (ControlFlow 0 38) 37) anon62_Else_correct)))))
(let ((anon61_Else_correct true))
(let ((anon60_Then_correct  (=> (= |$_Frame#l3@0| (|lambda#30| null |$lambdaHeap#3@0| alloc false)) (and (=> (= (ControlFlow 0 39) (- 0 40)) true) (and (=> (= (ControlFlow 0 39) 38) anon61_Then_correct) (=> (= (ControlFlow 0 39) 35) anon61_Else_correct))))))
(let ((anon60_Else_correct true))
(let ((anon59_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#3@0|) (or (= $Heap@@6 |$lambdaHeap#3@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#3@0|))) (and (=> (= (ControlFlow 0 41) 39) anon60_Then_correct) (=> (= (ControlFlow 0 41) 34) anon60_Else_correct)))))
(let ((anon64_Else_correct true))
(let ((anon64_Then_correct true))
(let ((anon63_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#5@0|) (or (= $Heap@@6 |$lambdaHeap#5@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#5@0|))) (and (=> (= (ControlFlow 0 33) 31) anon64_Then_correct) (=> (= (ControlFlow 0 33) 32) anon64_Else_correct)))))
(let ((anon68_Else_correct true))
(let ((anon68_Then_correct true))
(let ((anon67_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#7@0|) (or (= |$lambdaHeap#6@0| |$lambdaHeap#7@0|) ($HeapSucc |$lambdaHeap#6@0| |$lambdaHeap#7@0|))) (and (=> (= (ControlFlow 0 24) 22) anon68_Then_correct) (=> (= (ControlFlow 0 24) 23) anon68_Else_correct)))))
(let ((anon67_Else_correct true))
(let ((anon66_Then_correct  (=> (= |$_Frame#l6@0| (|lambda#30| null |$lambdaHeap#6@0| alloc false)) (and (=> (= (ControlFlow 0 25) (- 0 26)) true) (and (=> (= (ControlFlow 0 25) 24) anon67_Then_correct) (=> (= (ControlFlow 0 25) 21) anon67_Else_correct))))))
(let ((anon66_Else_correct true))
(let ((anon65_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#6@0|) (or (= $Heap@@6 |$lambdaHeap#6@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#6@0|))) (and (=> (= (ControlFlow 0 27) 25) anon66_Then_correct) (=> (= (ControlFlow 0 27) 20) anon66_Else_correct)))))
(let ((anon70_Else_correct true))
(let ((anon70_Then_correct true))
(let ((anon69_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#8@0|) (or (= $Heap@@6 |$lambdaHeap#8@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#8@0|))) (and (=> (= (ControlFlow 0 19) 17) anon70_Then_correct) (=> (= (ControlFlow 0 19) 18) anon70_Else_correct)))))
(let ((anon73_Else_correct true))
(let ((anon73_Then_correct  (=> (and (= |$_Frame#l9@0| (|lambda#30| null |$lambdaHeap#9@0| alloc false)) (= (ControlFlow 0 12) (- 0 11))) (or (not (= 0 $FunctionContextHeight)) (not true)))))
(let ((anon72_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#9@0|) (or (= $Heap@@6 |$lambdaHeap#9@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#9@0|))) (and (=> (= (ControlFlow 0 14) 12) anon73_Then_correct) (=> (= (ControlFlow 0 14) 13) anon73_Else_correct)))))
(let ((anon75_Else_correct true))
(let ((anon75_Then_correct true))
(let ((anon74_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#10@0|) (or (= $Heap@@6 |$lambdaHeap#10@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#10@0|))) (and (=> (= (ControlFlow 0 10) 8) anon75_Then_correct) (=> (= (ControlFlow 0 10) 9) anon75_Else_correct)))))
(let ((anon77_Else_correct true))
(let ((anon77_Then_correct true))
(let ((anon76_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#11@0|) (or (= $Heap@@6 |$lambdaHeap#11@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#11@0|))) (and (=> (= (ControlFlow 0 7) 5) anon77_Then_correct) (=> (= (ControlFlow 0 7) 6) anon77_Else_correct)))))
(let ((anon76_Else_correct  (and (=> (= (ControlFlow 0 3) (- 0 4)) (Requires2 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) _module._default.QQ$U@@3 _module._default.QQ$V@@3 $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc2 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) _module._default.QQ$U@@3 _module._default.QQ$V@@3) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType (|_module.__default.P#Handle| _module._default.QQ$U@@3 _module._default.QQ$V@@3))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))) ($Box HandleTypeType ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))) (=> (Requires2 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) _module._default.QQ$U@@3 _module._default.QQ$V@@3 $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc2 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) _module._default.QQ$U@@3 _module._default.QQ$V@@3) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType (|_module.__default.P#Handle| _module._default.QQ$U@@3 _module._default.QQ$V@@3))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))) ($Box HandleTypeType ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))) (=> (and (and (= |b$reqreads#2@0| (forall (($o@@5 T@U) ($f@@3 T@U) )  (=> (and (and (or (not (= $o@@5 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 $o@@5) alloc)))) (|Set#IsMember| (Reads2 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) _module._default.QQ$U@@3 _module._default.QQ$V@@3 $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc2 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) _module._default.QQ$U@@3 _module._default.QQ$V@@3) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType (|_module.__default.P#Handle| _module._default.QQ$U@@3 _module._default.QQ$V@@3))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))) ($Box HandleTypeType ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))) ($Box refType $o@@5))) (U_2_bool (MapType1Select refType FieldType boolType $_ReadsFrame@0 $o@@5 $f@@3))))) (= (_module.__default.QQ _module._default.QQ$U@@3 _module._default.QQ$V@@3 $Heap@@6 |f#0@@8| |x#0@@8|) (Apply2 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) _module._default.QQ$U@@3 _module._default.QQ$V@@3 $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc2 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) _module._default.QQ$U@@3 _module._default.QQ$V@@3) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType (|_module.__default.P#Handle| _module._default.QQ$U@@3 _module._default.QQ$V@@3))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))) ($Box HandleTypeType ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))))) (and ($IsBox (_module.__default.QQ _module._default.QQ$U@@3 _module._default.QQ$V@@3 $Heap@@6 |f#0@@8| |x#0@@8|) _module._default.QQ$V@@3) (= (ControlFlow 0 3) (- 0 2)))) |b$reqreads#2@0|)))))
(let ((anon71_Then_correct true))
(let ((anon69_Else_correct  (and (=> (= (ControlFlow 0 15) (- 0 16)) (Requires1 _module._default.QQ$U@@3 (TSet Tclass._System.object?) $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 (TSet Tclass._System.object?)) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#141| _module._default.QQ$U@@3 _module._default.QQ$V@@3 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))) (=> (Requires1 _module._default.QQ$U@@3 (TSet Tclass._System.object?) $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 (TSet Tclass._System.object?)) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#141| _module._default.QQ$U@@3 _module._default.QQ$V@@3 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))) (and (and (and (and (=> (= (ControlFlow 0 15) 1) anon71_Then_correct) (=> (= (ControlFlow 0 15) 14) anon72_Then_correct)) (=> (= (ControlFlow 0 15) 10) anon74_Then_correct)) (=> (= (ControlFlow 0 15) 7) anon76_Then_correct)) (=> (= (ControlFlow 0 15) 3) anon76_Else_correct))))))
(let ((anon63_Else_correct  (and (=> (= (ControlFlow 0 28) (- 0 30)) (Requires1 _module._default.QQ$U@@3 (TSet Tclass._System.object?) $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 (TSet Tclass._System.object?)) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#141| _module._default.QQ$U@@3 _module._default.QQ$V@@3 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))) (=> (Requires1 _module._default.QQ$U@@3 (TSet Tclass._System.object?) $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 (TSet Tclass._System.object?)) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#141| _module._default.QQ$U@@3 _module._default.QQ$V@@3 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))) (=> (= |b$reqreads#1@0| (forall (($o@@6 T@U) ($f@@4 T@U) )  (=> (and (and (or (not (= $o@@6 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 $o@@6) alloc)))) (|Set#IsMember| (Reads1 _module._default.QQ$U@@3 (TSet Tclass._System.object?) $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 (TSet Tclass._System.object?)) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#141| _module._default.QQ$U@@3 _module._default.QQ$V@@3 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))) ($Box refType $o@@6))) (U_2_bool (MapType1Select refType FieldType boolType $_ReadsFrame@0 $o@@6 $f@@4))))) (and (=> (= (ControlFlow 0 28) (- 0 29)) |b$reqreads#1@0|) (=> |b$reqreads#1@0| (and (and (=> (= (ControlFlow 0 28) 27) anon65_Then_correct) (=> (= (ControlFlow 0 28) 19) anon69_Then_correct)) (=> (= (ControlFlow 0 28) 15) anon69_Else_correct)))))))))
(let ((anon57_Else_correct  (and (=> (= (ControlFlow 0 42) (- 0 44)) (Requires1 _module._default.QQ$U@@3 TBool $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 TBool) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#156| _module._default.QQ$U@@3 _module._default.QQ$V@@3 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))) (=> (Requires1 _module._default.QQ$U@@3 TBool $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 TBool) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#156| _module._default.QQ$U@@3 _module._default.QQ$V@@3 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))) (=> (and (= |b$reqreads#0@0| (forall (($o@@7 T@U) ($f@@5 T@U) )  (=> (and (and (or (not (= $o@@7 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 $o@@7) alloc)))) (|Set#IsMember| (Reads1 _module._default.QQ$U@@3 TBool $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 TBool) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#156| _module._default.QQ$U@@3 _module._default.QQ$V@@3 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ))))) ($Box refType $o@@7))) (U_2_bool (MapType1Select refType FieldType boolType $_ReadsFrame@0 $o@@7 $f@@5))))) (U_2_bool ($Unbox boolType (Apply1 _module._default.QQ$U@@3 TBool $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 TBool) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#156| _module._default.QQ$U@@3 _module._default.QQ$V@@3 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))))) (and (=> (= (ControlFlow 0 42) (- 0 43)) |b$reqreads#0@0|) (=> |b$reqreads#0@0| (and (and (=> (= (ControlFlow 0 42) 41) anon59_Then_correct) (=> (= (ControlFlow 0 42) 33) anon63_Then_correct)) (=> (= (ControlFlow 0 42) 28) anon63_Else_correct)))))))))
(let ((anon0_correct  (=> (= $_ReadsFrame@0 (|lambda#130| null $Heap@@6 alloc ($Unbox SetType (Apply1 _module._default.QQ$U@@3 (TSet Tclass._System.object?) $Heap@@6 ($Unbox HandleTypeType (Apply0 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 (TSet Tclass._System.object?)) $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#141| _module._default.QQ$U@@3 _module._default.QQ$V@@3 (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3) (|lambda#4| (Handle0 (|lambda#132| ($Box HandleTypeType |f#0@@8|)) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false)))) ($LS $LZ))))) (Apply0 _module._default.QQ$U@@3 $Heap@@6 (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#4| (Handle0 (|lambda#132| |x#0@@8|) (|lambda#133| true) (|lambda#135| (SetRef_to_SetBox (|lambda#2| false))))) ($LS $LZ)))))))) (and (and (=> (= (ControlFlow 0 56) 55) anon53_Then_correct) (=> (= (ControlFlow 0 56) 47) anon57_Then_correct)) (=> (= (ControlFlow 0 56) 42) anon57_Else_correct)))))
(let ((PreconditionGeneratedEntry_correct  (=> (and ($IsGoodHeap $Heap@@6) ($IsHeapAnchor $Heap@@6)) (=> (and (and ($Is HandleTypeType |f#0@@8| (Tclass._System.___hFunc1 _module._default.QQ$U@@3 _module._default.QQ$V@@3)) ($IsBox |x#0@@8| _module._default.QQ$U@@3)) (and (= 1 $FunctionContextHeight) (= (ControlFlow 0 57) 56))) anon0_correct))))
PreconditionGeneratedEntry_correct)))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
