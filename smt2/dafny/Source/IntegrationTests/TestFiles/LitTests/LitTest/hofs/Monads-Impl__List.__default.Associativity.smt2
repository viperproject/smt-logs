(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun TagSet () T@U)
(declare-fun alloc () T@U)
(declare-fun Tagclass._System.object? () T@U)
(declare-fun Tagclass._System.object () T@U)
(declare-fun Tagclass._System.___hFunc1 () T@U)
(declare-fun Tagclass._System.___hPartialFunc1 () T@U)
(declare-fun Tagclass._System.___hTotalFunc1 () T@U)
(declare-fun Tagclass.List.M () T@U)
(declare-fun |##List.M.Cons| () T@U)
(declare-fun |##List.M.Nil| () T@U)
(declare-fun tytagFamily$object () T@U)
(declare-fun |tytagFamily$_#Func1| () T@U)
(declare-fun |tytagFamily$_#PartialFunc1| () T@U)
(declare-fun |tytagFamily$_#TotalFunc1| () T@U)
(declare-fun tytagFamily$M () T@U)
(declare-fun Ctor (T@T) Int)
(declare-fun boolType () T@T)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun $FunctionContextHeight () Int)
(declare-fun List.__default.Bind (T@U T@U T@U T@U) T@U)
(declare-fun Lit (T@T T@U) T@U)
(declare-fun DatatypeTypeType () T@T)
(declare-fun HandleTypeType () T@T)
(declare-fun |List.__default.Bind#canCall| (T@U T@U T@U T@U) Bool)
(declare-fun $Is (T@T T@U T@U) Bool)
(declare-fun Tclass.List.M (T@U) T@U)
(declare-fun Tclass._System.___hTotalFunc1 (T@U T@U) T@U)
(declare-fun |List.__default.Map#canCall| (T@U T@U T@U T@U) Bool)
(declare-fun |List.__default.Join#canCall| (T@U T@U) Bool)
(declare-fun List.__default.Map (T@U T@U T@U T@U T@U) T@U)
(declare-fun $LS (T@U) T@U)
(declare-fun $LZ () T@U)
(declare-fun List.__default.Join (T@U T@U T@U) T@U)
(declare-fun |Set#IsMember| (T@U T@U) Bool)
(declare-fun Reads1 (T@U T@U T@U T@U T@U) T@U)
(declare-fun Handle1 (T@U T@U T@U) T@U)
(declare-fun MapType0Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType1Type (T@T T@T) T@T)
(declare-fun refType () T@T)
(declare-fun FieldType () T@T)
(declare-fun BoxType () T@T)
(declare-fun SetType () T@T)
(declare-fun MapType0Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun MapType1Select (T@T T@T T@U T@U) T@U)
(declare-fun MapType1Store (T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType1TypeInv0 (T@T) T@T)
(declare-fun MapType1TypeInv1 (T@T) T@T)
(declare-fun |lambda#9| (T@U) T@U)
(declare-fun $IsBox (T@U T@U) Bool)
(declare-fun $IsGoodHeap (T@U) Bool)
(declare-fun List.M.Cons_q (T@U) Bool)
(declare-fun List.M.tl (T@U) T@U)
(declare-fun List.M.hd (T@U) T@U)
(declare-fun |#List.M.Cons| (T@U T@U) T@U)
(declare-fun Apply1 (T@U T@U T@U T@U T@U) T@U)
(declare-fun |#List.M.Nil| () T@U)
(declare-fun |Set#Empty| () T@U)
(declare-fun DatatypeCtorId (T@U) T@U)
(declare-fun Tclass._System.___hFunc1 (T@U T@U) T@U)
(declare-fun $IsAlloc (T@T T@U T@U T@U) Bool)
(declare-fun Tclass._System.object () T@U)
(declare-fun Tclass._System.object? () T@U)
(declare-fun null () T@U)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun |List.M#Equal| (T@U T@U) Bool)
(declare-fun $HeapSucc (T@U T@U) Bool)
(declare-fun $OneHeap () T@U)
(declare-fun |Set#Equal| (T@U T@U) Bool)
(declare-fun List.M.Nil_q (T@U) Bool)
(declare-fun $Box (T@T T@U) T@U)
(declare-fun |lambda#8| (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun Requires1 (T@U T@U T@U T@U T@U) Bool)
(declare-fun TSet (T@U) T@U)
(declare-fun AtLayer (T@T T@U T@U) T@U)
(declare-fun LayerTypeType () T@T)
(declare-fun $IsAllocBox (T@U T@U T@U) Bool)
(declare-fun Tag (T@U) T@U)
(declare-fun TagFamily (T@U) T@U)
(declare-fun SetRef_to_SetBox (T@U) T@U)
(declare-fun Tclass._System.___hPartialFunc1 (T@U T@U) T@U)
(declare-fun |List.__default.Concat#canCall| (T@U T@U T@U) Bool)
(declare-fun List.__default.Concat (T@U T@U T@U T@U) T@U)
(declare-fun |$IsA#List.M| (T@U) Bool)
(declare-fun |lambda#10| (Bool) T@U)
(declare-fun |lambda#12| (T@U) T@U)
(declare-fun Tclass._System.___hFunc1_0 (T@U) T@U)
(declare-fun Tclass._System.___hFunc1_1 (T@U) T@U)
(declare-fun Tclass._System.___hPartialFunc1_0 (T@U) T@U)
(declare-fun Tclass._System.___hPartialFunc1_1 (T@U) T@U)
(declare-fun Tclass._System.___hTotalFunc1_0 (T@U) T@U)
(declare-fun Tclass._System.___hTotalFunc1_1 (T@U) T@U)
(declare-fun Inv0_TSet (T@U) T@U)
(declare-fun Tclass.List.M_0 (T@U) T@U)
(declare-fun BoxRank (T@U) Int)
(declare-fun DtRank (T@U) Int)
(declare-fun |lambda#0| (T@U T@U T@U Bool) T@U)
(declare-fun |lambda#11| (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= (Ctor boolType) 0) (= (Ctor intType) 1)) (= (Ctor realType) 2)) (forall ((arg0 Bool) ) (! (= (U_2_bool (bool_2_U arg0)) arg0)
 :pattern ( (bool_2_U arg0))
))) (forall ((x T@U) ) (! (= (bool_2_U (U_2_bool x)) x)
 :pattern ( (U_2_bool x))
))) (forall ((arg0@@0 Int) ) (! (= (U_2_int (int_2_U arg0@@0)) arg0@@0)
 :pattern ( (int_2_U arg0@@0))
))) (forall ((x@@0 T@U) ) (! (= (int_2_U (U_2_int x@@0)) x@@0)
 :pattern ( (U_2_int x@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@1 T@U) ) (! (= (real_2_U (U_2_real x@@1)) x@@1)
 :pattern ( (U_2_real x@@1))
))))
(assert (distinct TagSet alloc Tagclass._System.object? Tagclass._System.object Tagclass._System.___hFunc1 Tagclass._System.___hPartialFunc1 Tagclass._System.___hTotalFunc1 Tagclass.List.M |##List.M.Cons| |##List.M.Nil| tytagFamily$object |tytagFamily$_#Func1| |tytagFamily$_#PartialFunc1| |tytagFamily$_#TotalFunc1| tytagFamily$M)
)
(assert  (and (= (Ctor DatatypeTypeType) 3) (= (Ctor HandleTypeType) 4)))
(assert  (=> (<= 3 $FunctionContextHeight) (forall ((List._default.Bind$A T@U) (List._default.Bind$B T@U) (|m#0| T@U) (|f#0| T@U) ) (!  (=> (or (|List.__default.Bind#canCall| List._default.Bind$A List._default.Bind$B (Lit DatatypeTypeType |m#0|) (Lit HandleTypeType |f#0|)) (and (< 3 $FunctionContextHeight) (and ($Is DatatypeTypeType |m#0| (Tclass.List.M List._default.Bind$A)) ($Is HandleTypeType |f#0| (Tclass._System.___hTotalFunc1 List._default.Bind$A (Tclass.List.M List._default.Bind$B)))))) (and (and (|List.__default.Map#canCall| List._default.Bind$A (Tclass.List.M List._default.Bind$B) (Lit DatatypeTypeType |m#0|) (Lit HandleTypeType |f#0|)) (|List.__default.Join#canCall| List._default.Bind$B (Lit DatatypeTypeType (List.__default.Map List._default.Bind$A (Tclass.List.M List._default.Bind$B) ($LS $LZ) (Lit DatatypeTypeType |m#0|) (Lit HandleTypeType |f#0|))))) (= (List.__default.Bind List._default.Bind$A List._default.Bind$B (Lit DatatypeTypeType |m#0|) (Lit HandleTypeType |f#0|)) (Lit DatatypeTypeType (List.__default.Join List._default.Bind$B ($LS $LZ) (Lit DatatypeTypeType (List.__default.Map List._default.Bind$A (Tclass.List.M List._default.Bind$B) ($LS $LZ) (Lit DatatypeTypeType |m#0|) (Lit HandleTypeType |f#0|))))))))
 :weight 3
 :pattern ( (List.__default.Bind List._default.Bind$A List._default.Bind$B (Lit DatatypeTypeType |m#0|) (Lit HandleTypeType |f#0|)))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (forall ((t0 T@T) (t1 T@T) (t2 T@T) (val T@U) (m T@U) (x0 T@U) (x1 T@U) ) (! (= (MapType0Select t0 t1 t2 (MapType0Store t0 t1 t2 m x0 x1 val) x0 x1) val)
 :weight 0
)) (and (forall ((u0 T@T) (u1 T@T) (u2 T@T) (val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (x1@@0 T@U) (y0 T@U) (y1 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select u0 u1 u2 (MapType0Store u0 u1 u2 m@@0 x0@@0 x1@@0 val@@0) y0 y1) (MapType0Select u0 u1 u2 m@@0 y0 y1)))
 :weight 0
)) (forall ((u0@@0 T@T) (u1@@0 T@T) (u2@@0 T@T) (val@@1 T@U) (m@@1 T@U) (x0@@1 T@U) (x1@@1 T@U) (y0@@0 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType0Select u0@@0 u1@@0 u2@@0 (MapType0Store u0@@0 u1@@0 u2@@0 m@@1 x0@@1 x1@@1 val@@1) y0@@0 y1@@0) (MapType0Select u0@@0 u1@@0 u2@@0 m@@1 y0@@0 y1@@0)))
 :weight 0
)))) (forall ((t0@@0 T@T) (t1@@0 T@T) (val@@2 T@U) (m@@2 T@U) (x0@@2 T@U) ) (! (= (MapType1Select t0@@0 t1@@0 (MapType1Store t0@@0 t1@@0 m@@2 x0@@2 val@@2) x0@@2) val@@2)
 :weight 0
))) (forall ((u0@@1 T@T) (u1@@1 T@T) (val@@3 T@U) (m@@3 T@U) (x0@@3 T@U) (y0@@1 T@U) ) (!  (or (= x0@@3 y0@@1) (= (MapType1Select u0@@1 u1@@1 (MapType1Store u0@@1 u1@@1 m@@3 x0@@3 val@@3) y0@@1) (MapType1Select u0@@1 u1@@1 m@@3 y0@@1)))
 :weight 0
))) (forall ((arg0@@2 T@T) (arg1 T@T) ) (= (Ctor (MapType1Type arg0@@2 arg1)) 5))) (forall ((arg0@@3 T@T) (arg1@@0 T@T) ) (! (= (MapType1TypeInv0 (MapType1Type arg0@@3 arg1@@0)) arg0@@3)
 :pattern ( (MapType1Type arg0@@3 arg1@@0))
))) (forall ((arg0@@4 T@T) (arg1@@1 T@T) ) (! (= (MapType1TypeInv1 (MapType1Type arg0@@4 arg1@@1)) arg1@@1)
 :pattern ( (MapType1Type arg0@@4 arg1@@1))
))) (= (Ctor refType) 6)) (= (Ctor FieldType) 7)) (= (Ctor BoxType) 8)) (= (Ctor SetType) 9)))
(assert (forall ((t0@@1 T@U) (t1@@1 T@U) (heap T@U) (h T@U) (r T@U) (rd T@U) (bx0 T@U) (bx T@U) ) (! (= (|Set#IsMember| (Reads1 t0@@1 t1@@1 heap (Handle1 h r rd) bx0) bx) (|Set#IsMember| (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType SetType rd heap bx0) bx))
 :pattern ( (|Set#IsMember| (Reads1 t0@@1 t1@@1 heap (Handle1 h r rd) bx0) bx))
)))
(assert (forall ((|l#0| T@U) (|$l#6#heap#0| T@U) (|$l#6#x#0| T@U) ) (! (= (U_2_bool (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType boolType (|lambda#9| |l#0|) |$l#6#heap#0| |$l#6#x#0|)) ($IsBox |$l#6#x#0| |l#0|))
 :pattern ( (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType boolType (|lambda#9| |l#0|) |$l#6#heap#0| |$l#6#x#0|))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((List._default.Map$A T@U) (List._default.Map$B T@U) ($ly T@U) ($Heap T@U) (|xs#0| T@U) (|f#0@@0| T@U) ) (!  (=> (or (|List.__default.Map#canCall| List._default.Map$A List._default.Map$B (Lit DatatypeTypeType |xs#0|) |f#0@@0|) (and (< 1 $FunctionContextHeight) (and (and ($IsGoodHeap $Heap) ($Is DatatypeTypeType |xs#0| (Tclass.List.M List._default.Map$A))) ($Is HandleTypeType |f#0@@0| (Tclass._System.___hTotalFunc1 List._default.Map$A List._default.Map$B))))) (and (=> (U_2_bool (Lit boolType (bool_2_U (List.M.Cons_q (Lit DatatypeTypeType |xs#0|))))) (let ((|xs#4| (Lit DatatypeTypeType (List.M.tl (Lit DatatypeTypeType |xs#0|)))))
(|List.__default.Map#canCall| List._default.Map$A List._default.Map$B |xs#4| |f#0@@0|))) (= (List.__default.Map List._default.Map$A List._default.Map$B ($LS $ly) (Lit DatatypeTypeType |xs#0|) |f#0@@0|) (ite (List.M.Cons_q (Lit DatatypeTypeType |xs#0|)) (let ((|xs#3| (Lit DatatypeTypeType (List.M.tl (Lit DatatypeTypeType |xs#0|)))))
(let ((|x#2| (Lit BoxType (List.M.hd (Lit DatatypeTypeType |xs#0|)))))
(|#List.M.Cons| (Apply1 List._default.Map$A List._default.Map$B $Heap |f#0@@0| |x#2|) (List.__default.Map List._default.Map$A List._default.Map$B ($LS $ly) |xs#3| |f#0@@0|)))) |#List.M.Nil|))))
 :weight 3
 :pattern ( (List.__default.Map List._default.Map$A List._default.Map$B ($LS $ly) (Lit DatatypeTypeType |xs#0|) |f#0@@0|) ($IsGoodHeap $Heap))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((List._default.Map$A@@0 T@U) (List._default.Map$B@@0 T@U) ($ly@@0 T@U) (|xs#0@@0| T@U) (|f#0@@1| T@U) ) (!  (=> (or (|List.__default.Map#canCall| List._default.Map$A@@0 List._default.Map$B@@0 |xs#0@@0| |f#0@@1|) (and (< 1 $FunctionContextHeight) (and ($Is DatatypeTypeType |xs#0@@0| (Tclass.List.M List._default.Map$A@@0)) ($Is HandleTypeType |f#0@@1| (Tclass._System.___hTotalFunc1 List._default.Map$A@@0 List._default.Map$B@@0))))) ($Is DatatypeTypeType (List.__default.Map List._default.Map$A@@0 List._default.Map$B@@0 $ly@@0 |xs#0@@0| |f#0@@1|) (Tclass.List.M List._default.Map$B@@0)))
 :pattern ( (List.__default.Map List._default.Map$A@@0 List._default.Map$B@@0 $ly@@0 |xs#0@@0| |f#0@@1|))
))))
(assert (forall ((o T@U) ) (!  (not (|Set#IsMember| |Set#Empty| o))
 :pattern ( (|Set#IsMember| |Set#Empty| o))
)))
(assert (forall ((List._default.Join$A T@U) ($ly@@1 T@U) (|xss#0| T@U) ) (! (= (List.__default.Join List._default.Join$A ($LS $ly@@1) |xss#0|) (List.__default.Join List._default.Join$A $ly@@1 |xss#0|))
 :pattern ( (List.__default.Join List._default.Join$A ($LS $ly@@1) |xss#0|))
)))
(assert (= (DatatypeCtorId |#List.M.Nil|) |##List.M.Nil|))
(assert (forall ((f T@U) (t0@@2 T@U) (t1@@2 T@U) (u0@@2 T@U) (u1@@2 T@U) ) (!  (=> (and (and ($Is HandleTypeType f (Tclass._System.___hFunc1 t0@@2 t1@@2)) (forall ((bx@@0 T@U) ) (!  (=> ($IsBox bx@@0 u0@@2) ($IsBox bx@@0 t0@@2))
 :pattern ( ($IsBox bx@@0 u0@@2))
 :pattern ( ($IsBox bx@@0 t0@@2))
))) (forall ((bx@@1 T@U) ) (!  (=> ($IsBox bx@@1 t1@@2) ($IsBox bx@@1 u1@@2))
 :pattern ( ($IsBox bx@@1 t1@@2))
 :pattern ( ($IsBox bx@@1 u1@@2))
))) ($Is HandleTypeType f (Tclass._System.___hFunc1 u0@@2 u1@@2)))
 :pattern ( ($Is HandleTypeType f (Tclass._System.___hFunc1 t0@@2 t1@@2)) ($Is HandleTypeType f (Tclass._System.___hFunc1 u0@@2 u1@@2)))
)))
(assert (forall ((|c#0| T@U) ($h T@U) ) (! (= ($IsAlloc refType |c#0| Tclass._System.object $h) ($IsAlloc refType |c#0| Tclass._System.object? $h))
 :pattern ( ($IsAlloc refType |c#0| Tclass._System.object $h))
 :pattern ( ($IsAlloc refType |c#0| Tclass._System.object? $h))
)))
(assert (forall ((List.M$A T@U) ($h@@0 T@U) ) (!  (=> ($IsGoodHeap $h@@0) ($IsAlloc DatatypeTypeType |#List.M.Nil| (Tclass.List.M List.M$A) $h@@0))
 :pattern ( ($IsAlloc DatatypeTypeType |#List.M.Nil| (Tclass.List.M List.M$A) $h@@0))
)))
(assert (forall ((List.M$A@@0 T@U) ) (! ($Is DatatypeTypeType |#List.M.Nil| (Tclass.List.M List.M$A@@0))
 :pattern ( ($Is DatatypeTypeType |#List.M.Nil| (Tclass.List.M List.M$A@@0)))
)))
(assert (forall (($o T@U) ($h@@1 T@U) ) (! (= ($IsAlloc refType $o Tclass._System.object? $h@@1)  (or (= $o null) (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) $h@@1 $o) alloc)))))
 :pattern ( ($IsAlloc refType $o Tclass._System.object? $h@@1))
)))
(assert (forall ((a T@U) (b T@U) ) (! (= (|List.M#Equal| a b) (= a b))
 :pattern ( (|List.M#Equal| a b))
)))
(assert (forall ((h@@0 T@U) (k T@U) ) (!  (=> ($HeapSucc h@@0 k) (forall ((o@@0 T@U) ) (!  (=> (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h@@0 o@@0) alloc))) (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) k o@@0) alloc))))
 :pattern ( (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) k o@@0) alloc))
)))
 :pattern ( ($HeapSucc h@@0 k))
)))
(assert (forall ((a@@0 T@U) (b@@0 T@U) ) (!  (=> (and (List.M.Cons_q a@@0) (List.M.Cons_q b@@0)) (= (|List.M#Equal| a@@0 b@@0)  (and (= (List.M.hd a@@0) (List.M.hd b@@0)) (|List.M#Equal| (List.M.tl a@@0) (List.M.tl b@@0)))))
 :pattern ( (|List.M#Equal| a@@0 b@@0) (List.M.Cons_q a@@0))
 :pattern ( (|List.M#Equal| a@@0 b@@0) (List.M.Cons_q b@@0))
)))
(assert (forall ((x@@2 T@U) (T T@T) ) (! (= (Lit T x@@2) x@@2)
 :pattern ( (Lit T x@@2))
)))
(assert (forall ((t0@@3 T@U) (t1@@3 T@U) (heap@@0 T@U) (f@@0 T@U) (bx0@@0 T@U) ) (!  (=> (and ($IsGoodHeap heap@@0) (and ($IsBox bx0@@0 t0@@3) ($Is HandleTypeType f@@0 (Tclass._System.___hFunc1 t0@@3 t1@@3)))) (= (|Set#Equal| (Reads1 t0@@3 t1@@3 $OneHeap f@@0 bx0@@0) |Set#Empty|) (|Set#Equal| (Reads1 t0@@3 t1@@3 heap@@0 f@@0 bx0@@0) |Set#Empty|)))
 :pattern ( (Reads1 t0@@3 t1@@3 $OneHeap f@@0 bx0@@0) ($IsGoodHeap heap@@0))
 :pattern ( (Reads1 t0@@3 t1@@3 heap@@0 f@@0 bx0@@0))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@0 T@U) (List._default.Map$A@@1 T@U) (List._default.Map$B@@1 T@U) ($ly@@2 T@U) (|xs#0@@1| T@U) (|f#0@@2| T@U) ) (!  (=> (and (or (|List.__default.Map#canCall| List._default.Map$A@@1 List._default.Map$B@@1 |xs#0@@1| |f#0@@2|) (and (< 1 $FunctionContextHeight) (and (and ($Is DatatypeTypeType |xs#0@@1| (Tclass.List.M List._default.Map$A@@1)) ($IsAlloc DatatypeTypeType |xs#0@@1| (Tclass.List.M List._default.Map$A@@1) $Heap@@0)) (and ($Is HandleTypeType |f#0@@2| (Tclass._System.___hTotalFunc1 List._default.Map$A@@1 List._default.Map$B@@1)) ($IsAlloc HandleTypeType |f#0@@2| (Tclass._System.___hTotalFunc1 List._default.Map$A@@1 List._default.Map$B@@1) $Heap@@0))))) ($IsGoodHeap $Heap@@0)) ($IsAlloc DatatypeTypeType (List.__default.Map List._default.Map$A@@1 List._default.Map$B@@1 $ly@@2 |xs#0@@1| |f#0@@2|) (Tclass.List.M List._default.Map$B@@1) $Heap@@0))
 :pattern ( ($IsAlloc DatatypeTypeType (List.__default.Map List._default.Map$A@@1 List._default.Map$B@@1 $ly@@2 |xs#0@@1| |f#0@@2|) (Tclass.List.M List._default.Map$B@@1) $Heap@@0))
))))
(assert (forall ((List.M$A@@1 T@U) (|a#2#0#0| T@U) (|a#2#1#0| T@U) ) (! (= ($Is DatatypeTypeType (|#List.M.Cons| |a#2#0#0| |a#2#1#0|) (Tclass.List.M List.M$A@@1))  (and ($IsBox |a#2#0#0| List.M$A@@1) ($Is DatatypeTypeType |a#2#1#0| (Tclass.List.M List.M$A@@1))))
 :pattern ( ($Is DatatypeTypeType (|#List.M.Cons| |a#2#0#0| |a#2#1#0|) (Tclass.List.M List.M$A@@1)))
)))
(assert (forall ((d T@U) ) (! (= (List.M.Cons_q d) (= (DatatypeCtorId d) |##List.M.Cons|))
 :pattern ( (List.M.Cons_q d))
)))
(assert (forall ((d@@0 T@U) ) (! (= (List.M.Nil_q d@@0) (= (DatatypeCtorId d@@0) |##List.M.Nil|))
 :pattern ( (List.M.Nil_q d@@0))
)))
(assert (forall ((x@@3 T@U) (T@@0 T@T) ) (! (= ($Box T@@0 ($Unbox T@@0 x@@3)) x@@3)
 :pattern ( ($Unbox T@@0 x@@3))
)))
(assert (forall ((d@@1 T@U) ) (!  (=> (List.M.Cons_q d@@1) (exists ((|a#1#0#0| T@U) (|a#1#1#0| T@U) ) (= d@@1 (|#List.M.Cons| |a#1#0#0| |a#1#1#0|))))
 :pattern ( (List.M.Cons_q d@@1))
)))
(assert (forall ((|l#0@@0| T@U) (|l#1| T@U) (|l#2| T@U) (|l#3| T@U) (|l#4| T@U) (|l#5| T@U) (|$l#6#heap#0@@0| T@U) (|$l#6#x#0@@0| T@U) ) (! (= (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType (|lambda#8| |l#0@@0| |l#1| |l#2| |l#3| |l#4| |l#5|) |$l#6#heap#0@@0| |$l#6#x#0@@0|) ($Box DatatypeTypeType (List.__default.Bind |l#0@@0| |l#1| ($Unbox DatatypeTypeType (Apply1 |l#2| |l#3| |$l#6#heap#0@@0| |l#4| |$l#6#x#0@@0|)) |l#5|)))
 :pattern ( (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType (|lambda#8| |l#0@@0| |l#1| |l#2| |l#3| |l#4| |l#5|) |$l#6#heap#0@@0| |$l#6#x#0@@0|))
)))
(assert (forall ((t0@@4 T@U) (t1@@4 T@U) (h0 T@U) (h1 T@U) (f@@1 T@U) (bx0@@1 T@U) ) (!  (=> (and (and (and ($HeapSucc h0 h1) (and ($IsGoodHeap h0) ($IsGoodHeap h1))) (and ($IsBox bx0@@1 t0@@4) ($Is HandleTypeType f@@1 (Tclass._System.___hFunc1 t0@@4 t1@@4)))) (forall ((o@@1 T@U) (fld T@U) )  (=> (and (or (not (= o@@1 null)) (not true)) (|Set#IsMember| (Reads1 t0@@4 t1@@4 h0 f@@1 bx0@@1) ($Box refType o@@1))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0 o@@1) fld) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1 o@@1) fld))))) (= (Requires1 t0@@4 t1@@4 h0 f@@1 bx0@@1) (Requires1 t0@@4 t1@@4 h1 f@@1 bx0@@1)))
 :pattern ( ($HeapSucc h0 h1) (Requires1 t0@@4 t1@@4 h1 f@@1 bx0@@1))
)))
(assert (forall ((t0@@5 T@U) (t1@@5 T@U) (h0@@0 T@U) (h1@@0 T@U) (f@@2 T@U) (bx0@@2 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@0 h1@@0) (and ($IsGoodHeap h0@@0) ($IsGoodHeap h1@@0))) (and ($IsBox bx0@@2 t0@@5) ($Is HandleTypeType f@@2 (Tclass._System.___hFunc1 t0@@5 t1@@5)))) (forall ((o@@2 T@U) (fld@@0 T@U) )  (=> (and (or (not (= o@@2 null)) (not true)) (|Set#IsMember| (Reads1 t0@@5 t1@@5 h1@@0 f@@2 bx0@@2) ($Box refType o@@2))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@0 o@@2) fld@@0) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@0 o@@2) fld@@0))))) (= (Requires1 t0@@5 t1@@5 h0@@0 f@@2 bx0@@2) (Requires1 t0@@5 t1@@5 h1@@0 f@@2 bx0@@2)))
 :pattern ( ($HeapSucc h0@@0 h1@@0) (Requires1 t0@@5 t1@@5 h1@@0 f@@2 bx0@@2))
)))
(assert (forall ((d@@2 T@U) ) (!  (=> (List.M.Nil_q d@@2) (= d@@2 |#List.M.Nil|))
 :pattern ( (List.M.Nil_q d@@2))
)))
(assert (forall ((v T@U) (t0@@6 T@U) ) (! (= ($Is SetType v (TSet t0@@6)) (forall ((bx@@2 T@U) ) (!  (=> (|Set#IsMember| v bx@@2) ($IsBox bx@@2 t0@@6))
 :pattern ( (|Set#IsMember| v bx@@2))
)))
 :pattern ( ($Is SetType v (TSet t0@@6)))
)))
(assert (= (Ctor LayerTypeType) 10))
(assert (forall ((f@@3 T@U) (ly T@U) (A T@T) ) (! (= (AtLayer A f@@3 ly) (MapType1Select LayerTypeType A f@@3 ly))
 :pattern ( (AtLayer A f@@3 ly))
)))
(assert ($IsGoodHeap $OneHeap))
(assert (forall ((v@@0 T@U) (t T@U) (h@@1 T@U) (T@@1 T@T) ) (! (= ($IsAllocBox ($Box T@@1 v@@0) t h@@1) ($IsAlloc T@@1 v@@0 t h@@1))
 :pattern ( ($IsAllocBox ($Box T@@1 v@@0) t h@@1))
)))
(assert (forall ((h@@2 T@U) (k@@0 T@U) (bx@@3 T@U) (t@@0 T@U) ) (!  (=> ($HeapSucc h@@2 k@@0) (=> ($IsAllocBox bx@@3 t@@0 h@@2) ($IsAllocBox bx@@3 t@@0 k@@0)))
 :pattern ( ($HeapSucc h@@2 k@@0) ($IsAllocBox bx@@3 t@@0 h@@2))
)))
(assert (forall ((h@@3 T@U) (k@@1 T@U) (v@@1 T@U) (t@@1 T@U) (T@@2 T@T) ) (!  (=> ($HeapSucc h@@3 k@@1) (=> ($IsAlloc T@@2 v@@1 t@@1 h@@3) ($IsAlloc T@@2 v@@1 t@@1 k@@1)))
 :pattern ( ($HeapSucc h@@3 k@@1) ($IsAlloc T@@2 v@@1 t@@1 h@@3))
)))
(assert  (=> (<= 3 $FunctionContextHeight) (forall ((List._default.Bind$A@@0 T@U) (List._default.Bind$B@@0 T@U) (|m#0@@0| T@U) (|f#0@@3| T@U) ) (!  (=> (or (|List.__default.Bind#canCall| List._default.Bind$A@@0 List._default.Bind$B@@0 |m#0@@0| |f#0@@3|) (and (< 3 $FunctionContextHeight) (and ($Is DatatypeTypeType |m#0@@0| (Tclass.List.M List._default.Bind$A@@0)) ($Is HandleTypeType |f#0@@3| (Tclass._System.___hTotalFunc1 List._default.Bind$A@@0 (Tclass.List.M List._default.Bind$B@@0)))))) (and (and (|List.__default.Map#canCall| List._default.Bind$A@@0 (Tclass.List.M List._default.Bind$B@@0) |m#0@@0| |f#0@@3|) (|List.__default.Join#canCall| List._default.Bind$B@@0 (List.__default.Map List._default.Bind$A@@0 (Tclass.List.M List._default.Bind$B@@0) ($LS $LZ) |m#0@@0| |f#0@@3|))) (= (List.__default.Bind List._default.Bind$A@@0 List._default.Bind$B@@0 |m#0@@0| |f#0@@3|) (List.__default.Join List._default.Bind$B@@0 ($LS $LZ) (List.__default.Map List._default.Bind$A@@0 (Tclass.List.M List._default.Bind$B@@0) ($LS $LZ) |m#0@@0| |f#0@@3|)))))
 :pattern ( (List.__default.Bind List._default.Bind$A@@0 List._default.Bind$B@@0 |m#0@@0| |f#0@@3|))
))))
(assert (forall ((t0@@7 T@U) (t1@@6 T@U) (h0@@1 T@U) (h1@@1 T@U) (f@@4 T@U) (bx0@@3 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@1 h1@@1) (and ($IsGoodHeap h0@@1) ($IsGoodHeap h1@@1))) (and ($IsBox bx0@@3 t0@@7) ($Is HandleTypeType f@@4 (Tclass._System.___hFunc1 t0@@7 t1@@6)))) (forall ((o@@3 T@U) (fld@@1 T@U) )  (=> (and (or (not (= o@@3 null)) (not true)) (|Set#IsMember| (Reads1 t0@@7 t1@@6 h0@@1 f@@4 bx0@@3) ($Box refType o@@3))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@1 o@@3) fld@@1) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@1 o@@3) fld@@1))))) (= (Reads1 t0@@7 t1@@6 h0@@1 f@@4 bx0@@3) (Reads1 t0@@7 t1@@6 h1@@1 f@@4 bx0@@3)))
 :pattern ( ($HeapSucc h0@@1 h1@@1) (Reads1 t0@@7 t1@@6 h1@@1 f@@4 bx0@@3))
)))
(assert (forall ((t0@@8 T@U) (t1@@7 T@U) (h0@@2 T@U) (h1@@2 T@U) (f@@5 T@U) (bx0@@4 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@2 h1@@2) (and ($IsGoodHeap h0@@2) ($IsGoodHeap h1@@2))) (and ($IsBox bx0@@4 t0@@8) ($Is HandleTypeType f@@5 (Tclass._System.___hFunc1 t0@@8 t1@@7)))) (forall ((o@@4 T@U) (fld@@2 T@U) )  (=> (and (or (not (= o@@4 null)) (not true)) (|Set#IsMember| (Reads1 t0@@8 t1@@7 h1@@2 f@@5 bx0@@4) ($Box refType o@@4))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@2 o@@4) fld@@2) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@2 o@@4) fld@@2))))) (= (Reads1 t0@@8 t1@@7 h0@@2 f@@5 bx0@@4) (Reads1 t0@@8 t1@@7 h1@@2 f@@5 bx0@@4)))
 :pattern ( ($HeapSucc h0@@2 h1@@2) (Reads1 t0@@8 t1@@7 h1@@2 f@@5 bx0@@4))
)))
(assert (forall ((t0@@9 T@U) (t1@@8 T@U) (h0@@3 T@U) (h1@@3 T@U) (f@@6 T@U) (bx0@@5 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@3 h1@@3) (and ($IsGoodHeap h0@@3) ($IsGoodHeap h1@@3))) (and ($IsBox bx0@@5 t0@@9) ($Is HandleTypeType f@@6 (Tclass._System.___hFunc1 t0@@9 t1@@8)))) (forall ((o@@5 T@U) (fld@@3 T@U) )  (=> (and (or (not (= o@@5 null)) (not true)) (|Set#IsMember| (Reads1 t0@@9 t1@@8 h0@@3 f@@6 bx0@@5) ($Box refType o@@5))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@3 o@@5) fld@@3) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@3 o@@5) fld@@3))))) (= (Apply1 t0@@9 t1@@8 h0@@3 f@@6 bx0@@5) (Apply1 t0@@9 t1@@8 h1@@3 f@@6 bx0@@5)))
 :pattern ( ($HeapSucc h0@@3 h1@@3) (Apply1 t0@@9 t1@@8 h1@@3 f@@6 bx0@@5))
)))
(assert (forall ((t0@@10 T@U) (t1@@9 T@U) (h0@@4 T@U) (h1@@4 T@U) (f@@7 T@U) (bx0@@6 T@U) ) (!  (=> (and (and (and ($HeapSucc h0@@4 h1@@4) (and ($IsGoodHeap h0@@4) ($IsGoodHeap h1@@4))) (and ($IsBox bx0@@6 t0@@10) ($Is HandleTypeType f@@7 (Tclass._System.___hFunc1 t0@@10 t1@@9)))) (forall ((o@@6 T@U) (fld@@4 T@U) )  (=> (and (or (not (= o@@6 null)) (not true)) (|Set#IsMember| (Reads1 t0@@10 t1@@9 h1@@4 f@@7 bx0@@6) ($Box refType o@@6))) (= (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h0@@4 o@@6) fld@@4) (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h1@@4 o@@6) fld@@4))))) (= (Apply1 t0@@10 t1@@9 h0@@4 f@@7 bx0@@6) (Apply1 t0@@10 t1@@9 h1@@4 f@@7 bx0@@6)))
 :pattern ( ($HeapSucc h0@@4 h1@@4) (Apply1 t0@@10 t1@@9 h1@@4 f@@7 bx0@@6))
)))
(assert (forall ((List.M$A@@2 T@U) ) (!  (and (= (Tag (Tclass.List.M List.M$A@@2)) Tagclass.List.M) (= (TagFamily (Tclass.List.M List.M$A@@2)) tytagFamily$M))
 :pattern ( (Tclass.List.M List.M$A@@2))
)))
(assert  (=> (<= 3 $FunctionContextHeight) (forall ((List._default.Bind$A@@1 T@U) (List._default.Bind$B@@1 T@U) (|m#0@@1| T@U) (|f#0@@4| T@U) ) (!  (=> (or (|List.__default.Bind#canCall| List._default.Bind$A@@1 List._default.Bind$B@@1 (Lit DatatypeTypeType |m#0@@1|) |f#0@@4|) (and (< 3 $FunctionContextHeight) (and ($Is DatatypeTypeType |m#0@@1| (Tclass.List.M List._default.Bind$A@@1)) ($Is HandleTypeType |f#0@@4| (Tclass._System.___hTotalFunc1 List._default.Bind$A@@1 (Tclass.List.M List._default.Bind$B@@1)))))) (and (and (|List.__default.Map#canCall| List._default.Bind$A@@1 (Tclass.List.M List._default.Bind$B@@1) (Lit DatatypeTypeType |m#0@@1|) |f#0@@4|) (|List.__default.Join#canCall| List._default.Bind$B@@1 (List.__default.Map List._default.Bind$A@@1 (Tclass.List.M List._default.Bind$B@@1) ($LS $LZ) (Lit DatatypeTypeType |m#0@@1|) |f#0@@4|))) (= (List.__default.Bind List._default.Bind$A@@1 List._default.Bind$B@@1 (Lit DatatypeTypeType |m#0@@1|) |f#0@@4|) (List.__default.Join List._default.Bind$B@@1 ($LS $LZ) (List.__default.Map List._default.Bind$A@@1 (Tclass.List.M List._default.Bind$B@@1) ($LS $LZ) (Lit DatatypeTypeType |m#0@@1|) |f#0@@4|)))))
 :weight 3
 :pattern ( (List.__default.Bind List._default.Bind$A@@1 List._default.Bind$B@@1 (Lit DatatypeTypeType |m#0@@1|) |f#0@@4|))
))))
(assert (forall ((s T@U) (bx@@4 T@U) ) (! (= (|Set#IsMember| (SetRef_to_SetBox s) bx@@4) (U_2_bool (MapType1Select refType boolType s ($Unbox refType bx@@4))))
 :pattern ( (|Set#IsMember| (SetRef_to_SetBox s) bx@@4))
)))
(assert (forall ((|#$T0| T@U) (|#$R| T@U) (|f#0@@5| T@U) ($h@@2 T@U) ) (! (= ($IsAlloc HandleTypeType |f#0@@5| (Tclass._System.___hPartialFunc1 |#$T0| |#$R|) $h@@2) ($IsAlloc HandleTypeType |f#0@@5| (Tclass._System.___hFunc1 |#$T0| |#$R|) $h@@2))
 :pattern ( ($IsAlloc HandleTypeType |f#0@@5| (Tclass._System.___hPartialFunc1 |#$T0| |#$R|) $h@@2))
)))
(assert (forall ((|#$T0@@0| T@U) (|#$R@@0| T@U) (|f#0@@6| T@U) ($h@@3 T@U) ) (! (= ($IsAlloc HandleTypeType |f#0@@6| (Tclass._System.___hTotalFunc1 |#$T0@@0| |#$R@@0|) $h@@3) ($IsAlloc HandleTypeType |f#0@@6| (Tclass._System.___hPartialFunc1 |#$T0@@0| |#$R@@0|) $h@@3))
 :pattern ( ($IsAlloc HandleTypeType |f#0@@6| (Tclass._System.___hTotalFunc1 |#$T0@@0| |#$R@@0|) $h@@3))
)))
(assert (forall ((t0@@11 T@U) (t1@@10 T@U) (heap@@1 T@U) (h@@4 T@U) (r@@0 T@U) (rd@@0 T@U) (bx0@@7 T@U) ) (! (= (Apply1 t0@@11 t1@@10 heap@@1 (Handle1 h@@4 r@@0 rd@@0) bx0@@7) (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType BoxType h@@4 heap@@1 bx0@@7))
 :pattern ( (Apply1 t0@@11 t1@@10 heap@@1 (Handle1 h@@4 r@@0 rd@@0) bx0@@7))
)))
(assert (forall ((bx@@5 T@U) ) (!  (=> ($IsBox bx@@5 Tclass._System.object?) (and (= ($Box refType ($Unbox refType bx@@5)) bx@@5) ($Is refType ($Unbox refType bx@@5) Tclass._System.object?)))
 :pattern ( ($IsBox bx@@5 Tclass._System.object?))
)))
(assert (forall ((bx@@6 T@U) ) (!  (=> ($IsBox bx@@6 Tclass._System.object) (and (= ($Box refType ($Unbox refType bx@@6)) bx@@6) ($Is refType ($Unbox refType bx@@6) Tclass._System.object)))
 :pattern ( ($IsBox bx@@6 Tclass._System.object))
)))
(assert (forall ((|c#0@@0| T@U) ) (! (= ($Is refType |c#0@@0| Tclass._System.object)  (and ($Is refType |c#0@@0| Tclass._System.object?) (or (not (= |c#0@@0| null)) (not true))))
 :pattern ( ($Is refType |c#0@@0| Tclass._System.object))
 :pattern ( ($Is refType |c#0@@0| Tclass._System.object?))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall ((List._default.Join$A@@0 T@U) ($ly@@3 T@U) (|xss#0@@0| T@U) ) (!  (=> (or (|List.__default.Join#canCall| List._default.Join$A@@0 |xss#0@@0|) (and (< 2 $FunctionContextHeight) ($Is DatatypeTypeType |xss#0@@0| (Tclass.List.M (Tclass.List.M List._default.Join$A@@0))))) (and (=> (List.M.Cons_q |xss#0@@0|) (let ((|xss#2| (List.M.tl |xss#0@@0|)))
(let ((|xs#1| ($Unbox DatatypeTypeType (List.M.hd |xss#0@@0|))))
 (and (|List.__default.Join#canCall| List._default.Join$A@@0 |xss#2|) (|List.__default.Concat#canCall| List._default.Join$A@@0 |xs#1| (List.__default.Join List._default.Join$A@@0 $ly@@3 |xss#2|)))))) (= (List.__default.Join List._default.Join$A@@0 ($LS $ly@@3) |xss#0@@0|) (ite (List.M.Cons_q |xss#0@@0|) (let ((|xss#1| (List.M.tl |xss#0@@0|)))
(let ((|xs#0@@2| ($Unbox DatatypeTypeType (List.M.hd |xss#0@@0|))))
(List.__default.Concat List._default.Join$A@@0 ($LS $LZ) |xs#0@@2| (List.__default.Join List._default.Join$A@@0 $ly@@3 |xss#1|)))) |#List.M.Nil|))))
 :pattern ( (List.__default.Join List._default.Join$A@@0 ($LS $ly@@3) |xss#0@@0|))
))))
(assert (forall ((f@@8 T@U) (t0@@12 T@U) (t1@@11 T@U) (h@@5 T@U) ) (!  (=> (and ($IsGoodHeap h@@5) ($IsAlloc HandleTypeType f@@8 (Tclass._System.___hFunc1 t0@@12 t1@@11) h@@5)) (forall ((bx0@@8 T@U) ) (!  (=> (and ($IsAllocBox bx0@@8 t0@@12 h@@5) (Requires1 t0@@12 t1@@11 h@@5 f@@8 bx0@@8)) ($IsAllocBox (Apply1 t0@@12 t1@@11 h@@5 f@@8 bx0@@8) t1@@11 h@@5))
 :pattern ( (Apply1 t0@@12 t1@@11 h@@5 f@@8 bx0@@8))
)))
 :pattern ( ($IsAlloc HandleTypeType f@@8 (Tclass._System.___hFunc1 t0@@12 t1@@11) h@@5))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((List._default.Map$A@@2 T@U) (List._default.Map$B@@2 T@U) ($ly@@4 T@U) ($Heap@@1 T@U) (|xs#0@@3| T@U) (|f#0@@7| T@U) ) (!  (=> (or (|List.__default.Map#canCall| List._default.Map$A@@2 List._default.Map$B@@2 |xs#0@@3| |f#0@@7|) (and (< 1 $FunctionContextHeight) (and (and ($IsGoodHeap $Heap@@1) ($Is DatatypeTypeType |xs#0@@3| (Tclass.List.M List._default.Map$A@@2))) ($Is HandleTypeType |f#0@@7| (Tclass._System.___hTotalFunc1 List._default.Map$A@@2 List._default.Map$B@@2))))) (and (=> (List.M.Cons_q |xs#0@@3|) (let ((|xs#2| (List.M.tl |xs#0@@3|)))
(|List.__default.Map#canCall| List._default.Map$A@@2 List._default.Map$B@@2 |xs#2| |f#0@@7|))) (= (List.__default.Map List._default.Map$A@@2 List._default.Map$B@@2 ($LS $ly@@4) |xs#0@@3| |f#0@@7|) (ite (List.M.Cons_q |xs#0@@3|) (let ((|xs#1@@0| (List.M.tl |xs#0@@3|)))
(let ((|x#0| (List.M.hd |xs#0@@3|)))
(|#List.M.Cons| (Apply1 List._default.Map$A@@2 List._default.Map$B@@2 $Heap@@1 |f#0@@7| |x#0|) (List.__default.Map List._default.Map$A@@2 List._default.Map$B@@2 $ly@@4 |xs#1@@0| |f#0@@7|)))) |#List.M.Nil|))))
 :pattern ( (List.__default.Map List._default.Map$A@@2 List._default.Map$B@@2 ($LS $ly@@4) |xs#0@@3| |f#0@@7|) ($IsGoodHeap $Heap@@1))
))))
(assert (forall ((d@@3 T@U) ) (!  (=> (|$IsA#List.M| d@@3) (or (List.M.Cons_q d@@3) (List.M.Nil_q d@@3)))
 :pattern ( (|$IsA#List.M| d@@3))
)))
(assert (forall ((|l#0@@1| Bool) (|$l#6#o#0| T@U) ) (! (= (U_2_bool (MapType1Select refType boolType (|lambda#10| |l#0@@1|) |$l#6#o#0|)) |l#0@@1|)
 :pattern ( (MapType1Select refType boolType (|lambda#10| |l#0@@1|) |$l#6#o#0|))
)))
(assert (forall ((|l#0@@2| T@U) (|$l#6#ly#0| T@U) ) (! (= (MapType1Select LayerTypeType HandleTypeType (|lambda#12| |l#0@@2|) |$l#6#ly#0|) |l#0@@2|)
 :pattern ( (MapType1Select LayerTypeType HandleTypeType (|lambda#12| |l#0@@2|) |$l#6#ly#0|))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@2 T@U) (List._default.Join$A@@1 T@U) ($ly@@5 T@U) (|xss#0@@1| T@U) ) (!  (=> (and (or (|List.__default.Join#canCall| List._default.Join$A@@1 |xss#0@@1|) (and (< 2 $FunctionContextHeight) (and ($Is DatatypeTypeType |xss#0@@1| (Tclass.List.M (Tclass.List.M List._default.Join$A@@1))) ($IsAlloc DatatypeTypeType |xss#0@@1| (Tclass.List.M (Tclass.List.M List._default.Join$A@@1)) $Heap@@2)))) ($IsGoodHeap $Heap@@2)) ($IsAlloc DatatypeTypeType (List.__default.Join List._default.Join$A@@1 $ly@@5 |xss#0@@1|) (Tclass.List.M List._default.Join$A@@1) $Heap@@2))
 :pattern ( ($IsAlloc DatatypeTypeType (List.__default.Join List._default.Join$A@@1 $ly@@5 |xss#0@@1|) (Tclass.List.M List._default.Join$A@@1) $Heap@@2))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((List._default.Concat$A T@U) ($ly@@6 T@U) (|xs#0@@4| T@U) (|ys#0| T@U) ) (!  (=> (or (|List.__default.Concat#canCall| List._default.Concat$A (Lit DatatypeTypeType |xs#0@@4|) (Lit DatatypeTypeType |ys#0|)) (and (< 1 $FunctionContextHeight) (and ($Is DatatypeTypeType |xs#0@@4| (Tclass.List.M List._default.Concat$A)) ($Is DatatypeTypeType |ys#0| (Tclass.List.M List._default.Concat$A))))) (and (=> (U_2_bool (Lit boolType (bool_2_U (List.M.Cons_q (Lit DatatypeTypeType |xs#0@@4|))))) (let ((|xs#4@@0| (Lit DatatypeTypeType (List.M.tl (Lit DatatypeTypeType |xs#0@@4|)))))
(|List.__default.Concat#canCall| List._default.Concat$A |xs#4@@0| (Lit DatatypeTypeType |ys#0|)))) (= (List.__default.Concat List._default.Concat$A ($LS $ly@@6) (Lit DatatypeTypeType |xs#0@@4|) (Lit DatatypeTypeType |ys#0|)) (ite (List.M.Cons_q (Lit DatatypeTypeType |xs#0@@4|)) (let ((|xs#3@@0| (Lit DatatypeTypeType (List.M.tl (Lit DatatypeTypeType |xs#0@@4|)))))
(let ((|x#2@@0| (Lit BoxType (List.M.hd (Lit DatatypeTypeType |xs#0@@4|)))))
(Lit DatatypeTypeType (|#List.M.Cons| |x#2@@0| (Lit DatatypeTypeType (List.__default.Concat List._default.Concat$A ($LS $ly@@6) |xs#3@@0| (Lit DatatypeTypeType |ys#0|))))))) |ys#0|))))
 :weight 3
 :pattern ( (List.__default.Concat List._default.Concat$A ($LS $ly@@6) (Lit DatatypeTypeType |xs#0@@4|) (Lit DatatypeTypeType |ys#0|)))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((List._default.Concat$A@@0 T@U) ($ly@@7 T@U) (|xs#0@@5| T@U) (|ys#0@@0| T@U) ) (!  (=> (or (|List.__default.Concat#canCall| List._default.Concat$A@@0 |xs#0@@5| |ys#0@@0|) (and (< 1 $FunctionContextHeight) (and ($Is DatatypeTypeType |xs#0@@5| (Tclass.List.M List._default.Concat$A@@0)) ($Is DatatypeTypeType |ys#0@@0| (Tclass.List.M List._default.Concat$A@@0))))) (and (=> (List.M.Cons_q |xs#0@@5|) (let ((|xs#2@@0| (List.M.tl |xs#0@@5|)))
(|List.__default.Concat#canCall| List._default.Concat$A@@0 |xs#2@@0| |ys#0@@0|))) (= (List.__default.Concat List._default.Concat$A@@0 ($LS $ly@@7) |xs#0@@5| |ys#0@@0|) (ite (List.M.Cons_q |xs#0@@5|) (let ((|xs#1@@1| (List.M.tl |xs#0@@5|)))
(let ((|x#0@@0| (List.M.hd |xs#0@@5|)))
(|#List.M.Cons| |x#0@@0| (List.__default.Concat List._default.Concat$A@@0 $ly@@7 |xs#1@@1| |ys#0@@0|)))) |ys#0@@0|))))
 :pattern ( (List.__default.Concat List._default.Concat$A@@0 ($LS $ly@@7) |xs#0@@5| |ys#0@@0|))
))))
(assert (forall ((List.M$A@@3 T@U) (d@@4 T@U) ) (!  (=> ($Is DatatypeTypeType d@@4 (Tclass.List.M List.M$A@@3)) (or (List.M.Cons_q d@@4) (List.M.Nil_q d@@4)))
 :pattern ( (List.M.Nil_q d@@4) ($Is DatatypeTypeType d@@4 (Tclass.List.M List.M$A@@3)))
 :pattern ( (List.M.Cons_q d@@4) ($Is DatatypeTypeType d@@4 (Tclass.List.M List.M$A@@3)))
)))
(assert (forall ((a@@1 T@U) (b@@1 T@U) ) (!  (=> (|Set#Equal| a@@1 b@@1) (= a@@1 b@@1))
 :pattern ( (|Set#Equal| a@@1 b@@1))
)))
(assert (forall ((a@@2 T@U) (b@@2 T@U) (c T@U) ) (!  (=> (or (not (= a@@2 c)) (not true)) (=> (and ($HeapSucc a@@2 b@@2) ($HeapSucc b@@2 c)) ($HeapSucc a@@2 c)))
 :pattern ( ($HeapSucc a@@2 b@@2) ($HeapSucc b@@2 c))
)))
(assert (forall ((f@@9 T@U) (t0@@13 T@U) (t1@@12 T@U) ) (! (= ($Is HandleTypeType f@@9 (Tclass._System.___hFunc1 t0@@13 t1@@12)) (forall ((h@@6 T@U) (bx0@@9 T@U) ) (!  (=> (and (and ($IsGoodHeap h@@6) ($IsBox bx0@@9 t0@@13)) (Requires1 t0@@13 t1@@12 h@@6 f@@9 bx0@@9)) ($IsBox (Apply1 t0@@13 t1@@12 h@@6 f@@9 bx0@@9) t1@@12))
 :pattern ( (Apply1 t0@@13 t1@@12 h@@6 f@@9 bx0@@9))
)))
 :pattern ( ($Is HandleTypeType f@@9 (Tclass._System.___hFunc1 t0@@13 t1@@12)))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((List._default.Map$A@@3 T@U) (List._default.Map$B@@3 T@U) ($ly@@8 T@U) ($Heap@@3 T@U) (|xs#0@@6| T@U) (|f#0@@8| T@U) ) (!  (=> (or (|List.__default.Map#canCall| List._default.Map$A@@3 List._default.Map$B@@3 (Lit DatatypeTypeType |xs#0@@6|) (Lit HandleTypeType |f#0@@8|)) (and (< 1 $FunctionContextHeight) (and (and ($IsGoodHeap $Heap@@3) ($Is DatatypeTypeType |xs#0@@6| (Tclass.List.M List._default.Map$A@@3))) ($Is HandleTypeType |f#0@@8| (Tclass._System.___hTotalFunc1 List._default.Map$A@@3 List._default.Map$B@@3))))) (and (=> (U_2_bool (Lit boolType (bool_2_U (List.M.Cons_q (Lit DatatypeTypeType |xs#0@@6|))))) (let ((|xs#6| (Lit DatatypeTypeType (List.M.tl (Lit DatatypeTypeType |xs#0@@6|)))))
(|List.__default.Map#canCall| List._default.Map$A@@3 List._default.Map$B@@3 |xs#6| (Lit HandleTypeType |f#0@@8|)))) (= (List.__default.Map List._default.Map$A@@3 List._default.Map$B@@3 ($LS $ly@@8) (Lit DatatypeTypeType |xs#0@@6|) (Lit HandleTypeType |f#0@@8|)) (ite (List.M.Cons_q (Lit DatatypeTypeType |xs#0@@6|)) (let ((|xs#5| (Lit DatatypeTypeType (List.M.tl (Lit DatatypeTypeType |xs#0@@6|)))))
(let ((|x#4| (Lit BoxType (List.M.hd (Lit DatatypeTypeType |xs#0@@6|)))))
(|#List.M.Cons| (Apply1 List._default.Map$A@@3 List._default.Map$B@@3 $Heap@@3 (Lit HandleTypeType |f#0@@8|) |x#4|) (Lit DatatypeTypeType (List.__default.Map List._default.Map$A@@3 List._default.Map$B@@3 ($LS $ly@@8) |xs#5| (Lit HandleTypeType |f#0@@8|)))))) |#List.M.Nil|))))
 :weight 3
 :pattern ( (List.__default.Map List._default.Map$A@@3 List._default.Map$B@@3 ($LS $ly@@8) (Lit DatatypeTypeType |xs#0@@6|) (Lit HandleTypeType |f#0@@8|)) ($IsGoodHeap $Heap@@3))
))))
(assert (forall ((v@@2 T@U) (t@@2 T@U) (T@@3 T@T) ) (! (= ($IsBox ($Box T@@3 v@@2) t@@2) ($Is T@@3 v@@2 t@@2))
 :pattern ( ($IsBox ($Box T@@3 v@@2) t@@2))
)))
(assert (forall ((t0@@14 T@U) (t1@@13 T@U) (heap@@2 T@U) (h@@7 T@U) (r@@1 T@U) (rd@@1 T@U) (bx0@@10 T@U) ) (!  (=> (U_2_bool (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType boolType r@@1 heap@@2 bx0@@10)) (Requires1 t0@@14 t1@@13 heap@@2 (Handle1 h@@7 r@@1 rd@@1) bx0@@10))
 :pattern ( (Requires1 t0@@14 t1@@13 heap@@2 (Handle1 h@@7 r@@1 rd@@1) bx0@@10))
)))
(assert (forall ((a@@3 T@U) (b@@3 T@U) ) (!  (=> (and (List.M.Nil_q a@@3) (List.M.Nil_q b@@3)) (|List.M#Equal| a@@3 b@@3))
 :pattern ( (|List.M#Equal| a@@3 b@@3) (List.M.Nil_q a@@3))
 :pattern ( (|List.M#Equal| a@@3 b@@3) (List.M.Nil_q b@@3))
)))
(assert (forall ((v@@3 T@U) (t0@@15 T@U) (h@@8 T@U) ) (! (= ($IsAlloc SetType v@@3 (TSet t0@@15) h@@8) (forall ((bx@@7 T@U) ) (!  (=> (|Set#IsMember| v@@3 bx@@7) ($IsAllocBox bx@@7 t0@@15 h@@8))
 :pattern ( (|Set#IsMember| v@@3 bx@@7))
)))
 :pattern ( ($IsAlloc SetType v@@3 (TSet t0@@15) h@@8))
)))
(assert (forall ((|#$T0@@1| T@U) (|#$R@@1| T@U) ) (! (= (Tclass._System.___hFunc1_0 (Tclass._System.___hFunc1 |#$T0@@1| |#$R@@1|)) |#$T0@@1|)
 :pattern ( (Tclass._System.___hFunc1 |#$T0@@1| |#$R@@1|))
)))
(assert (forall ((|#$T0@@2| T@U) (|#$R@@2| T@U) ) (! (= (Tclass._System.___hFunc1_1 (Tclass._System.___hFunc1 |#$T0@@2| |#$R@@2|)) |#$R@@2|)
 :pattern ( (Tclass._System.___hFunc1 |#$T0@@2| |#$R@@2|))
)))
(assert (forall ((|#$T0@@3| T@U) (|#$R@@3| T@U) ) (! (= (Tclass._System.___hPartialFunc1_0 (Tclass._System.___hPartialFunc1 |#$T0@@3| |#$R@@3|)) |#$T0@@3|)
 :pattern ( (Tclass._System.___hPartialFunc1 |#$T0@@3| |#$R@@3|))
)))
(assert (forall ((|#$T0@@4| T@U) (|#$R@@4| T@U) ) (! (= (Tclass._System.___hPartialFunc1_1 (Tclass._System.___hPartialFunc1 |#$T0@@4| |#$R@@4|)) |#$R@@4|)
 :pattern ( (Tclass._System.___hPartialFunc1 |#$T0@@4| |#$R@@4|))
)))
(assert (forall ((|#$T0@@5| T@U) (|#$R@@5| T@U) ) (! (= (Tclass._System.___hTotalFunc1_0 (Tclass._System.___hTotalFunc1 |#$T0@@5| |#$R@@5|)) |#$T0@@5|)
 :pattern ( (Tclass._System.___hTotalFunc1 |#$T0@@5| |#$R@@5|))
)))
(assert (forall ((|#$T0@@6| T@U) (|#$R@@6| T@U) ) (! (= (Tclass._System.___hTotalFunc1_1 (Tclass._System.___hTotalFunc1 |#$T0@@6| |#$R@@6|)) |#$R@@6|)
 :pattern ( (Tclass._System.___hTotalFunc1 |#$T0@@6| |#$R@@6|))
)))
(assert (forall ((|a#0#0#0| T@U) (|a#0#1#0| T@U) ) (! (= (DatatypeCtorId (|#List.M.Cons| |a#0#0#0| |a#0#1#0|)) |##List.M.Cons|)
 :pattern ( (|#List.M.Cons| |a#0#0#0| |a#0#1#0|))
)))
(assert (forall ((|a#4#0#0| T@U) (|a#4#1#0| T@U) ) (! (= (List.M.hd (|#List.M.Cons| |a#4#0#0| |a#4#1#0|)) |a#4#0#0|)
 :pattern ( (|#List.M.Cons| |a#4#0#0| |a#4#1#0|))
)))
(assert (forall ((|a#6#0#0| T@U) (|a#6#1#0| T@U) ) (! (= (List.M.tl (|#List.M.Cons| |a#6#0#0| |a#6#1#0|)) |a#6#1#0|)
 :pattern ( (|#List.M.Cons| |a#6#0#0| |a#6#1#0|))
)))
(assert (forall (($o@@0 T@U) ) (! ($Is refType $o@@0 Tclass._System.object?)
 :pattern ( ($Is refType $o@@0 Tclass._System.object?))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((List._default.Concat$A@@1 T@U) ($ly@@9 T@U) (|xs#0@@7| T@U) (|ys#0@@1| T@U) ) (!  (=> (or (|List.__default.Concat#canCall| List._default.Concat$A@@1 |xs#0@@7| |ys#0@@1|) (and (< 1 $FunctionContextHeight) (and ($Is DatatypeTypeType |xs#0@@7| (Tclass.List.M List._default.Concat$A@@1)) ($Is DatatypeTypeType |ys#0@@1| (Tclass.List.M List._default.Concat$A@@1))))) ($Is DatatypeTypeType (List.__default.Concat List._default.Concat$A@@1 $ly@@9 |xs#0@@7| |ys#0@@1|) (Tclass.List.M List._default.Concat$A@@1)))
 :pattern ( (List.__default.Concat List._default.Concat$A@@1 $ly@@9 |xs#0@@7| |ys#0@@1|))
))))
(assert (forall ((t@@3 T@U) ) (! (= (Inv0_TSet (TSet t@@3)) t@@3)
 :pattern ( (TSet t@@3))
)))
(assert (forall ((t@@4 T@U) ) (! (= (Tag (TSet t@@4)) TagSet)
 :pattern ( (TSet t@@4))
)))
(assert (forall ((List.M$A@@4 T@U) ) (! (= (Tclass.List.M_0 (Tclass.List.M List.M$A@@4)) List.M$A@@4)
 :pattern ( (Tclass.List.M List.M$A@@4))
)))
(assert (forall ((x@@4 T@U) (T@@4 T@T) ) (! (= ($Unbox T@@4 ($Box T@@4 x@@4)) x@@4)
 :pattern ( ($Box T@@4 x@@4))
)))
(assert (forall ((|a#5#0#0| T@U) (|a#5#1#0| T@U) ) (! (< (BoxRank |a#5#0#0|) (DtRank (|#List.M.Cons| |a#5#0#0| |a#5#1#0|)))
 :pattern ( (|#List.M.Cons| |a#5#0#0| |a#5#1#0|))
)))
(assert (forall ((|a#7#0#0| T@U) (|a#7#1#0| T@U) ) (! (< (DtRank |a#7#1#0|) (DtRank (|#List.M.Cons| |a#7#0#0| |a#7#1#0|)))
 :pattern ( (|#List.M.Cons| |a#7#0#0| |a#7#1#0|))
)))
(assert (forall ((|#$T0@@7| T@U) (|#$R@@7| T@U) (|f#0@@9| T@U) ) (! (= ($Is HandleTypeType |f#0@@9| (Tclass._System.___hTotalFunc1 |#$T0@@7| |#$R@@7|))  (and ($Is HandleTypeType |f#0@@9| (Tclass._System.___hPartialFunc1 |#$T0@@7| |#$R@@7|)) (forall ((|x0#0| T@U) )  (=> ($IsBox |x0#0| |#$T0@@7|) (Requires1 |#$T0@@7| |#$R@@7| $OneHeap |f#0@@9| |x0#0|)))))
 :pattern ( ($Is HandleTypeType |f#0@@9| (Tclass._System.___hTotalFunc1 |#$T0@@7| |#$R@@7|)))
)))
(assert (forall ((|#$T0@@8| T@U) (|#$R@@8| T@U) (|f#0@@10| T@U) ) (! (= ($Is HandleTypeType |f#0@@10| (Tclass._System.___hPartialFunc1 |#$T0@@8| |#$R@@8|))  (and ($Is HandleTypeType |f#0@@10| (Tclass._System.___hFunc1 |#$T0@@8| |#$R@@8|)) (forall ((|x0#0@@0| T@U) )  (=> ($IsBox |x0#0@@0| |#$T0@@8|) (|Set#Equal| (Reads1 |#$T0@@8| |#$R@@8| $OneHeap |f#0@@10| |x0#0@@0|) |Set#Empty|)))))
 :pattern ( ($Is HandleTypeType |f#0@@10| (Tclass._System.___hPartialFunc1 |#$T0@@8| |#$R@@8|)))
)))
(assert (forall ((f@@10 T@U) (ly@@0 T@U) (A@@0 T@T) ) (! (= (AtLayer A@@0 f@@10 ($LS ly@@0)) (AtLayer A@@0 f@@10 ly@@0))
 :pattern ( (AtLayer A@@0 f@@10 ($LS ly@@0)))
)))
(assert (forall ((f@@11 T@U) (t0@@16 T@U) (t1@@14 T@U) (h@@9 T@U) ) (!  (=> ($IsGoodHeap h@@9) (= ($IsAlloc HandleTypeType f@@11 (Tclass._System.___hFunc1 t0@@16 t1@@14) h@@9) (forall ((bx0@@11 T@U) ) (!  (=> (and (and ($IsBox bx0@@11 t0@@16) ($IsAllocBox bx0@@11 t0@@16 h@@9)) (Requires1 t0@@16 t1@@14 h@@9 f@@11 bx0@@11)) (forall ((r@@2 T@U) ) (!  (=> (and (or (not (= r@@2 null)) (not true)) (|Set#IsMember| (Reads1 t0@@16 t1@@14 h@@9 f@@11 bx0@@11) ($Box refType r@@2))) (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) h@@9 r@@2) alloc))))
 :pattern ( (|Set#IsMember| (Reads1 t0@@16 t1@@14 h@@9 f@@11 bx0@@11) ($Box refType r@@2)))
)))
 :pattern ( (Apply1 t0@@16 t1@@14 h@@9 f@@11 bx0@@11))
 :pattern ( (Reads1 t0@@16 t1@@14 h@@9 f@@11 bx0@@11))
))))
 :pattern ( ($IsAlloc HandleTypeType f@@11 (Tclass._System.___hFunc1 t0@@16 t1@@14) h@@9))
)))
(assert (forall ((|#$T0@@9| T@U) (|#$R@@9| T@U) (bx@@8 T@U) ) (!  (=> ($IsBox bx@@8 (Tclass._System.___hFunc1 |#$T0@@9| |#$R@@9|)) (and (= ($Box HandleTypeType ($Unbox HandleTypeType bx@@8)) bx@@8) ($Is HandleTypeType ($Unbox HandleTypeType bx@@8) (Tclass._System.___hFunc1 |#$T0@@9| |#$R@@9|))))
 :pattern ( ($IsBox bx@@8 (Tclass._System.___hFunc1 |#$T0@@9| |#$R@@9|)))
)))
(assert (forall ((|#$T0@@10| T@U) (|#$R@@10| T@U) (bx@@9 T@U) ) (!  (=> ($IsBox bx@@9 (Tclass._System.___hPartialFunc1 |#$T0@@10| |#$R@@10|)) (and (= ($Box HandleTypeType ($Unbox HandleTypeType bx@@9)) bx@@9) ($Is HandleTypeType ($Unbox HandleTypeType bx@@9) (Tclass._System.___hPartialFunc1 |#$T0@@10| |#$R@@10|))))
 :pattern ( ($IsBox bx@@9 (Tclass._System.___hPartialFunc1 |#$T0@@10| |#$R@@10|)))
)))
(assert (forall ((|#$T0@@11| T@U) (|#$R@@11| T@U) (bx@@10 T@U) ) (!  (=> ($IsBox bx@@10 (Tclass._System.___hTotalFunc1 |#$T0@@11| |#$R@@11|)) (and (= ($Box HandleTypeType ($Unbox HandleTypeType bx@@10)) bx@@10) ($Is HandleTypeType ($Unbox HandleTypeType bx@@10) (Tclass._System.___hTotalFunc1 |#$T0@@11| |#$R@@11|))))
 :pattern ( ($IsBox bx@@10 (Tclass._System.___hTotalFunc1 |#$T0@@11| |#$R@@11|)))
)))
(assert (forall ((d@@5 T@U) (List.M$A@@5 T@U) ($h@@4 T@U) ) (!  (=> (and ($IsGoodHeap $h@@4) (and (List.M.Cons_q d@@5) ($IsAlloc DatatypeTypeType d@@5 (Tclass.List.M List.M$A@@5) $h@@4))) ($IsAllocBox (List.M.hd d@@5) List.M$A@@5 $h@@4))
 :pattern ( ($IsAllocBox (List.M.hd d@@5) List.M$A@@5 $h@@4))
)))
(assert (forall ((|l#0@@3| T@U) (|l#1@@0| T@U) (|l#2@@0| T@U) (|l#3@@0| Bool) ($o@@1 T@U) ($f T@U) ) (! (= (U_2_bool (MapType0Select refType FieldType boolType (|lambda#0| |l#0@@3| |l#1@@0| |l#2@@0| |l#3@@0|) $o@@1 $f))  (=> (and (or (not (= $o@@1 |l#0@@3|)) (not true)) (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) |l#1@@0| $o@@1) |l#2@@0|)))) |l#3@@0|))
 :pattern ( (MapType0Select refType FieldType boolType (|lambda#0| |l#0@@3| |l#1@@0| |l#2@@0| |l#3@@0|) $o@@1 $f))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@4 T@U) (List._default.Concat$A@@2 T@U) ($ly@@10 T@U) (|xs#0@@8| T@U) (|ys#0@@2| T@U) ) (!  (=> (and (or (|List.__default.Concat#canCall| List._default.Concat$A@@2 |xs#0@@8| |ys#0@@2|) (and (< 1 $FunctionContextHeight) (and (and ($Is DatatypeTypeType |xs#0@@8| (Tclass.List.M List._default.Concat$A@@2)) ($IsAlloc DatatypeTypeType |xs#0@@8| (Tclass.List.M List._default.Concat$A@@2) $Heap@@4)) (and ($Is DatatypeTypeType |ys#0@@2| (Tclass.List.M List._default.Concat$A@@2)) ($IsAlloc DatatypeTypeType |ys#0@@2| (Tclass.List.M List._default.Concat$A@@2) $Heap@@4))))) ($IsGoodHeap $Heap@@4)) ($IsAlloc DatatypeTypeType (List.__default.Concat List._default.Concat$A@@2 $ly@@10 |xs#0@@8| |ys#0@@2|) (Tclass.List.M List._default.Concat$A@@2) $Heap@@4))
 :pattern ( ($IsAlloc DatatypeTypeType (List.__default.Concat List._default.Concat$A@@2 $ly@@10 |xs#0@@8| |ys#0@@2|) (Tclass.List.M List._default.Concat$A@@2) $Heap@@4))
))))
(assert (forall ((|#$T0@@12| T@U) (|#$R@@12| T@U) ) (!  (and (= (Tag (Tclass._System.___hFunc1 |#$T0@@12| |#$R@@12|)) Tagclass._System.___hFunc1) (= (TagFamily (Tclass._System.___hFunc1 |#$T0@@12| |#$R@@12|)) |tytagFamily$_#Func1|))
 :pattern ( (Tclass._System.___hFunc1 |#$T0@@12| |#$R@@12|))
)))
(assert (forall ((|#$T0@@13| T@U) (|#$R@@13| T@U) ) (!  (and (= (Tag (Tclass._System.___hPartialFunc1 |#$T0@@13| |#$R@@13|)) Tagclass._System.___hPartialFunc1) (= (TagFamily (Tclass._System.___hPartialFunc1 |#$T0@@13| |#$R@@13|)) |tytagFamily$_#PartialFunc1|))
 :pattern ( (Tclass._System.___hPartialFunc1 |#$T0@@13| |#$R@@13|))
)))
(assert (forall ((|#$T0@@14| T@U) (|#$R@@14| T@U) ) (!  (and (= (Tag (Tclass._System.___hTotalFunc1 |#$T0@@14| |#$R@@14|)) Tagclass._System.___hTotalFunc1) (= (TagFamily (Tclass._System.___hTotalFunc1 |#$T0@@14| |#$R@@14|)) |tytagFamily$_#TotalFunc1|))
 :pattern ( (Tclass._System.___hTotalFunc1 |#$T0@@14| |#$R@@14|))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall ((List._default.Join$A@@2 T@U) ($ly@@11 T@U) (|xss#0@@2| T@U) ) (!  (=> (or (|List.__default.Join#canCall| List._default.Join$A@@2 (Lit DatatypeTypeType |xss#0@@2|)) (and (< 2 $FunctionContextHeight) ($Is DatatypeTypeType |xss#0@@2| (Tclass.List.M (Tclass.List.M List._default.Join$A@@2))))) (and (=> (U_2_bool (Lit boolType (bool_2_U (List.M.Cons_q (Lit DatatypeTypeType |xss#0@@2|))))) (let ((|xss#4| (Lit DatatypeTypeType (List.M.tl (Lit DatatypeTypeType |xss#0@@2|)))))
(let ((|xs#3@@1| (Lit DatatypeTypeType ($Unbox DatatypeTypeType (List.M.hd (Lit DatatypeTypeType |xss#0@@2|))))))
 (and (|List.__default.Join#canCall| List._default.Join$A@@2 |xss#4|) (|List.__default.Concat#canCall| List._default.Join$A@@2 |xs#3@@1| (List.__default.Join List._default.Join$A@@2 ($LS $ly@@11) |xss#4|)))))) (= (List.__default.Join List._default.Join$A@@2 ($LS $ly@@11) (Lit DatatypeTypeType |xss#0@@2|)) (ite (List.M.Cons_q (Lit DatatypeTypeType |xss#0@@2|)) (let ((|xss#3| (Lit DatatypeTypeType (List.M.tl (Lit DatatypeTypeType |xss#0@@2|)))))
(let ((|xs#2@@1| (Lit DatatypeTypeType ($Unbox DatatypeTypeType (List.M.hd (Lit DatatypeTypeType |xss#0@@2|))))))
(Lit DatatypeTypeType (List.__default.Concat List._default.Join$A@@2 ($LS $LZ) |xs#2@@1| (Lit DatatypeTypeType (List.__default.Join List._default.Join$A@@2 ($LS $ly@@11) |xss#3|)))))) |#List.M.Nil|))))
 :weight 3
 :pattern ( (List.__default.Join List._default.Join$A@@2 ($LS $ly@@11) (Lit DatatypeTypeType |xss#0@@2|)))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall ((List._default.Join$A@@3 T@U) ($ly@@12 T@U) (|xss#0@@3| T@U) ) (!  (=> (or (|List.__default.Join#canCall| List._default.Join$A@@3 |xss#0@@3|) (and (< 2 $FunctionContextHeight) ($Is DatatypeTypeType |xss#0@@3| (Tclass.List.M (Tclass.List.M List._default.Join$A@@3))))) ($Is DatatypeTypeType (List.__default.Join List._default.Join$A@@3 $ly@@12 |xss#0@@3|) (Tclass.List.M List._default.Join$A@@3)))
 :pattern ( (List.__default.Join List._default.Join$A@@3 $ly@@12 |xss#0@@3|))
))))
(assert (forall ((t0@@17 T@U) (t1@@15 T@U) (heap@@3 T@U) (f@@12 T@U) (bx0@@12 T@U) ) (!  (=> (and (and ($IsGoodHeap heap@@3) (and ($IsBox bx0@@12 t0@@17) ($Is HandleTypeType f@@12 (Tclass._System.___hFunc1 t0@@17 t1@@15)))) (|Set#Equal| (Reads1 t0@@17 t1@@15 $OneHeap f@@12 bx0@@12) |Set#Empty|)) (= (Requires1 t0@@17 t1@@15 $OneHeap f@@12 bx0@@12) (Requires1 t0@@17 t1@@15 heap@@3 f@@12 bx0@@12)))
 :pattern ( (Requires1 t0@@17 t1@@15 $OneHeap f@@12 bx0@@12) ($IsGoodHeap heap@@3))
 :pattern ( (Requires1 t0@@17 t1@@15 heap@@3 f@@12 bx0@@12))
)))
(assert (forall ((d@@6 T@U) ) (! (= (BoxRank ($Box DatatypeTypeType d@@6)) (DtRank d@@6))
 :pattern ( (BoxRank ($Box DatatypeTypeType d@@6)))
)))
(assert (forall ((List._default.Concat$A@@3 T@U) ($ly@@13 T@U) (|xs#0@@9| T@U) (|ys#0@@3| T@U) ) (! (= (List.__default.Concat List._default.Concat$A@@3 ($LS $ly@@13) |xs#0@@9| |ys#0@@3|) (List.__default.Concat List._default.Concat$A@@3 $ly@@13 |xs#0@@9| |ys#0@@3|))
 :pattern ( (List.__default.Concat List._default.Concat$A@@3 ($LS $ly@@13) |xs#0@@9| |ys#0@@3|))
)))
(assert (forall ((bx@@11 T@U) (t@@5 T@U) ) (!  (=> ($IsBox bx@@11 (TSet t@@5)) (and (= ($Box SetType ($Unbox SetType bx@@11)) bx@@11) ($Is SetType ($Unbox SetType bx@@11) (TSet t@@5))))
 :pattern ( ($IsBox bx@@11 (TSet t@@5)))
)))
(assert (forall ((List.M$A@@6 T@U) (bx@@12 T@U) ) (!  (=> ($IsBox bx@@12 (Tclass.List.M List.M$A@@6)) (and (= ($Box DatatypeTypeType ($Unbox DatatypeTypeType bx@@12)) bx@@12) ($Is DatatypeTypeType ($Unbox DatatypeTypeType bx@@12) (Tclass.List.M List.M$A@@6))))
 :pattern ( ($IsBox bx@@12 (Tclass.List.M List.M$A@@6)))
)))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($Heap@@5 T@U) (List._default.Bind$A@@2 T@U) (List._default.Bind$B@@2 T@U) (|m#0@@2| T@U) (|f#0@@11| T@U) ) (!  (=> (and (or (|List.__default.Bind#canCall| List._default.Bind$A@@2 List._default.Bind$B@@2 |m#0@@2| |f#0@@11|) (and (< 3 $FunctionContextHeight) (and (and ($Is DatatypeTypeType |m#0@@2| (Tclass.List.M List._default.Bind$A@@2)) ($IsAlloc DatatypeTypeType |m#0@@2| (Tclass.List.M List._default.Bind$A@@2) $Heap@@5)) (and ($Is HandleTypeType |f#0@@11| (Tclass._System.___hTotalFunc1 List._default.Bind$A@@2 (Tclass.List.M List._default.Bind$B@@2))) ($IsAlloc HandleTypeType |f#0@@11| (Tclass._System.___hTotalFunc1 List._default.Bind$A@@2 (Tclass.List.M List._default.Bind$B@@2)) $Heap@@5))))) ($IsGoodHeap $Heap@@5)) ($IsAlloc DatatypeTypeType (List.__default.Bind List._default.Bind$A@@2 List._default.Bind$B@@2 |m#0@@2| |f#0@@11|) (Tclass.List.M List._default.Bind$B@@2) $Heap@@5))
 :pattern ( ($IsAlloc DatatypeTypeType (List.__default.Bind List._default.Bind$A@@2 List._default.Bind$B@@2 |m#0@@2| |f#0@@11|) (Tclass.List.M List._default.Bind$B@@2) $Heap@@5))
))))
(assert (forall ((d@@7 T@U) (List.M$A@@7 T@U) ($h@@5 T@U) ) (!  (=> (and ($IsGoodHeap $h@@5) (and (List.M.Cons_q d@@7) ($IsAlloc DatatypeTypeType d@@7 (Tclass.List.M List.M$A@@7) $h@@5))) ($IsAlloc DatatypeTypeType (List.M.tl d@@7) (Tclass.List.M List.M$A@@7) $h@@5))
 :pattern ( ($IsAlloc DatatypeTypeType (List.M.tl d@@7) (Tclass.List.M List.M$A@@7) $h@@5))
)))
(assert (= (Tag Tclass._System.object?) Tagclass._System.object?))
(assert (= (TagFamily Tclass._System.object?) tytagFamily$object))
(assert (= (Tag Tclass._System.object) Tagclass._System.object))
(assert (= (TagFamily Tclass._System.object) tytagFamily$object))
(assert (= |#List.M.Nil| (Lit DatatypeTypeType |#List.M.Nil|)))
(assert (forall ((s@@0 T@U) ) (! ($Is SetType (SetRef_to_SetBox s@@0) (TSet Tclass._System.object?))
 :pattern ( (SetRef_to_SetBox s@@0))
)))
(assert (forall ((a@@4 T@U) (b@@4 T@U) ) (! (= (|Set#Equal| a@@4 b@@4) (forall ((o@@7 T@U) ) (! (= (|Set#IsMember| a@@4 o@@7) (|Set#IsMember| b@@4 o@@7))
 :pattern ( (|Set#IsMember| a@@4 o@@7))
 :pattern ( (|Set#IsMember| b@@4 o@@7))
)))
 :pattern ( (|Set#Equal| a@@4 b@@4))
)))
(assert (forall ((|a#3#0#0| T@U) (|a#3#1#0| T@U) ) (! (= (|#List.M.Cons| (Lit BoxType |a#3#0#0|) (Lit DatatypeTypeType |a#3#1#0|)) (Lit DatatypeTypeType (|#List.M.Cons| |a#3#0#0| |a#3#1#0|)))
 :pattern ( (|#List.M.Cons| (Lit BoxType |a#3#0#0|) (Lit DatatypeTypeType |a#3#1#0|)))
)))
(assert (forall ((x@@5 T@U) (T@@5 T@T) ) (! (= ($Box T@@5 (Lit T@@5 x@@5)) (Lit BoxType ($Box T@@5 x@@5)))
 :pattern ( ($Box T@@5 (Lit T@@5 x@@5)))
)))
(assert  (=> (<= 3 $FunctionContextHeight) (forall ((List._default.Bind$A@@3 T@U) (List._default.Bind$B@@3 T@U) (|m#0@@3| T@U) (|f#0@@12| T@U) ) (!  (=> (or (|List.__default.Bind#canCall| List._default.Bind$A@@3 List._default.Bind$B@@3 |m#0@@3| |f#0@@12|) (and (< 3 $FunctionContextHeight) (and ($Is DatatypeTypeType |m#0@@3| (Tclass.List.M List._default.Bind$A@@3)) ($Is HandleTypeType |f#0@@12| (Tclass._System.___hTotalFunc1 List._default.Bind$A@@3 (Tclass.List.M List._default.Bind$B@@3)))))) ($Is DatatypeTypeType (List.__default.Bind List._default.Bind$A@@3 List._default.Bind$B@@3 |m#0@@3| |f#0@@12|) (Tclass.List.M List._default.Bind$B@@3)))
 :pattern ( (List.__default.Bind List._default.Bind$A@@3 List._default.Bind$B@@3 |m#0@@3| |f#0@@12|))
))))
(assert (forall ((List._default.Map$A@@4 T@U) (List._default.Map$B@@4 T@U) ($ly@@14 T@U) (|xs#0@@10| T@U) (|f#0@@13| T@U) ) (! (= (List.__default.Map List._default.Map$A@@4 List._default.Map$B@@4 ($LS $ly@@14) |xs#0@@10| |f#0@@13|) (List.__default.Map List._default.Map$A@@4 List._default.Map$B@@4 $ly@@14 |xs#0@@10| |f#0@@13|))
 :pattern ( (List.__default.Map List._default.Map$A@@4 List._default.Map$B@@4 ($LS $ly@@14) |xs#0@@10| |f#0@@13|))
)))
(assert (forall ((List.M$A@@8 T@U) (|a#2#0#0@@0| T@U) (|a#2#1#0@@0| T@U) ($h@@6 T@U) ) (!  (=> ($IsGoodHeap $h@@6) (= ($IsAlloc DatatypeTypeType (|#List.M.Cons| |a#2#0#0@@0| |a#2#1#0@@0|) (Tclass.List.M List.M$A@@8) $h@@6)  (and ($IsAllocBox |a#2#0#0@@0| List.M$A@@8 $h@@6) ($IsAlloc DatatypeTypeType |a#2#1#0@@0| (Tclass.List.M List.M$A@@8) $h@@6))))
 :pattern ( ($IsAlloc DatatypeTypeType (|#List.M.Cons| |a#2#0#0@@0| |a#2#1#0@@0|) (Tclass.List.M List.M$A@@8) $h@@6))
)))
(assert (forall ((|l#0@@4| T@U) (|$l#6#heap#0@@1| T@U) (|$l#6#x#0@@1| T@U) ) (! (= (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType SetType (|lambda#11| |l#0@@4|) |$l#6#heap#0@@1| |$l#6#x#0@@1|) |l#0@@4|)
 :pattern ( (MapType0Select (MapType1Type refType (MapType1Type FieldType BoxType)) BoxType SetType (|lambda#11| |l#0@@4|) |$l#6#heap#0@@1| |$l#6#x#0@@1|))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun |y#1_0_4_0@0| () T@U)
(declare-fun List._default.Associativity$A () T@U)
(declare-fun |$lambdaHeap#1_0_4_0@0| () T@U)
(declare-fun |$_Frame#l1_0_4_0@0| () T@U)
(declare-fun |##m#1_0_4_4@0| () T@U)
(declare-fun List._default.Associativity$B () T@U)
(declare-fun |f#0@@14| () T@U)
(declare-fun |g#0| () T@U)
(declare-fun List._default.Associativity$C () T@U)
(declare-fun |lambdaResult#1_0_4_0| () T@U)
(declare-fun $Heap@1 () T@U)
(declare-fun |##f#1_0_4_4@0| () T@U)
(declare-fun |xs#1_0@0| () T@U)
(declare-fun |##xss#1_0_4_0@0| () T@U)
(declare-fun |##ys#1_0_4_1@0| () T@U)
(declare-fun |x#1_0@0| () T@U)
(declare-fun |##m#1_0_4_0@0| () T@U)
(declare-fun $Heap@@6 () T@U)
(declare-fun |##xs#1_0_4_0@0| () T@U)
(declare-fun |##m#1_0_4_1@0| () T@U)
(declare-fun |##ys#1_0_4_0@0| () T@U)
(declare-fun |m#0@@4| () T@U)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun |##m#1_0_4_3@0| () T@U)
(declare-fun |##xs#1_0_4_1@0| () T@U)
(declare-fun |y#1_0_3_0@0| () T@U)
(declare-fun |$lambdaHeap#1_0_3_0@0| () T@U)
(declare-fun |$_Frame#l1_0_3_0@0| () T@U)
(declare-fun |##m#1_0_3_1@0| () T@U)
(declare-fun |lambdaResult#1_0_3_0| () T@U)
(declare-fun |y#1_0_3_1@0| () T@U)
(declare-fun |$lambdaHeap#1_0_3_1@0| () T@U)
(declare-fun |$_Frame#l1_0_3_1@0| () T@U)
(declare-fun |##m#1_0_3_3@0| () T@U)
(declare-fun |lambdaResult#1_0_3_1| () T@U)
(declare-fun |##f#1_0_3_4@0| () T@U)
(declare-fun |##xss#1_0_3_1@0| () T@U)
(declare-fun |##f#1_0_3_1@0| () T@U)
(declare-fun |##xss#1_0_3_0@0| () T@U)
(declare-fun |##ys#1_0_3_0@0| () T@U)
(declare-fun |##m#1_0_3_2@0| () T@U)
(declare-fun |##m#1_0_3_0@0| () T@U)
(declare-fun |##xs#1_0_3_0@0| () T@U)
(declare-fun |y#1_0_2_0@0| () T@U)
(declare-fun |$lambdaHeap#1_0_2_0@0| () T@U)
(declare-fun |$_Frame#l1_0_2_0@0| () T@U)
(declare-fun |##m#1_0_2_1@0| () T@U)
(declare-fun |lambdaResult#1_0_2_0| () T@U)
(declare-fun |y#1_0_2_1@0| () T@U)
(declare-fun |$lambdaHeap#1_0_2_1@0| () T@U)
(declare-fun |$_Frame#l1_0_2_1@0| () T@U)
(declare-fun |##m#1_0_2_2@0| () T@U)
(declare-fun |lambdaResult#1_0_2_1| () T@U)
(declare-fun |##f#1_0_2_3@0| () T@U)
(declare-fun |##xss#1_0_2_1@0| () T@U)
(declare-fun |##f#1_0_2_1@0| () T@U)
(declare-fun |##xss#1_0_2_0@0| () T@U)
(declare-fun |##xs#1_0_2_1@0| () T@U)
(declare-fun |##m#1_0_2_0@0| () T@U)
(declare-fun |y#1_0_1_0@0| () T@U)
(declare-fun |$lambdaHeap#1_0_1_0@0| () T@U)
(declare-fun |$_Frame#l1_0_1_0@0| () T@U)
(declare-fun |##m#1_0_1_0@0| () T@U)
(declare-fun |lambdaResult#1_0_1_0| () T@U)
(declare-fun |y#1_0_1_1@0| () T@U)
(declare-fun |$lambdaHeap#1_0_1_1@0| () T@U)
(declare-fun |$_Frame#l1_0_1_1@0| () T@U)
(declare-fun |##m#1_0_1_2@0| () T@U)
(declare-fun |lambdaResult#1_0_1_1| () T@U)
(declare-fun |##f#1_0_1_2@0| () T@U)
(declare-fun |##f#1_0_1_0@0| () T@U)
(declare-fun |##xss#1_0_1_0@0| () T@U)
(declare-fun |##m#1_0_1_1@0| () T@U)
(declare-fun |##xs#1_0_1_0@0| () T@U)
(declare-fun |y#1_0_0_0@0| () T@U)
(declare-fun |$lambdaHeap#1_0_0_0@0| () T@U)
(declare-fun |$_Frame#l1_0_0_0@0| () T@U)
(declare-fun |##m#1_0_0_1@0| () T@U)
(declare-fun |lambdaResult#1_0_0_0| () T@U)
(declare-fun |x#1_0_0_0@0| () T@U)
(declare-fun |$lambdaHeap#1_0_0_1@0| () T@U)
(declare-fun |$_Frame#l1_0_0_1@0| () T@U)
(declare-fun |##m#1_0_0_3@0| () T@U)
(declare-fun |lambdaResult#1_0_0_1| () T@U)
(declare-fun |##f#1_0_0_2@0| () T@U)
(declare-fun |##f#1_0_0_0@0| () T@U)
(declare-fun |##m#1_0_0_0@0| () T@U)
(declare-fun |##xs#1_0_5_0@0| () T@U)
(declare-fun |##ys#1_0_5_0@0| () T@U)
(declare-fun |##m#1_0_5_0@0| () T@U)
(declare-fun |xs##1_0_5_0@0| () T@U)
(declare-fun |ys##1_0_5_0@0| () T@U)
(declare-fun $Heap@0 () T@U)
(declare-fun |##m#1_0_5_3@0| () T@U)
(declare-fun |##xs#1_0_5_1@0| () T@U)
(declare-fun |##m#1_0_5_4@0| () T@U)
(declare-fun |##ys#1_0_5_1@0| () T@U)
(declare-fun |##m#1_0_6_1@0| () T@U)
(declare-fun |##m#1_0_6_0@0| () T@U)
(declare-fun |##xs#1_0_6_0@0| () T@U)
(declare-fun |##ys#1_0_6_0@0| () T@U)
(declare-fun |##m#1_0_6_2@0| () T@U)
(declare-fun |##m#1_0_7_0@0| () T@U)
(declare-fun |##m#1_0_7_3@0| () T@U)
(declare-fun |##m#1_0_7_2@0| () T@U)
(declare-fun |x#0_0_1_0@0| () T@U)
(declare-fun |$lambdaHeap#0_0_1_0@0| () T@U)
(declare-fun |$_Frame#l0_0_1_0@0| () T@U)
(declare-fun |##m#0_0_1_1@0| () T@U)
(declare-fun |lambdaResult#0_0_1_0| () T@U)
(declare-fun |##f#0_0_1_0@0| () T@U)
(declare-fun |##m#0_0_1_0@0| () T@U)
(declare-fun |x#0_0_0_0@0| () T@U)
(declare-fun |$lambdaHeap#0_0_0_0@0| () T@U)
(declare-fun |$_Frame#l0_0_0_0@0| () T@U)
(declare-fun |##m#0_0_0_1@0| () T@U)
(declare-fun |lambdaResult#0_0_0_0| () T@U)
(declare-fun |x#0_0_0_1@0| () T@U)
(declare-fun |$lambdaHeap#0_0_0_1@0| () T@U)
(declare-fun |$_Frame#l0_0_0_1@0| () T@U)
(declare-fun |##m#0_0_0_3@0| () T@U)
(declare-fun |lambdaResult#0_0_0_1| () T@U)
(declare-fun |##f#0_0_0_2@0| () T@U)
(declare-fun |##f#0_0_0_0@0| () T@U)
(declare-fun |##m#0_0_0_0@0| () T@U)
(declare-fun |_mcc#0#1_0@0| () T@U)
(declare-fun |_mcc#1#1_0@0| () T@U)
(declare-fun |let#1_0#0#0| () T@U)
(declare-fun |let#1_1#0#0| () T@U)
(declare-fun |##m#0_0_2_0@0| () T@U)
(declare-fun |##m#0_0_3_1@0| () T@U)
(declare-fun |##m#0_0_3_0@0| () T@U)
(declare-fun |##m#0_0_3_2@0| () T@U)
(declare-fun |##m#0_0_4_0@0| () T@U)
(declare-fun |##m#0_0_4_3@0| () T@U)
(declare-fun |##m#0_0_4_2@0| () T@U)
(declare-fun $_ModifiesFrame@0 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 99) (let ((anon9_correct true))
(let ((anon76_Else_correct  (=> (and (not (and ($IsBox |y#1_0_4_0@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_4_0@0| List._default.Associativity$A |$lambdaHeap#1_0_4_0@0|))) (= (ControlFlow 0 93) 91)) anon9_correct)))
(let ((anon76_Then_correct  (=> (and (and ($IsBox |y#1_0_4_0@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_4_0@0| List._default.Associativity$A |$lambdaHeap#1_0_4_0@0|)) (= |$_Frame#l1_0_4_0@0| (|lambda#0| null |$lambdaHeap#1_0_4_0@0| alloc false))) (=> (and (and (and (= |##m#1_0_4_4@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_4_0@0| |f#0@@14| |y#1_0_4_0@0|))) ($IsAlloc DatatypeTypeType |##m#1_0_4_4@0| (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_4_0@0|)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) |$lambdaHeap#1_0_4_0@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_4_0@0| |f#0@@14| |y#1_0_4_0@0|)) |g#0|))) (and (and (= |lambdaResult#1_0_4_0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@1 |f#0@@14| |y#1_0_4_0@0|)) |g#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@1 |f#0@@14| |y#1_0_4_0@0|)) |g#0|)) (and ($Is DatatypeTypeType |lambdaResult#1_0_4_0| (Tclass.List.M List._default.Associativity$C)) (= (ControlFlow 0 92) 91)))) anon9_correct))))
(let ((anon75_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#1_0_4_0@0|) (or (= $Heap@1 |$lambdaHeap#1_0_4_0@0|) ($HeapSucc $Heap@1 |$lambdaHeap#1_0_4_0@0|))) (and (=> (= (ControlFlow 0 94) 92) anon76_Then_correct) (=> (= (ControlFlow 0 94) 93) anon76_Else_correct)))))
(let ((anon75_Else_correct  (=> (= |##f#1_0_4_4@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (=> (and (and (and (and ($IsAlloc HandleTypeType |##f#1_0_4_4@0| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$C)) $Heap@1) (|List.__default.Map#canCall| List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (and (= |##xss#1_0_4_0@0| (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) ($IsAlloc DatatypeTypeType |##xss#1_0_4_0@0| (Tclass.List.M (Tclass.List.M List._default.Associativity$C)) $Heap@1))) (and (and (|List.__default.Join#canCall| List._default.Associativity$C (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (= |##ys#1_0_4_1@0| (List.__default.Join List._default.Associativity$C ($LS $LZ) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (and ($IsAlloc DatatypeTypeType |##ys#1_0_4_1@0| (Tclass.List.M List._default.Associativity$C) $Heap@1) (|List.__default.Concat#canCall| List._default.Associativity$C (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@1 |f#0@@14| |x#1_0@0|)) |g#0|) (List.__default.Join List._default.Associativity$C ($LS $LZ) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))))) (and (and (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@1 |f#0@@14| |x#1_0@0|)) |g#0|) (and (and (forall ((|$l#1_0_4_9#y#0| T@U) (|$l#1_0_4_9#heap#0| T@U) )  (=> (and ($IsBox |$l#1_0_4_9#y#0| List._default.Associativity$A) ($IsGoodHeap |$l#1_0_4_9#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#1_0_4_9#heap#0| |f#0@@14| |$l#1_0_4_9#y#0|)) |g#0|))) (|List.__default.Map#canCall| List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (|List.__default.Join#canCall| List._default.Associativity$C (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (|List.__default.Concat#canCall| List._default.Associativity$C (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@1 |f#0@@14| |x#1_0@0|)) |g#0|) (List.__default.Join List._default.Associativity$C ($LS $LZ) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (= (ControlFlow 0 90) (- 0 89)))) (|List.M#Equal| (List.__default.Concat List._default.Associativity$C ($LS ($LS $LZ)) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@1 |f#0@@14| |x#1_0@0|)) |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|)) (List.__default.Concat List._default.Associativity$C ($LS ($LS $LZ)) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@1 |f#0@@14| |x#1_0@0|)) |g#0|) (List.__default.Join List._default.Associativity$C ($LS ($LS $LZ)) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS ($LS $LZ)) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))))))))
(let ((anon74_Then_correct  (=> (and (and (= |##m#1_0_4_0@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|))) ($IsAlloc DatatypeTypeType |##m#1_0_4_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|))) (=> (and (and (and (and (= |##xs#1_0_4_0@0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|)) ($IsAlloc DatatypeTypeType |##xs#1_0_4_0@0| (Tclass.List.M List._default.Associativity$C) $Heap@@6)) (and ($IsAlloc DatatypeTypeType |xs#1_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6) ($IsAlloc HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B)) $Heap@@6))) (and (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) (= |##m#1_0_4_1@0| (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|))) (and ($IsAlloc DatatypeTypeType |##m#1_0_4_1@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6) ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6)))) (and (and (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|) (= |##ys#1_0_4_0@0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|))) (and ($IsAlloc DatatypeTypeType |##ys#1_0_4_0@0| (Tclass.List.M List._default.Associativity$C) $Heap@@6) (|List.__default.Concat#canCall| List._default.Associativity$C (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|)))) (and (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|) (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|))) (|List.__default.Concat#canCall| List._default.Associativity$C (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|))))) (and (=> (= (ControlFlow 0 95) (- 0 96)) (< (DtRank |xs#1_0@0|) (DtRank |m#0@@4|))) (=> (< (DtRank |xs#1_0@0|) (DtRank |m#0@@4|)) (=> (and ($IsGoodHeap $Heap@1) ($IsHeapAnchor $Heap@1)) (=> (and (and (and (and (|$IsA#List.M| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|)) (|$IsA#List.M| (List.__default.Bind List._default.Associativity$A List._default.Associativity$C |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))) (and (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|)) (and (forall ((|$l#4#x#0| T@U) (|$l#4#heap#0| T@U) )  (=> (and ($IsBox |$l#4#x#0| List._default.Associativity$A) ($IsGoodHeap |$l#4#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#4#heap#0| |f#0@@14| |$l#4#x#0|)) |g#0|))) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (|List.M#Equal| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|) (List.__default.Bind List._default.Associativity$A List._default.Associativity$C |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))) (and (and (and (= $Heap@@6 $Heap@1) (= |##m#1_0_4_3@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@1 |f#0@@14| |x#1_0@0|)))) (and ($IsAlloc DatatypeTypeType |##m#1_0_4_3@0| (Tclass.List.M List._default.Associativity$B) $Heap@1) ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@1))) (and (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@1 |f#0@@14| |x#1_0@0|)) |g#0|) (= |##xs#1_0_4_1@0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@1 |f#0@@14| |x#1_0@0|)) |g#0|))) (and ($IsAlloc DatatypeTypeType |##xs#1_0_4_1@0| (Tclass.List.M List._default.Associativity$C) $Heap@1) ($IsAlloc DatatypeTypeType |xs#1_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@1))))) (and (=> (= (ControlFlow 0 95) 94) anon75_Then_correct) (=> (= (ControlFlow 0 95) 90) anon75_Else_correct))))))))))
(let ((anon14_correct true))
(let ((anon79_Else_correct  (=> (and (not (and ($IsBox |y#1_0_3_0@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_3_0@0| List._default.Associativity$A |$lambdaHeap#1_0_3_0@0|))) (= (ControlFlow 0 86) 84)) anon14_correct)))
(let ((anon79_Then_correct  (=> (and (and ($IsBox |y#1_0_3_0@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_3_0@0| List._default.Associativity$A |$lambdaHeap#1_0_3_0@0|)) (= |$_Frame#l1_0_3_0@0| (|lambda#0| null |$lambdaHeap#1_0_3_0@0| alloc false))) (=> (and (and (and (= |##m#1_0_3_1@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_3_0@0| |f#0@@14| |y#1_0_3_0@0|))) ($IsAlloc DatatypeTypeType |##m#1_0_3_1@0| (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_3_0@0|)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) |$lambdaHeap#1_0_3_0@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_3_0@0| |f#0@@14| |y#1_0_3_0@0|)) |g#0|))) (and (and (= |lambdaResult#1_0_3_0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_3_0@0|)) |g#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_3_0@0|)) |g#0|)) (and ($Is DatatypeTypeType |lambdaResult#1_0_3_0| (Tclass.List.M List._default.Associativity$C)) (= (ControlFlow 0 85) 84)))) anon14_correct))))
(let ((anon78_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#1_0_3_0@0|) (or (= $Heap@@6 |$lambdaHeap#1_0_3_0@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#1_0_3_0@0|))) (and (=> (= (ControlFlow 0 87) 85) anon79_Then_correct) (=> (= (ControlFlow 0 87) 86) anon79_Else_correct)))))
(let ((anon18_correct true))
(let ((anon81_Else_correct  (=> (and (not (and ($IsBox |y#1_0_3_1@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_3_1@0| List._default.Associativity$A |$lambdaHeap#1_0_3_1@0|))) (= (ControlFlow 0 81) 79)) anon18_correct)))
(let ((anon81_Then_correct  (=> (and (and ($IsBox |y#1_0_3_1@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_3_1@0| List._default.Associativity$A |$lambdaHeap#1_0_3_1@0|)) (= |$_Frame#l1_0_3_1@0| (|lambda#0| null |$lambdaHeap#1_0_3_1@0| alloc false))) (=> (and (and (and (= |##m#1_0_3_3@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_3_1@0| |f#0@@14| |y#1_0_3_1@0|))) ($IsAlloc DatatypeTypeType |##m#1_0_3_3@0| (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_3_1@0|)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) |$lambdaHeap#1_0_3_1@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_3_1@0| |f#0@@14| |y#1_0_3_1@0|)) |g#0|))) (and (and (= |lambdaResult#1_0_3_1| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_3_1@0|)) |g#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_3_1@0|)) |g#0|)) (and ($Is DatatypeTypeType |lambdaResult#1_0_3_1| (Tclass.List.M List._default.Associativity$C)) (= (ControlFlow 0 80) 79)))) anon18_correct))))
(let ((anon80_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#1_0_3_1@0|) (or (= $Heap@@6 |$lambdaHeap#1_0_3_1@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#1_0_3_1@0|))) (and (=> (= (ControlFlow 0 82) 80) anon81_Then_correct) (=> (= (ControlFlow 0 82) 81) anon81_Else_correct)))))
(let ((anon80_Else_correct  (=> (and (= |##f#1_0_3_4@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#1_0_3_4@0| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$C)) $Heap@@6)) (=> (and (and (|List.__default.Map#canCall| List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (= |##xss#1_0_3_1@0| (|#List.M.Cons| ($Box DatatypeTypeType (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|)) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (and ($IsAlloc DatatypeTypeType |##xss#1_0_3_1@0| (Tclass.List.M (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Join#canCall| List._default.Associativity$C (|#List.M.Cons| ($Box DatatypeTypeType (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|)) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))))) (=> (and (and (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|) (and (forall ((|$l#1_0_3_20#y#0| T@U) (|$l#1_0_3_20#heap#0| T@U) )  (=> (and ($IsBox |$l#1_0_3_20#y#0| List._default.Associativity$A) ($IsGoodHeap |$l#1_0_3_20#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#1_0_3_20#heap#0| |f#0@@14| |$l#1_0_3_20#y#0|)) |g#0|))) (|List.__default.Map#canCall| List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))) (|List.__default.Join#canCall| List._default.Associativity$C (|#List.M.Cons| ($Box DatatypeTypeType (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|)) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (= (ControlFlow 0 78) (- 0 77))) (|List.M#Equal| (List.__default.Concat List._default.Associativity$C ($LS ($LS $LZ)) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|) (List.__default.Join List._default.Associativity$C ($LS ($LS $LZ)) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS ($LS $LZ)) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))) (List.__default.Join List._default.Associativity$C ($LS ($LS $LZ)) (|#List.M.Cons| ($Box DatatypeTypeType (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|)) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS ($LS $LZ)) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))))))))
(let ((anon78_Else_correct  (=> (= |##f#1_0_3_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (=> (and (and (and ($IsAlloc HandleTypeType |##f#1_0_3_1@0| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Map#canCall| List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (and (= |##xss#1_0_3_0@0| (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) ($IsAlloc DatatypeTypeType |##xss#1_0_3_0@0| (Tclass.List.M (Tclass.List.M List._default.Associativity$C)) $Heap@@6))) (and (and (|List.__default.Join#canCall| List._default.Associativity$C (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (= |##ys#1_0_3_0@0| (List.__default.Join List._default.Associativity$C ($LS $LZ) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (and ($IsAlloc DatatypeTypeType |##ys#1_0_3_0@0| (Tclass.List.M List._default.Associativity$C) $Heap@@6) (|List.__default.Concat#canCall| List._default.Associativity$C (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|) (List.__default.Join List._default.Associativity$C ($LS $LZ) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))))) (=> (and (and (and (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|) (and (and (forall ((|$l#1_0_3_9#y#0| T@U) (|$l#1_0_3_9#heap#0| T@U) )  (=> (and ($IsBox |$l#1_0_3_9#y#0| List._default.Associativity$A) ($IsGoodHeap |$l#1_0_3_9#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#1_0_3_9#heap#0| |f#0@@14| |$l#1_0_3_9#y#0|)) |g#0|))) (|List.__default.Map#canCall| List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (|List.__default.Join#canCall| List._default.Associativity$C (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (|List.__default.Concat#canCall| List._default.Associativity$C (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|) (List.__default.Join List._default.Associativity$C ($LS $LZ) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (= |##m#1_0_3_2@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)))) (and (and ($IsAlloc DatatypeTypeType |##m#1_0_3_2@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6) ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6)) (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|) ($IsAlloc DatatypeTypeType |xs#1_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6)))) (and (=> (= (ControlFlow 0 83) 82) anon80_Then_correct) (=> (= (ControlFlow 0 83) 78) anon80_Else_correct)))))))
(let ((anon77_Then_correct  (=> (= |##m#1_0_3_0@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|))) (=> (and ($IsAlloc DatatypeTypeType |##m#1_0_3_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6) ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6)) (=> (and (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|) (= |##xs#1_0_3_0@0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|))) (and ($IsAlloc DatatypeTypeType |##xs#1_0_3_0@0| (Tclass.List.M List._default.Associativity$C) $Heap@@6) ($IsAlloc DatatypeTypeType |xs#1_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6))) (and (=> (= (ControlFlow 0 88) 87) anon78_Then_correct) (=> (= (ControlFlow 0 88) 83) anon78_Else_correct)))))))
(let ((anon23_correct true))
(let ((anon84_Else_correct  (=> (and (not (and ($IsBox |y#1_0_2_0@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_2_0@0| List._default.Associativity$A |$lambdaHeap#1_0_2_0@0|))) (= (ControlFlow 0 74) 72)) anon23_correct)))
(let ((anon84_Then_correct  (=> (and (and ($IsBox |y#1_0_2_0@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_2_0@0| List._default.Associativity$A |$lambdaHeap#1_0_2_0@0|)) (= |$_Frame#l1_0_2_0@0| (|lambda#0| null |$lambdaHeap#1_0_2_0@0| alloc false))) (=> (and (and (and (= |##m#1_0_2_1@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_2_0@0| |f#0@@14| |y#1_0_2_0@0|))) ($IsAlloc DatatypeTypeType |##m#1_0_2_1@0| (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_2_0@0|)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) |$lambdaHeap#1_0_2_0@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_2_0@0| |f#0@@14| |y#1_0_2_0@0|)) |g#0|))) (and (and (= |lambdaResult#1_0_2_0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_2_0@0|)) |g#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_2_0@0|)) |g#0|)) (and ($Is DatatypeTypeType |lambdaResult#1_0_2_0| (Tclass.List.M List._default.Associativity$C)) (= (ControlFlow 0 73) 72)))) anon23_correct))))
(let ((anon83_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#1_0_2_0@0|) (or (= $Heap@@6 |$lambdaHeap#1_0_2_0@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#1_0_2_0@0|))) (and (=> (= (ControlFlow 0 75) 73) anon84_Then_correct) (=> (= (ControlFlow 0 75) 74) anon84_Else_correct)))))
(let ((anon27_correct true))
(let ((anon86_Else_correct  (=> (and (not (and ($IsBox |y#1_0_2_1@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_2_1@0| List._default.Associativity$A |$lambdaHeap#1_0_2_1@0|))) (= (ControlFlow 0 69) 67)) anon27_correct)))
(let ((anon86_Then_correct  (=> (and (and ($IsBox |y#1_0_2_1@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_2_1@0| List._default.Associativity$A |$lambdaHeap#1_0_2_1@0|)) (= |$_Frame#l1_0_2_1@0| (|lambda#0| null |$lambdaHeap#1_0_2_1@0| alloc false))) (=> (and (and (and (= |##m#1_0_2_2@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_2_1@0| |f#0@@14| |y#1_0_2_1@0|))) ($IsAlloc DatatypeTypeType |##m#1_0_2_2@0| (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_2_1@0|)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) |$lambdaHeap#1_0_2_1@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_2_1@0| |f#0@@14| |y#1_0_2_1@0|)) |g#0|))) (and (and (= |lambdaResult#1_0_2_1| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_2_1@0|)) |g#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_2_1@0|)) |g#0|)) (and ($Is DatatypeTypeType |lambdaResult#1_0_2_1| (Tclass.List.M List._default.Associativity$C)) (= (ControlFlow 0 68) 67)))) anon27_correct))))
(let ((anon85_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#1_0_2_1@0|) (or (= $Heap@@6 |$lambdaHeap#1_0_2_1@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#1_0_2_1@0|))) (and (=> (= (ControlFlow 0 70) 68) anon86_Then_correct) (=> (= (ControlFlow 0 70) 69) anon86_Else_correct)))))
(let ((anon85_Else_correct  (=> (and (= |##f#1_0_2_3@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#1_0_2_3@0| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$C)) $Heap@@6)) (=> (and (and (|List.__default.Map#canCall| List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (= |##xss#1_0_2_1@0| (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))) (and ($IsAlloc DatatypeTypeType |##xss#1_0_2_1@0| (Tclass.List.M (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Join#canCall| List._default.Associativity$C (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (=> (and (and (and (forall ((|$l#1_0_2_16#y#0| T@U) (|$l#1_0_2_16#heap#0| T@U) )  (=> (and ($IsBox |$l#1_0_2_16#y#0| List._default.Associativity$A) ($IsGoodHeap |$l#1_0_2_16#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#1_0_2_16#heap#0| |f#0@@14| |$l#1_0_2_16#y#0|)) |g#0|))) (|List.__default.Map#canCall| List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (|List.__default.Join#canCall| List._default.Associativity$C (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))) (= (ControlFlow 0 66) (- 0 65))) (|List.M#Equal| (List.__default.Join List._default.Associativity$C ($LS ($LS $LZ)) (|#List.M.Cons| ($Box DatatypeTypeType (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|)) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS ($LS $LZ)) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))) (List.__default.Join List._default.Associativity$C ($LS ($LS $LZ)) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS ($LS $LZ)) (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))))))))
(let ((anon83_Else_correct  (=> (and (= |##f#1_0_2_1@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#1_0_2_1@0| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$C)) $Heap@@6)) (=> (and (and (|List.__default.Map#canCall| List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (= |##xss#1_0_2_0@0| (|#List.M.Cons| ($Box DatatypeTypeType (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|)) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (and ($IsAlloc DatatypeTypeType |##xss#1_0_2_0@0| (Tclass.List.M (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Join#canCall| List._default.Associativity$C (|#List.M.Cons| ($Box DatatypeTypeType (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|)) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))))) (=> (and (and (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|) (and (forall ((|$l#1_0_2_7#y#0| T@U) (|$l#1_0_2_7#heap#0| T@U) )  (=> (and ($IsBox |$l#1_0_2_7#y#0| List._default.Associativity$A) ($IsGoodHeap |$l#1_0_2_7#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#1_0_2_7#heap#0| |f#0@@14| |$l#1_0_2_7#y#0|)) |g#0|))) (|List.__default.Map#canCall| List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))) (|List.__default.Join#canCall| List._default.Associativity$C (|#List.M.Cons| ($Box DatatypeTypeType (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|)) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) |xs#1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (and (= |##xs#1_0_2_1@0| (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|)) ($IsAlloc DatatypeTypeType |##xs#1_0_2_1@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6))) (and (=> (= (ControlFlow 0 71) 70) anon85_Then_correct) (=> (= (ControlFlow 0 71) 66) anon85_Else_correct)))))))
(let ((anon82_Then_correct  (=> (= |##m#1_0_2_0@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|))) (=> (and (and ($IsAlloc DatatypeTypeType |##m#1_0_2_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6) ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6)) (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) |g#0|) ($IsAlloc DatatypeTypeType |xs#1_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6))) (and (=> (= (ControlFlow 0 76) 75) anon83_Then_correct) (=> (= (ControlFlow 0 76) 71) anon83_Else_correct))))))
(let ((anon32_correct true))
(let ((anon89_Else_correct  (=> (and (not (and ($IsBox |y#1_0_1_0@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_1_0@0| List._default.Associativity$A |$lambdaHeap#1_0_1_0@0|))) (= (ControlFlow 0 62) 60)) anon32_correct)))
(let ((anon89_Then_correct  (=> (and (and ($IsBox |y#1_0_1_0@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_1_0@0| List._default.Associativity$A |$lambdaHeap#1_0_1_0@0|)) (= |$_Frame#l1_0_1_0@0| (|lambda#0| null |$lambdaHeap#1_0_1_0@0| alloc false))) (=> (and (and (and (= |##m#1_0_1_0@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_1_0@0| |f#0@@14| |y#1_0_1_0@0|))) ($IsAlloc DatatypeTypeType |##m#1_0_1_0@0| (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_1_0@0|)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) |$lambdaHeap#1_0_1_0@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_1_0@0| |f#0@@14| |y#1_0_1_0@0|)) |g#0|))) (and (and (= |lambdaResult#1_0_1_0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_1_0@0|)) |g#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_1_0@0|)) |g#0|)) (and ($Is DatatypeTypeType |lambdaResult#1_0_1_0| (Tclass.List.M List._default.Associativity$C)) (= (ControlFlow 0 61) 60)))) anon32_correct))))
(let ((anon88_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#1_0_1_0@0|) (or (= $Heap@@6 |$lambdaHeap#1_0_1_0@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#1_0_1_0@0|))) (and (=> (= (ControlFlow 0 63) 61) anon89_Then_correct) (=> (= (ControlFlow 0 63) 62) anon89_Else_correct)))))
(let ((anon36_correct true))
(let ((anon91_Else_correct  (=> (and (not (and ($IsBox |y#1_0_1_1@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_1_1@0| List._default.Associativity$A |$lambdaHeap#1_0_1_1@0|))) (= (ControlFlow 0 57) 55)) anon36_correct)))
(let ((anon91_Then_correct  (=> (and (and ($IsBox |y#1_0_1_1@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_1_1@0| List._default.Associativity$A |$lambdaHeap#1_0_1_1@0|)) (= |$_Frame#l1_0_1_1@0| (|lambda#0| null |$lambdaHeap#1_0_1_1@0| alloc false))) (=> (and (and (and (= |##m#1_0_1_2@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_1_1@0| |f#0@@14| |y#1_0_1_1@0|))) ($IsAlloc DatatypeTypeType |##m#1_0_1_2@0| (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_1_1@0|)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) |$lambdaHeap#1_0_1_1@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_1_1@0| |f#0@@14| |y#1_0_1_1@0|)) |g#0|))) (and (and (= |lambdaResult#1_0_1_1| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_1_1@0|)) |g#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_1_1@0|)) |g#0|)) (and ($Is DatatypeTypeType |lambdaResult#1_0_1_1| (Tclass.List.M List._default.Associativity$C)) (= (ControlFlow 0 56) 55)))) anon36_correct))))
(let ((anon90_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#1_0_1_1@0|) (or (= $Heap@@6 |$lambdaHeap#1_0_1_1@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#1_0_1_1@0|))) (and (=> (= (ControlFlow 0 58) 56) anon91_Then_correct) (=> (= (ControlFlow 0 58) 57) anon91_Else_correct)))))
(let ((anon90_Else_correct  (=> (= |##f#1_0_1_2@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#1_0_1_2@0| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (=> (and (and (forall ((|$l#1_0_1_12#y#0| T@U) (|$l#1_0_1_12#heap#0| T@U) )  (=> (and ($IsBox |$l#1_0_1_12#y#0| List._default.Associativity$A) ($IsGoodHeap |$l#1_0_1_12#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#1_0_1_12#heap#0| |f#0@@14| |$l#1_0_1_12#y#0|)) |g#0|))) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (= (ControlFlow 0 54) (- 0 53))) (|List.M#Equal| (List.__default.Join List._default.Associativity$C ($LS ($LS $LZ)) (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS ($LS $LZ)) (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (List.__default.Bind List._default.Associativity$A List._default.Associativity$C (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))))))
(let ((anon88_Else_correct  (=> (and (= |##f#1_0_1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) ($IsAlloc HandleTypeType |##f#1_0_1_0@0| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$C)) $Heap@@6)) (=> (and (and (|List.__default.Map#canCall| List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (= |##xss#1_0_1_0@0| (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))) (and ($IsAlloc DatatypeTypeType |##xss#1_0_1_0@0| (Tclass.List.M (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Join#canCall| List._default.Associativity$C (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))) (=> (and (and (and (forall ((|$l#1_0_1_6#y#0| T@U) (|$l#1_0_1_6#heap#0| T@U) )  (=> (and ($IsBox |$l#1_0_1_6#y#0| List._default.Associativity$A) ($IsGoodHeap |$l#1_0_1_6#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#1_0_1_6#heap#0| |f#0@@14| |$l#1_0_1_6#y#0|)) |g#0|))) (|List.__default.Map#canCall| List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (|List.__default.Join#canCall| List._default.Associativity$C (List.__default.Map List._default.Associativity$A (Tclass.List.M List._default.Associativity$C) ($LS $LZ) (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))))) (and (= |##m#1_0_1_1@0| (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|)) ($IsAlloc DatatypeTypeType |##m#1_0_1_1@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6))) (and (=> (= (ControlFlow 0 59) 58) anon90_Then_correct) (=> (= (ControlFlow 0 59) 54) anon90_Else_correct)))))))
(let ((anon87_Then_correct  (=> (and (= |##xs#1_0_1_0@0| (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|)) ($IsAlloc DatatypeTypeType |##xs#1_0_1_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (and (=> (= (ControlFlow 0 64) 63) anon88_Then_correct) (=> (= (ControlFlow 0 64) 59) anon88_Else_correct)))))
(let ((anon41_correct true))
(let ((anon94_Else_correct  (=> (and (not (and ($IsBox |y#1_0_0_0@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_0_0@0| List._default.Associativity$A |$lambdaHeap#1_0_0_0@0|))) (= (ControlFlow 0 50) 48)) anon41_correct)))
(let ((anon94_Then_correct  (=> (and (and ($IsBox |y#1_0_0_0@0| List._default.Associativity$A) ($IsAllocBox |y#1_0_0_0@0| List._default.Associativity$A |$lambdaHeap#1_0_0_0@0|)) (= |$_Frame#l1_0_0_0@0| (|lambda#0| null |$lambdaHeap#1_0_0_0@0| alloc false))) (=> (and (and (and (= |##m#1_0_0_1@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_0_0@0| |f#0@@14| |y#1_0_0_0@0|))) ($IsAlloc DatatypeTypeType |##m#1_0_0_1@0| (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_0_0@0|)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) |$lambdaHeap#1_0_0_0@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_0_0@0| |f#0@@14| |y#1_0_0_0@0|)) |g#0|))) (and (and (= |lambdaResult#1_0_0_0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_0_0@0|)) |g#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |y#1_0_0_0@0|)) |g#0|)) (and ($Is DatatypeTypeType |lambdaResult#1_0_0_0| (Tclass.List.M List._default.Associativity$C)) (= (ControlFlow 0 49) 48)))) anon41_correct))))
(let ((anon93_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#1_0_0_0@0|) (or (= $Heap@@6 |$lambdaHeap#1_0_0_0@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#1_0_0_0@0|))) (and (=> (= (ControlFlow 0 51) 49) anon94_Then_correct) (=> (= (ControlFlow 0 51) 50) anon94_Else_correct)))))
(let ((anon45_correct true))
(let ((anon96_Else_correct  (=> (and (not (and ($IsBox |x#1_0_0_0@0| List._default.Associativity$A) ($IsAllocBox |x#1_0_0_0@0| List._default.Associativity$A |$lambdaHeap#1_0_0_1@0|))) (= (ControlFlow 0 45) 43)) anon45_correct)))
(let ((anon96_Then_correct  (=> (and (and ($IsBox |x#1_0_0_0@0| List._default.Associativity$A) ($IsAllocBox |x#1_0_0_0@0| List._default.Associativity$A |$lambdaHeap#1_0_0_1@0|)) (= |$_Frame#l1_0_0_1@0| (|lambda#0| null |$lambdaHeap#1_0_0_1@0| alloc false))) (=> (and (and (and (= |##m#1_0_0_3@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_0_1@0| |f#0@@14| |x#1_0_0_0@0|))) ($IsAlloc DatatypeTypeType |##m#1_0_0_3@0| (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_0_1@0|)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) |$lambdaHeap#1_0_0_1@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#1_0_0_1@0| |f#0@@14| |x#1_0_0_0@0|)) |g#0|))) (and (and (= |lambdaResult#1_0_0_1| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0_0_0@0|)) |g#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0_0_0@0|)) |g#0|)) (and ($Is DatatypeTypeType |lambdaResult#1_0_0_1| (Tclass.List.M List._default.Associativity$C)) (= (ControlFlow 0 44) 43)))) anon45_correct))))
(let ((anon95_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#1_0_0_1@0|) (or (= $Heap@@6 |$lambdaHeap#1_0_0_1@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#1_0_0_1@0|))) (and (=> (= (ControlFlow 0 46) 44) anon96_Then_correct) (=> (= (ControlFlow 0 46) 45) anon96_Else_correct)))))
(let ((anon95_Else_correct  (=> (= |##f#1_0_0_2@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#1_0_0_2@0| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C |m#0@@4| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (=> (and (and (forall ((|$l#1_0_0_8#x#0| T@U) (|$l#1_0_0_8#heap#0| T@U) )  (=> (and ($IsBox |$l#1_0_0_8#x#0| List._default.Associativity$A) ($IsGoodHeap |$l#1_0_0_8#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#1_0_0_8#heap#0| |f#0@@14| |$l#1_0_0_8#x#0|)) |g#0|))) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C |m#0@@4| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (= (ControlFlow 0 42) (- 0 41))) (|List.M#Equal| (List.__default.Bind List._default.Associativity$A List._default.Associativity$C (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (List.__default.Bind List._default.Associativity$A List._default.Associativity$C |m#0@@4| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))))))
(let ((anon93_Else_correct  (=> (= |##f#1_0_0_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#1_0_0_0@0| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (=> (and (and (forall ((|$l#1_0_0_3#y#0| T@U) (|$l#1_0_0_3#heap#0| T@U) )  (=> (and ($IsBox |$l#1_0_0_3#y#0| List._default.Associativity$A) ($IsGoodHeap |$l#1_0_0_3#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#1_0_0_3#heap#0| |f#0@@14| |$l#1_0_0_3#y#0|)) |g#0|))) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) ($IsAlloc DatatypeTypeType |m#0@@4| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (and (=> (= (ControlFlow 0 47) 46) anon95_Then_correct) (=> (= (ControlFlow 0 47) 42) anon95_Else_correct)))))))
(let ((anon92_Then_correct  (=> (and (= |##m#1_0_0_0@0| (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|)) ($IsAlloc DatatypeTypeType |##m#1_0_0_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (and (=> (= (ControlFlow 0 52) 51) anon93_Then_correct) (=> (= (ControlFlow 0 52) 47) anon93_Else_correct)))))
(let ((anon73_Then_correct  (=> (and (and (and (= |##xs#1_0_5_0@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|))) ($IsAlloc DatatypeTypeType |##xs#1_0_5_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6)) (and ($IsAlloc DatatypeTypeType |xs#1_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6) ($IsAlloc HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B)) $Heap@@6))) (and (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) (= |##ys#1_0_5_0@0| (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|))) (and ($IsAlloc DatatypeTypeType |##ys#1_0_5_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6) (|List.__default.Concat#canCall| List._default.Associativity$B ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|))))) (=> (and (and (and (and (= |##m#1_0_5_0@0| (List.__default.Concat List._default.Associativity$B ($LS $LZ) ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|))) ($IsAlloc DatatypeTypeType |##m#1_0_5_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Concat List._default.Associativity$B ($LS $LZ) ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|)) |g#0|))) (and (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) (|List.__default.Concat#canCall| List._default.Associativity$B ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|))) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Concat List._default.Associativity$B ($LS $LZ) ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|)) |g#0|))) (and (and (and (= |xs##1_0_5_0@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|))) ($IsAlloc DatatypeTypeType |xs#1_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (and ($IsAlloc HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|))) (and (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) (= |ys##1_0_5_0@0| (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|))) (and ($IsGoodHeap $Heap@0) ($IsHeapAnchor $Heap@0))))) (=> (and (and (and (and (and (|$IsA#List.M| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Concat List._default.Associativity$B ($LS $LZ) |xs##1_0_5_0@0| |ys##1_0_5_0@0|) |g#0|)) (|$IsA#List.M| (List.__default.Concat List._default.Associativity$C ($LS $LZ) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C |xs##1_0_5_0@0| |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C |ys##1_0_5_0@0| |g#0|)))) (and (and (|List.__default.Concat#canCall| List._default.Associativity$B |xs##1_0_5_0@0| |ys##1_0_5_0@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Concat List._default.Associativity$B ($LS $LZ) |xs##1_0_5_0@0| |ys##1_0_5_0@0|) |g#0|)) (and (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C |xs##1_0_5_0@0| |g#0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C |ys##1_0_5_0@0| |g#0|)) (|List.__default.Concat#canCall| List._default.Associativity$C (List.__default.Bind List._default.Associativity$B List._default.Associativity$C |xs##1_0_5_0@0| |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C |ys##1_0_5_0@0| |g#0|))))) (and (|List.M#Equal| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Concat List._default.Associativity$B ($LS ($LS $LZ)) |xs##1_0_5_0@0| |ys##1_0_5_0@0|) |g#0|) (List.__default.Concat List._default.Associativity$C ($LS ($LS $LZ)) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C |xs##1_0_5_0@0| |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C |ys##1_0_5_0@0| |g#0|))) (= $Heap@@6 $Heap@0))) (and (and (and (= |##m#1_0_5_3@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@0 |f#0@@14| |x#1_0@0|))) ($IsAlloc DatatypeTypeType |##m#1_0_5_3@0| (Tclass.List.M List._default.Associativity$B) $Heap@0)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@0) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@0 |f#0@@14| |x#1_0@0|)) |g#0|))) (and (and (= |##xs#1_0_5_1@0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@0 |f#0@@14| |x#1_0@0|)) |g#0|)) ($IsAlloc DatatypeTypeType |##xs#1_0_5_1@0| (Tclass.List.M List._default.Associativity$C) $Heap@0)) (and ($IsAlloc DatatypeTypeType |xs#1_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@0) ($IsAlloc HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B)) $Heap@0))))) (and (and (and (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) (= |##m#1_0_5_4@0| (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|))) (and ($IsAlloc DatatypeTypeType |##m#1_0_5_4@0| (Tclass.List.M List._default.Associativity$B) $Heap@0) ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@0))) (and (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|) (= |##ys#1_0_5_1@0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|))) (and ($IsAlloc DatatypeTypeType |##ys#1_0_5_1@0| (Tclass.List.M List._default.Associativity$C) $Heap@0) (|List.__default.Concat#canCall| List._default.Associativity$C (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@0 |f#0@@14| |x#1_0@0|)) |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|))))) (and (and (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@0 |f#0@@14| |x#1_0@0|)) |g#0|) (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|))) (|List.__default.Concat#canCall| List._default.Associativity$C (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@0 |f#0@@14| |x#1_0@0|)) |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|))) (= (ControlFlow 0 39) (- 0 38))))) (|List.M#Equal| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Concat List._default.Associativity$B ($LS ($LS $LZ)) ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@0 |f#0@@14| |x#1_0@0|)) (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|)) |g#0|) (List.__default.Concat List._default.Associativity$C ($LS ($LS $LZ)) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@0 |f#0@@14| |x#1_0@0|)) |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) |g#0|))))))))
(let ((anon72_Then_correct  (=> (and (= |##m#1_0_6_1@0| (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|)) ($IsAlloc DatatypeTypeType |##m#1_0_6_1@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (=> (and (and ($IsAlloc HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) |f#0@@14|)) (and (= |##m#1_0_6_0@0| (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) |f#0@@14|)) ($IsAlloc DatatypeTypeType |##m#1_0_6_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6))) (=> (and (and (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) |f#0@@14|) |g#0|)) (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) |f#0@@14|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) |f#0@@14|) |g#0|))) (and (and (= |##xs#1_0_6_0@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|))) ($IsAlloc DatatypeTypeType |##xs#1_0_6_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6)) (and ($IsAlloc DatatypeTypeType |xs#1_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6) ($IsAlloc HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B)) $Heap@@6)))) (=> (and (and (and (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) (= |##ys#1_0_6_0@0| (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|))) (and ($IsAlloc DatatypeTypeType |##ys#1_0_6_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6) (|List.__default.Concat#canCall| List._default.Associativity$B ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|)))) (and (and (= |##m#1_0_6_2@0| (List.__default.Concat List._default.Associativity$B ($LS $LZ) ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|))) ($IsAlloc DatatypeTypeType |##m#1_0_6_2@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Concat List._default.Associativity$B ($LS $LZ) ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|)) |g#0|)))) (and (and (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|) (|List.__default.Concat#canCall| List._default.Associativity$B ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|))) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Concat List._default.Associativity$B ($LS $LZ) ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|)) |g#0|)) (= (ControlFlow 0 37) (- 0 36)))) (|List.M#Equal| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) |f#0@@14|) |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Concat List._default.Associativity$B ($LS ($LS $LZ)) ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#1_0@0|)) (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |xs#1_0@0| |f#0@@14|)) |g#0|))))))))
(let ((anon71_Then_correct  (=> ($IsAlloc DatatypeTypeType |m#0@@4| (Tclass.List.M List._default.Associativity$A) $Heap@@6) (=> (and (and ($IsAlloc HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|)) (and (= |##m#1_0_7_0@0| (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|)) ($IsAlloc DatatypeTypeType |##m#1_0_7_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6))) (=> (and (and (and (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|) |g#0|)) (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|) |g#0|))) (and (and (= |##m#1_0_7_3@0| (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|)) ($IsAlloc DatatypeTypeType |##m#1_0_7_3@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (and ($IsAlloc HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) |f#0@@14|)))) (and (and (and (= |##m#1_0_7_2@0| (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) |f#0@@14|)) ($IsAlloc DatatypeTypeType |##m#1_0_7_2@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) |f#0@@14|) |g#0|))) (and (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) |f#0@@14|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) |f#0@@14|) |g#0|)) (= (ControlFlow 0 35) (- 0 34))))) (|List.M#Equal| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|) |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (|#List.M.Cons| |x#1_0@0| |xs#1_0@0|) |f#0@@14|) |g#0|)))))))
(let ((anon70_Then_correct true))
(let ((anon56_correct true))
(let ((anon104_Else_correct  (=> (and (not (and ($IsBox |x#0_0_1_0@0| List._default.Associativity$A) ($IsAllocBox |x#0_0_1_0@0| List._default.Associativity$A |$lambdaHeap#0_0_1_0@0|))) (= (ControlFlow 0 28) 26)) anon56_correct)))
(let ((anon104_Then_correct  (=> (and (and ($IsBox |x#0_0_1_0@0| List._default.Associativity$A) ($IsAllocBox |x#0_0_1_0@0| List._default.Associativity$A |$lambdaHeap#0_0_1_0@0|)) (= |$_Frame#l0_0_1_0@0| (|lambda#0| null |$lambdaHeap#0_0_1_0@0| alloc false))) (=> (and (and (and (= |##m#0_0_1_1@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#0_0_1_0@0| |f#0@@14| |x#0_0_1_0@0|))) ($IsAlloc DatatypeTypeType |##m#0_0_1_1@0| (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#0_0_1_0@0|)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) |$lambdaHeap#0_0_1_0@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#0_0_1_0@0| |f#0@@14| |x#0_0_1_0@0|)) |g#0|))) (and (and (= |lambdaResult#0_0_1_0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#0_0_1_0@0|)) |g#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#0_0_1_0@0|)) |g#0|)) (and ($Is DatatypeTypeType |lambdaResult#0_0_1_0| (Tclass.List.M List._default.Associativity$C)) (= (ControlFlow 0 27) 26)))) anon56_correct))))
(let ((anon103_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_0_1_0@0|) (or (= $Heap@@6 |$lambdaHeap#0_0_1_0@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#0_0_1_0@0|))) (and (=> (= (ControlFlow 0 29) 27) anon104_Then_correct) (=> (= (ControlFlow 0 29) 28) anon104_Else_correct)))))
(let ((anon103_Else_correct  (=> (= |##f#0_0_1_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_0_1_0@0| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C (Lit DatatypeTypeType |#List.M.Nil|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (=> (and (and (forall ((|$l#0_0_1_3#x#0| T@U) (|$l#0_0_1_3#heap#0| T@U) )  (=> (and ($IsBox |$l#0_0_1_3#x#0| List._default.Associativity$A) ($IsGoodHeap |$l#0_0_1_3#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#0_0_1_3#heap#0| |f#0@@14| |$l#0_0_1_3#x#0|)) |g#0|))) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C (Lit DatatypeTypeType |#List.M.Nil|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (= (ControlFlow 0 25) (- 0 24))) (|List.M#Equal| |#List.M.Nil| (List.__default.Bind List._default.Associativity$A List._default.Associativity$C (Lit DatatypeTypeType |#List.M.Nil|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))))))
(let ((anon102_Then_correct  (=> (and (= |##m#0_0_1_0@0| (Lit DatatypeTypeType |#List.M.Nil|)) ($IsAlloc DatatypeTypeType |##m#0_0_1_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (and (=> (= (ControlFlow 0 30) 29) anon103_Then_correct) (=> (= (ControlFlow 0 30) 25) anon103_Else_correct)))))
(let ((anon61_correct true))
(let ((anon107_Else_correct  (=> (and (not (and ($IsBox |x#0_0_0_0@0| List._default.Associativity$A) ($IsAllocBox |x#0_0_0_0@0| List._default.Associativity$A |$lambdaHeap#0_0_0_0@0|))) (= (ControlFlow 0 21) 19)) anon61_correct)))
(let ((anon107_Then_correct  (=> (and (and ($IsBox |x#0_0_0_0@0| List._default.Associativity$A) ($IsAllocBox |x#0_0_0_0@0| List._default.Associativity$A |$lambdaHeap#0_0_0_0@0|)) (= |$_Frame#l0_0_0_0@0| (|lambda#0| null |$lambdaHeap#0_0_0_0@0| alloc false))) (=> (and (and (and (= |##m#0_0_0_1@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#0_0_0_0@0| |f#0@@14| |x#0_0_0_0@0|))) ($IsAlloc DatatypeTypeType |##m#0_0_0_1@0| (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#0_0_0_0@0|)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) |$lambdaHeap#0_0_0_0@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#0_0_0_0@0| |f#0@@14| |x#0_0_0_0@0|)) |g#0|))) (and (and (= |lambdaResult#0_0_0_0| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#0_0_0_0@0|)) |g#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#0_0_0_0@0|)) |g#0|)) (and ($Is DatatypeTypeType |lambdaResult#0_0_0_0| (Tclass.List.M List._default.Associativity$C)) (= (ControlFlow 0 20) 19)))) anon61_correct))))
(let ((anon106_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_0_0_0@0|) (or (= $Heap@@6 |$lambdaHeap#0_0_0_0@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#0_0_0_0@0|))) (and (=> (= (ControlFlow 0 22) 20) anon107_Then_correct) (=> (= (ControlFlow 0 22) 21) anon107_Else_correct)))))
(let ((anon65_correct true))
(let ((anon109_Else_correct  (=> (and (not (and ($IsBox |x#0_0_0_1@0| List._default.Associativity$A) ($IsAllocBox |x#0_0_0_1@0| List._default.Associativity$A |$lambdaHeap#0_0_0_1@0|))) (= (ControlFlow 0 16) 14)) anon65_correct)))
(let ((anon109_Then_correct  (=> (and (and ($IsBox |x#0_0_0_1@0| List._default.Associativity$A) ($IsAllocBox |x#0_0_0_1@0| List._default.Associativity$A |$lambdaHeap#0_0_0_1@0|)) (= |$_Frame#l0_0_0_1@0| (|lambda#0| null |$lambdaHeap#0_0_0_1@0| alloc false))) (=> (and (and (and (= |##m#0_0_0_3@0| ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#0_0_0_1@0| |f#0@@14| |x#0_0_0_1@0|))) ($IsAlloc DatatypeTypeType |##m#0_0_0_3@0| (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#0_0_0_1@0|)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) |$lambdaHeap#0_0_0_1@0|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$lambdaHeap#0_0_0_1@0| |f#0@@14| |x#0_0_0_1@0|)) |g#0|))) (and (and (= |lambdaResult#0_0_0_1| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#0_0_0_1@0|)) |g#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) $Heap@@6 |f#0@@14| |x#0_0_0_1@0|)) |g#0|)) (and ($Is DatatypeTypeType |lambdaResult#0_0_0_1| (Tclass.List.M List._default.Associativity$C)) (= (ControlFlow 0 15) 14)))) anon65_correct))))
(let ((anon108_Then_correct  (=> (and ($IsGoodHeap |$lambdaHeap#0_0_0_1@0|) (or (= $Heap@@6 |$lambdaHeap#0_0_0_1@0|) ($HeapSucc $Heap@@6 |$lambdaHeap#0_0_0_1@0|))) (and (=> (= (ControlFlow 0 17) 15) anon109_Then_correct) (=> (= (ControlFlow 0 17) 16) anon109_Else_correct)))))
(let ((anon108_Else_correct  (=> (= |##f#0_0_0_2@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_0_0_2@0| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C |m#0@@4| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (=> (and (and (forall ((|$l#0_0_0_8#x#0| T@U) (|$l#0_0_0_8#heap#0| T@U) )  (=> (and ($IsBox |$l#0_0_0_8#x#0| List._default.Associativity$A) ($IsGoodHeap |$l#0_0_0_8#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#0_0_0_8#heap#0| |f#0@@14| |$l#0_0_0_8#x#0|)) |g#0|))) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C |m#0@@4| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (= (ControlFlow 0 13) (- 0 12))) (|List.M#Equal| (List.__default.Bind List._default.Associativity$A List._default.Associativity$C (Lit DatatypeTypeType |#List.M.Nil|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (List.__default.Bind List._default.Associativity$A List._default.Associativity$C |m#0@@4| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))))))
(let ((anon106_Else_correct  (=> (= |##f#0_0_0_0@0| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ)))) (=> (and ($IsAlloc HandleTypeType |##f#0_0_0_0@0| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C (Lit DatatypeTypeType |#List.M.Nil|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (=> (and (and (forall ((|$l#0_0_0_3#x#0| T@U) (|$l#0_0_0_3#heap#0| T@U) )  (=> (and ($IsBox |$l#0_0_0_3#x#0| List._default.Associativity$A) ($IsGoodHeap |$l#0_0_0_3#heap#0|)) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C ($Unbox DatatypeTypeType (Apply1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |$l#0_0_0_3#heap#0| |f#0@@14| |$l#0_0_0_3#x#0|)) |g#0|))) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$C (Lit DatatypeTypeType |#List.M.Nil|) (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) ($IsAlloc DatatypeTypeType |m#0@@4| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (and (=> (= (ControlFlow 0 18) 17) anon108_Then_correct) (=> (= (ControlFlow 0 18) 13) anon108_Else_correct)))))))
(let ((anon105_Then_correct  (=> (and (= |##m#0_0_0_0@0| (Lit DatatypeTypeType |#List.M.Nil|)) ($IsAlloc DatatypeTypeType |##m#0_0_0_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (and (=> (= (ControlFlow 0 23) 22) anon106_Then_correct) (=> (= (ControlFlow 0 23) 18) anon106_Else_correct)))))
(let ((GeneratedUnifiedExit_correct  (=> (= (ControlFlow 0 10) (- 0 9)) (|List.M#Equal| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|) |g#0|) (List.__default.Bind List._default.Associativity$A List._default.Associativity$C |m#0@@4| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))))))
(let ((anon92_Else_correct  (=> (and (|List.M#Equal| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|) |g#0|) (List.__default.Bind List._default.Associativity$A List._default.Associativity$C |m#0@@4| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (= (ControlFlow 0 40) 10)) GeneratedUnifiedExit_correct)))
(let ((anon69_Then_correct  (=> (= |m#0@@4| (|#List.M.Cons| |_mcc#0#1_0@0| |_mcc#1#1_0@0|)) (=> (and ($IsBox |_mcc#0#1_0@0| List._default.Associativity$A) ($Is DatatypeTypeType |_mcc#1#1_0@0| (Tclass.List.M List._default.Associativity$A))) (=> (and (and (and (and ($Is DatatypeTypeType |xs#1_0@0| (Tclass.List.M List._default.Associativity$A)) ($IsAlloc DatatypeTypeType |xs#1_0@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (= |let#1_0#0#0| |_mcc#1#1_0@0|)) (and ($Is DatatypeTypeType |let#1_0#0#0| (Tclass.List.M List._default.Associativity$A)) (= |xs#1_0@0| |let#1_0#0#0|))) (and (and (and ($IsBox |x#1_0@0| List._default.Associativity$A) ($IsAllocBox |x#1_0@0| List._default.Associativity$A $Heap@@6)) (= |let#1_1#0#0| |_mcc#0#1_0@0|)) (and ($IsBox |let#1_1#0#0| List._default.Associativity$A) (= |x#1_0@0| |let#1_1#0#0|)))) (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 97) 33) anon70_Then_correct) (=> (= (ControlFlow 0 97) 35) anon71_Then_correct)) (=> (= (ControlFlow 0 97) 37) anon72_Then_correct)) (=> (= (ControlFlow 0 97) 39) anon73_Then_correct)) (=> (= (ControlFlow 0 97) 95) anon74_Then_correct)) (=> (= (ControlFlow 0 97) 88) anon77_Then_correct)) (=> (= (ControlFlow 0 97) 76) anon82_Then_correct)) (=> (= (ControlFlow 0 97) 64) anon87_Then_correct)) (=> (= (ControlFlow 0 97) 52) anon92_Then_correct)) (=> (= (ControlFlow 0 97) 40) anon92_Else_correct)))))))
(let ((anon105_Else_correct  (=> (and (|List.M#Equal| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|) |g#0|) (List.__default.Bind List._default.Associativity$A List._default.Associativity$C |m#0@@4| (Lit HandleTypeType (AtLayer HandleTypeType (|lambda#12| (Handle1 (|lambda#8| List._default.Associativity$B List._default.Associativity$C List._default.Associativity$A (Tclass.List.M List._default.Associativity$B) |f#0@@14| |g#0|) (|lambda#9| List._default.Associativity$A) (|lambda#11| (SetRef_to_SetBox (|lambda#10| false))))) ($LS $LZ))))) (= (ControlFlow 0 11) 10)) GeneratedUnifiedExit_correct)))
(let ((anon101_Then_correct  (=> (and (= |##m#0_0_2_0@0| (Lit DatatypeTypeType |#List.M.Nil|)) ($IsAlloc DatatypeTypeType |##m#0_0_2_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6)) (=> (and (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (Lit DatatypeTypeType |#List.M.Nil|) |g#0|)) (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (Lit DatatypeTypeType |#List.M.Nil|) |g#0|) (= (ControlFlow 0 8) (- 0 7)))) (|List.M#Equal| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (Lit DatatypeTypeType |#List.M.Nil|) |g#0|) |#List.M.Nil|)))))
(let ((anon100_Then_correct  (=> (and (and (and (and (= |##m#0_0_3_1@0| (Lit DatatypeTypeType |#List.M.Nil|)) ($IsAlloc DatatypeTypeType |##m#0_0_3_1@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (and ($IsAlloc HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B (Lit DatatypeTypeType |#List.M.Nil|) |f#0@@14|))) (and (and (= |##m#0_0_3_0@0| (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (Lit DatatypeTypeType |#List.M.Nil|) |f#0@@14|)) ($IsAlloc DatatypeTypeType |##m#0_0_3_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (Lit DatatypeTypeType |#List.M.Nil|) |f#0@@14|) |g#0|)))) (and (and (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B (Lit DatatypeTypeType |#List.M.Nil|) |f#0@@14|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (Lit DatatypeTypeType |#List.M.Nil|) |f#0@@14|) |g#0|)) (and (= |##m#0_0_3_2@0| (Lit DatatypeTypeType |#List.M.Nil|)) ($IsAlloc DatatypeTypeType |##m#0_0_3_2@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6))) (and (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (Lit DatatypeTypeType |#List.M.Nil|) |g#0|)) (and (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (Lit DatatypeTypeType |#List.M.Nil|) |g#0|) (= (ControlFlow 0 6) (- 0 5)))))) (|List.M#Equal| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (Lit DatatypeTypeType |#List.M.Nil|) |f#0@@14|) |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (Lit DatatypeTypeType |#List.M.Nil|) |g#0|)))))
(let ((anon99_Then_correct  (=> ($IsAlloc DatatypeTypeType |m#0@@4| (Tclass.List.M List._default.Associativity$A) $Heap@@6) (=> (and (and ($IsAlloc HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|)) (and (= |##m#0_0_4_0@0| (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|)) ($IsAlloc DatatypeTypeType |##m#0_0_4_0@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6))) (=> (and (and (and (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|) |g#0|)) (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|) |g#0|))) (and (and (= |##m#0_0_4_3@0| (Lit DatatypeTypeType |#List.M.Nil|)) ($IsAlloc DatatypeTypeType |##m#0_0_4_3@0| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (and ($IsAlloc HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B (Lit DatatypeTypeType |#List.M.Nil|) |f#0@@14|)))) (and (and (and (= |##m#0_0_4_2@0| (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (Lit DatatypeTypeType |#List.M.Nil|) |f#0@@14|)) ($IsAlloc DatatypeTypeType |##m#0_0_4_2@0| (Tclass.List.M List._default.Associativity$B) $Heap@@6)) (and ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (Lit DatatypeTypeType |#List.M.Nil|) |f#0@@14|) |g#0|))) (and (and (|List.__default.Bind#canCall| List._default.Associativity$A List._default.Associativity$B (Lit DatatypeTypeType |#List.M.Nil|) |f#0@@14|) (|List.__default.Bind#canCall| List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (Lit DatatypeTypeType |#List.M.Nil|) |f#0@@14|) |g#0|)) (= (ControlFlow 0 4) (- 0 3))))) (|List.M#Equal| (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B |m#0@@4| |f#0@@14|) |g#0|) (List.__default.Bind List._default.Associativity$B List._default.Associativity$C (List.__default.Bind List._default.Associativity$A List._default.Associativity$B (Lit DatatypeTypeType |#List.M.Nil|) |f#0@@14|) |g#0|)))))))
(let ((anon98_Then_correct true))
(let ((anon97_Then_correct  (=> (= |m#0@@4| |#List.M.Nil|) (and (and (and (and (and (and (=> (= (ControlFlow 0 31) 2) anon98_Then_correct) (=> (= (ControlFlow 0 31) 4) anon99_Then_correct)) (=> (= (ControlFlow 0 31) 6) anon100_Then_correct)) (=> (= (ControlFlow 0 31) 8) anon101_Then_correct)) (=> (= (ControlFlow 0 31) 30) anon102_Then_correct)) (=> (= (ControlFlow 0 31) 23) anon105_Then_correct)) (=> (= (ControlFlow 0 31) 11) anon105_Else_correct)))))
(let ((anon97_Else_correct true))
(let ((anon69_Else_correct  (=> (or (not (= |m#0@@4| (|#List.M.Cons| |_mcc#0#1_0@0| |_mcc#1#1_0@0|))) (not true)) (and (=> (= (ControlFlow 0 32) 31) anon97_Then_correct) (=> (= (ControlFlow 0 32) 1) anon97_Else_correct)))))
(let ((anon0_correct  (=> (= $_ModifiesFrame@0 (|lambda#0| null $Heap@@6 alloc false)) (and (=> (= (ControlFlow 0 98) 97) anon69_Then_correct) (=> (= (ControlFlow 0 98) 32) anon69_Else_correct)))))
(let ((PreconditionGeneratedEntry_correct  (=> (and ($IsGoodHeap $Heap@@6) ($IsHeapAnchor $Heap@@6)) (=> (and (and (and (and ($Is DatatypeTypeType |m#0@@4| (Tclass.List.M List._default.Associativity$A)) ($IsAlloc DatatypeTypeType |m#0@@4| (Tclass.List.M List._default.Associativity$A) $Heap@@6)) (|$IsA#List.M| |m#0@@4|)) (and ($Is HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B))) ($IsAlloc HandleTypeType |f#0@@14| (Tclass._System.___hTotalFunc1 List._default.Associativity$A (Tclass.List.M List._default.Associativity$B)) $Heap@@6))) (and (and ($Is HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C))) ($IsAlloc HandleTypeType |g#0| (Tclass._System.___hTotalFunc1 List._default.Associativity$B (Tclass.List.M List._default.Associativity$C)) $Heap@@6)) (and (= 5 $FunctionContextHeight) (= (ControlFlow 0 99) 98)))) anon0_correct))))
PreconditionGeneratedEntry_correct)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
