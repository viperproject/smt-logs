(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U T@U T@U) T@U)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@63 () Int)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 (T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@115 (T@U) Int)
(declare-fun $generated@@116 (T@U) Int)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 () T@T)
(declare-fun $generated@@127 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@128 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@T) T@T)
(declare-fun $generated@@133 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (! (= ($generated@@20 $generated@@22 ($generated@@21 $generated@@23) $generated@@24) ($generated@@20 $generated@@22 $generated@@23 $generated@@24))
 :pattern ( ($generated@@20 $generated@@22 ($generated@@21 $generated@@23) $generated@@24))
)))
(assert (= ($generated@@25 $generated@@26) $generated@@2))
(assert (= ($generated@@4 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@30 $generated@@32) ($generated@@27 $generated@@28 $generated@@26 ($generated@@29 $generated@@31) $generated@@32))
 :pattern ( ($generated@@27 $generated@@28 $generated@@26 ($generated@@29 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ) (! ($generated@@33 $generated@@28 $generated@@26 ($generated@@29 $generated@@34))
 :pattern ( ($generated@@33 $generated@@28 $generated@@26 ($generated@@29 $generated@@34)))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@T) ) (! (= ($generated@@35 $generated@@37 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@37 $generated@@36))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@33 $generated@@28 ($generated@@38 $generated@@41 $generated@@42) ($generated@@29 $generated@@40))  (and ($generated@@39 $generated@@41 $generated@@40) ($generated@@33 $generated@@28 $generated@@42 ($generated@@29 $generated@@40))))
 :pattern ( ($generated@@33 $generated@@28 ($generated@@38 $generated@@41 $generated@@42) ($generated@@29 $generated@@40)))
)))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@43 $generated@@44) (= ($generated@@25 $generated@@44) $generated@@1))
 :pattern ( ($generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@45 $generated@@46) (= ($generated@@25 $generated@@46) $generated@@2))
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 ($generated@@47 $generated@@50 $generated@@49)) $generated@@49)
 :pattern ( ($generated@@47 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (!  (=> ($generated@@43 $generated@@51) (exists (($generated@@52 T@U) ($generated@@53 T@U) ) (= $generated@@51 ($generated@@38 $generated@@52 $generated@@53))))
 :pattern ( ($generated@@43 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ) (!  (=> ($generated@@45 $generated@@54) (= $generated@@54 $generated@@26))
 :pattern ( ($generated@@45 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@55 ($generated@@48 $generated@@59 $generated@@56) $generated@@57 $generated@@58) ($generated@@27 $generated@@59 $generated@@56 $generated@@57 $generated@@58))
 :pattern ( ($generated@@55 ($generated@@48 $generated@@59 $generated@@56) $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@62 T@U) ) (!  (and (= ($generated@@60 ($generated@@29 $generated@@62)) $generated@@0) (= ($generated@@61 ($generated@@29 $generated@@62)) $generated@@3))
 :pattern ( ($generated@@29 $generated@@62))
)))
(assert  (=> (<= 2 $generated@@63) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@64 $generated@@70 $generated@@72) (and (< 2 $generated@@63) ($generated@@33 $generated@@28 $generated@@72 ($generated@@29 ($generated@@29 $generated@@70))))) (and (=> ($generated@@43 $generated@@72) (let (($generated@@73 ($generated@@65 $generated@@72)))
(let (($generated@@74 ($generated@@47 $generated@@28 ($generated@@66 $generated@@72))))
 (and ($generated@@64 $generated@@70 $generated@@73) ($generated@@67 $generated@@70 $generated@@74 ($generated@@20 $generated@@70 $generated@@71 $generated@@73)))))) (= ($generated@@20 $generated@@70 ($generated@@21 $generated@@71) $generated@@72) (ite ($generated@@43 $generated@@72) (let (($generated@@75 ($generated@@65 $generated@@72)))
(let (($generated@@76 ($generated@@47 $generated@@28 ($generated@@66 $generated@@72))))
($generated@@68 $generated@@70 ($generated@@21 $generated@@69) $generated@@76 ($generated@@20 $generated@@70 $generated@@71 $generated@@75)))) $generated@@26))))
 :pattern ( ($generated@@20 $generated@@70 ($generated@@21 $generated@@71) $generated@@72))
))))
(assert  (=> (<= 2 $generated@@63) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and (or ($generated@@64 $generated@@78 $generated@@80) (and (< 2 $generated@@63) (and ($generated@@33 $generated@@28 $generated@@80 ($generated@@29 ($generated@@29 $generated@@78))) ($generated@@27 $generated@@28 $generated@@80 ($generated@@29 ($generated@@29 $generated@@78)) $generated@@77)))) ($generated@@30 $generated@@77)) ($generated@@27 $generated@@28 ($generated@@20 $generated@@78 $generated@@79 $generated@@80) ($generated@@29 $generated@@78) $generated@@77))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@20 $generated@@78 $generated@@79 $generated@@80) ($generated@@29 $generated@@78) $generated@@77))
))))
(assert (= ($generated@@4 $generated@@81) 4))
(assert  (=> (<= 1 $generated@@63) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or ($generated@@67 $generated@@82 ($generated@@35 $generated@@28 $generated@@84) ($generated@@35 $generated@@28 $generated@@85)) (and (< 1 $generated@@63) (and ($generated@@33 $generated@@28 $generated@@84 ($generated@@29 $generated@@82)) ($generated@@33 $generated@@28 $generated@@85 ($generated@@29 $generated@@82))))) (and (=> ($generated@@9 ($generated@@35 $generated@@5 ($generated@@8 ($generated@@43 ($generated@@35 $generated@@28 $generated@@84))))) (let (($generated@@86 ($generated@@35 $generated@@28 ($generated@@65 ($generated@@35 $generated@@28 $generated@@84)))))
($generated@@67 $generated@@82 $generated@@86 ($generated@@35 $generated@@28 $generated@@85)))) (= ($generated@@68 $generated@@82 ($generated@@21 $generated@@83) ($generated@@35 $generated@@28 $generated@@84) ($generated@@35 $generated@@28 $generated@@85)) (ite ($generated@@43 ($generated@@35 $generated@@28 $generated@@84)) (let (($generated@@87 ($generated@@35 $generated@@28 ($generated@@65 ($generated@@35 $generated@@28 $generated@@84)))))
(let (($generated@@88 ($generated@@35 $generated@@81 ($generated@@66 ($generated@@35 $generated@@28 $generated@@84)))))
($generated@@35 $generated@@28 ($generated@@38 $generated@@88 ($generated@@35 $generated@@28 ($generated@@68 $generated@@82 ($generated@@21 $generated@@83) $generated@@87 ($generated@@35 $generated@@28 $generated@@85))))))) $generated@@85))))
 :weight 3
 :pattern ( ($generated@@68 $generated@@82 ($generated@@21 $generated@@83) ($generated@@35 $generated@@28 $generated@@84) ($generated@@35 $generated@@28 $generated@@85)))
))))
(assert  (=> (<= 1 $generated@@63) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or ($generated@@67 $generated@@89 $generated@@91 $generated@@92) (and (< 1 $generated@@63) (and ($generated@@33 $generated@@28 $generated@@91 ($generated@@29 $generated@@89)) ($generated@@33 $generated@@28 $generated@@92 ($generated@@29 $generated@@89))))) (and (=> ($generated@@43 $generated@@91) (let (($generated@@93 ($generated@@65 $generated@@91)))
($generated@@67 $generated@@89 $generated@@93 $generated@@92))) (= ($generated@@68 $generated@@89 ($generated@@21 $generated@@90) $generated@@91 $generated@@92) (ite ($generated@@43 $generated@@91) (let (($generated@@94 ($generated@@65 $generated@@91)))
(let (($generated@@95 ($generated@@66 $generated@@91)))
($generated@@38 $generated@@95 ($generated@@68 $generated@@89 $generated@@90 $generated@@94 $generated@@92)))) $generated@@92))))
 :pattern ( ($generated@@68 $generated@@89 ($generated@@21 $generated@@90) $generated@@91 $generated@@92))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@33 $generated@@28 $generated@@97 ($generated@@29 $generated@@96)) (or ($generated@@43 $generated@@97) ($generated@@45 $generated@@97)))
 :pattern ( ($generated@@45 $generated@@97) ($generated@@33 $generated@@28 $generated@@97 ($generated@@29 $generated@@96)))
 :pattern ( ($generated@@43 $generated@@97) ($generated@@33 $generated@@28 $generated@@97 ($generated@@29 $generated@@96)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@39 ($generated@@48 $generated@@100 $generated@@98) $generated@@99) ($generated@@33 $generated@@100 $generated@@98 $generated@@99))
 :pattern ( ($generated@@39 ($generated@@48 $generated@@100 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@25 ($generated@@38 $generated@@101 $generated@@102)) $generated@@1)
 :pattern ( ($generated@@38 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@66 ($generated@@38 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@38 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@65 ($generated@@38 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@38 $generated@@105 $generated@@106))
)))
(assert  (=> (<= 1 $generated@@63) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@67 $generated@@107 $generated@@109 $generated@@110) (and (< 1 $generated@@63) (and ($generated@@33 $generated@@28 $generated@@109 ($generated@@29 $generated@@107)) ($generated@@33 $generated@@28 $generated@@110 ($generated@@29 $generated@@107))))) ($generated@@33 $generated@@28 ($generated@@68 $generated@@107 $generated@@108 $generated@@109 $generated@@110) ($generated@@29 $generated@@107)))
 :pattern ( ($generated@@68 $generated@@107 $generated@@108 $generated@@109 $generated@@110))
))))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@29 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@29 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@47 $generated@@114 ($generated@@48 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@48 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (< ($generated@@115 $generated@@117) ($generated@@116 ($generated@@38 $generated@@117 $generated@@118)))
 :pattern ( ($generated@@38 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (< ($generated@@116 $generated@@120) ($generated@@116 ($generated@@38 $generated@@119 $generated@@120)))
 :pattern ( ($generated@@38 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (and ($generated@@30 $generated@@123) (and ($generated@@43 $generated@@121) ($generated@@27 $generated@@28 $generated@@121 ($generated@@29 $generated@@122) $generated@@123))) ($generated@@55 ($generated@@66 $generated@@121) $generated@@122 $generated@@123))
 :pattern ( ($generated@@55 ($generated@@66 $generated@@121) $generated@@122 $generated@@123))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@124 $generated@@134 $generated@@135 $generated@@136 ($generated@@130 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@124 $generated@@141 $generated@@142 $generated@@143 ($generated@@130 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@124 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@124 $generated@@150 $generated@@151 $generated@@152 ($generated@@130 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@124 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))) (= ($generated@@4 $generated@@125) 5)) (= ($generated@@4 $generated@@126) 6)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@128 $generated@@159 $generated@@160 ($generated@@131 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@163) $generated@@161)
 :weight 0
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@168 $generated@@169) (= ($generated@@128 $generated@@164 $generated@@165 ($generated@@131 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@128 $generated@@164 $generated@@165 $generated@@167 $generated@@169)))
 :weight 0
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@4 ($generated@@129 $generated@@170 $generated@@171)) 7))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@132 ($generated@@129 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@129 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@133 ($generated@@129 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@129 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@9 ($generated@@124 $generated@@125 $generated@@126 $generated@@5 ($generated@@127 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (or (not (= $generated@@180 $generated@@176)) (not true)) ($generated@@9 ($generated@@47 $generated@@5 ($generated@@128 $generated@@126 $generated@@81 ($generated@@128 $generated@@125 ($generated@@129 $generated@@126 $generated@@81) $generated@@177 $generated@@180) $generated@@178)))) $generated@@179))
 :pattern ( ($generated@@124 $generated@@125 $generated@@126 $generated@@5 ($generated@@127 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert  (=> (<= 1 $generated@@63) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (or ($generated@@67 $generated@@183 $generated@@185 $generated@@186) (and (< 1 $generated@@63) (and (and ($generated@@33 $generated@@28 $generated@@185 ($generated@@29 $generated@@183)) ($generated@@27 $generated@@28 $generated@@185 ($generated@@29 $generated@@183) $generated@@182)) (and ($generated@@33 $generated@@28 $generated@@186 ($generated@@29 $generated@@183)) ($generated@@27 $generated@@28 $generated@@186 ($generated@@29 $generated@@183) $generated@@182))))) ($generated@@30 $generated@@182)) ($generated@@27 $generated@@28 ($generated@@68 $generated@@183 $generated@@184 $generated@@185 $generated@@186) ($generated@@29 $generated@@183) $generated@@182))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@68 $generated@@183 $generated@@184 $generated@@185 $generated@@186) ($generated@@29 $generated@@183) $generated@@182))
))))
(assert  (=> (<= 2 $generated@@63) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (or ($generated@@64 $generated@@187 ($generated@@35 $generated@@28 $generated@@189)) (and (< 2 $generated@@63) ($generated@@33 $generated@@28 $generated@@189 ($generated@@29 ($generated@@29 $generated@@187))))) (and (=> ($generated@@9 ($generated@@35 $generated@@5 ($generated@@8 ($generated@@43 ($generated@@35 $generated@@28 $generated@@189))))) (let (($generated@@190 ($generated@@35 $generated@@28 ($generated@@65 ($generated@@35 $generated@@28 $generated@@189)))))
(let (($generated@@191 ($generated@@35 $generated@@28 ($generated@@47 $generated@@28 ($generated@@66 ($generated@@35 $generated@@28 $generated@@189))))))
 (and ($generated@@64 $generated@@187 $generated@@190) ($generated@@67 $generated@@187 $generated@@191 ($generated@@20 $generated@@187 ($generated@@21 $generated@@188) $generated@@190)))))) (= ($generated@@20 $generated@@187 ($generated@@21 $generated@@188) ($generated@@35 $generated@@28 $generated@@189)) (ite ($generated@@43 ($generated@@35 $generated@@28 $generated@@189)) (let (($generated@@192 ($generated@@35 $generated@@28 ($generated@@65 ($generated@@35 $generated@@28 $generated@@189)))))
(let (($generated@@193 ($generated@@35 $generated@@28 ($generated@@47 $generated@@28 ($generated@@66 ($generated@@35 $generated@@28 $generated@@189))))))
($generated@@35 $generated@@28 ($generated@@68 $generated@@187 ($generated@@21 $generated@@69) $generated@@193 ($generated@@35 $generated@@28 ($generated@@20 $generated@@187 ($generated@@21 $generated@@188) $generated@@192)))))) $generated@@26))))
 :weight 3
 :pattern ( ($generated@@20 $generated@@187 ($generated@@21 $generated@@188) ($generated@@35 $generated@@28 $generated@@189)))
))))
(assert  (=> (<= 2 $generated@@63) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (or ($generated@@64 $generated@@194 $generated@@196) (and (< 2 $generated@@63) ($generated@@33 $generated@@28 $generated@@196 ($generated@@29 ($generated@@29 $generated@@194))))) ($generated@@33 $generated@@28 ($generated@@20 $generated@@194 $generated@@195 $generated@@196) ($generated@@29 $generated@@194)))
 :pattern ( ($generated@@20 $generated@@194 $generated@@195 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@115 ($generated@@48 $generated@@28 $generated@@197)) ($generated@@116 $generated@@197))
 :pattern ( ($generated@@115 ($generated@@48 $generated@@28 $generated@@197)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@68 $generated@@198 ($generated@@21 $generated@@199) $generated@@200 $generated@@201) ($generated@@68 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
 :pattern ( ($generated@@68 $generated@@198 ($generated@@21 $generated@@199) $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@39 $generated@@203 ($generated@@29 $generated@@202)) (and (= ($generated@@48 $generated@@28 ($generated@@47 $generated@@28 $generated@@203)) $generated@@203) ($generated@@33 $generated@@28 ($generated@@47 $generated@@28 $generated@@203) ($generated@@29 $generated@@202))))
 :pattern ( ($generated@@39 $generated@@203 ($generated@@29 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@30 $generated@@206) (and ($generated@@43 $generated@@204) ($generated@@27 $generated@@28 $generated@@204 ($generated@@29 $generated@@205) $generated@@206))) ($generated@@27 $generated@@28 ($generated@@65 $generated@@204) ($generated@@29 $generated@@205) $generated@@206))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@65 $generated@@204) ($generated@@29 $generated@@205) $generated@@206))
)))
(assert (= $generated@@26 ($generated@@35 $generated@@28 $generated@@26)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@38 ($generated@@35 $generated@@81 $generated@@207) ($generated@@35 $generated@@28 $generated@@208)) ($generated@@35 $generated@@28 ($generated@@38 $generated@@207 $generated@@208)))
 :pattern ( ($generated@@38 ($generated@@35 $generated@@81 $generated@@207) ($generated@@35 $generated@@28 $generated@@208)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@T) ) (! (= ($generated@@48 $generated@@210 ($generated@@35 $generated@@210 $generated@@209)) ($generated@@35 $generated@@81 ($generated@@48 $generated@@210 $generated@@209)))
 :pattern ( ($generated@@48 $generated@@210 ($generated@@35 $generated@@210 $generated@@209)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> ($generated@@30 $generated@@214) (= ($generated@@27 $generated@@28 ($generated@@38 $generated@@212 $generated@@213) ($generated@@29 $generated@@211) $generated@@214)  (and ($generated@@55 $generated@@212 $generated@@211 $generated@@214) ($generated@@27 $generated@@28 $generated@@213 ($generated@@29 $generated@@211) $generated@@214))))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@38 $generated@@212 $generated@@213) ($generated@@29 $generated@@211) $generated@@214))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@227 true))
(let (($generated@@228 true))
(let (($generated@@229  (=> (or (not (= $generated@@215 ($generated@@38 ($generated@@48 $generated@@28 $generated@@216) $generated@@217))) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@228) (=> (= (ControlFlow 0 6) 5) $generated@@227)))))
(let (($generated@@230  (=> (and (and (= $generated@@215 ($generated@@38 ($generated@@48 $generated@@28 $generated@@216) $generated@@217)) ($generated@@33 $generated@@28 $generated@@216 ($generated@@29 $generated@@218))) (and ($generated@@33 $generated@@28 $generated@@217 ($generated@@29 ($generated@@29 $generated@@218))) (= $generated@@219 $generated@@217))) (=> (and (and (and ($generated@@33 $generated@@28 $generated@@219 ($generated@@29 ($generated@@29 $generated@@218))) (= $generated@@220 $generated@@219)) (and (= $generated@@221 $generated@@216) ($generated@@33 $generated@@28 $generated@@221 ($generated@@29 $generated@@218)))) (and (and (= $generated@@222 $generated@@221) ($generated@@27 $generated@@28 $generated@@222 ($generated@@29 $generated@@218) $generated@@223)) (and ($generated@@27 $generated@@28 $generated@@220 ($generated@@29 ($generated@@29 $generated@@218)) $generated@@223) (= (ControlFlow 0 3) (- 0 2))))) (< ($generated@@116 $generated@@220) ($generated@@116 $generated@@215))))))
(let (($generated@@231 true))
(let (($generated@@232  (=> (= $generated@@224 ($generated@@127 $generated@@225 $generated@@223 $generated false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@231) (=> (= (ControlFlow 0 7) 3) $generated@@230)) (=> (= (ControlFlow 0 7) 6) $generated@@229)))))
(let (($generated@@233  (=> (and (and (and ($generated@@30 $generated@@223) ($generated@@226 $generated@@223)) ($generated@@33 $generated@@28 $generated@@215 ($generated@@29 ($generated@@29 $generated@@218)))) (and (= 2 $generated@@63) (= (ControlFlow 0 8) 7))) $generated@@232)))
$generated@@233))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
