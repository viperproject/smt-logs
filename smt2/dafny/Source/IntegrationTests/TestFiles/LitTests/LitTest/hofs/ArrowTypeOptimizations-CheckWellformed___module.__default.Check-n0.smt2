(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U Int) Int)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@U Int) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@45 (Int) Int)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@86 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@90 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@145 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated) $generated@@0))
(assert (= ($generated@@4 $generated@@26) 3))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 Int) ) (!  (=> (or ($generated@@24 $generated@@32 $generated@@33) (and (< 0 $generated@@21) (and ($generated@@23 $generated@@31) ($generated@@25 $generated@@26 $generated@@32 ($generated@@27 $generated $generated))))) (= ($generated@@22 $generated@@32 $generated@@33) ($generated@@11 ($generated@@28 $generated@@6 ($generated@@29 $generated $generated $generated@@31 $generated@@32 ($generated@@30 $generated@@6 ($generated@@10 $generated@@33)))))))
 :pattern ( ($generated@@22 $generated@@32 $generated@@33) ($generated@@23 $generated@@31))
))))
(assert (forall (($generated@@36 T@U) ) (!  (not ($generated@@34 $generated@@35 $generated@@36))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (and (and ($generated@@25 $generated@@26 $generated@@38 ($generated@@27 $generated@@39 $generated@@40)) (forall (($generated@@43 T@U) ) (!  (=> ($generated@@37 $generated@@43 $generated@@41) ($generated@@37 $generated@@43 $generated@@39))
 :pattern ( ($generated@@37 $generated@@43 $generated@@41))
 :pattern ( ($generated@@37 $generated@@43 $generated@@39))
))) (forall (($generated@@44 T@U) ) (!  (=> ($generated@@37 $generated@@44 $generated@@40) ($generated@@37 $generated@@44 $generated@@42))
 :pattern ( ($generated@@37 $generated@@44 $generated@@40))
 :pattern ( ($generated@@37 $generated@@44 $generated@@42))
))) ($generated@@25 $generated@@26 $generated@@38 ($generated@@27 $generated@@41 $generated@@42)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@38 ($generated@@27 $generated@@39 $generated@@40)) ($generated@@25 $generated@@26 $generated@@38 ($generated@@27 $generated@@41 $generated@@42)))
)))
(assert (forall (($generated@@46 Int) ) (! (= ($generated@@45 $generated@@46) $generated@@46)
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (and ($generated@@23 $generated@@55) (and ($generated@@37 $generated@@57 $generated@@53) ($generated@@25 $generated@@26 $generated@@56 ($generated@@27 $generated@@53 $generated@@54)))) (= ($generated@@52 ($generated@@50 $generated@@53 $generated@@54 $generated@@51 $generated@@56 $generated@@57) $generated@@35) ($generated@@52 ($generated@@50 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57) $generated@@35)))
 :pattern ( ($generated@@50 $generated@@53 $generated@@54 $generated@@51 $generated@@56 $generated@@57) ($generated@@23 $generated@@55))
 :pattern ( ($generated@@50 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 Int) ) (!  (=> (or ($generated@@24 $generated@@59 ($generated@@45 $generated@@60)) (and (< 0 $generated@@21) (and ($generated@@23 $generated@@58) ($generated@@25 $generated@@26 $generated@@59 ($generated@@27 $generated $generated))))) (= ($generated@@22 $generated@@59 ($generated@@45 $generated@@60)) ($generated@@11 ($generated@@28 $generated@@6 ($generated@@29 $generated $generated $generated@@58 $generated@@59 ($generated@@30 $generated@@6 ($generated@@10 ($generated@@45 $generated@@60))))))))
 :weight 3
 :pattern ( ($generated@@22 $generated@@59 ($generated@@45 $generated@@60)) ($generated@@23 $generated@@58))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@30 $generated@@62 ($generated@@28 $generated@@62 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@28 $generated@@62 $generated@@61))
)))
(assert ($generated@@23 $generated@@51))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@52 $generated@@63 $generated@@64) (= $generated@@63 $generated@@64))
 :pattern ( ($generated@@52 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@66 ($generated@@27 $generated@@67 $generated@@68)) (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and (and ($generated@@23 $generated@@69) ($generated@@37 $generated@@70 $generated@@67)) ($generated@@65 $generated@@67 $generated@@68 $generated@@69 $generated@@66 $generated@@70)) ($generated@@37 ($generated@@29 $generated@@67 $generated@@68 $generated@@69 $generated@@66 $generated@@70) $generated@@68))
 :pattern ( ($generated@@29 $generated@@67 $generated@@68 $generated@@69 $generated@@66 $generated@@70))
)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@66 ($generated@@27 $generated@@67 $generated@@68)))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@37 $generated@@71 $generated) (and (= ($generated@@30 $generated@@6 ($generated@@28 $generated@@6 $generated@@71)) $generated@@71) ($generated@@25 $generated@@6 ($generated@@28 $generated@@6 $generated@@71) $generated)))
 :pattern ( ($generated@@37 $generated@@71 $generated))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@37 ($generated@@30 $generated@@74 $generated@@72) $generated@@73) ($generated@@25 $generated@@74 $generated@@72 $generated@@73))
 :pattern ( ($generated@@37 ($generated@@30 $generated@@74 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@75 ($generated@@27 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@27 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 ($generated@@27 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@27 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@28 $generated@@82 ($generated@@30 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@30 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@37 $generated@@85 ($generated@@27 $generated@@83 $generated@@84)) (and (= ($generated@@30 $generated@@26 ($generated@@28 $generated@@26 $generated@@85)) $generated@@85) ($generated@@25 $generated@@26 ($generated@@28 $generated@@26 $generated@@85) ($generated@@27 $generated@@83 $generated@@84))))
 :pattern ( ($generated@@37 $generated@@85 ($generated@@27 $generated@@83 $generated@@84)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@86 $generated@@97 $generated@@98 $generated@@99 ($generated@@93 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@102 $generated@@103) $generated@@100)
 :weight 0
)) (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@86 $generated@@104 $generated@@105 $generated@@106 ($generated@@93 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@111 $generated@@112) ($generated@@86 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@111 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@86 $generated@@113 $generated@@114 $generated@@115 ($generated@@93 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@86 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)))) (= ($generated@@4 $generated@@87) 4)) (= ($generated@@4 $generated@@88) 5)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@90 $generated@@122 $generated@@123 ($generated@@94 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@124) $generated@@126) $generated@@124)
 :weight 0
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@90 $generated@@127 $generated@@128 ($generated@@94 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@90 $generated@@127 $generated@@128 $generated@@130 $generated@@132)))
 :weight 0
))) (= ($generated@@4 $generated@@91) 6)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@4 ($generated@@92 $generated@@133 $generated@@134)) 7))) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@92 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@92 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 Bool) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@9 ($generated@@86 $generated@@87 $generated@@88 $generated@@5 ($generated@@89 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@143 $generated@@144))  (=> (and (or (not (= $generated@@143 $generated@@139)) (not true)) ($generated@@9 ($generated@@28 $generated@@5 ($generated@@90 $generated@@88 $generated@@91 ($generated@@90 $generated@@87 ($generated@@92 $generated@@88 $generated@@91) $generated@@140 $generated@@143) $generated@@141)))) $generated@@142))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88 $generated@@5 ($generated@@89 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (and (= ($generated@@20 ($generated@@27 $generated@@146 $generated@@147)) $generated@@2) (= ($generated@@145 ($generated@@27 $generated@@146 $generated@@147)) $generated@@3))
 :pattern ( ($generated@@27 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and ($generated@@23 $generated@@150) (and ($generated@@37 $generated@@152 $generated@@148) ($generated@@25 $generated@@26 $generated@@151 ($generated@@27 $generated@@148 $generated@@149)))) ($generated@@52 ($generated@@50 $generated@@148 $generated@@149 $generated@@51 $generated@@151 $generated@@152) $generated@@35)) (= ($generated@@65 $generated@@148 $generated@@149 $generated@@51 $generated@@151 $generated@@152) ($generated@@65 $generated@@148 $generated@@149 $generated@@150 $generated@@151 $generated@@152)))
 :pattern ( ($generated@@65 $generated@@148 $generated@@149 $generated@@51 $generated@@151 $generated@@152) ($generated@@23 $generated@@150))
 :pattern ( ($generated@@65 $generated@@148 $generated@@149 $generated@@150 $generated@@151 $generated@@152))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 Int) ) (!  (=> (or ($generated@@24 ($generated@@47 $generated@@26 $generated@@154) ($generated@@45 $generated@@155)) (and (< 0 $generated@@21) (and ($generated@@23 $generated@@153) ($generated@@25 $generated@@26 $generated@@154 ($generated@@27 $generated $generated))))) (= ($generated@@22 ($generated@@47 $generated@@26 $generated@@154) ($generated@@45 $generated@@155)) ($generated@@11 ($generated@@28 $generated@@6 ($generated@@29 $generated $generated $generated@@153 ($generated@@47 $generated@@26 $generated@@154) ($generated@@30 $generated@@6 ($generated@@10 ($generated@@45 $generated@@155))))))))
 :weight 3
 :pattern ( ($generated@@22 ($generated@@47 $generated@@26 $generated@@154) ($generated@@45 $generated@@155)) ($generated@@23 $generated@@153))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@52 $generated@@156 $generated@@157) (forall (($generated@@158 T@U) ) (! (= ($generated@@34 $generated@@156 $generated@@158) ($generated@@34 $generated@@157 $generated@@158))
 :pattern ( ($generated@@34 $generated@@156 $generated@@158))
 :pattern ( ($generated@@34 $generated@@157 $generated@@158))
)))
 :pattern ( ($generated@@52 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 Int) ) (! (= ($generated@@30 $generated@@6 ($generated@@10 ($generated@@45 $generated@@159))) ($generated@@47 $generated@@91 ($generated@@30 $generated@@6 ($generated@@10 $generated@@159))))
 :pattern ( ($generated@@30 $generated@@6 ($generated@@10 ($generated@@45 $generated@@159))))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@30 $generated@@161 ($generated@@47 $generated@@161 $generated@@160)) ($generated@@47 $generated@@91 ($generated@@30 $generated@@161 $generated@@160)))
 :pattern ( ($generated@@30 $generated@@161 ($generated@@47 $generated@@161 $generated@@160)))
)))
(assert (forall (($generated@@162 T@U) ) (! ($generated@@25 $generated@@6 $generated@@162 $generated)
 :pattern ( ($generated@@25 $generated@@6 $generated@@162 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@170  (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@9 ($generated@@47 $generated@@5 ($generated@@8 true)))) (=> ($generated@@9 ($generated@@47 $generated@@5 ($generated@@8 true))) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@65 $generated $generated $generated@@163 $generated@@164 ($generated@@30 $generated@@6 ($generated@@10 $generated@@165)))) (=> ($generated@@65 $generated $generated $generated@@163 $generated@@164 ($generated@@30 $generated@@6 ($generated@@10 $generated@@165))) (=> (and (and (= $generated@@166 (forall (($generated@@171 T@U) ($generated@@172 T@U) )  (=> (and (and (or (not (= $generated@@171 $generated@@167)) (not true)) ($generated@@9 ($generated@@28 $generated@@5 ($generated@@90 $generated@@88 $generated@@91 ($generated@@90 $generated@@87 ($generated@@92 $generated@@88 $generated@@91) $generated@@163 $generated@@171) $generated@@1)))) ($generated@@34 ($generated@@50 $generated $generated $generated@@163 $generated@@164 ($generated@@30 $generated@@6 ($generated@@10 $generated@@165))) ($generated@@30 $generated@@87 $generated@@171))) ($generated@@9 ($generated@@86 $generated@@87 $generated@@88 $generated@@5 $generated@@168 $generated@@171 $generated@@172))))) (= ($generated@@22 $generated@@164 $generated@@165) ($generated@@11 ($generated@@28 $generated@@6 ($generated@@29 $generated $generated $generated@@163 $generated@@164 ($generated@@30 $generated@@6 ($generated@@10 $generated@@165))))))) (and ($generated@@25 $generated@@6 ($generated@@10 ($generated@@22 $generated@@164 $generated@@165)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@166)))))))
(let (($generated@@173 true))
(let (($generated@@174  (=> (= $generated@@168 ($generated@@89 $generated@@167 $generated@@163 $generated@@1 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@173) (=> (= (ControlFlow 0 6) 3) $generated@@170)))))
(let (($generated@@175  (=> (and (and (and ($generated@@23 $generated@@163) ($generated@@169 $generated@@163)) ($generated@@25 $generated@@26 $generated@@164 ($generated@@27 $generated $generated))) (and (= 0 $generated@@21) (= (ControlFlow 0 7) 6))) $generated@@174)))
$generated@@175)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
