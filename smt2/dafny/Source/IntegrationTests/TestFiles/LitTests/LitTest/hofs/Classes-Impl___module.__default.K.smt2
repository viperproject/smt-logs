(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@75 () Int)
(declare-fun $generated@@76 () Bool)
(declare-fun $generated@@77 () Bool)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@92 (T@T T@U T@U) Bool)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@97 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) Bool)
(declare-fun $generated@@110 (T@U T@U T@U) T@U)
(declare-fun $generated@@111 () T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@131 () Bool)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@28) 3) (= ($generated@@11 $generated@@35) 4)) (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@38 $generated@@45 $generated@@46 ($generated@@42 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
))) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@38 $generated@@50 $generated@@51 ($generated@@42 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@38 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))) (= ($generated@@11 $generated@@39) 5)) (= ($generated@@11 $generated@@40) 6)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@11 ($generated@@41 $generated@@56 $generated@@57)) 7))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@43 ($generated@@41 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@41 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@41 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@30 $generated@@64) (= ($generated@@27 $generated@@28 $generated@@62 ($generated@@29 $generated@@63) $generated@@64)  (=> ($generated@@31 $generated@@63 $generated@@64 $generated@@62) (forall (($generated@@65 T@U) ) (!  (=> (and (or (not (= $generated@@65 $generated@@36)) (not true)) ($generated@@32 ($generated@@33 $generated@@63 $generated@@64 $generated@@62) ($generated@@34 $generated@@35 $generated@@65))) ($generated@@16 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@64 $generated@@65) $generated@@1))))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@63 $generated@@64 $generated@@62) ($generated@@34 $generated@@35 $generated@@65)))
)))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@62 ($generated@@29 $generated@@63) $generated@@64))
)))
(assert (= ($generated@@66 $generated) $generated@@0))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@69 ($generated@@67 $generated@@68) $generated@@70) ($generated@@27 $generated@@28 $generated@@69 ($generated@@29 $generated@@68) $generated@@70))
 :pattern ( ($generated@@27 $generated@@28 $generated@@69 ($generated@@67 $generated@@68) $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@73 ($generated@@71 $generated@@72) $generated@@74) ($generated@@27 $generated@@28 $generated@@73 ($generated@@67 $generated@@72) $generated@@74))
 :pattern ( ($generated@@27 $generated@@28 $generated@@73 ($generated@@71 $generated@@72) $generated@@74))
)))
(assert  (=> (<= 0 $generated@@75) (=> (or $generated@@76 (< 0 $generated@@75)) (= $generated@@77 ($generated@@16 ($generated@@78 $generated@@12 ($generated@@15 true)))))))
(assert  (=> (<= 0 $generated@@75) (=> (or $generated@@76 (< 0 $generated@@75)) (= $generated@@77 ($generated@@16 ($generated@@78 $generated@@12 ($generated@@15 true)))))))
(assert (forall (($generated@@80 T@U) ) (!  (not ($generated@@32 $generated@@79 $generated@@80))
 :pattern ( ($generated@@32 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@27 $generated@@35 $generated@@83 $generated@@81 $generated@@84) ($generated@@27 $generated@@35 $generated@@83 $generated@@82 $generated@@84))
 :pattern ( ($generated@@27 $generated@@35 $generated@@83 $generated@@81 $generated@@84))
 :pattern ( ($generated@@27 $generated@@35 $generated@@83 $generated@@82 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@27 $generated@@35 $generated@@85 $generated@@82 $generated@@86)  (or (= $generated@@85 $generated@@36) ($generated@@16 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@86 $generated@@85) $generated@@1)))))
 :pattern ( ($generated@@27 $generated@@35 $generated@@85 $generated@@82 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@78 $generated@@88 $generated@@87) $generated@@87)
 :pattern ( ($generated@@78 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@34 $generated@@90 ($generated@@37 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@37 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@95) ($generated@@92 $generated@@28 $generated@@96 ($generated@@29 $generated@@94))) ($generated@@93 ($generated@@33 $generated@@94 $generated@@91 $generated@@96) $generated@@79)) (= ($generated@@31 $generated@@94 $generated@@91 $generated@@96) ($generated@@31 $generated@@94 $generated@@95 $generated@@96)))
 :pattern ( ($generated@@31 $generated@@94 $generated@@91 $generated@@96) ($generated@@30 $generated@@95))
 :pattern ( ($generated@@31 $generated@@94 $generated@@95 $generated@@96))
)))
(assert ($generated@@30 $generated@@91))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@97 ($generated@@34 $generated@@101 $generated@@98) $generated@@99 $generated@@100) ($generated@@27 $generated@@101 $generated@@98 $generated@@99 $generated@@100))
 :pattern ( ($generated@@97 ($generated@@34 $generated@@101 $generated@@98) $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ) (!  (and (= ($generated@@66 ($generated@@29 $generated@@103)) $generated@@4) (= ($generated@@102 ($generated@@29 $generated@@103)) $generated@@8))
 :pattern ( ($generated@@29 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (!  (and (= ($generated@@66 ($generated@@67 $generated@@104)) $generated@@5) (= ($generated@@102 ($generated@@67 $generated@@104)) $generated@@9))
 :pattern ( ($generated@@67 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@66 ($generated@@71 $generated@@105)) $generated@@6) (= ($generated@@102 ($generated@@71 $generated@@105)) $generated@@10))
 :pattern ( ($generated@@71 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@106 $generated@@107 $generated@@82) (and (= ($generated@@34 $generated@@35 ($generated@@37 $generated@@35 $generated@@107)) $generated@@107) ($generated@@92 $generated@@35 ($generated@@37 $generated@@35 $generated@@107) $generated@@82)))
 :pattern ( ($generated@@106 $generated@@107 $generated@@82))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@106 $generated@@108 $generated@@81) (and (= ($generated@@34 $generated@@35 ($generated@@37 $generated@@35 $generated@@108)) $generated@@108) ($generated@@92 $generated@@35 ($generated@@37 $generated@@35 $generated@@108) $generated@@81)))
 :pattern ( ($generated@@106 $generated@@108 $generated@@81))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@92 $generated@@35 $generated@@109 $generated@@81)  (and ($generated@@92 $generated@@35 $generated@@109 $generated@@82) (or (not (= $generated@@109 $generated@@36)) (not true))))
 :pattern ( ($generated@@92 $generated@@35 $generated@@109 $generated@@81))
 :pattern ( ($generated@@92 $generated@@35 $generated@@109 $generated@@82))
)))
(assert (forall (($generated@@112 T@U) ) (! (= $generated@@77 ($generated@@16 ($generated@@37 $generated@@12 ($generated@@110 $generated $generated@@112 $generated@@111))))
 :pattern ( $generated@@77 ($generated@@30 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and ($generated@@30 $generated@@114) ($generated@@92 $generated@@28 $generated@@115 ($generated@@29 $generated@@113))) (= ($generated@@93 ($generated@@33 $generated@@113 $generated@@91 $generated@@115) $generated@@79) ($generated@@93 ($generated@@33 $generated@@113 $generated@@114 $generated@@115) $generated@@79)))
 :pattern ( ($generated@@33 $generated@@113 $generated@@91 $generated@@115) ($generated@@30 $generated@@114))
 :pattern ( ($generated@@33 $generated@@113 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> ($generated@@93 $generated@@116 $generated@@117) (= $generated@@116 $generated@@117))
 :pattern ( ($generated@@93 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@106 $generated@@118 $generated) (and (= ($generated@@34 $generated@@12 ($generated@@37 $generated@@12 $generated@@118)) $generated@@118) ($generated@@92 $generated@@12 ($generated@@37 $generated@@12 $generated@@118) $generated)))
 :pattern ( ($generated@@106 $generated@@118 $generated))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@106 ($generated@@34 $generated@@121 $generated@@119) $generated@@120) ($generated@@92 $generated@@121 $generated@@119 $generated@@120))
 :pattern ( ($generated@@106 ($generated@@34 $generated@@121 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! ($generated@@92 $generated@@35 $generated@@122 $generated@@82)
 :pattern ( ($generated@@92 $generated@@35 $generated@@122 $generated@@82))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@29 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@29 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@67 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@67 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@71 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@71 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@37 $generated@@130 ($generated@@34 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@34 $generated@@130 $generated@@129))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@31 $generated $generated@@132 $generated@@111) $generated@@131)
 :pattern ( ($generated@@31 $generated $generated@@132 $generated@@111))
)))
(assert  (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@133 $generated@@136 $generated@@137 $generated@@138 ($generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@141 $generated@@142) $generated@@139)
 :weight 0
)) (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@133 $generated@@143 $generated@@144 $generated@@145 ($generated@@135 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@133 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@133 $generated@@152 $generated@@153 $generated@@154 ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@133 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@16 ($generated@@133 $generated@@35 $generated@@39 $generated@@12 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))  (=> (and (or (not (= $generated@@165 $generated@@161)) (not true)) ($generated@@16 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@35 ($generated@@41 $generated@@39 $generated@@40) $generated@@162 $generated@@165) $generated@@163)))) $generated@@164))
 :pattern ( ($generated@@133 $generated@@35 $generated@@39 $generated@@12 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@92 $generated@@28 $generated@@168 ($generated@@71 $generated@@167))  (and ($generated@@92 $generated@@28 $generated@@168 ($generated@@67 $generated@@167)) ($generated@@31 $generated@@167 $generated@@91 $generated@@168)))
 :pattern ( ($generated@@92 $generated@@28 $generated@@168 ($generated@@71 $generated@@167)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@92 $generated@@28 $generated@@169 ($generated@@29 $generated@@170)) (forall (($generated@@171 T@U) ) (!  (=> (and ($generated@@30 $generated@@171) ($generated@@31 $generated@@170 $generated@@171 $generated@@169)) ($generated@@106 ($generated@@110 $generated@@170 $generated@@171 $generated@@169) $generated@@170))
 :pattern ( ($generated@@110 $generated@@170 $generated@@171 $generated@@169))
)))
 :pattern ( ($generated@@92 $generated@@28 $generated@@169 ($generated@@29 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@106 $generated@@173 ($generated@@29 $generated@@172)) (and (= ($generated@@34 $generated@@28 ($generated@@37 $generated@@28 $generated@@173)) $generated@@173) ($generated@@92 $generated@@28 ($generated@@37 $generated@@28 $generated@@173) ($generated@@29 $generated@@172))))
 :pattern ( ($generated@@106 $generated@@173 ($generated@@29 $generated@@172)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@106 $generated@@175 ($generated@@67 $generated@@174)) (and (= ($generated@@34 $generated@@28 ($generated@@37 $generated@@28 $generated@@175)) $generated@@175) ($generated@@92 $generated@@28 ($generated@@37 $generated@@28 $generated@@175) ($generated@@67 $generated@@174))))
 :pattern ( ($generated@@106 $generated@@175 ($generated@@67 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@106 $generated@@177 ($generated@@71 $generated@@176)) (and (= ($generated@@34 $generated@@28 ($generated@@37 $generated@@28 $generated@@177)) $generated@@177) ($generated@@92 $generated@@28 ($generated@@37 $generated@@28 $generated@@177) ($generated@@71 $generated@@176))))
 :pattern ( ($generated@@106 $generated@@177 ($generated@@71 $generated@@176)))
)))
(assert (= ($generated@@66 $generated@@82) $generated@@2))
(assert (= ($generated@@102 $generated@@82) $generated@@7))
(assert (= ($generated@@66 $generated@@81) $generated@@3))
(assert (= ($generated@@102 $generated@@81) $generated@@7))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and ($generated@@30 $generated@@180) ($generated@@27 $generated@@28 $generated@@178 ($generated@@29 $generated@@179) $generated@@180)) (=> ($generated@@31 $generated@@179 $generated@@180 $generated@@178) ($generated@@97 ($generated@@110 $generated@@179 $generated@@180 $generated@@178) $generated@@179 $generated@@180)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@178 ($generated@@29 $generated@@179) $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@93 $generated@@181 $generated@@182) (forall (($generated@@183 T@U) ) (! (= ($generated@@32 $generated@@181 $generated@@183) ($generated@@32 $generated@@182 $generated@@183))
 :pattern ( ($generated@@32 $generated@@181 $generated@@183))
 :pattern ( ($generated@@32 $generated@@182 $generated@@183))
)))
 :pattern ( ($generated@@93 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and ($generated@@92 $generated@@28 $generated@@184 ($generated@@29 $generated@@185)) (forall (($generated@@187 T@U) ) (!  (=> ($generated@@106 $generated@@187 $generated@@185) ($generated@@106 $generated@@187 $generated@@186))
 :pattern ( ($generated@@106 $generated@@187 $generated@@185))
 :pattern ( ($generated@@106 $generated@@187 $generated@@186))
))) ($generated@@92 $generated@@28 $generated@@184 ($generated@@29 $generated@@186)))
 :pattern ( ($generated@@92 $generated@@28 $generated@@184 ($generated@@29 $generated@@185)) ($generated@@92 $generated@@28 $generated@@184 ($generated@@29 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@T) ) (! (= ($generated@@34 $generated@@189 ($generated@@78 $generated@@189 $generated@@188)) ($generated@@78 $generated@@40 ($generated@@34 $generated@@189 $generated@@188)))
 :pattern ( ($generated@@34 $generated@@189 ($generated@@78 $generated@@189 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@110 $generated $generated@@190 $generated@@111) ($generated@@34 $generated@@12 ($generated@@15 $generated@@77)))
 :pattern ( ($generated@@110 $generated $generated@@190 $generated@@111))
)))
(assert (= $generated@@131 true))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! ($generated@@27 $generated@@12 $generated@@192 $generated $generated@@191)
 :pattern ( ($generated@@27 $generated@@12 $generated@@192 $generated $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@92 $generated@@28 $generated@@194 ($generated@@67 $generated@@193))  (and ($generated@@92 $generated@@28 $generated@@194 ($generated@@29 $generated@@193)) ($generated@@93 ($generated@@33 $generated@@193 $generated@@91 $generated@@194) $generated@@79)))
 :pattern ( ($generated@@92 $generated@@28 $generated@@194 ($generated@@67 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ) (! ($generated@@92 $generated@@12 $generated@@195 $generated)
 :pattern ( ($generated@@92 $generated@@12 $generated@@195 $generated))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@32 ($generated@@33 $generated $generated@@197 $generated@@111) $generated@@196) false)
 :pattern ( ($generated@@32 ($generated@@33 $generated $generated@@197 $generated@@111) $generated@@196))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@205  (=> (= $generated@@198 ($generated@@134 $generated@@36 $generated@@199 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= 0 $generated@@75)) (not true))) (=> (or (not (= 0 $generated@@75)) (not true)) (=> (= $generated@@200 $generated@@111) (=> (and (and ($generated@@92 $generated@@35 $generated@@201 $generated@@82) ($generated@@27 $generated@@35 $generated@@201 $generated@@82 $generated@@199)) ($generated@@97 ($generated@@34 $generated@@28 $generated@@200) ($generated@@29 $generated) $generated@@199)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not ($generated@@32 ($generated@@33 $generated $generated@@199 $generated@@200) ($generated@@34 $generated@@35 $generated@@201)))) (=> (not ($generated@@32 ($generated@@33 $generated $generated@@199 $generated@@200) ($generated@@34 $generated@@35 $generated@@201))) (=> ($generated@@97 ($generated@@34 $generated@@28 $generated@@200) ($generated@@29 $generated) $generated@@199) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@31 $generated $generated@@199 $generated@@200)) (=> ($generated@@31 $generated $generated@@199 $generated@@200) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@16 ($generated@@37 $generated@@12 ($generated@@110 $generated $generated@@199 $generated@@200))))))))))))))))
(let (($generated@@206  (=> (and ($generated@@30 $generated@@199) ($generated@@202 $generated@@199)) (=> (and (and ($generated@@92 $generated@@28 $generated@@203 ($generated@@71 $generated)) ($generated@@27 $generated@@28 $generated@@203 ($generated@@71 $generated) $generated@@199)) true) (=> (and (and (and ($generated@@92 $generated@@35 $generated@@204 $generated@@82) ($generated@@27 $generated@@35 $generated@@204 $generated@@82 $generated@@199)) true) (and (= 1 $generated@@75) (= (ControlFlow 0 6) 2))) $generated@@205)))))
$generated@@206)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
