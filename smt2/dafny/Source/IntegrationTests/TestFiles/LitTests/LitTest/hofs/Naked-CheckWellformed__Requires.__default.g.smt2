(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@27 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U Int) Bool)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@45 (Int) Int)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U Int) Int)
(declare-fun $generated@@68 () Int)
(declare-fun $generated@@69 (Int) Bool)
(declare-fun $generated@@73 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 () T@U)
(declare-fun $generated@@121 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@T T@T) T@T)
(declare-fun $generated@@125 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@156 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@20 $generated@@6 $generated@@22 $generated@@21 $generated@@23)
 :pattern ( ($generated@@20 $generated@@6 $generated@@22 $generated@@21 $generated@@23))
)))
(assert (forall (($generated@@26 T@U) ) (!  (not ($generated@@24 $generated@@25 $generated@@26))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@27 $generated@@21 $generated@@21 $generated@@32 ($generated@@28 $generated@@31) $generated@@33) ($generated@@29 $generated@@31 ($generated@@11 ($generated@@30 $generated@@6 $generated@@33))))
 :pattern ( ($generated@@27 $generated@@21 $generated@@21 $generated@@32 ($generated@@28 $generated@@31) $generated@@33))
)))
(assert (= ($generated@@4 $generated@@35) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (and (and ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@39 $generated@@40)) (forall (($generated@@43 T@U) ) (!  (=> ($generated@@37 $generated@@43 $generated@@41) ($generated@@37 $generated@@43 $generated@@39))
 :pattern ( ($generated@@37 $generated@@43 $generated@@41))
 :pattern ( ($generated@@37 $generated@@43 $generated@@39))
))) (forall (($generated@@44 T@U) ) (!  (=> ($generated@@37 $generated@@44 $generated@@40) ($generated@@37 $generated@@44 $generated@@42))
 :pattern ( ($generated@@37 $generated@@44 $generated@@40))
 :pattern ( ($generated@@37 $generated@@44 $generated@@42))
))) ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@41 $generated@@42)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@39 $generated@@40)) ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@41 $generated@@42)))
)))
(assert (forall (($generated@@46 Int) ) (! (= ($generated@@45 $generated@@46) $generated@@46)
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (and ($generated@@52 $generated@@56) (and ($generated@@37 $generated@@58 $generated@@54) ($generated@@34 $generated@@35 $generated@@57 ($generated@@36 $generated@@54 $generated@@55)))) (= ($generated@@53 ($generated@@50 $generated@@54 $generated@@55 $generated@@51 $generated@@57 $generated@@58) $generated@@25) ($generated@@53 ($generated@@50 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58) $generated@@25)))
 :pattern ( ($generated@@50 $generated@@54 $generated@@55 $generated@@51 $generated@@57 $generated@@58) ($generated@@52 $generated@@56))
 :pattern ( ($generated@@50 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@59 $generated@@21 $generated@@21 $generated@@63 ($generated@@28 $generated@@62) $generated@@64) ($generated@@60 $generated@@6 ($generated@@10 ($generated@@61 $generated@@62 ($generated@@11 ($generated@@30 $generated@@6 $generated@@64))))))
 :pattern ( ($generated@@59 $generated@@21 $generated@@21 $generated@@63 ($generated@@28 $generated@@62) $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@60 $generated@@66 ($generated@@30 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@30 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@34 $generated@@6 $generated@@67 $generated@@21) (<= ($generated@@45 0) ($generated@@11 $generated@@67)))
 :pattern ( ($generated@@34 $generated@@6 $generated@@67 $generated@@21))
)))
(assert ($generated@@52 $generated@@51))
(assert  (=> (<= 0 $generated@@68) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 Int) ) (!  (=> (or ($generated@@69 $generated@@72) (and (< 0 $generated@@68) (and (and ($generated@@52 $generated@@71) (<= ($generated@@45 0) $generated@@72)) (not ($generated@@27 $generated@@21 $generated@@21 $generated@@71 ($generated@@28 $generated@@70) ($generated@@60 $generated@@6 ($generated@@10 $generated@@72))))))) (<= ($generated@@45 0) ($generated@@61 $generated@@70 $generated@@72)))
 :pattern ( ($generated@@61 $generated@@70 $generated@@72) ($generated@@52 $generated@@71))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@60 $generated@@77 $generated@@74) $generated@@75 $generated@@76) ($generated@@20 $generated@@77 $generated@@74 $generated@@75 $generated@@76))
 :pattern ( ($generated@@73 ($generated@@60 $generated@@77 $generated@@74) $generated@@75 $generated@@76))
)))
(assert  (=> (<= 0 $generated@@68) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 Int) ) (!  (=> (or ($generated@@69 $generated@@82) (and (< 0 $generated@@68) (and (and ($generated@@52 $generated@@81) (<= ($generated@@45 0) $generated@@82)) (not ($generated@@27 $generated@@21 $generated@@21 $generated@@81 ($generated@@28 ($generated@@78 $generated@@79)) ($generated@@60 $generated@@6 ($generated@@10 $generated@@82))))))) (= ($generated@@61 ($generated@@78 $generated@@80) $generated@@82) $generated@@82))
 :pattern ( ($generated@@61 ($generated@@78 $generated@@80) $generated@@82) ($generated@@52 $generated@@81))
))))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@37 $generated@@83 $generated@@21) (and (= ($generated@@60 $generated@@6 ($generated@@30 $generated@@6 $generated@@83)) $generated@@83) ($generated@@34 $generated@@6 ($generated@@30 $generated@@6 $generated@@83) $generated@@21)))
 :pattern ( ($generated@@37 $generated@@83 $generated@@21))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and ($generated@@52 $generated@@87) ($generated@@20 $generated@@35 $generated@@84 ($generated@@36 $generated@@85 $generated@@86) $generated@@87)) (forall (($generated@@88 T@U) ) (!  (=> (and ($generated@@73 $generated@@88 $generated@@85 $generated@@87) ($generated@@27 $generated@@85 $generated@@86 $generated@@87 $generated@@84 $generated@@88)) ($generated@@73 ($generated@@59 $generated@@85 $generated@@86 $generated@@87 $generated@@84 $generated@@88) $generated@@86 $generated@@87))
 :pattern ( ($generated@@59 $generated@@85 $generated@@86 $generated@@87 $generated@@84 $generated@@88))
)))
 :pattern ( ($generated@@20 $generated@@35 $generated@@84 ($generated@@36 $generated@@85 $generated@@86) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@24 ($generated@@50 $generated@@21 $generated@@21 $generated@@91 ($generated@@28 $generated@@90) $generated@@92) $generated@@89) false)
 :pattern ( ($generated@@24 ($generated@@50 $generated@@21 $generated@@21 $generated@@91 ($generated@@28 $generated@@90) $generated@@92) $generated@@89))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@53 $generated@@93 $generated@@94) (= $generated@@93 $generated@@94))
 :pattern ( ($generated@@53 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@95 ($generated@@36 $generated@@96 $generated@@97)) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@98) ($generated@@37 $generated@@99 $generated@@96)) ($generated@@27 $generated@@96 $generated@@97 $generated@@98 $generated@@95 $generated@@99)) ($generated@@37 ($generated@@59 $generated@@96 $generated@@97 $generated@@98 $generated@@95 $generated@@99) $generated@@97))
 :pattern ( ($generated@@59 $generated@@96 $generated@@97 $generated@@98 $generated@@95 $generated@@99))
)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@95 ($generated@@36 $generated@@96 $generated@@97)))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@37 ($generated@@60 $generated@@102 $generated@@100) $generated@@101) ($generated@@34 $generated@@102 $generated@@100 $generated@@101))
 :pattern ( ($generated@@37 ($generated@@60 $generated@@102 $generated@@100) $generated@@101))
)))
(assert  (=> (<= 0 $generated@@68) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 Int) ) (!  (=> (or ($generated@@69 ($generated@@45 $generated@@105)) (and (< 0 $generated@@68) (and (and ($generated@@52 $generated@@104) (<= ($generated@@45 0) $generated@@105)) (not ($generated@@27 $generated@@21 $generated@@21 $generated@@104 ($generated@@28 ($generated@@78 $generated@@79)) ($generated@@60 $generated@@6 ($generated@@10 ($generated@@45 $generated@@105)))))))) (= ($generated@@61 ($generated@@78 $generated@@103) ($generated@@45 $generated@@105)) ($generated@@45 $generated@@105)))
 :weight 3
 :pattern ( ($generated@@61 ($generated@@78 $generated@@103) ($generated@@45 $generated@@105)) ($generated@@52 $generated@@104))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@106 ($generated@@36 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@36 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@36 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@36 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@30 $generated@@113 ($generated@@60 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@60 $generated@@113 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 Int) ) (! (= ($generated@@61 ($generated@@78 $generated@@114) $generated@@115) ($generated@@61 $generated@@114 $generated@@115))
 :pattern ( ($generated@@61 ($generated@@78 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 Int) ) (! (= ($generated@@61 $generated@@116 $generated@@118) ($generated@@11 ($generated@@30 $generated@@6 ($generated@@59 $generated@@21 $generated@@21 $generated@@117 ($generated@@28 $generated@@116) ($generated@@60 $generated@@6 ($generated@@10 $generated@@118))))))
 :pattern ( ($generated@@61 $generated@@116 $generated@@118) ($generated@@52 $generated@@117))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@4 $generated@@119) 4) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@121 $generated@@128 $generated@@129 ($generated@@125 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@130) $generated@@132) $generated@@130)
 :weight 0
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@121 $generated@@133 $generated@@134 ($generated@@125 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@121 $generated@@133 $generated@@134 $generated@@136 $generated@@138)))
 :weight 0
))) (= ($generated@@4 $generated@@122) 5)) (= ($generated@@4 $generated@@123) 6)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (= ($generated@@4 ($generated@@124 $generated@@139 $generated@@140)) 7))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@126 ($generated@@124 $generated@@141 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@124 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@127 ($generated@@124 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@124 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> ($generated@@52 $generated@@148) (= ($generated@@20 $generated@@35 $generated@@145 ($generated@@36 $generated@@146 $generated@@147) $generated@@148) (forall (($generated@@149 T@U) ) (!  (=> (and (and ($generated@@37 $generated@@149 $generated@@146) ($generated@@73 $generated@@149 $generated@@146 $generated@@148)) ($generated@@27 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (or (not (= $generated@@150 $generated@@120)) (not true)) ($generated@@24 ($generated@@50 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149) ($generated@@60 $generated@@119 $generated@@150))) ($generated@@9 ($generated@@30 $generated@@5 ($generated@@121 $generated@@122 $generated@@123 ($generated@@121 $generated@@119 ($generated@@124 $generated@@122 $generated@@123) $generated@@148 $generated@@150) $generated))))
 :pattern ( ($generated@@24 ($generated@@50 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149) ($generated@@60 $generated@@119 $generated@@150)))
)))
 :pattern ( ($generated@@59 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149))
 :pattern ( ($generated@@50 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149))
))))
 :pattern ( ($generated@@20 $generated@@35 $generated@@145 ($generated@@36 $generated@@146 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@37 $generated@@153 ($generated@@36 $generated@@151 $generated@@152)) (and (= ($generated@@60 $generated@@35 ($generated@@30 $generated@@35 $generated@@153)) $generated@@153) ($generated@@34 $generated@@35 ($generated@@30 $generated@@35 $generated@@153) ($generated@@36 $generated@@151 $generated@@152))))
 :pattern ( ($generated@@37 $generated@@153 ($generated@@36 $generated@@151 $generated@@152)))
)))
(assert  (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@154 $generated@@157 $generated@@158 $generated@@159 ($generated@@156 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@162 $generated@@163) $generated@@160)
 :weight 0
)) (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@154 $generated@@164 $generated@@165 $generated@@166 ($generated@@156 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@171 $generated@@172) ($generated@@154 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@171 $generated@@172)))
 :weight 0
)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@154 $generated@@173 $generated@@174 $generated@@175 ($generated@@156 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@154 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@9 ($generated@@154 $generated@@119 $generated@@122 $generated@@5 ($generated@@155 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))  (=> (and (or (not (= $generated@@186 $generated@@182)) (not true)) ($generated@@9 ($generated@@30 $generated@@5 ($generated@@121 $generated@@122 $generated@@123 ($generated@@121 $generated@@119 ($generated@@124 $generated@@122 $generated@@123) $generated@@183 $generated@@186) $generated@@184)))) $generated@@185))
 :pattern ( ($generated@@154 $generated@@119 $generated@@122 $generated@@5 ($generated@@155 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (and (= ($generated@@188 ($generated@@36 $generated@@190 $generated@@191)) $generated@@1) (= ($generated@@189 ($generated@@36 $generated@@190 $generated@@191)) $generated@@3))
 :pattern ( ($generated@@36 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and ($generated@@52 $generated@@194) (and ($generated@@37 $generated@@196 $generated@@192) ($generated@@34 $generated@@35 $generated@@195 ($generated@@36 $generated@@192 $generated@@193)))) ($generated@@53 ($generated@@50 $generated@@192 $generated@@193 $generated@@51 $generated@@195 $generated@@196) $generated@@25)) (= ($generated@@27 $generated@@192 $generated@@193 $generated@@51 $generated@@195 $generated@@196) ($generated@@27 $generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@196)))
 :pattern ( ($generated@@27 $generated@@192 $generated@@193 $generated@@51 $generated@@195 $generated@@196) ($generated@@52 $generated@@194))
 :pattern ( ($generated@@27 $generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@28 ($generated@@78 $generated@@197)) ($generated@@28 $generated@@197))
 :pattern ( ($generated@@28 ($generated@@78 $generated@@197)))
)))
(assert (= ($generated@@188 $generated@@21) $generated@@0))
(assert (= ($generated@@189 $generated@@21) $generated@@2))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@53 $generated@@198 $generated@@199) (forall (($generated@@200 T@U) ) (! (= ($generated@@24 $generated@@198 $generated@@200) ($generated@@24 $generated@@199 $generated@@200))
 :pattern ( ($generated@@24 $generated@@198 $generated@@200))
 :pattern ( ($generated@@24 $generated@@199 $generated@@200))
)))
 :pattern ( ($generated@@53 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@201 Int) ) (! (= ($generated@@60 $generated@@6 ($generated@@10 ($generated@@45 $generated@@201))) ($generated@@47 $generated@@123 ($generated@@60 $generated@@6 ($generated@@10 $generated@@201))))
 :pattern ( ($generated@@60 $generated@@6 ($generated@@10 ($generated@@45 $generated@@201))))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@T) ) (! (= ($generated@@60 $generated@@203 ($generated@@47 $generated@@203 $generated@@202)) ($generated@@47 $generated@@123 ($generated@@60 $generated@@203 $generated@@202)))
 :pattern ( ($generated@@60 $generated@@203 ($generated@@47 $generated@@203 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Int) ) (!  (=> (and ($generated@@52 $generated@@205) (<= ($generated@@45 0) $generated@@206)) (= ($generated@@29 $generated@@204 $generated@@206)  (not ($generated@@27 $generated@@21 $generated@@21 $generated@@205 ($generated@@28 ($generated@@78 $generated@@79)) ($generated@@60 $generated@@6 ($generated@@10 $generated@@206))))))
 :pattern ( ($generated@@29 $generated@@204 $generated@@206) ($generated@@52 $generated@@205))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () Bool)
(declare-fun $generated@@211 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@212 true))
(let (($generated@@213 true))
(let (($generated@@214  (=> (= $generated@@207 ($generated@@155 $generated@@120 $generated@@208 $generated false)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (not (= 0 $generated@@68)) (not true))) (=> (or (not (= 0 $generated@@68)) (not true)) (=> (and (and ($generated@@73 ($generated@@60 $generated@@35 ($generated@@28 ($generated@@78 $generated@@79))) ($generated@@36 $generated@@21 $generated@@21) $generated@@208) ($generated@@20 $generated@@6 ($generated@@10 $generated@@209) $generated@@21 $generated@@208)) (and (= $generated@@210 (forall (($generated@@215 T@U) ($generated@@216 T@U) )  (=> (and (and (or (not (= $generated@@215 $generated@@120)) (not true)) ($generated@@9 ($generated@@30 $generated@@5 ($generated@@121 $generated@@122 $generated@@123 ($generated@@121 $generated@@119 ($generated@@124 $generated@@122 $generated@@123) $generated@@208 $generated@@215) $generated)))) ($generated@@24 ($generated@@50 $generated@@21 $generated@@21 $generated@@208 ($generated@@28 ($generated@@78 $generated@@79)) ($generated@@60 $generated@@6 ($generated@@10 $generated@@209))) ($generated@@60 $generated@@119 $generated@@215))) ($generated@@9 ($generated@@154 $generated@@119 $generated@@122 $generated@@5 $generated@@207 $generated@@215 $generated@@216))))) (not ($generated@@27 $generated@@21 $generated@@21 $generated@@208 ($generated@@28 ($generated@@78 $generated@@79)) ($generated@@60 $generated@@6 ($generated@@10 $generated@@209)))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@210) (=> $generated@@210 (and (=> (= (ControlFlow 0 3) 1) $generated@@213) (=> (= (ControlFlow 0 3) 2) $generated@@212))))))))))
(let (($generated@@217  (=> (and (and (and ($generated@@52 $generated@@208) ($generated@@211 $generated@@208)) (<= ($generated@@45 0) $generated@@209)) (and (= 0 $generated@@68) (= (ControlFlow 0 6) 3))) $generated@@214)))
$generated@@217)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
