(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@49 () Int)
(declare-fun $generated@@50 (T@U Int) Int)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 (Int) Bool)
(declare-fun $generated@@53 (Int) Bool)
(declare-fun $generated@@54 (T@U Int) Int)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@67 (T@U Int) Bool)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 () T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@T T@T) T@T)
(declare-fun $generated@@123 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T) T@T)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated) $generated@@0))
(assert (forall (($generated@@23 T@U) ) (!  (not ($generated@@21 $generated@@22 $generated@@23))
 :pattern ( ($generated@@21 $generated@@22 $generated@@23))
)))
(assert (= ($generated@@4 $generated@@25) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and (and ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@29 $generated@@30)) (forall (($generated@@33 T@U) ) (!  (=> ($generated@@27 $generated@@33 $generated@@31) ($generated@@27 $generated@@33 $generated@@29))
 :pattern ( ($generated@@27 $generated@@33 $generated@@31))
 :pattern ( ($generated@@27 $generated@@33 $generated@@29))
))) (forall (($generated@@34 T@U) ) (!  (=> ($generated@@27 $generated@@34 $generated@@30) ($generated@@27 $generated@@34 $generated@@32))
 :pattern ( ($generated@@27 $generated@@34 $generated@@30))
 :pattern ( ($generated@@27 $generated@@34 $generated@@32))
))) ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@31 $generated@@32)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@29 $generated@@30)) ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@31 $generated@@32)))
)))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and ($generated@@42 $generated@@46) (and ($generated@@27 $generated@@48 $generated@@44) ($generated@@24 $generated@@25 $generated@@47 ($generated@@26 $generated@@44 $generated@@45)))) (= ($generated@@43 ($generated@@40 $generated@@44 $generated@@45 $generated@@41 $generated@@47 $generated@@48) $generated@@22) ($generated@@43 ($generated@@40 $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48) $generated@@22)))
 :pattern ( ($generated@@40 $generated@@44 $generated@@45 $generated@@41 $generated@@47 $generated@@48) ($generated@@42 $generated@@46))
 :pattern ( ($generated@@40 $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48))
)))
(assert  (=> (<= 1 $generated@@49) (forall (($generated@@55 T@U) ($generated@@56 Int) ) (!  (=> (or ($generated@@52 ($generated@@35 $generated@@56)) (< 1 $generated@@49)) (and ($generated@@53 ($generated@@35 $generated@@56)) (= ($generated@@50 ($generated@@51 $generated@@55) ($generated@@35 $generated@@56)) ($generated@@35 ($generated@@54 ($generated@@51 $generated@@55) ($generated@@35 $generated@@56))))))
 :weight 3
 :pattern ( ($generated@@50 ($generated@@51 $generated@@55) ($generated@@35 $generated@@56)))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 Int) ) (! (= ($generated@@50 $generated@@61 $generated@@63) ($generated@@11 ($generated@@57 $generated@@6 ($generated@@58 $generated $generated $generated@@62 ($generated@@59 $generated@@61) ($generated@@60 $generated@@6 ($generated@@10 $generated@@63))))))
 :pattern ( ($generated@@50 $generated@@61 $generated@@63) ($generated@@42 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@60 $generated@@65 ($generated@@57 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@57 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@66 $generated $generated $generated@@69 ($generated@@59 $generated@@68) $generated@@70) ($generated@@67 $generated@@68 ($generated@@11 ($generated@@57 $generated@@6 $generated@@70))))
 :pattern ( ($generated@@66 $generated $generated $generated@@69 ($generated@@59 $generated@@68) $generated@@70))
)))
(assert  (=> (<= 1 $generated@@49) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 Int) ) (!  (=> (or ($generated@@53 $generated@@74) (and (< 1 $generated@@49) (and ($generated@@42 $generated@@73) (not ($generated@@66 $generated $generated $generated@@73 ($generated@@59 ($generated@@51 $generated@@71)) ($generated@@60 $generated@@6 ($generated@@10 $generated@@74))))))) (= ($generated@@54 ($generated@@51 $generated@@72) $generated@@74) $generated@@74))
 :pattern ( ($generated@@54 ($generated@@51 $generated@@72) $generated@@74) ($generated@@42 $generated@@73))
))))
(assert ($generated@@42 $generated@@41))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@75 ($generated@@60 $generated@@80 $generated@@77) $generated@@78 $generated@@79) ($generated@@76 $generated@@80 $generated@@77 $generated@@78 $generated@@79))
 :pattern ( ($generated@@75 ($generated@@60 $generated@@80 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@58 $generated $generated $generated@@82 ($generated@@59 $generated@@81) $generated@@83) ($generated@@60 $generated@@6 ($generated@@10 ($generated@@50 $generated@@81 ($generated@@11 ($generated@@57 $generated@@6 $generated@@83))))))
 :pattern ( ($generated@@58 $generated $generated $generated@@82 ($generated@@59 $generated@@81) $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and ($generated@@42 $generated@@87) ($generated@@76 $generated@@25 $generated@@84 ($generated@@26 $generated@@85 $generated@@86) $generated@@87)) (forall (($generated@@88 T@U) ) (!  (=> (and ($generated@@75 $generated@@88 $generated@@85 $generated@@87) ($generated@@66 $generated@@85 $generated@@86 $generated@@87 $generated@@84 $generated@@88)) ($generated@@75 ($generated@@58 $generated@@85 $generated@@86 $generated@@87 $generated@@84 $generated@@88) $generated@@86 $generated@@87))
 :pattern ( ($generated@@58 $generated@@85 $generated@@86 $generated@@87 $generated@@84 $generated@@88))
)))
 :pattern ( ($generated@@76 $generated@@25 $generated@@84 ($generated@@26 $generated@@85 $generated@@86) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 Int) ) (! (= ($generated@@67 $generated@@89 $generated@@90) true)
 :pattern ( ($generated@@67 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@43 $generated@@91 $generated@@92) (= $generated@@91 $generated@@92))
 :pattern ( ($generated@@43 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@93 ($generated@@26 $generated@@94 $generated@@95)) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@96) ($generated@@27 $generated@@97 $generated@@94)) ($generated@@66 $generated@@94 $generated@@95 $generated@@96 $generated@@93 $generated@@97)) ($generated@@27 ($generated@@58 $generated@@94 $generated@@95 $generated@@96 $generated@@93 $generated@@97) $generated@@95))
 :pattern ( ($generated@@58 $generated@@94 $generated@@95 $generated@@96 $generated@@93 $generated@@97))
)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@93 ($generated@@26 $generated@@94 $generated@@95)))
)))
(assert  (=> (<= 1 $generated@@49) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 Int) ) (!  (=> (or ($generated@@53 ($generated@@35 $generated@@100)) (and (< 1 $generated@@49) (and ($generated@@42 $generated@@99) (not ($generated@@66 $generated $generated $generated@@99 ($generated@@59 ($generated@@51 $generated@@71)) ($generated@@60 $generated@@6 ($generated@@10 ($generated@@35 $generated@@100)))))))) (= ($generated@@54 ($generated@@51 $generated@@98) ($generated@@35 $generated@@100)) ($generated@@35 $generated@@100)))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@51 $generated@@98) ($generated@@35 $generated@@100)) ($generated@@42 $generated@@99))
))))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@27 $generated@@101 $generated) (and (= ($generated@@60 $generated@@6 ($generated@@57 $generated@@6 $generated@@101)) $generated@@101) ($generated@@24 $generated@@6 ($generated@@57 $generated@@6 $generated@@101) $generated)))
 :pattern ( ($generated@@27 $generated@@101 $generated))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@27 ($generated@@60 $generated@@104 $generated@@102) $generated@@103) ($generated@@24 $generated@@104 $generated@@102 $generated@@103))
 :pattern ( ($generated@@27 ($generated@@60 $generated@@104 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@105 ($generated@@26 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@26 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@108 ($generated@@26 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@26 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@57 $generated@@112 ($generated@@60 $generated@@112 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@60 $generated@@112 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 Int) ) (! (= ($generated@@50 ($generated@@51 $generated@@113) $generated@@114) ($generated@@50 $generated@@113 $generated@@114))
 :pattern ( ($generated@@50 ($generated@@51 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 Int) ) (! (= ($generated@@54 ($generated@@51 $generated@@115) $generated@@116) ($generated@@54 $generated@@115 $generated@@116))
 :pattern ( ($generated@@54 ($generated@@51 $generated@@115) $generated@@116))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@4 $generated@@117) 4) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@119 $generated@@126 $generated@@127 ($generated@@123 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@130) $generated@@128)
 :weight 0
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@119 $generated@@131 $generated@@132 ($generated@@123 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@119 $generated@@131 $generated@@132 $generated@@134 $generated@@136)))
 :weight 0
))) (= ($generated@@4 $generated@@120) 5)) (= ($generated@@4 $generated@@121) 6)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@4 ($generated@@122 $generated@@137 $generated@@138)) 7))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@124 ($generated@@122 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@122 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@125 ($generated@@122 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@122 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@42 $generated@@146) (= ($generated@@76 $generated@@25 $generated@@143 ($generated@@26 $generated@@144 $generated@@145) $generated@@146) (forall (($generated@@147 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@147 $generated@@144) ($generated@@75 $generated@@147 $generated@@144 $generated@@146)) ($generated@@66 $generated@@144 $generated@@145 $generated@@146 $generated@@143 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (or (not (= $generated@@148 $generated@@118)) (not true)) ($generated@@21 ($generated@@40 $generated@@144 $generated@@145 $generated@@146 $generated@@143 $generated@@147) ($generated@@60 $generated@@117 $generated@@148))) ($generated@@9 ($generated@@57 $generated@@5 ($generated@@119 $generated@@120 $generated@@121 ($generated@@119 $generated@@117 ($generated@@122 $generated@@120 $generated@@121) $generated@@146 $generated@@148) $generated@@1))))
 :pattern ( ($generated@@21 ($generated@@40 $generated@@144 $generated@@145 $generated@@146 $generated@@143 $generated@@147) ($generated@@60 $generated@@117 $generated@@148)))
)))
 :pattern ( ($generated@@58 $generated@@144 $generated@@145 $generated@@146 $generated@@143 $generated@@147))
 :pattern ( ($generated@@40 $generated@@144 $generated@@145 $generated@@146 $generated@@143 $generated@@147))
))))
 :pattern ( ($generated@@76 $generated@@25 $generated@@143 ($generated@@26 $generated@@144 $generated@@145) $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@27 $generated@@151 ($generated@@26 $generated@@149 $generated@@150)) (and (= ($generated@@60 $generated@@25 ($generated@@57 $generated@@25 $generated@@151)) $generated@@151) ($generated@@24 $generated@@25 ($generated@@57 $generated@@25 $generated@@151) ($generated@@26 $generated@@149 $generated@@150))))
 :pattern ( ($generated@@27 $generated@@151 ($generated@@26 $generated@@149 $generated@@150)))
)))
(assert  (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@152 $generated@@155 $generated@@156 $generated@@157 ($generated@@154 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@160 $generated@@161) $generated@@158)
 :weight 0
)) (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@152 $generated@@162 $generated@@163 $generated@@164 ($generated@@154 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@152 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@152 $generated@@171 $generated@@172 $generated@@173 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@152 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@9 ($generated@@152 $generated@@117 $generated@@120 $generated@@5 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@9 ($generated@@57 $generated@@5 ($generated@@119 $generated@@120 $generated@@121 ($generated@@119 $generated@@117 ($generated@@122 $generated@@120 $generated@@121) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@152 $generated@@117 $generated@@120 $generated@@5 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (and (= ($generated@@20 ($generated@@26 $generated@@187 $generated@@188)) $generated@@2) (= ($generated@@186 ($generated@@26 $generated@@187 $generated@@188)) $generated@@3))
 :pattern ( ($generated@@26 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@191) (and ($generated@@27 $generated@@193 $generated@@189) ($generated@@24 $generated@@25 $generated@@192 ($generated@@26 $generated@@189 $generated@@190)))) ($generated@@43 ($generated@@40 $generated@@189 $generated@@190 $generated@@41 $generated@@192 $generated@@193) $generated@@22)) (= ($generated@@66 $generated@@189 $generated@@190 $generated@@41 $generated@@192 $generated@@193) ($generated@@66 $generated@@189 $generated@@190 $generated@@191 $generated@@192 $generated@@193)))
 :pattern ( ($generated@@66 $generated@@189 $generated@@190 $generated@@41 $generated@@192 $generated@@193) ($generated@@42 $generated@@191))
 :pattern ( ($generated@@66 $generated@@189 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@59 ($generated@@51 $generated@@194)) ($generated@@59 $generated@@194))
 :pattern ( ($generated@@59 ($generated@@51 $generated@@194)))
)))
(assert  (=> (<= 1 $generated@@49) (forall (($generated@@195 T@U) ($generated@@196 Int) ) (!  (=> (or ($generated@@52 $generated@@196) (< 1 $generated@@49)) (and ($generated@@53 $generated@@196) (= ($generated@@50 ($generated@@51 $generated@@195) $generated@@196) ($generated@@54 $generated@@195 $generated@@196))))
 :pattern ( ($generated@@50 ($generated@@51 $generated@@195) $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@21 ($generated@@40 $generated $generated $generated@@199 ($generated@@59 $generated@@198) $generated@@200) $generated@@197) false)
 :pattern ( ($generated@@21 ($generated@@40 $generated $generated $generated@@199 ($generated@@59 $generated@@198) $generated@@200) $generated@@197))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@43 $generated@@201 $generated@@202) (forall (($generated@@203 T@U) ) (! (= ($generated@@21 $generated@@201 $generated@@203) ($generated@@21 $generated@@202 $generated@@203))
 :pattern ( ($generated@@21 $generated@@201 $generated@@203))
 :pattern ( ($generated@@21 $generated@@202 $generated@@203))
)))
 :pattern ( ($generated@@43 $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@60 $generated@@6 ($generated@@10 ($generated@@35 $generated@@204))) ($generated@@37 $generated@@121 ($generated@@60 $generated@@6 ($generated@@10 $generated@@204))))
 :pattern ( ($generated@@60 $generated@@6 ($generated@@10 ($generated@@35 $generated@@204))))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@T) ) (! (= ($generated@@60 $generated@@206 ($generated@@37 $generated@@206 $generated@@205)) ($generated@@37 $generated@@121 ($generated@@60 $generated@@206 $generated@@205)))
 :pattern ( ($generated@@60 $generated@@206 ($generated@@37 $generated@@206 $generated@@205)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! ($generated@@76 $generated@@6 $generated@@208 $generated $generated@@207)
 :pattern ( ($generated@@76 $generated@@6 $generated@@208 $generated $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ) (! ($generated@@24 $generated@@6 $generated@@209 $generated)
 :pattern ( ($generated@@24 $generated@@6 $generated@@209 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () Bool)
(declare-fun $generated@@214 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@215 true))
(let (($generated@@216 true))
(let (($generated@@217  (=> (= $generated@@210 ($generated@@153 $generated@@118 $generated@@211 $generated@@1 false)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (not (= 1 $generated@@49)) (not true))) (=> (or (not (= 1 $generated@@49)) (not true)) (=> (and (and ($generated@@75 ($generated@@60 $generated@@25 ($generated@@59 ($generated@@51 $generated@@71))) ($generated@@26 $generated $generated) $generated@@211) ($generated@@76 $generated@@6 ($generated@@10 $generated@@212) $generated $generated@@211)) (and (= $generated@@213 (forall (($generated@@218 T@U) ($generated@@219 T@U) )  (=> (and (and (or (not (= $generated@@218 $generated@@118)) (not true)) ($generated@@9 ($generated@@57 $generated@@5 ($generated@@119 $generated@@120 $generated@@121 ($generated@@119 $generated@@117 ($generated@@122 $generated@@120 $generated@@121) $generated@@211 $generated@@218) $generated@@1)))) ($generated@@21 ($generated@@40 $generated $generated $generated@@211 ($generated@@59 ($generated@@51 $generated@@71)) ($generated@@60 $generated@@6 ($generated@@10 $generated@@212))) ($generated@@60 $generated@@117 $generated@@218))) ($generated@@9 ($generated@@152 $generated@@117 $generated@@120 $generated@@5 $generated@@210 $generated@@218 $generated@@219))))) (not ($generated@@66 $generated $generated $generated@@211 ($generated@@59 ($generated@@51 $generated@@71)) ($generated@@60 $generated@@6 ($generated@@10 $generated@@212)))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@213) (=> $generated@@213 (and (=> (= (ControlFlow 0 3) 1) $generated@@216) (=> (= (ControlFlow 0 3) 2) $generated@@215))))))))))
(let (($generated@@220  (=> (and (and ($generated@@42 $generated@@211) ($generated@@214 $generated@@211)) (and (= 1 $generated@@49) (= (ControlFlow 0 6) 3))) $generated@@217)))
$generated@@220)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
