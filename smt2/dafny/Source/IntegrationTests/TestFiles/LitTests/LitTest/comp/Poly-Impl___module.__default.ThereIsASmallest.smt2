(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@52 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@58 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T T@T) T@T)
(declare-fun $generated@@70 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@97 (T@U T@U T@U) Bool)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@123 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@154 (T@U) Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@207 (T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@27 ($generated@@26 $generated@@28 $generated@@29) $generated@@29)
 :pattern ( ($generated@@26 $generated@@28 $generated@@29))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@30 $generated@@32) ($generated@@27 ($generated@@26 $generated@@30 $generated@@31) $generated@@32))
 :pattern ( ($generated@@26 $generated@@30 $generated@@31) ($generated@@27 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@27 ($generated@@26 $generated@@33 $generated@@34) $generated@@35)  (or (= $generated@@35 $generated@@34) ($generated@@27 $generated@@33 $generated@@35)))
 :pattern ( ($generated@@27 ($generated@@26 $generated@@33 $generated@@34) $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> ($generated@@27 $generated@@38 $generated@@39) (not ($generated@@27 ($generated@@36 $generated@@37 $generated@@38) $generated@@39)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38) ($generated@@27 $generated@@38 $generated@@39))
)))
(assert (= ($generated@@9 $generated@@42) 3))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@46 ($generated@@43 $generated@@44 $generated@@45)) ($generated@@40 $generated@@46))
 :pattern ( ($generated@@40 $generated@@46) ($generated@@41 $generated@@42 $generated@@46 ($generated@@43 $generated@@44 $generated@@45)))
)))
(assert (forall (($generated@@48 T@U) ) (!  (not ($generated@@27 $generated@@47 $generated@@48))
 :pattern ( ($generated@@27 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@27 ($generated@@36 $generated@@49 $generated@@50) $generated@@51)  (and ($generated@@27 $generated@@49 $generated@@51) (not ($generated@@27 $generated@@50 $generated@@51))))
 :pattern ( ($generated@@27 ($generated@@36 $generated@@49 $generated@@50) $generated@@51))
)))
(assert (= ($generated@@9 $generated@@53) 4))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@52 $generated@@53 $generated@@56 $generated@@54 $generated@@57) ($generated@@52 $generated@@53 $generated@@56 $generated@@55 $generated@@57))
 :pattern ( ($generated@@52 $generated@@53 $generated@@56 $generated@@54 $generated@@57))
 :pattern ( ($generated@@52 $generated@@53 $generated@@56 $generated@@55 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@41 $generated@@42 ($generated@@58 $generated@@62 $generated@@63) ($generated@@43 $generated@@60 $generated@@61))  (and ($generated@@59 $generated@@62 $generated@@60) ($generated@@59 $generated@@63 $generated@@61)))
 :pattern ( ($generated@@41 $generated@@42 ($generated@@58 $generated@@62 $generated@@63) ($generated@@43 $generated@@60 $generated@@61)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@66 $generated@@73 $generated@@74 ($generated@@70 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@77) $generated@@75)
 :weight 0
)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (or (= $generated@@82 $generated@@83) (= ($generated@@66 $generated@@78 $generated@@79 ($generated@@70 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@80) $generated@@83) ($generated@@66 $generated@@78 $generated@@79 $generated@@81 $generated@@83)))
 :weight 0
))) (= ($generated@@9 $generated@@67) 5)) (= ($generated@@9 $generated@@68) 6)) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (= ($generated@@9 ($generated@@69 $generated@@84 $generated@@85)) 7))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@71 ($generated@@69 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@69 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@72 ($generated@@69 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@69 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@52 $generated@@53 $generated@@90 $generated@@55 $generated@@91)  (or (= $generated@@90 $generated@@64) ($generated@@14 ($generated@@65 $generated@@10 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@53 ($generated@@69 $generated@@67 $generated@@68) $generated@@91 $generated@@90) $generated@@2)))))
 :pattern ( ($generated@@52 $generated@@53 $generated@@90 $generated@@55 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@92 $generated@@93 $generated@@94) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@27 $generated@@93 $generated@@95) ($generated@@27 $generated@@94 $generated@@95))
 :pattern ( ($generated@@27 $generated@@93 $generated@@95))
 :pattern ( ($generated@@27 $generated@@94 $generated@@95))
)))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> ($generated@@96 $generated@@102) (= ($generated@@52 $generated@@42 ($generated@@58 $generated@@100 $generated@@101) ($generated@@43 $generated@@98 $generated@@99) $generated@@102)  (and ($generated@@97 $generated@@100 $generated@@98 $generated@@102) ($generated@@97 $generated@@101 $generated@@99 $generated@@102))))
 :pattern ( ($generated@@52 $generated@@42 ($generated@@58 $generated@@100 $generated@@101) ($generated@@43 $generated@@98 $generated@@99) $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@40 $generated@@104) (= ($generated@@103 $generated@@104) $generated@@3))
 :pattern ( ($generated@@40 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 ($generated@@65 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@65 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@40 $generated@@108) (exists (($generated@@109 T@U) ($generated@@110 T@U) ) (= $generated@@108 ($generated@@58 $generated@@109 $generated@@110))))
 :pattern ( ($generated@@40 $generated@@108))
)))
(assert (= ($generated@@9 $generated@@111) 8))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@41 $generated@@111 $generated@@113 ($generated@@112 $generated@@114)) (forall (($generated@@115 T@U) ) (!  (=> ($generated@@27 $generated@@113 $generated@@115) ($generated@@59 $generated@@115 $generated@@114))
 :pattern ( ($generated@@27 $generated@@113 $generated@@115))
)))
 :pattern ( ($generated@@41 $generated@@111 $generated@@113 ($generated@@112 $generated@@114)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@97 ($generated@@105 $generated@@119 $generated@@116) $generated@@117 $generated@@118) ($generated@@52 $generated@@119 $generated@@116 $generated@@117 $generated@@118))
 :pattern ( ($generated@@97 ($generated@@105 $generated@@119 $generated@@116) $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@59 $generated@@120 $generated@@55) (and (= ($generated@@105 $generated@@53 ($generated@@65 $generated@@53 $generated@@120)) $generated@@120) ($generated@@41 $generated@@53 ($generated@@65 $generated@@53 $generated@@120) $generated@@55)))
 :pattern ( ($generated@@59 $generated@@120 $generated@@55))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@59 $generated@@121 $generated@@54) (and (= ($generated@@105 $generated@@53 ($generated@@65 $generated@@53 $generated@@121)) $generated@@121) ($generated@@41 $generated@@53 ($generated@@65 $generated@@53 $generated@@121) $generated@@54)))
 :pattern ( ($generated@@59 $generated@@121 $generated@@54))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@41 $generated@@53 $generated@@122 $generated@@54)  (and ($generated@@41 $generated@@53 $generated@@122 $generated@@55) (or (not (= $generated@@122 $generated@@64)) (not true))))
 :pattern ( ($generated@@41 $generated@@53 $generated@@122 $generated@@54))
 :pattern ( ($generated@@41 $generated@@53 $generated@@122 $generated@@55))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> ($generated@@123 $generated@@124 $generated@@125) (= $generated@@124 $generated@@125))
 :pattern ( ($generated@@123 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@59 $generated@@126 $generated) (and (= ($generated@@105 $generated@@12 ($generated@@65 $generated@@12 $generated@@126)) $generated@@126) ($generated@@41 $generated@@12 ($generated@@65 $generated@@12 $generated@@126) $generated)))
 :pattern ( ($generated@@59 $generated@@126 $generated))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@59 ($generated@@105 $generated@@129 $generated@@127) $generated@@128) ($generated@@41 $generated@@129 $generated@@127 $generated@@128))
 :pattern ( ($generated@@59 ($generated@@105 $generated@@129 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@52 $generated@@111 $generated@@130 ($generated@@112 $generated@@131) $generated@@132) (forall (($generated@@133 T@U) ) (!  (=> ($generated@@27 $generated@@130 $generated@@133) ($generated@@97 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@27 $generated@@130 $generated@@133))
)))
 :pattern ( ($generated@@52 $generated@@111 $generated@@130 ($generated@@112 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@103 ($generated@@58 $generated@@134 $generated@@135)) $generated@@3)
 :pattern ( ($generated@@58 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@136 ($generated@@43 $generated@@137 $generated@@138)) $generated@@137)
 :pattern ( ($generated@@43 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@139 ($generated@@43 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@43 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@142 ($generated@@58 $generated@@143 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@58 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@145 ($generated@@58 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@58 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@112 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@112 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@25 ($generated@@112 $generated@@150)) $generated@@1)
 :pattern ( ($generated@@112 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@65 $generated@@152 ($generated@@105 $generated@@152 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@105 $generated@@152 $generated@@151))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (< ($generated@@153 $generated@@155) ($generated@@154 ($generated@@58 $generated@@155 $generated@@156)))
 :pattern ( ($generated@@58 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (< ($generated@@153 $generated@@158) ($generated@@154 ($generated@@58 $generated@@157 $generated@@158)))
 :pattern ( ($generated@@58 $generated@@157 $generated@@158))
)))
(assert  (=> (<= 1 $generated@@159) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (or ($generated@@161 $generated@@162 $generated@@163) (and (< 1 $generated@@159) (and ($generated@@96 $generated@@162) (and (or (not (= $generated@@163 $generated@@64)) (not true)) (and ($generated@@41 $generated@@53 $generated@@163 $generated@@54) ($generated@@52 $generated@@53 $generated@@163 $generated@@54 $generated@@162)))))) ($generated@@41 $generated@@42 ($generated@@160 $generated@@162 $generated@@163) ($generated@@43 $generated $generated)))
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@59 $generated@@166 ($generated@@43 $generated@@164 $generated@@165)) (and (= ($generated@@105 $generated@@42 ($generated@@65 $generated@@42 $generated@@166)) $generated@@166) ($generated@@41 $generated@@42 ($generated@@65 $generated@@42 $generated@@166) ($generated@@43 $generated@@164 $generated@@165))))
 :pattern ( ($generated@@59 $generated@@166 ($generated@@43 $generated@@164 $generated@@165)))
)))
(assert  (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@167 $generated@@170 $generated@@171 $generated@@172 ($generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@175 $generated@@176) $generated@@173)
 :weight 0
)) (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@167 $generated@@177 $generated@@178 $generated@@179 ($generated@@169 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@167 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@167 $generated@@186 $generated@@187 $generated@@188 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@167 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Bool) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@14 ($generated@@167 $generated@@53 $generated@@67 $generated@@10 ($generated@@168 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))  (=> (and (or (not (= $generated@@199 $generated@@195)) (not true)) ($generated@@14 ($generated@@65 $generated@@10 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@53 ($generated@@69 $generated@@67 $generated@@68) $generated@@196 $generated@@199) $generated@@197)))) $generated@@198))
 :pattern ( ($generated@@167 $generated@@53 $generated@@67 $generated@@10 ($generated@@168 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (and (= ($generated@@25 ($generated@@43 $generated@@202 $generated@@203)) $generated@@4) (= ($generated@@201 ($generated@@43 $generated@@202 $generated@@203)) $generated@@7))
 :pattern ( ($generated@@43 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ) (! (= ($generated@@153 ($generated@@105 $generated@@42 $generated@@204)) ($generated@@154 $generated@@204))
 :pattern ( ($generated@@153 ($generated@@105 $generated@@42 $generated@@204)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> ($generated@@59 $generated@@205 ($generated@@112 $generated@@206)) (and (= ($generated@@105 $generated@@111 ($generated@@65 $generated@@111 $generated@@205)) $generated@@205) ($generated@@41 $generated@@111 ($generated@@65 $generated@@111 $generated@@205) ($generated@@112 $generated@@206))))
 :pattern ( ($generated@@59 $generated@@205 ($generated@@112 $generated@@206)))
)))
(assert (= ($generated@@25 $generated@@55) $generated@@5))
(assert (= ($generated@@201 $generated@@55) $generated@@8))
(assert (= ($generated@@25 $generated@@54) $generated@@6))
(assert (= ($generated@@201 $generated@@54) $generated@@8))
(assert (forall (($generated@@209 T@U) ) (! (= ($generated@@41 $generated@@53 $generated@@209 $generated@@55)  (or (= $generated@@209 $generated@@64) ($generated@@207 ($generated@@208 $generated@@209))))
 :pattern ( ($generated@@41 $generated@@53 $generated@@209 $generated@@55))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@123 $generated@@210 $generated@@211) (forall (($generated@@212 T@U) ) (! (= ($generated@@27 $generated@@210 $generated@@212) ($generated@@27 $generated@@211 $generated@@212))
 :pattern ( ($generated@@27 $generated@@210 $generated@@212))
 :pattern ( ($generated@@27 $generated@@211 $generated@@212))
)))
 :pattern ( ($generated@@123 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and ($generated@@96 $generated@@215) (and ($generated@@40 $generated@@213) (exists (($generated@@216 T@U) ) (! ($generated@@52 $generated@@42 $generated@@213 ($generated@@43 $generated@@214 $generated@@216) $generated@@215)
 :pattern ( ($generated@@52 $generated@@42 $generated@@213 ($generated@@43 $generated@@214 $generated@@216) $generated@@215))
)))) ($generated@@97 ($generated@@142 $generated@@213) $generated@@214 $generated@@215))
 :pattern ( ($generated@@97 ($generated@@142 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and ($generated@@96 $generated@@219) (and ($generated@@40 $generated@@217) (exists (($generated@@220 T@U) ) (! ($generated@@52 $generated@@42 $generated@@217 ($generated@@43 $generated@@220 $generated@@218) $generated@@219)
 :pattern ( ($generated@@52 $generated@@42 $generated@@217 ($generated@@43 $generated@@220 $generated@@218) $generated@@219))
)))) ($generated@@97 ($generated@@145 $generated@@217) $generated@@218 $generated@@219))
 :pattern ( ($generated@@97 ($generated@@145 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! ($generated@@52 $generated@@12 $generated@@222 $generated $generated@@221)
 :pattern ( ($generated@@52 $generated@@12 $generated@@222 $generated $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (! ($generated@@41 $generated@@12 $generated@@223 $generated)
 :pattern ( ($generated@@41 $generated@@12 $generated@@223 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () Bool)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@242  (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@225))) (=> ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@225)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@243 T@U) ) (!  (=> ($generated@@41 $generated@@53 $generated@@243 $generated@@54) (=> ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@243)) (<= ($generated@@18 ($generated@@65 $generated@@12 ($generated@@142 ($generated@@160 $generated@@226 $generated@@225)))) ($generated@@18 ($generated@@65 $generated@@12 ($generated@@142 ($generated@@160 $generated@@226 $generated@@243)))))))
 :pattern ( ($generated@@160 $generated@@226 $generated@@243))
 :pattern ( ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@243)))
))))))))
(let (($generated@@244  (=> (and (and (not (exists (($generated@@245 T@U) ) (!  (and ($generated@@41 $generated@@53 $generated@@245 $generated@@54) (and ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@245)) (< ($generated@@18 ($generated@@65 $generated@@12 ($generated@@142 ($generated@@160 $generated@@227 $generated@@245)))) ($generated@@18 ($generated@@65 $generated@@12 ($generated@@142 ($generated@@160 $generated@@227 $generated@@228)))))))
 :pattern ( ($generated@@160 $generated@@227 $generated@@245))
 :pattern ( ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@245)))
))) (= $generated@@225 $generated@@228)) (and (= $generated@@226 $generated@@227) (= (ControlFlow 0 10) 2))) $generated@@242)))
(let (($generated@@246  (=> (and ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@229)) (< ($generated@@18 ($generated@@65 $generated@@12 ($generated@@142 ($generated@@160 $generated@@227 $generated@@229)))) ($generated@@18 ($generated@@65 $generated@@12 ($generated@@142 ($generated@@160 $generated@@227 $generated@@228)))))) (and (=> (= (ControlFlow 0 5) (- 0 9)) true) (=> (= $generated@@230 ($generated@@36 $generated@@224 ($generated@@26 $generated@@47 ($generated@@105 $generated@@53 $generated@@228)))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@27 $generated@@230 ($generated@@105 $generated@@53 $generated@@229))) (=> ($generated@@27 $generated@@230 ($generated@@105 $generated@@53 $generated@@229)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and ($generated@@92 $generated@@230 $generated@@224) (not ($generated@@92 $generated@@224 $generated@@230)))) (=> (and ($generated@@92 $generated@@230 $generated@@224) (not ($generated@@92 $generated@@224 $generated@@230))) (=> (and ($generated@@41 $generated@@53 $generated@@231 $generated@@54) ($generated@@52 $generated@@53 $generated@@231 $generated@@54 $generated@@227)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not ($generated@@123 $generated@@230 $generated@@47))) (=> (not ($generated@@123 $generated@@230 $generated@@47)) (=> (and ($generated@@96 $generated@@232) ($generated@@233 $generated@@232)) (=> (and (and (and (and ($generated@@41 $generated@@53 $generated@@234 $generated@@54) ($generated@@52 $generated@@53 $generated@@234 $generated@@54 $generated@@232)) (=> ($generated@@27 $generated@@230 ($generated@@105 $generated@@53 $generated@@234)) (forall (($generated@@247 T@U) ) (!  (=> ($generated@@41 $generated@@53 $generated@@247 $generated@@54) (=> ($generated@@27 $generated@@230 ($generated@@105 $generated@@53 $generated@@247)) (and (and ($generated@@161 $generated@@232 $generated@@234) ($generated@@40 ($generated@@160 $generated@@232 $generated@@234))) (and ($generated@@161 $generated@@232 $generated@@247) ($generated@@40 ($generated@@160 $generated@@232 $generated@@247))))))
 :pattern ( ($generated@@160 $generated@@232 $generated@@247))
 :pattern ( ($generated@@27 $generated@@230 ($generated@@105 $generated@@53 $generated@@247)))
)))) (and ($generated@@27 $generated@@230 ($generated@@105 $generated@@53 $generated@@234)) (forall (($generated@@248 T@U) ) (!  (=> ($generated@@41 $generated@@53 $generated@@248 $generated@@54) (=> ($generated@@27 $generated@@230 ($generated@@105 $generated@@53 $generated@@248)) (<= ($generated@@18 ($generated@@65 $generated@@12 ($generated@@142 ($generated@@160 $generated@@232 $generated@@234)))) ($generated@@18 ($generated@@65 $generated@@12 ($generated@@142 ($generated@@160 $generated@@232 $generated@@248)))))))
 :pattern ( ($generated@@160 $generated@@232 $generated@@248))
 :pattern ( ($generated@@27 $generated@@230 ($generated@@105 $generated@@53 $generated@@248)))
)))) (and (and (= $generated@@227 $generated@@232) (= $generated@@225 $generated@@234)) (and (= $generated@@226 $generated@@232) (= (ControlFlow 0 5) 2)))) $generated@@242))))))))))))))
(let (($generated@@249  (=> (forall (($generated@@250 T@U) ) (!  (=> ($generated@@41 $generated@@53 $generated@@250 $generated@@54) (=> ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@250)) (and (and ($generated@@161 $generated@@227 $generated@@250) ($generated@@40 ($generated@@160 $generated@@227 $generated@@250))) (and ($generated@@161 $generated@@227 $generated@@228) ($generated@@40 ($generated@@160 $generated@@227 $generated@@228))))))
 :pattern ( ($generated@@160 $generated@@227 $generated@@250))
 :pattern ( ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@250)))
)) (=> (and ($generated@@41 $generated@@53 $generated@@229 $generated@@54) ($generated@@52 $generated@@53 $generated@@229 $generated@@54 $generated@@227)) (and (=> (= (ControlFlow 0 11) 5) $generated@@246) (=> (= (ControlFlow 0 11) 10) $generated@@244))))))
(let (($generated@@251  (=> (and (not ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@235))) (= (ControlFlow 0 17) 11)) $generated@@249)))
(let (($generated@@252  (=> ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@235)) (and (=> (= (ControlFlow 0 13) (- 0 16)) (or (not (= $generated@@235 $generated@@64)) (not true))) (=> (or (not (= $generated@@235 $generated@@64)) (not true)) (=> (and (and ($generated@@97 ($generated@@105 $generated@@53 $generated@@235) $generated@@55 $generated@@227) ($generated@@161 $generated@@227 $generated@@235)) (and ($generated@@40 ($generated@@160 $generated@@227 $generated@@235)) ($generated@@40 ($generated@@160 $generated@@227 $generated@@235)))) (and (=> (= (ControlFlow 0 13) (- 0 15)) true) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (not (= $generated@@228 $generated@@64)) (not true))) (=> (or (not (= $generated@@228 $generated@@64)) (not true)) (=> ($generated@@97 ($generated@@105 $generated@@53 $generated@@228) $generated@@55 $generated@@227) (=> (and (and ($generated@@161 $generated@@227 $generated@@228) ($generated@@40 ($generated@@160 $generated@@227 $generated@@228))) (and ($generated@@40 ($generated@@160 $generated@@227 $generated@@228)) (= (ControlFlow 0 13) 11))) $generated@@249)))))))))))
(let (($generated@@253  (=> (and ($generated@@41 $generated@@53 $generated@@235 $generated@@54) ($generated@@52 $generated@@53 $generated@@235 $generated@@54 $generated@@227)) (and (=> (= (ControlFlow 0 18) 13) $generated@@252) (=> (= (ControlFlow 0 18) 17) $generated@@251)))))
(let (($generated@@254  (=> (and (not (and ($generated@@41 $generated@@53 $generated@@235 $generated@@54) ($generated@@52 $generated@@53 $generated@@235 $generated@@54 $generated@@227))) (= (ControlFlow 0 12) 11)) $generated@@249)))
(let (($generated@@255  (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (and ($generated@@41 $generated@@53 $generated@@64 $generated@@54) ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@64))) (exists (($generated@@256 T@U) )  (and ($generated@@41 $generated@@53 $generated@@256 $generated@@54) ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@256)))))) (=> (or (and ($generated@@41 $generated@@53 $generated@@64 $generated@@54) ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@64))) (exists (($generated@@257 T@U) )  (and ($generated@@41 $generated@@53 $generated@@257 $generated@@54) ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@257))))) (=> (and (=> true (and ($generated@@41 $generated@@53 $generated@@228 $generated@@54) ($generated@@52 $generated@@53 $generated@@228 $generated@@54 $generated@@227))) ($generated@@27 $generated@@224 ($generated@@105 $generated@@53 $generated@@228))) (and (=> (= (ControlFlow 0 19) 18) $generated@@253) (=> (= (ControlFlow 0 19) 12) $generated@@254)))))))
(let (($generated@@258  (=> (and (not (and ($generated@@41 $generated@@53 $generated@@236 $generated@@54) ($generated@@52 $generated@@53 $generated@@236 $generated@@54 $generated@@227))) (= (ControlFlow 0 22) 19)) $generated@@255)))
(let (($generated@@259  (=> (and (and ($generated@@41 $generated@@53 $generated@@236 $generated@@54) ($generated@@52 $generated@@53 $generated@@236 $generated@@54 $generated@@227)) (= (ControlFlow 0 21) 19)) $generated@@255)))
(let (($generated@@260  (=> (= $generated@@237 ($generated@@168 $generated@@64 $generated@@227 $generated@@2 false)) (and (=> (= (ControlFlow 0 23) 21) $generated@@259) (=> (= (ControlFlow 0 23) 22) $generated@@258)))))
(let (($generated@@261  (=> (and ($generated@@96 $generated@@227) ($generated@@233 $generated@@227)) (=> (and (and (and ($generated@@41 $generated@@111 $generated@@224 ($generated@@112 $generated@@54)) ($generated@@52 $generated@@111 $generated@@224 ($generated@@112 $generated@@54) $generated@@227)) (=> $generated@@238 (and ($generated@@41 $generated@@53 $generated@@239 $generated@@54) ($generated@@52 $generated@@53 $generated@@239 $generated@@54 $generated@@227)))) (and (and ($generated@@41 $generated@@53 $generated@@240 $generated@@54) ($generated@@52 $generated@@53 $generated@@240 $generated@@54 $generated@@227)) true)) (=> (and (and (and (and ($generated@@41 $generated@@111 $generated@@241 ($generated@@112 $generated@@54)) ($generated@@52 $generated@@111 $generated@@241 ($generated@@112 $generated@@54) $generated@@227)) true) (= 2 $generated@@159)) (and (not ($generated@@123 $generated@@224 $generated@@47)) (= (ControlFlow 0 24) 23))) $generated@@260)))))
$generated@@261))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
