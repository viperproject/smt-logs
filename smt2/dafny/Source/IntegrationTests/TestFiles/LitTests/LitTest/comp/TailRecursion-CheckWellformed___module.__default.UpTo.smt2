(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 () Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@36 (T@U Int) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (Int) Bool)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U) Bool)
(declare-fun $generated@@67 (T@U Int) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@87 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@91 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (= ($generated@@26 $generated@@27) 0))
(assert (= ($generated@@5 $generated@@32) 3))
(assert  (=> (<= 0 $generated@@28) (=> (or $generated@@29 (< 0 $generated@@28)) (= $generated@@30 ($generated@@31 $generated@@32 ($generated@@33 $generated@@27 ($generated@@34 $generated@@7 ($generated@@11 ($generated@@35 0)))))))))
(assert  (=> (<= 0 $generated@@28) (=> (or $generated@@29 (< 0 $generated@@28)) (= $generated@@30 ($generated@@31 $generated@@32 ($generated@@33 $generated@@27 ($generated@@34 $generated@@7 ($generated@@11 ($generated@@35 0)))))))))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@40 T@U) ($generated@@41 Int) ) (!  (=> (or ($generated@@38 $generated@@41) (and (< 1 $generated@@28) (<= ($generated@@35 0) $generated@@41))) (and (and (=> (= $generated@@41 ($generated@@35 0)) $generated@@29) (=> (or (not (= $generated@@41 ($generated@@35 0))) (not true)) ($generated@@38 (- $generated@@41 1)))) (= ($generated@@36 ($generated@@37 $generated@@40) $generated@@41) (ite (= $generated@@41 ($generated@@35 0)) $generated@@30 ($generated@@39 ($generated@@36 $generated@@40 (- $generated@@41 1)) ($generated@@33 $generated@@27 ($generated@@34 $generated@@7 ($generated@@11 $generated@@41))))))))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@40) $generated@@41))
))))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@44 T@U) ($generated@@45 Int) ) (!  (=> (or ($generated@@38 $generated@@45) (and (< 1 $generated@@28) (<= ($generated@@35 0) $generated@@45))) ($generated@@42 $generated@@32 ($generated@@36 $generated@@44 $generated@@45) ($generated@@43 $generated@@23)))
 :pattern ( ($generated@@36 $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@46 Int) ) (! (= ($generated@@35 $generated@@46) $generated@@46)
 :pattern ( ($generated@@35 $generated@@46))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@31 $generated@@48 $generated@@47) $generated@@47)
 :pattern ( ($generated@@31 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (and ($generated@@42 $generated@@32 $generated@@50 ($generated@@43 $generated@@52)) ($generated@@49 $generated@@51 $generated@@52)) ($generated@@42 $generated@@32 ($generated@@33 $generated@@50 $generated@@51) ($generated@@43 $generated@@52)))
 :pattern ( ($generated@@42 $generated@@32 ($generated@@33 $generated@@50 $generated@@51) ($generated@@43 $generated@@52)))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@34 $generated@@55 ($generated@@53 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@53 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@42 $generated@@7 $generated@@56 $generated@@23) (<= ($generated@@35 0) ($generated@@12 $generated@@56)))
 :pattern ( ($generated@@42 $generated@@7 $generated@@56 $generated@@23))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@26 ($generated@@33 $generated@@57 $generated@@58)) (+ 1 ($generated@@26 $generated@@57)))
 :pattern ( ($generated@@33 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@59 ($generated@@34 $generated@@63 $generated@@60) $generated@@61 $generated@@62) ($generated@@22 $generated@@63 $generated@@60 $generated@@61 $generated@@62))
 :pattern ( ($generated@@59 ($generated@@34 $generated@@63 $generated@@60) $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@26 ($generated@@39 $generated@@64 $generated@@65)) (+ ($generated@@26 $generated@@64) ($generated@@26 $generated@@65)))
 :pattern ( ($generated@@26 ($generated@@39 $generated@@64 $generated@@65)))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@49 $generated@@66 $generated@@23) (and (= ($generated@@34 $generated@@7 ($generated@@53 $generated@@7 $generated@@66)) $generated@@66) ($generated@@42 $generated@@7 ($generated@@53 $generated@@7 $generated@@66) $generated@@23)))
 :pattern ( ($generated@@49 $generated@@66 $generated@@23))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 Int) ($generated@@70 T@U) ) (!  (and (=> (= $generated@@69 ($generated@@26 $generated@@68)) (= ($generated@@67 ($generated@@33 $generated@@68 $generated@@70) $generated@@69) $generated@@70)) (=> (or (not (= $generated@@69 ($generated@@26 $generated@@68))) (not true)) (= ($generated@@67 ($generated@@33 $generated@@68 $generated@@70) $generated@@69) ($generated@@67 $generated@@68 $generated@@69))))
 :pattern ( ($generated@@67 ($generated@@33 $generated@@68 $generated@@70) $generated@@69))
)))
(assert  (=> (<= 0 $generated@@28) (=> (or $generated@@29 (< 0 $generated@@28)) ($generated@@42 $generated@@32 $generated@@30 ($generated@@43 $generated)))))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@49 $generated@@71 $generated) (and (= ($generated@@34 $generated@@7 ($generated@@53 $generated@@7 $generated@@71)) $generated@@71) ($generated@@42 $generated@@7 ($generated@@53 $generated@@7 $generated@@71) $generated)))
 :pattern ( ($generated@@49 $generated@@71 $generated))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@49 ($generated@@34 $generated@@74 $generated@@72) $generated@@73) ($generated@@42 $generated@@74 $generated@@72 $generated@@73))
 :pattern ( ($generated@@49 ($generated@@34 $generated@@74 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (<= 0 ($generated@@26 $generated@@75))
 :pattern ( ($generated@@26 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@22 $generated@@32 $generated@@76 ($generated@@43 $generated@@77) $generated@@78) (forall (($generated@@79 Int) ) (!  (=> (and (<= 0 $generated@@79) (< $generated@@79 ($generated@@26 $generated@@76))) ($generated@@59 ($generated@@67 $generated@@76 $generated@@79) $generated@@77 $generated@@78))
 :pattern ( ($generated@@67 $generated@@76 $generated@@79))
)))
 :pattern ( ($generated@@22 $generated@@32 $generated@@76 ($generated@@43 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@80 ($generated@@43 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@43 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@21 ($generated@@43 $generated@@82)) $generated@@1)
 :pattern ( ($generated@@43 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@53 $generated@@84 ($generated@@34 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@34 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 Int) ) (! (= ($generated@@36 ($generated@@37 $generated@@85) $generated@@86) ($generated@@36 $generated@@85 $generated@@86))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@85) $generated@@86))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@87 $generated@@98 $generated@@99 $generated@@100 ($generated@@94 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104 $generated@@101) $generated@@103 $generated@@104) $generated@@101)
 :weight 0
)) (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@110 $generated@@112) (= ($generated@@87 $generated@@105 $generated@@106 $generated@@107 ($generated@@94 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@112 $generated@@113) ($generated@@87 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@112 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@87 $generated@@114 $generated@@115 $generated@@116 ($generated@@94 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@87 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)))) (= ($generated@@5 $generated@@88) 4)) (= ($generated@@5 $generated@@89) 5)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@91 $generated@@123 $generated@@124 ($generated@@95 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@125) $generated@@127) $generated@@125)
 :weight 0
))) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@91 $generated@@128 $generated@@129 ($generated@@95 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@91 $generated@@128 $generated@@129 $generated@@131 $generated@@133)))
 :weight 0
))) (= ($generated@@5 $generated@@92) 6)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ) (= ($generated@@5 ($generated@@93 $generated@@134 $generated@@135)) 7))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@136 $generated@@137)) $generated@@136)
 :pattern ( ($generated@@93 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@138 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@93 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 Bool) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@10 ($generated@@87 $generated@@88 $generated@@89 $generated@@6 ($generated@@90 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))  (=> (and (or (not (= $generated@@144 $generated@@140)) (not true)) ($generated@@10 ($generated@@53 $generated@@6 ($generated@@91 $generated@@89 $generated@@92 ($generated@@91 $generated@@88 ($generated@@93 $generated@@89 $generated@@92) $generated@@141 $generated@@144) $generated@@142)))) $generated@@143))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89 $generated@@6 ($generated@@90 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (and (= ($generated@@146 ($generated@@33 $generated@@148 $generated@@149)) $generated@@148) (= ($generated@@147 ($generated@@33 $generated@@148 $generated@@149)) $generated@@149))
 :pattern ( ($generated@@33 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@49 $generated@@150 ($generated@@43 $generated@@151)) (and (= ($generated@@34 $generated@@32 ($generated@@53 $generated@@32 $generated@@150)) $generated@@150) ($generated@@42 $generated@@32 ($generated@@53 $generated@@32 $generated@@150) ($generated@@43 $generated@@151))))
 :pattern ( ($generated@@49 $generated@@150 ($generated@@43 $generated@@151)))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@152 T@U) ($generated@@153 Int) ) (!  (=> (or ($generated@@38 ($generated@@35 $generated@@153)) (and (< 1 $generated@@28) (<= ($generated@@35 0) $generated@@153))) (and (and (=> (= ($generated@@35 $generated@@153) ($generated@@35 0)) $generated@@29) (=> (or (not (= ($generated@@35 $generated@@153) ($generated@@35 0))) (not true)) ($generated@@38 ($generated@@35 (- $generated@@153 1))))) (= ($generated@@36 ($generated@@37 $generated@@152) ($generated@@35 $generated@@153)) (ite (= ($generated@@35 $generated@@153) ($generated@@35 0)) $generated@@30 ($generated@@39 ($generated@@36 ($generated@@37 $generated@@152) ($generated@@35 (- $generated@@153 1))) ($generated@@33 $generated@@27 ($generated@@34 $generated@@7 ($generated@@11 ($generated@@35 $generated@@153)))))))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@37 $generated@@152) ($generated@@35 $generated@@153)))
))))
(assert (= ($generated@@21 $generated@@23) $generated@@3))
(assert (= ($generated@@154 $generated@@23) $generated@@4))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Int) ) (!  (and (=> (< $generated@@157 ($generated@@26 $generated@@155)) (= ($generated@@67 ($generated@@39 $generated@@155 $generated@@156) $generated@@157) ($generated@@67 $generated@@155 $generated@@157))) (=> (<= ($generated@@26 $generated@@155) $generated@@157) (= ($generated@@67 ($generated@@39 $generated@@155 $generated@@156) $generated@@157) ($generated@@67 $generated@@156 (- $generated@@157 ($generated@@26 $generated@@155))))))
 :pattern ( ($generated@@67 ($generated@@39 $generated@@155 $generated@@156) $generated@@157))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@34 $generated@@7 ($generated@@11 ($generated@@35 $generated@@158))) ($generated@@31 $generated@@92 ($generated@@34 $generated@@7 ($generated@@11 $generated@@158))))
 :pattern ( ($generated@@34 $generated@@7 ($generated@@11 ($generated@@35 $generated@@158))))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@34 $generated@@160 ($generated@@31 $generated@@160 $generated@@159)) ($generated@@31 $generated@@92 ($generated@@34 $generated@@160 $generated@@159)))
 :pattern ( ($generated@@34 $generated@@160 ($generated@@31 $generated@@160 $generated@@159)))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= ($generated@@26 $generated@@161) 0) (= $generated@@161 $generated@@27))
 :pattern ( ($generated@@26 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! ($generated@@22 $generated@@7 $generated@@163 $generated $generated@@162)
 :pattern ( ($generated@@22 $generated@@7 $generated@@163 $generated $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@42 $generated@@32 $generated@@164 ($generated@@43 $generated@@165)) (forall (($generated@@166 Int) ) (!  (=> (and (<= 0 $generated@@166) (< $generated@@166 ($generated@@26 $generated@@164))) ($generated@@49 ($generated@@67 $generated@@164 $generated@@166) $generated@@165))
 :pattern ( ($generated@@67 $generated@@164 $generated@@166))
)))
 :pattern ( ($generated@@42 $generated@@32 $generated@@164 ($generated@@43 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! ($generated@@42 $generated@@7 $generated@@167 $generated)
 :pattern ( ($generated@@42 $generated@@7 $generated@@167 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@175  (=> (or (not (= $generated@@168 ($generated@@35 0))) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@42 $generated@@7 ($generated@@11 (- $generated@@168 1)) $generated@@23)) (=> ($generated@@42 $generated@@7 ($generated@@11 (- $generated@@168 1)) $generated@@23) (=> (and (= $generated@@169 (- $generated@@168 1)) ($generated@@22 $generated@@7 ($generated@@11 $generated@@169) $generated@@23 $generated@@170)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@168) (= $generated@@169 $generated@@168))) (=> (or (<= 0 $generated@@168) (= $generated@@169 $generated@@168)) (=> (= (ControlFlow 0 5) (- 0 4)) (< $generated@@169 $generated@@168))))))))))
(let (($generated@@176  (=> (= $generated@@168 ($generated@@35 0)) (=> (and $generated@@29 (= (ControlFlow 0 3) (- 0 2))) ($generated@@42 $generated@@32 ($generated@@31 $generated@@32 $generated@@30) ($generated@@43 $generated@@23))))))
(let (($generated@@177 true))
(let (($generated@@178  (=> (= $generated@@171 ($generated@@90 $generated@@172 $generated@@170 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@177) (=> (= (ControlFlow 0 8) 3) $generated@@176)) (=> (= (ControlFlow 0 8) 5) $generated@@175)))))
(let (($generated@@179  (=> (and (and (and ($generated@@173 $generated@@170) ($generated@@174 $generated@@170)) (<= ($generated@@35 0) $generated@@168)) (and (= 1 $generated@@28) (= (ControlFlow 0 9) 8))) $generated@@178)))
$generated@@179))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
