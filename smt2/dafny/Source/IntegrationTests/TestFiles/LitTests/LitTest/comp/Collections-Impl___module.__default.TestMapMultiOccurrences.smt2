(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@43 (Int) Int)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@49 (T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@U T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@26) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)) ($generated@@24 $generated@@30))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)))
)))
(assert (forall (($generated@@33 T@U) ) (!  (not ($generated@@31 $generated@@32 $generated@@33))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@34 $generated@@38 $generated@@39) ($generated@@27 $generated@@36 $generated@@37))  (and ($generated@@35 $generated@@38 $generated@@36) ($generated@@35 $generated@@39 $generated@@37)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@34 $generated@@38 $generated@@39) ($generated@@27 $generated@@36 $generated@@37)))
)))
(assert (forall (($generated@@41 T@U) ) (!  (and (= (= ($generated@@40 $generated@@41) 0) (= $generated@@41 $generated@@32)) (=> (or (not (= ($generated@@40 $generated@@41) 0)) (not true)) (exists (($generated@@42 T@U) ) (! ($generated@@31 $generated@@41 $generated@@42)
 :pattern ( ($generated@@31 $generated@@41 $generated@@42))
))))
 :pattern ( ($generated@@40 $generated@@41))
)))
(assert (forall (($generated@@44 Int) ) (! (= ($generated@@43 $generated@@44) $generated@@44)
 :pattern ( ($generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@45 $generated@@47 $generated@@46) $generated@@46)
 :pattern ( ($generated@@45 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> ($generated@@31 ($generated@@50 $generated@@51) $generated@@52) (= ($generated@@48 ($generated@@49 $generated@@51 $generated@@52 $generated@@53)) ($generated@@48 $generated@@51)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@51 $generated@@52 $generated@@53)))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@55 $generated@@61) (= ($generated@@54 $generated@@26 ($generated@@34 $generated@@59 $generated@@60) ($generated@@27 $generated@@57 $generated@@58) $generated@@61)  (and ($generated@@56 $generated@@59 $generated@@57 $generated@@61) ($generated@@56 $generated@@60 $generated@@58 $generated@@61))))
 :pattern ( ($generated@@54 $generated@@26 ($generated@@34 $generated@@59 $generated@@60) ($generated@@27 $generated@@57 $generated@@58) $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@24 $generated@@63) (= ($generated@@62 $generated@@63) $generated@@4))
 :pattern ( ($generated@@24 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 ($generated@@64 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@64 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@24 $generated@@68) (exists (($generated@@69 T@U) ($generated@@70 T@U) ) (= $generated@@68 ($generated@@34 $generated@@69 $generated@@70))))
 :pattern ( ($generated@@24 $generated@@68))
)))
(assert (= ($generated@@7 $generated@@71) 4))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@25 $generated@@71 $generated@@73 ($generated@@72 $generated@@74)) (forall (($generated@@75 T@U) ) (!  (=> ($generated@@31 $generated@@73 $generated@@75) ($generated@@35 $generated@@75 $generated@@74))
 :pattern ( ($generated@@31 $generated@@73 $generated@@75))
)))
 :pattern ( ($generated@@25 $generated@@71 $generated@@73 ($generated@@72 $generated@@74)))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (not ($generated@@31 ($generated@@50 $generated@@76) $generated@@77)) (= ($generated@@48 ($generated@@49 $generated@@76 $generated@@77 $generated@@78)) (+ ($generated@@48 $generated@@76) 1)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@76 $generated@@77 $generated@@78)))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@56 ($generated@@65 $generated@@82 $generated@@79) $generated@@80 $generated@@81) ($generated@@54 $generated@@82 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@56 ($generated@@65 $generated@@82 $generated@@79) $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (! (= (= ($generated@@48 $generated@@84) 0) (= $generated@@84 $generated@@83))
 :pattern ( ($generated@@48 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@35 $generated@@85 $generated) (and (= ($generated@@65 $generated@@9 ($generated@@64 $generated@@9 $generated@@85)) $generated@@85) ($generated@@25 $generated@@9 ($generated@@64 $generated@@9 $generated@@85) $generated)))
 :pattern ( ($generated@@35 $generated@@85 $generated))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@35 ($generated@@65 $generated@@88 $generated@@86) $generated@@87) ($generated@@25 $generated@@88 $generated@@86 $generated@@87))
 :pattern ( ($generated@@35 ($generated@@65 $generated@@88 $generated@@86) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (<= 0 ($generated@@40 $generated@@89))
 :pattern ( ($generated@@40 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (! (<= 0 ($generated@@48 $generated@@90))
 :pattern ( ($generated@@48 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@54 $generated@@71 $generated@@91 ($generated@@72 $generated@@92) $generated@@93) (forall (($generated@@94 T@U) ) (!  (=> ($generated@@31 $generated@@91 $generated@@94) ($generated@@56 $generated@@94 $generated@@92 $generated@@93))
 :pattern ( ($generated@@31 $generated@@91 $generated@@94))
)))
 :pattern ( ($generated@@54 $generated@@71 $generated@@91 ($generated@@72 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@96 ($generated@@95 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@95 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@99 ($generated@@95 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@95 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@23 ($generated@@95 $generated@@102 $generated@@103)) $generated@@2)
 :pattern ( ($generated@@95 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@62 ($generated@@34 $generated@@104 $generated@@105)) $generated@@4)
 :pattern ( ($generated@@34 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@106 ($generated@@27 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@27 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@27 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@27 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@34 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@34 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 ($generated@@34 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@34 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@72 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@72 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@23 ($generated@@72 $generated@@120)) $generated@@1)
 :pattern ( ($generated@@72 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@64 $generated@@122 ($generated@@65 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@65 $generated@@122 $generated@@121))
)))
(assert  (and (and (and (= ($generated@@7 $generated@@123) 5) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@124 $generated@@128 $generated@@129 ($generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@130) $generated@@132) $generated@@130)
 :weight 0
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@124 $generated@@133 $generated@@134 ($generated@@127 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@124 $generated@@133 $generated@@134 $generated@@136 $generated@@138)))
 :weight 0
))) (= ($generated@@7 $generated@@125) 6)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@54 $generated@@123 $generated@@139 ($generated@@95 $generated@@140 $generated@@141) $generated@@142) (forall (($generated@@143 T@U) ) (!  (=> ($generated@@31 ($generated@@50 $generated@@139) $generated@@143) (and ($generated@@56 ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 $generated@@139) $generated@@143) $generated@@141 $generated@@142) ($generated@@56 $generated@@143 $generated@@140 $generated@@142)))
 :pattern ( ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 $generated@@139) $generated@@143))
 :pattern ( ($generated@@31 ($generated@@50 $generated@@139) $generated@@143))
)))
 :pattern ( ($generated@@54 $generated@@123 $generated@@139 ($generated@@95 $generated@@140 $generated@@141) $generated@@142))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (< ($generated@@144 $generated@@146) ($generated@@145 ($generated@@34 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@34 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (< ($generated@@144 $generated@@149) ($generated@@145 ($generated@@34 $generated@@148 $generated@@149)))
 :pattern ( ($generated@@34 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (!  (not ($generated@@31 ($generated@@50 $generated@@83) $generated@@150))
 :pattern ( ($generated@@31 ($generated@@50 $generated@@83) $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@35 $generated@@151 ($generated@@95 $generated@@152 $generated@@153)) (and (= ($generated@@65 $generated@@123 ($generated@@64 $generated@@123 $generated@@151)) $generated@@151) ($generated@@25 $generated@@123 ($generated@@64 $generated@@123 $generated@@151) ($generated@@95 $generated@@152 $generated@@153))))
 :pattern ( ($generated@@35 $generated@@151 ($generated@@95 $generated@@152 $generated@@153)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@35 $generated@@156 ($generated@@27 $generated@@154 $generated@@155)) (and (= ($generated@@65 $generated@@26 ($generated@@64 $generated@@26 $generated@@156)) $generated@@156) ($generated@@25 $generated@@26 ($generated@@64 $generated@@26 $generated@@156) ($generated@@27 $generated@@154 $generated@@155))))
 :pattern ( ($generated@@35 $generated@@156 ($generated@@27 $generated@@154 $generated@@155)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@157 $generated@@165 $generated@@166 $generated@@167 ($generated@@162 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@170 $generated@@171) $generated@@168)
 :weight 0
)) (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@157 $generated@@172 $generated@@173 $generated@@174 ($generated@@162 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@157 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@157 $generated@@181 $generated@@182 $generated@@183 ($generated@@162 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)))) (= ($generated@@7 $generated@@158) 7)) (= ($generated@@7 $generated@@159) 8)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (= ($generated@@7 ($generated@@161 $generated@@190 $generated@@191)) 9))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@192 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@161 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@164 ($generated@@161 $generated@@194 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@161 $generated@@194 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 Bool) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@12 ($generated@@157 $generated@@158 $generated@@159 $generated@@8 ($generated@@160 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))  (=> (and (or (not (= $generated@@200 $generated@@196)) (not true)) ($generated@@12 ($generated@@64 $generated@@8 ($generated@@124 $generated@@159 $generated@@125 ($generated@@124 $generated@@158 ($generated@@161 $generated@@159 $generated@@125) $generated@@197 $generated@@200) $generated@@198)))) $generated@@199))
 :pattern ( ($generated@@157 $generated@@158 $generated@@159 $generated@@8 ($generated@@160 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (and (= ($generated@@23 ($generated@@27 $generated@@203 $generated@@204)) $generated@@5) (= ($generated@@202 ($generated@@27 $generated@@203 $generated@@204)) $generated@@6))
 :pattern ( ($generated@@27 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ) (!  (or (= $generated@@205 $generated@@83) (exists (($generated@@206 T@U) ) ($generated@@31 ($generated@@50 $generated@@205) $generated@@206)))
 :pattern ( ($generated@@50 $generated@@205))
)))
(assert (forall (($generated@@208 T@U) ) (!  (or (= $generated@@208 $generated@@83) (exists (($generated@@209 T@U) ) ($generated@@31 ($generated@@207 $generated@@208) $generated@@209)))
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@31 ($generated@@210 $generated@@211) $generated@@212)  (and ($generated@@31 ($generated@@50 $generated@@211) ($generated@@112 ($generated@@64 $generated@@26 $generated@@212))) (= ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 $generated@@211) ($generated@@112 ($generated@@64 $generated@@26 $generated@@212))) ($generated@@115 ($generated@@64 $generated@@26 $generated@@212)))))
 :pattern ( ($generated@@31 ($generated@@210 $generated@@211) $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@31 ($generated@@207 $generated@@213) $generated@@214) (exists (($generated@@215 T@U) ) (!  (and ($generated@@31 ($generated@@50 $generated@@213) $generated@@215) (= $generated@@214 ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 $generated@@213) $generated@@215)))
 :pattern ( ($generated@@31 ($generated@@50 $generated@@213) $generated@@215))
 :pattern ( ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 $generated@@213) $generated@@215))
)))
 :pattern ( ($generated@@31 ($generated@@207 $generated@@213) $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (and (=> (= $generated@@218 $generated@@217) (and ($generated@@31 ($generated@@50 ($generated@@49 $generated@@216 $generated@@217 $generated@@219)) $generated@@218) (= ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 ($generated@@49 $generated@@216 $generated@@217 $generated@@219)) $generated@@218) $generated@@219))) (=> (or (not (= $generated@@218 $generated@@217)) (not true)) (and (= ($generated@@31 ($generated@@50 ($generated@@49 $generated@@216 $generated@@217 $generated@@219)) $generated@@218) ($generated@@31 ($generated@@50 $generated@@216) $generated@@218)) (= ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 ($generated@@49 $generated@@216 $generated@@217 $generated@@219)) $generated@@218) ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 $generated@@216) $generated@@218)))))
 :pattern ( ($generated@@31 ($generated@@50 ($generated@@49 $generated@@216 $generated@@217 $generated@@219)) $generated@@218))
 :pattern ( ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 ($generated@@49 $generated@@216 $generated@@217 $generated@@219)) $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= ($generated@@144 ($generated@@65 $generated@@26 $generated@@220)) ($generated@@145 $generated@@220))
 :pattern ( ($generated@@144 ($generated@@65 $generated@@26 $generated@@220)))
)))
(assert (forall (($generated@@221 T@U) ) (! (= ($generated@@40 ($generated@@50 $generated@@221)) ($generated@@48 $generated@@221))
 :pattern ( ($generated@@40 ($generated@@50 $generated@@221)))
 :pattern ( ($generated@@48 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (! (= ($generated@@40 ($generated@@210 $generated@@222)) ($generated@@48 $generated@@222))
 :pattern ( ($generated@@40 ($generated@@210 $generated@@222)))
 :pattern ( ($generated@@48 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ) (! (<= ($generated@@40 ($generated@@207 $generated@@223)) ($generated@@48 $generated@@223))
 :pattern ( ($generated@@40 ($generated@@207 $generated@@223)))
 :pattern ( ($generated@@48 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> ($generated@@35 $generated@@224 ($generated@@72 $generated@@225)) (and (= ($generated@@65 $generated@@71 ($generated@@64 $generated@@71 $generated@@224)) $generated@@224) ($generated@@25 $generated@@71 ($generated@@64 $generated@@71 $generated@@224) ($generated@@72 $generated@@225))))
 :pattern ( ($generated@@35 $generated@@224 ($generated@@72 $generated@@225)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@25 $generated@@123 $generated@@226 ($generated@@95 $generated@@227 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> ($generated@@31 ($generated@@50 $generated@@226) $generated@@229) (and ($generated@@35 ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 $generated@@226) $generated@@229) $generated@@228) ($generated@@35 $generated@@229 $generated@@227)))
 :pattern ( ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 $generated@@226) $generated@@229))
 :pattern ( ($generated@@31 ($generated@@50 $generated@@226) $generated@@229))
)))
 :pattern ( ($generated@@25 $generated@@123 $generated@@226 ($generated@@95 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and ($generated@@55 $generated@@232) (and ($generated@@24 $generated@@230) (exists (($generated@@233 T@U) ) (! ($generated@@54 $generated@@26 $generated@@230 ($generated@@27 $generated@@231 $generated@@233) $generated@@232)
 :pattern ( ($generated@@54 $generated@@26 $generated@@230 ($generated@@27 $generated@@231 $generated@@233) $generated@@232))
)))) ($generated@@56 ($generated@@112 $generated@@230) $generated@@231 $generated@@232))
 :pattern ( ($generated@@56 ($generated@@112 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and ($generated@@55 $generated@@236) (and ($generated@@24 $generated@@234) (exists (($generated@@237 T@U) ) (! ($generated@@54 $generated@@26 $generated@@234 ($generated@@27 $generated@@237 $generated@@235) $generated@@236)
 :pattern ( ($generated@@54 $generated@@26 $generated@@234 ($generated@@27 $generated@@237 $generated@@235) $generated@@236))
)))) ($generated@@56 ($generated@@115 $generated@@234) $generated@@235 $generated@@236))
 :pattern ( ($generated@@56 ($generated@@115 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= ($generated@@34 ($generated@@45 $generated@@125 $generated@@238) ($generated@@45 $generated@@125 $generated@@239)) ($generated@@45 $generated@@26 ($generated@@34 $generated@@238 $generated@@239)))
 :pattern ( ($generated@@34 ($generated@@45 $generated@@125 $generated@@238) ($generated@@45 $generated@@125 $generated@@239)))
)))
(assert (forall (($generated@@240 Int) ) (! (= ($generated@@65 $generated@@9 ($generated@@13 ($generated@@43 $generated@@240))) ($generated@@45 $generated@@125 ($generated@@65 $generated@@9 ($generated@@13 $generated@@240))))
 :pattern ( ($generated@@65 $generated@@9 ($generated@@13 ($generated@@43 $generated@@240))))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (= ($generated@@65 $generated@@242 ($generated@@45 $generated@@242 $generated@@241)) ($generated@@45 $generated@@125 ($generated@@65 $generated@@242 $generated@@241)))
 :pattern ( ($generated@@65 $generated@@242 ($generated@@45 $generated@@242 $generated@@241)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! ($generated@@54 $generated@@9 $generated@@244 $generated $generated@@243)
 :pattern ( ($generated@@54 $generated@@9 $generated@@244 $generated $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (!  (or (= $generated@@245 $generated@@83) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) ($generated@@31 ($generated@@210 $generated@@245) ($generated@@65 $generated@@26 ($generated@@34 $generated@@246 $generated@@247)))))
 :pattern ( ($generated@@210 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> ($generated@@25 $generated@@123 $generated@@248 ($generated@@95 $generated@@249 $generated@@250)) (and (and ($generated@@25 $generated@@71 ($generated@@50 $generated@@248) ($generated@@72 $generated@@249)) ($generated@@25 $generated@@71 ($generated@@207 $generated@@248) ($generated@@72 $generated@@250))) ($generated@@25 $generated@@71 ($generated@@210 $generated@@248) ($generated@@72 ($generated@@27 $generated@@249 $generated@@250)))))
 :pattern ( ($generated@@25 $generated@@123 $generated@@248 ($generated@@95 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@251 T@U) ) (! ($generated@@25 $generated@@9 $generated@@251 $generated)
 :pattern ( ($generated@@25 $generated@@9 $generated@@251 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@259  (=> (and (= $generated@@252 ($generated@@160 $generated@@253 $generated@@254 $generated@@3 false)) (= $generated@@255 ($generated@@45 $generated@@123 ($generated@@49 ($generated@@49 $generated@@83 ($generated@@65 $generated@@9 ($generated@@13 ($generated@@43 1))) ($generated@@65 $generated@@9 ($generated@@13 ($generated@@43 1)))) ($generated@@65 $generated@@9 ($generated@@13 ($generated@@43 1))) ($generated@@65 $generated@@9 ($generated@@13 ($generated@@43 2))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= ($generated@@48 $generated@@255) ($generated@@43 1))) (=> (= ($generated@@48 $generated@@255) ($generated@@43 1)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@31 ($generated@@50 $generated@@255) ($generated@@65 $generated@@9 ($generated@@13 ($generated@@43 1))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@14 ($generated@@64 $generated@@9 ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 $generated@@255) ($generated@@65 $generated@@9 ($generated@@13 ($generated@@43 1)))))) ($generated@@43 2))) (=> (= ($generated@@14 ($generated@@64 $generated@@9 ($generated@@124 $generated@@125 $generated@@125 ($generated@@126 $generated@@255) ($generated@@65 $generated@@9 ($generated@@13 ($generated@@43 1)))))) ($generated@@43 2)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@31 ($generated@@50 $generated@@255) ($generated@@65 $generated@@9 ($generated@@13 ($generated@@43 1)))))))))))))
(let (($generated@@260  (=> (and ($generated@@55 $generated@@254) ($generated@@256 $generated@@254)) (=> (and (and (and ($generated@@25 $generated@@123 $generated@@257 ($generated@@95 $generated $generated)) ($generated@@54 $generated@@123 $generated@@257 ($generated@@95 $generated $generated) $generated@@254)) true) (and (= 0 $generated@@258) (= (ControlFlow 0 6) 2))) $generated@@259))))
$generated@@260)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
