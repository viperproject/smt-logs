(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U Int) T@U)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 (T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 (Int) T@U)
(declare-fun $generated@@173 (T@U) Int)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert ($generated@@26 $generated@@27))
(assert (= ($generated@@28 $generated@@29) 0))
(assert (= ($generated@@9 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 $generated@@27)  (or (= $generated@@34 $generated@@32) (= ($generated@@33 $generated@@34) $generated@@27)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 $generated@@27))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and ($generated@@35 $generated@@38 $generated@@27 $generated@@39) ($generated@@36 $generated@@39)) ($generated@@35 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@35 $generated@@38 $generated@@27 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 $generated@@31 $generated@@42 $generated@@41 $generated@@43) ($generated@@40 $generated@@31 $generated@@42 $generated@@37 $generated@@43))
 :pattern ( ($generated@@40 $generated@@31 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@40 $generated@@31 $generated@@42 $generated@@37 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@40 $generated@@31 $generated@@45 $generated@@44 $generated@@46) ($generated@@40 $generated@@31 $generated@@45 $generated@@27 $generated@@46))
 :pattern ( ($generated@@40 $generated@@31 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@40 $generated@@31 $generated@@45 $generated@@27 $generated@@46))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@9 $generated@@49) 4)) (= ($generated@@9 $generated@@50) 5)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@9 ($generated@@51 $generated@@66 $generated@@67)) 6))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@40 $generated@@31 $generated@@72 $generated@@37 $generated@@73)  (or (= $generated@@72 $generated@@32) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@72) $generated@@2)))))
 :pattern ( ($generated@@40 $generated@@31 $generated@@72 $generated@@37 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@40 $generated@@31 $generated@@74 $generated@@27 $generated@@75)  (or (= $generated@@74 $generated@@32) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@75 $generated@@74) $generated@@2)))))
 :pattern ( ($generated@@40 $generated@@31 $generated@@74 $generated@@27 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@78 $generated@@77))
)))
(assert (= ($generated@@9 $generated@@79) 7))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and ($generated@@30 $generated@@79 $generated@@83 ($generated@@81 $generated@@85)) ($generated@@82 $generated@@84 $generated@@85)) ($generated@@30 $generated@@79 ($generated@@80 $generated@@83 $generated@@84) ($generated@@81 $generated@@85)))
 :pattern ( ($generated@@30 $generated@@79 ($generated@@80 $generated@@83 $generated@@84) ($generated@@81 $generated@@85)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@86 $generated@@88 $generated@@89)  (and (= ($generated@@28 $generated@@88) ($generated@@28 $generated@@89)) (forall (($generated@@90 Int) ) (!  (=> (and (<= 0 $generated@@90) (< $generated@@90 ($generated@@28 $generated@@88))) (= ($generated@@87 $generated@@88 $generated@@90) ($generated@@87 $generated@@89 $generated@@90)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@90))
 :pattern ( ($generated@@87 $generated@@89 $generated@@90))
))))
 :pattern ( ($generated@@86 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@47 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@47 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@28 ($generated@@80 $generated@@94 $generated@@95)) (+ 1 ($generated@@28 $generated@@94)))
 :pattern ( ($generated@@80 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@35 ($generated@@91 $generated@@99 $generated@@96) $generated@@97 $generated@@98) ($generated@@40 $generated@@99 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@35 ($generated@@91 $generated@@99 $generated@@96) $generated@@97 $generated@@98))
)))
(assert  (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@100 $generated@@103 $generated@@104 $generated@@105 ($generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@100 $generated@@110 $generated@@111 $generated@@112 ($generated@@102 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@100 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@100 $generated@@119 $generated@@120 $generated@@121 ($generated@@102 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@100 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@14 ($generated@@100 $generated@@31 $generated@@49 $generated@@10 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))  (=> (and (or (not (= $generated@@132 $generated@@128)) (not true)) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@129 $generated@@132) $generated@@130)))) (= $generated@@132 $generated@@131)))
 :pattern ( ($generated@@100 $generated@@31 $generated@@49 $generated@@10 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@28 ($generated@@134 $generated@@135 $generated@@136)) (+ ($generated@@28 $generated@@135) ($generated@@28 $generated@@136)))
 :pattern ( ($generated@@28 ($generated@@134 $generated@@135 $generated@@136)))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@82 $generated@@137 $generated@@37) (and (= ($generated@@91 $generated@@31 ($generated@@47 $generated@@31 $generated@@137)) $generated@@137) ($generated@@30 $generated@@31 ($generated@@47 $generated@@31 $generated@@137) $generated@@37)))
 :pattern ( ($generated@@82 $generated@@137 $generated@@37))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@82 $generated@@138 $generated@@41) (and (= ($generated@@91 $generated@@31 ($generated@@47 $generated@@31 $generated@@138)) $generated@@138) ($generated@@30 $generated@@31 ($generated@@47 $generated@@31 $generated@@138) $generated@@41)))
 :pattern ( ($generated@@82 $generated@@138 $generated@@41))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@82 $generated@@139 $generated@@27) (and (= ($generated@@91 $generated@@31 ($generated@@47 $generated@@31 $generated@@139)) $generated@@139) ($generated@@30 $generated@@31 ($generated@@47 $generated@@31 $generated@@139) $generated@@27)))
 :pattern ( ($generated@@82 $generated@@139 $generated@@27))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@82 $generated@@140 $generated@@44) (and (= ($generated@@91 $generated@@31 ($generated@@47 $generated@@31 $generated@@140)) $generated@@140) ($generated@@30 $generated@@31 ($generated@@47 $generated@@31 $generated@@140) $generated@@44)))
 :pattern ( ($generated@@82 $generated@@140 $generated@@44))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@141 $generated@@41)  (and ($generated@@30 $generated@@31 $generated@@141 $generated@@37) (or (not (= $generated@@141 $generated@@32)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@141 $generated@@41))
 :pattern ( ($generated@@30 $generated@@31 $generated@@141 $generated@@37))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@142 $generated@@44)  (and ($generated@@30 $generated@@31 $generated@@142 $generated@@27) (or (not (= $generated@@142 $generated@@32)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@142 $generated@@44))
 :pattern ( ($generated@@30 $generated@@31 $generated@@142 $generated@@27))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 Int) ($generated@@145 T@U) ) (!  (and (=> (= $generated@@144 ($generated@@28 $generated@@143)) (= ($generated@@87 ($generated@@80 $generated@@143 $generated@@145) $generated@@144) $generated@@145)) (=> (or (not (= $generated@@144 ($generated@@28 $generated@@143))) (not true)) (= ($generated@@87 ($generated@@80 $generated@@143 $generated@@145) $generated@@144) ($generated@@87 $generated@@143 $generated@@144))))
 :pattern ( ($generated@@87 ($generated@@80 $generated@@143 $generated@@145) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@40 $generated@@31 $generated@@146 $generated@@27 $generated@@147) ($generated@@40 $generated@@31 $generated@@146 $generated@@37 $generated@@147))
 :pattern ( ($generated@@40 $generated@@31 $generated@@146 $generated@@27 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@86 $generated@@148 $generated@@149) (= $generated@@148 $generated@@149))
 :pattern ( ($generated@@86 $generated@@148 $generated@@149))
)))
(assert (= ($generated@@9 $generated@@150) 8))
(assert (forall (($generated@@151 T@U) ) (!  (=> ($generated@@82 $generated@@151 $generated) (and (= ($generated@@91 $generated@@150 ($generated@@47 $generated@@150 $generated@@151)) $generated@@151) ($generated@@30 $generated@@150 ($generated@@47 $generated@@150 $generated@@151) $generated)))
 :pattern ( ($generated@@82 $generated@@151 $generated))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@82 ($generated@@91 $generated@@154 $generated@@152) $generated@@153) ($generated@@30 $generated@@154 $generated@@152 $generated@@153))
 :pattern ( ($generated@@82 ($generated@@91 $generated@@154 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! (<= 0 ($generated@@28 $generated@@155))
 :pattern ( ($generated@@28 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@40 $generated@@79 $generated@@156 ($generated@@81 $generated@@157) $generated@@158) (forall (($generated@@159 Int) ) (!  (=> (and (<= 0 $generated@@159) (< $generated@@159 ($generated@@28 $generated@@156))) ($generated@@35 ($generated@@87 $generated@@156 $generated@@159) $generated@@157 $generated@@158))
 :pattern ( ($generated@@87 $generated@@156 $generated@@159))
)))
 :pattern ( ($generated@@40 $generated@@79 $generated@@156 ($generated@@81 $generated@@157) $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@160 ($generated@@81 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@81 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@25 ($generated@@81 $generated@@162)) $generated@@1)
 :pattern ( ($generated@@81 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@47 $generated@@164 ($generated@@91 $generated@@164 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@91 $generated@@164 $generated@@163))
)))
(assert  (=> (<= 1 $generated@@165) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (or ($generated@@167 $generated@@171 $generated@@172) (and (< 1 $generated@@165) (and ($generated@@36 $generated@@171) (and (or (not (= $generated@@172 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@172 $generated@@44) ($generated@@40 $generated@@31 $generated@@172 $generated@@44 $generated@@171)))))) (and (and ($generated@@168 $generated@@171 $generated@@172) (=> (not ($generated@@86 ($generated@@169 $generated@@171 $generated@@172) $generated@@29)) ($generated@@168 $generated@@171 $generated@@172))) (= ($generated@@166 $generated@@171 $generated@@172) (ite ($generated@@86 ($generated@@169 $generated@@171 $generated@@172) $generated@@29) ($generated@@80 ($generated@@80 ($generated@@80 ($generated@@80 $generated@@29 ($generated@@91 $generated@@150 ($generated@@170 78))) ($generated@@91 $generated@@150 ($generated@@170 111))) ($generated@@91 $generated@@150 ($generated@@170 110))) ($generated@@91 $generated@@150 ($generated@@170 101))) ($generated@@134 ($generated@@134 ($generated@@80 ($generated@@80 ($generated@@80 ($generated@@80 ($generated@@80 $generated@@29 ($generated@@91 $generated@@150 ($generated@@170 83))) ($generated@@91 $generated@@150 ($generated@@170 111))) ($generated@@91 $generated@@150 ($generated@@170 109))) ($generated@@91 $generated@@150 ($generated@@170 101))) ($generated@@91 $generated@@150 ($generated@@170 40))) ($generated@@169 $generated@@171 $generated@@172)) ($generated@@80 $generated@@29 ($generated@@91 $generated@@150 ($generated@@170 41))))))))
 :pattern ( ($generated@@166 $generated@@171 $generated@@172) ($generated@@36 $generated@@171))
))))
(assert (forall (($generated@@174 Int) ) (!  (=> (or (and (<= 0 $generated@@174) (< $generated@@174 55296)) (and (<= 57344 $generated@@174) (< $generated@@174 1114112))) (= ($generated@@173 ($generated@@170 $generated@@174)) $generated@@174))
 :pattern ( ($generated@@170 $generated@@174))
)))
(assert  (=> (<= 0 $generated@@165) (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (or ($generated@@168 $generated@@175 $generated@@176) (and (< 0 $generated@@165) (and ($generated@@36 $generated@@175) (and (or (not (= $generated@@176 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@176 $generated@@44) ($generated@@40 $generated@@31 $generated@@176 $generated@@44 $generated@@175)))))) ($generated@@30 $generated@@79 ($generated@@169 $generated@@175 $generated@@176) ($generated@@81 $generated)))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))))
(assert  (=> (<= 1 $generated@@165) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (or ($generated@@167 $generated@@177 $generated@@178) (and (< 1 $generated@@165) (and ($generated@@36 $generated@@177) (and (or (not (= $generated@@178 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@178 $generated@@44) ($generated@@40 $generated@@31 $generated@@178 $generated@@44 $generated@@177)))))) ($generated@@30 $generated@@79 ($generated@@166 $generated@@177 $generated@@178) ($generated@@81 $generated)))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (and (= ($generated@@179 ($generated@@80 $generated@@181 $generated@@182)) $generated@@181) (= ($generated@@180 ($generated@@80 $generated@@181 $generated@@182)) $generated@@182))
 :pattern ( ($generated@@80 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@82 $generated@@183 ($generated@@81 $generated@@184)) (and (= ($generated@@91 $generated@@79 ($generated@@47 $generated@@79 $generated@@183)) $generated@@183) ($generated@@30 $generated@@79 ($generated@@47 $generated@@79 $generated@@183) ($generated@@81 $generated@@184))))
 :pattern ( ($generated@@82 $generated@@183 ($generated@@81 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@185 $generated@@27) ($generated@@30 $generated@@31 $generated@@185 $generated@@37))
 :pattern ( ($generated@@30 $generated@@31 $generated@@185 $generated@@27))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> ($generated@@82 $generated@@186 $generated@@27) ($generated@@82 $generated@@186 $generated@@37))
 :pattern ( ($generated@@82 $generated@@186 $generated@@27))
)))
(assert (forall (($generated@@187 T@U) ) (!  (and (= ($generated@@170 ($generated@@173 $generated@@187)) $generated@@187) (or (and (<= 0 ($generated@@173 $generated@@187)) (< ($generated@@173 $generated@@187) 55296)) (and (<= 57344 ($generated@@173 $generated@@187)) (< ($generated@@173 $generated@@187) 1114112))))
 :pattern ( ($generated@@173 $generated@@187))
)))
(assert (= ($generated@@25 $generated@@37) $generated@@3))
(assert (= ($generated@@188 $generated@@37) $generated@@7))
(assert (= ($generated@@25 $generated@@41) $generated@@4))
(assert (= ($generated@@188 $generated@@41) $generated@@7))
(assert (= ($generated@@25 $generated@@27) $generated@@5))
(assert (= ($generated@@188 $generated@@27) $generated@@8))
(assert (= ($generated@@25 $generated@@44) $generated@@6))
(assert (= ($generated@@188 $generated@@44) $generated@@8))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@189 $generated@@37)  (or (= $generated@@189 $generated@@32) ($generated@@26 ($generated@@33 $generated@@189))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@189 $generated@@37))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Int) ) (!  (and (=> (< $generated@@192 ($generated@@28 $generated@@190)) (= ($generated@@87 ($generated@@134 $generated@@190 $generated@@191) $generated@@192) ($generated@@87 $generated@@190 $generated@@192))) (=> (<= ($generated@@28 $generated@@190) $generated@@192) (= ($generated@@87 ($generated@@134 $generated@@190 $generated@@191) $generated@@192) ($generated@@87 $generated@@191 (- $generated@@192 ($generated@@28 $generated@@190))))))
 :pattern ( ($generated@@87 ($generated@@134 $generated@@190 $generated@@191) $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@T) ) (! (= ($generated@@91 $generated@@194 ($generated@@76 $generated@@194 $generated@@193)) ($generated@@76 $generated@@50 ($generated@@91 $generated@@194 $generated@@193)))
 :pattern ( ($generated@@91 $generated@@194 ($generated@@76 $generated@@194 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> (= ($generated@@28 $generated@@195) 0) (= $generated@@195 $generated@@29))
 :pattern ( ($generated@@28 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! ($generated@@40 $generated@@150 $generated@@197 $generated $generated@@196)
 :pattern ( ($generated@@40 $generated@@150 $generated@@197 $generated $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@30 $generated@@79 $generated@@198 ($generated@@81 $generated@@199)) (forall (($generated@@200 Int) ) (!  (=> (and (<= 0 $generated@@200) (< $generated@@200 ($generated@@28 $generated@@198))) ($generated@@82 ($generated@@87 $generated@@198 $generated@@200) $generated@@199))
 :pattern ( ($generated@@87 $generated@@198 $generated@@200))
)))
 :pattern ( ($generated@@30 $generated@@79 $generated@@198 ($generated@@81 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ) (! ($generated@@30 $generated@@150 $generated@@201 $generated)
 :pattern ( ($generated@@30 $generated@@150 $generated@@201 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Bool)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Bool)
(declare-fun $generated@@208 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@209  (=> (and (and (and (not ($generated@@86 ($generated@@169 $generated@@202 $generated@@203) $generated@@29)) ($generated@@35 ($generated@@91 $generated@@31 $generated@@203) $generated@@27 $generated@@202)) (and (= $generated@@204 (forall (($generated@@210 T@U) ($generated@@211 T@U) )  (=> (and (and (or (not (= $generated@@210 $generated@@32)) (not true)) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@202 $generated@@210) $generated@@2)))) (= $generated@@210 $generated@@203)) ($generated@@14 ($generated@@100 $generated@@31 $generated@@49 $generated@@10 $generated@@205 $generated@@210 $generated@@211))))) ($generated@@168 $generated@@202 $generated@@203))) (and (and (= ($generated@@166 $generated@@202 $generated@@203) ($generated@@134 ($generated@@134 ($generated@@80 ($generated@@80 ($generated@@80 ($generated@@80 ($generated@@80 $generated@@29 ($generated@@91 $generated@@150 ($generated@@170 83))) ($generated@@91 $generated@@150 ($generated@@170 111))) ($generated@@91 $generated@@150 ($generated@@170 109))) ($generated@@91 $generated@@150 ($generated@@170 101))) ($generated@@91 $generated@@150 ($generated@@170 40))) ($generated@@169 $generated@@202 $generated@@203)) ($generated@@80 $generated@@29 ($generated@@91 $generated@@150 ($generated@@170 41))))) ($generated@@168 $generated@@202 $generated@@203)) (and ($generated@@30 $generated@@79 ($generated@@166 $generated@@202 $generated@@203) ($generated@@81 $generated)) (= ($generated@@166 $generated@@202 $generated@@203) $generated@@206)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) $generated@@207) (=> $generated@@207 (=> (= (ControlFlow 0 5) (- 0 4)) $generated@@204))))))
(let (($generated@@212  (=> ($generated@@86 ($generated@@169 $generated@@202 $generated@@203) $generated@@29) (=> (and (and (= ($generated@@166 $generated@@202 $generated@@203) ($generated@@76 $generated@@79 ($generated@@80 ($generated@@80 ($generated@@80 ($generated@@80 $generated@@29 ($generated@@91 $generated@@150 ($generated@@170 78))) ($generated@@91 $generated@@150 ($generated@@170 111))) ($generated@@91 $generated@@150 ($generated@@170 110))) ($generated@@91 $generated@@150 ($generated@@170 101))))) ($generated@@30 $generated@@79 ($generated@@166 $generated@@202 $generated@@203) ($generated@@81 $generated))) (and (= ($generated@@166 $generated@@202 $generated@@203) $generated@@206) (= (ControlFlow 0 3) (- 0 2)))) $generated@@207))))
(let (($generated@@213  (=> ($generated@@35 ($generated@@91 $generated@@31 $generated@@203) $generated@@27 $generated@@202) (=> (and (= $generated@@207 (forall (($generated@@214 T@U) ($generated@@215 T@U) )  (=> (and (and (or (not (= $generated@@214 $generated@@32)) (not true)) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@202 $generated@@214) $generated@@2)))) (= $generated@@214 $generated@@203)) ($generated@@14 ($generated@@100 $generated@@31 $generated@@49 $generated@@10 $generated@@205 $generated@@214 $generated@@215))))) ($generated@@168 $generated@@202 $generated@@203)) (and (=> (= (ControlFlow 0 7) 3) $generated@@212) (=> (= (ControlFlow 0 7) 5) $generated@@209))))))
(let (($generated@@216 true))
(let (($generated@@217  (=> (= $generated@@205 ($generated@@101 $generated@@32 $generated@@202 $generated@@2 $generated@@203)) (and (=> (= (ControlFlow 0 8) 1) $generated@@216) (=> (= (ControlFlow 0 8) 7) $generated@@213)))))
(let (($generated@@218  (=> (and ($generated@@36 $generated@@202) ($generated@@208 $generated@@202)) (=> (and (and (or (not (= $generated@@203 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@203 $generated@@44) ($generated@@40 $generated@@31 $generated@@203 $generated@@44 $generated@@202))) (and (= 1 $generated@@165) (= (ControlFlow 0 9) 8))) $generated@@217))))
$generated@@218)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
