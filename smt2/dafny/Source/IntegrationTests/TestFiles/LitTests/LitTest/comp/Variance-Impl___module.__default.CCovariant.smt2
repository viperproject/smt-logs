(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@50 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@T) T@T)
(declare-fun $generated@@62 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@101 () Int)
(declare-fun $generated@@102 (T@U T@U) Int)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@123 (T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@129 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U Int) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated) $generated@@1))
(assert (= ($generated@@30 $generated@@0) $generated@@2))
(assert ($generated@@31 $generated@@32))
(assert (= ($generated@@33 $generated@@34) 0))
(assert (= ($generated@@14 $generated@@37) 3))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@40 ($generated@@38 $generated@@39)) ($generated@@35 $generated@@40))
 :pattern ( ($generated@@35 $generated@@40) ($generated@@36 $generated@@37 $generated@@40 ($generated@@38 $generated@@39)))
)))
(assert (= ($generated@@14 $generated@@41) 4))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@36 $generated@@41 $generated@@44 $generated@@32)  (or (= $generated@@44 $generated@@42) (= ($generated@@43 $generated@@44) $generated@@32)))
 :pattern ( ($generated@@36 $generated@@41 $generated@@44 $generated@@32))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (and ($generated@@45 $generated@@48 $generated@@32 $generated@@49) ($generated@@46 $generated@@49)) ($generated@@45 $generated@@48 $generated@@47 $generated@@49))
 :pattern ( ($generated@@45 $generated@@48 $generated@@32 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@50 $generated@@41 $generated@@52 $generated@@51 $generated@@53) ($generated@@50 $generated@@41 $generated@@52 $generated@@47 $generated@@53))
 :pattern ( ($generated@@50 $generated@@41 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@50 $generated@@41 $generated@@52 $generated@@47 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@50 $generated@@41 $generated@@55 $generated@@54 $generated@@56) ($generated@@50 $generated@@41 $generated@@55 $generated@@32 $generated@@56))
 :pattern ( ($generated@@50 $generated@@41 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@50 $generated@@41 $generated@@55 $generated@@32 $generated@@56))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@58 $generated@@65 $generated@@66 ($generated@@62 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@69) $generated@@67)
 :weight 0
)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@74 $generated@@75) (= ($generated@@58 $generated@@70 $generated@@71 ($generated@@62 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@75) ($generated@@58 $generated@@70 $generated@@71 $generated@@73 $generated@@75)))
 :weight 0
))) (= ($generated@@14 $generated@@59) 5)) (= ($generated@@14 $generated@@60) 6)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@14 ($generated@@61 $generated@@76 $generated@@77)) 7))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@63 ($generated@@61 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@61 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@64 ($generated@@61 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@61 $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@50 $generated@@41 $generated@@82 $generated@@47 $generated@@83)  (or (= $generated@@82 $generated@@42) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@83 $generated@@82) $generated@@4)))))
 :pattern ( ($generated@@50 $generated@@41 $generated@@82 $generated@@47 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@50 $generated@@41 $generated@@84 $generated@@32 $generated@@85)  (or (= $generated@@84 $generated@@42) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@85 $generated@@84) $generated@@4)))))
 :pattern ( ($generated@@50 $generated@@41 $generated@@84 $generated@@32 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@86 $generated@@87 $generated@@88) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@87 $generated@@89) $generated@@4))) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@88 $generated@@89) $generated@@4))))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@88 $generated@@89) $generated@@4))
)))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 $generated@@91) $generated@@91)
 :pattern ( ($generated@@90 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@35 $generated@@94) (= ($generated@@93 $generated@@94) $generated@@8))
 :pattern ( ($generated@@35 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 ($generated@@57 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@57 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@35 $generated@@99) (exists (($generated@@100 T@U) ) (= $generated@@99 ($generated@@98 $generated@@100))))
 :pattern ( ($generated@@35 $generated@@99))
)))
(assert  (=> (< 0 $generated@@101) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@104) ($generated@@36 $generated@@37 $generated@@105 ($generated@@38 $generated@@103))) ($generated@@50 $generated@@37 $generated@@105 ($generated@@38 $generated@@103) $generated@@104)) ($generated@@50 $generated@@16 ($generated@@20 ($generated@@102 $generated@@103 $generated@@105)) $generated@@0 $generated@@104))
 :pattern ( ($generated@@102 $generated@@103 $generated@@105) ($generated@@50 $generated@@37 $generated@@105 ($generated@@38 $generated@@103) $generated@@104))
))))
(assert  (=> (< 0 $generated@@101) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@107 ($generated@@38 $generated@@106)) ($generated@@36 $generated@@16 ($generated@@20 ($generated@@102 $generated@@106 $generated@@107)) $generated@@0))
 :pattern ( ($generated@@102 $generated@@106 $generated@@107))
))))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@45 ($generated@@95 $generated@@111 $generated@@108) $generated@@109 $generated@@110) ($generated@@50 $generated@@111 $generated@@108 $generated@@109 $generated@@110))
 :pattern ( ($generated@@45 ($generated@@95 $generated@@111 $generated@@108) $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@86 $generated@@112 $generated@@113) (=> ($generated@@45 $generated@@114 $generated@@115 $generated@@112) ($generated@@45 $generated@@114 $generated@@115 $generated@@113)))
 :pattern ( ($generated@@86 $generated@@112 $generated@@113) ($generated@@45 $generated@@114 $generated@@115 $generated@@112))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@T) ) (!  (=> ($generated@@86 $generated@@116 $generated@@117) (=> ($generated@@50 $generated@@120 $generated@@118 $generated@@119 $generated@@116) ($generated@@50 $generated@@120 $generated@@118 $generated@@119 $generated@@117)))
 :pattern ( ($generated@@86 $generated@@116 $generated@@117) ($generated@@50 $generated@@120 $generated@@118 $generated@@119 $generated@@116))
)))
(assert (forall (($generated@@122 T@U) ) (!  (and (= ($generated@@30 ($generated@@38 $generated@@122)) $generated@@7) (= ($generated@@121 ($generated@@38 $generated@@122)) $generated@@13))
 :pattern ( ($generated@@38 $generated@@122))
)))
(assert (= ($generated@@14 $generated@@124) 8))
(assert  (=> (< 0 $generated@@101) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@127) ($generated@@36 $generated@@37 $generated@@128 ($generated@@38 $generated@@126))) ($generated@@50 $generated@@37 $generated@@128 ($generated@@38 $generated@@126) $generated@@127)) ($generated@@50 $generated@@124 ($generated@@123 $generated@@126 $generated@@128) ($generated@@125 $generated@@126) $generated@@127))
 :pattern ( ($generated@@123 $generated@@126 $generated@@128) ($generated@@50 $generated@@37 $generated@@128 ($generated@@38 $generated@@126) $generated@@127))
))))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@129 $generated@@130 $generated@@54) (and (= ($generated@@95 $generated@@41 ($generated@@57 $generated@@41 $generated@@130)) $generated@@130) ($generated@@36 $generated@@41 ($generated@@57 $generated@@41 $generated@@130) $generated@@54)))
 :pattern ( ($generated@@129 $generated@@130 $generated@@54))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@129 $generated@@131 $generated@@51) (and (= ($generated@@95 $generated@@41 ($generated@@57 $generated@@41 $generated@@131)) $generated@@131) ($generated@@36 $generated@@41 ($generated@@57 $generated@@41 $generated@@131) $generated@@51)))
 :pattern ( ($generated@@129 $generated@@131 $generated@@51))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@129 $generated@@132 $generated@@47) (and (= ($generated@@95 $generated@@41 ($generated@@57 $generated@@41 $generated@@132)) $generated@@132) ($generated@@36 $generated@@41 ($generated@@57 $generated@@41 $generated@@132) $generated@@47)))
 :pattern ( ($generated@@129 $generated@@132 $generated@@47))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@129 $generated@@133 $generated@@32) (and (= ($generated@@95 $generated@@41 ($generated@@57 $generated@@41 $generated@@133)) $generated@@133) ($generated@@36 $generated@@41 ($generated@@57 $generated@@41 $generated@@133) $generated@@32)))
 :pattern ( ($generated@@129 $generated@@133 $generated@@32))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@36 $generated@@41 $generated@@134 $generated@@51)  (and ($generated@@36 $generated@@41 $generated@@134 $generated@@47) (or (not (= $generated@@134 $generated@@42)) (not true))))
 :pattern ( ($generated@@36 $generated@@41 $generated@@134 $generated@@51))
 :pattern ( ($generated@@36 $generated@@41 $generated@@134 $generated@@47))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@36 $generated@@41 $generated@@135 $generated@@54)  (and ($generated@@36 $generated@@41 $generated@@135 $generated@@32) (or (not (= $generated@@135 $generated@@42)) (not true))))
 :pattern ( ($generated@@36 $generated@@41 $generated@@135 $generated@@54))
 :pattern ( ($generated@@36 $generated@@41 $generated@@135 $generated@@32))
)))
(assert  (=> (< 0 $generated@@101) (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@137 ($generated@@38 $generated@@136)) ($generated@@36 $generated@@124 ($generated@@123 $generated@@136 $generated@@137) ($generated@@125 $generated@@136)))
 :pattern ( ($generated@@123 $generated@@136 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> ($generated@@46 $generated@@140) (= ($generated@@50 $generated@@37 ($generated@@98 $generated@@139) ($generated@@38 $generated@@138) $generated@@140) ($generated@@45 $generated@@139 $generated@@138 $generated@@140)))
 :pattern ( ($generated@@50 $generated@@37 ($generated@@98 $generated@@139) ($generated@@38 $generated@@138) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@50 $generated@@41 $generated@@141 $generated@@32 $generated@@142) ($generated@@50 $generated@@41 $generated@@141 $generated@@47 $generated@@142))
 :pattern ( ($generated@@50 $generated@@41 $generated@@141 $generated@@32 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (or (not (= $generated@@143 $generated@@145)) (not true)) (=> (and ($generated@@86 $generated@@143 $generated@@144) ($generated@@86 $generated@@144 $generated@@145)) ($generated@@86 $generated@@143 $generated@@145)))
 :pattern ( ($generated@@86 $generated@@143 $generated@@144) ($generated@@86 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> ($generated@@129 $generated@@146 $generated@@0) (and (= ($generated@@95 $generated@@16 ($generated@@57 $generated@@16 $generated@@146)) $generated@@146) ($generated@@36 $generated@@16 ($generated@@57 $generated@@16 $generated@@146) $generated@@0)))
 :pattern ( ($generated@@129 $generated@@146 $generated@@0))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@129 $generated@@147 $generated) (and (= ($generated@@95 $generated@@15 ($generated@@57 $generated@@15 $generated@@147)) $generated@@147) ($generated@@36 $generated@@15 ($generated@@57 $generated@@15 $generated@@147) $generated)))
 :pattern ( ($generated@@129 $generated@@147 $generated))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@129 ($generated@@95 $generated@@150 $generated@@148) $generated@@149) ($generated@@36 $generated@@150 $generated@@148 $generated@@149))
 :pattern ( ($generated@@129 ($generated@@95 $generated@@150 $generated@@148) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (<= 0 ($generated@@33 $generated@@151))
 :pattern ( ($generated@@33 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@50 $generated@@124 $generated@@153 ($generated@@125 $generated@@154) $generated@@155) (forall (($generated@@156 Int) ) (!  (=> (and (<= 0 $generated@@156) (< $generated@@156 ($generated@@33 $generated@@153))) ($generated@@45 ($generated@@152 $generated@@153 $generated@@156) $generated@@154 $generated@@155))
 :pattern ( ($generated@@152 $generated@@153 $generated@@156))
)))
 :pattern ( ($generated@@50 $generated@@124 $generated@@153 ($generated@@125 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@125 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@125 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@30 ($generated@@125 $generated@@159)) $generated@@3)
 :pattern ( ($generated@@125 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@160 ($generated@@38 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@38 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@93 ($generated@@98 $generated@@162)) $generated@@8)
 :pattern ( ($generated@@98 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@163 ($generated@@98 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@98 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@57 $generated@@166 ($generated@@95 $generated@@166 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@95 $generated@@166 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@36 $generated@@37 ($generated@@98 $generated@@168) ($generated@@38 $generated@@167)) ($generated@@129 $generated@@168 $generated@@167))
 :pattern ( ($generated@@36 $generated@@37 ($generated@@98 $generated@@168) ($generated@@38 $generated@@167)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@46 $generated@@171) (and ($generated@@35 $generated@@169) ($generated@@50 $generated@@37 $generated@@169 ($generated@@38 $generated@@170) $generated@@171))) ($generated@@45 ($generated@@163 $generated@@169) $generated@@170 $generated@@171))
 :pattern ( ($generated@@45 ($generated@@163 $generated@@169) $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@172 $generated@@175 $generated@@176 $generated@@177 ($generated@@174 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@180 $generated@@181) $generated@@178)
 :weight 0
)) (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@172 $generated@@182 $generated@@183 $generated@@184 ($generated@@174 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@172 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@172 $generated@@191 $generated@@192 $generated@@193 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@172 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@19 ($generated@@172 $generated@@41 $generated@@59 $generated@@15 ($generated@@173 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@204 $generated@@205))  (=> (and (or (not (= $generated@@204 $generated@@200)) (not true)) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@201 $generated@@204) $generated@@202)))) $generated@@203))
 :pattern ( ($generated@@172 $generated@@41 $generated@@59 $generated@@15 ($generated@@173 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> ($generated@@129 $generated@@206 ($generated@@125 $generated@@207)) (and (= ($generated@@95 $generated@@124 ($generated@@57 $generated@@124 $generated@@206)) $generated@@206) ($generated@@36 $generated@@124 ($generated@@57 $generated@@124 $generated@@206) ($generated@@125 $generated@@207))))
 :pattern ( ($generated@@129 $generated@@206 ($generated@@125 $generated@@207)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@129 $generated@@209 ($generated@@38 $generated@@208)) (and (= ($generated@@95 $generated@@37 ($generated@@57 $generated@@37 $generated@@209)) $generated@@209) ($generated@@36 $generated@@37 ($generated@@57 $generated@@37 $generated@@209) ($generated@@38 $generated@@208))))
 :pattern ( ($generated@@129 $generated@@209 ($generated@@38 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ) (!  (=> ($generated@@36 $generated@@41 $generated@@210 $generated@@32) ($generated@@36 $generated@@41 $generated@@210 $generated@@47))
 :pattern ( ($generated@@36 $generated@@41 $generated@@210 $generated@@32))
)))
(assert (forall (($generated@@211 T@U) ) (!  (=> ($generated@@129 $generated@@211 $generated@@32) ($generated@@129 $generated@@211 $generated@@47))
 :pattern ( ($generated@@129 $generated@@211 $generated@@32))
)))
(assert (= ($generated@@30 $generated@@54) $generated@@5))
(assert (= ($generated@@121 $generated@@54) $generated@@11))
(assert (= ($generated@@30 $generated@@51) $generated@@6))
(assert (= ($generated@@121 $generated@@51) $generated@@12))
(assert (= ($generated@@30 $generated@@47) $generated@@9))
(assert (= ($generated@@121 $generated@@47) $generated@@12))
(assert (= ($generated@@30 $generated@@32) $generated@@10))
(assert (= ($generated@@121 $generated@@32) $generated@@11))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@36 $generated@@41 $generated@@212 $generated@@47)  (or (= $generated@@212 $generated@@42) ($generated@@31 ($generated@@43 $generated@@212))))
 :pattern ( ($generated@@36 $generated@@41 $generated@@212 $generated@@47))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@T) ) (! (= ($generated@@95 $generated@@214 ($generated@@90 $generated@@214 $generated@@213)) ($generated@@90 $generated@@60 ($generated@@95 $generated@@214 $generated@@213)))
 :pattern ( ($generated@@95 $generated@@214 ($generated@@90 $generated@@214 $generated@@213)))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (= ($generated@@33 $generated@@215) 0) (= $generated@@215 $generated@@34))
 :pattern ( ($generated@@33 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! ($generated@@50 $generated@@16 $generated@@217 $generated@@0 $generated@@216)
 :pattern ( ($generated@@50 $generated@@16 $generated@@217 $generated@@0 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! ($generated@@50 $generated@@15 $generated@@219 $generated $generated@@218)
 :pattern ( ($generated@@50 $generated@@15 $generated@@219 $generated $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@36 $generated@@124 $generated@@220 ($generated@@125 $generated@@221)) (forall (($generated@@222 Int) ) (!  (=> (and (<= 0 $generated@@222) (< $generated@@222 ($generated@@33 $generated@@220))) ($generated@@129 ($generated@@152 $generated@@220 $generated@@222) $generated@@221))
 :pattern ( ($generated@@152 $generated@@220 $generated@@222))
)))
 :pattern ( ($generated@@36 $generated@@124 $generated@@220 ($generated@@125 $generated@@221)))
)))
(assert (forall (($generated@@223 T@U) ) (! ($generated@@36 $generated@@16 $generated@@223 $generated@@0)
 :pattern ( ($generated@@36 $generated@@16 $generated@@223 $generated@@0))
)))
(assert (forall (($generated@@224 T@U) ) (! ($generated@@36 $generated@@15 $generated@@224 $generated)
 :pattern ( ($generated@@36 $generated@@15 $generated@@224 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 (T@U) Bool)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () Bool)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@240  (=> (= $generated@@225 ($generated@@173 $generated@@42 $generated@@226 $generated@@4 false)) (=> (and (and (or (not (= $generated@@227 $generated@@42)) (not true)) (and ($generated@@36 $generated@@41 $generated@@227 $generated@@54) ($generated@@50 $generated@@41 $generated@@227 $generated@@54 $generated@@226))) (and ($generated@@46 $generated@@228) ($generated@@229 $generated@@228))) (=> (and (and (and (or (not (= $generated@@230 $generated@@42)) (not true)) (and ($generated@@36 $generated@@41 $generated@@230 $generated@@54) ($generated@@50 $generated@@41 $generated@@230 $generated@@54 $generated@@228))) (not ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@226 $generated@@230) $generated@@4))))) (and (forall (($generated@@241 T@U) ) (!  (=> (and (or (not (= $generated@@241 $generated@@42)) (not true)) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@226 $generated@@241) $generated@@4)))) (= ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@228 $generated@@241) ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@226 $generated@@241)))
 :pattern ( ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@228 $generated@@241))
)) ($generated@@86 $generated@@226 $generated@@228))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (=> (and (= $generated@@231 ($generated@@98 ($generated@@95 $generated@@41 $generated@@230))) (=> $generated@@232 (and ($generated@@36 $generated@@37 $generated@@233 ($generated@@38 $generated@@51)) ($generated@@50 $generated@@37 $generated@@233 ($generated@@38 $generated@@51) $generated@@228)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))))))))
(let (($generated@@242  (=> (and (and (and (and ($generated@@46 $generated@@226) ($generated@@229 $generated@@226)) (and (=> $generated@@234 (and ($generated@@36 $generated@@41 $generated@@235 $generated@@54) ($generated@@50 $generated@@41 $generated@@235 $generated@@54 $generated@@226))) true)) (and (and (=> $generated@@236 (and ($generated@@36 $generated@@37 $generated@@237 ($generated@@38 $generated@@54)) ($generated@@50 $generated@@37 $generated@@237 ($generated@@38 $generated@@54) $generated@@226))) true) (and (=> $generated@@232 (and ($generated@@36 $generated@@37 $generated@@238 ($generated@@38 $generated@@51)) ($generated@@50 $generated@@37 $generated@@238 ($generated@@38 $generated@@51) $generated@@226))) true))) (and (and (and ($generated@@36 $generated@@37 $generated@@239 ($generated@@38 $generated)) ($generated@@50 $generated@@37 $generated@@239 ($generated@@38 $generated) $generated@@226)) true) (and (= 2 $generated@@101) (= (ControlFlow 0 6) 2)))) $generated@@240)))
$generated@@242)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
