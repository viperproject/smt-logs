(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@64 () Int)
(declare-fun $generated@@65 (T@U T@U) Int)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@69 (T@T T@U T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@73 (T@U) Int)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@T) T@T)
(declare-fun $generated@@133 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@21 ($generated@@20 $generated@@22 $generated@@23) $generated@@23)
 :pattern ( ($generated@@20 $generated@@22 $generated@@23))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@21 $generated@@24 $generated@@26) ($generated@@21 ($generated@@20 $generated@@24 $generated@@25) $generated@@26))
 :pattern ( ($generated@@20 $generated@@24 $generated@@25) ($generated@@21 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@21 $generated@@28 $generated@@30) ($generated@@21 ($generated@@27 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@21 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@21 $generated@@32 $generated@@33) ($generated@@21 ($generated@@27 $generated@@31 $generated@@32) $generated@@33))
 :pattern ( ($generated@@27 $generated@@31 $generated@@32) ($generated@@21 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@21 ($generated@@20 $generated@@34 $generated@@35) $generated@@36)  (or (= $generated@@36 $generated@@35) ($generated@@21 $generated@@34 $generated@@36)))
 :pattern ( ($generated@@21 ($generated@@20 $generated@@34 $generated@@35) $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@21 $generated@@39 $generated@@40) (not ($generated@@21 ($generated@@37 $generated@@38 $generated@@39) $generated@@40)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39) ($generated@@21 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ) (!  (not ($generated@@21 $generated@@41 $generated@@42))
 :pattern ( ($generated@@21 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@27 ($generated@@27 $generated@@43 $generated@@44) $generated@@44) ($generated@@27 $generated@@43 $generated@@44))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@43 $generated@@44) $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@21 ($generated@@37 $generated@@45 $generated@@46) $generated@@47)  (and ($generated@@21 $generated@@45 $generated@@47) (not ($generated@@21 $generated@@46 $generated@@47))))
 :pattern ( ($generated@@21 ($generated@@37 $generated@@45 $generated@@46) $generated@@47))
)))
(assert (forall (($generated@@51 T@U) ) (!  (=> ($generated@@49 $generated@@51) ($generated@@21 $generated@@51 ($generated@@50 $generated@@5 ($generated@@9 ($generated@@48 $generated@@51)))))
 :pattern ( ($generated@@48 $generated@@51))
)))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@52 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@57 $generated@@58 $generated@@59) (forall (($generated@@60 T@U) ) (!  (=> ($generated@@21 $generated@@58 $generated@@60) ($generated@@21 $generated@@59 $generated@@60))
 :pattern ( ($generated@@21 $generated@@58 $generated@@60))
 :pattern ( ($generated@@21 $generated@@59 $generated@@60))
)))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@50 $generated@@63 ($generated@@61 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@61 $generated@@63 $generated@@62))
)))
(assert (= ($generated@@3 $generated@@67) 3))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (or ($generated@@68 ($generated@@54 $generated@@67 $generated@@75)) (and (< 1 $generated@@64) ($generated@@69 $generated@@67 $generated@@75 ($generated@@70 $generated)))) (and (=> (not ($generated@@71 $generated@@75 $generated@@41)) (and ($generated@@72 ($generated@@54 $generated@@67 $generated@@75)) (let (($generated@@76 ($generated@@52 ($generated@@73 ($generated@@54 $generated@@67 $generated@@75)))))
($generated@@68 ($generated@@37 $generated@@75 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@76)))))))) (= ($generated@@65 ($generated@@66 $generated@@74) ($generated@@54 $generated@@67 $generated@@75)) (ite ($generated@@71 $generated@@75 $generated@@41) 0 (let (($generated@@77 ($generated@@52 ($generated@@73 ($generated@@54 $generated@@67 $generated@@75)))))
(+ $generated@@77 ($generated@@65 ($generated@@66 $generated@@74) ($generated@@37 $generated@@75 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@77)))))))))))
 :weight 3
 :pattern ( ($generated@@65 ($generated@@66 $generated@@74) ($generated@@54 $generated@@67 $generated@@75)))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 $generated@@79 $generated@@80) (forall (($generated@@81 T@U) ) (!  (or (not ($generated@@21 $generated@@79 $generated@@81)) (not ($generated@@21 $generated@@80 $generated@@81)))
 :pattern ( ($generated@@21 $generated@@79 $generated@@81))
 :pattern ( ($generated@@21 $generated@@80 $generated@@81))
)))
 :pattern ( ($generated@@78 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@69 $generated@@67 $generated@@83 ($generated@@70 $generated@@84)) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@21 $generated@@83 $generated@@85) ($generated@@82 $generated@@85 $generated@@84))
 :pattern ( ($generated@@21 $generated@@83 $generated@@85))
)))
 :pattern ( ($generated@@69 $generated@@67 $generated@@83 ($generated@@70 $generated@@84)))
)))
(assert  (=> (<= 0 $generated@@64) (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or ($generated@@72 $generated@@88) (and (< 0 $generated@@64) (and (and ($generated@@86 $generated@@87) ($generated@@69 $generated@@67 $generated@@88 ($generated@@70 $generated))) (not ($generated@@71 $generated@@88 $generated@@41))))) (and ($generated@@49 $generated@@88) (= ($generated@@73 $generated@@88) (let (($generated@@89 ($generated@@48 $generated@@88)))
$generated@@89))))
 :pattern ( ($generated@@73 $generated@@88) ($generated@@86 $generated@@87))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@90 ($generated@@50 $generated@@95 $generated@@92) $generated@@93 $generated@@94) ($generated@@91 $generated@@95 $generated@@92 $generated@@93 $generated@@94))
 :pattern ( ($generated@@90 ($generated@@50 $generated@@95 $generated@@92) $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@21 ($generated@@27 $generated@@96 $generated@@97) $generated@@98)  (or ($generated@@21 $generated@@96 $generated@@98) ($generated@@21 $generated@@97 $generated@@98)))
 :pattern ( ($generated@@21 ($generated@@27 $generated@@96 $generated@@97) $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@78 $generated@@99 $generated@@100) (and (= ($generated@@37 ($generated@@27 $generated@@99 $generated@@100) $generated@@99) $generated@@100) (= ($generated@@37 ($generated@@27 $generated@@99 $generated@@100) $generated@@100) $generated@@99)))
 :pattern ( ($generated@@27 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> ($generated@@71 $generated@@101 $generated@@102) (= $generated@@101 $generated@@102))
 :pattern ( ($generated@@71 $generated@@101 $generated@@102))
)))
(assert  (=> (<= 0 $generated@@64) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@72 ($generated@@54 $generated@@67 $generated@@104)) (and (< 0 $generated@@64) (and (and ($generated@@86 $generated@@103) ($generated@@69 $generated@@67 $generated@@104 ($generated@@70 $generated))) (not ($generated@@71 $generated@@104 $generated@@41))))) (and ($generated@@49 ($generated@@54 $generated@@67 $generated@@104)) (= ($generated@@73 ($generated@@54 $generated@@67 $generated@@104)) (let (($generated@@105 ($generated@@48 ($generated@@54 $generated@@67 $generated@@104))))
$generated@@105))))
 :weight 3
 :pattern ( ($generated@@73 ($generated@@54 $generated@@67 $generated@@104)) ($generated@@86 $generated@@103))
))))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@82 $generated@@106 $generated) (and (= ($generated@@50 $generated@@5 ($generated@@61 $generated@@5 $generated@@106)) $generated@@106) ($generated@@69 $generated@@5 ($generated@@61 $generated@@5 $generated@@106) $generated)))
 :pattern ( ($generated@@82 $generated@@106 $generated))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@82 ($generated@@50 $generated@@109 $generated@@107) $generated@@108) ($generated@@69 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@82 ($generated@@50 $generated@@109 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@91 $generated@@67 $generated@@110 ($generated@@70 $generated@@111) $generated@@112) (forall (($generated@@113 T@U) ) (!  (=> ($generated@@21 $generated@@110 $generated@@113) ($generated@@90 $generated@@113 $generated@@111 $generated@@112))
 :pattern ( ($generated@@21 $generated@@110 $generated@@113))
)))
 :pattern ( ($generated@@91 $generated@@67 $generated@@110 ($generated@@70 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@70 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@70 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@19 ($generated@@70 $generated@@116)) $generated@@1)
 :pattern ( ($generated@@70 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@61 $generated@@118 ($generated@@50 $generated@@118 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@50 $generated@@118 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@65 ($generated@@66 $generated@@119) $generated@@120) ($generated@@65 $generated@@119 $generated@@120))
 :pattern ( ($generated@@65 ($generated@@66 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@27 $generated@@121 ($generated@@27 $generated@@121 $generated@@122)) ($generated@@27 $generated@@121 $generated@@122))
 :pattern ( ($generated@@27 $generated@@121 ($generated@@27 $generated@@121 $generated@@122)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@123 $generated@@134 $generated@@135 $generated@@136 ($generated@@130 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@123 $generated@@141 $generated@@142 $generated@@143 ($generated@@130 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@123 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@123 $generated@@150 $generated@@151 $generated@@152 ($generated@@130 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))) (= ($generated@@3 $generated@@124) 4)) (= ($generated@@3 $generated@@125) 5)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@127 $generated@@159 $generated@@160 ($generated@@131 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@163) $generated@@161)
 :weight 0
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@168 $generated@@169) (= ($generated@@127 $generated@@164 $generated@@165 ($generated@@131 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@127 $generated@@164 $generated@@165 $generated@@167 $generated@@169)))
 :weight 0
))) (= ($generated@@3 $generated@@128) 6)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@3 ($generated@@129 $generated@@170 $generated@@171)) 7))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@132 ($generated@@129 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@129 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@133 ($generated@@129 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@129 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@8 ($generated@@123 $generated@@124 $generated@@125 $generated@@4 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (or (not (= $generated@@180 $generated@@176)) (not true)) ($generated@@8 ($generated@@61 $generated@@4 ($generated@@127 $generated@@125 $generated@@128 ($generated@@127 $generated@@124 ($generated@@129 $generated@@125 $generated@@128) $generated@@177 $generated@@180) $generated@@178)))) $generated@@179))
 :pattern ( ($generated@@123 $generated@@124 $generated@@125 $generated@@4 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (or ($generated@@68 $generated@@183) (and (< 1 $generated@@64) ($generated@@69 $generated@@67 $generated@@183 ($generated@@70 $generated)))) (and (=> (not ($generated@@71 $generated@@183 $generated@@41)) (and ($generated@@72 $generated@@183) (let (($generated@@184 ($generated@@73 $generated@@183)))
($generated@@68 ($generated@@37 $generated@@183 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@184)))))))) (= ($generated@@65 ($generated@@66 $generated@@182) $generated@@183) (ite ($generated@@71 $generated@@183 $generated@@41) 0 (let (($generated@@185 ($generated@@73 $generated@@183)))
(+ $generated@@185 ($generated@@65 $generated@@182 ($generated@@37 $generated@@183 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@185)))))))))))
 :pattern ( ($generated@@65 ($generated@@66 $generated@@182) $generated@@183))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@82 $generated@@186 ($generated@@70 $generated@@187)) (and (= ($generated@@50 $generated@@67 ($generated@@61 $generated@@67 $generated@@186)) $generated@@186) ($generated@@69 $generated@@67 ($generated@@61 $generated@@67 $generated@@186) ($generated@@70 $generated@@187))))
 :pattern ( ($generated@@82 $generated@@186 ($generated@@70 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@71 $generated@@188 $generated@@189) (forall (($generated@@190 T@U) ) (! (= ($generated@@21 $generated@@188 $generated@@190) ($generated@@21 $generated@@189 $generated@@190))
 :pattern ( ($generated@@21 $generated@@188 $generated@@190))
 :pattern ( ($generated@@21 $generated@@189 $generated@@190))
)))
 :pattern ( ($generated@@71 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@50 $generated@@5 ($generated@@9 ($generated@@52 $generated@@191))) ($generated@@54 $generated@@128 ($generated@@50 $generated@@5 ($generated@@9 $generated@@191))))
 :pattern ( ($generated@@50 $generated@@5 ($generated@@9 ($generated@@52 $generated@@191))))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@50 $generated@@193 ($generated@@54 $generated@@193 $generated@@192)) ($generated@@54 $generated@@128 ($generated@@50 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@50 $generated@@193 ($generated@@54 $generated@@193 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! ($generated@@91 $generated@@5 $generated@@195 $generated $generated@@194)
 :pattern ( ($generated@@91 $generated@@5 $generated@@195 $generated $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! ($generated@@69 $generated@@5 $generated@@196 $generated)
 :pattern ( ($generated@@69 $generated@@5 $generated@@196 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 32) (let (($generated@@219  (=> (= (ControlFlow 0 22) (- 0 21)) (= ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) ($generated@@27 $generated@@198 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) (+ ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) $generated@@198) $generated@@199)))))
(let (($generated@@220  (=> (and (= ($generated@@65 ($generated@@66 $generated@@197) ($generated@@27 $generated@@198 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) (+ ($generated@@65 ($generated@@66 $generated@@197) $generated@@198) $generated@@199)) (= (ControlFlow 0 25) 22)) $generated@@219)))
(let (($generated@@221  (=> (and (= $generated@@200 $generated@@199) (= (ControlFlow 0 24) 22)) $generated@@219)))
(let (($generated@@222  (=> (and ($generated@@71 $generated@@198 $generated@@41) (= (ControlFlow 0 23) 22)) $generated@@219)))
(let (($generated@@223  (=> (and (and (and (= $generated@@201 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))) ($generated@@91 $generated@@67 $generated@@201 ($generated@@70 $generated) $generated@@203)) (and ($generated@@68 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))) ($generated@@68 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))))) (and (and ($generated@@91 $generated@@67 $generated@@198 ($generated@@70 $generated) $generated@@203) ($generated@@68 $generated@@198)) (and ($generated@@68 $generated@@198) (= (ControlFlow 0 20) (- 0 19))))) (= (+ ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))) $generated@@199) (+ ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) $generated@@198) $generated@@199)))))
(let (($generated@@224  (=> ($generated@@91 $generated@@67 $generated@@202 ($generated@@70 $generated) $generated@@203) (=> (and ($generated@@68 $generated@@202) ($generated@@68 $generated@@202)) (and (=> (= (ControlFlow 0 15) (- 0 18)) (or (or (<= 0 $generated@@199) (and ($generated@@57 $generated@@202 $generated@@198) (not ($generated@@57 $generated@@198 $generated@@202)))) (= $generated@@200 $generated@@199))) (=> (or (or (<= 0 $generated@@199) (and ($generated@@57 $generated@@202 $generated@@198) (not ($generated@@57 $generated@@198 $generated@@202)))) (= $generated@@200 $generated@@199)) (and (=> (= (ControlFlow 0 15) (- 0 17)) (or (and ($generated@@57 $generated@@202 $generated@@198) (not ($generated@@57 $generated@@198 $generated@@202))) (and ($generated@@71 $generated@@202 $generated@@198) (< $generated@@200 $generated@@199)))) (=> (or (and ($generated@@57 $generated@@202 $generated@@198) (not ($generated@@57 $generated@@198 $generated@@202))) (and ($generated@@71 $generated@@202 $generated@@198) (< $generated@@200 $generated@@199))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (not ($generated@@21 $generated@@202 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))) (=> (not ($generated@@21 $generated@@202 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200)))) (=> (and ($generated@@86 $generated@@204) ($generated@@205 $generated@@204)) (=> (and (and (and (and ($generated@@68 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))) ($generated@@68 $generated@@202)) (= ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))) (+ ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) $generated@@202) $generated@@200))) (and (= $generated@@203 $generated@@204) (= $generated@@206 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))))) (and (and ($generated@@91 $generated@@67 $generated@@206 ($generated@@70 $generated) $generated@@204) ($generated@@68 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200)))))) (and ($generated@@68 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))) (= (ControlFlow 0 15) (- 0 14))))) (= (+ (+ $generated@@200 ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) $generated@@202)) $generated@@199) (+ ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))) $generated@@199))))))))))))))
(let (($generated@@225  (=> (and (and (= $generated@@207 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) ($generated@@91 $generated@@67 $generated@@207 ($generated@@70 $generated) $generated@@203)) (and ($generated@@68 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) ($generated@@68 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (or (or (<= 0 $generated@@199) (and ($generated@@57 $generated@@202 $generated@@198) (not ($generated@@57 $generated@@198 $generated@@202)))) (= $generated@@199 $generated@@199))) (=> (or (or (<= 0 $generated@@199) (and ($generated@@57 $generated@@202 $generated@@198) (not ($generated@@57 $generated@@198 $generated@@202)))) (= $generated@@199 $generated@@199)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (and ($generated@@57 $generated@@202 $generated@@198) (not ($generated@@57 $generated@@198 $generated@@202))) (and ($generated@@71 $generated@@202 $generated@@198) (< $generated@@199 $generated@@199)))) (=> (or (and ($generated@@57 $generated@@202 $generated@@198) (not ($generated@@57 $generated@@198 $generated@@202))) (and ($generated@@71 $generated@@202 $generated@@198) (< $generated@@199 $generated@@199))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (not ($generated@@21 $generated@@202 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) (=> (not ($generated@@21 $generated@@202 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199)))) (=> (and ($generated@@86 $generated@@208) ($generated@@205 $generated@@208)) (=> (and (and (and ($generated@@68 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) ($generated@@68 $generated@@202)) (and (= ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) (+ ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) $generated@@202) $generated@@199)) (= $generated@@203 $generated@@208))) (and (and ($generated@@91 $generated@@67 $generated@@202 ($generated@@70 $generated) $generated@@208) ($generated@@68 $generated@@202)) (and ($generated@@68 $generated@@202) (= (ControlFlow 0 10) (- 0 9))))) (= (+ $generated@@200 ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199)))))) (+ (+ $generated@@200 ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) $generated@@202)) $generated@@199)))))))))))))
(let (($generated@@226  (=> (and (and (= $generated@@209 ($generated@@37 $generated@@210 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))) ($generated@@91 $generated@@67 $generated@@209 ($generated@@70 $generated) $generated@@203)) (and ($generated@@68 ($generated@@37 $generated@@210 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))) ($generated@@68 ($generated@@37 $generated@@210 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@71 ($generated@@37 $generated@@210 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200)))) ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199)))))) (=> ($generated@@71 ($generated@@37 $generated@@210 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200)))) ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) (=> (= $generated@@211 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) (=> (and (and ($generated@@91 $generated@@67 $generated@@211 ($generated@@70 $generated) $generated@@203) ($generated@@68 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199)))))) (and ($generated@@68 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) (= (ControlFlow 0 7) (- 0 6)))) (= (+ $generated@@200 ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) ($generated@@37 $generated@@210 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200)))))) (+ $generated@@200 ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))))))))))))
(let (($generated@@227  (=> (and (and (and ($generated@@91 $generated@@67 $generated@@210 ($generated@@70 $generated) $generated@@203) ($generated@@68 $generated@@210)) (and ($generated@@68 $generated@@210) (= $generated@@212 ($generated@@37 $generated@@210 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))))) (and (and ($generated@@91 $generated@@67 $generated@@212 ($generated@@70 $generated) $generated@@203) ($generated@@68 ($generated@@37 $generated@@210 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200)))))) (and ($generated@@68 ($generated@@37 $generated@@210 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))) (= (ControlFlow 0 5) (- 0 4))))) (= ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) $generated@@210) (+ $generated@@200 ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) ($generated@@37 $generated@@210 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200))))))))))
(let (($generated@@228  (=> (and (and (and (= $generated@@213 ($generated@@27 $generated@@198 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) ($generated@@91 $generated@@67 $generated@@213 ($generated@@70 $generated) $generated@@203)) (and ($generated@@68 ($generated@@27 $generated@@198 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) ($generated@@68 ($generated@@27 $generated@@198 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))))) (and (and ($generated@@91 $generated@@67 $generated@@210 ($generated@@70 $generated) $generated@@203) ($generated@@68 $generated@@210)) (and ($generated@@68 $generated@@210) (= (ControlFlow 0 3) (- 0 2))))) (= ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) ($generated@@27 $generated@@198 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) ($generated@@65 ($generated@@66 ($generated@@66 $generated@@197)) $generated@@210)))))
(let (($generated@@229 true))
(let (($generated@@230  (=> (and (or (not (= $generated@@200 $generated@@199)) (not true)) (= $generated@@202 ($generated@@37 $generated@@198 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200)))))) (and (=> (= (ControlFlow 0 26) (- 0 27)) ($generated@@71 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200)))) $generated@@198)) (=> ($generated@@71 ($generated@@27 $generated@@202 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@200)))) $generated@@198) (and (and (and (and (and (and (and (=> (= (ControlFlow 0 26) 1) $generated@@229) (=> (= (ControlFlow 0 26) 3) $generated@@228)) (=> (= (ControlFlow 0 26) 5) $generated@@227)) (=> (= (ControlFlow 0 26) 7) $generated@@226)) (=> (= (ControlFlow 0 26) 10) $generated@@225)) (=> (= (ControlFlow 0 26) 15) $generated@@224)) (=> (= (ControlFlow 0 26) 20) $generated@@223)) (=> (= (ControlFlow 0 26) 25) $generated@@220)))))))
(let (($generated@@231  (=> (and (not ($generated@@71 $generated@@198 $generated@@41)) (= $generated@@210 ($generated@@27 $generated@@198 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199)))))) (and (=> (= (ControlFlow 0 28) (- 0 30)) ($generated@@71 $generated@@198 ($generated@@37 $generated@@210 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199)))))) (=> ($generated@@71 $generated@@198 ($generated@@37 $generated@@210 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) (=> ($generated@@91 $generated@@67 $generated@@210 ($generated@@70 $generated) $generated@@203) (and (=> (= (ControlFlow 0 28) (- 0 29)) (not ($generated@@71 $generated@@210 $generated@@41))) (=> (and (and (not ($generated@@71 $generated@@210 $generated@@41)) ($generated@@72 $generated@@210)) (and ($generated@@72 $generated@@210) (= $generated@@200 ($generated@@73 $generated@@210)))) (and (=> (= (ControlFlow 0 28) 24) $generated@@221) (=> (= (ControlFlow 0 28) 26) $generated@@230))))))))))
(let (($generated@@232  (=> (= $generated@@214 ($generated@@126 $generated@@215 $generated@@216 $generated@@2 false)) (=> (and (and ($generated@@86 $generated@@203) ($generated@@205 $generated@@203)) (and (= $generated@@216 $generated@@203) (forall (($generated@@233 T@U) ) (!  (=> (and (and ($generated@@69 $generated@@67 $generated@@233 ($generated@@70 $generated)) (not ($generated@@21 $generated@@233 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) (or (and ($generated@@57 $generated@@233 $generated@@198) (not ($generated@@57 $generated@@198 $generated@@233))) (and ($generated@@71 $generated@@233 $generated@@198) (and (<= 0 $generated@@199) (< $generated@@199 $generated@@199))))) (= ($generated@@65 ($generated@@66 $generated@@197) ($generated@@27 $generated@@233 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))) (+ ($generated@@65 ($generated@@66 $generated@@197) $generated@@233) $generated@@199)))
 :pattern ( ($generated@@27 $generated@@233 ($generated@@20 $generated@@41 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199)))))
 :pattern ( ($generated@@21 $generated@@233 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199))))
)))) (and (=> (= (ControlFlow 0 31) 23) $generated@@222) (=> (= (ControlFlow 0 31) 28) $generated@@231))))))
(let (($generated@@234  (=> (and (and (and ($generated@@86 $generated@@216) ($generated@@205 $generated@@216)) (and ($generated@@69 $generated@@67 $generated@@198 ($generated@@70 $generated)) ($generated@@91 $generated@@67 $generated@@198 ($generated@@70 $generated) $generated@@216))) (and (and ($generated@@69 $generated@@67 $generated@@217 ($generated@@70 $generated)) ($generated@@91 $generated@@67 $generated@@217 ($generated@@70 $generated) $generated@@216)) true)) (=> (and (and (and (and ($generated@@69 $generated@@67 $generated@@218 ($generated@@70 $generated)) ($generated@@91 $generated@@67 $generated@@218 ($generated@@70 $generated) $generated@@216)) true) (= 2 $generated@@64)) (and (not ($generated@@21 $generated@@198 ($generated@@50 $generated@@5 ($generated@@9 $generated@@199)))) (= (ControlFlow 0 32) 31))) $generated@@232))))
$generated@@234))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
