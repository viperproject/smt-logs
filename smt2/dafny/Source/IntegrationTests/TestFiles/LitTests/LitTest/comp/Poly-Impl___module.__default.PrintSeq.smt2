(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@30 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@T T@T) T@T)
(declare-fun $generated@@34 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@35 (T@T) T@T)
(declare-fun $generated@@36 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@60 (Int) Int)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@U T@U) Bool)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@96 (T@U Int) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated@@21) 0))
(assert (= ($generated@@4 $generated@@23) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@26 $generated@@24 $generated@@27) ($generated@@22 $generated@@23 $generated@@26 $generated@@25 $generated@@27))
 :pattern ( ($generated@@22 $generated@@23 $generated@@26 $generated@@24 $generated@@27))
 :pattern ( ($generated@@22 $generated@@23 $generated@@26 $generated@@25 $generated@@27))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@37 T@T) ($generated@@38 T@T) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@38 ($generated@@34 $generated@@37 $generated@@38 $generated@@40 $generated@@41 $generated@@39) $generated@@41) $generated@@39)
 :weight 0
)) (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (or (= $generated@@46 $generated@@47) (= ($generated@@30 $generated@@42 $generated@@43 ($generated@@34 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@47) ($generated@@30 $generated@@42 $generated@@43 $generated@@45 $generated@@47)))
 :weight 0
))) (= ($generated@@4 $generated@@31) 4)) (= ($generated@@4 $generated@@32) 5)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ) (= ($generated@@4 ($generated@@33 $generated@@48 $generated@@49)) 6))) (forall (($generated@@50 T@T) ($generated@@51 T@T) ) (! (= ($generated@@35 ($generated@@33 $generated@@50 $generated@@51)) $generated@@50)
 :pattern ( ($generated@@33 $generated@@50 $generated@@51))
))) (forall (($generated@@52 T@T) ($generated@@53 T@T) ) (! (= ($generated@@36 ($generated@@33 $generated@@52 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@33 $generated@@52 $generated@@53))
))))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@54 $generated@@25 $generated@@55)  (or (= $generated@@54 $generated@@28) ($generated@@9 ($generated@@29 $generated@@5 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@55 $generated@@54) $generated@@0)))))
 :pattern ( ($generated@@22 $generated@@23 $generated@@54 $generated@@25 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> ($generated@@56 $generated@@57 $generated@@58) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@9 ($generated@@29 $generated@@5 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@57 $generated@@59) $generated@@0))) ($generated@@9 ($generated@@29 $generated@@5 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@58 $generated@@59) $generated@@0))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@58 $generated@@59) $generated@@0))
)))
 :pattern ( ($generated@@56 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@61 Int) ) (! (= ($generated@@60 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 ($generated@@29 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@29 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@68 ($generated@@65 $generated@@72 $generated@@69) $generated@@70 $generated@@71) ($generated@@22 $generated@@72 $generated@@69 $generated@@70 $generated@@71))
 :pattern ( ($generated@@68 ($generated@@65 $generated@@72 $generated@@69) $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@56 $generated@@73 $generated@@74) (=> ($generated@@68 $generated@@75 $generated@@76 $generated@@73) ($generated@@68 $generated@@75 $generated@@76 $generated@@74)))
 :pattern ( ($generated@@56 $generated@@73 $generated@@74) ($generated@@68 $generated@@75 $generated@@76 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (!  (=> ($generated@@56 $generated@@77 $generated@@78) (=> ($generated@@22 $generated@@81 $generated@@79 $generated@@80 $generated@@77) ($generated@@22 $generated@@81 $generated@@79 $generated@@80 $generated@@78)))
 :pattern ( ($generated@@56 $generated@@77 $generated@@78) ($generated@@22 $generated@@81 $generated@@79 $generated@@80 $generated@@77))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@82 $generated@@84 $generated@@25) (and (= ($generated@@65 $generated@@23 ($generated@@29 $generated@@23 $generated@@84)) $generated@@84) ($generated@@83 $generated@@23 ($generated@@29 $generated@@23 $generated@@84) $generated@@25)))
 :pattern ( ($generated@@82 $generated@@84 $generated@@25))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@82 $generated@@85 $generated@@24) (and (= ($generated@@65 $generated@@23 ($generated@@29 $generated@@23 $generated@@85)) $generated@@85) ($generated@@83 $generated@@23 ($generated@@29 $generated@@23 $generated@@85) $generated@@24)))
 :pattern ( ($generated@@82 $generated@@85 $generated@@24))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@83 $generated@@23 $generated@@86 $generated@@24)  (and ($generated@@83 $generated@@23 $generated@@86 $generated@@25) (or (not (= $generated@@86 $generated@@28)) (not true))))
 :pattern ( ($generated@@83 $generated@@23 $generated@@86 $generated@@24))
 :pattern ( ($generated@@83 $generated@@23 $generated@@86 $generated@@25))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (or (not (= $generated@@87 $generated@@89)) (not true)) (=> (and ($generated@@56 $generated@@87 $generated@@88) ($generated@@56 $generated@@88 $generated@@89)) ($generated@@56 $generated@@87 $generated@@89)))
 :pattern ( ($generated@@56 $generated@@87 $generated@@88) ($generated@@56 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@65 $generated@@92 $generated@@90) $generated@@91) ($generated@@83 $generated@@92 $generated@@90 $generated@@91))
 :pattern ( ($generated@@82 ($generated@@65 $generated@@92 $generated@@90) $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (<= 0 ($generated@@20 $generated@@93))
 :pattern ( ($generated@@20 $generated@@93))
)))
(assert (= ($generated@@4 $generated@@94) 7))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@22 $generated@@94 $generated@@97 ($generated@@95 $generated@@98) $generated@@99) (forall (($generated@@100 Int) ) (!  (=> (and (<= 0 $generated@@100) (< $generated@@100 ($generated@@20 $generated@@97))) ($generated@@68 ($generated@@96 $generated@@97 $generated@@100) $generated@@98 $generated@@99))
 :pattern ( ($generated@@96 $generated@@97 $generated@@100))
)))
 :pattern ( ($generated@@22 $generated@@94 $generated@@97 ($generated@@95 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@101 ($generated@@95 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@95 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 ($generated@@95 $generated@@104)) $generated)
 :pattern ( ($generated@@95 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@29 $generated@@106 ($generated@@65 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@65 $generated@@106 $generated@@105))
)))
(assert  (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@107 $generated@@110 $generated@@111 $generated@@112 ($generated@@109 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@115 $generated@@116) $generated@@113)
 :weight 0
)) (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@107 $generated@@117 $generated@@118 $generated@@119 ($generated@@109 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@107 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@107 $generated@@126 $generated@@127 $generated@@128 ($generated@@109 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@107 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Bool) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@9 ($generated@@107 $generated@@23 $generated@@31 $generated@@5 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))  (=> (and (or (not (= $generated@@139 $generated@@135)) (not true)) ($generated@@9 ($generated@@29 $generated@@5 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@136 $generated@@139) $generated@@137)))) $generated@@138))
 :pattern ( ($generated@@107 $generated@@23 $generated@@31 $generated@@5 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@82 $generated@@141 ($generated@@95 $generated@@142)) (and (= ($generated@@65 $generated@@94 ($generated@@29 $generated@@94 $generated@@141)) $generated@@141) ($generated@@83 $generated@@94 ($generated@@29 $generated@@94 $generated@@141) ($generated@@95 $generated@@142))))
 :pattern ( ($generated@@82 $generated@@141 ($generated@@95 $generated@@142)))
)))
(assert (= ($generated@@103 $generated@@25) $generated@@1))
(assert (= ($generated@@143 $generated@@25) $generated@@3))
(assert (= ($generated@@103 $generated@@24) $generated@@2))
(assert (= ($generated@@143 $generated@@24) $generated@@3))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@83 $generated@@23 $generated@@146 $generated@@25)  (or (= $generated@@146 $generated@@28) ($generated@@144 ($generated@@145 $generated@@146))))
 :pattern ( ($generated@@83 $generated@@23 $generated@@146 $generated@@25))
)))
(assert (forall (($generated@@147 Int) ) (! (= ($generated@@65 $generated@@6 ($generated@@10 ($generated@@60 $generated@@147))) ($generated@@62 $generated@@32 ($generated@@65 $generated@@6 ($generated@@10 $generated@@147))))
 :pattern ( ($generated@@65 $generated@@6 ($generated@@10 ($generated@@60 $generated@@147))))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@65 $generated@@149 ($generated@@62 $generated@@149 $generated@@148)) ($generated@@62 $generated@@32 ($generated@@65 $generated@@149 $generated@@148)))
 :pattern ( ($generated@@65 $generated@@149 ($generated@@62 $generated@@149 $generated@@148)))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= ($generated@@20 $generated@@150) 0) (= $generated@@150 $generated@@21))
 :pattern ( ($generated@@20 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@83 $generated@@94 $generated@@151 ($generated@@95 $generated@@152)) (forall (($generated@@153 Int) ) (!  (=> (and (<= 0 $generated@@153) (< $generated@@153 ($generated@@20 $generated@@151))) ($generated@@82 ($generated@@96 $generated@@151 $generated@@153) $generated@@152))
 :pattern ( ($generated@@96 $generated@@151 $generated@@153))
)))
 :pattern ( ($generated@@83 $generated@@94 $generated@@151 ($generated@@95 $generated@@152)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@169 true))
(let (($generated@@170  (=> (and (< $generated@@154 ($generated@@60 0)) (= (ControlFlow 0 13) 11)) $generated@@169)))
(let (($generated@@171  (=> (and (<= ($generated@@60 0) $generated@@154) (= (ControlFlow 0 12) 11)) $generated@@169)))
(let (($generated@@172  (=> (not $generated@@155) (and (=> (= (ControlFlow 0 14) 12) $generated@@171) (=> (= (ControlFlow 0 14) 13) $generated@@170)))))
(let (($generated@@173  (=> (and (< $generated@@154 ($generated@@20 $generated@@156)) (= $generated@@157 (- ($generated@@20 $generated@@156) $generated@@154))) (and (=> (= (ControlFlow 0 4) (- 0 9)) (and (<= 0 $generated@@154) (< $generated@@154 ($generated@@20 $generated@@156)))) (=> (and (<= 0 $generated@@154) (< $generated@@154 ($generated@@20 $generated@@156))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (or (not (= ($generated@@29 $generated@@23 ($generated@@96 $generated@@156 $generated@@154)) $generated@@28)) (not true))) (=> (or (not (= ($generated@@29 $generated@@23 ($generated@@96 $generated@@156 $generated@@154)) $generated@@28)) (not true)) (=> (= $generated@@158 ($generated@@29 $generated@@23 ($generated@@96 $generated@@156 $generated@@154))) (=> (and (and (and ($generated@@159 $generated@@160) ($generated@@161 $generated@@160)) (forall (($generated@@174 T@U) ) (!  (=> (and (or (not (= $generated@@174 $generated@@28)) (not true)) ($generated@@9 ($generated@@29 $generated@@5 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@162 $generated@@174) $generated@@0)))) (= ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@160 $generated@@174) ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@162 $generated@@174)))
 :pattern ( ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@160 $generated@@174))
))) (and ($generated@@56 $generated@@162 $generated@@160) (= $generated@@163 (+ $generated@@154 1)))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@157) (= (- ($generated@@20 $generated@@156) $generated@@163) $generated@@157))) (=> (or (<= 0 $generated@@157) (= (- ($generated@@20 $generated@@156) $generated@@163) $generated@@157)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< (- ($generated@@20 $generated@@156) $generated@@163) $generated@@157)) (=> (< (- ($generated@@20 $generated@@156) $generated@@163) $generated@@157) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> $generated@@155 (<= ($generated@@60 0) $generated@@163))) (=> (=> $generated@@155 (<= ($generated@@60 0) $generated@@163)) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@155 (<= $generated@@163 ($generated@@20 $generated@@156)))))))))))))))))))
(let (($generated@@175 true))
(let (($generated@@176  (=> $generated@@155 (and (=> (= (ControlFlow 0 10) 2) $generated@@175) (=> (= (ControlFlow 0 10) 4) $generated@@173)))))
(let (($generated@@177  (and (=> (= (ControlFlow 0 15) 14) $generated@@172) (=> (= (ControlFlow 0 15) 10) $generated@@176))))
(let (($generated@@178 true))
(let (($generated@@179  (=> (and ($generated@@159 $generated@@162) ($generated@@161 $generated@@162)) (=> (and (and (and (not false) (<= 0 $generated@@154)) (and (=> $generated@@155 (<= ($generated@@60 0) $generated@@154)) (=> $generated@@155 (<= $generated@@154 ($generated@@20 $generated@@156))))) (and (and (forall (($generated@@180 T@U) ) (!  (=> (and (or (not (= $generated@@180 $generated@@28)) (not true)) ($generated@@9 ($generated@@29 $generated@@5 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@164 $generated@@180) $generated@@0)))) (= ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@162 $generated@@180) ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@164 $generated@@180)))
 :pattern ( ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@162 $generated@@180))
)) ($generated@@56 $generated@@164 $generated@@162)) (and (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (or (not (= $generated@@181 $generated@@28)) (not true)) ($generated@@9 ($generated@@29 $generated@@5 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@164 $generated@@181) $generated@@0)))) (or (= ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@162 $generated@@181) $generated@@182) ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@164 $generated@@181) $generated@@182)) ($generated@@9 ($generated@@107 $generated@@23 $generated@@31 $generated@@5 $generated@@165 $generated@@181 $generated@@182))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@23 ($generated@@33 $generated@@31 $generated@@32) $generated@@162 $generated@@181) $generated@@182))
)) (<= (- ($generated@@20 $generated@@156) $generated@@154) $generated@@166)))) (and (=> (= (ControlFlow 0 16) 1) $generated@@178) (=> (= (ControlFlow 0 16) 15) $generated@@177))))))
(let (($generated@@183  (=> (= $generated@@165 ($generated@@108 $generated@@28 $generated@@164 $generated@@0 false)) (=> (and (= $generated@@167 ($generated@@60 0)) (= $generated@@166 (- ($generated@@20 $generated@@156) $generated@@167))) (and (=> (= (ControlFlow 0 17) (- 0 19)) (=> $generated@@155 (<= ($generated@@60 0) $generated@@167))) (=> (=> $generated@@155 (<= ($generated@@60 0) $generated@@167)) (and (=> (= (ControlFlow 0 17) (- 0 18)) (=> $generated@@155 (<= $generated@@167 ($generated@@20 $generated@@156)))) (=> (=> $generated@@155 (<= $generated@@167 ($generated@@20 $generated@@156))) (=> (= (ControlFlow 0 17) 16) $generated@@179)))))))))
(let (($generated@@184  (=> (and ($generated@@159 $generated@@164) ($generated@@161 $generated@@164)) (=> (and (and ($generated@@83 $generated@@94 $generated@@156 ($generated@@95 $generated@@24)) ($generated@@22 $generated@@94 $generated@@156 ($generated@@95 $generated@@24) $generated@@164)) (and (= 3 $generated@@168) (= (ControlFlow 0 20) 17))) $generated@@183))))
$generated@@184)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
