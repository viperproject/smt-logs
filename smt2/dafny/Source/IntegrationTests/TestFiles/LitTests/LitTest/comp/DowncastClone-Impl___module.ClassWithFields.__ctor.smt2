(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@49 (T@U T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@104 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@126 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@164 (T@U) Int)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@31 $generated) 0))
(assert (= ($generated@@32 $generated) $generated@@0))
(assert (forall (($generated@@35 T@U) ) (!  (=> ($generated@@33 $generated@@35) ($generated@@34 $generated@@35))
 :pattern ( ($generated@@33 $generated@@35))
)))
(assert ($generated@@36 $generated@@37))
(assert (= ($generated@@15 $generated@@39) 3))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> ($generated@@38 $generated@@39 $generated@@42 ($generated@@40 $generated@@41)) ($generated@@34 $generated@@42))
 :pattern ( ($generated@@34 $generated@@42) ($generated@@38 $generated@@39 $generated@@42 ($generated@@40 $generated@@41)))
)))
(assert (= ($generated@@15 $generated@@43) 4))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@38 $generated@@43 $generated@@46 $generated@@37)  (or (= $generated@@46 $generated@@44) (= ($generated@@45 $generated@@46) $generated@@37)))
 :pattern ( ($generated@@38 $generated@@43 $generated@@46 $generated@@37))
)))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@38 $generated@@43 $generated@@48 $generated@@47)  (or (= $generated@@48 $generated@@44) (= ($generated@@45 $generated@@48) $generated@@47)))
 :pattern ( ($generated@@38 $generated@@43 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (and ($generated@@49 $generated@@52 $generated@@37 $generated@@53) ($generated@@50 $generated@@53)) ($generated@@49 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@49 $generated@@52 $generated@@37 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@54 $generated@@43 $generated@@56 $generated@@55 $generated@@57) ($generated@@54 $generated@@43 $generated@@56 $generated@@51 $generated@@57))
 :pattern ( ($generated@@54 $generated@@43 $generated@@56 $generated@@55 $generated@@57))
 :pattern ( ($generated@@54 $generated@@43 $generated@@56 $generated@@51 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@54 $generated@@43 $generated@@59 $generated@@58 $generated@@60) ($generated@@54 $generated@@43 $generated@@59 $generated@@37 $generated@@60))
 :pattern ( ($generated@@54 $generated@@43 $generated@@59 $generated@@58 $generated@@60))
 :pattern ( ($generated@@54 $generated@@43 $generated@@59 $generated@@37 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@54 $generated@@43 $generated@@62 $generated@@61 $generated@@63) ($generated@@54 $generated@@43 $generated@@62 $generated@@47 $generated@@63))
 :pattern ( ($generated@@54 $generated@@43 $generated@@62 $generated@@61 $generated@@63))
 :pattern ( ($generated@@54 $generated@@43 $generated@@62 $generated@@47 $generated@@63))
)))
(assert (= ($generated@@31 $generated@@64) 0))
(assert (= ($generated@@65 $generated@@8 $generated@@14) $generated@@64))
(assert  (not ($generated@@66 $generated@@64)))
(assert  (and (and (and (and (and (and (forall (($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@68 $generated@@75 $generated@@76 ($generated@@72 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@77) $generated@@79) $generated@@77)
 :weight 0
)) (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (or (= $generated@@84 $generated@@85) (= ($generated@@68 $generated@@80 $generated@@81 ($generated@@72 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@82) $generated@@85) ($generated@@68 $generated@@80 $generated@@81 $generated@@83 $generated@@85)))
 :weight 0
))) (= ($generated@@15 $generated@@69) 5)) (= ($generated@@15 $generated@@70) 6)) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (= ($generated@@15 ($generated@@71 $generated@@86 $generated@@87)) 7))) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@73 ($generated@@71 $generated@@88 $generated@@89)) $generated@@88)
 :pattern ( ($generated@@71 $generated@@88 $generated@@89))
))) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@90 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@71 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@54 $generated@@43 $generated@@92 $generated@@51 $generated@@93)  (or (= $generated@@92 $generated@@44) ($generated@@20 ($generated@@67 $generated@@16 ($generated@@68 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@93 $generated@@92) $generated)))))
 :pattern ( ($generated@@54 $generated@@43 $generated@@92 $generated@@51 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@54 $generated@@43 $generated@@94 $generated@@37 $generated@@95)  (or (= $generated@@94 $generated@@44) ($generated@@20 ($generated@@67 $generated@@16 ($generated@@68 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@95 $generated@@94) $generated)))))
 :pattern ( ($generated@@54 $generated@@43 $generated@@94 $generated@@37 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@54 $generated@@43 $generated@@96 $generated@@47 $generated@@97)  (or (= $generated@@96 $generated@@44) ($generated@@20 ($generated@@67 $generated@@16 ($generated@@68 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@97 $generated@@96) $generated)))))
 :pattern ( ($generated@@54 $generated@@43 $generated@@96 $generated@@47 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@98 $generated@@99 $generated@@100) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@20 ($generated@@67 $generated@@16 ($generated@@68 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@99 $generated@@101) $generated))) ($generated@@20 ($generated@@67 $generated@@16 ($generated@@68 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@100 $generated@@101) $generated))))
 :pattern ( ($generated@@68 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@100 $generated@@101) $generated))
)))
 :pattern ( ($generated@@98 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@34 $generated@@103) (= ($generated@@102 $generated@@103) $generated@@5))
 :pattern ( ($generated@@34 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@104 $generated@@106 ($generated@@67 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@67 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@34 $generated@@108) (exists (($generated@@109 T@U) ) (= $generated@@108 ($generated@@107 $generated@@109))))
 :pattern ( ($generated@@34 $generated@@108))
)))
(assert ($generated@@66 $generated))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@49 ($generated@@104 $generated@@113 $generated@@110) $generated@@111 $generated@@112) ($generated@@54 $generated@@113 $generated@@110 $generated@@111 $generated@@112))
 :pattern ( ($generated@@49 ($generated@@104 $generated@@113 $generated@@110) $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> ($generated@@98 $generated@@114 $generated@@115) (=> ($generated@@49 $generated@@116 $generated@@117 $generated@@114) ($generated@@49 $generated@@116 $generated@@117 $generated@@115)))
 :pattern ( ($generated@@98 $generated@@114 $generated@@115) ($generated@@49 $generated@@116 $generated@@117 $generated@@114))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@T) ) (!  (=> ($generated@@98 $generated@@118 $generated@@119) (=> ($generated@@54 $generated@@122 $generated@@120 $generated@@121 $generated@@118) ($generated@@54 $generated@@122 $generated@@120 $generated@@121 $generated@@119)))
 :pattern ( ($generated@@98 $generated@@118 $generated@@119) ($generated@@54 $generated@@122 $generated@@120 $generated@@121 $generated@@118))
)))
(assert (forall (($generated@@125 T@U) ) (!  (and (= ($generated@@123 ($generated@@40 $generated@@125)) $generated@@3) (= ($generated@@124 ($generated@@40 $generated@@125)) $generated@@12))
 :pattern ( ($generated@@40 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@126 $generated@@127 $generated@@58) (and (= ($generated@@104 $generated@@43 ($generated@@67 $generated@@43 $generated@@127)) $generated@@127) ($generated@@38 $generated@@43 ($generated@@67 $generated@@43 $generated@@127) $generated@@58)))
 :pattern ( ($generated@@126 $generated@@127 $generated@@58))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@126 $generated@@128 $generated@@55) (and (= ($generated@@104 $generated@@43 ($generated@@67 $generated@@43 $generated@@128)) $generated@@128) ($generated@@38 $generated@@43 ($generated@@67 $generated@@43 $generated@@128) $generated@@55)))
 :pattern ( ($generated@@126 $generated@@128 $generated@@55))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@126 $generated@@129 $generated@@61) (and (= ($generated@@104 $generated@@43 ($generated@@67 $generated@@43 $generated@@129)) $generated@@129) ($generated@@38 $generated@@43 ($generated@@67 $generated@@43 $generated@@129) $generated@@61)))
 :pattern ( ($generated@@126 $generated@@129 $generated@@61))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@126 $generated@@130 $generated@@51) (and (= ($generated@@104 $generated@@43 ($generated@@67 $generated@@43 $generated@@130)) $generated@@130) ($generated@@38 $generated@@43 ($generated@@67 $generated@@43 $generated@@130) $generated@@51)))
 :pattern ( ($generated@@126 $generated@@130 $generated@@51))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@126 $generated@@131 $generated@@37) (and (= ($generated@@104 $generated@@43 ($generated@@67 $generated@@43 $generated@@131)) $generated@@131) ($generated@@38 $generated@@43 ($generated@@67 $generated@@43 $generated@@131) $generated@@37)))
 :pattern ( ($generated@@126 $generated@@131 $generated@@37))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@126 $generated@@132 $generated@@47) (and (= ($generated@@104 $generated@@43 ($generated@@67 $generated@@43 $generated@@132)) $generated@@132) ($generated@@38 $generated@@43 ($generated@@67 $generated@@43 $generated@@132) $generated@@47)))
 :pattern ( ($generated@@126 $generated@@132 $generated@@47))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@38 $generated@@43 $generated@@133 $generated@@55)  (and ($generated@@38 $generated@@43 $generated@@133 $generated@@51) (or (not (= $generated@@133 $generated@@44)) (not true))))
 :pattern ( ($generated@@38 $generated@@43 $generated@@133 $generated@@55))
 :pattern ( ($generated@@38 $generated@@43 $generated@@133 $generated@@51))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@38 $generated@@43 $generated@@134 $generated@@58)  (and ($generated@@38 $generated@@43 $generated@@134 $generated@@37) (or (not (= $generated@@134 $generated@@44)) (not true))))
 :pattern ( ($generated@@38 $generated@@43 $generated@@134 $generated@@58))
 :pattern ( ($generated@@38 $generated@@43 $generated@@134 $generated@@37))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@38 $generated@@43 $generated@@135 $generated@@61)  (and ($generated@@38 $generated@@43 $generated@@135 $generated@@47) (or (not (= $generated@@135 $generated@@44)) (not true))))
 :pattern ( ($generated@@38 $generated@@43 $generated@@135 $generated@@61))
 :pattern ( ($generated@@38 $generated@@43 $generated@@135 $generated@@47))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@50 $generated@@138) (= ($generated@@54 $generated@@39 ($generated@@107 $generated@@137) ($generated@@40 $generated@@136) $generated@@138) ($generated@@49 $generated@@137 $generated@@136 $generated@@138)))
 :pattern ( ($generated@@54 $generated@@39 ($generated@@107 $generated@@137) ($generated@@40 $generated@@136) $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> ($generated@@54 $generated@@43 $generated@@139 $generated@@37 $generated@@140) ($generated@@54 $generated@@43 $generated@@139 $generated@@51 $generated@@140))
 :pattern ( ($generated@@54 $generated@@43 $generated@@139 $generated@@37 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and ($generated@@50 $generated@@141) (and (or (not (= $generated@@142 $generated@@44)) (not true)) (= ($generated@@45 $generated@@142) $generated@@47))) ($generated@@38 $generated@@39 ($generated@@67 $generated@@39 ($generated@@68 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@141 $generated@@142) $generated@@64)) ($generated@@40 $generated@@58)))
 :pattern ( ($generated@@67 $generated@@39 ($generated@@68 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@141 $generated@@142) $generated@@64)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and ($generated@@50 $generated@@143) (and (or (not (= $generated@@144 $generated@@44)) (not true)) (= ($generated@@45 $generated@@144) $generated@@47))) ($generated@@20 ($generated@@67 $generated@@16 ($generated@@68 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@143 $generated@@144) $generated)))) ($generated@@54 $generated@@39 ($generated@@67 $generated@@39 ($generated@@68 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@143 $generated@@144) $generated@@64)) ($generated@@40 $generated@@58) $generated@@143))
 :pattern ( ($generated@@67 $generated@@39 ($generated@@68 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@143 $generated@@144) $generated@@64)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (or (not (= $generated@@145 $generated@@147)) (not true)) (=> (and ($generated@@98 $generated@@145 $generated@@146) ($generated@@98 $generated@@146 $generated@@147)) ($generated@@98 $generated@@145 $generated@@147)))
 :pattern ( ($generated@@98 $generated@@145 $generated@@146) ($generated@@98 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (and (= ($generated@@148 ($generated@@65 $generated@@149 $generated@@150)) $generated@@149) (= ($generated@@32 ($generated@@65 $generated@@149 $generated@@150)) $generated@@150))
 :pattern ( ($generated@@65 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@126 ($generated@@104 $generated@@153 $generated@@151) $generated@@152) ($generated@@38 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@126 ($generated@@104 $generated@@153 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@40 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@40 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@102 ($generated@@107 $generated@@156)) $generated@@5)
 :pattern ( ($generated@@107 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@107 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@107 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@67 $generated@@160 ($generated@@104 $generated@@160 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@104 $generated@@160 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@38 $generated@@39 ($generated@@107 $generated@@162) ($generated@@40 $generated@@161)) ($generated@@126 $generated@@162 $generated@@161))
 :pattern ( ($generated@@38 $generated@@39 ($generated@@107 $generated@@162) ($generated@@40 $generated@@161)))
)))
(assert (forall (($generated@@165 T@U) ) (! (< ($generated@@163 $generated@@165) ($generated@@164 ($generated@@107 $generated@@165)))
 :pattern ( ($generated@@107 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and ($generated@@50 $generated@@168) (and ($generated@@34 $generated@@166) ($generated@@54 $generated@@39 $generated@@166 ($generated@@40 $generated@@167) $generated@@168))) ($generated@@49 ($generated@@157 $generated@@166) $generated@@167 $generated@@168))
 :pattern ( ($generated@@49 ($generated@@157 $generated@@166) $generated@@167 $generated@@168))
)))
(assert  (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@169 $generated@@172 $generated@@173 $generated@@174 ($generated@@171 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@177 $generated@@178) $generated@@175)
 :weight 0
)) (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@169 $generated@@179 $generated@@180 $generated@@181 ($generated@@171 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@169 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@169 $generated@@188 $generated@@189 $generated@@190 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@169 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 Bool) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@20 ($generated@@169 $generated@@43 $generated@@69 $generated@@16 ($generated@@170 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@201 $generated@@202))  (=> (and (or (not (= $generated@@201 $generated@@197)) (not true)) ($generated@@20 ($generated@@67 $generated@@16 ($generated@@68 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@198 $generated@@201) $generated@@199)))) $generated@@200))
 :pattern ( ($generated@@169 $generated@@43 $generated@@69 $generated@@16 ($generated@@170 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ) (! (= ($generated@@163 ($generated@@104 $generated@@39 $generated@@203)) ($generated@@164 $generated@@203))
 :pattern ( ($generated@@163 ($generated@@104 $generated@@39 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@126 $generated@@205 ($generated@@40 $generated@@204)) (and (= ($generated@@104 $generated@@39 ($generated@@67 $generated@@39 $generated@@205)) $generated@@205) ($generated@@38 $generated@@39 ($generated@@67 $generated@@39 $generated@@205) ($generated@@40 $generated@@204))))
 :pattern ( ($generated@@126 $generated@@205 ($generated@@40 $generated@@204)))
)))
(assert (forall (($generated@@206 T@U) ) (!  (=> ($generated@@38 $generated@@43 $generated@@206 $generated@@37) ($generated@@38 $generated@@43 $generated@@206 $generated@@51))
 :pattern ( ($generated@@38 $generated@@43 $generated@@206 $generated@@37))
)))
(assert (forall (($generated@@207 T@U) ) (!  (=> ($generated@@126 $generated@@207 $generated@@37) ($generated@@126 $generated@@207 $generated@@51))
 :pattern ( ($generated@@126 $generated@@207 $generated@@37))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@50 ($generated@@72 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@208 $generated@@209 ($generated@@72 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@208 $generated@@209) $generated@@210 $generated@@211))) ($generated@@98 $generated@@208 ($generated@@72 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@208 $generated@@209 ($generated@@72 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@208 $generated@@209) $generated@@210 $generated@@211))))
 :pattern ( ($generated@@72 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@208 $generated@@209 ($generated@@72 $generated@@69 $generated@@70 ($generated@@68 $generated@@43 ($generated@@71 $generated@@69 $generated@@70) $generated@@208 $generated@@209) $generated@@210 $generated@@211)))
)))
(assert (= ($generated@@123 $generated@@58) $generated@@1))
(assert (= ($generated@@124 $generated@@58) $generated@@10))
(assert (= ($generated@@123 $generated@@55) $generated@@2))
(assert (= ($generated@@124 $generated@@55) $generated@@11))
(assert (= ($generated@@123 $generated@@61) $generated@@4))
(assert (= ($generated@@124 $generated@@61) $generated@@13))
(assert (= ($generated@@123 $generated@@51) $generated@@6))
(assert (= ($generated@@124 $generated@@51) $generated@@11))
(assert (= ($generated@@123 $generated@@37) $generated@@7))
(assert (= ($generated@@124 $generated@@37) $generated@@10))
(assert (= ($generated@@123 $generated@@47) $generated@@9))
(assert (= ($generated@@124 $generated@@47) $generated@@13))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@38 $generated@@43 $generated@@212 $generated@@51)  (or (= $generated@@212 $generated@@44) ($generated@@36 ($generated@@45 $generated@@212))))
 :pattern ( ($generated@@38 $generated@@43 $generated@@212 $generated@@51))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@218  (=> (and (= $generated@@213 ($generated@@170 $generated@@44 $generated@@214 $generated false)) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@219  (=> (and ($generated@@50 $generated@@214) ($generated@@215 $generated@@214)) (=> (and (and (and ($generated@@38 $generated@@39 $generated@@216 ($generated@@40 $generated@@58)) ($generated@@54 $generated@@39 $generated@@216 ($generated@@40 $generated@@58) $generated@@214)) ($generated@@33 $generated@@216)) (and (= 1 $generated@@217) (= (ControlFlow 0 3) 2))) $generated@@218))))
$generated@@219)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
