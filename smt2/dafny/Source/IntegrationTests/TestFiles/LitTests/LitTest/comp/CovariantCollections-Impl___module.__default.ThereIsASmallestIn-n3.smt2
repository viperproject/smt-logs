(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@32 (Int Int) Int)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) Int)
(declare-fun $generated@@47 (T@U T@U T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T T@T) T@T)
(declare-fun $generated@@67 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@91 (Int) Int)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@99 () Int)
(declare-fun $generated@@100 (T@U) Int)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@115 (T@U T@U) Bool)
(declare-fun $generated@@124 (T@U T@U) Bool)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (and (= (+ (+ ($generated@@26 ($generated@@27 $generated@@30 $generated@@31)) ($generated@@26 ($generated@@27 $generated@@31 $generated@@30))) (* 2 ($generated@@26 ($generated@@28 $generated@@30 $generated@@31)))) ($generated@@26 ($generated@@29 $generated@@30 $generated@@31))) (= ($generated@@26 ($generated@@27 $generated@@30 $generated@@31)) (- ($generated@@26 $generated@@30) ($generated@@26 ($generated@@28 $generated@@30 $generated@@31)))))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@30 $generated@@31)))
)))
(assert (forall (($generated@@33 Int) ($generated@@34 Int) ) (!  (or (= ($generated@@32 $generated@@33 $generated@@34) $generated@@33) (= ($generated@@32 $generated@@33 $generated@@34) $generated@@34))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34))
)))
(assert (= ($generated@@9 $generated@@36) 3))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@40)) ($generated@@38 $generated@@39))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@40)))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (<= ($generated@@41 $generated@@42 $generated@@44) ($generated@@41 $generated@@43 $generated@@44)) (= ($generated@@41 ($generated@@27 $generated@@42 $generated@@43) $generated@@44) 0))
 :pattern ( ($generated@@27 $generated@@42 $generated@@43) ($generated@@41 $generated@@43 $generated@@44) ($generated@@41 $generated@@42 $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@28 ($generated@@28 $generated@@45 $generated@@46) $generated@@46) ($generated@@28 $generated@@45 $generated@@46))
 :pattern ( ($generated@@28 ($generated@@28 $generated@@45 $generated@@46) $generated@@46))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (and ($generated@@47 $generated@@51 $generated@@48 $generated@@52) ($generated@@49 $generated@@52)) ($generated@@47 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@47 $generated@@51 $generated@@48 $generated@@52))
)))
(assert (= ($generated@@9 $generated@@54) 4))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@53 $generated@@54 $generated@@56 $generated@@55 $generated@@57) ($generated@@53 $generated@@54 $generated@@56 $generated@@50 $generated@@57))
 :pattern ( ($generated@@53 $generated@@54 $generated@@56 $generated@@55 $generated@@57))
 :pattern ( ($generated@@53 $generated@@54 $generated@@56 $generated@@50 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@53 $generated@@54 $generated@@59 $generated@@58 $generated@@60) ($generated@@53 $generated@@54 $generated@@59 $generated@@48 $generated@@60))
 :pattern ( ($generated@@53 $generated@@54 $generated@@59 $generated@@58 $generated@@60))
 :pattern ( ($generated@@53 $generated@@54 $generated@@59 $generated@@48 $generated@@60))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@63 $generated@@70 $generated@@71 ($generated@@67 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@74) $generated@@72)
 :weight 0
)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (or (= $generated@@79 $generated@@80) (= ($generated@@63 $generated@@75 $generated@@76 ($generated@@67 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@77) $generated@@80) ($generated@@63 $generated@@75 $generated@@76 $generated@@78 $generated@@80)))
 :weight 0
))) (= ($generated@@9 $generated@@64) 5)) (= ($generated@@9 $generated@@65) 6)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (= ($generated@@9 ($generated@@66 $generated@@81 $generated@@82)) 7))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@68 ($generated@@66 $generated@@83 $generated@@84)) $generated@@83)
 :pattern ( ($generated@@66 $generated@@83 $generated@@84))
))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@69 ($generated@@66 $generated@@85 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@66 $generated@@85 $generated@@86))
))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@53 $generated@@54 $generated@@87 $generated@@50 $generated@@88)  (or (= $generated@@87 $generated@@61) ($generated@@14 ($generated@@62 $generated@@10 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@54 ($generated@@66 $generated@@64 $generated@@65) $generated@@88 $generated@@87) $generated@@2)))))
 :pattern ( ($generated@@53 $generated@@54 $generated@@87 $generated@@50 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@53 $generated@@54 $generated@@89 $generated@@48 $generated@@90)  (or (= $generated@@89 $generated@@61) ($generated@@14 ($generated@@62 $generated@@10 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@54 ($generated@@66 $generated@@64 $generated@@65) $generated@@90 $generated@@89) $generated@@2)))))
 :pattern ( ($generated@@53 $generated@@54 $generated@@89 $generated@@48 $generated@@90))
)))
(assert (forall (($generated@@92 Int) ) (!  (=> (<= 0 $generated@@92) (= ($generated@@91 $generated@@92) $generated@@92))
 :pattern ( ($generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@41 ($generated@@28 $generated@@93 $generated@@94) $generated@@95) ($generated@@32 ($generated@@41 $generated@@93 $generated@@95) ($generated@@41 $generated@@94 $generated@@95)))
 :pattern ( ($generated@@41 ($generated@@28 $generated@@93 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 ($generated@@62 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@62 $generated@@98 $generated@@97))
)))
(assert  (=> (< 0 $generated@@99) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (and (and ($generated@@49 $generated@@101) (and (or (not (= $generated@@102 $generated@@61)) (not true)) ($generated@@35 $generated@@54 $generated@@102 $generated@@48))) ($generated@@14 ($generated@@62 $generated@@10 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@54 ($generated@@66 $generated@@64 $generated@@65) $generated@@101 $generated@@102) $generated@@2)))) ($generated@@53 $generated@@11 ($generated@@15 ($generated@@100 $generated@@102)) $generated $generated@@101))
 :pattern ( ($generated@@100 $generated@@102) ($generated@@62 $generated@@10 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@54 ($generated@@66 $generated@@64 $generated@@65) $generated@@101 $generated@@102) $generated@@2)))
))))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or (not (= $generated@@105 $generated@@106)) (not true)) (= ($generated@@41 $generated@@104 $generated@@106) ($generated@@41 ($generated@@103 $generated@@104 $generated@@105) $generated@@106)))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105) ($generated@@41 $generated@@104 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@26 ($generated@@103 $generated@@107 $generated@@108)) (+ ($generated@@26 $generated@@107) 1))
 :pattern ( ($generated@@26 ($generated@@103 $generated@@107 $generated@@108)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@47 ($generated@@96 $generated@@112 $generated@@109) $generated@@110 $generated@@111) ($generated@@53 $generated@@112 $generated@@109 $generated@@110 $generated@@111))
 :pattern ( ($generated@@47 ($generated@@96 $generated@@112 $generated@@109) $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@26 ($generated@@29 $generated@@113 $generated@@114)) (+ ($generated@@26 $generated@@113) ($generated@@26 $generated@@114)))
 :pattern ( ($generated@@26 ($generated@@29 $generated@@113 $generated@@114)))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@115 $generated@@116 $generated@@50) (and (= ($generated@@96 $generated@@54 ($generated@@62 $generated@@54 $generated@@116)) $generated@@116) ($generated@@35 $generated@@54 ($generated@@62 $generated@@54 $generated@@116) $generated@@50)))
 :pattern ( ($generated@@115 $generated@@116 $generated@@50))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@115 $generated@@117 $generated@@55) (and (= ($generated@@96 $generated@@54 ($generated@@62 $generated@@54 $generated@@117)) $generated@@117) ($generated@@35 $generated@@54 ($generated@@62 $generated@@54 $generated@@117) $generated@@55)))
 :pattern ( ($generated@@115 $generated@@117 $generated@@55))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@115 $generated@@118 $generated@@58) (and (= ($generated@@96 $generated@@54 ($generated@@62 $generated@@54 $generated@@118)) $generated@@118) ($generated@@35 $generated@@54 ($generated@@62 $generated@@54 $generated@@118) $generated@@58)))
 :pattern ( ($generated@@115 $generated@@118 $generated@@58))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@115 $generated@@119 $generated@@48) (and (= ($generated@@96 $generated@@54 ($generated@@62 $generated@@54 $generated@@119)) $generated@@119) ($generated@@35 $generated@@54 ($generated@@62 $generated@@54 $generated@@119) $generated@@48)))
 :pattern ( ($generated@@115 $generated@@119 $generated@@48))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@35 $generated@@54 $generated@@120 $generated@@55)  (and ($generated@@35 $generated@@54 $generated@@120 $generated@@50) (or (not (= $generated@@120 $generated@@61)) (not true))))
 :pattern ( ($generated@@35 $generated@@54 $generated@@120 $generated@@55))
 :pattern ( ($generated@@35 $generated@@54 $generated@@120 $generated@@50))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@35 $generated@@54 $generated@@121 $generated@@58)  (and ($generated@@35 $generated@@54 $generated@@121 $generated@@48) (or (not (= $generated@@121 $generated@@61)) (not true))))
 :pattern ( ($generated@@35 $generated@@54 $generated@@121 $generated@@58))
 :pattern ( ($generated@@35 $generated@@54 $generated@@121 $generated@@48))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@53 $generated@@54 $generated@@122 $generated@@48 $generated@@123) ($generated@@53 $generated@@54 $generated@@122 $generated@@50 $generated@@123))
 :pattern ( ($generated@@53 $generated@@54 $generated@@122 $generated@@48 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@124 $generated@@125 $generated@@126) (= $generated@@125 $generated@@126))
 :pattern ( ($generated@@124 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@127 ($generated@@37 $generated@@128)) (forall (($generated@@129 T@U) ) (!  (=> (< 0 ($generated@@41 $generated@@127 $generated@@129)) ($generated@@115 $generated@@129 $generated@@128))
 :pattern ( ($generated@@41 $generated@@127 $generated@@129))
)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@127 ($generated@@37 $generated@@128)))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@115 $generated@@130 $generated) (and (= ($generated@@96 $generated@@11 ($generated@@62 $generated@@11 $generated@@130)) $generated@@130) ($generated@@35 $generated@@11 ($generated@@62 $generated@@11 $generated@@130) $generated)))
 :pattern ( ($generated@@115 $generated@@130 $generated))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@115 ($generated@@96 $generated@@133 $generated@@131) $generated@@132) ($generated@@35 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@115 ($generated@@96 $generated@@133 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@38 $generated@@134) (forall (($generated@@135 T@U) ) (!  (and (<= 0 ($generated@@41 $generated@@134 $generated@@135)) (<= ($generated@@41 $generated@@134 $generated@@135) ($generated@@26 $generated@@134)))
 :pattern ( ($generated@@41 $generated@@134 $generated@@135))
)))
 :pattern ( ($generated@@38 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (<= 0 ($generated@@26 $generated@@136))
 :pattern ( ($generated@@26 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@41 $generated@@137 $generated@@138) 0)
 :pattern ( ($generated@@41 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@41 ($generated@@103 $generated@@139 $generated@@140) $generated@@140) (+ ($generated@@41 $generated@@139 $generated@@140) 1))
 :pattern ( ($generated@@103 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! ($generated@@35 $generated@@54 $generated@@141 $generated@@50)
 :pattern ( ($generated@@35 $generated@@54 $generated@@141 $generated@@50))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@37 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@37 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@25 ($generated@@37 $generated@@144)) $generated@@1)
 :pattern ( ($generated@@37 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@62 $generated@@146 ($generated@@96 $generated@@146 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@96 $generated@@146 $generated@@145))
)))
(assert  (=> (< 0 $generated@@99) (forall (($generated@@147 T@U) ) (!  (=> (and (or (not (= $generated@@147 $generated@@61)) (not true)) ($generated@@35 $generated@@54 $generated@@147 $generated@@48)) ($generated@@35 $generated@@11 ($generated@@15 ($generated@@100 $generated@@147)) $generated))
 :pattern ( ($generated@@100 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@28 $generated@@148 ($generated@@28 $generated@@148 $generated@@149)) ($generated@@28 $generated@@148 $generated@@149))
 :pattern ( ($generated@@28 $generated@@148 ($generated@@28 $generated@@148 $generated@@149)))
)))
(assert (forall (($generated@@150 T@U) ) (!  (and (= (= ($generated@@26 $generated@@150) 0) (= $generated@@150 $generated@@137)) (=> (or (not (= ($generated@@26 $generated@@150) 0)) (not true)) (exists (($generated@@151 T@U) ) (! (< 0 ($generated@@41 $generated@@150 $generated@@151))
 :pattern ( ($generated@@41 $generated@@150 $generated@@151))
))))
 :pattern ( ($generated@@26 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@41 ($generated@@29 $generated@@152 $generated@@153) $generated@@154) (+ ($generated@@41 $generated@@152 $generated@@154) ($generated@@41 $generated@@153 $generated@@154)))
 :pattern ( ($generated@@41 ($generated@@29 $generated@@152 $generated@@153) $generated@@154))
)))
(assert  (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@155 $generated@@158 $generated@@159 $generated@@160 ($generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@155 $generated@@165 $generated@@166 $generated@@167 ($generated@@157 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@155 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@155 $generated@@174 $generated@@175 $generated@@176 ($generated@@157 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@155 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Bool) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@14 ($generated@@155 $generated@@54 $generated@@64 $generated@@10 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))  (=> (and (or (not (= $generated@@187 $generated@@183)) (not true)) ($generated@@14 ($generated@@62 $generated@@10 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@54 ($generated@@66 $generated@@64 $generated@@65) $generated@@184 $generated@@187) $generated@@185)))) $generated@@186))
 :pattern ( ($generated@@155 $generated@@54 $generated@@64 $generated@@10 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 Int) ($generated@@190 Int) ) (! (= (<= $generated@@189 $generated@@190) (= ($generated@@32 $generated@@189 $generated@@190) $generated@@189))
 :pattern ( ($generated@@32 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 Int) ($generated@@192 Int) ) (! (= (<= $generated@@192 $generated@@191) (= ($generated@@32 $generated@@191 $generated@@192) $generated@@192))
 :pattern ( ($generated@@32 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@115 $generated@@193 ($generated@@37 $generated@@194)) (and (= ($generated@@96 $generated@@36 ($generated@@62 $generated@@36 $generated@@193)) $generated@@193) ($generated@@35 $generated@@36 ($generated@@62 $generated@@36 $generated@@193) ($generated@@37 $generated@@194))))
 :pattern ( ($generated@@115 $generated@@193 ($generated@@37 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> ($generated@@35 $generated@@54 $generated@@195 $generated@@48) ($generated@@35 $generated@@54 $generated@@195 $generated@@50))
 :pattern ( ($generated@@35 $generated@@54 $generated@@195 $generated@@48))
)))
(assert (forall (($generated@@196 T@U) ) (!  (=> ($generated@@115 $generated@@196 $generated@@48) ($generated@@115 $generated@@196 $generated@@50))
 :pattern ( ($generated@@115 $generated@@196 $generated@@48))
)))
(assert (= ($generated@@25 $generated@@50) $generated@@3))
(assert (= ($generated@@197 $generated@@50) $generated@@7))
(assert (= ($generated@@25 $generated@@55) $generated@@4))
(assert (= ($generated@@197 $generated@@55) $generated@@7))
(assert (= ($generated@@25 $generated@@58) $generated@@5))
(assert (= ($generated@@197 $generated@@58) $generated@@8))
(assert (= ($generated@@25 $generated@@48) $generated@@6))
(assert (= ($generated@@197 $generated@@48) $generated@@8))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@41 ($generated@@27 $generated@@198 $generated@@199) $generated@@200) ($generated@@91 (- ($generated@@41 $generated@@198 $generated@@200) ($generated@@41 $generated@@199 $generated@@200))))
 :pattern ( ($generated@@41 ($generated@@27 $generated@@198 $generated@@199) $generated@@200))
)))
(assert (forall (($generated@@203 T@U) ) (! (= ($generated@@35 $generated@@54 $generated@@203 $generated@@48)  (or (= $generated@@203 $generated@@61) ($generated@@201 ($generated@@202 $generated@@203))))
 :pattern ( ($generated@@35 $generated@@54 $generated@@203 $generated@@48))
)))
(assert (forall (($generated@@204 Int) ) (!  (=> (< $generated@@204 0) (= ($generated@@91 $generated@@204) 0))
 :pattern ( ($generated@@91 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (< 0 ($generated@@41 $generated@@205 $generated@@207)) (< 0 ($generated@@41 ($generated@@103 $generated@@205 $generated@@206) $generated@@207)))
 :pattern ( ($generated@@103 $generated@@205 $generated@@206) ($generated@@41 $generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= (< 0 ($generated@@41 ($generated@@103 $generated@@208 $generated@@209) $generated@@210))  (or (= $generated@@210 $generated@@209) (< 0 ($generated@@41 $generated@@208 $generated@@210))))
 :pattern ( ($generated@@41 ($generated@@103 $generated@@208 $generated@@209) $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@124 $generated@@211 $generated@@212) (forall (($generated@@213 T@U) ) (! (= ($generated@@41 $generated@@211 $generated@@213) ($generated@@41 $generated@@212 $generated@@213))
 :pattern ( ($generated@@41 $generated@@211 $generated@@213))
 :pattern ( ($generated@@41 $generated@@212 $generated@@213))
)))
 :pattern ( ($generated@@124 $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@214 $generated@@215 $generated@@216) (forall (($generated@@217 T@U) ) (! (<= ($generated@@41 $generated@@215 $generated@@217) ($generated@@41 $generated@@216 $generated@@217))
 :pattern ( ($generated@@41 $generated@@215 $generated@@217))
 :pattern ( ($generated@@41 $generated@@216 $generated@@217))
)))
 :pattern ( ($generated@@214 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (= ($generated@@53 $generated@@36 $generated@@218 ($generated@@37 $generated@@219) $generated@@220) (forall (($generated@@221 T@U) ) (!  (=> (< 0 ($generated@@41 $generated@@218 $generated@@221)) ($generated@@47 $generated@@221 $generated@@219 $generated@@220))
 :pattern ( ($generated@@41 $generated@@218 $generated@@221))
)))
 :pattern ( ($generated@@53 $generated@@36 $generated@@218 ($generated@@37 $generated@@219) $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! ($generated@@53 $generated@@11 $generated@@223 $generated $generated@@222)
 :pattern ( ($generated@@53 $generated@@11 $generated@@223 $generated $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ) (! ($generated@@35 $generated@@11 $generated@@224 $generated)
 :pattern ( ($generated@@35 $generated@@11 $generated@@224 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () Bool)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@242  (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@226)) 0)) (=> (> ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@226)) 0) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@243 T@U) ) (!  (=> ($generated@@35 $generated@@54 $generated@@243 $generated@@58) (=> (> ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@243)) 0) (<= ($generated@@100 $generated@@226) ($generated@@100 $generated@@243))))
 :pattern ( ($generated@@100 $generated@@243))
 :pattern ( ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@243)))
))))))))
(let (($generated@@244  (=> (not (exists (($generated@@245 T@U) ) (!  (and ($generated@@35 $generated@@54 $generated@@245 $generated@@58) (and (> ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@245)) 0) (< ($generated@@100 $generated@@245) ($generated@@100 $generated@@227))))
 :pattern ( ($generated@@100 $generated@@245))
 :pattern ( ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@245)))
))) (=> (and (= $generated@@226 $generated@@227) (= (ControlFlow 0 10) 2)) $generated@@242))))
(let (($generated@@246  (=> (and (> ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@228)) 0) (< ($generated@@100 $generated@@228) ($generated@@100 $generated@@227))) (and (=> (= (ControlFlow 0 5) (- 0 9)) true) (=> (= $generated@@229 ($generated@@27 $generated@@225 ($generated@@103 $generated@@137 ($generated@@96 $generated@@54 $generated@@227)))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (> ($generated@@41 $generated@@229 ($generated@@96 $generated@@54 $generated@@228)) 0)) (=> (> ($generated@@41 $generated@@229 ($generated@@96 $generated@@54 $generated@@228)) 0) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and ($generated@@214 $generated@@229 $generated@@225) (not ($generated@@124 $generated@@229 $generated@@225)))) (=> (and ($generated@@214 $generated@@229 $generated@@225) (not ($generated@@124 $generated@@229 $generated@@225))) (=> (and ($generated@@35 $generated@@54 $generated@@230 $generated@@58) ($generated@@53 $generated@@54 $generated@@230 $generated@@58 $generated@@231)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not ($generated@@124 $generated@@229 $generated@@137))) (=> (not ($generated@@124 $generated@@229 $generated@@137)) (=> (and ($generated@@49 $generated@@232) ($generated@@233 $generated@@232)) (=> (and (and (and ($generated@@35 $generated@@54 $generated@@234 $generated@@58) ($generated@@53 $generated@@54 $generated@@234 $generated@@58 $generated@@232)) (> ($generated@@41 $generated@@229 ($generated@@96 $generated@@54 $generated@@234)) 0)) (and (and (forall (($generated@@247 T@U) ) (!  (=> ($generated@@35 $generated@@54 $generated@@247 $generated@@58) (=> (> ($generated@@41 $generated@@229 ($generated@@96 $generated@@54 $generated@@247)) 0) (<= ($generated@@100 $generated@@234) ($generated@@100 $generated@@247))))
 :pattern ( ($generated@@100 $generated@@247))
 :pattern ( ($generated@@41 $generated@@229 ($generated@@96 $generated@@54 $generated@@247)))
)) (= $generated@@231 $generated@@232)) (and (= $generated@@226 $generated@@234) (= (ControlFlow 0 5) 2)))) $generated@@242))))))))))))))
(let (($generated@@248  (=> (and ($generated@@35 $generated@@54 $generated@@228 $generated@@58) ($generated@@53 $generated@@54 $generated@@228 $generated@@58 $generated@@231)) (and (=> (= (ControlFlow 0 11) 5) $generated@@246) (=> (= (ControlFlow 0 11) 10) $generated@@244)))))
(let (($generated@@249  (=> (and (>= 0 ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@235))) (= (ControlFlow 0 17) 11)) $generated@@248)))
(let (($generated@@250  (=> (> ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@235)) 0) (and (=> (= (ControlFlow 0 13) (- 0 16)) (or (not (= $generated@@235 $generated@@61)) (not true))) (=> (or (not (= $generated@@235 $generated@@61)) (not true)) (and (=> (= (ControlFlow 0 13) (- 0 15)) true) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (not (= $generated@@227 $generated@@61)) (not true))) (=> (or (not (= $generated@@227 $generated@@61)) (not true)) (=> (= (ControlFlow 0 13) 11) $generated@@248)))))))))
(let (($generated@@251  (=> (and ($generated@@35 $generated@@54 $generated@@235 $generated@@58) ($generated@@53 $generated@@54 $generated@@235 $generated@@58 $generated@@231)) (and (=> (= (ControlFlow 0 18) 13) $generated@@250) (=> (= (ControlFlow 0 18) 17) $generated@@249)))))
(let (($generated@@252  (=> (and (not (and ($generated@@35 $generated@@54 $generated@@235 $generated@@58) ($generated@@53 $generated@@54 $generated@@235 $generated@@58 $generated@@231))) (= (ControlFlow 0 12) 11)) $generated@@248)))
(let (($generated@@253  (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (and ($generated@@35 $generated@@54 $generated@@61 $generated@@58) (> ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@61)) 0)) (exists (($generated@@254 T@U) )  (and ($generated@@35 $generated@@54 $generated@@254 $generated@@58) (> ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@254)) 0))))) (=> (or (and ($generated@@35 $generated@@54 $generated@@61 $generated@@58) (> ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@61)) 0)) (exists (($generated@@255 T@U) )  (and ($generated@@35 $generated@@54 $generated@@255 $generated@@58) (> ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@255)) 0)))) (=> (and (=> true (and ($generated@@35 $generated@@54 $generated@@227 $generated@@58) ($generated@@53 $generated@@54 $generated@@227 $generated@@58 $generated@@231))) (> ($generated@@41 $generated@@225 ($generated@@96 $generated@@54 $generated@@227)) 0)) (and (=> (= (ControlFlow 0 19) 18) $generated@@251) (=> (= (ControlFlow 0 19) 12) $generated@@252)))))))
(let (($generated@@256  (=> (and (not (and ($generated@@35 $generated@@54 $generated@@236 $generated@@58) ($generated@@53 $generated@@54 $generated@@236 $generated@@58 $generated@@231))) (= (ControlFlow 0 22) 19)) $generated@@253)))
(let (($generated@@257  (=> (and (and ($generated@@35 $generated@@54 $generated@@236 $generated@@58) ($generated@@53 $generated@@54 $generated@@236 $generated@@58 $generated@@231)) (= (ControlFlow 0 21) 19)) $generated@@253)))
(let (($generated@@258  (=> (= $generated@@237 ($generated@@156 $generated@@61 $generated@@231 $generated@@2 false)) (and (=> (= (ControlFlow 0 23) 21) $generated@@257) (=> (= (ControlFlow 0 23) 22) $generated@@256)))))
(let (($generated@@259  (=> (and ($generated@@49 $generated@@231) ($generated@@233 $generated@@231)) (=> (and (and (and ($generated@@35 $generated@@36 $generated@@225 ($generated@@37 $generated@@58)) ($generated@@53 $generated@@36 $generated@@225 ($generated@@37 $generated@@58) $generated@@231)) (=> $generated@@238 (and ($generated@@35 $generated@@54 $generated@@239 $generated@@58) ($generated@@53 $generated@@54 $generated@@239 $generated@@58 $generated@@231)))) (and (and ($generated@@35 $generated@@54 $generated@@240 $generated@@58) ($generated@@53 $generated@@54 $generated@@240 $generated@@58 $generated@@231)) true)) (=> (and (and (and (and ($generated@@35 $generated@@36 $generated@@241 ($generated@@37 $generated@@58)) ($generated@@53 $generated@@36 $generated@@241 ($generated@@37 $generated@@58) $generated@@231)) true) (= 1 $generated@@99)) (and (not ($generated@@124 $generated@@225 $generated@@137)) (= (ControlFlow 0 24) 23))) $generated@@258)))))
$generated@@259))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
