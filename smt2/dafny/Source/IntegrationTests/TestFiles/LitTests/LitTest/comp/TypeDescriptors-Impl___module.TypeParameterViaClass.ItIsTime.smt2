(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@T T@T) T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@73 (T@U) Int)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 (T@U T@U) T@U)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@T T@U T@U) Bool)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@118 (T@U T@U) T@U)
(declare-fun $generated@@123 (T@U Int) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@152 (Int) T@U)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@2) 0))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@28 $generated@@2) $generated@@3))
(assert  (and (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@29 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@29 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@29 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@10 $generated@@30) 3)) (= ($generated@@10 $generated@@31) 4)) (= ($generated@@10 $generated@@32) 5)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@10 ($generated@@33 $generated@@54 $generated@@55)) 6))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@33 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@33 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@33 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@33 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@36 $generated@@61) (and (or (not (= $generated@@62 $generated@@37)) (not true)) (= ($generated@@38 $generated@@62) ($generated@@35 $generated@@60)))) ($generated@@39 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@61 $generated@@62) $generated@@34) $generated@@60))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@61 $generated@@62) $generated@@34) ($generated@@35 $generated@@60))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@66) (and (or (not (= $generated@@67 $generated@@37)) (not true)) (= ($generated@@38 $generated@@67) ($generated@@35 $generated@@65)))) ($generated@@15 ($generated@@63 $generated@@11 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@66 $generated@@67) $generated@@2)))) ($generated@@64 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@66 $generated@@67) $generated@@34) $generated@@65 $generated@@66))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@66 $generated@@67) $generated@@34) ($generated@@35 $generated@@65))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@68 $generated@@32 $generated@@71 ($generated@@69 $generated@@70) $generated@@72) ($generated@@68 $generated@@32 $generated@@71 ($generated@@35 $generated@@70) $generated@@72))
 :pattern ( ($generated@@68 $generated@@32 $generated@@71 ($generated@@69 $generated@@70) $generated@@72))
 :pattern ( ($generated@@68 $generated@@32 $generated@@71 ($generated@@35 $generated@@70) $generated@@72))
)))
(assert (= ($generated@@73 $generated@@74) 0))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@68 $generated@@32 $generated@@76 ($generated@@35 $generated@@75) $generated@@77)  (or (= $generated@@76 $generated@@37) ($generated@@15 ($generated@@63 $generated@@11 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@77 $generated@@76) $generated@@2)))))
 :pattern ( ($generated@@68 $generated@@32 $generated@@76 ($generated@@35 $generated@@75) $generated@@77))
)))
(assert (= ($generated@@26 $generated@@78) 0))
(assert (= ($generated@@79 $generated@@5 $generated@@8) $generated@@78))
(assert  (not ($generated@@80 $generated@@78)))
(assert (= ($generated@@26 $generated@@34) 0))
(assert (= ($generated@@79 $generated@@5 $generated@@9) $generated@@34))
(assert  (not ($generated@@80 $generated@@34)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@81 $generated@@82 $generated@@83) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@15 ($generated@@63 $generated@@11 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@82 $generated@@84) $generated@@2))) ($generated@@15 ($generated@@63 $generated@@11 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@83 $generated@@84) $generated@@2))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@83 $generated@@84) $generated@@2))
)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83))
)))
(assert (= ($generated@@10 $generated@@86) 7))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and ($generated@@85 $generated@@86 $generated@@89 ($generated@@88 $generated@@91)) ($generated@@39 $generated@@90 $generated@@91)) ($generated@@85 $generated@@86 ($generated@@87 $generated@@89 $generated@@90) ($generated@@88 $generated@@91)))
 :pattern ( ($generated@@85 $generated@@86 ($generated@@87 $generated@@89 $generated@@90) ($generated@@88 $generated@@91)))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@63 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@63 $generated@@94 $generated@@93))
)))
(assert ($generated@@80 $generated@@2))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@73 ($generated@@87 $generated@@95 $generated@@96)) (+ 1 ($generated@@73 $generated@@95)))
 :pattern ( ($generated@@87 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@85 $generated@@32 $generated@@98 ($generated@@69 $generated@@97))  (and ($generated@@85 $generated@@32 $generated@@98 ($generated@@35 $generated@@97)) (or (not (= $generated@@98 $generated@@37)) (not true))))
 :pattern ( ($generated@@85 $generated@@32 $generated@@98 ($generated@@69 $generated@@97)))
 :pattern ( ($generated@@85 $generated@@32 $generated@@98 ($generated@@35 $generated@@97)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@64 ($generated@@92 $generated@@102 $generated@@99) $generated@@100 $generated@@101) ($generated@@68 $generated@@102 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@64 ($generated@@92 $generated@@102 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@81 $generated@@103 $generated@@104) (=> ($generated@@64 $generated@@105 $generated@@106 $generated@@103) ($generated@@64 $generated@@105 $generated@@106 $generated@@104)))
 :pattern ( ($generated@@81 $generated@@103 $generated@@104) ($generated@@64 $generated@@105 $generated@@106 $generated@@103))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (!  (=> ($generated@@81 $generated@@107 $generated@@108) (=> ($generated@@68 $generated@@111 $generated@@109 $generated@@110 $generated@@107) ($generated@@68 $generated@@111 $generated@@109 $generated@@110 $generated@@108)))
 :pattern ( ($generated@@81 $generated@@107 $generated@@108) ($generated@@68 $generated@@111 $generated@@109 $generated@@110 $generated@@107))
)))
(assert (forall (($generated@@113 T@U) ) (!  (and (= ($generated@@27 ($generated@@69 $generated@@113)) $generated@@4) (= ($generated@@112 ($generated@@69 $generated@@113)) $generated@@7))
 :pattern ( ($generated@@69 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (!  (and (= ($generated@@27 ($generated@@35 $generated@@114)) $generated@@6) (= ($generated@@112 ($generated@@35 $generated@@114)) $generated@@7))
 :pattern ( ($generated@@35 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and (and ($generated@@36 $generated@@116) (and (or (not (= $generated@@117 $generated@@37)) (not true)) (= ($generated@@38 $generated@@117) ($generated@@35 $generated@@115)))) ($generated@@15 ($generated@@63 $generated@@11 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@116 $generated@@117) $generated@@2)))) ($generated@@68 $generated@@86 ($generated@@63 $generated@@86 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@116 $generated@@117) $generated@@78)) ($generated@@88 $generated) $generated@@116))
 :pattern ( ($generated@@63 $generated@@86 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@116 $generated@@117) $generated@@78)) ($generated@@35 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@73 ($generated@@118 $generated@@119 $generated@@120)) (+ ($generated@@73 $generated@@119) ($generated@@73 $generated@@120)))
 :pattern ( ($generated@@73 ($generated@@118 $generated@@119 $generated@@120)))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@85 $generated@@32 $generated@@122 ($generated@@35 $generated@@121))  (or (= $generated@@122 $generated@@37) (= ($generated@@38 $generated@@122) ($generated@@35 $generated@@121))))
 :pattern ( ($generated@@85 $generated@@32 $generated@@122 ($generated@@35 $generated@@121)))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 Int) ($generated@@126 T@U) ) (!  (and (=> (= $generated@@125 ($generated@@73 $generated@@124)) (= ($generated@@123 ($generated@@87 $generated@@124 $generated@@126) $generated@@125) $generated@@126)) (=> (or (not (= $generated@@125 ($generated@@73 $generated@@124))) (not true)) (= ($generated@@123 ($generated@@87 $generated@@124 $generated@@126) $generated@@125) ($generated@@123 $generated@@124 $generated@@125))))
 :pattern ( ($generated@@123 ($generated@@87 $generated@@124 $generated@@126) $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or (not (= $generated@@127 $generated@@129)) (not true)) (=> (and ($generated@@81 $generated@@127 $generated@@128) ($generated@@81 $generated@@128 $generated@@129)) ($generated@@81 $generated@@127 $generated@@129)))
 :pattern ( ($generated@@81 $generated@@127 $generated@@128) ($generated@@81 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (and (= ($generated@@130 ($generated@@79 $generated@@131 $generated@@132)) $generated@@131) (= ($generated@@28 ($generated@@79 $generated@@131 $generated@@132)) $generated@@132))
 :pattern ( ($generated@@79 $generated@@131 $generated@@132))
)))
(assert (= ($generated@@10 $generated@@133) 8))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@39 $generated@@134 $generated) (and (= ($generated@@92 $generated@@133 ($generated@@63 $generated@@133 $generated@@134)) $generated@@134) ($generated@@85 $generated@@133 ($generated@@63 $generated@@133 $generated@@134) $generated)))
 :pattern ( ($generated@@39 $generated@@134 $generated))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@39 ($generated@@92 $generated@@137 $generated@@135) $generated@@136) ($generated@@85 $generated@@137 $generated@@135 $generated@@136))
 :pattern ( ($generated@@39 ($generated@@92 $generated@@137 $generated@@135) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (<= 0 ($generated@@73 $generated@@138))
 :pattern ( ($generated@@73 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@68 $generated@@86 $generated@@139 ($generated@@88 $generated@@140) $generated@@141) (forall (($generated@@142 Int) ) (!  (=> (and (<= 0 $generated@@142) (< $generated@@142 ($generated@@73 $generated@@139))) ($generated@@64 ($generated@@123 $generated@@139 $generated@@142) $generated@@140 $generated@@141))
 :pattern ( ($generated@@123 $generated@@139 $generated@@142))
)))
 :pattern ( ($generated@@68 $generated@@86 $generated@@139 ($generated@@88 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@88 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@88 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@27 ($generated@@88 $generated@@145)) $generated@@1)
 :pattern ( ($generated@@88 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@69 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@69 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@35 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@35 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@63 $generated@@151 ($generated@@92 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@92 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@154 Int) ) (!  (=> (or (and (<= 0 $generated@@154) (< $generated@@154 55296)) (and (<= 57344 $generated@@154) (< $generated@@154 1114112))) (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154))
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert  (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@155 $generated@@158 $generated@@159 $generated@@160 ($generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@155 $generated@@165 $generated@@166 $generated@@167 ($generated@@157 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@155 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@155 $generated@@174 $generated@@175 $generated@@176 ($generated@@157 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@155 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Bool) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@15 ($generated@@155 $generated@@32 $generated@@30 $generated@@11 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))  (=> (and (or (not (= $generated@@187 $generated@@183)) (not true)) ($generated@@15 ($generated@@63 $generated@@11 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@184 $generated@@187) $generated@@185)))) $generated@@186))
 :pattern ( ($generated@@155 $generated@@32 $generated@@30 $generated@@11 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (and (= ($generated@@189 ($generated@@87 $generated@@191 $generated@@192)) $generated@@191) (= ($generated@@190 ($generated@@87 $generated@@191 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@87 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and ($generated@@36 $generated@@194) (and (or (not (= $generated@@195 $generated@@37)) (not true)) (= ($generated@@38 $generated@@195) ($generated@@35 $generated@@193)))) ($generated@@85 $generated@@86 ($generated@@63 $generated@@86 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@194 $generated@@195) $generated@@78)) ($generated@@88 $generated)))
 :pattern ( ($generated@@63 $generated@@86 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@194 $generated@@195) $generated@@78)) ($generated@@35 $generated@@193))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@39 $generated@@196 ($generated@@88 $generated@@197)) (and (= ($generated@@92 $generated@@86 ($generated@@63 $generated@@86 $generated@@196)) $generated@@196) ($generated@@85 $generated@@86 ($generated@@63 $generated@@86 $generated@@196) ($generated@@88 $generated@@197))))
 :pattern ( ($generated@@39 $generated@@196 ($generated@@88 $generated@@197)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@39 $generated@@199 ($generated@@69 $generated@@198)) (and (= ($generated@@92 $generated@@32 ($generated@@63 $generated@@32 $generated@@199)) $generated@@199) ($generated@@85 $generated@@32 ($generated@@63 $generated@@32 $generated@@199) ($generated@@69 $generated@@198))))
 :pattern ( ($generated@@39 $generated@@199 ($generated@@69 $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> ($generated@@39 $generated@@201 ($generated@@35 $generated@@200)) (and (= ($generated@@92 $generated@@32 ($generated@@63 $generated@@32 $generated@@201)) $generated@@201) ($generated@@85 $generated@@32 ($generated@@63 $generated@@32 $generated@@201) ($generated@@35 $generated@@200))))
 :pattern ( ($generated@@39 $generated@@201 ($generated@@35 $generated@@200)))
)))
(assert (forall (($generated@@202 T@U) ) (!  (and (= ($generated@@152 ($generated@@153 $generated@@202)) $generated@@202) (or (and (<= 0 ($generated@@153 $generated@@202)) (< ($generated@@153 $generated@@202) 55296)) (and (<= 57344 ($generated@@153 $generated@@202)) (< ($generated@@153 $generated@@202) 1114112))))
 :pattern ( ($generated@@153 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Int) ) (!  (and (=> (< $generated@@205 ($generated@@73 $generated@@203)) (= ($generated@@123 ($generated@@118 $generated@@203 $generated@@204) $generated@@205) ($generated@@123 $generated@@203 $generated@@205))) (=> (<= ($generated@@73 $generated@@203) $generated@@205) (= ($generated@@123 ($generated@@118 $generated@@203 $generated@@204) $generated@@205) ($generated@@123 $generated@@204 (- $generated@@205 ($generated@@73 $generated@@203))))))
 :pattern ( ($generated@@123 ($generated@@118 $generated@@203 $generated@@204) $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (!  (=> (= ($generated@@73 $generated@@206) 0) (= $generated@@206 $generated@@74))
 :pattern ( ($generated@@73 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! ($generated@@68 $generated@@133 $generated@@208 $generated $generated@@207)
 :pattern ( ($generated@@68 $generated@@133 $generated@@208 $generated $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@85 $generated@@86 $generated@@209 ($generated@@88 $generated@@210)) (forall (($generated@@211 Int) ) (!  (=> (and (<= 0 $generated@@211) (< $generated@@211 ($generated@@73 $generated@@209))) ($generated@@39 ($generated@@123 $generated@@209 $generated@@211) $generated@@210))
 :pattern ( ($generated@@123 $generated@@209 $generated@@211))
)))
 :pattern ( ($generated@@85 $generated@@86 $generated@@209 ($generated@@88 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ) (! ($generated@@85 $generated@@133 $generated@@212 $generated)
 :pattern ( ($generated@@85 $generated@@133 $generated@@212 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
