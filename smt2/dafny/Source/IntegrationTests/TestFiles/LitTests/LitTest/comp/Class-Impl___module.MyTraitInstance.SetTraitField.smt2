(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@T T@T) T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@63 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@1) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (= ($generated@@29 $generated@@1) $generated@@2))
(assert  (and (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@31 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@31 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@31 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@11 $generated@@32) 3)) (= ($generated@@11 $generated@@33) 4)) (= ($generated@@11 $generated@@34) 5)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@11 ($generated@@35 $generated@@55 $generated@@56)) 6))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@35 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@35 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@35 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@35 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@37 $generated@@61) (and (or (not (= $generated@@62 $generated@@38)) (not true)) ($generated@@39 $generated@@34 $generated@@62 $generated@@40))) ($generated@@39 $generated@@13 ($generated@@30 $generated@@13 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@61 $generated@@62) $generated@@36)) $generated))
 :pattern ( ($generated@@30 $generated@@13 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@61 $generated@@62) $generated@@36)))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@63 $generated@@34 $generated@@66 $generated@@64 $generated@@67) ($generated@@63 $generated@@34 $generated@@66 $generated@@65 $generated@@67))
 :pattern ( ($generated@@63 $generated@@34 $generated@@66 $generated@@64 $generated@@67))
 :pattern ( ($generated@@63 $generated@@34 $generated@@66 $generated@@65 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@63 $generated@@34 $generated@@69 $generated@@68 $generated@@70) ($generated@@63 $generated@@34 $generated@@69 $generated@@40 $generated@@70))
 :pattern ( ($generated@@63 $generated@@34 $generated@@69 $generated@@68 $generated@@70))
 :pattern ( ($generated@@63 $generated@@34 $generated@@69 $generated@@40 $generated@@70))
)))
(assert (= ($generated@@27 $generated@@36) 0))
(assert (= ($generated@@71 $generated@@7 $generated@@10) $generated@@36))
(assert  (not ($generated@@72 $generated@@36)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@63 $generated@@34 $generated@@73 $generated@@65 $generated@@74)  (or (= $generated@@73 $generated@@38) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@74 $generated@@73) $generated@@1)))))
 :pattern ( ($generated@@63 $generated@@34 $generated@@73 $generated@@65 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@63 $generated@@34 $generated@@75 $generated@@40 $generated@@76)  (or (= $generated@@75 $generated@@38) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@76 $generated@@75) $generated@@1)))))
 :pattern ( ($generated@@63 $generated@@34 $generated@@75 $generated@@40 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> ($generated@@77 $generated@@78 $generated@@79) (forall (($generated@@80 T@U) ) (!  (=> ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@78 $generated@@80) $generated@@1))) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@79 $generated@@80) $generated@@1))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@79 $generated@@80) $generated@@1))
)))
 :pattern ( ($generated@@77 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@30 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@30 $generated@@83 $generated@@82))
)))
(assert ($generated@@72 $generated@@1))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (!  (=> ($generated@@77 $generated@@84 $generated@@85) (=> ($generated@@63 $generated@@88 $generated@@86 $generated@@87 $generated@@84) ($generated@@63 $generated@@88 $generated@@86 $generated@@87 $generated@@85)))
 :pattern ( ($generated@@77 $generated@@84 $generated@@85) ($generated@@63 $generated@@88 $generated@@86 $generated@@87 $generated@@84))
)))
(assert  (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@89 $generated@@92 $generated@@93 $generated@@94 ($generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@97 $generated@@98) $generated@@95)
 :weight 0
)) (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@104 $generated@@106) (= ($generated@@89 $generated@@99 $generated@@100 $generated@@101 ($generated@@91 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@106 $generated@@107) ($generated@@89 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@106 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@89 $generated@@108 $generated@@109 $generated@@110 ($generated@@91 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@89 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)))))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@16 ($generated@@89 $generated@@34 $generated@@32 $generated@@12 ($generated@@90 $generated@@117 $generated@@118 $generated@@119 $generated@@120) $generated@@121 $generated@@122))  (=> (and (or (not (= $generated@@121 $generated@@117)) (not true)) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@118 $generated@@121) $generated@@119)))) (= $generated@@121 $generated@@120)))
 :pattern ( ($generated@@89 $generated@@34 $generated@@32 $generated@@12 ($generated@@90 $generated@@117 $generated@@118 $generated@@119 $generated@@120) $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@123 $generated@@64)  (and ($generated@@39 $generated@@34 $generated@@123 $generated@@65) (or (not (= $generated@@123 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@34 $generated@@123 $generated@@64))
 :pattern ( ($generated@@39 $generated@@34 $generated@@123 $generated@@65))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@124 $generated@@68)  (and ($generated@@39 $generated@@34 $generated@@124 $generated@@40) (or (not (= $generated@@124 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@34 $generated@@124 $generated@@68))
 :pattern ( ($generated@@39 $generated@@34 $generated@@124 $generated@@40))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@63 $generated@@34 $generated@@125 $generated@@40 $generated@@126) ($generated@@63 $generated@@34 $generated@@125 $generated@@65 $generated@@126))
 :pattern ( ($generated@@63 $generated@@34 $generated@@125 $generated@@40 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or (not (= $generated@@127 $generated@@129)) (not true)) (=> (and ($generated@@77 $generated@@127 $generated@@128) ($generated@@77 $generated@@128 $generated@@129)) ($generated@@77 $generated@@127 $generated@@129)))
 :pattern ( ($generated@@77 $generated@@127 $generated@@128) ($generated@@77 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (and (= ($generated@@130 ($generated@@71 $generated@@131 $generated@@132)) $generated@@131) (= ($generated@@29 ($generated@@71 $generated@@131 $generated@@132)) $generated@@132))
 :pattern ( ($generated@@71 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! ($generated@@39 $generated@@34 $generated@@133 $generated@@65)
 :pattern ( ($generated@@39 $generated@@34 $generated@@133 $generated@@65))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (and ($generated@@37 $generated@@134) (and (or (not (= $generated@@135 $generated@@38)) (not true)) ($generated@@39 $generated@@34 $generated@@135 $generated@@40))) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@134 $generated@@135) $generated@@1)))) ($generated@@63 $generated@@13 ($generated@@30 $generated@@13 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@134 $generated@@135) $generated@@36)) $generated $generated@@134))
 :pattern ( ($generated@@30 $generated@@13 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@134 $generated@@135) $generated@@36)))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@30 $generated@@137 ($generated@@81 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@81 $generated@@137 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@39 $generated@@34 $generated@@138 $generated@@40) ($generated@@39 $generated@@34 $generated@@138 $generated@@65))
 :pattern ( ($generated@@39 $generated@@34 $generated@@138 $generated@@40))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@37 ($generated@@41 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@139 $generated@@140 ($generated@@41 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@139 $generated@@140) $generated@@141 $generated@@142))) ($generated@@77 $generated@@139 ($generated@@41 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@139 $generated@@140 ($generated@@41 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@139 $generated@@140) $generated@@141 $generated@@142))))
 :pattern ( ($generated@@41 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@139 $generated@@140 ($generated@@41 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@139 $generated@@140) $generated@@141 $generated@@142)))
)))
(assert (= ($generated@@28 $generated@@65) $generated@@3))
(assert (= ($generated@@143 $generated@@65) $generated@@8))
(assert (= ($generated@@28 $generated@@64) $generated@@4))
(assert (= ($generated@@143 $generated@@64) $generated@@8))
(assert (= ($generated@@28 $generated@@68) $generated@@5))
(assert (= ($generated@@143 $generated@@68) $generated@@9))
(assert (= ($generated@@28 $generated@@40) $generated@@6))
(assert (= ($generated@@143 $generated@@40) $generated@@9))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@146 $generated@@40)  (or (= $generated@@146 $generated@@38) ($generated@@144 ($generated@@145 $generated@@146))))
 :pattern ( ($generated@@39 $generated@@34 $generated@@146 $generated@@40))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! ($generated@@63 $generated@@13 $generated@@148 $generated $generated@@147)
 :pattern ( ($generated@@63 $generated@@13 $generated@@148 $generated $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! ($generated@@39 $generated@@13 $generated@@149 $generated)
 :pattern ( ($generated@@39 $generated@@13 $generated@@149 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@155  (=> (= $generated@@150 ($generated@@90 $generated@@38 $generated@@151 $generated@@1 $generated@@152)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@152 $generated@@38)) (not true))) (=> (or (not (= $generated@@152 $generated@@38)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@16 ($generated@@89 $generated@@34 $generated@@32 $generated@@12 $generated@@150 $generated@@152 $generated@@36))))))))
(let (($generated@@156  (=> (and ($generated@@37 $generated@@151) ($generated@@153 $generated@@151)) (=> (and (and ($generated@@39 $generated@@34 $generated@@152 $generated@@68) ($generated@@63 $generated@@34 $generated@@152 $generated@@68 $generated@@151)) (and (= 1 $generated@@154) (= (ControlFlow 0 4) 2))) $generated@@155))))
$generated@@156)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
