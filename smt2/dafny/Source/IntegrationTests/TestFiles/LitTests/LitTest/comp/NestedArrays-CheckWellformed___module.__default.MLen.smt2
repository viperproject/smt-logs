(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@71 (Int) Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@87 () Int)
(declare-fun $generated@@88 (T@U T@U) Int)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and (or (not (= $generated@@30 $generated@@26)) (not true)) (= ($generated@@27 $generated@@30) ($generated@@25 $generated@@29))) ($generated@@28 $generated@@9 ($generated@@13 ($generated@@24 $generated@@30)) $generated))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@29))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and (or (not (= $generated@@33 $generated@@26)) (not true)) (= ($generated@@27 $generated@@33) ($generated@@25 $generated@@32))) ($generated@@28 $generated@@9 ($generated@@13 ($generated@@31 $generated@@33)) $generated))
 :pattern ( ($generated@@31 $generated@@33) ($generated@@25 $generated@@32))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! ($generated@@34 $generated@@9 $generated@@36 $generated@@35 $generated@@37)
 :pattern ( ($generated@@34 $generated@@9 $generated@@36 $generated@@35 $generated@@37))
)))
(assert (= ($generated@@7 $generated@@38) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@34 $generated@@38 $generated@@41 ($generated@@39 $generated@@40) $generated@@42) ($generated@@34 $generated@@38 $generated@@41 ($generated@@25 $generated@@40) $generated@@42))
 :pattern ( ($generated@@34 $generated@@38 $generated@@41 ($generated@@39 $generated@@40) $generated@@42))
 :pattern ( ($generated@@34 $generated@@38 $generated@@41 ($generated@@25 $generated@@40) $generated@@42))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@7 $generated@@45) 4)) (= ($generated@@7 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@7 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@34 $generated@@38 $generated@@69 ($generated@@25 $generated@@68) $generated@@70)  (or (= $generated@@69 $generated@@26) ($generated@@12 ($generated@@43 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@38 ($generated@@47 $generated@@45 $generated@@46) $generated@@70 $generated@@69) $generated@@1)))))
 :pattern ( ($generated@@34 $generated@@38 $generated@@69 ($generated@@25 $generated@@68) $generated@@70))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@43 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@43 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@28 $generated@@9 $generated@@79 $generated@@35) (<= ($generated@@71 0) ($generated@@14 $generated@@79)))
 :pattern ( ($generated@@28 $generated@@9 $generated@@79 $generated@@35))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@28 $generated@@38 $generated@@81 ($generated@@39 $generated@@80))  (and ($generated@@28 $generated@@38 $generated@@81 ($generated@@25 $generated@@80)) (or (not (= $generated@@81 $generated@@26)) (not true))))
 :pattern ( ($generated@@28 $generated@@38 $generated@@81 ($generated@@39 $generated@@80)))
 :pattern ( ($generated@@28 $generated@@38 $generated@@81 ($generated@@25 $generated@@80)))
)))
(assert (forall (($generated@@83 T@U) ) (!  (and (= ($generated@@23 ($generated@@25 $generated@@83)) $generated@@3) (= ($generated@@82 ($generated@@25 $generated@@83)) $generated@@6))
 :pattern ( ($generated@@25 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (!  (and (= ($generated@@23 ($generated@@39 $generated@@84)) $generated@@4) (= ($generated@@82 ($generated@@39 $generated@@84)) $generated@@6))
 :pattern ( ($generated@@39 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@28 $generated@@38 $generated@@86 ($generated@@25 $generated@@85))  (or (= $generated@@86 $generated@@26) (= ($generated@@27 $generated@@86) ($generated@@25 $generated@@85))))
 :pattern ( ($generated@@28 $generated@@38 $generated@@86 ($generated@@25 $generated@@85)))
)))
(assert  (=> (<= 0 $generated@@87) (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@89 $generated@@90 $generated@@91) (and (< 0 $generated@@87) ($generated@@28 $generated@@38 $generated@@91 ($generated@@39 $generated@@90)))) (= ($generated@@88 $generated@@90 $generated@@91) (+ ($generated@@24 $generated@@91) ($generated@@31 $generated@@91))))
 :pattern ( ($generated@@88 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@92 T@U) ) (! (<= 0 ($generated@@24 $generated@@92))
 :pattern ( ($generated@@24 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (! (<= 0 ($generated@@31 $generated@@93))
 :pattern ( ($generated@@31 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@94 ($generated@@25 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@25 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@39 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@39 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@43 $generated@@99 ($generated@@76 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@76 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and (and ($generated@@100 $generated@@102) (and (or (not (= $generated@@103 $generated@@26)) (not true)) (= ($generated@@27 $generated@@103) ($generated@@25 $generated@@101)))) ($generated@@12 ($generated@@43 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@38 ($generated@@47 $generated@@45 $generated@@46) $generated@@102 $generated@@103) $generated@@1)))) ($generated@@34 $generated@@9 ($generated@@13 ($generated@@24 $generated@@103)) $generated $generated@@102))
 :pattern ( ($generated@@24 $generated@@103) ($generated@@43 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@38 ($generated@@47 $generated@@45 $generated@@46) $generated@@102 $generated@@103) $generated@@1)) ($generated@@25 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and (and ($generated@@100 $generated@@105) (and (or (not (= $generated@@106 $generated@@26)) (not true)) (= ($generated@@27 $generated@@106) ($generated@@25 $generated@@104)))) ($generated@@12 ($generated@@43 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@38 ($generated@@47 $generated@@45 $generated@@46) $generated@@105 $generated@@106) $generated@@1)))) ($generated@@34 $generated@@9 ($generated@@13 ($generated@@31 $generated@@106)) $generated $generated@@105))
 :pattern ( ($generated@@31 $generated@@106) ($generated@@43 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@38 ($generated@@47 $generated@@45 $generated@@46) $generated@@105 $generated@@106) $generated@@1)) ($generated@@25 $generated@@104))
)))
(assert  (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@107 $generated@@110 $generated@@111 $generated@@112 ($generated@@109 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@115 $generated@@116) $generated@@113)
 :weight 0
)) (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@107 $generated@@117 $generated@@118 $generated@@119 ($generated@@109 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@107 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@107 $generated@@126 $generated@@127 $generated@@128 ($generated@@109 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@107 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Bool) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@12 ($generated@@107 $generated@@38 $generated@@45 $generated@@8 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))  (=> (and (or (not (= $generated@@139 $generated@@135)) (not true)) ($generated@@12 ($generated@@43 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@38 ($generated@@47 $generated@@45 $generated@@46) $generated@@136 $generated@@139) $generated@@137)))) $generated@@138))
 :pattern ( ($generated@@107 $generated@@38 $generated@@45 $generated@@8 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (= ($generated@@23 $generated@@35) $generated@@2))
(assert (= ($generated@@82 $generated@@35) $generated@@5))
(assert (forall (($generated@@141 Int) ) (! (= ($generated@@76 $generated@@9 ($generated@@13 ($generated@@71 $generated@@141))) ($generated@@73 $generated@@46 ($generated@@76 $generated@@9 ($generated@@13 $generated@@141))))
 :pattern ( ($generated@@76 $generated@@9 ($generated@@13 ($generated@@71 $generated@@141))))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@76 $generated@@143 ($generated@@73 $generated@@143 $generated@@142)) ($generated@@73 $generated@@46 ($generated@@76 $generated@@143 $generated@@142)))
 :pattern ( ($generated@@76 $generated@@143 ($generated@@73 $generated@@143 $generated@@142)))
)))
(assert  (=> (<= 0 $generated@@87) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (or ($generated@@89 $generated@@144 $generated@@145) (and (< 0 $generated@@87) ($generated@@28 $generated@@38 $generated@@145 ($generated@@39 $generated@@144)))) (<= ($generated@@71 0) ($generated@@88 $generated@@144 $generated@@145)))
 :pattern ( ($generated@@88 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! ($generated@@34 $generated@@9 $generated@@147 $generated $generated@@146)
 :pattern ( ($generated@@34 $generated@@9 $generated@@147 $generated $generated@@146))
)))
(assert  (=> (<= 0 $generated@@87) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (or ($generated@@89 $generated@@148 ($generated@@73 $generated@@38 $generated@@149)) (and (< 0 $generated@@87) ($generated@@28 $generated@@38 $generated@@149 ($generated@@39 $generated@@148)))) (= ($generated@@88 $generated@@148 ($generated@@73 $generated@@38 $generated@@149)) ($generated@@71 (+ ($generated@@24 ($generated@@73 $generated@@38 $generated@@149)) ($generated@@31 ($generated@@73 $generated@@38 $generated@@149))))))
 :weight 3
 :pattern ( ($generated@@88 $generated@@148 ($generated@@73 $generated@@38 $generated@@149)))
))))
(assert (forall (($generated@@150 T@U) ) (! ($generated@@28 $generated@@9 $generated@@150 $generated)
 :pattern ( ($generated@@28 $generated@@9 $generated@@150 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@156  (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (not (= $generated@@151 $generated@@26)) (not true))) (=> (or (not (= $generated@@151 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= $generated@@151 $generated@@26)) (not true))) (=> (or (not (= $generated@@151 $generated@@26)) (not true)) (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@28 $generated@@9 ($generated@@13 (+ ($generated@@24 $generated@@151) ($generated@@31 $generated@@151))) $generated@@35))))))))
(let (($generated@@157 true))
(let (($generated@@158  (=> (= $generated@@152 ($generated@@108 $generated@@26 $generated@@153 $generated@@1 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@157) (=> (= (ControlFlow 0 6) 3) $generated@@156)))))
(let (($generated@@159  (=> (and (and (and ($generated@@100 $generated@@153) ($generated@@154 $generated@@153)) ($generated@@28 $generated@@38 $generated@@151 ($generated@@39 $generated@@155))) (and (= 0 $generated@@87) (= (ControlFlow 0 7) 6))) $generated@@158)))
$generated@@159)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
