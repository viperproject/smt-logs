(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@72 (Int) Int)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@117 (T@U) Bool)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and (or (not (= $generated@@30 $generated@@26)) (not true)) (= ($generated@@27 $generated@@30) ($generated@@25 $generated@@29))) ($generated@@28 $generated@@9 ($generated@@13 ($generated@@24 $generated@@30)) $generated))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@29))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@31 $generated@@9 $generated@@33 $generated@@32 $generated@@34)
 :pattern ( ($generated@@31 $generated@@9 $generated@@33 $generated@@32 $generated@@34))
)))
(assert (= ($generated@@7 $generated@@35) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@38 ($generated@@36 $generated@@37) $generated@@39) ($generated@@31 $generated@@35 $generated@@38 ($generated@@25 $generated@@37) $generated@@39))
 :pattern ( ($generated@@31 $generated@@35 $generated@@38 ($generated@@36 $generated@@37) $generated@@39))
 :pattern ( ($generated@@31 $generated@@35 $generated@@38 ($generated@@25 $generated@@37) $generated@@39))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@41 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@41 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@7 $generated@@42) 4)) (= ($generated@@7 $generated@@43) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@7 ($generated@@44 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@44 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@66 ($generated@@25 $generated@@65) $generated@@67)  (or (= $generated@@66 $generated@@26) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@35 ($generated@@44 $generated@@42 $generated@@43) $generated@@67 $generated@@66) $generated@@1)))))
 :pattern ( ($generated@@31 $generated@@35 $generated@@66 ($generated@@25 $generated@@65) $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@68 $generated@@69 $generated@@70) (forall (($generated@@71 T@U) ) (!  (=> ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@35 ($generated@@44 $generated@@42 $generated@@43) $generated@@69 $generated@@71) $generated@@1))) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@35 ($generated@@44 $generated@@42 $generated@@43) $generated@@70 $generated@@71) $generated@@1))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@35 ($generated@@44 $generated@@42 $generated@@43) $generated@@70 $generated@@71) $generated@@1))
)))
 :pattern ( ($generated@@68 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 Int) ) (! (= ($generated@@72 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@40 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@40 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@28 $generated@@35 $generated@@81 ($generated@@36 $generated@@80))  (and ($generated@@28 $generated@@35 $generated@@81 ($generated@@25 $generated@@80)) (or (not (= $generated@@81 $generated@@26)) (not true))))
 :pattern ( ($generated@@28 $generated@@35 $generated@@81 ($generated@@36 $generated@@80)))
 :pattern ( ($generated@@28 $generated@@35 $generated@@81 ($generated@@25 $generated@@80)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@82 ($generated@@77 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@31 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@82 ($generated@@77 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@68 $generated@@87 $generated@@88) (=> ($generated@@82 $generated@@89 $generated@@90 $generated@@87) ($generated@@82 $generated@@89 $generated@@90 $generated@@88)))
 :pattern ( ($generated@@68 $generated@@87 $generated@@88) ($generated@@82 $generated@@89 $generated@@90 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (!  (=> ($generated@@68 $generated@@91 $generated@@92) (=> ($generated@@31 $generated@@95 $generated@@93 $generated@@94 $generated@@91) ($generated@@31 $generated@@95 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@68 $generated@@91 $generated@@92) ($generated@@31 $generated@@95 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@97 T@U) ) (!  (and (= ($generated@@23 ($generated@@25 $generated@@97)) $generated@@2) (= ($generated@@96 ($generated@@25 $generated@@97)) $generated@@5))
 :pattern ( ($generated@@25 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ) (!  (and (= ($generated@@23 ($generated@@36 $generated@@98)) $generated@@3) (= ($generated@@96 ($generated@@36 $generated@@98)) $generated@@5))
 :pattern ( ($generated@@36 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@99 $generated@@100 $generated@@32) (and (= ($generated@@77 $generated@@9 ($generated@@40 $generated@@9 $generated@@100)) $generated@@100) ($generated@@28 $generated@@9 ($generated@@40 $generated@@9 $generated@@100) $generated@@32)))
 :pattern ( ($generated@@99 $generated@@100 $generated@@32))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@28 $generated@@35 $generated@@102 ($generated@@25 $generated@@101))  (or (= $generated@@102 $generated@@26) (= ($generated@@27 $generated@@102) ($generated@@25 $generated@@101))))
 :pattern ( ($generated@@28 $generated@@35 $generated@@102 ($generated@@25 $generated@@101)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or (not (= $generated@@103 $generated@@105)) (not true)) (=> (and ($generated@@68 $generated@@103 $generated@@104) ($generated@@68 $generated@@104 $generated@@105)) ($generated@@68 $generated@@103 $generated@@105)))
 :pattern ( ($generated@@68 $generated@@103 $generated@@104) ($generated@@68 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@99 $generated@@106 $generated) (and (= ($generated@@77 $generated@@9 ($generated@@40 $generated@@9 $generated@@106)) $generated@@106) ($generated@@28 $generated@@9 ($generated@@40 $generated@@9 $generated@@106) $generated)))
 :pattern ( ($generated@@99 $generated@@106 $generated))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@99 ($generated@@77 $generated@@109 $generated@@107) $generated@@108) ($generated@@28 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@99 ($generated@@77 $generated@@109 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (<= 0 ($generated@@24 $generated@@110))
 :pattern ( ($generated@@24 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@25 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@25 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 ($generated@@36 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@36 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@40 $generated@@116 ($generated@@77 $generated@@116 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@77 $generated@@116 $generated@@115))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and (and ($generated@@117 $generated@@119) (and (or (not (= $generated@@120 $generated@@26)) (not true)) (= ($generated@@27 $generated@@120) ($generated@@25 $generated@@118)))) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@35 ($generated@@44 $generated@@42 $generated@@43) $generated@@119 $generated@@120) $generated@@1)))) ($generated@@31 $generated@@9 ($generated@@13 ($generated@@24 $generated@@120)) $generated $generated@@119))
 :pattern ( ($generated@@24 $generated@@120) ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@35 ($generated@@44 $generated@@42 $generated@@43) $generated@@119 $generated@@120) $generated@@1)) ($generated@@25 $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@99 $generated@@122 ($generated@@25 $generated@@121)) (and (= ($generated@@77 $generated@@35 ($generated@@40 $generated@@35 $generated@@122)) $generated@@122) ($generated@@28 $generated@@35 ($generated@@40 $generated@@35 $generated@@122) ($generated@@25 $generated@@121))))
 :pattern ( ($generated@@99 $generated@@122 ($generated@@25 $generated@@121)))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@99 $generated@@124 ($generated@@36 $generated@@123)) (and (= ($generated@@77 $generated@@35 ($generated@@40 $generated@@35 $generated@@124)) $generated@@124) ($generated@@28 $generated@@35 ($generated@@40 $generated@@35 $generated@@124) ($generated@@36 $generated@@123))))
 :pattern ( ($generated@@99 $generated@@124 ($generated@@36 $generated@@123)))
)))
(assert (= ($generated@@23 $generated@@32) $generated@@4))
(assert (= ($generated@@96 $generated@@32) $generated@@6))
(assert  (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@125 $generated@@128 $generated@@129 $generated@@130 ($generated@@127 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@133 $generated@@134) $generated@@131)
 :weight 0
)) (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@125 $generated@@135 $generated@@136 $generated@@137 ($generated@@127 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@125 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@125 $generated@@144 $generated@@145 $generated@@146 ($generated@@127 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@125 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@12 ($generated@@125 $generated@@35 $generated@@42 $generated@@8 ($generated@@126 $generated@@153 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))  (=> (and (or (not (= $generated@@158 $generated@@153)) (not true)) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@35 ($generated@@44 $generated@@42 $generated@@43) $generated@@154 $generated@@158) $generated@@155)))) (or (= $generated@@158 $generated@@156) (= $generated@@158 $generated@@157))))
 :pattern ( ($generated@@125 $generated@@35 $generated@@42 $generated@@8 ($generated@@126 $generated@@153 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@28 $generated@@9 $generated@@160 $generated@@32)  (and (<= ($generated@@72 0) ($generated@@14 $generated@@160)) (< ($generated@@14 $generated@@160) 256)))
 :pattern ( ($generated@@28 $generated@@9 $generated@@160 $generated@@32))
)))
(assert (forall (($generated@@161 Int) ) (! (= ($generated@@77 $generated@@9 ($generated@@13 ($generated@@72 $generated@@161))) ($generated@@74 $generated@@43 ($generated@@77 $generated@@9 ($generated@@13 $generated@@161))))
 :pattern ( ($generated@@77 $generated@@9 ($generated@@13 ($generated@@72 $generated@@161))))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@77 $generated@@163 ($generated@@74 $generated@@163 $generated@@162)) ($generated@@74 $generated@@43 ($generated@@77 $generated@@163 $generated@@162)))
 :pattern ( ($generated@@77 $generated@@163 ($generated@@74 $generated@@163 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! ($generated@@31 $generated@@9 $generated@@165 $generated $generated@@164)
 :pattern ( ($generated@@31 $generated@@9 $generated@@165 $generated $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (! ($generated@@28 $generated@@9 $generated@@166 $generated)
 :pattern ( ($generated@@28 $generated@@9 $generated@@166 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@175 true))
(let (($generated@@176  (=> (and (or (not (= ($generated@@24 $generated@@167) ($generated@@24 $generated@@168))) (not true)) (= (ControlFlow 0 4) 1)) $generated@@175)))
(let (($generated@@177  (=> (= ($generated@@24 $generated@@167) ($generated@@24 $generated@@168)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@168 $generated@@26)) (not true))) (=> (or (not (= $generated@@168 $generated@@26)) (not true)) (=> (= (ControlFlow 0 2) 1) $generated@@175))))))
(let (($generated@@178  (=> (= $generated@@169 ($generated@@126 $generated@@26 $generated@@170 $generated@@1 $generated@@167 $generated@@168)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (not (= $generated@@167 $generated@@26)) (not true))) (=> (or (not (= $generated@@167 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= $generated@@168 $generated@@26)) (not true))) (=> (or (not (= $generated@@168 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 5) 2) $generated@@177) (=> (= (ControlFlow 0 5) 4) $generated@@176)))))))))
(let (($generated@@179  (=> (and ($generated@@117 $generated@@170) ($generated@@171 $generated@@170)) (=> (and (and (and ($generated@@28 $generated@@35 $generated@@167 ($generated@@36 $generated@@172)) ($generated@@31 $generated@@35 $generated@@167 ($generated@@36 $generated@@172) $generated@@170)) (and ($generated@@28 $generated@@35 $generated@@168 ($generated@@36 $generated@@32)) ($generated@@31 $generated@@35 $generated@@168 ($generated@@36 $generated@@32) $generated@@170))) (and (and ($generated@@99 $generated@@173 $generated@@172) ($generated@@82 $generated@@173 $generated@@172 $generated@@170)) (and (= 1 $generated@@174) (= (ControlFlow 0 8) 5)))) $generated@@178))))
$generated@@179))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
