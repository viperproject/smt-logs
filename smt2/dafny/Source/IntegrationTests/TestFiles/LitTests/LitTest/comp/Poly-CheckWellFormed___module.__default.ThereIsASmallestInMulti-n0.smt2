(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@103 (T@U T@U) Int)
(declare-fun $generated@@111 (T@U) Int)
(declare-fun $generated@@115 () T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) Int)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@9 $generated@@28) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@30 $generated@@31)) ($generated@@26 $generated@@32))
 :pattern ( ($generated@@26 $generated@@32) ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@30 $generated@@31)))
)))
(assert (= ($generated@@9 $generated@@33) 4))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@27 $generated@@33 $generated@@36 ($generated@@34 $generated@@37)) ($generated@@35 $generated@@36))
 :pattern ( ($generated@@27 $generated@@33 $generated@@36 ($generated@@34 $generated@@37)))
)))
(assert (= ($generated@@9 $generated@@39) 5))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@42 $generated@@40 $generated@@43) ($generated@@38 $generated@@39 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@38 $generated@@39 $generated@@42 $generated@@40 $generated@@43))
 :pattern ( ($generated@@38 $generated@@39 $generated@@42 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@44 $generated@@48 $generated@@49) ($generated@@29 $generated@@46 $generated@@47))  (and ($generated@@45 $generated@@48 $generated@@46) ($generated@@45 $generated@@49 $generated@@47)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@44 $generated@@48 $generated@@49) ($generated@@29 $generated@@46 $generated@@47)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@52 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@52 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@52 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@9 $generated@@53) 6)) (= ($generated@@9 $generated@@54) 7)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@9 ($generated@@55 $generated@@70 $generated@@71)) 8))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@55 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@55 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@55 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@76 $generated@@41 $generated@@77)  (or (= $generated@@76 $generated@@50) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@39 ($generated@@55 $generated@@53 $generated@@54) $generated@@77 $generated@@76) $generated@@2)))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@76 $generated@@41 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@78 $generated@@84) (= ($generated@@38 $generated@@28 ($generated@@44 $generated@@82 $generated@@83) ($generated@@29 $generated@@80 $generated@@81) $generated@@84)  (and ($generated@@79 $generated@@82 $generated@@80 $generated@@84) ($generated@@79 $generated@@83 $generated@@81 $generated@@84))))
 :pattern ( ($generated@@38 $generated@@28 ($generated@@44 $generated@@82 $generated@@83) ($generated@@29 $generated@@80 $generated@@81) $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@26 $generated@@86) (= ($generated@@85 $generated@@86) $generated@@3))
 :pattern ( ($generated@@26 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@51 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@51 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@26 $generated@@90) (exists (($generated@@91 T@U) ($generated@@92 T@U) ) (= $generated@@90 ($generated@@44 $generated@@91 $generated@@92))))
 :pattern ( ($generated@@26 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@79 ($generated@@87 $generated@@96 $generated@@93) $generated@@94 $generated@@95) ($generated@@38 $generated@@96 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@79 ($generated@@87 $generated@@96 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@45 $generated@@97 $generated@@41) (and (= ($generated@@87 $generated@@39 ($generated@@51 $generated@@39 $generated@@97)) $generated@@97) ($generated@@27 $generated@@39 ($generated@@51 $generated@@39 $generated@@97) $generated@@41)))
 :pattern ( ($generated@@45 $generated@@97 $generated@@41))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@45 $generated@@98 $generated@@40) (and (= ($generated@@87 $generated@@39 ($generated@@51 $generated@@39 $generated@@98)) $generated@@98) ($generated@@27 $generated@@39 ($generated@@51 $generated@@39 $generated@@98) $generated@@40)))
 :pattern ( ($generated@@45 $generated@@98 $generated@@40))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@27 $generated@@39 $generated@@99 $generated@@40)  (and ($generated@@27 $generated@@39 $generated@@99 $generated@@41) (or (not (= $generated@@99 $generated@@50)) (not true))))
 :pattern ( ($generated@@27 $generated@@39 $generated@@99 $generated@@40))
 :pattern ( ($generated@@27 $generated@@39 $generated@@99 $generated@@41))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> ($generated@@100 $generated@@101 $generated@@102) (= $generated@@101 $generated@@102))
 :pattern ( ($generated@@100 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@27 $generated@@33 $generated@@104 ($generated@@34 $generated@@105)) (forall (($generated@@106 T@U) ) (!  (=> (< 0 ($generated@@103 $generated@@104 $generated@@106)) ($generated@@45 $generated@@106 $generated@@105))
 :pattern ( ($generated@@103 $generated@@104 $generated@@106))
)))
 :pattern ( ($generated@@27 $generated@@33 $generated@@104 ($generated@@34 $generated@@105)))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@45 $generated@@107 $generated) (and (= ($generated@@87 $generated@@12 ($generated@@51 $generated@@12 $generated@@107)) $generated@@107) ($generated@@27 $generated@@12 ($generated@@51 $generated@@12 $generated@@107) $generated)))
 :pattern ( ($generated@@45 $generated@@107 $generated))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@45 ($generated@@87 $generated@@110 $generated@@108) $generated@@109) ($generated@@27 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@45 ($generated@@87 $generated@@110 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@35 $generated@@112) (forall (($generated@@113 T@U) ) (!  (and (<= 0 ($generated@@103 $generated@@112 $generated@@113)) (<= ($generated@@103 $generated@@112 $generated@@113) ($generated@@111 $generated@@112)))
 :pattern ( ($generated@@103 $generated@@112 $generated@@113))
)))
 :pattern ( ($generated@@35 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (! (<= 0 ($generated@@111 $generated@@114))
 :pattern ( ($generated@@111 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@103 $generated@@115 $generated@@116) 0)
 :pattern ( ($generated@@103 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@85 ($generated@@44 $generated@@117 $generated@@118)) $generated@@3)
 :pattern ( ($generated@@44 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@119 ($generated@@29 $generated@@120 $generated@@121)) $generated@@120)
 :pattern ( ($generated@@29 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@122 ($generated@@29 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@29 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@125 ($generated@@44 $generated@@126 $generated@@127)) $generated@@126)
 :pattern ( ($generated@@44 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@128 ($generated@@44 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@44 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@34 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@34 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@25 ($generated@@34 $generated@@133)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@51 $generated@@135 ($generated@@87 $generated@@135 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@87 $generated@@135 $generated@@134))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (< ($generated@@136 $generated@@138) ($generated@@137 ($generated@@44 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@44 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (< ($generated@@136 $generated@@141) ($generated@@137 ($generated@@44 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@44 $generated@@140 $generated@@141))
)))
(assert  (=> (<= 1 $generated@@142) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (or ($generated@@144 $generated@@145 $generated@@146) (and (< 1 $generated@@142) (and ($generated@@78 $generated@@145) (and (or (not (= $generated@@146 $generated@@50)) (not true)) (and ($generated@@27 $generated@@39 $generated@@146 $generated@@40) ($generated@@38 $generated@@39 $generated@@146 $generated@@40 $generated@@145)))))) ($generated@@27 $generated@@28 ($generated@@143 $generated@@145 $generated@@146) ($generated@@29 $generated $generated)))
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ) (!  (and (= (= ($generated@@111 $generated@@147) 0) (= $generated@@147 $generated@@115)) (=> (or (not (= ($generated@@111 $generated@@147) 0)) (not true)) (exists (($generated@@148 T@U) ) (! (< 0 ($generated@@103 $generated@@147 $generated@@148))
 :pattern ( ($generated@@103 $generated@@147 $generated@@148))
))))
 :pattern ( ($generated@@111 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@45 $generated@@151 ($generated@@29 $generated@@149 $generated@@150)) (and (= ($generated@@87 $generated@@28 ($generated@@51 $generated@@28 $generated@@151)) $generated@@151) ($generated@@27 $generated@@28 ($generated@@51 $generated@@28 $generated@@151) ($generated@@29 $generated@@149 $generated@@150))))
 :pattern ( ($generated@@45 $generated@@151 ($generated@@29 $generated@@149 $generated@@150)))
)))
(assert  (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@152 $generated@@155 $generated@@156 $generated@@157 ($generated@@154 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@160 $generated@@161) $generated@@158)
 :weight 0
)) (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@152 $generated@@162 $generated@@163 $generated@@164 ($generated@@154 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@152 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@152 $generated@@171 $generated@@172 $generated@@173 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@152 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@14 ($generated@@152 $generated@@39 $generated@@53 $generated@@10 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@39 ($generated@@55 $generated@@53 $generated@@54) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@152 $generated@@39 $generated@@53 $generated@@10 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (and (= ($generated@@25 ($generated@@29 $generated@@187 $generated@@188)) $generated@@4) (= ($generated@@186 ($generated@@29 $generated@@187 $generated@@188)) $generated@@7))
 :pattern ( ($generated@@29 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@136 ($generated@@87 $generated@@28 $generated@@189)) ($generated@@137 $generated@@189))
 :pattern ( ($generated@@136 ($generated@@87 $generated@@28 $generated@@189)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@45 $generated@@190 ($generated@@34 $generated@@191)) (and (= ($generated@@87 $generated@@33 ($generated@@51 $generated@@33 $generated@@190)) $generated@@190) ($generated@@27 $generated@@33 ($generated@@51 $generated@@33 $generated@@190) ($generated@@34 $generated@@191))))
 :pattern ( ($generated@@45 $generated@@190 ($generated@@34 $generated@@191)))
)))
(assert (= ($generated@@25 $generated@@41) $generated@@5))
(assert (= ($generated@@186 $generated@@41) $generated@@8))
(assert (= ($generated@@25 $generated@@40) $generated@@6))
(assert (= ($generated@@186 $generated@@40) $generated@@8))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@27 $generated@@39 $generated@@194 $generated@@41)  (or (= $generated@@194 $generated@@50) ($generated@@192 ($generated@@193 $generated@@194))))
 :pattern ( ($generated@@27 $generated@@39 $generated@@194 $generated@@41))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@78 $generated@@197) (and ($generated@@26 $generated@@195) (exists (($generated@@198 T@U) ) (! ($generated@@38 $generated@@28 $generated@@195 ($generated@@29 $generated@@196 $generated@@198) $generated@@197)
 :pattern ( ($generated@@38 $generated@@28 $generated@@195 ($generated@@29 $generated@@196 $generated@@198) $generated@@197))
)))) ($generated@@79 ($generated@@125 $generated@@195) $generated@@196 $generated@@197))
 :pattern ( ($generated@@79 ($generated@@125 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@78 $generated@@201) (and ($generated@@26 $generated@@199) (exists (($generated@@202 T@U) ) (! ($generated@@38 $generated@@28 $generated@@199 ($generated@@29 $generated@@202 $generated@@200) $generated@@201)
 :pattern ( ($generated@@38 $generated@@28 $generated@@199 ($generated@@29 $generated@@202 $generated@@200) $generated@@201))
)))) ($generated@@79 ($generated@@128 $generated@@199) $generated@@200 $generated@@201))
 :pattern ( ($generated@@79 ($generated@@128 $generated@@199) $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@100 $generated@@203 $generated@@204) (forall (($generated@@205 T@U) ) (! (= ($generated@@103 $generated@@203 $generated@@205) ($generated@@103 $generated@@204 $generated@@205))
 :pattern ( ($generated@@103 $generated@@203 $generated@@205))
 :pattern ( ($generated@@103 $generated@@204 $generated@@205))
)))
 :pattern ( ($generated@@100 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@38 $generated@@33 $generated@@206 ($generated@@34 $generated@@207) $generated@@208) (forall (($generated@@209 T@U) ) (!  (=> (< 0 ($generated@@103 $generated@@206 $generated@@209)) ($generated@@79 $generated@@209 $generated@@207 $generated@@208))
 :pattern ( ($generated@@103 $generated@@206 $generated@@209))
)))
 :pattern ( ($generated@@38 $generated@@33 $generated@@206 ($generated@@34 $generated@@207) $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! ($generated@@38 $generated@@12 $generated@@211 $generated $generated@@210)
 :pattern ( ($generated@@38 $generated@@12 $generated@@211 $generated $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! ($generated@@27 $generated@@12 $generated@@212 $generated)
 :pattern ( ($generated@@27 $generated@@12 $generated@@212 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@220 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@221 true))
(let (($generated@@222  (=> (and (=> (> ($generated@@103 $generated@@213 ($generated@@87 $generated@@39 $generated@@214)) 0) (<= ($generated@@18 ($generated@@51 $generated@@12 ($generated@@125 ($generated@@143 $generated@@215 $generated@@216)))) ($generated@@18 ($generated@@51 $generated@@12 ($generated@@125 ($generated@@143 $generated@@215 $generated@@214)))))) (= (ControlFlow 0 5) 1)) $generated@@221)))
(let (($generated@@223  (=> (> ($generated@@103 $generated@@213 ($generated@@87 $generated@@39 $generated@@214)) 0) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@216 $generated@@50)) (not true))) (=> (or (not (= $generated@@216 $generated@@50)) (not true)) (=> (and (and ($generated@@79 ($generated@@87 $generated@@39 $generated@@216) $generated@@41 $generated@@215) ($generated@@144 $generated@@215 $generated@@216)) (and ($generated@@26 ($generated@@143 $generated@@215 $generated@@216)) ($generated@@26 ($generated@@143 $generated@@215 $generated@@216)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@214 $generated@@50)) (not true))) (=> (or (not (= $generated@@214 $generated@@50)) (not true)) (=> (and ($generated@@79 ($generated@@87 $generated@@39 $generated@@214) $generated@@41 $generated@@215) ($generated@@144 $generated@@215 $generated@@214)) (=> (and (and ($generated@@26 ($generated@@143 $generated@@215 $generated@@214)) ($generated@@26 ($generated@@143 $generated@@215 $generated@@214))) (and (<= ($generated@@18 ($generated@@51 $generated@@12 ($generated@@125 ($generated@@143 $generated@@215 $generated@@216)))) ($generated@@18 ($generated@@51 $generated@@12 ($generated@@125 ($generated@@143 $generated@@215 $generated@@214))))) (= (ControlFlow 0 2) 1))) $generated@@221))))))))))
(let (($generated@@224  (=> (and (= $generated@@217 ($generated@@153 $generated@@50 $generated@@218 $generated@@2 false)) (not ($generated@@100 $generated@@213 $generated@@115))) (=> (and (and ($generated@@78 $generated@@215) ($generated@@219 $generated@@215)) (= $generated@@218 $generated@@215)) (=> (and (and (and ($generated@@27 $generated@@39 $generated@@216 $generated@@40) ($generated@@38 $generated@@39 $generated@@216 $generated@@40 $generated@@215)) (> ($generated@@103 $generated@@213 ($generated@@87 $generated@@39 $generated@@216)) 0)) (and ($generated@@27 $generated@@39 $generated@@214 $generated@@40) ($generated@@38 $generated@@39 $generated@@214 $generated@@40 $generated@@215))) (and (=> (= (ControlFlow 0 6) 2) $generated@@223) (=> (= (ControlFlow 0 6) 5) $generated@@222)))))))
(let (($generated@@225  (=> (and (and (and ($generated@@78 $generated@@218) ($generated@@219 $generated@@218)) (and ($generated@@27 $generated@@33 $generated@@213 ($generated@@34 $generated@@40)) ($generated@@38 $generated@@33 $generated@@213 ($generated@@34 $generated@@40) $generated@@218))) (and (and ($generated@@27 $generated@@39 $generated@@220 $generated@@40) ($generated@@38 $generated@@39 $generated@@220 $generated@@40 $generated@@218)) (and (= 2 $generated@@142) (= (ControlFlow 0 7) 6)))) $generated@@224)))
$generated@@225))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
