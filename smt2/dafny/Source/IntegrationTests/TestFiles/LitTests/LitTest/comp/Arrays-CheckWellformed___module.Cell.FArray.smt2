(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () Int)
(declare-fun $generated@@28 (T@U T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@9 $generated@@33) 3))
(assert  (=> (<= 0 $generated@@27) (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@29 $generated@@37 $generated@@38 $generated@@39) (and (< 0 $generated@@27) (and ($generated@@30 $generated@@38) (and (or (not (= $generated@@39 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@39 ($generated@@34 $generated@@37)) ($generated@@35 $generated@@33 $generated@@39 ($generated@@34 $generated@@37) $generated@@38)))))) ($generated@@32 $generated@@33 ($generated@@28 $generated@@37 $generated@@38 $generated@@39) ($generated@@36 $generated@@37)))
 :pattern ( ($generated@@28 $generated@@37 $generated@@38 $generated@@39))
))))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@35 $generated@@33 $generated@@42 ($generated@@36 $generated@@41) $generated@@43) ($generated@@35 $generated@@33 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
 :pattern ( ($generated@@35 $generated@@33 $generated@@42 ($generated@@36 $generated@@41) $generated@@43))
 :pattern ( ($generated@@35 $generated@@33 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@35 $generated@@33 $generated@@46 ($generated@@34 $generated@@45) $generated@@47) ($generated@@35 $generated@@33 $generated@@46 ($generated@@44 $generated@@45) $generated@@47))
 :pattern ( ($generated@@35 $generated@@33 $generated@@46 ($generated@@34 $generated@@45) $generated@@47))
 :pattern ( ($generated@@35 $generated@@33 $generated@@46 ($generated@@44 $generated@@45) $generated@@47))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@49 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@49 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@49 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@9 $generated@@50) 4)) (= ($generated@@9 $generated@@51) 5)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@9 ($generated@@52 $generated@@67 $generated@@68)) 6))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@52 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@52 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@35 $generated@@33 $generated@@74 ($generated@@40 $generated@@73) $generated@@75)  (or (= $generated@@74 $generated@@31) ($generated@@14 ($generated@@48 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@75 $generated@@74) $generated)))))
 :pattern ( ($generated@@35 $generated@@33 $generated@@74 ($generated@@40 $generated@@73) $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@35 $generated@@33 $generated@@77 ($generated@@44 $generated@@76) $generated@@78)  (or (= $generated@@77 $generated@@31) ($generated@@14 ($generated@@48 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@78 $generated@@77) $generated)))))
 :pattern ( ($generated@@35 $generated@@33 $generated@@77 ($generated@@44 $generated@@76) $generated@@78))
)))
(assert (= ($generated@@25 $generated@@79) 0))
(assert (= ($generated@@80 $generated@@5 $generated@@8) $generated@@79))
(assert  (not ($generated@@81 $generated@@79)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@48 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@48 $generated@@84 $generated@@83))
)))
(assert ($generated@@81 $generated))
(assert  (=> (<= 0 $generated@@27) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (or ($generated@@29 $generated@@85 $generated@@86 $generated@@87) (and (< 0 $generated@@27) (and (and ($generated@@30 $generated@@86) (or (not (= $generated@@87 $generated@@31)) (not true))) ($generated@@35 $generated@@33 $generated@@87 ($generated@@34 $generated@@85) $generated@@86)))) ($generated@@35 $generated@@33 ($generated@@28 $generated@@85 $generated@@86 $generated@@87) ($generated@@36 $generated@@85) $generated@@86))
 :pattern ( ($generated@@35 $generated@@33 ($generated@@28 $generated@@85 $generated@@86 $generated@@87) ($generated@@36 $generated@@85) $generated@@86))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@89 ($generated@@36 $generated@@88))  (and ($generated@@32 $generated@@33 $generated@@89 ($generated@@40 $generated@@88)) (or (not (= $generated@@89 $generated@@31)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@89 ($generated@@36 $generated@@88)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@89 ($generated@@40 $generated@@88)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@91 ($generated@@34 $generated@@90))  (and ($generated@@32 $generated@@33 $generated@@91 ($generated@@44 $generated@@90)) (or (not (= $generated@@91 $generated@@31)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@91 ($generated@@34 $generated@@90)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@91 ($generated@@44 $generated@@90)))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@92 ($generated@@40 $generated@@94)) $generated@@1) (= ($generated@@93 ($generated@@40 $generated@@94)) $generated@@6))
 :pattern ( ($generated@@40 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@92 ($generated@@36 $generated@@95)) $generated@@2) (= ($generated@@93 ($generated@@36 $generated@@95)) $generated@@6))
 :pattern ( ($generated@@36 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= ($generated@@92 ($generated@@34 $generated@@96)) $generated@@3) (= ($generated@@93 ($generated@@34 $generated@@96)) $generated@@7))
 :pattern ( ($generated@@34 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (!  (and (= ($generated@@92 ($generated@@44 $generated@@97)) $generated@@4) (= ($generated@@93 ($generated@@44 $generated@@97)) $generated@@7))
 :pattern ( ($generated@@44 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@100) (and (or (not (= $generated@@101 $generated@@31)) (not true)) (= ($generated@@98 $generated@@101) ($generated@@44 $generated@@99)))) ($generated@@14 ($generated@@48 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@100 $generated@@101) $generated)))) ($generated@@35 $generated@@33 ($generated@@48 $generated@@33 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@100 $generated@@101) $generated@@79)) ($generated@@36 $generated@@99) $generated@@100))
 :pattern ( ($generated@@48 $generated@@33 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@100 $generated@@101) $generated@@79)) ($generated@@44 $generated@@99))
)))
(assert  (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@102 $generated@@105 $generated@@106 $generated@@107 ($generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@102 $generated@@112 $generated@@113 $generated@@114 ($generated@@104 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@102 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@102 $generated@@121 $generated@@122 $generated@@123 ($generated@@104 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@102 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@14 ($generated@@102 $generated@@33 $generated@@50 $generated@@10 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@130)) (not true)) ($generated@@14 ($generated@@48 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@131 $generated@@134) $generated@@132)))) (= $generated@@134 $generated@@133)))
 :pattern ( ($generated@@102 $generated@@33 $generated@@50 $generated@@10 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@137 ($generated@@40 $generated@@136))  (or (= $generated@@137 $generated@@31) (= ($generated@@98 $generated@@137) ($generated@@40 $generated@@136))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@137 ($generated@@40 $generated@@136)))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@139 ($generated@@44 $generated@@138))  (or (= $generated@@139 $generated@@31) (= ($generated@@98 $generated@@139) ($generated@@44 $generated@@138))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@139 ($generated@@44 $generated@@138)))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (and (= ($generated@@140 ($generated@@80 $generated@@141 $generated@@142)) $generated@@141) (= ($generated@@26 ($generated@@80 $generated@@141 $generated@@142)) $generated@@142))
 :pattern ( ($generated@@80 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@40 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@40 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@36 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@36 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@147 ($generated@@34 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@34 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@149 ($generated@@44 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@44 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@48 $generated@@152 ($generated@@82 $generated@@152 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@82 $generated@@152 $generated@@151))
)))
(assert  (=> (<= 0 $generated@@27) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (or ($generated@@29 $generated@@153 $generated@@154 $generated@@155) (and (< 0 $generated@@27) (and ($generated@@30 $generated@@154) (and (or (not (= $generated@@155 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@155 ($generated@@34 $generated@@153)) ($generated@@35 $generated@@33 $generated@@155 ($generated@@34 $generated@@153) $generated@@154)))))) (= ($generated@@28 $generated@@153 $generated@@154 $generated@@155) ($generated@@48 $generated@@33 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@154 $generated@@155) $generated@@79))))
 :pattern ( ($generated@@28 $generated@@153 $generated@@154 $generated@@155) ($generated@@30 $generated@@154))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@30 $generated@@157) (and (or (not (= $generated@@158 $generated@@31)) (not true)) (= ($generated@@98 $generated@@158) ($generated@@44 $generated@@156)))) ($generated@@32 $generated@@33 ($generated@@48 $generated@@33 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@157 $generated@@158) $generated@@79)) ($generated@@36 $generated@@156)))
 :pattern ( ($generated@@48 $generated@@33 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@157 $generated@@158) $generated@@79)) ($generated@@44 $generated@@156))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@159 () Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@165  (=> (and (and (= $generated@@159 ($generated@@14 ($generated@@102 $generated@@33 $generated@@50 $generated@@10 $generated@@160 $generated@@161 $generated@@79))) (= ($generated@@28 $generated@@162 $generated@@163 $generated@@161) ($generated@@48 $generated@@33 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@163 $generated@@161) $generated@@79)))) (and ($generated@@32 $generated@@33 ($generated@@28 $generated@@162 $generated@@163 $generated@@161) ($generated@@36 $generated@@162)) (= (ControlFlow 0 3) (- 0 2)))) $generated@@159)))
(let (($generated@@166 true))
(let (($generated@@167  (=> (= $generated@@160 ($generated@@103 $generated@@31 $generated@@163 $generated $generated@@161)) (and (=> (= (ControlFlow 0 4) 1) $generated@@166) (=> (= (ControlFlow 0 4) 3) $generated@@165)))))
(let (($generated@@168  (=> (and ($generated@@30 $generated@@163) ($generated@@164 $generated@@163)) (=> (and (and (or (not (= $generated@@161 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@161 ($generated@@34 $generated@@162)) ($generated@@35 $generated@@33 $generated@@161 ($generated@@34 $generated@@162) $generated@@163))) (and (= 0 $generated@@27) (= (ControlFlow 0 5) 4))) $generated@@167))))
$generated@@168)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
