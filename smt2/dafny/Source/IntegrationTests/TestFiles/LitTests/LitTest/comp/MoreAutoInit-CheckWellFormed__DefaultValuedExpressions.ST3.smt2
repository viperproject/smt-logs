(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@T T@U T@U) Bool)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@30 (Int) Int)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@102 (T@U) Int)
(declare-fun $generated@@107 () T@U)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T) T@T)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@122 (T@T) T@T)
(declare-fun $generated@@123 (T@T) T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@22) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@21 $generated@@22 ($generated@@23 $generated@@28 $generated@@29) ($generated@@24 $generated@@26 $generated@@27))  (and ($generated@@25 $generated@@28 $generated@@26) ($generated@@25 $generated@@29 $generated@@27)))
 :pattern ( ($generated@@21 $generated@@22 ($generated@@23 $generated@@28 $generated@@29) ($generated@@24 $generated@@26 $generated@@27)))
)))
(assert (forall (($generated@@31 Int) ) (! (= ($generated@@30 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@31))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@T) ) (! (= ($generated@@32 $generated@@34 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@34 $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@36 $generated@@38 ($generated@@35 $generated@@38 $generated@@37)) $generated@@37)
 :pattern ( ($generated@@35 $generated@@38 $generated@@37))
)))
(assert (= ($generated@@5 $generated@@39) 4))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@21 $generated@@39 $generated@@42 ($generated@@40 $generated@@43)) (forall (($generated@@44 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@44) ($generated@@25 $generated@@44 $generated@@43))
 :pattern ( ($generated@@41 $generated@@42 $generated@@44))
)))
 :pattern ( ($generated@@21 $generated@@39 $generated@@42 ($generated@@40 $generated@@43)))
)))
(assert  (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@47 $generated@@51 $generated@@52 ($generated@@50 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@47 $generated@@56 $generated@@57 ($generated@@50 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@47 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@5 $generated@@48) 5)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@45 $generated@@62 $generated@@63)  (and (forall (($generated@@64 T@U) ) (= ($generated@@41 ($generated@@46 $generated@@62) $generated@@64) ($generated@@41 ($generated@@46 $generated@@63) $generated@@64))) (forall (($generated@@65 T@U) )  (=> ($generated@@41 ($generated@@46 $generated@@62) $generated@@65) (= ($generated@@47 $generated@@48 $generated@@48 ($generated@@49 $generated@@62) $generated@@65) ($generated@@47 $generated@@48 $generated@@48 ($generated@@49 $generated@@63) $generated@@65))))))
 :pattern ( ($generated@@45 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@45 $generated@@66 $generated@@67) (= $generated@@66 $generated@@67))
 :pattern ( ($generated@@45 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@25 ($generated@@36 $generated@@70 $generated@@68) $generated@@69) ($generated@@21 $generated@@70 $generated@@68 $generated@@69))
 :pattern ( ($generated@@25 ($generated@@36 $generated@@70 $generated@@68) $generated@@69))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@72 ($generated@@71 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@71 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@75 ($generated@@71 $generated@@76 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@71 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 ($generated@@71 $generated@@79 $generated@@80)) $generated@@0)
 :pattern ( ($generated@@71 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@81 ($generated@@23 $generated@@82 $generated@@83)) $generated@@2)
 :pattern ( ($generated@@23 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@84 ($generated@@24 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@24 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 ($generated@@24 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@24 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@90 ($generated@@23 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@23 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@93 ($generated@@23 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@23 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@40 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@40 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@78 ($generated@@40 $generated@@98)) $generated)
 :pattern ( ($generated@@40 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@35 $generated@@100 ($generated@@36 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@36 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (< ($generated@@101 $generated@@103) ($generated@@102 ($generated@@23 $generated@@103 $generated@@104)))
 :pattern ( ($generated@@23 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (< ($generated@@101 $generated@@106) ($generated@@102 ($generated@@23 $generated@@105 $generated@@106)))
 :pattern ( ($generated@@23 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (!  (not ($generated@@41 ($generated@@46 $generated@@107) $generated@@108))
 :pattern ( ($generated@@41 ($generated@@46 $generated@@107) $generated@@108))
)))
(assert (= ($generated@@5 $generated@@109) 6))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> ($generated@@25 $generated@@110 ($generated@@71 $generated@@111 $generated@@112)) (and (= ($generated@@36 $generated@@109 ($generated@@35 $generated@@109 $generated@@110)) $generated@@110) ($generated@@21 $generated@@109 ($generated@@35 $generated@@109 $generated@@110) ($generated@@71 $generated@@111 $generated@@112))))
 :pattern ( ($generated@@25 $generated@@110 ($generated@@71 $generated@@111 $generated@@112)))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@25 $generated@@115 ($generated@@24 $generated@@113 $generated@@114)) (and (= ($generated@@36 $generated@@22 ($generated@@35 $generated@@22 $generated@@115)) $generated@@115) ($generated@@21 $generated@@22 ($generated@@35 $generated@@22 $generated@@115) ($generated@@24 $generated@@113 $generated@@114))))
 :pattern ( ($generated@@25 $generated@@115 ($generated@@24 $generated@@113 $generated@@114)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@116 $generated@@124 $generated@@125 $generated@@126 ($generated@@121 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@129 $generated@@130) $generated@@127)
 :weight 0
)) (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@116 $generated@@131 $generated@@132 $generated@@133 ($generated@@121 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@116 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@116 $generated@@140 $generated@@141 $generated@@142 ($generated@@121 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@116 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)))) (= ($generated@@5 $generated@@117) 7)) (= ($generated@@5 $generated@@118) 8)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@5 ($generated@@120 $generated@@149 $generated@@150)) 9))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@122 ($generated@@120 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@120 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@123 ($generated@@120 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@120 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@10 ($generated@@116 $generated@@117 $generated@@118 $generated@@6 ($generated@@119 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (or (not (= $generated@@159 $generated@@155)) (not true)) ($generated@@10 ($generated@@35 $generated@@6 ($generated@@47 $generated@@118 $generated@@48 ($generated@@47 $generated@@117 ($generated@@120 $generated@@118 $generated@@48) $generated@@156 $generated@@159) $generated@@157)))) $generated@@158))
 :pattern ( ($generated@@116 $generated@@117 $generated@@118 $generated@@6 ($generated@@119 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (and (= ($generated@@78 ($generated@@24 $generated@@162 $generated@@163)) $generated@@3) (= ($generated@@161 ($generated@@24 $generated@@162 $generated@@163)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (or (= $generated@@164 $generated@@107) (exists (($generated@@165 T@U) ) ($generated@@41 ($generated@@46 $generated@@164) $generated@@165)))
 :pattern ( ($generated@@46 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (!  (or (= $generated@@167 $generated@@107) (exists (($generated@@168 T@U) ) ($generated@@41 ($generated@@166 $generated@@167) $generated@@168)))
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@41 ($generated@@169 $generated@@170) $generated@@171)  (and ($generated@@41 ($generated@@46 $generated@@170) ($generated@@90 ($generated@@35 $generated@@22 $generated@@171))) (= ($generated@@47 $generated@@48 $generated@@48 ($generated@@49 $generated@@170) ($generated@@90 ($generated@@35 $generated@@22 $generated@@171))) ($generated@@93 ($generated@@35 $generated@@22 $generated@@171)))))
 :pattern ( ($generated@@41 ($generated@@169 $generated@@170) $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@41 ($generated@@166 $generated@@172) $generated@@173) (exists (($generated@@174 T@U) ) (!  (and ($generated@@41 ($generated@@46 $generated@@172) $generated@@174) (= $generated@@173 ($generated@@47 $generated@@48 $generated@@48 ($generated@@49 $generated@@172) $generated@@174)))
 :pattern ( ($generated@@41 ($generated@@46 $generated@@172) $generated@@174))
 :pattern ( ($generated@@47 $generated@@48 $generated@@48 ($generated@@49 $generated@@172) $generated@@174))
)))
 :pattern ( ($generated@@41 ($generated@@166 $generated@@172) $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@101 ($generated@@36 $generated@@22 $generated@@175)) ($generated@@102 $generated@@175))
 :pattern ( ($generated@@101 ($generated@@36 $generated@@22 $generated@@175)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@25 $generated@@176 ($generated@@40 $generated@@177)) (and (= ($generated@@36 $generated@@39 ($generated@@35 $generated@@39 $generated@@176)) $generated@@176) ($generated@@21 $generated@@39 ($generated@@35 $generated@@39 $generated@@176) ($generated@@40 $generated@@177))))
 :pattern ( ($generated@@25 $generated@@176 ($generated@@40 $generated@@177)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@21 $generated@@109 $generated@@178 ($generated@@71 $generated@@179 $generated@@180)) (forall (($generated@@181 T@U) ) (!  (=> ($generated@@41 ($generated@@46 $generated@@178) $generated@@181) (and ($generated@@25 ($generated@@47 $generated@@48 $generated@@48 ($generated@@49 $generated@@178) $generated@@181) $generated@@180) ($generated@@25 $generated@@181 $generated@@179)))
 :pattern ( ($generated@@47 $generated@@48 $generated@@48 ($generated@@49 $generated@@178) $generated@@181))
 :pattern ( ($generated@@41 ($generated@@46 $generated@@178) $generated@@181))
)))
 :pattern ( ($generated@@21 $generated@@109 $generated@@178 ($generated@@71 $generated@@179 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@23 ($generated@@32 $generated@@48 $generated@@182) ($generated@@32 $generated@@48 $generated@@183)) ($generated@@32 $generated@@22 ($generated@@23 $generated@@182 $generated@@183)))
 :pattern ( ($generated@@23 ($generated@@32 $generated@@48 $generated@@182) ($generated@@32 $generated@@48 $generated@@183)))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@36 $generated@@7 ($generated@@11 ($generated@@30 $generated@@184))) ($generated@@32 $generated@@48 ($generated@@36 $generated@@7 ($generated@@11 $generated@@184))))
 :pattern ( ($generated@@36 $generated@@7 ($generated@@11 ($generated@@30 $generated@@184))))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@T) ) (! (= ($generated@@36 $generated@@186 ($generated@@32 $generated@@186 $generated@@185)) ($generated@@32 $generated@@48 ($generated@@36 $generated@@186 $generated@@185)))
 :pattern ( ($generated@@36 $generated@@186 ($generated@@32 $generated@@186 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (or (= $generated@@187 $generated@@107) (exists (($generated@@188 T@U) ($generated@@189 T@U) ) ($generated@@41 ($generated@@169 $generated@@187) ($generated@@36 $generated@@22 ($generated@@23 $generated@@188 $generated@@189)))))
 :pattern ( ($generated@@169 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@21 $generated@@109 $generated@@190 ($generated@@71 $generated@@191 $generated@@192)) (and (and ($generated@@21 $generated@@39 ($generated@@46 $generated@@190) ($generated@@40 $generated@@191)) ($generated@@21 $generated@@39 ($generated@@166 $generated@@190) ($generated@@40 $generated@@192))) ($generated@@21 $generated@@39 ($generated@@169 $generated@@190) ($generated@@40 ($generated@@24 $generated@@191 $generated@@192)))))
 :pattern ( ($generated@@21 $generated@@109 $generated@@190 ($generated@@71 $generated@@191 $generated@@192)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@203 true))
(let (($generated@@204  (=> (and (not (let (($generated@@205 ($generated@@32 $generated@@109 $generated@@107)))
($generated@@45 $generated@@205 $generated@@107))) (= (ControlFlow 0 5) 3)) $generated@@203)))
(let (($generated@@206  (=> (and (let (($generated@@207 ($generated@@32 $generated@@109 $generated@@107)))
($generated@@45 $generated@@207 $generated@@107)) (= (ControlFlow 0 4) 3)) $generated@@203)))
(let (($generated@@208  (=> (= $generated@@193 ($generated@@32 $generated@@109 $generated@@107)) (=> (and ($generated@@21 $generated@@109 $generated@@193 ($generated@@71 $generated@@194 $generated@@195)) (= $generated@@196 $generated@@193)) (and (=> (= (ControlFlow 0 6) 4) $generated@@206) (=> (= (ControlFlow 0 6) 5) $generated@@204))))))
(let (($generated@@209  (=> (= (ControlFlow 0 2) (- 0 1)) (<= (ite (let (($generated@@210 ($generated@@32 $generated@@109 $generated@@107)))
($generated@@45 $generated@@210 $generated@@107)) 8 0) ($generated@@30 8)))))
(let (($generated@@211  (=> (= $generated@@197 ($generated@@119 $generated@@198 $generated@@199 $generated@@1 false)) (and (=> (= (ControlFlow 0 7) 6) $generated@@208) (=> (= (ControlFlow 0 7) 2) $generated@@209)))))
(let (($generated@@212  (=> (and (and ($generated@@200 $generated@@199) ($generated@@201 $generated@@199)) (and (= 0 $generated@@202) (= (ControlFlow 0 8) 7))) $generated@@211)))
$generated@@212))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
