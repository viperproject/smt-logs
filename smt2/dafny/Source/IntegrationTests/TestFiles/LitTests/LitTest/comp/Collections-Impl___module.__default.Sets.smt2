(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@50 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@T) T@T)
(declare-fun $generated@@62 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (Int) Int)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@27 ($generated@@26 $generated@@28 $generated@@29) $generated@@29)
 :pattern ( ($generated@@26 $generated@@28 $generated@@29))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@30 $generated@@32) ($generated@@27 ($generated@@26 $generated@@30 $generated@@31) $generated@@32))
 :pattern ( ($generated@@26 $generated@@30 $generated@@31) ($generated@@27 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@27 ($generated@@26 $generated@@33 $generated@@34) $generated@@35)  (or (= $generated@@35 $generated@@34) ($generated@@27 $generated@@33 $generated@@35)))
 :pattern ( ($generated@@27 ($generated@@26 $generated@@33 $generated@@34) $generated@@35))
)))
(assert ($generated@@36 $generated@@37))
(assert (forall (($generated@@39 T@U) ) (!  (not ($generated@@27 $generated@@38 $generated@@39))
 :pattern ( ($generated@@27 $generated@@38 $generated@@39))
)))
(assert (= ($generated@@9 $generated@@41) 3))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@44 $generated@@37)  (or (= $generated@@44 $generated@@42) (= ($generated@@43 $generated@@44) $generated@@37)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@44 $generated@@37))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (and ($generated@@45 $generated@@48 $generated@@37 $generated@@49) ($generated@@46 $generated@@49)) ($generated@@45 $generated@@48 $generated@@47 $generated@@49))
 :pattern ( ($generated@@45 $generated@@48 $generated@@37 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@50 $generated@@41 $generated@@52 $generated@@51 $generated@@53) ($generated@@50 $generated@@41 $generated@@52 $generated@@47 $generated@@53))
 :pattern ( ($generated@@50 $generated@@41 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@50 $generated@@41 $generated@@52 $generated@@47 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@50 $generated@@41 $generated@@55 $generated@@54 $generated@@56) ($generated@@50 $generated@@41 $generated@@55 $generated@@37 $generated@@56))
 :pattern ( ($generated@@50 $generated@@41 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@50 $generated@@41 $generated@@55 $generated@@37 $generated@@56))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@58 $generated@@65 $generated@@66 ($generated@@62 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@69) $generated@@67)
 :weight 0
)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@74 $generated@@75) (= ($generated@@58 $generated@@70 $generated@@71 ($generated@@62 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@75) ($generated@@58 $generated@@70 $generated@@71 $generated@@73 $generated@@75)))
 :weight 0
))) (= ($generated@@9 $generated@@59) 4)) (= ($generated@@9 $generated@@60) 5)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@9 ($generated@@61 $generated@@76 $generated@@77)) 6))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@63 ($generated@@61 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@61 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@64 ($generated@@61 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@61 $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@50 $generated@@41 $generated@@82 $generated@@47 $generated@@83)  (or (= $generated@@82 $generated@@42) ($generated@@14 ($generated@@57 $generated@@10 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@83 $generated@@82) $generated@@2)))))
 :pattern ( ($generated@@50 $generated@@41 $generated@@82 $generated@@47 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@50 $generated@@41 $generated@@84 $generated@@37 $generated@@85)  (or (= $generated@@84 $generated@@42) ($generated@@14 ($generated@@57 $generated@@10 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@85 $generated@@84) $generated@@2)))))
 :pattern ( ($generated@@50 $generated@@41 $generated@@84 $generated@@37 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@86 $generated@@87 $generated@@88) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@14 ($generated@@57 $generated@@10 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@87 $generated@@89) $generated@@2))) ($generated@@14 ($generated@@57 $generated@@10 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@88 $generated@@89) $generated@@2))))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@88 $generated@@89) $generated@@2))
)))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 Int) ) (! (= ($generated@@90 $generated@@91) $generated@@91)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 ($generated@@57 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@57 $generated@@97 $generated@@96))
)))
(assert (= ($generated@@9 $generated@@98) 7))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@40 $generated@@98 $generated@@101 ($generated@@99 $generated@@102)) (forall (($generated@@103 T@U) ) (!  (=> ($generated@@27 $generated@@101 $generated@@103) ($generated@@100 $generated@@103 $generated@@102))
 :pattern ( ($generated@@27 $generated@@101 $generated@@103))
)))
 :pattern ( ($generated@@40 $generated@@98 $generated@@101 ($generated@@99 $generated@@102)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@45 ($generated@@95 $generated@@107 $generated@@104) $generated@@105 $generated@@106) ($generated@@50 $generated@@107 $generated@@104 $generated@@105 $generated@@106))
 :pattern ( ($generated@@45 ($generated@@95 $generated@@107 $generated@@104) $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@86 $generated@@108 $generated@@109) (=> ($generated@@45 $generated@@110 $generated@@111 $generated@@108) ($generated@@45 $generated@@110 $generated@@111 $generated@@109)))
 :pattern ( ($generated@@86 $generated@@108 $generated@@109) ($generated@@45 $generated@@110 $generated@@111 $generated@@108))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (!  (=> ($generated@@86 $generated@@112 $generated@@113) (=> ($generated@@50 $generated@@116 $generated@@114 $generated@@115 $generated@@112) ($generated@@50 $generated@@116 $generated@@114 $generated@@115 $generated@@113)))
 :pattern ( ($generated@@86 $generated@@112 $generated@@113) ($generated@@50 $generated@@116 $generated@@114 $generated@@115 $generated@@112))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@100 $generated@@117 $generated@@54) (and (= ($generated@@95 $generated@@41 ($generated@@57 $generated@@41 $generated@@117)) $generated@@117) ($generated@@40 $generated@@41 ($generated@@57 $generated@@41 $generated@@117) $generated@@54)))
 :pattern ( ($generated@@100 $generated@@117 $generated@@54))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@100 $generated@@118 $generated@@37) (and (= ($generated@@95 $generated@@41 ($generated@@57 $generated@@41 $generated@@118)) $generated@@118) ($generated@@40 $generated@@41 ($generated@@57 $generated@@41 $generated@@118) $generated@@37)))
 :pattern ( ($generated@@100 $generated@@118 $generated@@37))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@100 $generated@@119 $generated@@51) (and (= ($generated@@95 $generated@@41 ($generated@@57 $generated@@41 $generated@@119)) $generated@@119) ($generated@@40 $generated@@41 ($generated@@57 $generated@@41 $generated@@119) $generated@@51)))
 :pattern ( ($generated@@100 $generated@@119 $generated@@51))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@100 $generated@@120 $generated@@47) (and (= ($generated@@95 $generated@@41 ($generated@@57 $generated@@41 $generated@@120)) $generated@@120) ($generated@@40 $generated@@41 ($generated@@57 $generated@@41 $generated@@120) $generated@@47)))
 :pattern ( ($generated@@100 $generated@@120 $generated@@47))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@121 $generated@@51)  (and ($generated@@40 $generated@@41 $generated@@121 $generated@@47) (or (not (= $generated@@121 $generated@@42)) (not true))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@121 $generated@@51))
 :pattern ( ($generated@@40 $generated@@41 $generated@@121 $generated@@47))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@122 $generated@@54)  (and ($generated@@40 $generated@@41 $generated@@122 $generated@@37) (or (not (= $generated@@122 $generated@@42)) (not true))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@122 $generated@@54))
 :pattern ( ($generated@@40 $generated@@41 $generated@@122 $generated@@37))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@50 $generated@@41 $generated@@123 $generated@@37 $generated@@124) ($generated@@50 $generated@@41 $generated@@123 $generated@@47 $generated@@124))
 :pattern ( ($generated@@50 $generated@@41 $generated@@123 $generated@@37 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (or (not (= $generated@@125 $generated@@127)) (not true)) (=> (and ($generated@@86 $generated@@125 $generated@@126) ($generated@@86 $generated@@126 $generated@@127)) ($generated@@86 $generated@@125 $generated@@127)))
 :pattern ( ($generated@@86 $generated@@125 $generated@@126) ($generated@@86 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@100 $generated@@128 $generated) (and (= ($generated@@95 $generated@@11 ($generated@@57 $generated@@11 $generated@@128)) $generated@@128) ($generated@@40 $generated@@11 ($generated@@57 $generated@@11 $generated@@128) $generated)))
 :pattern ( ($generated@@100 $generated@@128 $generated))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@100 ($generated@@95 $generated@@131 $generated@@129) $generated@@130) ($generated@@40 $generated@@131 $generated@@129 $generated@@130))
 :pattern ( ($generated@@100 ($generated@@95 $generated@@131 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@50 $generated@@98 $generated@@132 ($generated@@99 $generated@@133) $generated@@134) (forall (($generated@@135 T@U) ) (!  (=> ($generated@@27 $generated@@132 $generated@@135) ($generated@@45 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@27 $generated@@132 $generated@@135))
)))
 :pattern ( ($generated@@50 $generated@@98 $generated@@132 ($generated@@99 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@136 ($generated@@99 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@99 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@25 ($generated@@99 $generated@@138)) $generated@@1)
 :pattern ( ($generated@@99 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@57 $generated@@140 ($generated@@95 $generated@@140 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@95 $generated@@140 $generated@@139))
)))
(assert  (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@141 $generated@@144 $generated@@145 $generated@@146 ($generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@141 $generated@@151 $generated@@152 $generated@@153 ($generated@@143 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@141 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@141 $generated@@160 $generated@@161 $generated@@162 ($generated@@143 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@141 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@14 ($generated@@141 $generated@@41 $generated@@59 $generated@@10 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@14 ($generated@@57 $generated@@10 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@141 $generated@@41 $generated@@59 $generated@@10 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@100 $generated@@175 ($generated@@99 $generated@@176)) (and (= ($generated@@95 $generated@@98 ($generated@@57 $generated@@98 $generated@@175)) $generated@@175) ($generated@@40 $generated@@98 ($generated@@57 $generated@@98 $generated@@175) ($generated@@99 $generated@@176))))
 :pattern ( ($generated@@100 $generated@@175 ($generated@@99 $generated@@176)))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> ($generated@@40 $generated@@41 $generated@@177 $generated@@37) ($generated@@40 $generated@@41 $generated@@177 $generated@@47))
 :pattern ( ($generated@@40 $generated@@41 $generated@@177 $generated@@37))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> ($generated@@100 $generated@@178 $generated@@37) ($generated@@100 $generated@@178 $generated@@47))
 :pattern ( ($generated@@100 $generated@@178 $generated@@37))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@46 ($generated@@62 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@179 $generated@@180 ($generated@@62 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@179 $generated@@180) $generated@@181 $generated@@182))) ($generated@@86 $generated@@179 ($generated@@62 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@179 $generated@@180 ($generated@@62 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@179 $generated@@180) $generated@@181 $generated@@182))))
 :pattern ( ($generated@@62 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@179 $generated@@180 ($generated@@62 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@179 $generated@@180) $generated@@181 $generated@@182)))
)))
(assert (= ($generated@@25 $generated@@54) $generated@@3))
(assert (= ($generated@@183 $generated@@54) $generated@@7))
(assert (= ($generated@@25 $generated@@37) $generated@@4))
(assert (= ($generated@@183 $generated@@37) $generated@@7))
(assert (= ($generated@@25 $generated@@51) $generated@@5))
(assert (= ($generated@@183 $generated@@51) $generated@@8))
(assert (= ($generated@@25 $generated@@47) $generated@@6))
(assert (= ($generated@@183 $generated@@47) $generated@@8))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@184 $generated@@47)  (or (= $generated@@184 $generated@@42) ($generated@@36 ($generated@@43 $generated@@184))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@184 $generated@@47))
)))
(assert (forall (($generated@@185 Int) ) (! (= ($generated@@95 $generated@@11 ($generated@@15 ($generated@@90 $generated@@185))) ($generated@@92 $generated@@60 ($generated@@95 $generated@@11 ($generated@@15 $generated@@185))))
 :pattern ( ($generated@@95 $generated@@11 ($generated@@15 ($generated@@90 $generated@@185))))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@T) ) (! (= ($generated@@95 $generated@@187 ($generated@@92 $generated@@187 $generated@@186)) ($generated@@92 $generated@@60 ($generated@@95 $generated@@187 $generated@@186)))
 :pattern ( ($generated@@95 $generated@@187 ($generated@@92 $generated@@187 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! ($generated@@50 $generated@@11 $generated@@189 $generated $generated@@188)
 :pattern ( ($generated@@50 $generated@@11 $generated@@189 $generated $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! ($generated@@40 $generated@@11 $generated@@190 $generated)
 :pattern ( ($generated@@40 $generated@@11 $generated@@190 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Bool)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@210  (=> (and (= $generated@@191 ($generated@@142 $generated@@42 $generated@@192 $generated@@2 false)) (= $generated@@193 ($generated@@92 $generated@@98 $generated@@38))) (=> (and (and (and (= $generated@@194 ($generated@@92 $generated@@98 ($generated@@26 ($generated@@26 ($generated@@26 ($generated@@26 $generated@@38 ($generated@@95 $generated@@11 ($generated@@15 ($generated@@90 17)))) ($generated@@95 $generated@@11 ($generated@@15 ($generated@@90 82)))) ($generated@@95 $generated@@11 ($generated@@15 ($generated@@90 17)))) ($generated@@95 $generated@@11 ($generated@@15 ($generated@@90 82)))))) (= $generated@@195 ($generated@@92 $generated@@98 ($generated@@26 ($generated@@26 $generated@@38 ($generated@@95 $generated@@11 ($generated@@15 ($generated@@90 12)))) ($generated@@95 $generated@@11 ($generated@@15 ($generated@@90 17))))))) (and (or (not (= $generated@@196 $generated@@42)) (not true)) ($generated@@40 $generated@@41 $generated@@196 $generated@@37))) (and (and (not ($generated@@14 ($generated@@57 $generated@@10 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@192 $generated@@196) $generated@@2)))) (= $generated@@197 ($generated@@62 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@192 $generated@@196 ($generated@@62 $generated@@59 $generated@@60 ($generated@@58 $generated@@41 ($generated@@61 $generated@@59 $generated@@60) $generated@@192 $generated@@196) $generated@@2 ($generated@@95 $generated@@10 ($generated@@13 true)))))) (and ($generated@@46 $generated@@197) ($generated@@198 $generated@@197)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> (= $generated@@199 ($generated@@26 ($generated@@26 $generated@@38 ($generated@@95 $generated@@41 $generated@@196)) ($generated@@95 $generated@@41 $generated@@196))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))))))))
(let (($generated@@211  (=> (and ($generated@@46 $generated@@192) ($generated@@198 $generated@@192)) (=> (and (and ($generated@@40 $generated@@98 $generated@@200 ($generated@@99 $generated)) ($generated@@50 $generated@@98 $generated@@200 ($generated@@99 $generated) $generated@@192)) true) (=> (and (and (and ($generated@@40 $generated@@98 $generated@@201 ($generated@@99 $generated)) ($generated@@50 $generated@@98 $generated@@201 ($generated@@99 $generated) $generated@@192)) true) (and (and ($generated@@40 $generated@@98 $generated@@202 ($generated@@99 $generated)) ($generated@@50 $generated@@98 $generated@@202 ($generated@@99 $generated) $generated@@192)) true)) (=> (and (and (and (and (=> $generated@@203 (and ($generated@@40 $generated@@41 $generated@@204 $generated@@54) ($generated@@50 $generated@@41 $generated@@204 $generated@@54 $generated@@192))) true) (and (=> $generated@@205 (and ($generated@@40 $generated@@41 $generated@@206 $generated@@51) ($generated@@50 $generated@@41 $generated@@206 $generated@@51 $generated@@192))) true)) (and (and ($generated@@40 $generated@@98 $generated@@207 ($generated@@99 $generated@@51)) ($generated@@50 $generated@@98 $generated@@207 ($generated@@99 $generated@@51) $generated@@192)) true)) (and (and (and ($generated@@40 $generated@@98 $generated@@208 ($generated@@99 $generated@@54)) ($generated@@50 $generated@@98 $generated@@208 ($generated@@99 $generated@@54) $generated@@192)) true) (and (= 1 $generated@@209) (= (ControlFlow 0 7) 2)))) $generated@@210))))))
$generated@@211)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
