(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@21 (T@T T@U) T@U)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (Int) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@T T@T) T@T)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@37 (T@T) T@T)
(declare-fun $generated@@38 (T@T) T@T)
(declare-fun $generated@@59 (Int) Int)
(declare-fun $generated@@63 (T@T T@U T@U) Bool)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@73 () Int)
(declare-fun $generated@@74 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@U Int) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@112 (T@U) Int)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert  (and (= ($generated@@3 $generated@@22) 3) (= ($generated@@3 $generated@@26) 4)))
(assert (= $generated@@20 ($generated@@21 $generated@@22 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 ($generated@@23 $generated@@24 ($generated@@25 $generated@@26 ($generated@@27 68))) ($generated@@25 $generated@@26 ($generated@@27 0))) ($generated@@25 $generated@@26 ($generated@@27 13))) ($generated@@25 $generated@@26 ($generated@@27 10))) ($generated@@25 $generated@@26 ($generated@@27 92))) ($generated@@25 $generated@@26 ($generated@@27 34))) ($generated@@25 $generated@@26 ($generated@@27 39))) ($generated@@25 $generated@@26 ($generated@@27 128526))))))
(assert (= ($generated@@28 $generated@@24) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@39 T@T) ($generated@@40 T@T) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@30 $generated@@39 $generated@@40 ($generated@@36 $generated@@39 $generated@@40 $generated@@42 $generated@@43 $generated@@41) $generated@@43) $generated@@41)
 :weight 0
)) (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (or (= $generated@@48 $generated@@49) (= ($generated@@30 $generated@@44 $generated@@45 ($generated@@36 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@49) ($generated@@30 $generated@@44 $generated@@45 $generated@@47 $generated@@49)))
 :weight 0
))) (= ($generated@@3 $generated@@31) 5)) (= ($generated@@3 $generated@@32) 6)) (= ($generated@@3 $generated@@33) 7)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ) (= ($generated@@3 ($generated@@34 $generated@@50 $generated@@51)) 8))) (forall (($generated@@52 T@T) ($generated@@53 T@T) ) (! (= ($generated@@37 ($generated@@34 $generated@@52 $generated@@53)) $generated@@52)
 :pattern ( ($generated@@34 $generated@@52 $generated@@53))
))) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (! (= ($generated@@38 ($generated@@34 $generated@@54 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@34 $generated@@54 $generated@@55))
))))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> ($generated@@29 $generated@@56 $generated@@57) (forall (($generated@@58 T@U) ) (!  (=> ($generated@@8 ($generated@@35 $generated@@4 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@56 $generated@@58) $generated@@2))) ($generated@@8 ($generated@@35 $generated@@4 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@57 $generated@@58) $generated@@2))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@57 $generated@@58) $generated@@2))
)))
 :pattern ( ($generated@@29 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@60 Int) ) (! (= ($generated@@59 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@21 $generated@@62 $generated@@61) $generated@@61)
 :pattern ( ($generated@@21 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (and ($generated@@63 $generated@@22 $generated@@66 ($generated@@64 $generated@@68)) ($generated@@65 $generated@@67 $generated@@68)) ($generated@@63 $generated@@22 ($generated@@23 $generated@@66 $generated@@67) ($generated@@64 $generated@@68)))
 :pattern ( ($generated@@63 $generated@@22 ($generated@@23 $generated@@66 $generated@@67) ($generated@@64 $generated@@68)))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@25 $generated@@70 ($generated@@35 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@35 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@28 ($generated@@23 $generated@@71 $generated@@72)) (+ 1 ($generated@@28 $generated@@71)))
 :pattern ( ($generated@@23 $generated@@71 $generated@@72))
)))
(assert  (=> (< 0 $generated@@73) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@75 $generated@@76) ($generated@@74 $generated@@22 $generated@@20 ($generated@@64 $generated) $generated@@76))
 :pattern ( ($generated@@74 $generated@@22 $generated@@20 ($generated@@64 $generated) $generated@@76))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@25 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@74 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@25 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@29 $generated@@82 $generated@@83) (=> ($generated@@77 $generated@@84 $generated@@85 $generated@@82) ($generated@@77 $generated@@84 $generated@@85 $generated@@83)))
 :pattern ( ($generated@@29 $generated@@82 $generated@@83) ($generated@@77 $generated@@84 $generated@@85 $generated@@82))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (!  (=> ($generated@@29 $generated@@86 $generated@@87) (=> ($generated@@74 $generated@@90 $generated@@88 $generated@@89 $generated@@86) ($generated@@74 $generated@@90 $generated@@88 $generated@@89 $generated@@87)))
 :pattern ( ($generated@@29 $generated@@86 $generated@@87) ($generated@@74 $generated@@90 $generated@@88 $generated@@89 $generated@@86))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 Int) ($generated@@94 T@U) ) (!  (and (=> (= $generated@@93 ($generated@@28 $generated@@92)) (= ($generated@@91 ($generated@@23 $generated@@92 $generated@@94) $generated@@93) $generated@@94)) (=> (or (not (= $generated@@93 ($generated@@28 $generated@@92))) (not true)) (= ($generated@@91 ($generated@@23 $generated@@92 $generated@@94) $generated@@93) ($generated@@91 $generated@@92 $generated@@93))))
 :pattern ( ($generated@@91 ($generated@@23 $generated@@92 $generated@@94) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or (not (= $generated@@95 $generated@@97)) (not true)) (=> (and ($generated@@29 $generated@@95 $generated@@96) ($generated@@29 $generated@@96 $generated@@97)) ($generated@@29 $generated@@95 $generated@@97)))
 :pattern ( ($generated@@29 $generated@@95 $generated@@96) ($generated@@29 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@65 $generated@@98 $generated) (and (= ($generated@@25 $generated@@26 ($generated@@35 $generated@@26 $generated@@98)) $generated@@98) ($generated@@63 $generated@@26 ($generated@@35 $generated@@26 $generated@@98) $generated)))
 :pattern ( ($generated@@65 $generated@@98 $generated))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@65 ($generated@@25 $generated@@101 $generated@@99) $generated@@100) ($generated@@63 $generated@@101 $generated@@99 $generated@@100))
 :pattern ( ($generated@@65 ($generated@@25 $generated@@101 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (<= 0 ($generated@@28 $generated@@102))
 :pattern ( ($generated@@28 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@74 $generated@@22 $generated@@103 ($generated@@64 $generated@@104) $generated@@105) (forall (($generated@@106 Int) ) (!  (=> (and (<= 0 $generated@@106) (< $generated@@106 ($generated@@28 $generated@@103))) ($generated@@77 ($generated@@91 $generated@@103 $generated@@106) $generated@@104 $generated@@105))
 :pattern ( ($generated@@91 $generated@@103 $generated@@106))
)))
 :pattern ( ($generated@@74 $generated@@22 $generated@@103 ($generated@@64 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@107 ($generated@@64 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@64 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@19 ($generated@@64 $generated@@109)) $generated@@1)
 :pattern ( ($generated@@64 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@35 $generated@@111 ($generated@@25 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@25 $generated@@111 $generated@@110))
)))
(assert (forall (($generated@@113 Int) ) (!  (=> (or (and (<= 0 $generated@@113) (< $generated@@113 55296)) (and (<= 57344 $generated@@113) (< $generated@@113 1114112))) (= ($generated@@112 ($generated@@27 $generated@@113)) $generated@@113))
 :pattern ( ($generated@@27 $generated@@113))
)))
(assert  (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@114 $generated@@117 $generated@@118 $generated@@119 ($generated@@116 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@122 $generated@@123) $generated@@120)
 :weight 0
)) (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@114 $generated@@124 $generated@@125 $generated@@126 ($generated@@116 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@114 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@114 $generated@@133 $generated@@134 $generated@@135 ($generated@@116 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@114 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Bool) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@8 ($generated@@114 $generated@@33 $generated@@31 $generated@@4 ($generated@@115 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146 $generated@@147))  (=> (and (or (not (= $generated@@146 $generated@@142)) (not true)) ($generated@@8 ($generated@@35 $generated@@4 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@143 $generated@@146) $generated@@144)))) $generated@@145))
 :pattern ( ($generated@@114 $generated@@33 $generated@@31 $generated@@4 ($generated@@115 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (and (= ($generated@@148 ($generated@@23 $generated@@150 $generated@@151)) $generated@@150) (= ($generated@@149 ($generated@@23 $generated@@150 $generated@@151)) $generated@@151))
 :pattern ( ($generated@@23 $generated@@150 $generated@@151))
)))
(assert  (=> (< 0 $generated@@73) ($generated@@63 $generated@@22 $generated@@20 ($generated@@64 $generated))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@65 $generated@@152 ($generated@@64 $generated@@153)) (and (= ($generated@@25 $generated@@22 ($generated@@35 $generated@@22 $generated@@152)) $generated@@152) ($generated@@63 $generated@@22 ($generated@@35 $generated@@22 $generated@@152) ($generated@@64 $generated@@153))))
 :pattern ( ($generated@@65 $generated@@152 ($generated@@64 $generated@@153)))
)))
(assert (forall (($generated@@154 T@U) ) (!  (and (= ($generated@@27 ($generated@@112 $generated@@154)) $generated@@154) (or (and (<= 0 ($generated@@112 $generated@@154)) (< ($generated@@112 $generated@@154) 55296)) (and (<= 57344 ($generated@@112 $generated@@154)) (< ($generated@@112 $generated@@154) 1114112))))
 :pattern ( ($generated@@112 $generated@@154))
)))
(assert (forall (($generated@@155 Int) ) (! (= ($generated@@25 $generated@@5 ($generated@@9 ($generated@@59 $generated@@155))) ($generated@@21 $generated@@32 ($generated@@25 $generated@@5 ($generated@@9 $generated@@155))))
 :pattern ( ($generated@@25 $generated@@5 ($generated@@9 ($generated@@59 $generated@@155))))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@25 $generated@@157 ($generated@@21 $generated@@157 $generated@@156)) ($generated@@21 $generated@@32 ($generated@@25 $generated@@157 $generated@@156)))
 :pattern ( ($generated@@25 $generated@@157 ($generated@@21 $generated@@157 $generated@@156)))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= ($generated@@28 $generated@@158) 0) (= $generated@@158 $generated@@24))
 :pattern ( ($generated@@28 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! ($generated@@74 $generated@@26 $generated@@160 $generated $generated@@159)
 :pattern ( ($generated@@74 $generated@@26 $generated@@160 $generated $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@63 $generated@@22 $generated@@161 ($generated@@64 $generated@@162)) (forall (($generated@@163 Int) ) (!  (=> (and (<= 0 $generated@@163) (< $generated@@163 ($generated@@28 $generated@@161))) ($generated@@65 ($generated@@91 $generated@@161 $generated@@163) $generated@@162))
 :pattern ( ($generated@@91 $generated@@161 $generated@@163))
)))
 :pattern ( ($generated@@63 $generated@@22 $generated@@161 ($generated@@64 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ) (! ($generated@@63 $generated@@26 $generated@@164 $generated)
 :pattern ( ($generated@@63 $generated@@26 $generated@@164 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Bool)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@189 true))
(let (($generated@@190 true))
(let (($generated@@191  (=> (or (not (= $generated@@165 $generated@@166)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (and (<= 0 $generated@@165) (< $generated@@165 ($generated@@28 $generated@@167)))) (=> (and (<= 0 $generated@@165) (< $generated@@165 ($generated@@28 $generated@@167))) (=> (= $generated@@168 ($generated@@35 $generated@@26 ($generated@@91 $generated@@167 $generated@@165))) (=> (and (and (and (and ($generated@@65 $generated@@169 $generated@@170) ($generated@@77 $generated@@169 $generated@@170 $generated@@171)) (= $generated@@172 ($generated@@25 $generated@@26 $generated@@168))) (and ($generated@@75 $generated@@173) ($generated@@174 $generated@@173))) (and (and (and ($generated@@65 $generated@@175 $generated) ($generated@@77 $generated@@175 $generated $generated@@173)) (forall (($generated@@192 T@U) ) (!  (=> (and (or (not (= $generated@@192 $generated@@176)) (not true)) ($generated@@8 ($generated@@35 $generated@@4 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@177 $generated@@192) $generated@@2)))) (= ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@173 $generated@@192) ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@177 $generated@@192)))
 :pattern ( ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@173 $generated@@192))
))) (and ($generated@@29 $generated@@177 $generated@@173) (= $generated@@178 ($generated@@35 $generated@@26 $generated@@175))))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 $generated@@165) (< $generated@@165 ($generated@@28 $generated@@167)))) (and (=> (= (ControlFlow 0 10) 8) $generated@@190) (=> (= (ControlFlow 0 10) 9) $generated@@189))))))))))
(let (($generated@@193 true))
(let (($generated@@194  (=> $generated@@179 (and (=> (= (ControlFlow 0 13) 7) $generated@@193) (=> (= (ControlFlow 0 13) 10) $generated@@191)))))
(let (($generated@@195 true))
(let (($generated@@196  (and (=> (= (ControlFlow 0 14) 6) $generated@@195) (=> (= (ControlFlow 0 14) 13) $generated@@194))))
(let (($generated@@197 true))
(let (($generated@@198  (=> (and (and ($generated@@75 $generated@@177) ($generated@@174 $generated@@177)) ($generated@@63 $generated@@26 $generated@@180 $generated)) (=> (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@181)) (= $generated@@182 0)) (<= 0 $generated@@183)) $generated@@184) (<= 0 $generated@@165)) (= $generated@@185 0)) (<= 0 $generated@@166)) (and (and (and (<= $generated@@185 $generated@@165) (<= $generated@@165 $generated@@166)) (forall (($generated@@199 T@U) ) (!  (=> (and (or (not (= $generated@@199 $generated@@176)) (not true)) ($generated@@8 ($generated@@35 $generated@@4 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@171 $generated@@199) $generated@@2)))) (= ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@177 $generated@@199) ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@171 $generated@@199)))
 :pattern ( ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@177 $generated@@199))
))) (and ($generated@@29 $generated@@171 $generated@@177) (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (or (not (= $generated@@200 $generated@@176)) (not true)) ($generated@@8 ($generated@@35 $generated@@4 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@171 $generated@@200) $generated@@2)))) (or (= ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@177 $generated@@200) $generated@@201) ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@171 $generated@@200) $generated@@201)) ($generated@@8 ($generated@@114 $generated@@33 $generated@@31 $generated@@4 $generated@@186 $generated@@200 $generated@@201))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@177 $generated@@200) $generated@@201))
))))) (and (=> (= (ControlFlow 0 15) 5) $generated@@197) (=> (= (ControlFlow 0 15) 14) $generated@@196))))))
(let (($generated@@202  (=> (= $generated@@181 $generated@@183) (=> (and (= $generated@@185 ($generated@@59 0)) (= $generated@@166 ($generated@@28 $generated@@167))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (<= $generated@@185 $generated@@166)) (=> (<= $generated@@185 $generated@@166) (=> (= (ControlFlow 0 16) 15) $generated@@198)))))))
(let (($generated@@203  (=> (and (or (not (= $generated@@181 $generated@@183)) (not true)) (= (ControlFlow 0 4) (- 0 3))) (and (<= 0 $generated@@181) (< $generated@@181 ($generated@@28 $generated@@167))))))
(let (($generated@@204  (=> $generated@@184 (and (=> (= (ControlFlow 0 18) 16) $generated@@202) (=> (= (ControlFlow 0 18) 4) $generated@@203)))))
(let (($generated@@205 true))
(let (($generated@@206  (and (=> (= (ControlFlow 0 19) 2) $generated@@205) (=> (= (ControlFlow 0 19) 18) $generated@@204))))
(let (($generated@@207 true))
(let (($generated@@208  (=> (and (and (and (and (not false) (<= 0 $generated@@181)) (= $generated@@182 0)) (<= 0 $generated@@183)) (and (and (and (<= $generated@@182 $generated@@181) (<= $generated@@181 $generated@@183)) (forall (($generated@@209 T@U) ) (!  (=> (and (or (not (= $generated@@209 $generated@@176)) (not true)) ($generated@@8 ($generated@@35 $generated@@4 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@171 $generated@@209) $generated@@2)))) (= ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@171 $generated@@209) ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@171 $generated@@209)))
 :pattern ( ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@171 $generated@@209))
))) (and ($generated@@29 $generated@@171 $generated@@171) (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (or (not (= $generated@@210 $generated@@176)) (not true)) ($generated@@8 ($generated@@35 $generated@@4 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@171 $generated@@210) $generated@@2)))) (or (= ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@171 $generated@@210) $generated@@211) ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@171 $generated@@210) $generated@@211)) ($generated@@8 ($generated@@114 $generated@@33 $generated@@31 $generated@@4 $generated@@186 $generated@@210 $generated@@211))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@171 $generated@@210) $generated@@211))
))))) (and (=> (= (ControlFlow 0 20) 1) $generated@@207) (=> (= (ControlFlow 0 20) 19) $generated@@206)))))
(let (($generated@@212  (=> (and (and (= $generated@@186 ($generated@@115 $generated@@176 $generated@@171 $generated@@2 false)) (= $generated@@167 $generated@@20)) (and (= $generated@@182 ($generated@@59 0)) (= $generated@@183 ($generated@@28 $generated@@167)))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (<= $generated@@182 $generated@@183)) (=> (<= $generated@@182 $generated@@183) (=> (= (ControlFlow 0 21) 20) $generated@@208))))))
(let (($generated@@213  (=> (and ($generated@@75 $generated@@171) ($generated@@174 $generated@@171)) (=> (and (and (and ($generated@@63 $generated@@22 $generated@@187 ($generated@@64 $generated)) ($generated@@74 $generated@@22 $generated@@187 ($generated@@64 $generated) $generated@@171)) true) (and (and ($generated@@63 $generated@@26 $generated@@188 $generated) true) (and (= 1 $generated@@73) (= (ControlFlow 0 23) 21)))) $generated@@212))))
$generated@@213)))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
