(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@78 (T@U) Int)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@82 (Int) Int)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@93 () Int)
(declare-fun $generated@@94 (T@U T@U) Int)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@98 (T@T T@U T@U) Bool)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@102 (T@U) Int)
(declare-fun $generated@@107 (T@U T@U) Bool)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@115 (T@U) Bool)
(declare-fun $generated@@119 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@21 ($generated@@20 $generated@@22 $generated@@23) $generated@@23)
 :pattern ( ($generated@@20 $generated@@22 $generated@@23))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@21 $generated@@24 $generated@@26) ($generated@@21 ($generated@@20 $generated@@24 $generated@@25) $generated@@26))
 :pattern ( ($generated@@20 $generated@@24 $generated@@25) ($generated@@21 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@21 $generated@@28 $generated@@30) ($generated@@21 ($generated@@27 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@21 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@21 $generated@@32 $generated@@33) ($generated@@21 ($generated@@27 $generated@@31 $generated@@32) $generated@@33))
 :pattern ( ($generated@@27 $generated@@31 $generated@@32) ($generated@@21 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@21 ($generated@@20 $generated@@34 $generated@@35) $generated@@36)  (or (= $generated@@36 $generated@@35) ($generated@@21 $generated@@34 $generated@@36)))
 :pattern ( ($generated@@21 ($generated@@20 $generated@@34 $generated@@35) $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@21 $generated@@39 $generated@@40) (not ($generated@@21 ($generated@@37 $generated@@38 $generated@@39) $generated@@40)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39) ($generated@@21 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ) (!  (not ($generated@@21 $generated@@41 $generated@@42))
 :pattern ( ($generated@@21 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@27 ($generated@@27 $generated@@43 $generated@@44) $generated@@44) ($generated@@27 $generated@@43 $generated@@44))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@43 $generated@@44) $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@21 ($generated@@37 $generated@@45 $generated@@46) $generated@@47)  (and ($generated@@21 $generated@@45 $generated@@47) (not ($generated@@21 $generated@@46 $generated@@47))))
 :pattern ( ($generated@@21 ($generated@@37 $generated@@45 $generated@@46) $generated@@47))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@49 $generated@@58 $generated@@59 ($generated@@55 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@62) $generated@@60)
 :weight 0
)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (or (= $generated@@67 $generated@@68) (= ($generated@@49 $generated@@63 $generated@@64 ($generated@@55 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@68) ($generated@@49 $generated@@63 $generated@@64 $generated@@66 $generated@@68)))
 :weight 0
))) (= ($generated@@3 $generated@@50) 3)) (= ($generated@@3 $generated@@51) 4)) (= ($generated@@3 $generated@@52) 5)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (= ($generated@@3 ($generated@@53 $generated@@69 $generated@@70)) 6))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@56 ($generated@@53 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@53 $generated@@71 $generated@@72))
))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@57 ($generated@@53 $generated@@73 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@53 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@48 $generated@@75 $generated@@76) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@8 ($generated@@54 $generated@@4 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@75 $generated@@77) $generated@@2))) ($generated@@8 ($generated@@54 $generated@@4 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@76 $generated@@77) $generated@@2))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@76 $generated@@77) $generated@@2))
)))
 :pattern ( ($generated@@48 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@79 $generated@@81) ($generated@@21 $generated@@81 ($generated@@80 $generated@@5 ($generated@@9 ($generated@@78 $generated@@81)))))
 :pattern ( ($generated@@78 $generated@@81))
)))
(assert (forall (($generated@@83 Int) ) (! (= ($generated@@82 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@21 $generated@@88 $generated@@90) ($generated@@21 $generated@@89 $generated@@90))
 :pattern ( ($generated@@21 $generated@@88 $generated@@90))
 :pattern ( ($generated@@21 $generated@@89 $generated@@90))
)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@80 $generated@@92 ($generated@@54 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@54 $generated@@92 $generated@@91))
)))
(assert (= ($generated@@3 $generated@@96) 7))
(assert  (=> (<= 1 $generated@@93) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@97 ($generated@@84 $generated@@96 $generated@@104)) (and (< 1 $generated@@93) ($generated@@98 $generated@@96 $generated@@104 ($generated@@99 $generated)))) (and (=> (not ($generated@@100 $generated@@104 $generated@@41)) (and ($generated@@101 ($generated@@84 $generated@@96 $generated@@104)) (let (($generated@@105 ($generated@@82 ($generated@@102 ($generated@@84 $generated@@96 $generated@@104)))))
($generated@@97 ($generated@@37 $generated@@104 ($generated@@20 $generated@@41 ($generated@@80 $generated@@5 ($generated@@9 $generated@@105)))))))) (= ($generated@@94 ($generated@@95 $generated@@103) ($generated@@84 $generated@@96 $generated@@104)) (ite ($generated@@100 $generated@@104 $generated@@41) 0 (let (($generated@@106 ($generated@@82 ($generated@@102 ($generated@@84 $generated@@96 $generated@@104)))))
(+ $generated@@106 ($generated@@94 ($generated@@95 $generated@@103) ($generated@@37 $generated@@104 ($generated@@20 $generated@@41 ($generated@@80 $generated@@5 ($generated@@9 $generated@@106)))))))))))
 :weight 3
 :pattern ( ($generated@@94 ($generated@@95 $generated@@103) ($generated@@84 $generated@@96 $generated@@104)))
))))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@107 $generated@@108 $generated@@109) (forall (($generated@@110 T@U) ) (!  (or (not ($generated@@21 $generated@@108 $generated@@110)) (not ($generated@@21 $generated@@109 $generated@@110)))
 :pattern ( ($generated@@21 $generated@@108 $generated@@110))
 :pattern ( ($generated@@21 $generated@@109 $generated@@110))
)))
 :pattern ( ($generated@@107 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@98 $generated@@96 $generated@@112 ($generated@@99 $generated@@113)) (forall (($generated@@114 T@U) ) (!  (=> ($generated@@21 $generated@@112 $generated@@114) ($generated@@111 $generated@@114 $generated@@113))
 :pattern ( ($generated@@21 $generated@@112 $generated@@114))
)))
 :pattern ( ($generated@@98 $generated@@96 $generated@@112 ($generated@@99 $generated@@113)))
)))
(assert  (=> (<= 0 $generated@@93) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or ($generated@@101 $generated@@117) (and (< 0 $generated@@93) (and (and ($generated@@115 $generated@@116) ($generated@@98 $generated@@96 $generated@@117 ($generated@@99 $generated))) (not ($generated@@100 $generated@@117 $generated@@41))))) (and ($generated@@79 $generated@@117) (= ($generated@@102 $generated@@117) (let (($generated@@118 ($generated@@78 $generated@@117)))
$generated@@118))))
 :pattern ( ($generated@@102 $generated@@117) ($generated@@115 $generated@@116))
))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@119 ($generated@@80 $generated@@124 $generated@@121) $generated@@122 $generated@@123) ($generated@@120 $generated@@124 $generated@@121 $generated@@122 $generated@@123))
 :pattern ( ($generated@@119 ($generated@@80 $generated@@124 $generated@@121) $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@48 $generated@@125 $generated@@126) (=> ($generated@@119 $generated@@127 $generated@@128 $generated@@125) ($generated@@119 $generated@@127 $generated@@128 $generated@@126)))
 :pattern ( ($generated@@48 $generated@@125 $generated@@126) ($generated@@119 $generated@@127 $generated@@128 $generated@@125))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@T) ) (!  (=> ($generated@@48 $generated@@129 $generated@@130) (=> ($generated@@120 $generated@@133 $generated@@131 $generated@@132 $generated@@129) ($generated@@120 $generated@@133 $generated@@131 $generated@@132 $generated@@130)))
 :pattern ( ($generated@@48 $generated@@129 $generated@@130) ($generated@@120 $generated@@133 $generated@@131 $generated@@132 $generated@@129))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@21 ($generated@@27 $generated@@134 $generated@@135) $generated@@136)  (or ($generated@@21 $generated@@134 $generated@@136) ($generated@@21 $generated@@135 $generated@@136)))
 :pattern ( ($generated@@21 ($generated@@27 $generated@@134 $generated@@135) $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@107 $generated@@137 $generated@@138) (and (= ($generated@@37 ($generated@@27 $generated@@137 $generated@@138) $generated@@137) $generated@@138) (= ($generated@@37 ($generated@@27 $generated@@137 $generated@@138) $generated@@138) $generated@@137)))
 :pattern ( ($generated@@27 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> ($generated@@100 $generated@@139 $generated@@140) (= $generated@@139 $generated@@140))
 :pattern ( ($generated@@100 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (or (not (= $generated@@141 $generated@@143)) (not true)) (=> (and ($generated@@48 $generated@@141 $generated@@142) ($generated@@48 $generated@@142 $generated@@143)) ($generated@@48 $generated@@141 $generated@@143)))
 :pattern ( ($generated@@48 $generated@@141 $generated@@142) ($generated@@48 $generated@@142 $generated@@143))
)))
(assert  (=> (<= 0 $generated@@93) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (or ($generated@@101 ($generated@@84 $generated@@96 $generated@@145)) (and (< 0 $generated@@93) (and (and ($generated@@115 $generated@@144) ($generated@@98 $generated@@96 $generated@@145 ($generated@@99 $generated))) (not ($generated@@100 $generated@@145 $generated@@41))))) (and ($generated@@79 ($generated@@84 $generated@@96 $generated@@145)) (= ($generated@@102 ($generated@@84 $generated@@96 $generated@@145)) (let (($generated@@146 ($generated@@78 ($generated@@84 $generated@@96 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@102 ($generated@@84 $generated@@96 $generated@@145)) ($generated@@115 $generated@@144))
))))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@111 $generated@@147 $generated) (and (= ($generated@@80 $generated@@5 ($generated@@54 $generated@@5 $generated@@147)) $generated@@147) ($generated@@98 $generated@@5 ($generated@@54 $generated@@5 $generated@@147) $generated)))
 :pattern ( ($generated@@111 $generated@@147 $generated))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@111 ($generated@@80 $generated@@150 $generated@@148) $generated@@149) ($generated@@98 $generated@@150 $generated@@148 $generated@@149))
 :pattern ( ($generated@@111 ($generated@@80 $generated@@150 $generated@@148) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@120 $generated@@96 $generated@@151 ($generated@@99 $generated@@152) $generated@@153) (forall (($generated@@154 T@U) ) (!  (=> ($generated@@21 $generated@@151 $generated@@154) ($generated@@119 $generated@@154 $generated@@152 $generated@@153))
 :pattern ( ($generated@@21 $generated@@151 $generated@@154))
)))
 :pattern ( ($generated@@120 $generated@@96 $generated@@151 ($generated@@99 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@99 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@99 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@19 ($generated@@99 $generated@@157)) $generated@@1)
 :pattern ( ($generated@@99 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@T) ) (! (= ($generated@@54 $generated@@159 ($generated@@80 $generated@@159 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@80 $generated@@159 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@94 ($generated@@95 $generated@@160) $generated@@161) ($generated@@94 $generated@@160 $generated@@161))
 :pattern ( ($generated@@94 ($generated@@95 $generated@@160) $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@27 $generated@@162 ($generated@@27 $generated@@162 $generated@@163)) ($generated@@27 $generated@@162 $generated@@163))
 :pattern ( ($generated@@27 $generated@@162 ($generated@@27 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@164 $generated@@167 $generated@@168 $generated@@169 ($generated@@166 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@172 $generated@@173) $generated@@170)
 :weight 0
)) (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@164 $generated@@174 $generated@@175 $generated@@176 ($generated@@166 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@164 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@164 $generated@@183 $generated@@184 $generated@@185 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@164 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@8 ($generated@@164 $generated@@52 $generated@@50 $generated@@4 ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (or (not (= $generated@@196 $generated@@192)) (not true)) ($generated@@8 ($generated@@54 $generated@@4 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@193 $generated@@196) $generated@@194)))) $generated@@195))
 :pattern ( ($generated@@164 $generated@@52 $generated@@50 $generated@@4 ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert  (=> (<= 1 $generated@@93) (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (or ($generated@@97 $generated@@199) (and (< 1 $generated@@93) ($generated@@98 $generated@@96 $generated@@199 ($generated@@99 $generated)))) (and (=> (not ($generated@@100 $generated@@199 $generated@@41)) (and ($generated@@101 $generated@@199) (let (($generated@@200 ($generated@@102 $generated@@199)))
($generated@@97 ($generated@@37 $generated@@199 ($generated@@20 $generated@@41 ($generated@@80 $generated@@5 ($generated@@9 $generated@@200)))))))) (= ($generated@@94 ($generated@@95 $generated@@198) $generated@@199) (ite ($generated@@100 $generated@@199 $generated@@41) 0 (let (($generated@@201 ($generated@@102 $generated@@199)))
(+ $generated@@201 ($generated@@94 $generated@@198 ($generated@@37 $generated@@199 ($generated@@20 $generated@@41 ($generated@@80 $generated@@5 ($generated@@9 $generated@@201)))))))))))
 :pattern ( ($generated@@94 ($generated@@95 $generated@@198) $generated@@199))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@111 $generated@@202 ($generated@@99 $generated@@203)) (and (= ($generated@@80 $generated@@96 ($generated@@54 $generated@@96 $generated@@202)) $generated@@202) ($generated@@98 $generated@@96 ($generated@@54 $generated@@96 $generated@@202) ($generated@@99 $generated@@203))))
 :pattern ( ($generated@@111 $generated@@202 ($generated@@99 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@100 $generated@@204 $generated@@205) (forall (($generated@@206 T@U) ) (! (= ($generated@@21 $generated@@204 $generated@@206) ($generated@@21 $generated@@205 $generated@@206))
 :pattern ( ($generated@@21 $generated@@204 $generated@@206))
 :pattern ( ($generated@@21 $generated@@205 $generated@@206))
)))
 :pattern ( ($generated@@100 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@207 Int) ) (! (= ($generated@@80 $generated@@5 ($generated@@9 ($generated@@82 $generated@@207))) ($generated@@84 $generated@@51 ($generated@@80 $generated@@5 ($generated@@9 $generated@@207))))
 :pattern ( ($generated@@80 $generated@@5 ($generated@@9 ($generated@@82 $generated@@207))))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@T) ) (! (= ($generated@@80 $generated@@209 ($generated@@84 $generated@@209 $generated@@208)) ($generated@@84 $generated@@51 ($generated@@80 $generated@@209 $generated@@208)))
 :pattern ( ($generated@@80 $generated@@209 ($generated@@84 $generated@@209 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! ($generated@@120 $generated@@5 $generated@@211 $generated $generated@@210)
 :pattern ( ($generated@@120 $generated@@5 $generated@@211 $generated $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! ($generated@@98 $generated@@5 $generated@@212 $generated)
 :pattern ( ($generated@@98 $generated@@5 $generated@@212 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 (T@U) Bool)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 () Bool)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@232  (=> (= (ControlFlow 0 13) (- 0 12)) (= $generated@@213 ($generated@@94 ($generated@@95 ($generated@@95 $generated@@214)) $generated@@215)))))
(let (($generated@@233  (=> (and (and ($generated@@100 $generated@@216 $generated@@41) ($generated@@97 $generated@@215)) (and (= $generated@@213 $generated@@217) (= (ControlFlow 0 14) 13))) $generated@@232)))
(let (($generated@@234 true))
(let (($generated@@235  (and (=> (= (ControlFlow 0 4) (- 0 9)) (or (and ($generated@@98 $generated@@5 ($generated@@9 ($generated@@82 0)) $generated) ($generated@@21 $generated@@216 ($generated@@80 $generated@@5 ($generated@@9 ($generated@@82 0))))) (exists (($generated@@236 T@U) ) ($generated@@21 $generated@@216 ($generated@@80 $generated@@5 $generated@@236))))) (=> (or (and ($generated@@98 $generated@@5 ($generated@@9 ($generated@@82 0)) $generated) ($generated@@21 $generated@@216 ($generated@@80 $generated@@5 ($generated@@9 ($generated@@82 0))))) (exists (($generated@@237 Int) ) ($generated@@21 $generated@@216 ($generated@@80 $generated@@5 ($generated@@9 $generated@@237))))) (=> (and ($generated@@21 $generated@@216 ($generated@@80 $generated@@5 ($generated@@9 $generated@@218))) (= $generated@@219 ($generated@@37 $generated@@216 ($generated@@20 $generated@@41 ($generated@@80 $generated@@5 ($generated@@9 $generated@@218)))))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@100 ($generated@@27 $generated@@219 ($generated@@20 $generated@@41 ($generated@@80 $generated@@5 ($generated@@9 $generated@@218)))) $generated@@216)) (=> ($generated@@100 ($generated@@27 $generated@@219 ($generated@@20 $generated@@41 ($generated@@80 $generated@@5 ($generated@@9 $generated@@218)))) $generated@@216) (and (=> (= (ControlFlow 0 4) (- 0 7)) (not ($generated@@21 $generated@@219 ($generated@@80 $generated@@5 ($generated@@9 $generated@@218))))) (=> (not ($generated@@21 $generated@@219 ($generated@@80 $generated@@5 ($generated@@9 $generated@@218)))) (=> (and ($generated@@115 $generated@@220) ($generated@@221 $generated@@220)) (=> (and (and (and ($generated@@97 ($generated@@27 $generated@@219 ($generated@@20 $generated@@41 ($generated@@80 $generated@@5 ($generated@@9 $generated@@218))))) ($generated@@97 $generated@@219)) (= ($generated@@94 ($generated@@95 ($generated@@95 $generated@@214)) ($generated@@27 $generated@@219 ($generated@@20 $generated@@41 ($generated@@80 $generated@@5 ($generated@@9 $generated@@218))))) (+ ($generated@@94 ($generated@@95 ($generated@@95 $generated@@214)) $generated@@219) $generated@@218))) (and (= $generated@@222 $generated@@220) (= $generated@@223 (+ $generated@@217 $generated@@218)))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and ($generated@@87 $generated@@219 $generated@@216) (not ($generated@@87 $generated@@216 $generated@@219)))) (=> (and ($generated@@87 $generated@@219 $generated@@216) (not ($generated@@87 $generated@@216 $generated@@219))) (=> (=> ($generated@@87 $generated@@219 $generated@@215) (and ($generated@@97 $generated@@219) ($generated@@97 $generated@@215))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> $generated@@224 ($generated@@87 $generated@@219 $generated@@215))) (=> (=> $generated@@224 ($generated@@87 $generated@@219 $generated@@215)) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@224 (= (+ $generated@@223 ($generated@@94 ($generated@@95 ($generated@@95 $generated@@214)) $generated@@219)) ($generated@@94 ($generated@@95 ($generated@@95 $generated@@214)) $generated@@215))))))))))))))))))))
(let (($generated@@238  (=> (not ($generated@@100 $generated@@216 $generated@@41)) (and (=> (= (ControlFlow 0 11) 4) $generated@@235) (=> (= (ControlFlow 0 11) 10) $generated@@234)))))
(let (($generated@@239  (=> $generated@@224 (and (=> (= (ControlFlow 0 15) 14) $generated@@233) (=> (= (ControlFlow 0 15) 11) $generated@@238)))))
(let (($generated@@240 true))
(let (($generated@@241  (and (=> (= (ControlFlow 0 16) 2) $generated@@240) (=> (= (ControlFlow 0 16) 15) $generated@@239))))
(let (($generated@@242 true))
(let (($generated@@243  (=> (and ($generated@@98 $generated@@96 $generated@@225 ($generated@@99 $generated)) ($generated@@120 $generated@@96 $generated@@225 ($generated@@99 $generated) $generated@@222)) (=> (and (and ($generated@@115 $generated@@222) ($generated@@221 $generated@@222)) (and ($generated@@98 $generated@@96 $generated@@216 ($generated@@99 $generated)) ($generated@@120 $generated@@96 $generated@@216 ($generated@@99 $generated) $generated@@222))) (=> (and (and (and (not false) (=> $generated@@224 ($generated@@87 $generated@@216 $generated@@215))) (and (=> $generated@@224 (and ($generated@@97 $generated@@216) ($generated@@97 $generated@@215))) (=> $generated@@224 (= (+ $generated@@217 ($generated@@94 ($generated@@95 ($generated@@95 $generated@@214)) $generated@@216)) ($generated@@94 ($generated@@95 ($generated@@95 $generated@@214)) $generated@@215))))) (and (and (forall (($generated@@244 T@U) ) (!  (=> (and (or (not (= $generated@@244 $generated@@226)) (not true)) ($generated@@8 ($generated@@54 $generated@@4 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@227 $generated@@244) $generated@@2)))) (= ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@222 $generated@@244) ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@227 $generated@@244)))
 :pattern ( ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@222 $generated@@244))
)) ($generated@@48 $generated@@227 $generated@@222)) (and (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (or (not (= $generated@@245 $generated@@226)) (not true)) ($generated@@8 ($generated@@54 $generated@@4 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@227 $generated@@245) $generated@@2)))) (or (= ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@222 $generated@@245) $generated@@246) ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@227 $generated@@245) $generated@@246)) ($generated@@8 ($generated@@164 $generated@@52 $generated@@50 $generated@@4 $generated@@228 $generated@@245 $generated@@246))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@222 $generated@@245) $generated@@246))
)) ($generated@@87 $generated@@216 $generated@@215)))) (and (=> (= (ControlFlow 0 17) 1) $generated@@242) (=> (= (ControlFlow 0 17) 16) $generated@@241)))))))
(let (($generated@@247  (=> (and (= $generated@@228 ($generated@@165 $generated@@226 $generated@@227 $generated@@2 false)) (= $generated@@229 ($generated@@82 0))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (=> $generated@@224 ($generated@@87 $generated@@215 $generated@@215))) (=> (=> $generated@@224 ($generated@@87 $generated@@215 $generated@@215)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> $generated@@224 (= (+ $generated@@229 ($generated@@94 ($generated@@95 ($generated@@95 $generated@@214)) $generated@@215)) ($generated@@94 ($generated@@95 ($generated@@95 $generated@@214)) $generated@@215)))) (=> (=> $generated@@224 (= (+ $generated@@229 ($generated@@94 ($generated@@95 ($generated@@95 $generated@@214)) $generated@@215)) ($generated@@94 ($generated@@95 ($generated@@95 $generated@@214)) $generated@@215))) (=> (= (ControlFlow 0 18) 17) $generated@@243))))))))
(let (($generated@@248  (=> (and (and (and (and ($generated@@115 $generated@@227) ($generated@@221 $generated@@227)) (and ($generated@@98 $generated@@96 $generated@@215 ($generated@@99 $generated)) ($generated@@120 $generated@@96 $generated@@215 ($generated@@99 $generated) $generated@@227))) (and (and ($generated@@98 $generated@@96 $generated@@230 ($generated@@99 $generated)) ($generated@@120 $generated@@96 $generated@@230 ($generated@@99 $generated) $generated@@227)) true)) (and (and (and ($generated@@98 $generated@@96 $generated@@231 ($generated@@99 $generated)) ($generated@@120 $generated@@96 $generated@@231 ($generated@@99 $generated) $generated@@227)) true) (and (= 3 $generated@@93) (= (ControlFlow 0 21) 18)))) $generated@@247)))
$generated@@248)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
