(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (Int Bool) T@U)
(declare-fun $generated@@60 (Int) T@U)
(declare-fun $generated@@63 (Bool) T@U)
(declare-fun $generated@@66 (T@U) Int)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@84 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@88 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (= ($generated@@9 $generated@@34) 3))
(assert  (=> (<= 2 $generated@@30) (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (or ($generated@@32 $generated@@36 $generated@@37) (and (< 2 $generated@@30) (and ($generated@@33 $generated@@34 $generated@@36 $generated@@35) ($generated@@33 $generated@@34 $generated@@37 $generated@@35)))) ($generated@@33 $generated@@34 ($generated@@31 $generated@@36 $generated@@37) $generated@@35))
 :pattern ( ($generated@@31 $generated@@36 $generated@@37))
))))
(assert (forall (($generated@@39 Int) ) (! (= ($generated@@38 $generated@@39) $generated@@39)
 :pattern ( ($generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@45 T@U) ) (! (= ($generated@@43 $generated@@45) (= ($generated@@44 $generated@@45) $generated@@4))
 :pattern ( ($generated@@43 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@46 $generated@@47) (= ($generated@@44 $generated@@47) $generated@@5))
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@48 $generated@@49) (= ($generated@@44 $generated@@49) $generated@@6))
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 ($generated@@50 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@50 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@55 Int) ($generated@@56 Bool) ) (! (= ($generated@@33 $generated@@34 ($generated@@54 $generated@@55 $generated@@56) $generated@@35)  (and ($generated@@33 $generated@@11 ($generated@@15 $generated@@55) $generated@@27) ($generated@@33 $generated@@10 ($generated@@13 $generated@@56) $generated)))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@54 $generated@@55 $generated@@56) $generated@@35))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@48 $generated@@57) (exists (($generated@@58 Int) ($generated@@59 Bool) ) (= $generated@@57 ($generated@@54 $generated@@58 $generated@@59))))
 :pattern ( ($generated@@48 $generated@@57))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@43 $generated@@61) (exists (($generated@@62 Int) ) (= $generated@@61 ($generated@@60 $generated@@62))))
 :pattern ( ($generated@@43 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@46 $generated@@64) (exists (($generated@@65 Bool) ) (= $generated@@64 ($generated@@63 $generated@@65))))
 :pattern ( ($generated@@46 $generated@@64))
)))
(assert  (=> (<= 2 $generated@@30) (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (or ($generated@@32 ($generated@@40 $generated@@34 $generated@@68) ($generated@@40 $generated@@34 $generated@@69)) (and (< 2 $generated@@30) (and ($generated@@33 $generated@@34 $generated@@68 $generated@@35) ($generated@@33 $generated@@34 $generated@@69 $generated@@35)))) (= ($generated@@31 ($generated@@40 $generated@@34 $generated@@68) ($generated@@40 $generated@@34 $generated@@69)) (ite ($generated@@48 ($generated@@40 $generated@@34 $generated@@68)) $generated@@68 (ite ($generated@@43 ($generated@@40 $generated@@34 $generated@@68)) (ite ($generated@@46 ($generated@@40 $generated@@34 $generated@@69)) ($generated@@54 ($generated@@38 ($generated@@66 ($generated@@40 $generated@@34 $generated@@68))) ($generated@@14 ($generated@@40 $generated@@10 ($generated@@13 ($generated@@67 ($generated@@40 $generated@@34 $generated@@69)))))) $generated@@68) (ite ($generated@@46 ($generated@@40 $generated@@34 $generated@@68)) (ite ($generated@@43 ($generated@@40 $generated@@34 $generated@@69)) ($generated@@54 ($generated@@38 ($generated@@66 ($generated@@40 $generated@@34 $generated@@69))) ($generated@@14 ($generated@@40 $generated@@10 ($generated@@13 ($generated@@67 ($generated@@40 $generated@@34 $generated@@68)))))) $generated@@68) $generated@@68)))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@40 $generated@@34 $generated@@68) ($generated@@40 $generated@@34 $generated@@69)))
))))
(assert (forall (($generated@@70 Int) ) (! (= ($generated@@33 $generated@@34 ($generated@@60 $generated@@70) $generated@@35) ($generated@@33 $generated@@11 ($generated@@15 $generated@@70) $generated@@27))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@60 $generated@@70) $generated@@35))
)))
(assert (forall (($generated@@71 Int) ($generated@@72 Bool) ) (! (= ($generated@@67 ($generated@@54 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@54 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@73 Bool) ) (! (= ($generated@@67 ($generated@@63 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@63 $generated@@73))
)))
(assert (forall (($generated@@74 Int) ($generated@@75 Bool) ) (! (= ($generated@@44 ($generated@@54 $generated@@74 $generated@@75)) $generated@@6)
 :pattern ( ($generated@@54 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@76 Int) ($generated@@77 Bool) ) (! (= ($generated@@66 ($generated@@54 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@54 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@44 ($generated@@60 $generated@@78)) $generated@@4)
 :pattern ( ($generated@@60 $generated@@78))
)))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@66 ($generated@@60 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@60 $generated@@79))
)))
(assert (forall (($generated@@80 Bool) ) (! (= ($generated@@44 ($generated@@63 $generated@@80)) $generated@@5)
 :pattern ( ($generated@@63 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@50 $generated@@82 ($generated@@51 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@51 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@83 Bool) ) (! (= ($generated@@33 $generated@@34 ($generated@@63 $generated@@83) $generated@@35) ($generated@@33 $generated@@10 ($generated@@13 $generated@@83) $generated))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@63 $generated@@83) $generated@@35))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@84 $generated@@95 $generated@@96 $generated@@97 ($generated@@91 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@100 $generated@@101 $generated@@98) $generated@@100 $generated@@101) $generated@@98)
 :weight 0
)) (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@84 $generated@@102 $generated@@103 $generated@@104 ($generated@@91 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@109 $generated@@110) ($generated@@84 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@109 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@84 $generated@@111 $generated@@112 $generated@@113 ($generated@@91 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@84 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)))) (= ($generated@@9 $generated@@85) 4)) (= ($generated@@9 $generated@@86) 5)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@88 $generated@@120 $generated@@121 ($generated@@92 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@122) $generated@@124) $generated@@122)
 :weight 0
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@88 $generated@@125 $generated@@126 ($generated@@92 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@88 $generated@@125 $generated@@126 $generated@@128 $generated@@130)))
 :weight 0
))) (= ($generated@@9 $generated@@89) 6)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (= ($generated@@9 ($generated@@90 $generated@@131 $generated@@132)) 7))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@133 $generated@@134)) $generated@@133)
 :pattern ( ($generated@@90 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@135 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@90 $generated@@135 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 Bool) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@14 ($generated@@84 $generated@@85 $generated@@86 $generated@@10 ($generated@@87 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))  (=> (and (or (not (= $generated@@141 $generated@@137)) (not true)) ($generated@@14 ($generated@@50 $generated@@10 ($generated@@88 $generated@@86 $generated@@89 ($generated@@88 $generated@@85 ($generated@@90 $generated@@86 $generated@@89) $generated@@138 $generated@@141) $generated@@139)))) $generated@@140))
 :pattern ( ($generated@@84 $generated@@85 $generated@@86 $generated@@10 ($generated@@87 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and ($generated@@143 $generated@@145) (and ($generated@@46 $generated@@144) ($generated@@26 $generated@@34 $generated@@144 $generated@@35 $generated@@145))) ($generated@@26 $generated@@10 ($generated@@13 ($generated@@67 $generated@@144)) $generated $generated@@145))
 :pattern ( ($generated@@26 $generated@@10 ($generated@@13 ($generated@@67 $generated@@144)) $generated $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and ($generated@@143 $generated@@147) (and ($generated@@48 $generated@@146) ($generated@@26 $generated@@34 $generated@@146 $generated@@35 $generated@@147))) ($generated@@26 $generated@@10 ($generated@@13 ($generated@@67 $generated@@146)) $generated $generated@@147))
 :pattern ( ($generated@@26 $generated@@10 ($generated@@13 ($generated@@67 $generated@@146)) $generated $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@148 $generated@@35) (or (or ($generated@@43 $generated@@148) ($generated@@46 $generated@@148)) ($generated@@48 $generated@@148)))
 :pattern ( ($generated@@48 $generated@@148) ($generated@@33 $generated@@34 $generated@@148 $generated@@35))
 :pattern ( ($generated@@46 $generated@@148) ($generated@@33 $generated@@34 $generated@@148 $generated@@35))
 :pattern ( ($generated@@43 $generated@@148) ($generated@@33 $generated@@34 $generated@@148 $generated@@35))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and ($generated@@143 $generated@@150) ($generated@@33 $generated@@34 $generated@@149 $generated@@35)) ($generated@@26 $generated@@34 $generated@@149 $generated@@35 $generated@@150))
 :pattern ( ($generated@@26 $generated@@34 $generated@@149 $generated@@35 $generated@@150))
)))
(assert (= ($generated@@25 $generated@@27) $generated@@2))
(assert (= ($generated@@151 $generated@@27) $generated@@7))
(assert (= ($generated@@25 $generated@@35) $generated@@3))
(assert (= ($generated@@151 $generated@@35) $generated@@8))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and ($generated@@143 $generated@@153) (and ($generated@@43 $generated@@152) ($generated@@26 $generated@@34 $generated@@152 $generated@@35 $generated@@153))) ($generated@@26 $generated@@11 ($generated@@15 ($generated@@66 $generated@@152)) $generated@@27 $generated@@153))
 :pattern ( ($generated@@26 $generated@@11 ($generated@@15 ($generated@@66 $generated@@152)) $generated@@27 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and ($generated@@143 $generated@@155) (and ($generated@@48 $generated@@154) ($generated@@26 $generated@@34 $generated@@154 $generated@@35 $generated@@155))) ($generated@@26 $generated@@11 ($generated@@15 ($generated@@66 $generated@@154)) $generated@@27 $generated@@155))
 :pattern ( ($generated@@26 $generated@@11 ($generated@@15 ($generated@@66 $generated@@154)) $generated@@27 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@33 $generated@@11 $generated@@156 $generated@@27)  (and (<= ($generated@@38 0) ($generated@@16 $generated@@156)) (< ($generated@@16 $generated@@156) 255)))
 :pattern ( ($generated@@33 $generated@@11 $generated@@156 $generated@@27))
)))
(assert (forall (($generated@@157 Int) ($generated@@158 T@U) ) (! (= ($generated@@54 ($generated@@38 $generated@@157) ($generated@@14 ($generated@@40 $generated@@10 $generated@@158))) ($generated@@40 $generated@@34 ($generated@@54 $generated@@157 ($generated@@14 $generated@@158))))
 :pattern ( ($generated@@54 ($generated@@38 $generated@@157) ($generated@@14 ($generated@@40 $generated@@10 $generated@@158))))
)))
(assert (forall (($generated@@159 Int) ) (! (= ($generated@@51 $generated@@11 ($generated@@15 ($generated@@38 $generated@@159))) ($generated@@40 $generated@@89 ($generated@@51 $generated@@11 ($generated@@15 $generated@@159))))
 :pattern ( ($generated@@51 $generated@@11 ($generated@@15 ($generated@@38 $generated@@159))))
)))
(assert (forall (($generated@@160 Int) ) (! (= ($generated@@60 ($generated@@38 $generated@@160)) ($generated@@40 $generated@@34 ($generated@@60 $generated@@160)))
 :pattern ( ($generated@@60 ($generated@@38 $generated@@160)))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@63 ($generated@@14 ($generated@@40 $generated@@10 $generated@@161))) ($generated@@40 $generated@@34 ($generated@@63 ($generated@@14 $generated@@161))))
 :pattern ( ($generated@@63 ($generated@@14 ($generated@@40 $generated@@10 $generated@@161))))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@51 $generated@@163 ($generated@@40 $generated@@163 $generated@@162)) ($generated@@40 $generated@@89 ($generated@@51 $generated@@163 $generated@@162)))
 :pattern ( ($generated@@51 $generated@@163 ($generated@@40 $generated@@163 $generated@@162)))
)))
(assert  (=> (<= 2 $generated@@30) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (or ($generated@@32 $generated@@164 $generated@@165) (and (< 2 $generated@@30) (and ($generated@@33 $generated@@34 $generated@@164 $generated@@35) ($generated@@33 $generated@@34 $generated@@165 $generated@@35)))) (= ($generated@@31 $generated@@164 $generated@@165) (ite ($generated@@48 $generated@@164) $generated@@164 (ite ($generated@@43 $generated@@164) (ite ($generated@@46 $generated@@165) ($generated@@54 ($generated@@66 $generated@@164) ($generated@@67 $generated@@165)) $generated@@164) (ite ($generated@@46 $generated@@164) (ite ($generated@@43 $generated@@165) ($generated@@54 ($generated@@66 $generated@@165) ($generated@@67 $generated@@164)) $generated@@164) $generated@@164)))))
 :pattern ( ($generated@@31 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! ($generated@@26 $generated@@10 $generated@@167 $generated $generated@@166)
 :pattern ( ($generated@@26 $generated@@10 $generated@@167 $generated $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! ($generated@@33 $generated@@10 $generated@@168 $generated)
 :pattern ( ($generated@@33 $generated@@10 $generated@@168 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@175 true))
(let (($generated@@176  (=> ($generated@@46 $generated@@169) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or ($generated@@43 $generated@@170) ($generated@@48 $generated@@170))) (=> (or ($generated@@43 $generated@@170) ($generated@@48 $generated@@170)) (=> (= (ControlFlow 0 11) (- 0 10)) (or ($generated@@46 $generated@@169) ($generated@@48 $generated@@169))))))))
(let (($generated@@177  (=> ($generated@@43 $generated@@170) (and (=> (= (ControlFlow 0 14) 11) $generated@@176) (=> (= (ControlFlow 0 14) 13) $generated@@175)))))
(let (($generated@@178 true))
(let (($generated@@179  (=> ($generated@@43 $generated@@169) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or ($generated@@43 $generated@@169) ($generated@@48 $generated@@169))) (=> (or ($generated@@43 $generated@@169) ($generated@@48 $generated@@169)) (=> (= (ControlFlow 0 5) (- 0 4)) (or ($generated@@46 $generated@@170) ($generated@@48 $generated@@170))))))))
(let (($generated@@180  (=> ($generated@@46 $generated@@170) (and (=> (= (ControlFlow 0 8) 5) $generated@@179) (=> (= (ControlFlow 0 8) 7) $generated@@178)))))
(let (($generated@@181 true))
(let (($generated@@182  (=> (not ($generated@@43 $generated@@170)) (and (=> (= (ControlFlow 0 9) 8) $generated@@180) (=> (= (ControlFlow 0 9) 3) $generated@@181)))))
(let (($generated@@183  (=> (not ($generated@@48 $generated@@170)) (and (=> (= (ControlFlow 0 15) 14) $generated@@177) (=> (= (ControlFlow 0 15) 9) $generated@@182)))))
(let (($generated@@184 true))
(let (($generated@@185 true))
(let (($generated@@186  (=> (= $generated@@171 ($generated@@87 $generated@@172 $generated@@173 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 16) 1) $generated@@185) (=> (= (ControlFlow 0 16) 2) $generated@@184)) (=> (= (ControlFlow 0 16) 15) $generated@@183)))))
(let (($generated@@187  (=> (and ($generated@@143 $generated@@173) ($generated@@174 $generated@@173)) (=> (and (and (and ($generated@@33 $generated@@34 $generated@@170 $generated@@35) ($generated@@26 $generated@@34 $generated@@170 $generated@@35 $generated@@173)) ($generated@@33 $generated@@34 $generated@@169 $generated@@35)) (and (= 2 $generated@@30) (= (ControlFlow 0 17) 16))) $generated@@186))))
$generated@@187))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
