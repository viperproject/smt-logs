(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@T T@T) T@T)
(declare-fun $generated@@55 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@78 (Int) Int)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U T@U) T@U)
(declare-fun $generated@@110 (T@U Int) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@130 (T@U) Int)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@2) 0))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and (or (not (= $generated@@34 $generated@@30)) (not true)) (= ($generated@@31 $generated@@34) ($generated@@29 $generated@@33))) ($generated@@32 $generated@@12 ($generated@@16 ($generated@@28 $generated@@34)) $generated))
 :pattern ( ($generated@@28 $generated@@34) ($generated@@29 $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! ($generated@@35 $generated@@12 $generated@@37 $generated@@36 $generated@@38)
 :pattern ( ($generated@@35 $generated@@12 $generated@@37 $generated@@36 $generated@@38))
)))
(assert (= ($generated@@10 $generated@@39) 3))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@42 ($generated@@40 $generated@@41) $generated@@43) ($generated@@35 $generated@@39 $generated@@42 ($generated@@29 $generated@@41) $generated@@43))
 :pattern ( ($generated@@35 $generated@@39 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
 :pattern ( ($generated@@35 $generated@@39 $generated@@42 ($generated@@29 $generated@@41) $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@46 ($generated@@44 $generated@@45) $generated@@47) ($generated@@35 $generated@@39 $generated@@46 ($generated@@40 $generated@@45) $generated@@47))
 :pattern ( ($generated@@35 $generated@@39 $generated@@46 ($generated@@44 $generated@@45) $generated@@47))
)))
(assert (= ($generated@@48 $generated@@49) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@51 $generated@@58 $generated@@59 ($generated@@55 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@62) $generated@@60)
 :weight 0
)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (or (= $generated@@67 $generated@@68) (= ($generated@@51 $generated@@63 $generated@@64 ($generated@@55 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@68) ($generated@@51 $generated@@63 $generated@@64 $generated@@66 $generated@@68)))
 :weight 0
))) (= ($generated@@10 $generated@@52) 4)) (= ($generated@@10 $generated@@53) 5)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (= ($generated@@10 ($generated@@54 $generated@@69 $generated@@70)) 6))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@56 ($generated@@54 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@54 $generated@@71 $generated@@72))
))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@57 ($generated@@54 $generated@@73 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@54 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@76 ($generated@@29 $generated@@75) $generated@@77)  (or (= $generated@@76 $generated@@30) ($generated@@15 ($generated@@50 $generated@@11 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@77 $generated@@76) $generated@@2)))))
 :pattern ( ($generated@@35 $generated@@39 $generated@@76 ($generated@@29 $generated@@75) $generated@@77))
)))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@78 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ) (!  (=> (and (and (and ($generated@@84 $generated@@87) (and (or (not (= $generated@@88 $generated@@30)) (not true)) (= ($generated@@31 $generated@@88) ($generated@@29 $generated@@86)))) (and (<= 0 $generated@@89) (< $generated@@89 ($generated@@28 $generated@@88)))) ($generated@@15 ($generated@@50 $generated@@11 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@87 $generated@@88) $generated@@2)))) ($generated@@85 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@87 $generated@@88) ($generated@@83 $generated@@89)) $generated@@86 $generated@@87))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@87 $generated@@88) ($generated@@83 $generated@@89)) ($generated@@29 $generated@@86))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@50 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@50 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@94 ($generated@@44 $generated@@93))  (and ($generated@@32 $generated@@39 $generated@@94 ($generated@@40 $generated@@93)) (< ($generated@@28 $generated@@94) 4294967296)))
 :pattern ( ($generated@@32 $generated@@39 $generated@@94 ($generated@@44 $generated@@93)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@96 ($generated@@40 $generated@@95))  (and ($generated@@32 $generated@@39 $generated@@96 ($generated@@29 $generated@@95)) (or (not (= $generated@@96 $generated@@30)) (not true))))
 :pattern ( ($generated@@32 $generated@@39 $generated@@96 ($generated@@40 $generated@@95)))
 :pattern ( ($generated@@32 $generated@@39 $generated@@96 ($generated@@29 $generated@@95)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@85 ($generated@@90 $generated@@100 $generated@@97) $generated@@98 $generated@@99) ($generated@@35 $generated@@100 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@85 ($generated@@90 $generated@@100 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (!  (and (= ($generated@@27 ($generated@@29 $generated@@102)) $generated@@3) (= ($generated@@101 ($generated@@29 $generated@@102)) $generated@@7))
 :pattern ( ($generated@@29 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (and (= ($generated@@27 ($generated@@40 $generated@@103)) $generated@@4) (= ($generated@@101 ($generated@@40 $generated@@103)) $generated@@7))
 :pattern ( ($generated@@40 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (!  (and (= ($generated@@27 ($generated@@44 $generated@@104)) $generated@@6) (= ($generated@@101 ($generated@@44 $generated@@104)) $generated@@9))
 :pattern ( ($generated@@44 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@105 $generated@@106 $generated@@36) (and (= ($generated@@90 $generated@@12 ($generated@@50 $generated@@12 $generated@@106)) $generated@@106) ($generated@@32 $generated@@12 ($generated@@50 $generated@@12 $generated@@106) $generated@@36)))
 :pattern ( ($generated@@105 $generated@@106 $generated@@36))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@108 ($generated@@29 $generated@@107))  (or (= $generated@@108 $generated@@30) (= ($generated@@31 $generated@@108) ($generated@@29 $generated@@107))))
 :pattern ( ($generated@@32 $generated@@39 $generated@@108 ($generated@@29 $generated@@107)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (forall (($generated@@113 Int) ) (!  (=> (and (<= 0 $generated@@113) (< $generated@@113 ($generated@@48 ($generated@@109 $generated@@111 $generated@@112)))) (= ($generated@@110 ($generated@@109 $generated@@111 $generated@@112) $generated@@113) ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@111 $generated@@112) ($generated@@83 $generated@@113))))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@111 $generated@@112) ($generated@@83 $generated@@113)))
 :pattern ( ($generated@@110 ($generated@@109 $generated@@111 $generated@@112) $generated@@113))
))
 :pattern ( ($generated@@109 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@105 $generated@@114 $generated) (and (= ($generated@@90 $generated@@12 ($generated@@50 $generated@@12 $generated@@114)) $generated@@114) ($generated@@32 $generated@@12 ($generated@@50 $generated@@12 $generated@@114) $generated)))
 :pattern ( ($generated@@105 $generated@@114 $generated))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@105 ($generated@@90 $generated@@117 $generated@@115) $generated@@116) ($generated@@32 $generated@@117 $generated@@115 $generated@@116))
 :pattern ( ($generated@@105 ($generated@@90 $generated@@117 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (<= 0 ($generated@@28 $generated@@118))
 :pattern ( ($generated@@28 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! (<= 0 ($generated@@48 $generated@@119))
 :pattern ( ($generated@@48 $generated@@119))
)))
(assert (= ($generated@@10 $generated@@120) 7))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@35 $generated@@120 $generated@@122 ($generated@@121 $generated@@123) $generated@@124) (forall (($generated@@125 Int) ) (!  (=> (and (<= 0 $generated@@125) (< $generated@@125 ($generated@@48 $generated@@122))) ($generated@@85 ($generated@@110 $generated@@122 $generated@@125) $generated@@123 $generated@@124))
 :pattern ( ($generated@@110 $generated@@122 $generated@@125))
)))
 :pattern ( ($generated@@35 $generated@@120 $generated@@122 ($generated@@121 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@121 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@121 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@27 ($generated@@121 $generated@@128)) $generated@@1)
 :pattern ( ($generated@@121 $generated@@128))
)))
(assert (forall (($generated@@129 Int) ) (! (= ($generated@@26 ($generated@@83 $generated@@129)) 1)
 :pattern ( ($generated@@83 $generated@@129))
)))
(assert (forall (($generated@@131 Int) ) (! (= ($generated@@130 ($generated@@83 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@83 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@29 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@29 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@134 ($generated@@40 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@40 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@136 ($generated@@44 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@44 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@50 $generated@@139 ($generated@@90 $generated@@139 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@90 $generated@@139 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and ($generated@@84 $generated@@141) (and (or (not (= $generated@@142 $generated@@30)) (not true)) (= ($generated@@31 $generated@@142) ($generated@@29 $generated@@140)))) ($generated@@15 ($generated@@50 $generated@@11 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@141 $generated@@142) $generated@@2)))) ($generated@@35 $generated@@12 ($generated@@16 ($generated@@28 $generated@@142)) $generated $generated@@141))
 :pattern ( ($generated@@28 $generated@@142) ($generated@@50 $generated@@11 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@141 $generated@@142) $generated@@2)) ($generated@@29 $generated@@140))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Int) ) (!  (=> (and (and ($generated@@84 $generated@@144) (and (or (not (= $generated@@145 $generated@@30)) (not true)) (= ($generated@@31 $generated@@145) ($generated@@29 $generated@@143)))) (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@28 $generated@@145)))) ($generated@@105 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@144 $generated@@145) ($generated@@83 $generated@@146)) $generated@@143))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@144 $generated@@145) ($generated@@83 $generated@@146)) ($generated@@29 $generated@@143))
)))
(assert  (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@147 $generated@@150 $generated@@151 $generated@@152 ($generated@@149 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@155 $generated@@156) $generated@@153)
 :weight 0
)) (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@147 $generated@@157 $generated@@158 $generated@@159 ($generated@@149 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@147 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@147 $generated@@166 $generated@@167 $generated@@168 ($generated@@149 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@147 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@15 ($generated@@147 $generated@@39 $generated@@52 $generated@@11 ($generated@@148 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))  (=> (and (or (not (= $generated@@179 $generated@@175)) (not true)) ($generated@@15 ($generated@@50 $generated@@11 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@39 ($generated@@54 $generated@@52 $generated@@53) $generated@@176 $generated@@179) $generated@@177)))) $generated@@178))
 :pattern ( ($generated@@147 $generated@@39 $generated@@52 $generated@@11 ($generated@@148 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@48 ($generated@@109 $generated@@181 $generated@@182)) ($generated@@28 $generated@@182))
 :pattern ( ($generated@@48 ($generated@@109 $generated@@181 $generated@@182)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@105 $generated@@183 ($generated@@121 $generated@@184)) (and (= ($generated@@90 $generated@@120 ($generated@@50 $generated@@120 $generated@@183)) $generated@@183) ($generated@@32 $generated@@120 ($generated@@50 $generated@@120 $generated@@183) ($generated@@121 $generated@@184))))
 :pattern ( ($generated@@105 $generated@@183 ($generated@@121 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@105 $generated@@186 ($generated@@29 $generated@@185)) (and (= ($generated@@90 $generated@@39 ($generated@@50 $generated@@39 $generated@@186)) $generated@@186) ($generated@@32 $generated@@39 ($generated@@50 $generated@@39 $generated@@186) ($generated@@29 $generated@@185))))
 :pattern ( ($generated@@105 $generated@@186 ($generated@@29 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@105 $generated@@188 ($generated@@40 $generated@@187)) (and (= ($generated@@90 $generated@@39 ($generated@@50 $generated@@39 $generated@@188)) $generated@@188) ($generated@@32 $generated@@39 ($generated@@50 $generated@@39 $generated@@188) ($generated@@40 $generated@@187))))
 :pattern ( ($generated@@105 $generated@@188 ($generated@@40 $generated@@187)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@105 $generated@@190 ($generated@@44 $generated@@189)) (and (= ($generated@@90 $generated@@39 ($generated@@50 $generated@@39 $generated@@190)) $generated@@190) ($generated@@32 $generated@@39 ($generated@@50 $generated@@39 $generated@@190) ($generated@@44 $generated@@189))))
 :pattern ( ($generated@@105 $generated@@190 ($generated@@44 $generated@@189)))
)))
(assert (= ($generated@@27 $generated@@36) $generated@@5))
(assert (= ($generated@@101 $generated@@36) $generated@@8))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@32 $generated@@12 $generated@@191 $generated@@36)  (and (<= ($generated@@78 0) ($generated@@17 $generated@@191)) (< ($generated@@17 $generated@@191) 256)))
 :pattern ( ($generated@@32 $generated@@12 $generated@@191 $generated@@36))
)))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@90 $generated@@12 ($generated@@16 ($generated@@78 $generated@@192))) ($generated@@80 $generated@@53 ($generated@@90 $generated@@12 ($generated@@16 $generated@@192))))
 :pattern ( ($generated@@90 $generated@@12 ($generated@@16 ($generated@@78 $generated@@192))))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@T) ) (! (= ($generated@@90 $generated@@194 ($generated@@80 $generated@@194 $generated@@193)) ($generated@@80 $generated@@53 ($generated@@90 $generated@@194 $generated@@193)))
 :pattern ( ($generated@@90 $generated@@194 ($generated@@80 $generated@@194 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> (= ($generated@@48 $generated@@195) 0) (= $generated@@195 $generated@@49))
 :pattern ( ($generated@@48 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! ($generated@@35 $generated@@12 $generated@@197 $generated $generated@@196)
 :pattern ( ($generated@@35 $generated@@12 $generated@@197 $generated $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@32 $generated@@120 $generated@@198 ($generated@@121 $generated@@199)) (forall (($generated@@200 Int) ) (!  (=> (and (<= 0 $generated@@200) (< $generated@@200 ($generated@@48 $generated@@198))) ($generated@@105 ($generated@@110 $generated@@198 $generated@@200) $generated@@199))
 :pattern ( ($generated@@110 $generated@@198 $generated@@200))
)))
 :pattern ( ($generated@@32 $generated@@120 $generated@@198 ($generated@@121 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ) (! ($generated@@32 $generated@@12 $generated@@201 $generated)
 :pattern ( ($generated@@32 $generated@@12 $generated@@201 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@208  (=> (and (= $generated@@202 ($generated@@148 $generated@@30 $generated@@203 $generated@@2 false)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@204 $generated@@30)) (not true)))))
(let (($generated@@209  (=> (and (and ($generated@@84 $generated@@203) ($generated@@205 $generated@@203)) (and ($generated@@32 $generated@@39 $generated@@204 ($generated@@44 $generated@@36)) ($generated@@35 $generated@@39 $generated@@204 ($generated@@44 $generated@@36) $generated@@203))) (=> (and (and (and ($generated@@32 $generated@@120 $generated@@206 ($generated@@121 $generated@@36)) ($generated@@35 $generated@@120 $generated@@206 ($generated@@121 $generated@@36) $generated@@203)) true) (and (= 2 $generated@@207) (= (ControlFlow 0 3) 2))) $generated@@208))))
$generated@@209)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
