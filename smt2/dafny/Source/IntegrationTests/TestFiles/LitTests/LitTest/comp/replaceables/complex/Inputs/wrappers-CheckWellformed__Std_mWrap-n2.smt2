(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U T@U T@U) Bool)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@53 (T@U T@U T@U) Bool)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@95 (T@U) Int)
(declare-fun $generated@@96 (T@U) Int)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@103 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@T) T@T)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@4 $generated@@24) 3))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (or ($generated@@22 $generated@@28 $generated@@29 $generated@@30) (and (< 0 $generated@@20) (and ($generated@@23 $generated@@24 $generated@@30 ($generated@@25 $generated@@28 $generated@@29)) ($generated@@26 $generated@@30)))) ($generated@@27 ($generated@@21 $generated@@28 $generated@@29 $generated@@30) $generated@@28))
 :pattern ( ($generated@@21 $generated@@28 $generated@@29 $generated@@30))
))))
(assert (= ($generated@@4 $generated@@32) 4))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@22 $generated@@34 $generated@@35 ($generated@@31 $generated@@24 $generated@@36)) (and (< 0 $generated@@20) (and ($generated@@23 $generated@@24 $generated@@36 ($generated@@25 $generated@@34 $generated@@35)) ($generated@@9 ($generated@@31 $generated@@5 ($generated@@8 ($generated@@26 ($generated@@31 $generated@@24 $generated@@36)))))))) (= ($generated@@21 $generated@@34 $generated@@35 ($generated@@31 $generated@@24 $generated@@36)) ($generated@@31 $generated@@32 ($generated@@33 ($generated@@31 $generated@@24 $generated@@36)))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@34 $generated@@35 ($generated@@31 $generated@@24 $generated@@36)))
))))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@31 $generated@@38 $generated@@37) $generated@@37)
 :pattern ( ($generated@@31 $generated@@38 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@26 $generated@@40) (= ($generated@@39 $generated@@40) $generated@@1))
 :pattern ( ($generated@@26 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@41 $generated@@42) (= ($generated@@39 $generated@@42) $generated@@2))
 :pattern ( ($generated@@41 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 ($generated@@43 $generated@@46 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@43 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ) (!  (=> ($generated@@26 $generated@@48) (exists (($generated@@49 T@U) ) (= $generated@@48 ($generated@@47 $generated@@49))))
 :pattern ( ($generated@@26 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ) (!  (=> ($generated@@41 $generated@@51) (exists (($generated@@52 T@U) ) (= $generated@@51 ($generated@@50 $generated@@52))))
 :pattern ( ($generated@@41 $generated@@51))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@53 ($generated@@44 $generated@@58 $generated@@55) $generated@@56 $generated@@57) ($generated@@54 $generated@@58 $generated@@55 $generated@@56 $generated@@57))
 :pattern ( ($generated@@53 ($generated@@44 $generated@@58 $generated@@55) $generated@@56 $generated@@57))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (and (or ($generated@@22 $generated@@61 $generated@@62 $generated@@63) (and (< 0 $generated@@20) (and ($generated@@54 $generated@@24 $generated@@63 ($generated@@25 $generated@@61 $generated@@62) $generated@@60) ($generated@@26 $generated@@63)))) ($generated@@59 $generated@@60)) ($generated@@53 ($generated@@21 $generated@@61 $generated@@62 $generated@@63) $generated@@61 $generated@@60))
 :pattern ( ($generated@@53 ($generated@@21 $generated@@61 $generated@@62 $generated@@63) $generated@@61 $generated@@60))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@66 ($generated@@25 $generated@@64 $generated@@65)) (or ($generated@@26 $generated@@66) ($generated@@41 $generated@@66)))
 :pattern ( ($generated@@41 $generated@@66) ($generated@@23 $generated@@24 $generated@@66 ($generated@@25 $generated@@64 $generated@@65)))
 :pattern ( ($generated@@26 $generated@@66) ($generated@@23 $generated@@24 $generated@@66 ($generated@@25 $generated@@64 $generated@@65)))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@27 ($generated@@44 $generated@@69 $generated@@67) $generated@@68) ($generated@@23 $generated@@69 $generated@@67 $generated@@68))
 :pattern ( ($generated@@27 ($generated@@44 $generated@@69 $generated@@67) $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@70 ($generated@@25 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@25 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@73 ($generated@@25 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@25 $generated@@74 $generated@@75))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (or ($generated@@22 $generated@@76 $generated@@77 $generated@@78) (and (< 0 $generated@@20) (and ($generated@@23 $generated@@24 $generated@@78 ($generated@@25 $generated@@76 $generated@@77)) ($generated@@26 $generated@@78)))) (= ($generated@@21 $generated@@76 $generated@@77 $generated@@78) ($generated@@33 $generated@@78)))
 :pattern ( ($generated@@21 $generated@@76 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@47 $generated@@81) ($generated@@25 $generated@@79 $generated@@80)) ($generated@@27 $generated@@81 $generated@@79))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@47 $generated@@81) ($generated@@25 $generated@@79 $generated@@80)))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@50 $generated@@84) ($generated@@25 $generated@@82 $generated@@83)) ($generated@@27 $generated@@84 $generated@@83))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@50 $generated@@84) ($generated@@25 $generated@@82 $generated@@83)))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@39 ($generated@@47 $generated@@85)) $generated@@1)
 :pattern ( ($generated@@47 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@33 ($generated@@47 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@47 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@39 ($generated@@50 $generated@@87)) $generated@@2)
 :pattern ( ($generated@@50 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 ($generated@@50 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@50 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@43 $generated@@91 ($generated@@44 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@44 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@27 $generated@@94 ($generated@@25 $generated@@92 $generated@@93)) (and (= ($generated@@44 $generated@@24 ($generated@@43 $generated@@24 $generated@@94)) $generated@@94) ($generated@@23 $generated@@24 ($generated@@43 $generated@@24 $generated@@94) ($generated@@25 $generated@@92 $generated@@93))))
 :pattern ( ($generated@@27 $generated@@94 ($generated@@25 $generated@@92 $generated@@93)))
)))
(assert (forall (($generated@@97 T@U) ) (! (< ($generated@@95 $generated@@97) ($generated@@96 ($generated@@47 $generated@@97)))
 :pattern ( ($generated@@47 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ) (! (< ($generated@@95 $generated@@98) ($generated@@96 ($generated@@50 $generated@@98)))
 :pattern ( ($generated@@50 $generated@@98))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@99 $generated@@109 $generated@@110 $generated@@111 ($generated@@105 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@114 $generated@@115) $generated@@112)
 :weight 0
)) (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@99 $generated@@116 $generated@@117 $generated@@118 ($generated@@105 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@99 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@99 $generated@@125 $generated@@126 $generated@@127 ($generated@@105 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@99 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)))) (= ($generated@@4 $generated@@100) 5)) (= ($generated@@4 $generated@@101) 6)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@103 $generated@@134 $generated@@135 ($generated@@106 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@136) $generated@@138) $generated@@136)
 :weight 0
))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@103 $generated@@139 $generated@@140 ($generated@@106 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@103 $generated@@139 $generated@@140 $generated@@142 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@4 ($generated@@104 $generated@@145 $generated@@146)) 7))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@107 ($generated@@104 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@104 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@108 ($generated@@104 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@104 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@9 ($generated@@99 $generated@@100 $generated@@101 $generated@@5 ($generated@@102 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))  (=> (and (or (not (= $generated@@155 $generated@@151)) (not true)) ($generated@@9 ($generated@@43 $generated@@5 ($generated@@103 $generated@@101 $generated@@32 ($generated@@103 $generated@@100 ($generated@@104 $generated@@101 $generated@@32) $generated@@152 $generated@@155) $generated@@153)))) $generated@@154))
 :pattern ( ($generated@@99 $generated@@100 $generated@@101 $generated@@5 ($generated@@102 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (and (= ($generated@@157 ($generated@@25 $generated@@159 $generated@@160)) $generated@@0) (= ($generated@@158 ($generated@@25 $generated@@159 $generated@@160)) $generated@@3))
 :pattern ( ($generated@@25 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@95 ($generated@@44 $generated@@24 $generated@@161)) ($generated@@96 $generated@@161))
 :pattern ( ($generated@@95 ($generated@@44 $generated@@24 $generated@@161)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and ($generated@@59 $generated@@164) (and ($generated@@26 $generated@@162) (exists (($generated@@165 T@U) ) (! ($generated@@54 $generated@@24 $generated@@162 ($generated@@25 $generated@@163 $generated@@165) $generated@@164)
 :pattern ( ($generated@@54 $generated@@24 $generated@@162 ($generated@@25 $generated@@163 $generated@@165) $generated@@164))
)))) ($generated@@53 ($generated@@33 $generated@@162) $generated@@163 $generated@@164))
 :pattern ( ($generated@@53 ($generated@@33 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and ($generated@@59 $generated@@168) (and ($generated@@41 $generated@@166) (exists (($generated@@169 T@U) ) (! ($generated@@54 $generated@@24 $generated@@166 ($generated@@25 $generated@@169 $generated@@167) $generated@@168)
 :pattern ( ($generated@@54 $generated@@24 $generated@@166 ($generated@@25 $generated@@169 $generated@@167) $generated@@168))
)))) ($generated@@53 ($generated@@88 $generated@@166) $generated@@167 $generated@@168))
 :pattern ( ($generated@@53 ($generated@@88 $generated@@166) $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@59 $generated@@173) (= ($generated@@54 $generated@@24 ($generated@@47 $generated@@172) ($generated@@25 $generated@@170 $generated@@171) $generated@@173) ($generated@@53 $generated@@172 $generated@@170 $generated@@173)))
 :pattern ( ($generated@@54 $generated@@24 ($generated@@47 $generated@@172) ($generated@@25 $generated@@170 $generated@@171) $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@59 $generated@@177) (= ($generated@@54 $generated@@24 ($generated@@50 $generated@@176) ($generated@@25 $generated@@174 $generated@@175) $generated@@177) ($generated@@53 $generated@@176 $generated@@175 $generated@@177)))
 :pattern ( ($generated@@54 $generated@@24 ($generated@@50 $generated@@176) ($generated@@25 $generated@@174 $generated@@175) $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@47 ($generated@@31 $generated@@32 $generated@@178)) ($generated@@31 $generated@@24 ($generated@@47 $generated@@178)))
 :pattern ( ($generated@@47 ($generated@@31 $generated@@32 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@50 ($generated@@31 $generated@@32 $generated@@179)) ($generated@@31 $generated@@24 ($generated@@50 $generated@@179)))
 :pattern ( ($generated@@50 ($generated@@31 $generated@@32 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@44 $generated@@181 ($generated@@31 $generated@@181 $generated@@180)) ($generated@@31 $generated@@32 ($generated@@44 $generated@@181 $generated@@180)))
 :pattern ( ($generated@@44 $generated@@181 ($generated@@31 $generated@@181 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@189  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@26 $generated@@182))))
(let (($generated@@190 true))
(let (($generated@@191  (=> (and (= $generated@@183 ($generated@@102 $generated@@184 $generated@@185 $generated false)) ($generated@@26 $generated@@182)) (and (=> (= (ControlFlow 0 4) 1) $generated@@190) (=> (= (ControlFlow 0 4) 3) $generated@@189)))))
(let (($generated@@192  (=> (and ($generated@@59 $generated@@185) ($generated@@186 $generated@@185)) (=> (and (and ($generated@@23 $generated@@24 $generated@@182 ($generated@@25 $generated@@187 $generated@@188)) ($generated@@54 $generated@@24 $generated@@182 ($generated@@25 $generated@@187 $generated@@188) $generated@@185)) (and (= 0 $generated@@20) (= (ControlFlow 0 5) 4))) $generated@@191))))
$generated@@192)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
