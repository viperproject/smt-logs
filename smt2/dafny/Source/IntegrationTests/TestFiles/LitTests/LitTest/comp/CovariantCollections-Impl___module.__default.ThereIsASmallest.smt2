(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@45 (T@U T@U T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@93 (T@T T@U) T@U)
(declare-fun $generated@@96 () Int)
(declare-fun $generated@@97 (T@U) Int)
(declare-fun $generated@@98 (T@T T@U T@U) Bool)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@119 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@27 ($generated@@26 $generated@@28 $generated@@29) $generated@@29)
 :pattern ( ($generated@@26 $generated@@28 $generated@@29))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@30 $generated@@32) ($generated@@27 ($generated@@26 $generated@@30 $generated@@31) $generated@@32))
 :pattern ( ($generated@@26 $generated@@30 $generated@@31) ($generated@@27 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@27 ($generated@@26 $generated@@33 $generated@@34) $generated@@35)  (or (= $generated@@35 $generated@@34) ($generated@@27 $generated@@33 $generated@@35)))
 :pattern ( ($generated@@27 ($generated@@26 $generated@@33 $generated@@34) $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> ($generated@@27 $generated@@38 $generated@@39) (not ($generated@@27 ($generated@@36 $generated@@37 $generated@@38) $generated@@39)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38) ($generated@@27 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ) (!  (not ($generated@@27 $generated@@40 $generated@@41))
 :pattern ( ($generated@@27 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@27 ($generated@@36 $generated@@42 $generated@@43) $generated@@44)  (and ($generated@@27 $generated@@42 $generated@@44) (not ($generated@@27 $generated@@43 $generated@@44))))
 :pattern ( ($generated@@27 ($generated@@36 $generated@@42 $generated@@43) $generated@@44))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (and ($generated@@45 $generated@@49 $generated@@46 $generated@@50) ($generated@@47 $generated@@50)) ($generated@@45 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@45 $generated@@49 $generated@@46 $generated@@50))
)))
(assert (= ($generated@@9 $generated@@52) 3))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@54 $generated@@53 $generated@@55) ($generated@@51 $generated@@52 $generated@@54 $generated@@48 $generated@@55))
 :pattern ( ($generated@@51 $generated@@52 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@51 $generated@@52 $generated@@54 $generated@@48 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@57 $generated@@56 $generated@@58) ($generated@@51 $generated@@52 $generated@@57 $generated@@46 $generated@@58))
 :pattern ( ($generated@@51 $generated@@52 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@51 $generated@@52 $generated@@57 $generated@@46 $generated@@58))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@61 $generated@@68 $generated@@69 ($generated@@65 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@72) $generated@@70)
 :weight 0
)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@61 $generated@@73 $generated@@74 ($generated@@65 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@61 $generated@@73 $generated@@74 $generated@@76 $generated@@78)))
 :weight 0
))) (= ($generated@@9 $generated@@62) 4)) (= ($generated@@9 $generated@@63) 5)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (= ($generated@@9 ($generated@@64 $generated@@79 $generated@@80)) 6))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@66 ($generated@@64 $generated@@81 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@64 $generated@@81 $generated@@82))
))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@83 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@64 $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@85 $generated@@48 $generated@@86)  (or (= $generated@@85 $generated@@59) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@52 ($generated@@64 $generated@@62 $generated@@63) $generated@@86 $generated@@85) $generated@@2)))))
 :pattern ( ($generated@@51 $generated@@52 $generated@@85 $generated@@48 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@87 $generated@@46 $generated@@88)  (or (= $generated@@87 $generated@@59) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@52 ($generated@@64 $generated@@62 $generated@@63) $generated@@88 $generated@@87) $generated@@2)))))
 :pattern ( ($generated@@51 $generated@@52 $generated@@87 $generated@@46 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@89 $generated@@90 $generated@@91) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@27 $generated@@90 $generated@@92) ($generated@@27 $generated@@91 $generated@@92))
 :pattern ( ($generated@@27 $generated@@90 $generated@@92))
 :pattern ( ($generated@@27 $generated@@91 $generated@@92))
)))
 :pattern ( ($generated@@89 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@93 $generated@@95 ($generated@@60 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@60 $generated@@95 $generated@@94))
)))
(assert  (=> (< 0 $generated@@96) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and (and ($generated@@47 $generated@@99) (and (or (not (= $generated@@100 $generated@@59)) (not true)) ($generated@@98 $generated@@52 $generated@@100 $generated@@46))) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@52 ($generated@@64 $generated@@62 $generated@@63) $generated@@99 $generated@@100) $generated@@2)))) ($generated@@51 $generated@@11 ($generated@@15 ($generated@@97 $generated@@100)) $generated $generated@@99))
 :pattern ( ($generated@@97 $generated@@100) ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@52 ($generated@@64 $generated@@62 $generated@@63) $generated@@99 $generated@@100) $generated@@2)))
))))
(assert (= ($generated@@9 $generated@@101) 7))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@98 $generated@@101 $generated@@104 ($generated@@102 $generated@@105)) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@27 $generated@@104 $generated@@106) ($generated@@103 $generated@@106 $generated@@105))
 :pattern ( ($generated@@27 $generated@@104 $generated@@106))
)))
 :pattern ( ($generated@@98 $generated@@101 $generated@@104 ($generated@@102 $generated@@105)))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@45 ($generated@@93 $generated@@110 $generated@@107) $generated@@108 $generated@@109) ($generated@@51 $generated@@110 $generated@@107 $generated@@108 $generated@@109))
 :pattern ( ($generated@@45 ($generated@@93 $generated@@110 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@103 $generated@@111 $generated@@48) (and (= ($generated@@93 $generated@@52 ($generated@@60 $generated@@52 $generated@@111)) $generated@@111) ($generated@@98 $generated@@52 ($generated@@60 $generated@@52 $generated@@111) $generated@@48)))
 :pattern ( ($generated@@103 $generated@@111 $generated@@48))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@103 $generated@@112 $generated@@53) (and (= ($generated@@93 $generated@@52 ($generated@@60 $generated@@52 $generated@@112)) $generated@@112) ($generated@@98 $generated@@52 ($generated@@60 $generated@@52 $generated@@112) $generated@@53)))
 :pattern ( ($generated@@103 $generated@@112 $generated@@53))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@103 $generated@@113 $generated@@56) (and (= ($generated@@93 $generated@@52 ($generated@@60 $generated@@52 $generated@@113)) $generated@@113) ($generated@@98 $generated@@52 ($generated@@60 $generated@@52 $generated@@113) $generated@@56)))
 :pattern ( ($generated@@103 $generated@@113 $generated@@56))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@103 $generated@@114 $generated@@46) (and (= ($generated@@93 $generated@@52 ($generated@@60 $generated@@52 $generated@@114)) $generated@@114) ($generated@@98 $generated@@52 ($generated@@60 $generated@@52 $generated@@114) $generated@@46)))
 :pattern ( ($generated@@103 $generated@@114 $generated@@46))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@98 $generated@@52 $generated@@115 $generated@@53)  (and ($generated@@98 $generated@@52 $generated@@115 $generated@@48) (or (not (= $generated@@115 $generated@@59)) (not true))))
 :pattern ( ($generated@@98 $generated@@52 $generated@@115 $generated@@53))
 :pattern ( ($generated@@98 $generated@@52 $generated@@115 $generated@@48))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@98 $generated@@52 $generated@@116 $generated@@56)  (and ($generated@@98 $generated@@52 $generated@@116 $generated@@46) (or (not (= $generated@@116 $generated@@59)) (not true))))
 :pattern ( ($generated@@98 $generated@@52 $generated@@116 $generated@@56))
 :pattern ( ($generated@@98 $generated@@52 $generated@@116 $generated@@46))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@51 $generated@@52 $generated@@117 $generated@@46 $generated@@118) ($generated@@51 $generated@@52 $generated@@117 $generated@@48 $generated@@118))
 :pattern ( ($generated@@51 $generated@@52 $generated@@117 $generated@@46 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> ($generated@@119 $generated@@120 $generated@@121) (= $generated@@120 $generated@@121))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@103 $generated@@122 $generated) (and (= ($generated@@93 $generated@@11 ($generated@@60 $generated@@11 $generated@@122)) $generated@@122) ($generated@@98 $generated@@11 ($generated@@60 $generated@@11 $generated@@122) $generated)))
 :pattern ( ($generated@@103 $generated@@122 $generated))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@103 ($generated@@93 $generated@@125 $generated@@123) $generated@@124) ($generated@@98 $generated@@125 $generated@@123 $generated@@124))
 :pattern ( ($generated@@103 ($generated@@93 $generated@@125 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@51 $generated@@101 $generated@@126 ($generated@@102 $generated@@127) $generated@@128) (forall (($generated@@129 T@U) ) (!  (=> ($generated@@27 $generated@@126 $generated@@129) ($generated@@45 $generated@@129 $generated@@127 $generated@@128))
 :pattern ( ($generated@@27 $generated@@126 $generated@@129))
)))
 :pattern ( ($generated@@51 $generated@@101 $generated@@126 ($generated@@102 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! ($generated@@98 $generated@@52 $generated@@130 $generated@@48)
 :pattern ( ($generated@@98 $generated@@52 $generated@@130 $generated@@48))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@102 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@102 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@25 ($generated@@102 $generated@@133)) $generated@@1)
 :pattern ( ($generated@@102 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@60 $generated@@135 ($generated@@93 $generated@@135 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@93 $generated@@135 $generated@@134))
)))
(assert  (=> (< 0 $generated@@96) (forall (($generated@@136 T@U) ) (!  (=> (and (or (not (= $generated@@136 $generated@@59)) (not true)) ($generated@@98 $generated@@52 $generated@@136 $generated@@46)) ($generated@@98 $generated@@11 ($generated@@15 ($generated@@97 $generated@@136)) $generated))
 :pattern ( ($generated@@97 $generated@@136))
))))
(assert  (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@137 $generated@@140 $generated@@141 $generated@@142 ($generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@145 $generated@@146) $generated@@143)
 :weight 0
)) (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@137 $generated@@147 $generated@@148 $generated@@149 ($generated@@139 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@137 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@137 $generated@@156 $generated@@157 $generated@@158 ($generated@@139 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@137 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@14 ($generated@@137 $generated@@52 $generated@@62 $generated@@10 ($generated@@138 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (or (not (= $generated@@169 $generated@@165)) (not true)) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@52 ($generated@@64 $generated@@62 $generated@@63) $generated@@166 $generated@@169) $generated@@167)))) $generated@@168))
 :pattern ( ($generated@@137 $generated@@52 $generated@@62 $generated@@10 ($generated@@138 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@103 $generated@@171 ($generated@@102 $generated@@172)) (and (= ($generated@@93 $generated@@101 ($generated@@60 $generated@@101 $generated@@171)) $generated@@171) ($generated@@98 $generated@@101 ($generated@@60 $generated@@101 $generated@@171) ($generated@@102 $generated@@172))))
 :pattern ( ($generated@@103 $generated@@171 ($generated@@102 $generated@@172)))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> ($generated@@98 $generated@@52 $generated@@173 $generated@@46) ($generated@@98 $generated@@52 $generated@@173 $generated@@48))
 :pattern ( ($generated@@98 $generated@@52 $generated@@173 $generated@@46))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> ($generated@@103 $generated@@174 $generated@@46) ($generated@@103 $generated@@174 $generated@@48))
 :pattern ( ($generated@@103 $generated@@174 $generated@@46))
)))
(assert (= ($generated@@25 $generated@@48) $generated@@3))
(assert (= ($generated@@175 $generated@@48) $generated@@7))
(assert (= ($generated@@25 $generated@@53) $generated@@4))
(assert (= ($generated@@175 $generated@@53) $generated@@7))
(assert (= ($generated@@25 $generated@@56) $generated@@5))
(assert (= ($generated@@175 $generated@@56) $generated@@8))
(assert (= ($generated@@25 $generated@@46) $generated@@6))
(assert (= ($generated@@175 $generated@@46) $generated@@8))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@98 $generated@@52 $generated@@178 $generated@@46)  (or (= $generated@@178 $generated@@59) ($generated@@176 ($generated@@177 $generated@@178))))
 :pattern ( ($generated@@98 $generated@@52 $generated@@178 $generated@@46))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@119 $generated@@179 $generated@@180) (forall (($generated@@181 T@U) ) (! (= ($generated@@27 $generated@@179 $generated@@181) ($generated@@27 $generated@@180 $generated@@181))
 :pattern ( ($generated@@27 $generated@@179 $generated@@181))
 :pattern ( ($generated@@27 $generated@@180 $generated@@181))
)))
 :pattern ( ($generated@@119 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! ($generated@@51 $generated@@11 $generated@@183 $generated $generated@@182)
 :pattern ( ($generated@@51 $generated@@11 $generated@@183 $generated $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@98 $generated@@11 $generated@@184 $generated)
 :pattern ( ($generated@@98 $generated@@11 $generated@@184 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () Bool)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@202  (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@186))) (=> ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@186)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@203 T@U) ) (!  (=> ($generated@@98 $generated@@52 $generated@@203 $generated@@56) (=> ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@203)) (<= ($generated@@97 $generated@@186) ($generated@@97 $generated@@203))))
 :pattern ( ($generated@@97 $generated@@203))
 :pattern ( ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@203)))
))))))))
(let (($generated@@204  (=> (not (exists (($generated@@205 T@U) ) (!  (and ($generated@@98 $generated@@52 $generated@@205 $generated@@56) (and ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@205)) (< ($generated@@97 $generated@@205) ($generated@@97 $generated@@187))))
 :pattern ( ($generated@@97 $generated@@205))
 :pattern ( ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@205)))
))) (=> (and (= $generated@@186 $generated@@187) (= (ControlFlow 0 10) 2)) $generated@@202))))
(let (($generated@@206  (=> (and ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@188)) (< ($generated@@97 $generated@@188) ($generated@@97 $generated@@187))) (and (=> (= (ControlFlow 0 5) (- 0 9)) true) (=> (= $generated@@189 ($generated@@36 $generated@@185 ($generated@@26 $generated@@40 ($generated@@93 $generated@@52 $generated@@187)))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@27 $generated@@189 ($generated@@93 $generated@@52 $generated@@188))) (=> ($generated@@27 $generated@@189 ($generated@@93 $generated@@52 $generated@@188)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and ($generated@@89 $generated@@189 $generated@@185) (not ($generated@@89 $generated@@185 $generated@@189)))) (=> (and ($generated@@89 $generated@@189 $generated@@185) (not ($generated@@89 $generated@@185 $generated@@189))) (=> (and ($generated@@98 $generated@@52 $generated@@190 $generated@@56) ($generated@@51 $generated@@52 $generated@@190 $generated@@56 $generated@@191)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not ($generated@@119 $generated@@189 $generated@@40))) (=> (not ($generated@@119 $generated@@189 $generated@@40)) (=> (and ($generated@@47 $generated@@192) ($generated@@193 $generated@@192)) (=> (and (and (and ($generated@@98 $generated@@52 $generated@@194 $generated@@56) ($generated@@51 $generated@@52 $generated@@194 $generated@@56 $generated@@192)) ($generated@@27 $generated@@189 ($generated@@93 $generated@@52 $generated@@194))) (and (and (forall (($generated@@207 T@U) ) (!  (=> ($generated@@98 $generated@@52 $generated@@207 $generated@@56) (=> ($generated@@27 $generated@@189 ($generated@@93 $generated@@52 $generated@@207)) (<= ($generated@@97 $generated@@194) ($generated@@97 $generated@@207))))
 :pattern ( ($generated@@97 $generated@@207))
 :pattern ( ($generated@@27 $generated@@189 ($generated@@93 $generated@@52 $generated@@207)))
)) (= $generated@@191 $generated@@192)) (and (= $generated@@186 $generated@@194) (= (ControlFlow 0 5) 2)))) $generated@@202))))))))))))))
(let (($generated@@208  (=> (and ($generated@@98 $generated@@52 $generated@@188 $generated@@56) ($generated@@51 $generated@@52 $generated@@188 $generated@@56 $generated@@191)) (and (=> (= (ControlFlow 0 11) 5) $generated@@206) (=> (= (ControlFlow 0 11) 10) $generated@@204)))))
(let (($generated@@209  (=> (and (not ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@195))) (= (ControlFlow 0 17) 11)) $generated@@208)))
(let (($generated@@210  (=> ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@195)) (and (=> (= (ControlFlow 0 13) (- 0 16)) (or (not (= $generated@@195 $generated@@59)) (not true))) (=> (or (not (= $generated@@195 $generated@@59)) (not true)) (and (=> (= (ControlFlow 0 13) (- 0 15)) true) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (not (= $generated@@187 $generated@@59)) (not true))) (=> (or (not (= $generated@@187 $generated@@59)) (not true)) (=> (= (ControlFlow 0 13) 11) $generated@@208)))))))))
(let (($generated@@211  (=> (and ($generated@@98 $generated@@52 $generated@@195 $generated@@56) ($generated@@51 $generated@@52 $generated@@195 $generated@@56 $generated@@191)) (and (=> (= (ControlFlow 0 18) 13) $generated@@210) (=> (= (ControlFlow 0 18) 17) $generated@@209)))))
(let (($generated@@212  (=> (and (not (and ($generated@@98 $generated@@52 $generated@@195 $generated@@56) ($generated@@51 $generated@@52 $generated@@195 $generated@@56 $generated@@191))) (= (ControlFlow 0 12) 11)) $generated@@208)))
(let (($generated@@213  (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (and ($generated@@98 $generated@@52 $generated@@59 $generated@@56) ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@59))) (exists (($generated@@214 T@U) )  (and ($generated@@98 $generated@@52 $generated@@214 $generated@@56) ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@214)))))) (=> (or (and ($generated@@98 $generated@@52 $generated@@59 $generated@@56) ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@59))) (exists (($generated@@215 T@U) )  (and ($generated@@98 $generated@@52 $generated@@215 $generated@@56) ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@215))))) (=> (and (=> true (and ($generated@@98 $generated@@52 $generated@@187 $generated@@56) ($generated@@51 $generated@@52 $generated@@187 $generated@@56 $generated@@191))) ($generated@@27 $generated@@185 ($generated@@93 $generated@@52 $generated@@187))) (and (=> (= (ControlFlow 0 19) 18) $generated@@211) (=> (= (ControlFlow 0 19) 12) $generated@@212)))))))
(let (($generated@@216  (=> (and (not (and ($generated@@98 $generated@@52 $generated@@196 $generated@@56) ($generated@@51 $generated@@52 $generated@@196 $generated@@56 $generated@@191))) (= (ControlFlow 0 22) 19)) $generated@@213)))
(let (($generated@@217  (=> (and (and ($generated@@98 $generated@@52 $generated@@196 $generated@@56) ($generated@@51 $generated@@52 $generated@@196 $generated@@56 $generated@@191)) (= (ControlFlow 0 21) 19)) $generated@@213)))
(let (($generated@@218  (=> (= $generated@@197 ($generated@@138 $generated@@59 $generated@@191 $generated@@2 false)) (and (=> (= (ControlFlow 0 23) 21) $generated@@217) (=> (= (ControlFlow 0 23) 22) $generated@@216)))))
(let (($generated@@219  (=> (and ($generated@@47 $generated@@191) ($generated@@193 $generated@@191)) (=> (and (and (and ($generated@@98 $generated@@101 $generated@@185 ($generated@@102 $generated@@56)) ($generated@@51 $generated@@101 $generated@@185 ($generated@@102 $generated@@56) $generated@@191)) (=> $generated@@198 (and ($generated@@98 $generated@@52 $generated@@199 $generated@@56) ($generated@@51 $generated@@52 $generated@@199 $generated@@56 $generated@@191)))) (and (and ($generated@@98 $generated@@52 $generated@@200 $generated@@56) ($generated@@51 $generated@@52 $generated@@200 $generated@@56 $generated@@191)) true)) (=> (and (and (and (and ($generated@@98 $generated@@101 $generated@@201 ($generated@@102 $generated@@56)) ($generated@@51 $generated@@101 $generated@@201 ($generated@@102 $generated@@56) $generated@@191)) true) (= 1 $generated@@96)) (and (not ($generated@@119 $generated@@185 $generated@@40)) (= (ControlFlow 0 24) 23))) $generated@@218)))))
$generated@@219))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
