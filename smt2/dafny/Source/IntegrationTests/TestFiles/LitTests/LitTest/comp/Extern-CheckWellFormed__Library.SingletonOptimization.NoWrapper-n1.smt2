(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@T T@T) T@T)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@72 (Int) T@U)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@90 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24)
 :pattern ( ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24))
)))
(assert (forall (($generated@@27 T@U) ) (!  (=> ($generated@@25 $generated@@27) ($generated@@26 $generated@@27))
 :pattern ( ($generated@@25 $generated@@27))
)))
(assert (= ($generated@@5 $generated@@29) 3))
(assert (forall (($generated@@31 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@31 $generated@@30) ($generated@@26 $generated@@31))
 :pattern ( ($generated@@26 $generated@@31) ($generated@@28 $generated@@29 $generated@@31 $generated@@30))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@33 $generated@@42 $generated@@43 ($generated@@39 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@46) $generated@@44)
 :weight 0
)) (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (or (= $generated@@51 $generated@@52) (= ($generated@@33 $generated@@47 $generated@@48 ($generated@@39 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@52) ($generated@@33 $generated@@47 $generated@@48 $generated@@50 $generated@@52)))
 :weight 0
))) (= ($generated@@5 $generated@@34) 4)) (= ($generated@@5 $generated@@35) 5)) (= ($generated@@5 $generated@@36) 6)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (= ($generated@@5 ($generated@@37 $generated@@53 $generated@@54)) 7))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@40 ($generated@@37 $generated@@55 $generated@@56)) $generated@@55)
 :pattern ( ($generated@@37 $generated@@55 $generated@@56))
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@41 ($generated@@37 $generated@@57 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@37 $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> ($generated@@32 $generated@@59 $generated@@60) (forall (($generated@@61 T@U) ) (!  (=> ($generated@@10 ($generated@@38 $generated@@6 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@59 $generated@@61) $generated))) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@60 $generated@@61) $generated))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@60 $generated@@61) $generated))
)))
 :pattern ( ($generated@@32 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@62 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@26 $generated@@68) (= ($generated@@67 $generated@@68) $generated@@1))
 :pattern ( ($generated@@26 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 ($generated@@38 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@38 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@26 $generated@@73) (exists (($generated@@74 Int) ) (= $generated@@73 ($generated@@72 $generated@@74))))
 :pattern ( ($generated@@26 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@28 $generated@@7 $generated@@75 $generated@@22)  (and (<= ($generated@@62 (- 0 100)) ($generated@@12 $generated@@75)) (< ($generated@@12 $generated@@75) 2147483648)))
 :pattern ( ($generated@@28 $generated@@7 $generated@@75 $generated@@22))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (!  (=> ($generated@@32 $generated@@76 $generated@@77) (=> ($generated@@21 $generated@@80 $generated@@78 $generated@@79 $generated@@76) ($generated@@21 $generated@@80 $generated@@78 $generated@@79 $generated@@77)))
 :pattern ( ($generated@@32 $generated@@76 $generated@@77) ($generated@@21 $generated@@80 $generated@@78 $generated@@79 $generated@@76))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@28 $generated@@29 ($generated@@72 $generated@@81) $generated@@30) ($generated@@28 $generated@@7 ($generated@@11 $generated@@81) $generated@@22))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@72 $generated@@81) $generated@@30))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or (not (= $generated@@82 $generated@@84)) (not true)) (=> (and ($generated@@32 $generated@@82 $generated@@83) ($generated@@32 $generated@@83 $generated@@84)) ($generated@@32 $generated@@82 $generated@@84)))
 :pattern ( ($generated@@32 $generated@@82 $generated@@83) ($generated@@32 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@67 ($generated@@72 $generated@@85)) $generated@@1)
 :pattern ( ($generated@@72 $generated@@85))
)))
(assert (forall (($generated@@87 Int) ) (! (= ($generated@@86 ($generated@@72 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@72 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@38 $generated@@89 ($generated@@69 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@69 $generated@@89 $generated@@88))
)))
(assert  (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@90 $generated@@93 $generated@@94 $generated@@95 ($generated@@92 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@99 $generated@@96) $generated@@98 $generated@@99) $generated@@96)
 :weight 0
)) (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@105 $generated@@107) (= ($generated@@90 $generated@@100 $generated@@101 $generated@@102 ($generated@@92 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@90 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@90 $generated@@109 $generated@@110 $generated@@111 ($generated@@92 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@90 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 Bool) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@10 ($generated@@90 $generated@@36 $generated@@34 $generated@@6 ($generated@@91 $generated@@118 $generated@@119 $generated@@120 $generated@@121) $generated@@122 $generated@@123))  (=> (and (or (not (= $generated@@122 $generated@@118)) (not true)) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@119 $generated@@122) $generated@@120)))) $generated@@121))
 :pattern ( ($generated@@90 $generated@@36 $generated@@34 $generated@@6 ($generated@@91 $generated@@118 $generated@@119 $generated@@120 $generated@@121) $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@124 $generated@@126) ($generated@@28 $generated@@29 $generated@@125 $generated@@30)) ($generated@@21 $generated@@29 $generated@@125 $generated@@30 $generated@@126))
 :pattern ( ($generated@@21 $generated@@29 $generated@@125 $generated@@30 $generated@@126))
)))
(assert (= ($generated@@127 $generated@@22) $generated@@0))
(assert (= ($generated@@128 $generated@@22) $generated@@3))
(assert (= ($generated@@127 $generated@@30) $generated@@2))
(assert (= ($generated@@128 $generated@@30) $generated@@4))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and ($generated@@124 $generated@@130) (and ($generated@@26 $generated@@129) ($generated@@21 $generated@@29 $generated@@129 $generated@@30 $generated@@130))) ($generated@@21 $generated@@7 ($generated@@11 ($generated@@86 $generated@@129)) $generated@@22 $generated@@130))
 :pattern ( ($generated@@21 $generated@@7 ($generated@@11 ($generated@@86 $generated@@129)) $generated@@22 $generated@@130))
)))
(assert (forall (($generated@@131 Int) ) (! (= ($generated@@69 $generated@@7 ($generated@@11 ($generated@@62 $generated@@131))) ($generated@@64 $generated@@35 ($generated@@69 $generated@@7 ($generated@@11 $generated@@131))))
 :pattern ( ($generated@@69 $generated@@7 ($generated@@11 ($generated@@62 $generated@@131))))
)))
(assert (forall (($generated@@132 Int) ) (! (= ($generated@@72 ($generated@@62 $generated@@132)) ($generated@@64 $generated@@29 ($generated@@72 $generated@@132)))
 :pattern ( ($generated@@72 ($generated@@62 $generated@@132)))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@69 $generated@@134 ($generated@@64 $generated@@134 $generated@@133)) ($generated@@64 $generated@@35 ($generated@@69 $generated@@134 $generated@@133)))
 :pattern ( ($generated@@69 $generated@@134 ($generated@@64 $generated@@134 $generated@@133)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () Int)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@147  (=> (= $generated@@135 ($generated@@91 $generated@@136 $generated@@137 $generated false)) (=> (and ($generated@@26 $generated@@138) (= $generated@@139 ($generated@@62 2147483647))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@62 (- 0 100)) $generated@@139) (< $generated@@139 2147483648))) (=> (and (<= ($generated@@62 (- 0 100)) $generated@@139) (< $generated@@139 2147483648)) (=> (< ($generated@@86 $generated@@138) 2147483647) (=> (and (and ($generated@@124 $generated@@140) ($generated@@141 $generated@@140)) (and (forall (($generated@@148 T@U) ) (!  (=> (and (or (not (= $generated@@148 $generated@@136)) (not true)) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@137 $generated@@148) $generated)))) (= ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@140 $generated@@148) ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@137 $generated@@148)))
 :pattern ( ($generated@@33 $generated@@36 ($generated@@37 $generated@@34 $generated@@35) $generated@@140 $generated@@148))
)) ($generated@@32 $generated@@137 $generated@@140))) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@142 $generated@@30) ($generated@@21 $generated@@29 $generated@@142 $generated@@30 $generated@@140)) ($generated@@26 $generated@@142)) (and ($generated@@26 $generated@@138) (= $generated@@143 ($generated@@62 1)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@62 (- 0 100)) $generated@@143) (< $generated@@143 2147483648))) (=> (and (<= ($generated@@62 (- 0 100)) $generated@@143) (< $generated@@143 2147483648)) (=> (and (= $generated@@144 (+ ($generated@@86 $generated@@138) 1)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@62 (- 0 100)) $generated@@144) (< $generated@@144 2147483648))))))))))))))
(let (($generated@@149  (=> (and ($generated@@124 $generated@@137) ($generated@@141 $generated@@137)) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@138 $generated@@30) ($generated@@21 $generated@@29 $generated@@138 $generated@@30 $generated@@137)) ($generated@@25 $generated@@138)) (and (and ($generated@@28 $generated@@29 $generated@@145 $generated@@30) ($generated@@21 $generated@@29 $generated@@145 $generated@@30 $generated@@137)) (and (= 2 $generated@@146) (= (ControlFlow 0 5) 2)))) $generated@@147))))
$generated@@149)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
