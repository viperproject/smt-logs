(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@T T@T) T@T)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@U T@U) T@U)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (Int T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@103 (T@U Int) T@U)
(declare-fun $generated@@107 (T@U) Bool)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@122 (T@U) Int)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@137 (T@U) Int)
(declare-fun $generated@@140 (Int) T@U)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@204 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@1))
(assert (= ($generated@@25 $generated@@0) $generated@@2))
(assert (= ($generated@@26 $generated@@27) 0))
(assert (= ($generated@@28 $generated@@29) $generated@@6))
(assert (= ($generated@@9 $generated@@31) 3))
(assert ($generated@@30 $generated@@31 $generated@@29 $generated@@32))
(assert  (and (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@34 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@34 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@34 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@9 $generated@@35) 4)) (= ($generated@@9 $generated@@36) 5)) (= ($generated@@9 $generated@@37) 6)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@9 ($generated@@38 $generated@@54 $generated@@55)) 7))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@38 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@38 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@38 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@38 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@33 $generated@@60 $generated@@61) (forall (($generated@@62 T@U) ) (!  (=> ($generated@@14 ($generated@@39 $generated@@10 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@60 $generated@@62) $generated@@4))) ($generated@@14 ($generated@@39 $generated@@10 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@61 $generated@@62) $generated@@4))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@61 $generated@@62) $generated@@4))
)))
 :pattern ( ($generated@@33 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 $generated@@64) $generated@@64)
 :pattern ( ($generated@@63 $generated@@65 $generated@@64))
)))
(assert (= ($generated@@9 $generated@@66) 8))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (and ($generated@@30 $generated@@66 $generated@@70 ($generated@@68 $generated@@72)) ($generated@@69 $generated@@71 $generated@@72)) ($generated@@30 $generated@@66 ($generated@@67 $generated@@70 $generated@@71) ($generated@@68 $generated@@72)))
 :pattern ( ($generated@@30 $generated@@66 ($generated@@67 $generated@@70 $generated@@71) ($generated@@68 $generated@@72)))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@73 $generated@@74) (= ($generated@@28 $generated@@74) $generated@@6))
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@75 $generated@@76) (= ($generated@@28 $generated@@76) $generated@@7))
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@39 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@39 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@75 $generated@@81) (exists (($generated@@82 Int) ($generated@@83 T@U) ) (= $generated@@81 ($generated@@80 $generated@@82 $generated@@83))))
 :pattern ( ($generated@@75 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@73 $generated@@84) (= $generated@@84 $generated@@29))
 :pattern ( ($generated@@73 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@26 ($generated@@67 $generated@@85 $generated@@86)) (+ 1 ($generated@@26 $generated@@85)))
 :pattern ( ($generated@@67 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@87 ($generated@@77 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@88 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@87 ($generated@@77 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@33 $generated@@93 $generated@@94) (=> ($generated@@87 $generated@@95 $generated@@96 $generated@@93) ($generated@@87 $generated@@95 $generated@@96 $generated@@94)))
 :pattern ( ($generated@@33 $generated@@93 $generated@@94) ($generated@@87 $generated@@95 $generated@@96 $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (!  (=> ($generated@@33 $generated@@97 $generated@@98) (=> ($generated@@88 $generated@@101 $generated@@99 $generated@@100 $generated@@97) ($generated@@88 $generated@@101 $generated@@99 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@33 $generated@@97 $generated@@98) ($generated@@88 $generated@@101 $generated@@99 $generated@@100 $generated@@97))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@69 $generated@@102 $generated@@32) (and (= ($generated@@77 $generated@@31 ($generated@@39 $generated@@31 $generated@@102)) $generated@@102) ($generated@@30 $generated@@31 ($generated@@39 $generated@@31 $generated@@102) $generated@@32)))
 :pattern ( ($generated@@69 $generated@@102 $generated@@32))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 Int) ($generated@@106 T@U) ) (!  (and (=> (= $generated@@105 ($generated@@26 $generated@@104)) (= ($generated@@103 ($generated@@67 $generated@@104 $generated@@106) $generated@@105) $generated@@106)) (=> (or (not (= $generated@@105 ($generated@@26 $generated@@104))) (not true)) (= ($generated@@103 ($generated@@67 $generated@@104 $generated@@106) $generated@@105) ($generated@@103 $generated@@104 $generated@@105))))
 :pattern ( ($generated@@103 ($generated@@67 $generated@@104 $generated@@106) $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@107 $generated@@108) (or ($generated@@73 $generated@@108) ($generated@@75 $generated@@108)))
 :pattern ( ($generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@109 $generated@@32) (or ($generated@@73 $generated@@109) ($generated@@75 $generated@@109)))
 :pattern ( ($generated@@75 $generated@@109) ($generated@@30 $generated@@31 $generated@@109 $generated@@32))
 :pattern ( ($generated@@73 $generated@@109) ($generated@@30 $generated@@31 $generated@@109 $generated@@32))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or (not (= $generated@@110 $generated@@112)) (not true)) (=> (and ($generated@@33 $generated@@110 $generated@@111) ($generated@@33 $generated@@111 $generated@@112)) ($generated@@33 $generated@@110 $generated@@112)))
 :pattern ( ($generated@@33 $generated@@110 $generated@@111) ($generated@@33 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@69 $generated@@113 $generated@@0) (and (= ($generated@@77 $generated@@11 ($generated@@39 $generated@@11 $generated@@113)) $generated@@113) ($generated@@30 $generated@@11 ($generated@@39 $generated@@11 $generated@@113) $generated@@0)))
 :pattern ( ($generated@@69 $generated@@113 $generated@@0))
)))
(assert (= ($generated@@9 $generated@@114) 9))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@69 $generated@@115 $generated) (and (= ($generated@@77 $generated@@114 ($generated@@39 $generated@@114 $generated@@115)) $generated@@115) ($generated@@30 $generated@@114 ($generated@@39 $generated@@114 $generated@@115) $generated)))
 :pattern ( ($generated@@69 $generated@@115 $generated))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@69 ($generated@@77 $generated@@118 $generated@@116) $generated@@117) ($generated@@30 $generated@@118 $generated@@116 $generated@@117))
 :pattern ( ($generated@@69 ($generated@@77 $generated@@118 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (<= 0 ($generated@@26 $generated@@119))
 :pattern ( ($generated@@26 $generated@@119))
)))
(assert (forall (($generated@@120 Int) ($generated@@121 T@U) ) (! (= ($generated@@28 ($generated@@80 $generated@@120 $generated@@121)) $generated@@7)
 :pattern ( ($generated@@80 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@123 Int) ($generated@@124 T@U) ) (! (= ($generated@@122 ($generated@@80 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@80 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 Int) ($generated@@127 T@U) ) (! (= ($generated@@125 ($generated@@80 $generated@@126 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@80 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@88 $generated@@66 $generated@@128 ($generated@@68 $generated@@129) $generated@@130) (forall (($generated@@131 Int) ) (!  (=> (and (<= 0 $generated@@131) (< $generated@@131 ($generated@@26 $generated@@128))) ($generated@@87 ($generated@@103 $generated@@128 $generated@@131) $generated@@129 $generated@@130))
 :pattern ( ($generated@@103 $generated@@128 $generated@@131))
)))
 :pattern ( ($generated@@88 $generated@@66 $generated@@128 ($generated@@68 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@68 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@68 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@25 ($generated@@68 $generated@@134)) $generated@@3)
 :pattern ( ($generated@@68 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@39 $generated@@136 ($generated@@77 $generated@@136 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@77 $generated@@136 $generated@@135))
)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ) (! (< ($generated@@137 $generated@@139) ($generated@@137 ($generated@@80 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@80 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@142 Int) ) (!  (=> (or (and (<= 0 $generated@@142) (< $generated@@142 55296)) (and (<= 57344 $generated@@142) (< $generated@@142 1114112))) (= ($generated@@141 ($generated@@140 $generated@@142)) $generated@@142))
 :pattern ( ($generated@@140 $generated@@142))
)))
(assert  (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@143 $generated@@146 $generated@@147 $generated@@148 ($generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@143 $generated@@153 $generated@@154 $generated@@155 ($generated@@145 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@143 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@143 $generated@@162 $generated@@163 $generated@@164 ($generated@@145 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@143 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@14 ($generated@@143 $generated@@37 $generated@@35 $generated@@10 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@14 ($generated@@39 $generated@@10 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@143 $generated@@37 $generated@@35 $generated@@10 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (and (= ($generated@@177 ($generated@@67 $generated@@179 $generated@@180)) $generated@@179) (= ($generated@@178 ($generated@@67 $generated@@179 $generated@@180)) $generated@@180))
 :pattern ( ($generated@@67 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@181 $generated@@183) (and ($generated@@75 $generated@@182) ($generated@@88 $generated@@31 $generated@@182 $generated@@32 $generated@@183))) ($generated@@88 $generated@@11 ($generated@@15 ($generated@@122 $generated@@182)) $generated@@0 $generated@@183))
 :pattern ( ($generated@@88 $generated@@11 ($generated@@15 ($generated@@122 $generated@@182)) $generated@@0 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@69 $generated@@184 ($generated@@68 $generated@@185)) (and (= ($generated@@77 $generated@@66 ($generated@@39 $generated@@66 $generated@@184)) $generated@@184) ($generated@@30 $generated@@66 ($generated@@39 $generated@@66 $generated@@184) ($generated@@68 $generated@@185))))
 :pattern ( ($generated@@69 $generated@@184 ($generated@@68 $generated@@185)))
)))
(assert (forall (($generated@@186 T@U) ) (!  (and (= ($generated@@140 ($generated@@141 $generated@@186)) $generated@@186) (or (and (<= 0 ($generated@@141 $generated@@186)) (< ($generated@@141 $generated@@186) 55296)) (and (<= 57344 ($generated@@141 $generated@@186)) (< ($generated@@141 $generated@@186) 1114112))))
 :pattern ( ($generated@@141 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@181 $generated@@188) ($generated@@30 $generated@@31 $generated@@187 $generated@@32)) ($generated@@88 $generated@@31 $generated@@187 $generated@@32 $generated@@188))
 :pattern ( ($generated@@88 $generated@@31 $generated@@187 $generated@@32 $generated@@188))
)))
(assert (= ($generated@@25 $generated@@32) $generated@@5))
(assert (= ($generated@@189 $generated@@32) $generated@@8))
(assert (= $generated@@29 ($generated@@63 $generated@@31 $generated@@29)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and ($generated@@181 $generated@@191) (and ($generated@@75 $generated@@190) ($generated@@88 $generated@@31 $generated@@190 $generated@@32 $generated@@191))) ($generated@@88 $generated@@31 ($generated@@125 $generated@@190) $generated@@32 $generated@@191))
 :pattern ( ($generated@@88 $generated@@31 ($generated@@125 $generated@@190) $generated@@32 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@77 $generated@@193 ($generated@@63 $generated@@193 $generated@@192)) ($generated@@63 $generated@@36 ($generated@@77 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@77 $generated@@193 ($generated@@63 $generated@@193 $generated@@192)))
)))
(assert (forall (($generated@@194 Int) ($generated@@195 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@80 $generated@@194 $generated@@195) $generated@@32)  (and ($generated@@30 $generated@@11 ($generated@@15 $generated@@194) $generated@@0) ($generated@@30 $generated@@31 $generated@@195 $generated@@32)))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@80 $generated@@194 $generated@@195) $generated@@32))
)))
(assert (forall (($generated@@196 T@U) ) (!  (=> (= ($generated@@26 $generated@@196) 0) (= $generated@@196 $generated@@27))
 :pattern ( ($generated@@26 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! ($generated@@88 $generated@@11 $generated@@198 $generated@@0 $generated@@197)
 :pattern ( ($generated@@88 $generated@@11 $generated@@198 $generated@@0 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! ($generated@@88 $generated@@114 $generated@@200 $generated $generated@@199)
 :pattern ( ($generated@@88 $generated@@114 $generated@@200 $generated $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@30 $generated@@66 $generated@@201 ($generated@@68 $generated@@202)) (forall (($generated@@203 Int) ) (!  (=> (and (<= 0 $generated@@203) (< $generated@@203 ($generated@@26 $generated@@201))) ($generated@@69 ($generated@@103 $generated@@201 $generated@@203) $generated@@202))
 :pattern ( ($generated@@103 $generated@@201 $generated@@203))
)))
 :pattern ( ($generated@@30 $generated@@66 $generated@@201 ($generated@@68 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 Int) ) (!  (=> (and (<= 0 $generated@@206) (< $generated@@206 ($generated@@26 $generated@@205))) (< ($generated@@137 ($generated@@39 $generated@@31 ($generated@@103 $generated@@205 $generated@@206))) ($generated@@204 $generated@@205)))
 :pattern ( ($generated@@137 ($generated@@39 $generated@@31 ($generated@@103 $generated@@205 $generated@@206))))
)))
(assert (forall (($generated@@207 T@U) ) (! ($generated@@30 $generated@@11 $generated@@207 $generated@@0)
 :pattern ( ($generated@@30 $generated@@11 $generated@@207 $generated@@0))
)))
(assert (forall (($generated@@208 T@U) ) (! ($generated@@30 $generated@@114 $generated@@208 $generated)
 :pattern ( ($generated@@30 $generated@@114 $generated@@208 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 (T@U) Bool)
(declare-fun $generated@@222 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@223 true))
(let (($generated@@224  (=> (= $generated@@209 ($generated@@80 $generated@@210 $generated@@211)) (=> (and (and ($generated@@30 $generated@@31 $generated@@211 $generated@@32) ($generated@@88 $generated@@31 $generated@@211 $generated@@32 $generated@@212)) (and ($generated@@30 $generated@@31 $generated@@213 $generated@@32) ($generated@@88 $generated@@31 $generated@@213 $generated@@32 $generated@@212))) (=> (and (and (and (= $generated@@214 $generated@@211) ($generated@@30 $generated@@31 $generated@@214 $generated@@32)) (and (= $generated@@213 $generated@@214) (= $generated@@215 $generated@@210))) (and (and ($generated@@30 $generated@@11 ($generated@@15 $generated@@215) $generated@@0) (= $generated@@216 $generated@@215)) (and (= $generated@@217 ($generated@@63 $generated@@66 ($generated@@67 ($generated@@67 ($generated@@67 $generated@@27 ($generated@@77 $generated@@114 ($generated@@140 32))) ($generated@@77 $generated@@114 ($generated@@140 43))) ($generated@@77 $generated@@114 ($generated@@140 32))))) (= (ControlFlow 0 3) (- 0 2))))) (or (< ($generated@@137 $generated@@213) ($generated@@137 $generated@@209)) (and (= ($generated@@137 $generated@@213) ($generated@@137 $generated@@209)) (< ($generated@@204 $generated@@217) ($generated@@204 $generated@@218)))))))))
(let (($generated@@225  (=> (or (not (= $generated@@209 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 5) 3) $generated@@224) (=> (= (ControlFlow 0 5) 4) $generated@@223)))))
(let (($generated@@226 true))
(let (($generated@@227  (=> (= $generated@@219 ($generated@@144 $generated@@220 $generated@@212 $generated@@4 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@226) (=> (= (ControlFlow 0 6) 5) $generated@@225)))))
(let (($generated@@228  (=> (and ($generated@@181 $generated@@212) ($generated@@221 $generated@@212)) (=> (and (and (and ($generated@@30 $generated@@31 $generated@@209 $generated@@32) ($generated@@88 $generated@@31 $generated@@209 $generated@@32 $generated@@212)) ($generated@@107 $generated@@209)) (and (and ($generated@@30 $generated@@66 $generated@@218 ($generated@@68 $generated)) ($generated@@88 $generated@@66 $generated@@218 ($generated@@68 $generated) $generated@@212)) (and (= 1 $generated@@222) (= (ControlFlow 0 7) 6)))) $generated@@227))))
$generated@@228)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
