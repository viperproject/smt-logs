(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U Int) T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U Int) T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@44 (Int) Int)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U T@U) Bool)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@54 () Int)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 (T@U Int) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U) Int)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@T T@T) T@T)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24)
 :pattern ( ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24))
)))
(assert (= ($generated@@25 $generated@@26) 0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (and (<= 0 $generated@@31) (<= $generated@@31 ($generated@@25 $generated@@29))) (= ($generated@@27 ($generated@@28 $generated@@29 $generated@@30) $generated@@31) ($generated@@28 ($generated@@27 $generated@@29 $generated@@31) $generated@@30)))
 :pattern ( ($generated@@27 ($generated@@28 $generated@@29 $generated@@30) $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 Int) ) (!  (=> (= $generated@@36 ($generated@@25 $generated@@34)) (and (= ($generated@@32 ($generated@@33 $generated@@34 $generated@@35) $generated@@36) $generated@@34) (= ($generated@@27 ($generated@@33 $generated@@34 $generated@@35) $generated@@36) $generated@@35)))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@34 $generated@@35) $generated@@36))
 :pattern ( ($generated@@27 ($generated@@33 $generated@@34 $generated@@35) $generated@@36))
)))
(assert (= ($generated@@5 $generated@@37) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@21 $generated@@37 $generated@@40 $generated@@38 $generated@@41) ($generated@@21 $generated@@37 $generated@@40 ($generated@@39 $generated@@22) $generated@@41))
 :pattern ( ($generated@@21 $generated@@37 $generated@@40 $generated@@38 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 Int) ) (!  (=> (= $generated@@43 0) (= ($generated@@27 $generated@@42 $generated@@43) $generated@@42))
 :pattern ( ($generated@@27 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 Int) ) (! (= ($generated@@44 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (and ($generated@@49 $generated@@37 $generated@@51 ($generated@@39 $generated@@53)) ($generated@@50 $generated@@52 $generated@@53)) ($generated@@49 $generated@@37 ($generated@@28 $generated@@51 $generated@@52) ($generated@@39 $generated@@53)))
 :pattern ( ($generated@@49 $generated@@37 ($generated@@28 $generated@@51 $generated@@52) ($generated@@39 $generated@@53)))
)))
(assert  (=> (<= 3 $generated@@54) (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (or ($generated@@57 ($generated@@46 $generated@@37 $generated@@60)) (and (< 3 $generated@@54) ($generated@@49 $generated@@37 $generated@@60 ($generated@@39 $generated@@22)))) (and (=> (or (not (= ($generated@@25 ($generated@@46 $generated@@37 $generated@@60)) ($generated@@44 0))) (not true)) ($generated@@57 ($generated@@46 $generated@@37 ($generated@@27 ($generated@@46 $generated@@37 $generated@@60) ($generated@@44 1))))) (= ($generated@@55 ($generated@@56 $generated@@59) ($generated@@46 $generated@@37 $generated@@60)) (ite (= ($generated@@25 ($generated@@46 $generated@@37 $generated@@60)) ($generated@@44 0)) $generated@@26 ($generated@@33 ($generated@@55 ($generated@@56 $generated@@59) ($generated@@46 $generated@@37 ($generated@@27 ($generated@@46 $generated@@37 $generated@@60) ($generated@@44 1)))) ($generated@@28 $generated@@26 ($generated@@58 ($generated@@46 $generated@@37 $generated@@60) ($generated@@44 0))))))))
 :weight 3
 :pattern ( ($generated@@55 ($generated@@56 $generated@@59) ($generated@@46 $generated@@37 $generated@@60)))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 Int) ($generated@@63 Int) ) (!  (=> (and (and (<= 0 $generated@@63) (< $generated@@63 $generated@@62)) (< $generated@@63 ($generated@@25 $generated@@61))) (= ($generated@@58 ($generated@@32 $generated@@61 $generated@@62) $generated@@63) ($generated@@58 $generated@@61 $generated@@63)))
 :weight 25
 :pattern ( ($generated@@58 ($generated@@32 $generated@@61 $generated@@62) $generated@@63))
 :pattern ( ($generated@@58 $generated@@61 $generated@@63) ($generated@@32 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 Int) ) (!  (=> (and (<= 0 $generated@@65) (<= $generated@@65 ($generated@@25 $generated@@64))) (= ($generated@@25 ($generated@@27 $generated@@64 $generated@@65)) (- ($generated@@25 $generated@@64) $generated@@65)))
 :pattern ( ($generated@@25 ($generated@@27 $generated@@64 $generated@@65)))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 ($generated@@66 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@66 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 Int) ) (!  (=> (and (<= 0 $generated@@72) (< $generated@@72 ($generated@@25 $generated@@71))) (< ($generated@@70 ($generated@@32 $generated@@71 $generated@@72)) ($generated@@70 $generated@@71)))
 :pattern ( ($generated@@70 ($generated@@32 $generated@@71 $generated@@72)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 Int) ) (!  (=> (and (< 0 $generated@@74) (<= $generated@@74 ($generated@@25 $generated@@73))) (< ($generated@@70 ($generated@@27 $generated@@73 $generated@@74)) ($generated@@70 $generated@@73)))
 :pattern ( ($generated@@70 ($generated@@27 $generated@@73 $generated@@74)))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@25 ($generated@@28 $generated@@75 $generated@@76)) (+ 1 ($generated@@25 $generated@@75)))
 :pattern ( ($generated@@28 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@67 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@21 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@67 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 Int) ($generated@@84 Int) ) (!  (=> (and (and (<= 0 $generated@@83) (<= 0 $generated@@84)) (< $generated@@84 (- ($generated@@25 $generated@@82) $generated@@83))) (= ($generated@@58 ($generated@@27 $generated@@82 $generated@@83) $generated@@84) ($generated@@58 $generated@@82 (+ $generated@@84 $generated@@83))))
 :weight 25
 :pattern ( ($generated@@58 ($generated@@27 $generated@@82 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@25 ($generated@@33 $generated@@85 $generated@@86)) (+ ($generated@@25 $generated@@85) ($generated@@25 $generated@@86)))
 :pattern ( ($generated@@25 ($generated@@33 $generated@@85 $generated@@86)))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@50 $generated@@87 $generated@@22) (and (= ($generated@@67 $generated@@7 ($generated@@66 $generated@@7 $generated@@87)) $generated@@87) ($generated@@49 $generated@@7 ($generated@@66 $generated@@7 $generated@@87) $generated@@22)))
 :pattern ( ($generated@@50 $generated@@87 $generated@@22))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@50 $generated@@88 $generated@@38) (and (= ($generated@@67 $generated@@37 ($generated@@66 $generated@@37 $generated@@88)) $generated@@88) ($generated@@49 $generated@@37 ($generated@@66 $generated@@37 $generated@@88) $generated@@38)))
 :pattern ( ($generated@@50 $generated@@88 $generated@@38))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 Int) ($generated@@91 T@U) ) (!  (and (=> (= $generated@@90 ($generated@@25 $generated@@89)) (= ($generated@@58 ($generated@@28 $generated@@89 $generated@@91) $generated@@90) $generated@@91)) (=> (or (not (= $generated@@90 ($generated@@25 $generated@@89))) (not true)) (= ($generated@@58 ($generated@@28 $generated@@89 $generated@@91) $generated@@90) ($generated@@58 $generated@@89 $generated@@90))))
 :pattern ( ($generated@@58 ($generated@@28 $generated@@89 $generated@@91) $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 Int) ) (!  (=> (and (<= 0 $generated@@93) (<= $generated@@93 ($generated@@25 $generated@@92))) (= ($generated@@25 ($generated@@32 $generated@@92 $generated@@93)) $generated@@93))
 :pattern ( ($generated@@25 ($generated@@32 $generated@@92 $generated@@93)))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@50 ($generated@@67 $generated@@96 $generated@@94) $generated@@95) ($generated@@49 $generated@@96 $generated@@94 $generated@@95))
 :pattern ( ($generated@@50 ($generated@@67 $generated@@96 $generated@@94) $generated@@95))
)))
(assert  (=> (<= 3 $generated@@54) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or ($generated@@57 $generated@@98) (and (< 3 $generated@@54) ($generated@@49 $generated@@37 $generated@@98 ($generated@@39 $generated@@22)))) ($generated@@49 $generated@@37 ($generated@@55 $generated@@97 $generated@@98) $generated@@38))
 :pattern ( ($generated@@55 $generated@@97 $generated@@98))
))))
(assert (forall (($generated@@99 T@U) ) (! (<= 0 ($generated@@25 $generated@@99))
 :pattern ( ($generated@@25 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 Int) ($generated@@102 Int) ) (!  (=> (and (and (<= 0 $generated@@101) (< $generated@@101 $generated@@102)) (<= $generated@@102 ($generated@@25 $generated@@100))) (< ($generated@@70 ($generated@@33 ($generated@@32 $generated@@100 $generated@@101) ($generated@@27 $generated@@100 $generated@@102))) ($generated@@70 $generated@@100)))
 :pattern ( ($generated@@70 ($generated@@33 ($generated@@32 $generated@@100 $generated@@101) ($generated@@27 $generated@@100 $generated@@102))))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@21 $generated@@37 $generated@@103 ($generated@@39 $generated@@104) $generated@@105) (forall (($generated@@106 Int) ) (!  (=> (and (<= 0 $generated@@106) (< $generated@@106 ($generated@@25 $generated@@103))) ($generated@@77 ($generated@@58 $generated@@103 $generated@@106) $generated@@104 $generated@@105))
 :pattern ( ($generated@@58 $generated@@103 $generated@@106))
)))
 :pattern ( ($generated@@21 $generated@@37 $generated@@103 ($generated@@39 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@107 ($generated@@39 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@39 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@109 ($generated@@39 $generated@@110)) $generated)
 :pattern ( ($generated@@39 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@66 $generated@@112 ($generated@@67 $generated@@112 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@67 $generated@@112 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@55 ($generated@@56 $generated@@113) $generated@@114) ($generated@@55 $generated@@113 $generated@@114))
 :pattern ( ($generated@@55 ($generated@@56 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@49 $generated@@37 $generated@@115 $generated@@38)  (and ($generated@@49 $generated@@37 $generated@@115 ($generated@@39 $generated@@22)) (or (= ($generated@@25 $generated@@115) ($generated@@44 0)) (or (not (= ($generated@@25 $generated@@115) 0)) (not true)))))
 :pattern ( ($generated@@49 $generated@@37 $generated@@115 $generated@@38))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@116 $generated@@127 $generated@@128 $generated@@129 ($generated@@123 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@116 $generated@@134 $generated@@135 $generated@@136 ($generated@@123 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@116 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@116 $generated@@143 $generated@@144 $generated@@145 ($generated@@123 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))) (= ($generated@@5 $generated@@117) 4)) (= ($generated@@5 $generated@@118) 5)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@120 $generated@@152 $generated@@153 ($generated@@124 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@156) $generated@@154)
 :weight 0
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@120 $generated@@157 $generated@@158 ($generated@@124 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@120 $generated@@157 $generated@@158 $generated@@160 $generated@@162)))
 :weight 0
))) (= ($generated@@5 $generated@@121) 6)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@5 ($generated@@122 $generated@@163 $generated@@164)) 7))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@125 ($generated@@122 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@122 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@126 ($generated@@122 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@122 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@10 ($generated@@116 $generated@@117 $generated@@118 $generated@@6 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@10 ($generated@@66 $generated@@6 ($generated@@120 $generated@@118 $generated@@121 ($generated@@120 $generated@@117 ($generated@@122 $generated@@118 $generated@@121) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@116 $generated@@117 $generated@@118 $generated@@6 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (and (= ($generated@@175 ($generated@@28 $generated@@177 $generated@@178)) $generated@@177) (= ($generated@@176 ($generated@@28 $generated@@177 $generated@@178)) $generated@@178))
 :pattern ( ($generated@@28 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@50 $generated@@179 ($generated@@39 $generated@@180)) (and (= ($generated@@67 $generated@@37 ($generated@@66 $generated@@37 $generated@@179)) $generated@@179) ($generated@@49 $generated@@37 ($generated@@66 $generated@@37 $generated@@179) ($generated@@39 $generated@@180))))
 :pattern ( ($generated@@50 $generated@@179 ($generated@@39 $generated@@180)))
)))
(assert (= ($generated@@109 $generated@@22) $generated@@1))
(assert (= ($generated@@181 $generated@@22) $generated@@3))
(assert (= ($generated@@109 $generated@@38) $generated@@2))
(assert (= ($generated@@181 $generated@@38) $generated@@4))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ($generated@@184 Int) ) (!  (=> (and (and (<= 0 $generated@@183) (<= $generated@@183 $generated@@184)) (< $generated@@184 ($generated@@25 $generated@@182))) (= ($generated@@58 ($generated@@27 $generated@@182 $generated@@183) (- $generated@@184 $generated@@183)) ($generated@@58 $generated@@182 $generated@@184)))
 :weight 25
 :pattern ( ($generated@@58 $generated@@182 $generated@@184) ($generated@@27 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ($generated@@187 Int) ) (!  (=> (and (and (<= 0 $generated@@186) (<= 0 $generated@@187)) (<= (+ $generated@@186 $generated@@187) ($generated@@25 $generated@@185))) (= ($generated@@27 ($generated@@27 $generated@@185 $generated@@186) $generated@@187) ($generated@@27 $generated@@185 (+ $generated@@186 $generated@@187))))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@185 $generated@@186) $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Int) ) (!  (and (=> (< $generated@@190 ($generated@@25 $generated@@188)) (= ($generated@@58 ($generated@@33 $generated@@188 $generated@@189) $generated@@190) ($generated@@58 $generated@@188 $generated@@190))) (=> (<= ($generated@@25 $generated@@188) $generated@@190) (= ($generated@@58 ($generated@@33 $generated@@188 $generated@@189) $generated@@190) ($generated@@58 $generated@@189 (- $generated@@190 ($generated@@25 $generated@@188))))))
 :pattern ( ($generated@@58 ($generated@@33 $generated@@188 $generated@@189) $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@49 $generated@@7 $generated@@191 $generated@@22)  (and (<= ($generated@@44 0) ($generated@@12 $generated@@191)) (< ($generated@@12 $generated@@191) 256)))
 :pattern ( ($generated@@49 $generated@@7 $generated@@191 $generated@@22))
)))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@67 $generated@@7 ($generated@@11 ($generated@@44 $generated@@192))) ($generated@@46 $generated@@121 ($generated@@67 $generated@@7 ($generated@@11 $generated@@192))))
 :pattern ( ($generated@@67 $generated@@7 ($generated@@11 ($generated@@44 $generated@@192))))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@T) ) (! (= ($generated@@67 $generated@@194 ($generated@@46 $generated@@194 $generated@@193)) ($generated@@46 $generated@@121 ($generated@@67 $generated@@194 $generated@@193)))
 :pattern ( ($generated@@67 $generated@@194 ($generated@@46 $generated@@194 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> (= ($generated@@25 $generated@@195) 0) (= $generated@@195 $generated@@26))
 :pattern ( ($generated@@25 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 Int) ) (!  (=> (= $generated@@197 0) (= ($generated@@32 $generated@@196 $generated@@197) $generated@@26))
 :pattern ( ($generated@@32 $generated@@196 $generated@@197))
)))
(assert  (=> (<= 3 $generated@@54) (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (or ($generated@@57 $generated@@199) (and (< 3 $generated@@54) ($generated@@49 $generated@@37 $generated@@199 ($generated@@39 $generated@@22)))) (and (=> (or (not (= ($generated@@25 $generated@@199) ($generated@@44 0))) (not true)) ($generated@@57 ($generated@@27 $generated@@199 ($generated@@44 1)))) (= ($generated@@55 ($generated@@56 $generated@@198) $generated@@199) (ite (= ($generated@@25 $generated@@199) ($generated@@44 0)) $generated@@26 ($generated@@33 ($generated@@55 $generated@@198 ($generated@@27 $generated@@199 ($generated@@44 1))) ($generated@@28 $generated@@26 ($generated@@58 $generated@@199 ($generated@@44 0))))))))
 :pattern ( ($generated@@55 ($generated@@56 $generated@@198) $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@49 $generated@@37 $generated@@200 ($generated@@39 $generated@@201)) (forall (($generated@@202 Int) ) (!  (=> (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@25 $generated@@200))) ($generated@@50 ($generated@@58 $generated@@200 $generated@@202) $generated@@201))
 :pattern ( ($generated@@58 $generated@@200 $generated@@202))
)))
 :pattern ( ($generated@@49 $generated@@37 $generated@@200 ($generated@@39 $generated@@201)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 (T@U) Bool)
(declare-fun $generated@@210 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@211  (=> (or (not (= ($generated@@25 $generated@@203) ($generated@@44 0))) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and (<= 0 ($generated@@44 1)) (<= ($generated@@44 1) ($generated@@25 $generated@@203)))) (=> (and (<= 0 ($generated@@44 1)) (<= ($generated@@44 1) ($generated@@25 $generated@@203))) (=> (and (= $generated@@204 ($generated@@27 $generated@@203 ($generated@@44 1))) ($generated@@21 $generated@@37 $generated@@204 ($generated@@39 $generated@@22) $generated@@205)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (< ($generated@@70 $generated@@204) ($generated@@70 $generated@@203))) (=> (< ($generated@@70 $generated@@204) ($generated@@70 $generated@@203)) (=> ($generated@@57 ($generated@@27 $generated@@203 ($generated@@44 1))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 ($generated@@44 0)) (< ($generated@@44 0) ($generated@@25 $generated@@203)))) (=> (and (<= 0 ($generated@@44 0)) (< ($generated@@44 0) ($generated@@25 $generated@@203))) (=> (= (ControlFlow 0 5) (- 0 4)) ($generated@@49 $generated@@37 ($generated@@33 ($generated@@55 ($generated@@56 $generated@@206) ($generated@@27 $generated@@203 ($generated@@44 1))) ($generated@@28 $generated@@26 ($generated@@58 $generated@@203 ($generated@@44 0)))) $generated@@38)))))))))))))
(let (($generated@@212  (=> (and (= ($generated@@25 $generated@@203) ($generated@@44 0)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@49 $generated@@37 ($generated@@46 $generated@@37 $generated@@26) $generated@@38))))
(let (($generated@@213 true))
(let (($generated@@214  (=> (= $generated@@207 ($generated@@119 $generated@@208 $generated@@205 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@213) (=> (= (ControlFlow 0 9) 3) $generated@@212)) (=> (= (ControlFlow 0 9) 5) $generated@@211)))))
(let (($generated@@215  (=> (and (and (and ($generated@@209 $generated@@205) ($generated@@210 $generated@@205)) ($generated@@49 $generated@@37 $generated@@203 ($generated@@39 $generated@@22))) (and (= 3 $generated@@54) (= (ControlFlow 0 10) 9))) $generated@@214)))
$generated@@215))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
