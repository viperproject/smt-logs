(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@54 (T@U T@U T@U) Bool)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@62 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T T@T) T@T)
(declare-fun $generated@@76 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@106 (T@T T@U) T@U)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@148 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@27 ($generated@@26 $generated@@28 $generated@@29) $generated@@29)
 :pattern ( ($generated@@26 $generated@@28 $generated@@29))
)))
(assert (= ($generated@@10 $generated@@34) 3))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@32 $generated@@38 $generated@@39) (and (< 1 $generated@@30) (and ($generated@@33 $generated@@34 $generated@@38 $generated@@35) ($generated@@33 $generated@@34 $generated@@39 $generated@@35)))) (= ($generated@@31 $generated@@38 $generated@@39) (let (($generated@@40 ($generated@@26 ($generated@@26 $generated@@36 ($generated@@37 $generated@@34 $generated@@38)) ($generated@@37 $generated@@34 $generated@@39))))
(let (($generated@@41 $generated@@40))
$generated@@41))))
 :pattern ( ($generated@@31 $generated@@38 $generated@@39))
))))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@27 $generated@@42 $generated@@44) ($generated@@27 ($generated@@26 $generated@@42 $generated@@43) $generated@@44))
 :pattern ( ($generated@@26 $generated@@42 $generated@@43) ($generated@@27 $generated@@42 $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@27 ($generated@@26 $generated@@45 $generated@@46) $generated@@47)  (or (= $generated@@47 $generated@@46) ($generated@@27 $generated@@45 $generated@@47)))
 :pattern ( ($generated@@27 ($generated@@26 $generated@@45 $generated@@46) $generated@@47))
)))
(assert ($generated@@48 $generated@@49))
(assert (forall (($generated@@50 T@U) ) (!  (not ($generated@@27 $generated@@36 $generated@@50))
 :pattern ( ($generated@@27 $generated@@36 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@53 $generated@@49)  (or (= $generated@@53 $generated@@51) (= ($generated@@52 $generated@@53) $generated@@49)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@53 $generated@@49))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (and ($generated@@54 $generated@@58 $generated@@55 $generated@@59) ($generated@@56 $generated@@59)) ($generated@@54 $generated@@58 $generated@@57 $generated@@59))
 :pattern ( ($generated@@54 $generated@@58 $generated@@55 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (and ($generated@@54 $generated@@60 $generated@@49 $generated@@61) ($generated@@56 $generated@@61)) ($generated@@54 $generated@@60 $generated@@55 $generated@@61))
 :pattern ( ($generated@@54 $generated@@60 $generated@@49 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@62 $generated@@34 $generated@@64 $generated@@63 $generated@@65) ($generated@@62 $generated@@34 $generated@@64 $generated@@57 $generated@@65))
 :pattern ( ($generated@@62 $generated@@34 $generated@@64 $generated@@63 $generated@@65))
 :pattern ( ($generated@@62 $generated@@34 $generated@@64 $generated@@57 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@62 $generated@@34 $generated@@67 $generated@@66 $generated@@68) ($generated@@62 $generated@@34 $generated@@67 $generated@@55 $generated@@68))
 :pattern ( ($generated@@62 $generated@@34 $generated@@67 $generated@@66 $generated@@68))
 :pattern ( ($generated@@62 $generated@@34 $generated@@67 $generated@@55 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@62 $generated@@34 $generated@@69 $generated@@35 $generated@@70) ($generated@@62 $generated@@34 $generated@@69 $generated@@49 $generated@@70))
 :pattern ( ($generated@@62 $generated@@34 $generated@@69 $generated@@35 $generated@@70))
 :pattern ( ($generated@@62 $generated@@34 $generated@@69 $generated@@49 $generated@@70))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@72 $generated@@79 $generated@@80 ($generated@@76 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@81) $generated@@83) $generated@@81)
 :weight 0
)) (forall (($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (or (= $generated@@88 $generated@@89) (= ($generated@@72 $generated@@84 $generated@@85 ($generated@@76 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@86) $generated@@89) ($generated@@72 $generated@@84 $generated@@85 $generated@@87 $generated@@89)))
 :weight 0
))) (= ($generated@@10 $generated@@73) 4)) (= ($generated@@10 $generated@@74) 5)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@10 ($generated@@75 $generated@@90 $generated@@91)) 6))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@77 ($generated@@75 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@75 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@78 ($generated@@75 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@75 $generated@@94 $generated@@95))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@62 $generated@@34 $generated@@96 $generated@@57 $generated@@97)  (or (= $generated@@96 $generated@@51) ($generated@@15 ($generated@@71 $generated@@11 ($generated@@72 $generated@@73 $generated@@74 ($generated@@72 $generated@@34 ($generated@@75 $generated@@73 $generated@@74) $generated@@97 $generated@@96) $generated@@0)))))
 :pattern ( ($generated@@62 $generated@@34 $generated@@96 $generated@@57 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@62 $generated@@34 $generated@@98 $generated@@55 $generated@@99)  (or (= $generated@@98 $generated@@51) ($generated@@15 ($generated@@71 $generated@@11 ($generated@@72 $generated@@73 $generated@@74 ($generated@@72 $generated@@34 ($generated@@75 $generated@@73 $generated@@74) $generated@@99 $generated@@98) $generated@@0)))))
 :pattern ( ($generated@@62 $generated@@34 $generated@@98 $generated@@55 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@62 $generated@@34 $generated@@100 $generated@@49 $generated@@101)  (or (= $generated@@100 $generated@@51) ($generated@@15 ($generated@@71 $generated@@11 ($generated@@72 $generated@@73 $generated@@74 ($generated@@72 $generated@@34 ($generated@@75 $generated@@73 $generated@@74) $generated@@101 $generated@@100) $generated@@0)))))
 :pattern ( ($generated@@62 $generated@@34 $generated@@100 $generated@@49 $generated@@101))
)))
(assert (= ($generated@@10 $generated@@102) 7))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or ($generated@@32 $generated@@104 $generated@@105) (and (< 1 $generated@@30) (and ($generated@@33 $generated@@34 $generated@@104 $generated@@35) ($generated@@33 $generated@@34 $generated@@105 $generated@@35)))) ($generated@@33 $generated@@102 ($generated@@31 $generated@@104 $generated@@105) ($generated@@103 $generated@@35)))
 :pattern ( ($generated@@31 $generated@@104 $generated@@105))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@106 $generated@@108 $generated@@107) $generated@@107)
 :pattern ( ($generated@@106 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@37 $generated@@110 ($generated@@71 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@71 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@33 $generated@@102 $generated@@112 ($generated@@103 $generated@@113)) (forall (($generated@@114 T@U) ) (!  (=> ($generated@@27 $generated@@112 $generated@@114) ($generated@@111 $generated@@114 $generated@@113))
 :pattern ( ($generated@@27 $generated@@112 $generated@@114))
)))
 :pattern ( ($generated@@33 $generated@@102 $generated@@112 ($generated@@103 $generated@@113)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@54 ($generated@@37 $generated@@118 $generated@@115) $generated@@116 $generated@@117) ($generated@@62 $generated@@118 $generated@@115 $generated@@116 $generated@@117))
 :pattern ( ($generated@@54 ($generated@@37 $generated@@118 $generated@@115) $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@111 $generated@@119 $generated@@57) (and (= ($generated@@37 $generated@@34 ($generated@@71 $generated@@34 $generated@@119)) $generated@@119) ($generated@@33 $generated@@34 ($generated@@71 $generated@@34 $generated@@119) $generated@@57)))
 :pattern ( ($generated@@111 $generated@@119 $generated@@57))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@111 $generated@@120 $generated@@63) (and (= ($generated@@37 $generated@@34 ($generated@@71 $generated@@34 $generated@@120)) $generated@@120) ($generated@@33 $generated@@34 ($generated@@71 $generated@@34 $generated@@120) $generated@@63)))
 :pattern ( ($generated@@111 $generated@@120 $generated@@63))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@111 $generated@@121 $generated@@66) (and (= ($generated@@37 $generated@@34 ($generated@@71 $generated@@34 $generated@@121)) $generated@@121) ($generated@@33 $generated@@34 ($generated@@71 $generated@@34 $generated@@121) $generated@@66)))
 :pattern ( ($generated@@111 $generated@@121 $generated@@66))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@111 $generated@@122 $generated@@35) (and (= ($generated@@37 $generated@@34 ($generated@@71 $generated@@34 $generated@@122)) $generated@@122) ($generated@@33 $generated@@34 ($generated@@71 $generated@@34 $generated@@122) $generated@@35)))
 :pattern ( ($generated@@111 $generated@@122 $generated@@35))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@111 $generated@@123 $generated@@55) (and (= ($generated@@37 $generated@@34 ($generated@@71 $generated@@34 $generated@@123)) $generated@@123) ($generated@@33 $generated@@34 ($generated@@71 $generated@@34 $generated@@123) $generated@@55)))
 :pattern ( ($generated@@111 $generated@@123 $generated@@55))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@111 $generated@@124 $generated@@49) (and (= ($generated@@37 $generated@@34 ($generated@@71 $generated@@34 $generated@@124)) $generated@@124) ($generated@@33 $generated@@34 ($generated@@71 $generated@@34 $generated@@124) $generated@@49)))
 :pattern ( ($generated@@111 $generated@@124 $generated@@49))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@125 $generated@@63)  (and ($generated@@33 $generated@@34 $generated@@125 $generated@@57) (or (not (= $generated@@125 $generated@@51)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@125 $generated@@63))
 :pattern ( ($generated@@33 $generated@@34 $generated@@125 $generated@@57))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@126 $generated@@66)  (and ($generated@@33 $generated@@34 $generated@@126 $generated@@55) (or (not (= $generated@@126 $generated@@51)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@126 $generated@@66))
 :pattern ( ($generated@@33 $generated@@34 $generated@@126 $generated@@55))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@127 $generated@@35)  (and ($generated@@33 $generated@@34 $generated@@127 $generated@@49) (or (not (= $generated@@127 $generated@@51)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@127 $generated@@35))
 :pattern ( ($generated@@33 $generated@@34 $generated@@127 $generated@@49))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@62 $generated@@34 $generated@@128 $generated@@55 $generated@@129) ($generated@@62 $generated@@34 $generated@@128 $generated@@57 $generated@@129))
 :pattern ( ($generated@@62 $generated@@34 $generated@@128 $generated@@55 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@62 $generated@@34 $generated@@130 $generated@@49 $generated@@131) ($generated@@62 $generated@@34 $generated@@130 $generated@@55 $generated@@131))
 :pattern ( ($generated@@62 $generated@@34 $generated@@130 $generated@@49 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@111 ($generated@@37 $generated@@134 $generated@@132) $generated@@133) ($generated@@33 $generated@@134 $generated@@132 $generated@@133))
 :pattern ( ($generated@@111 ($generated@@37 $generated@@134 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@62 $generated@@102 $generated@@135 ($generated@@103 $generated@@136) $generated@@137) (forall (($generated@@138 T@U) ) (!  (=> ($generated@@27 $generated@@135 $generated@@138) ($generated@@54 $generated@@138 $generated@@136 $generated@@137))
 :pattern ( ($generated@@27 $generated@@135 $generated@@138))
)))
 :pattern ( ($generated@@62 $generated@@102 $generated@@135 ($generated@@103 $generated@@136) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! ($generated@@33 $generated@@34 $generated@@139 $generated@@57)
 :pattern ( ($generated@@33 $generated@@34 $generated@@139 $generated@@57))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@140 ($generated@@103 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@103 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@103 $generated@@143)) $generated)
 :pattern ( ($generated@@103 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@71 $generated@@145 ($generated@@37 $generated@@145 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@37 $generated@@145 $generated@@144))
)))
(assert  (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@146 $generated@@149 $generated@@150 $generated@@151 ($generated@@148 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@154 $generated@@155) $generated@@152)
 :weight 0
)) (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@146 $generated@@156 $generated@@157 $generated@@158 ($generated@@148 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@146 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@146 $generated@@165 $generated@@166 $generated@@167 ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@146 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 Bool) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@15 ($generated@@146 $generated@@34 $generated@@73 $generated@@11 ($generated@@147 $generated@@174 $generated@@175 $generated@@176 $generated@@177) $generated@@178 $generated@@179))  (=> (and (or (not (= $generated@@178 $generated@@174)) (not true)) ($generated@@15 ($generated@@71 $generated@@11 ($generated@@72 $generated@@73 $generated@@74 ($generated@@72 $generated@@34 ($generated@@75 $generated@@73 $generated@@74) $generated@@175 $generated@@178) $generated@@176)))) $generated@@177))
 :pattern ( ($generated@@146 $generated@@34 $generated@@73 $generated@@11 ($generated@@147 $generated@@174 $generated@@175 $generated@@176 $generated@@177) $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@111 $generated@@180 ($generated@@103 $generated@@181)) (and (= ($generated@@37 $generated@@102 ($generated@@71 $generated@@102 $generated@@180)) $generated@@180) ($generated@@33 $generated@@102 ($generated@@71 $generated@@102 $generated@@180) ($generated@@103 $generated@@181))))
 :pattern ( ($generated@@111 $generated@@180 ($generated@@103 $generated@@181)))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@182 $generated@@55) ($generated@@33 $generated@@34 $generated@@182 $generated@@57))
 :pattern ( ($generated@@33 $generated@@34 $generated@@182 $generated@@55))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> ($generated@@111 $generated@@183 $generated@@55) ($generated@@111 $generated@@183 $generated@@57))
 :pattern ( ($generated@@111 $generated@@183 $generated@@55))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@184 $generated@@49) ($generated@@33 $generated@@34 $generated@@184 $generated@@55))
 :pattern ( ($generated@@33 $generated@@34 $generated@@184 $generated@@49))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> ($generated@@111 $generated@@185 $generated@@49) ($generated@@111 $generated@@185 $generated@@55))
 :pattern ( ($generated@@111 $generated@@185 $generated@@49))
)))
(assert (= ($generated@@142 $generated@@57) $generated@@1))
(assert (= ($generated@@186 $generated@@57) $generated@@7))
(assert (= ($generated@@142 $generated@@63) $generated@@2))
(assert (= ($generated@@186 $generated@@63) $generated@@7))
(assert (= ($generated@@142 $generated@@66) $generated@@3))
(assert (= ($generated@@186 $generated@@66) $generated@@8))
(assert (= ($generated@@142 $generated@@35) $generated@@4))
(assert (= ($generated@@186 $generated@@35) $generated@@9))
(assert (= ($generated@@142 $generated@@55) $generated@@5))
(assert (= ($generated@@186 $generated@@55) $generated@@8))
(assert (= ($generated@@142 $generated@@49) $generated@@6))
(assert (= ($generated@@186 $generated@@49) $generated@@9))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@187 $generated@@55)  (or (= $generated@@187 $generated@@51) ($generated@@48 ($generated@@52 $generated@@187))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@187 $generated@@55))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (or ($generated@@32 $generated@@189 $generated@@190) (and (< 1 $generated@@30) (and (and ($generated@@33 $generated@@34 $generated@@189 $generated@@35) ($generated@@62 $generated@@34 $generated@@189 $generated@@35 $generated@@188)) (and ($generated@@33 $generated@@34 $generated@@190 $generated@@35) ($generated@@62 $generated@@34 $generated@@190 $generated@@35 $generated@@188))))) ($generated@@56 $generated@@188)) ($generated@@62 $generated@@102 ($generated@@31 $generated@@189 $generated@@190) ($generated@@103 $generated@@35) $generated@@188))
 :pattern ( ($generated@@62 $generated@@102 ($generated@@31 $generated@@189 $generated@@190) ($generated@@103 $generated@@35) $generated@@188))
))))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (or ($generated@@32 ($generated@@106 $generated@@34 $generated@@191) ($generated@@106 $generated@@34 $generated@@192)) (and (< 1 $generated@@30) (and ($generated@@33 $generated@@34 $generated@@191 $generated@@35) ($generated@@33 $generated@@34 $generated@@192 $generated@@35)))) (= ($generated@@31 ($generated@@106 $generated@@34 $generated@@191) ($generated@@106 $generated@@34 $generated@@192)) (let (($generated@@193 ($generated@@106 $generated@@102 ($generated@@26 ($generated@@26 $generated@@36 ($generated@@37 $generated@@34 ($generated@@106 $generated@@34 $generated@@191))) ($generated@@37 $generated@@34 ($generated@@106 $generated@@34 $generated@@192))))))
(let (($generated@@194 $generated@@193))
$generated@@194))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@106 $generated@@34 $generated@@191) ($generated@@106 $generated@@34 $generated@@192)))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@T) ) (! (= ($generated@@37 $generated@@196 ($generated@@106 $generated@@196 $generated@@195)) ($generated@@106 $generated@@74 ($generated@@37 $generated@@196 $generated@@195)))
 :pattern ( ($generated@@37 $generated@@196 ($generated@@106 $generated@@196 $generated@@195)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@204  (=> (and (and (= $generated@@197 ($generated@@26 ($generated@@26 $generated@@36 ($generated@@37 $generated@@34 $generated@@198)) ($generated@@37 $generated@@34 $generated@@199))) ($generated@@33 $generated@@102 $generated@@197 ($generated@@103 $generated@@66))) (and (= $generated@@200 $generated@@197) (= (ControlFlow 0 3) (- 0 2)))) ($generated@@33 $generated@@102 $generated@@200 ($generated@@103 $generated@@35)))))
(let (($generated@@205 true))
(let (($generated@@206  (=> (= $generated@@201 ($generated@@147 $generated@@51 $generated@@202 $generated@@0 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@205) (=> (= (ControlFlow 0 4) 3) $generated@@204)))))
(let (($generated@@207  (=> (and ($generated@@56 $generated@@202) ($generated@@203 $generated@@202)) (=> (and (and ($generated@@33 $generated@@34 $generated@@198 $generated@@35) ($generated@@33 $generated@@34 $generated@@199 $generated@@35)) (and (= 1 $generated@@30) (= (ControlFlow 0 5) 4))) $generated@@206))))
$generated@@207)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
