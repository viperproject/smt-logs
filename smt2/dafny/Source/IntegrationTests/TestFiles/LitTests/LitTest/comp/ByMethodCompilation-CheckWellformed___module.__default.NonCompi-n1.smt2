(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U Int) Bool)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U Int) Bool)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@42 (Int) Int)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (Int) T@U)
(declare-fun $generated@@53 (Int) Int)
(declare-fun $generated@@54 (Int) Bool)
(declare-fun $generated@@56 (T@U Int) Bool)
(declare-fun $generated@@66 (Int) Bool)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@111 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@112 (T@T T@T) T@T)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@116 (T@T) T@T)
(declare-fun $generated@@166 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@24 T@U) ($generated@@25 Int) ($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@26 $generated@@27) (=> ($generated@@21 $generated@@24 $generated@@26 $generated@@25) ($generated@@21 $generated@@24 $generated@@27 $generated@@25)))
 :pattern ( ($generated@@21 $generated@@24 $generated@@26 $generated@@25) ($generated@@22 $generated@@26 $generated@@28) ($generated@@22 $generated@@27 $generated@@28))
))))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@31 $generated@@32)) ($generated@@23 $generated@@30 $generated@@32))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@31 $generated@@32))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! ($generated@@33 $generated@@6 $generated@@35 $generated@@34 $generated@@36)
 :pattern ( ($generated@@33 $generated@@6 $generated@@35 $generated@@34 $generated@@36))
)))
(assert (= ($generated@@4 $generated@@39) 3))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 Int) ) (!  (=> (or ($generated@@40 ($generated@@38 $generated@@39 $generated@@46) $generated@@47) (< 1 $generated@@20)) (and (and (=> (< 0 ($generated@@41 $generated@@46)) (=> (or (not (= $generated@@47 ($generated@@42 3))) (not true)) ($generated@@40 ($generated@@43 $generated@@46 ($generated@@44 1)) (+ $generated@@47 1)))) (=> (=> (< 0 ($generated@@41 $generated@@46)) (or (= $generated@@47 ($generated@@42 3)) ($generated@@21 ($generated@@37 $generated@@45) ($generated@@43 $generated@@46 ($generated@@44 1)) (+ $generated@@47 1)))) (=> (= ($generated@@42 0) ($generated@@41 $generated@@46)) (forall (($generated@@48 T@U) ) (!  (=> ($generated@@22 $generated@@48 $generated@@46) ($generated@@40 $generated@@48 $generated@@47))
 :pattern ( ($generated@@21 ($generated@@37 $generated@@45) $generated@@48 $generated@@47))
))))) (= ($generated@@21 ($generated@@37 $generated@@45) ($generated@@38 $generated@@39 $generated@@46) $generated@@47)  (and (=> (< 0 ($generated@@41 $generated@@46)) (or (= $generated@@47 ($generated@@42 3)) ($generated@@21 ($generated@@37 $generated@@45) ($generated@@43 $generated@@46 ($generated@@44 1)) (+ $generated@@47 1)))) (=> (= ($generated@@42 0) ($generated@@41 $generated@@46)) (exists (($generated@@49 T@U) ) (!  (and ($generated@@22 $generated@@49 $generated@@46) ($generated@@21 ($generated@@37 $generated@@45) $generated@@49 $generated@@47))
 :pattern ( ($generated@@21 ($generated@@37 $generated@@45) $generated@@49 $generated@@47))
)))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@37 $generated@@45) ($generated@@38 $generated@@39 $generated@@46) $generated@@47))
))))
(assert (forall (($generated@@50 T@U) ($generated@@51 Int) ($generated@@52 Int) ) (!  (=> (and (and (<= 0 $generated@@51) (<= 0 $generated@@52)) (<= (+ $generated@@51 $generated@@52) ($generated@@41 $generated@@50))) (= ($generated@@43 ($generated@@43 $generated@@50 ($generated@@44 $generated@@51)) ($generated@@44 $generated@@52)) ($generated@@43 $generated@@50 ($generated@@44 (+ $generated@@51 $generated@@52)))))
 :pattern ( ($generated@@43 ($generated@@43 $generated@@50 ($generated@@44 $generated@@51)) ($generated@@44 $generated@@52)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@55 Int) ) (!  (=> (or ($generated@@54 $generated@@55) (and (< 1 $generated@@20) (<= ($generated@@42 0) $generated@@55))) (<= ($generated@@42 0) ($generated@@53 $generated@@55)))
 :pattern ( ($generated@@53 $generated@@55))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@57 T@U) ($generated@@58 Int) ) (!  (=> (exists (($generated@@59 T@U) ) (! ($generated@@21 ($generated@@37 $generated@@57) $generated@@59 $generated@@58)
 :pattern ( ($generated@@21 ($generated@@37 $generated@@57) $generated@@59 $generated@@58))
)) ($generated@@56 ($generated@@37 $generated@@57) $generated@@58))
 :pattern ( ($generated@@56 ($generated@@37 $generated@@57) $generated@@58))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@60 T@U) ($generated@@61 Int) ($generated@@62 T@U) ) (!  (=> (= $generated@@62 ($generated@@44 0)) (not ($generated@@21 $generated@@60 $generated@@62 $generated@@61)))
 :pattern ( ($generated@@21 $generated@@60 $generated@@62 $generated@@61))
))))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@42 $generated@@63) $generated@@63)
 :pattern ( ($generated@@42 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@38 $generated@@65 $generated@@64) $generated@@64)
 :pattern ( ($generated@@38 $generated@@65 $generated@@64))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@68 Int) ) (!  (=> (or ($generated@@54 $generated@@68) (and (< 1 $generated@@20) (<= ($generated@@42 0) $generated@@68))) (and ($generated@@66 $generated@@68) (= ($generated@@53 $generated@@68) (ite ($generated@@56 ($generated@@37 $generated@@67) $generated@@68) (+ $generated@@68 2) (+ $generated@@68 3)))))
 :pattern ( ($generated@@53 $generated@@68))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@69 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@69 $generated@@72 $generated@@71))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@73 T@U) ($generated@@74 Int) ) (!  (=> ($generated@@56 ($generated@@37 $generated@@73) $generated@@74) (exists (($generated@@75 T@U) ) (! ($generated@@21 ($generated@@37 $generated@@73) $generated@@75 $generated@@74)
 :pattern ( ($generated@@21 ($generated@@37 $generated@@73) $generated@@75 $generated@@74))
)))
 :pattern ( ($generated@@56 ($generated@@37 $generated@@73) $generated@@74))
))))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@76 $generated@@6 $generated@@77 $generated@@34) (<= ($generated@@42 0) ($generated@@11 $generated@@77)))
 :pattern ( ($generated@@76 $generated@@6 $generated@@77 $generated@@34))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 Int) ) (! (= ($generated@@21 ($generated@@37 $generated@@78) $generated@@79 $generated@@80) ($generated@@21 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@21 ($generated@@37 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and ($generated@@81 $generated@@83) (<= ($generated@@41 $generated@@83) ($generated@@41 $generated@@82))) (and (= ($generated@@81 ($generated@@43 $generated@@82 $generated@@83)) ($generated@@81 $generated@@82)) (= ($generated@@41 ($generated@@43 $generated@@82 $generated@@83)) (- ($generated@@41 $generated@@82) ($generated@@41 $generated@@83)))))
 :pattern ( ($generated@@43 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 Int) ) (!  (=> (<= 0 $generated@@84) (and ($generated@@81 ($generated@@44 $generated@@84)) (= ($generated@@41 ($generated@@44 $generated@@84)) $generated@@84)))
 :pattern ( ($generated@@44 $generated@@84))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@85 Int) ) (!  (=> (or ($generated@@54 ($generated@@42 $generated@@85)) (and (< 1 $generated@@20) (<= ($generated@@42 0) $generated@@85))) (and ($generated@@66 ($generated@@42 $generated@@85)) (= ($generated@@53 ($generated@@42 $generated@@85)) (ite ($generated@@56 ($generated@@37 $generated@@67) ($generated@@42 $generated@@85)) (+ $generated@@85 2) (+ $generated@@85 3)))))
 :weight 3
 :pattern ( ($generated@@53 ($generated@@42 $generated@@85)))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 Int) ) (!  (=> (or ($generated@@40 ($generated@@38 $generated@@39 $generated@@87) ($generated@@42 $generated@@88)) (< 1 $generated@@20)) (and (and (=> (< 0 ($generated@@41 $generated@@87)) (=> (or (not (= ($generated@@42 $generated@@88) ($generated@@42 3))) (not true)) ($generated@@40 ($generated@@43 $generated@@87 ($generated@@44 1)) ($generated@@42 (+ $generated@@88 1))))) (=> (=> (< 0 ($generated@@41 $generated@@87)) (or (= ($generated@@42 $generated@@88) ($generated@@42 3)) ($generated@@21 ($generated@@37 $generated@@86) ($generated@@43 $generated@@87 ($generated@@44 1)) ($generated@@42 (+ $generated@@88 1))))) (=> (= ($generated@@42 0) ($generated@@41 $generated@@87)) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@22 $generated@@89 $generated@@87) ($generated@@40 $generated@@89 $generated@@88))
 :pattern ( ($generated@@21 ($generated@@37 $generated@@86) $generated@@89 $generated@@88))
))))) (= ($generated@@21 ($generated@@37 $generated@@86) ($generated@@38 $generated@@39 $generated@@87) ($generated@@42 $generated@@88))  (and (=> (< 0 ($generated@@41 $generated@@87)) (or (= ($generated@@42 $generated@@88) ($generated@@42 3)) ($generated@@21 ($generated@@37 $generated@@86) ($generated@@43 $generated@@87 ($generated@@44 1)) ($generated@@42 (+ $generated@@88 1))))) (=> (= ($generated@@42 0) ($generated@@41 $generated@@87)) (exists (($generated@@90 T@U) ) (!  (and ($generated@@22 $generated@@90 $generated@@87) ($generated@@21 ($generated@@37 $generated@@86) $generated@@90 $generated@@88))
 :pattern ( ($generated@@21 ($generated@@37 $generated@@86) $generated@@90 $generated@@88))
)))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@37 $generated@@86) ($generated@@38 $generated@@39 $generated@@87) ($generated@@42 $generated@@88)))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (or (or ($generated@@23 $generated@@91 $generated@@92) (= $generated@@91 $generated@@92)) ($generated@@23 $generated@@92 $generated@@91))
 :pattern ( ($generated@@23 $generated@@91 $generated@@92) ($generated@@23 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@22 $generated@@93 $generated@@94) ($generated@@23 $generated@@93 $generated@@94))
 :pattern ( ($generated@@22 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 Int) ) (! (= ($generated@@56 ($generated@@37 $generated@@95) $generated@@96) ($generated@@56 $generated@@95 $generated@@96))
 :pattern ( ($generated@@56 ($generated@@37 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (! (<= 0 ($generated@@41 $generated@@97))
 :pattern ( ($generated@@41 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@69 $generated@@99 ($generated@@70 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@70 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (and (and (and (=> ($generated@@23 $generated@@100 $generated@@101) (or (not (= $generated@@100 $generated@@101)) (not true))) (=> (and ($generated@@81 $generated@@100) (not ($generated@@81 $generated@@101))) ($generated@@23 $generated@@100 $generated@@101))) (=> (and ($generated@@81 $generated@@100) ($generated@@81 $generated@@101)) (= ($generated@@23 $generated@@100 $generated@@101) (< ($generated@@41 $generated@@100) ($generated@@41 $generated@@101))))) (=> (and ($generated@@23 $generated@@100 $generated@@101) ($generated@@81 $generated@@101)) ($generated@@81 $generated@@100)))
 :pattern ( ($generated@@23 $generated@@100 $generated@@101))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 Int) ) (!  (=> (or ($generated@@40 $generated@@103 $generated@@104) (< 1 $generated@@20)) (and (and (=> (< 0 ($generated@@41 $generated@@103)) (=> (or (not (= $generated@@104 ($generated@@42 3))) (not true)) ($generated@@40 ($generated@@43 $generated@@103 ($generated@@44 1)) (+ $generated@@104 1)))) (=> (=> (< 0 ($generated@@41 $generated@@103)) (or (= $generated@@104 ($generated@@42 3)) ($generated@@21 $generated@@102 ($generated@@43 $generated@@103 ($generated@@44 1)) (+ $generated@@104 1)))) (=> (= ($generated@@42 0) ($generated@@41 $generated@@103)) (forall (($generated@@105 T@U) ) (!  (=> ($generated@@22 $generated@@105 $generated@@103) ($generated@@40 $generated@@105 $generated@@104))
 :pattern ( ($generated@@21 $generated@@102 $generated@@105 $generated@@104))
))))) (= ($generated@@21 ($generated@@37 $generated@@102) $generated@@103 $generated@@104)  (and (=> (< 0 ($generated@@41 $generated@@103)) (or (= $generated@@104 ($generated@@42 3)) ($generated@@21 $generated@@102 ($generated@@43 $generated@@103 ($generated@@44 1)) (+ $generated@@104 1)))) (=> (= ($generated@@42 0) ($generated@@41 $generated@@103)) (exists (($generated@@106 T@U) ) (!  (and ($generated@@22 $generated@@106 $generated@@103) ($generated@@21 $generated@@102 $generated@@106 $generated@@104))
 :pattern ( ($generated@@21 $generated@@102 $generated@@106 $generated@@104))
)))))))
 :pattern ( ($generated@@21 ($generated@@37 $generated@@102) $generated@@103 $generated@@104))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@107 $generated@@117 $generated@@118 $generated@@119 ($generated@@113 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@122 $generated@@123) $generated@@120)
 :weight 0
)) (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@107 $generated@@124 $generated@@125 $generated@@126 ($generated@@113 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@107 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@107 $generated@@133 $generated@@134 $generated@@135 ($generated@@113 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@107 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)))) (= ($generated@@4 $generated@@108) 4)) (= ($generated@@4 $generated@@109) 5)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@111 $generated@@142 $generated@@143 ($generated@@114 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@144) $generated@@146) $generated@@144)
 :weight 0
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@151 $generated@@152) (= ($generated@@111 $generated@@147 $generated@@148 ($generated@@114 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@152) ($generated@@111 $generated@@147 $generated@@148 $generated@@150 $generated@@152)))
 :weight 0
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (= ($generated@@4 ($generated@@112 $generated@@153 $generated@@154)) 6))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@115 ($generated@@112 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@112 $generated@@155 $generated@@156))
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@116 ($generated@@112 $generated@@157 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@112 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@9 ($generated@@107 $generated@@108 $generated@@109 $generated@@5 ($generated@@110 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))  (=> (and (or (not (= $generated@@163 $generated@@159)) (not true)) ($generated@@9 ($generated@@69 $generated@@5 ($generated@@111 $generated@@109 $generated@@39 ($generated@@111 $generated@@108 ($generated@@112 $generated@@109 $generated@@39) $generated@@160 $generated@@163) $generated@@161)))) $generated@@162))
 :pattern ( ($generated@@107 $generated@@108 $generated@@109 $generated@@5 ($generated@@110 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> ($generated@@81 $generated@@165) (= $generated@@165 ($generated@@44 ($generated@@41 $generated@@165))))
 :pattern ( ($generated@@41 $generated@@165))
 :pattern ( ($generated@@81 $generated@@165))
)))
(assert (= ($generated@@29 $generated@@34) $generated@@2))
(assert (= ($generated@@166 $generated@@34) $generated@@3))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and ($generated@@81 $generated@@168) (<= ($generated@@41 $generated@@168) ($generated@@41 $generated@@167))) (or (and (= $generated@@168 ($generated@@44 0)) (= ($generated@@43 $generated@@167 $generated@@168) $generated@@167)) (and (or (not (= $generated@@168 ($generated@@44 0))) (not true)) ($generated@@23 ($generated@@43 $generated@@167 $generated@@168) $generated@@167))))
 :pattern ( ($generated@@43 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 Int) ) (! (= ($generated@@70 $generated@@6 ($generated@@10 ($generated@@42 $generated@@169))) ($generated@@38 $generated@@39 ($generated@@70 $generated@@6 ($generated@@10 $generated@@169))))
 :pattern ( ($generated@@70 $generated@@6 ($generated@@10 ($generated@@42 $generated@@169))))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@70 $generated@@171 ($generated@@38 $generated@@171 $generated@@170)) ($generated@@38 $generated@@39 ($generated@@70 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@70 $generated@@171 ($generated@@38 $generated@@171 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! ($generated@@33 $generated@@6 $generated@@173 $generated $generated@@172)
 :pattern ( ($generated@@33 $generated@@6 $generated@@173 $generated $generated@@172))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@174 T@U) ($generated@@175 Int) ) (!  (=> (or ($generated@@66 $generated@@175) (< 0 $generated@@20)) (and (=> (or (not (= $generated@@175 ($generated@@42 3))) (not true)) ($generated@@66 (+ $generated@@175 1))) (= ($generated@@56 ($generated@@37 $generated@@174) $generated@@175)  (or (= $generated@@175 ($generated@@42 3)) ($generated@@56 $generated@@174 (+ $generated@@175 1))))))
 :pattern ( ($generated@@56 ($generated@@37 $generated@@174) $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ) (! ($generated@@76 $generated@@6 $generated@@176 $generated)
 :pattern ( ($generated@@76 $generated@@6 $generated@@176 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@183  (=> (and (not ($generated@@56 ($generated@@37 $generated@@67) $generated@@177)) (= (ControlFlow 0 5) (- 0 4))) ($generated@@76 $generated@@6 ($generated@@10 (+ $generated@@177 3)) $generated@@34))))
(let (($generated@@184  (=> (and ($generated@@56 ($generated@@37 $generated@@67) $generated@@177) (= (ControlFlow 0 3) (- 0 2))) ($generated@@76 $generated@@6 ($generated@@10 (+ $generated@@177 2)) $generated@@34))))
(let (($generated@@185  (=> (and ($generated@@33 $generated@@6 ($generated@@10 $generated@@177) $generated $generated@@178) ($generated@@66 $generated@@177)) (and (=> (= (ControlFlow 0 6) 3) $generated@@184) (=> (= (ControlFlow 0 6) 5) $generated@@183)))))
(let (($generated@@186 true))
(let (($generated@@187  (=> (= $generated@@179 ($generated@@110 $generated@@180 $generated@@178 $generated@@1 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@186) (=> (= (ControlFlow 0 7) 6) $generated@@185)))))
(let (($generated@@188  (=> (and (and (and ($generated@@181 $generated@@178) ($generated@@182 $generated@@178)) (<= ($generated@@42 0) $generated@@177)) (and (= 1 $generated@@20) (= (ControlFlow 0 8) 7))) $generated@@187)))
$generated@@188)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
