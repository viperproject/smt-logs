(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@22 (T@T T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@69 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@73 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T T@T) T@T)
(declare-fun $generated@@76 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@77 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ) (!  (=> ($generated@@19 $generated@@21) ($generated@@20 $generated@@21))
 :pattern ( ($generated@@19 $generated@@21))
)))
(assert (= ($generated@@3 $generated@@23) 3))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@22 $generated@@23 $generated@@26 ($generated@@24 $generated@@25)) ($generated@@20 $generated@@26))
 :pattern ( ($generated@@20 $generated@@26) ($generated@@22 $generated@@23 $generated@@26 ($generated@@24 $generated@@25)))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@22 $generated@@23 ($generated@@27 $generated@@30 $generated@@31) ($generated@@24 $generated@@29))  (and ($generated@@28 $generated@@30 $generated@@29) ($generated@@22 $generated@@23 $generated@@31 ($generated@@24 $generated@@29))))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@27 $generated@@30 $generated@@31) ($generated@@24 $generated@@29)))
)))
(assert (forall (($generated@@33 T@U) ) (! (= ($generated@@20 $generated@@33) (= ($generated@@32 $generated@@33) $generated@@1))
 :pattern ( ($generated@@20 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@T) ) (! (= ($generated@@35 $generated@@37 ($generated@@34 $generated@@37 $generated@@36)) $generated@@36)
 :pattern ( ($generated@@34 $generated@@37 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ) (!  (=> ($generated@@20 $generated@@38) (exists (($generated@@39 T@U) ($generated@@40 T@U) ) (= $generated@@38 ($generated@@27 $generated@@39 $generated@@40))))
 :pattern ( ($generated@@20 $generated@@38))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@41 ($generated@@35 $generated@@46 $generated@@43) $generated@@44 $generated@@45) ($generated@@42 $generated@@46 $generated@@43 $generated@@44 $generated@@45))
 :pattern ( ($generated@@41 ($generated@@35 $generated@@46 $generated@@43) $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@49 T@U) ) (!  (and (= ($generated@@47 ($generated@@24 $generated@@49)) $generated@@0) (= ($generated@@48 ($generated@@24 $generated@@49)) $generated@@2))
 :pattern ( ($generated@@24 $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@28 ($generated@@35 $generated@@52 $generated@@50) $generated@@51) ($generated@@22 $generated@@52 $generated@@50 $generated@@51))
 :pattern ( ($generated@@28 ($generated@@35 $generated@@52 $generated@@50) $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@32 ($generated@@27 $generated@@53 $generated@@54)) $generated@@1)
 :pattern ( ($generated@@27 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@55 ($generated@@27 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@27 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@58 ($generated@@27 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@27 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@61 ($generated@@24 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@24 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@34 $generated@@64 ($generated@@35 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@35 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (and ($generated@@65 $generated@@68) (and ($generated@@20 $generated@@66) ($generated@@42 $generated@@23 $generated@@66 ($generated@@24 $generated@@67) $generated@@68))) ($generated@@41 ($generated@@55 $generated@@66) $generated@@67 $generated@@68))
 :pattern ( ($generated@@41 ($generated@@55 $generated@@66) $generated@@67 $generated@@68))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@69 $generated@@80 $generated@@81 $generated@@82 ($generated@@76 $generated@@80 $generated@@81 $generated@@82 $generated@@84 $generated@@85 $generated@@86 $generated@@83) $generated@@85 $generated@@86) $generated@@83)
 :weight 0
)) (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (or (= $generated@@92 $generated@@94) (= ($generated@@69 $generated@@87 $generated@@88 $generated@@89 ($generated@@76 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@93 $generated@@90) $generated@@94 $generated@@95) ($generated@@69 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@94 $generated@@95)))
 :weight 0
)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (or (= $generated@@102 $generated@@104) (= ($generated@@69 $generated@@96 $generated@@97 $generated@@98 ($generated@@76 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@103 $generated@@104) ($generated@@69 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@103 $generated@@104)))
 :weight 0
)))) (= ($generated@@3 $generated@@70) 4)) (= ($generated@@3 $generated@@71) 5)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@73 $generated@@105 $generated@@106 ($generated@@77 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@107) $generated@@109) $generated@@107)
 :weight 0
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@73 $generated@@110 $generated@@111 ($generated@@77 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@73 $generated@@110 $generated@@111 $generated@@113 $generated@@115)))
 :weight 0
))) (= ($generated@@3 $generated@@74) 6)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (= ($generated@@3 ($generated@@75 $generated@@116 $generated@@117)) 7))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@78 ($generated@@75 $generated@@118 $generated@@119)) $generated@@118)
 :pattern ( ($generated@@75 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (! (= ($generated@@79 ($generated@@75 $generated@@120 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@75 $generated@@120 $generated@@121))
))))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 Bool) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@8 ($generated@@69 $generated@@70 $generated@@71 $generated@@4 ($generated@@72 $generated@@122 $generated@@123 $generated@@124 $generated@@125) $generated@@126 $generated@@127))  (=> (and (or (not (= $generated@@126 $generated@@122)) (not true)) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@73 $generated@@71 $generated@@74 ($generated@@73 $generated@@70 ($generated@@75 $generated@@71 $generated@@74) $generated@@123 $generated@@126) $generated@@124)))) $generated@@125))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71 $generated@@4 ($generated@@72 $generated@@122 $generated@@123 $generated@@124 $generated@@125) $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@28 $generated@@129 ($generated@@24 $generated@@128)) (and (= ($generated@@35 $generated@@23 ($generated@@34 $generated@@23 $generated@@129)) $generated@@129) ($generated@@22 $generated@@23 ($generated@@34 $generated@@23 $generated@@129) ($generated@@24 $generated@@128))))
 :pattern ( ($generated@@28 $generated@@129 ($generated@@24 $generated@@128)))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@65 $generated@@132) (and ($generated@@20 $generated@@130) ($generated@@42 $generated@@23 $generated@@130 ($generated@@24 $generated@@131) $generated@@132))) ($generated@@42 $generated@@23 ($generated@@58 $generated@@130) ($generated@@24 $generated@@131) $generated@@132))
 :pattern ( ($generated@@42 $generated@@23 ($generated@@58 $generated@@130) ($generated@@24 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> ($generated@@65 $generated@@136) (= ($generated@@42 $generated@@23 ($generated@@27 $generated@@134 $generated@@135) ($generated@@24 $generated@@133) $generated@@136)  (and ($generated@@41 $generated@@134 $generated@@133 $generated@@136) ($generated@@42 $generated@@23 $generated@@135 ($generated@@24 $generated@@133) $generated@@136))))
 :pattern ( ($generated@@42 $generated@@23 ($generated@@27 $generated@@134 $generated@@135) ($generated@@24 $generated@@133) $generated@@136))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 () Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@152 true))
(let (($generated@@153  (=> (= $generated@@137 ($generated@@27 $generated@@138 $generated@@139)) (=> (and ($generated@@28 $generated@@138 $generated@@140) ($generated@@41 $generated@@138 $generated@@140 $generated@@141)) (=> (and (and (and ($generated@@22 $generated@@23 $generated@@139 ($generated@@24 $generated@@140)) ($generated@@42 $generated@@23 $generated@@139 ($generated@@24 $generated@@140) $generated@@141)) (and ($generated@@28 $generated@@142 $generated@@140) ($generated@@41 $generated@@142 $generated@@140 $generated@@141))) (and (and (= $generated@@143 $generated@@138) ($generated@@28 $generated@@143 $generated@@140)) (and (= $generated@@142 $generated@@143) (= (ControlFlow 0 3) (- 0 2))))) true)))))
(let (($generated@@154  (=> (= $generated@@144 ($generated@@27 $generated@@145 $generated@@137)) (=> (and (and ($generated@@28 $generated@@145 $generated@@140) ($generated@@41 $generated@@145 $generated@@140 $generated@@141)) (and ($generated@@22 $generated@@23 $generated@@137 ($generated@@24 $generated@@140)) ($generated@@42 $generated@@23 $generated@@137 ($generated@@24 $generated@@140) $generated@@141))) (and (=> (= (ControlFlow 0 5) 3) $generated@@153) (=> (= (ControlFlow 0 5) 4) $generated@@152))))))
(let (($generated@@155 true))
(let (($generated@@156  (=> (= $generated@@146 ($generated@@72 $generated@@147 $generated@@141 $generated false)) (and (=> (= (ControlFlow 0 6) 5) $generated@@154) (=> (= (ControlFlow 0 6) 1) $generated@@155)))))
(let (($generated@@157  (=> (and ($generated@@65 $generated@@141) ($generated@@148 $generated@@141)) (=> (and (and (and (and ($generated@@22 $generated@@23 $generated@@144 ($generated@@24 $generated@@140)) ($generated@@42 $generated@@23 $generated@@144 ($generated@@24 $generated@@140) $generated@@141)) ($generated@@19 $generated@@144)) (=> $generated@@149 (and ($generated@@28 $generated@@150 $generated@@140) ($generated@@41 $generated@@150 $generated@@140 $generated@@141)))) (and (= 1 $generated@@151) (= (ControlFlow 0 7) 6))) $generated@@156))))
$generated@@157)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
