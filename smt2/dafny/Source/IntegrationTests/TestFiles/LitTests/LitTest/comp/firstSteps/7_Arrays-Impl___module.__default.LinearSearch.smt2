(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@107 (T@U T@U) Bool)
(declare-fun $generated@@120 (T@U) Int)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@137 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@1) 0))
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@27)) (not true)) (= ($generated@@28 $generated@@31) ($generated@@26 $generated@@30))) ($generated@@29 $generated@@9 ($generated@@13 ($generated@@25 $generated@@31)) $generated))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! ($generated@@32 $generated@@9 $generated@@34 $generated@@33 $generated@@35)
 :pattern ( ($generated@@32 $generated@@9 $generated@@34 $generated@@33 $generated@@35))
)))
(assert (= ($generated@@7 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40) ($generated@@32 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
 :pattern ( ($generated@@32 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
 :pattern ( ($generated@@32 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@42 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@42 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@42 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@7 $generated@@43) 4)) (= ($generated@@7 $generated@@44) 5)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@7 ($generated@@45 $generated@@60 $generated@@61)) 6))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@45 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@67 ($generated@@26 $generated@@66) $generated@@68)  (or (= $generated@@67 $generated@@27) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@68 $generated@@67) $generated@@1)))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@67 ($generated@@26 $generated@@66) $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@69 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@70 $generated@@72) $generated@@1))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@71 $generated@@72) $generated@@1))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@71 $generated@@72) $generated@@1))
)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 Int) ) (! (= ($generated@@73 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 Int) ) (!  (=> (and (and (and ($generated@@79 $generated@@82) (and (or (not (= $generated@@83 $generated@@27)) (not true)) (= ($generated@@28 $generated@@83) ($generated@@26 $generated@@81)))) (and (<= 0 $generated@@84) (< $generated@@84 ($generated@@25 $generated@@83)))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@83) $generated@@1)))) ($generated@@80 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@83) ($generated@@78 $generated@@84)) $generated@@81 $generated@@82))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@83) ($generated@@78 $generated@@84)) ($generated@@26 $generated@@81))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@41 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@41 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@29 $generated@@9 $generated@@88 $generated@@33) (<= ($generated@@73 0) ($generated@@14 $generated@@88)))
 :pattern ( ($generated@@29 $generated@@9 $generated@@88 $generated@@33))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@90 ($generated@@37 $generated@@89))  (and ($generated@@29 $generated@@36 $generated@@90 ($generated@@26 $generated@@89)) (or (not (= $generated@@90 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@90 ($generated@@37 $generated@@89)))
 :pattern ( ($generated@@29 $generated@@36 $generated@@90 ($generated@@26 $generated@@89)))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@80 ($generated@@85 $generated@@94 $generated@@91) $generated@@92 $generated@@93) ($generated@@32 $generated@@94 $generated@@91 $generated@@92 $generated@@93))
 :pattern ( ($generated@@80 ($generated@@85 $generated@@94 $generated@@91) $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@69 $generated@@95 $generated@@96) (=> ($generated@@80 $generated@@97 $generated@@98 $generated@@95) ($generated@@80 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@69 $generated@@95 $generated@@96) ($generated@@80 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (!  (=> ($generated@@69 $generated@@99 $generated@@100) (=> ($generated@@32 $generated@@103 $generated@@101 $generated@@102 $generated@@99) ($generated@@32 $generated@@103 $generated@@101 $generated@@102 $generated@@100)))
 :pattern ( ($generated@@69 $generated@@99 $generated@@100) ($generated@@32 $generated@@103 $generated@@101 $generated@@102 $generated@@99))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@24 ($generated@@26 $generated@@105)) $generated@@3) (= ($generated@@104 ($generated@@26 $generated@@105)) $generated@@6))
 :pattern ( ($generated@@26 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@24 ($generated@@37 $generated@@106)) $generated@@4) (= ($generated@@104 ($generated@@37 $generated@@106)) $generated@@6))
 :pattern ( ($generated@@37 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@107 $generated@@108 $generated@@33) (and (= ($generated@@85 $generated@@9 ($generated@@41 $generated@@9 $generated@@108)) $generated@@108) ($generated@@29 $generated@@9 ($generated@@41 $generated@@9 $generated@@108) $generated@@33)))
 :pattern ( ($generated@@107 $generated@@108 $generated@@33))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@110 ($generated@@26 $generated@@109))  (or (= $generated@@110 $generated@@27) (= ($generated@@28 $generated@@110) ($generated@@26 $generated@@109))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@110 ($generated@@26 $generated@@109)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or (not (= $generated@@111 $generated@@113)) (not true)) (=> (and ($generated@@69 $generated@@111 $generated@@112) ($generated@@69 $generated@@112 $generated@@113)) ($generated@@69 $generated@@111 $generated@@113)))
 :pattern ( ($generated@@69 $generated@@111 $generated@@112) ($generated@@69 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@107 $generated@@114 $generated) (and (= ($generated@@85 $generated@@9 ($generated@@41 $generated@@9 $generated@@114)) $generated@@114) ($generated@@29 $generated@@9 ($generated@@41 $generated@@9 $generated@@114) $generated)))
 :pattern ( ($generated@@107 $generated@@114 $generated))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@107 ($generated@@85 $generated@@117 $generated@@115) $generated@@116) ($generated@@29 $generated@@117 $generated@@115 $generated@@116))
 :pattern ( ($generated@@107 ($generated@@85 $generated@@117 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (<= 0 ($generated@@25 $generated@@118))
 :pattern ( ($generated@@25 $generated@@118))
)))
(assert (forall (($generated@@119 Int) ) (! (= ($generated@@23 ($generated@@78 $generated@@119)) 1)
 :pattern ( ($generated@@78 $generated@@119))
)))
(assert (forall (($generated@@121 Int) ) (! (= ($generated@@120 ($generated@@78 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@78 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@26 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@26 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@37 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@37 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@41 $generated@@127 ($generated@@85 $generated@@127 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@85 $generated@@127 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and (and ($generated@@79 $generated@@129) (and (or (not (= $generated@@130 $generated@@27)) (not true)) (= ($generated@@28 $generated@@130) ($generated@@26 $generated@@128)))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@129 $generated@@130) $generated@@1)))) ($generated@@32 $generated@@9 ($generated@@13 ($generated@@25 $generated@@130)) $generated $generated@@129))
 :pattern ( ($generated@@25 $generated@@130) ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@129 $generated@@130) $generated@@1)) ($generated@@26 $generated@@128))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 Int) ) (!  (=> (and (and ($generated@@79 $generated@@132) (and (or (not (= $generated@@133 $generated@@27)) (not true)) (= ($generated@@28 $generated@@133) ($generated@@26 $generated@@131)))) (and (<= 0 $generated@@134) (< $generated@@134 ($generated@@25 $generated@@133)))) ($generated@@107 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@132 $generated@@133) ($generated@@78 $generated@@134)) $generated@@131))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@132 $generated@@133) ($generated@@78 $generated@@134)) ($generated@@26 $generated@@131))
)))
(assert  (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@135 $generated@@138 $generated@@139 $generated@@140 ($generated@@137 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@143 $generated@@144) $generated@@141)
 :weight 0
)) (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@135 $generated@@145 $generated@@146 $generated@@147 ($generated@@137 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@135 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@135 $generated@@154 $generated@@155 $generated@@156 ($generated@@137 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@135 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 Bool) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@12 ($generated@@135 $generated@@36 $generated@@43 $generated@@8 ($generated@@136 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))  (=> (and (or (not (= $generated@@167 $generated@@163)) (not true)) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@164 $generated@@167) $generated@@165)))) $generated@@166))
 :pattern ( ($generated@@135 $generated@@36 $generated@@43 $generated@@8 ($generated@@136 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@107 $generated@@170 ($generated@@26 $generated@@169)) (and (= ($generated@@85 $generated@@36 ($generated@@41 $generated@@36 $generated@@170)) $generated@@170) ($generated@@29 $generated@@36 ($generated@@41 $generated@@36 $generated@@170) ($generated@@26 $generated@@169))))
 :pattern ( ($generated@@107 $generated@@170 ($generated@@26 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@107 $generated@@172 ($generated@@37 $generated@@171)) (and (= ($generated@@85 $generated@@36 ($generated@@41 $generated@@36 $generated@@172)) $generated@@172) ($generated@@29 $generated@@36 ($generated@@41 $generated@@36 $generated@@172) ($generated@@37 $generated@@171))))
 :pattern ( ($generated@@107 $generated@@172 ($generated@@37 $generated@@171)))
)))
(assert (= ($generated@@24 $generated@@33) $generated@@2))
(assert (= ($generated@@104 $generated@@33) $generated@@5))
(assert (forall (($generated@@173 Int) ) (! (= ($generated@@85 $generated@@9 ($generated@@13 ($generated@@73 $generated@@173))) ($generated@@75 $generated@@44 ($generated@@85 $generated@@9 ($generated@@13 $generated@@173))))
 :pattern ( ($generated@@85 $generated@@9 ($generated@@13 ($generated@@73 $generated@@173))))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@85 $generated@@175 ($generated@@75 $generated@@175 $generated@@174)) ($generated@@75 $generated@@44 ($generated@@85 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@85 $generated@@175 ($generated@@75 $generated@@175 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! ($generated@@32 $generated@@9 $generated@@177 $generated $generated@@176)
 :pattern ( ($generated@@32 $generated@@9 $generated@@177 $generated $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! ($generated@@29 $generated@@9 $generated@@178 $generated)
 :pattern ( ($generated@@29 $generated@@9 $generated@@178 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@193  (and (=> (= (ControlFlow 0 11) (- 0 13)) (<= ($generated@@73 0) $generated@@179)) (=> (<= ($generated@@73 0) $generated@@179) (and (=> (= (ControlFlow 0 11) (- 0 12)) (<= $generated@@179 ($generated@@25 $generated@@180))) (=> (<= $generated@@179 ($generated@@25 $generated@@180)) (=> (= (ControlFlow 0 11) (- 0 10)) (or (= $generated@@179 ($generated@@25 $generated@@180)) (= ($generated@@14 ($generated@@41 $generated@@9 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@180) ($generated@@78 $generated@@179)))) $generated@@182)))))))))
(let (($generated@@194  (=> (= ($generated@@14 ($generated@@41 $generated@@9 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@180) ($generated@@78 $generated@@183)))) $generated@@182) (=> (and (= $generated@@179 $generated@@183) (= (ControlFlow 0 15) 11)) $generated@@193))))
(let (($generated@@195  (=> (<= ($generated@@25 $generated@@180) $generated@@183) (=> (and (= $generated@@179 $generated@@183) (= (ControlFlow 0 14) 11)) $generated@@193))))
(let (($generated@@196  (=> (or (not (= ($generated@@14 ($generated@@41 $generated@@9 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@180) ($generated@@78 $generated@@183)))) $generated@@182)) (not true)) (and (=> (= (ControlFlow 0 6) (- 0 9)) ($generated@@29 $generated@@9 ($generated@@13 (+ $generated@@183 1)) $generated@@33)) (=> ($generated@@29 $generated@@9 ($generated@@13 (+ $generated@@183 1)) $generated@@33) (=> (= $generated@@184 (+ $generated@@183 1)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (<= 0 $generated@@185) (= (- ($generated@@25 $generated@@180) $generated@@184) $generated@@185))) (=> (or (<= 0 $generated@@185) (= (- ($generated@@25 $generated@@180) $generated@@184) $generated@@185)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (< (- ($generated@@25 $generated@@180) $generated@@184) $generated@@185)) (=> (< (- ($generated@@25 $generated@@180) $generated@@184) $generated@@185) (=> (= (ControlFlow 0 6) (- 0 5)) (=> $generated@@186 (<= $generated@@184 ($generated@@25 $generated@@180))))))))))))))
(let (($generated@@197  (=> (and (< $generated@@183 ($generated@@25 $generated@@180)) (= $generated@@185 (- ($generated@@25 $generated@@180) $generated@@183))) (and (=> (= (ControlFlow 0 16) (- 0 18)) (or (not (= $generated@@180 $generated@@27)) (not true))) (=> (or (not (= $generated@@180 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@25 $generated@@180)))) (=> (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@25 $generated@@180))) (and (=> (= (ControlFlow 0 16) 15) $generated@@194) (=> (= (ControlFlow 0 16) 6) $generated@@196)))))))))
(let (($generated@@198  (=> $generated@@186 (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (not (= $generated@@180 $generated@@27)) (not true))) (=> (or (not (= $generated@@180 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 19) 14) $generated@@195) (=> (= (ControlFlow 0 19) 16) $generated@@197)))))))
(let (($generated@@199  (=> (not $generated@@186) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= $generated@@180 $generated@@27)) (not true))) (=> (and (<= $generated@@183 ($generated@@25 $generated@@180)) (= (ControlFlow 0 3) (- 0 2))) (or (not (= $generated@@180 $generated@@27)) (not true)))))))
(let (($generated@@200  (and (=> (= (ControlFlow 0 21) 3) $generated@@199) (=> (= (ControlFlow 0 21) 19) $generated@@198))))
(let (($generated@@201 true))
(let (($generated@@202  (=> (<= ($generated@@73 0) $generated@@183) (=> (and (and (and (<= 0 $generated@@183) (not false)) (=> $generated@@186 (<= $generated@@183 ($generated@@25 $generated@@180)))) (and (and (forall (($generated@@203 T@U) ) (!  (=> (and (or (not (= $generated@@203 $generated@@27)) (not true)) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@203) $generated@@1)))) (= ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@203) ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@203)))
 :pattern ( ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@203))
)) ($generated@@69 $generated@@181 $generated@@181)) (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (or (not (= $generated@@204 $generated@@27)) (not true)) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@204) $generated@@1)))) (or (= ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@204) $generated@@205) ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@204) $generated@@205)) ($generated@@12 ($generated@@135 $generated@@36 $generated@@43 $generated@@8 $generated@@187 $generated@@204 $generated@@205))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@204) $generated@@205))
)) (<= (- ($generated@@25 $generated@@180) $generated@@183) $generated@@188)))) (and (=> (= (ControlFlow 0 22) 1) $generated@@201) (=> (= (ControlFlow 0 22) 21) $generated@@200))))))
(let (($generated@@206  (=> (= $generated@@187 ($generated@@136 $generated@@27 $generated@@181 $generated@@1 false)) (and (=> (= (ControlFlow 0 23) (- 0 25)) ($generated@@29 $generated@@9 ($generated@@13 ($generated@@73 0)) $generated@@33)) (=> ($generated@@29 $generated@@9 ($generated@@13 ($generated@@73 0)) $generated@@33) (=> (and (= $generated@@189 ($generated@@73 0)) (= $generated@@188 (- ($generated@@25 $generated@@180) $generated@@189))) (and (=> (= (ControlFlow 0 23) (- 0 24)) (=> $generated@@186 (<= $generated@@189 ($generated@@25 $generated@@180)))) (=> (=> $generated@@186 (<= $generated@@189 ($generated@@25 $generated@@180))) (=> (= (ControlFlow 0 23) 22) $generated@@202)))))))))
(let (($generated@@207  (=> (and ($generated@@79 $generated@@181) ($generated@@190 $generated@@181)) (=> (and (and (and ($generated@@29 $generated@@36 $generated@@180 ($generated@@37 $generated)) ($generated@@32 $generated@@36 $generated@@180 ($generated@@37 $generated) $generated@@181)) (<= ($generated@@73 0) $generated@@191)) (and (= 0 $generated@@192) (= (ControlFlow 0 26) 23))) $generated@@206))))
$generated@@207)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
