(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U) T@U)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@20 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@T T@T) T@T)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@27 (T@T) T@T)
(declare-fun $generated@@28 (T@T) T@T)
(declare-fun $generated@@49 (Real) Int)
(declare-fun $generated@@51 (Int) Int)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@59 (Int) Real)
(declare-fun $generated@@67 (Int) T@U)
(declare-fun $generated@@68 (T@U) Int)
(declare-fun $generated@@70 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@72 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T T@U T@U) Bool)
(declare-fun $generated@@109 () T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (= ($generated@@18 $generated) $generated@@0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@29 T@T) ($generated@@30 T@T) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@20 $generated@@29 $generated@@30 ($generated@@26 $generated@@29 $generated@@30 $generated@@32 $generated@@33 $generated@@31) $generated@@33) $generated@@31)
 :weight 0
)) (forall (($generated@@34 T@T) ($generated@@35 T@T) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (or (= $generated@@38 $generated@@39) (= ($generated@@20 $generated@@34 $generated@@35 ($generated@@26 $generated@@34 $generated@@35 $generated@@37 $generated@@38 $generated@@36) $generated@@39) ($generated@@20 $generated@@34 $generated@@35 $generated@@37 $generated@@39)))
 :weight 0
))) (= ($generated@@2 $generated@@21) 3)) (= ($generated@@2 $generated@@22) 4)) (= ($generated@@2 $generated@@23) 5)) (forall (($generated@@40 T@T) ($generated@@41 T@T) ) (= ($generated@@2 ($generated@@24 $generated@@40 $generated@@41)) 6))) (forall (($generated@@42 T@T) ($generated@@43 T@T) ) (! (= ($generated@@27 ($generated@@24 $generated@@42 $generated@@43)) $generated@@42)
 :pattern ( ($generated@@24 $generated@@42 $generated@@43))
))) (forall (($generated@@44 T@T) ($generated@@45 T@T) ) (! (= ($generated@@28 ($generated@@24 $generated@@44 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@24 $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@19 $generated@@46 $generated@@47) (forall (($generated@@48 T@U) ) (!  (=> ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@46 $generated@@48) $generated@@1))) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@47 $generated@@48) $generated@@1))))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@47 $generated@@48) $generated@@1))
)))
 :pattern ( ($generated@@19 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 Real) ) (! (= ($generated@@49 $generated@@50) (to_int $generated@@50))
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 Int) ) (! (= ($generated@@51 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 $generated@@54) $generated@@54)
 :pattern ( ($generated@@53 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 ($generated@@25 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@25 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@60 Int) ) (! (= ($generated@@59 $generated@@60) (to_real $generated@@60))
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (or (not (= $generated@@61 $generated@@63)) (not true)) (=> (and ($generated@@19 $generated@@61 $generated@@62) ($generated@@19 $generated@@62 $generated@@63)) ($generated@@19 $generated@@61 $generated@@63)))
 :pattern ( ($generated@@19 $generated@@61 $generated@@62) ($generated@@19 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@64 Int) ) (! (= ($generated@@49 ($generated@@59 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@49 ($generated@@59 $generated@@64)))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@25 $generated@@66 ($generated@@56 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@56 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@69 Int) ) (!  (=> (or (and (<= 0 $generated@@69) (< $generated@@69 55296)) (and (<= 57344 $generated@@69) (< $generated@@69 1114112))) (= ($generated@@68 ($generated@@67 $generated@@69)) $generated@@69))
 :pattern ( ($generated@@67 $generated@@69))
)))
(assert  (and (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@70 $generated@@73 $generated@@74 $generated@@75 ($generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@79 $generated@@76) $generated@@78 $generated@@79) $generated@@76)
 :weight 0
)) (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (or (= $generated@@85 $generated@@87) (= ($generated@@70 $generated@@80 $generated@@81 $generated@@82 ($generated@@72 $generated@@80 $generated@@81 $generated@@82 $generated@@84 $generated@@85 $generated@@86 $generated@@83) $generated@@87 $generated@@88) ($generated@@70 $generated@@80 $generated@@81 $generated@@82 $generated@@84 $generated@@87 $generated@@88)))
 :weight 0
)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (or (= $generated@@95 $generated@@97) (= ($generated@@70 $generated@@89 $generated@@90 $generated@@91 ($generated@@72 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@94 $generated@@95 $generated@@92) $generated@@96 $generated@@97) ($generated@@70 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@96 $generated@@97)))
 :weight 0
)))))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 Bool) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@7 ($generated@@70 $generated@@23 $generated@@21 $generated@@3 ($generated@@71 $generated@@98 $generated@@99 $generated@@100 $generated@@101) $generated@@102 $generated@@103))  (=> (and (or (not (= $generated@@102 $generated@@98)) (not true)) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@99 $generated@@102) $generated@@100)))) $generated@@101))
 :pattern ( ($generated@@70 $generated@@23 $generated@@21 $generated@@3 ($generated@@71 $generated@@98 $generated@@99 $generated@@100 $generated@@101) $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (!  (and (= ($generated@@67 ($generated@@68 $generated@@104)) $generated@@104) (or (and (<= 0 ($generated@@68 $generated@@104)) (< ($generated@@68 $generated@@104) 55296)) (and (<= 57344 ($generated@@68 $generated@@104)) (< ($generated@@68 $generated@@104) 1114112))))
 :pattern ( ($generated@@68 $generated@@104))
)))
(assert (forall (($generated@@105 Int) ) (! (= ($generated@@56 $generated@@4 ($generated@@8 ($generated@@51 $generated@@105))) ($generated@@53 $generated@@22 ($generated@@56 $generated@@4 ($generated@@8 $generated@@105))))
 :pattern ( ($generated@@56 $generated@@4 ($generated@@8 ($generated@@51 $generated@@105))))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@56 $generated@@107 ($generated@@53 $generated@@107 $generated@@106)) ($generated@@53 $generated@@22 ($generated@@56 $generated@@107 $generated@@106)))
 :pattern ( ($generated@@56 $generated@@107 ($generated@@53 $generated@@107 $generated@@106)))
)))
(assert (= ($generated@@2 $generated@@109) 7))
(assert (forall (($generated@@110 T@U) ) (! ($generated@@108 $generated@@109 $generated@@110 $generated)
 :pattern ( ($generated@@108 $generated@@109 $generated@@110 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@111 () Int)
(declare-fun $generated@@112 () T@U)
(declare-fun $generated@@113 () Int)
(declare-fun $generated@@114 () Int)
(declare-fun $generated@@115 () Bool)
(declare-fun $generated@@116 (T@U) Bool)
(declare-fun $generated@@117 () T@U)
(declare-fun $generated@@118 (T@U) Bool)
(declare-fun $generated@@119 () T@U)
(declare-fun $generated@@120 () T@U)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 () Int)
(declare-fun $generated@@123 () Int)
(declare-fun $generated@@124 () Bool)
(declare-fun $generated@@125 () T@U)
(declare-fun $generated@@126 () Int)
(declare-fun $generated@@127 () Bool)
(declare-fun $generated@@128 () T@U)
(declare-fun $generated@@129 () Real)
(declare-fun $generated@@130 () Bool)
(declare-fun $generated@@131 () T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 () Int)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 () Bool)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 () Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 43) (let (($generated@@163  (=> (= $generated@@111 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 2) (- 0 14)) (and (<= ($generated@@51 (- 0 2147483648)) $generated@@111) (< $generated@@111 2147483648))) (=> (and (<= ($generated@@51 (- 0 2147483648)) $generated@@111) (< $generated@@111 2147483648)) (=> (= $generated@@113 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@51 (- 0 2147483648)) $generated@@113) (< $generated@@113 2147483648))) (=> (and (<= ($generated@@51 (- 0 2147483648)) $generated@@113) (< $generated@@113 2147483648)) (=> (= $generated@@114 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (or (and (<= 0 $generated@@114) (< $generated@@114 55296)) (and (<= 57344 $generated@@114) (< $generated@@114 1114112)))) (=> (or (and (<= 0 $generated@@114) (< $generated@@114 55296)) (and (<= 57344 $generated@@114) (< $generated@@114 1114112))) (=> (= $generated@@115 (= ($generated@@67 $generated@@114) $generated@@112)) (and (=> (= (ControlFlow 0 2) (- 0 11)) $generated@@115) (=> $generated@@115 (=> (and (and (and ($generated@@116 $generated@@117) ($generated@@118 $generated@@117)) (forall (($generated@@164 T@U) ) (!  (=> (and (or (not (= $generated@@164 $generated@@119)) (not true)) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@120 $generated@@164) $generated@@1)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@117 $generated@@164) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@120 $generated@@164)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@117 $generated@@164))
))) (and ($generated@@19 $generated@@120 $generated@@117) (= $generated@@121 ($generated@@68 $generated@@112)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@51 (- 0 9223372036854775808)) $generated@@121) (< $generated@@121 8000000000000000))) (=> (and (<= ($generated@@51 (- 0 9223372036854775808)) $generated@@121) (< $generated@@121 8000000000000000)) (=> (= $generated@@122 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@51 (- 0 9223372036854775808)) $generated@@122) (< $generated@@122 8000000000000000))) (=> (and (<= ($generated@@51 (- 0 9223372036854775808)) $generated@@122) (< $generated@@122 8000000000000000)) (=> (= $generated@@123 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (or (and (<= 0 $generated@@123) (< $generated@@123 55296)) (and (<= 57344 $generated@@123) (< $generated@@123 1114112)))) (=> (or (and (<= 0 $generated@@123) (< $generated@@123 55296)) (and (<= 57344 $generated@@123) (< $generated@@123 1114112))) (=> (= $generated@@124 (= ($generated@@67 $generated@@123) $generated@@112)) (and (=> (= (ControlFlow 0 2) (- 0 7)) $generated@@124) (=> $generated@@124 (=> (and (and (and ($generated@@116 $generated@@125) ($generated@@118 $generated@@125)) (forall (($generated@@165 T@U) ) (!  (=> (and (or (not (= $generated@@165 $generated@@119)) (not true)) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@117 $generated@@165) $generated@@1)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@125 $generated@@165) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@117 $generated@@165)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@125 $generated@@165))
))) (and ($generated@@19 $generated@@117 $generated@@125) (= $generated@@126 ($generated@@68 $generated@@112)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (and (<= 0 $generated@@126) (< $generated@@126 55296)) (and (<= 57344 $generated@@126) (< $generated@@126 1114112)))) (=> (or (and (<= 0 $generated@@126) (< $generated@@126 55296)) (and (<= 57344 $generated@@126) (< $generated@@126 1114112))) (=> (= $generated@@127 (= ($generated@@67 $generated@@126) $generated@@112)) (and (=> (= (ControlFlow 0 2) (- 0 5)) $generated@@127) (=> $generated@@127 (=> (and (and (and ($generated@@116 $generated@@128) ($generated@@118 $generated@@128)) (forall (($generated@@166 T@U) ) (!  (=> (and (or (not (= $generated@@166 $generated@@119)) (not true)) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@125 $generated@@166) $generated@@1)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@128 $generated@@166) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@125 $generated@@166)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@128 $generated@@166))
))) (and ($generated@@19 $generated@@125 $generated@@128) (= $generated@@129 ($generated@@59 ($generated@@68 $generated@@112))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@59 ($generated@@49 $generated@@129)) $generated@@129)) (=> (= ($generated@@59 ($generated@@49 $generated@@129)) $generated@@129) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (and (<= 0 ($generated@@49 $generated@@129)) (< ($generated@@49 $generated@@129) 55296)) (and (<= 57344 ($generated@@49 $generated@@129)) (< ($generated@@49 $generated@@129) 1114112)))) (=> (or (and (<= 0 ($generated@@49 $generated@@129)) (< ($generated@@49 $generated@@129) 55296)) (and (<= 57344 ($generated@@49 $generated@@129)) (< ($generated@@49 $generated@@129) 1114112))) (=> (and (= $generated@@130 (= ($generated@@67 ($generated@@49 $generated@@129)) $generated@@112)) (= (ControlFlow 0 2) (- 0 1))) $generated@@130))))))))))))))))))))))))))))))))))))))
(let (($generated@@167  (=> (<= 65536 ($generated@@68 $generated@@112)) (=> (and (= $generated@@120 $generated@@131) (= (ControlFlow 0 20) 2)) $generated@@163))))
(let (($generated@@168  (=> (and (< ($generated@@68 $generated@@112) 65536) (= $generated@@132 ($generated@@68 $generated@@112))) (and (=> (= (ControlFlow 0 15) (- 0 19)) (and (<= ($generated@@51 0) $generated@@132) (< $generated@@132 65536))) (=> (and (<= ($generated@@51 0) $generated@@132) (< $generated@@132 65536)) (=> (= $generated@@133 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 15) (- 0 18)) (and (<= ($generated@@51 0) $generated@@133) (< $generated@@133 65536))) (=> (and (<= ($generated@@51 0) $generated@@133) (< $generated@@133 65536)) (=> (= $generated@@134 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 15) (- 0 17)) (or (and (<= 0 $generated@@134) (< $generated@@134 55296)) (and (<= 57344 $generated@@134) (< $generated@@134 1114112)))) (=> (or (and (<= 0 $generated@@134) (< $generated@@134 55296)) (and (<= 57344 $generated@@134) (< $generated@@134 1114112))) (=> (= $generated@@135 (= ($generated@@67 $generated@@134) $generated@@112)) (and (=> (= (ControlFlow 0 15) (- 0 16)) $generated@@135) (=> $generated@@135 (=> (and ($generated@@116 $generated@@136) ($generated@@118 $generated@@136)) (=> (and (and (forall (($generated@@169 T@U) ) (!  (=> (and (or (not (= $generated@@169 $generated@@119)) (not true)) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@131 $generated@@169) $generated@@1)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@136 $generated@@169) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@131 $generated@@169)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@136 $generated@@169))
)) ($generated@@19 $generated@@131 $generated@@136)) (and (= $generated@@120 $generated@@136) (= (ControlFlow 0 15) 2))) $generated@@163))))))))))))))))
(let (($generated@@170  (and (=> (= (ControlFlow 0 21) 15) $generated@@168) (=> (= (ControlFlow 0 21) 20) $generated@@167))))
(let (($generated@@171  (=> (<= 32768 ($generated@@68 $generated@@112)) (=> (and (= $generated@@131 $generated@@137) (= (ControlFlow 0 27) 21)) $generated@@170))))
(let (($generated@@172  (=> (and (< ($generated@@68 $generated@@112) 32768) (= $generated@@138 ($generated@@68 $generated@@112))) (and (=> (= (ControlFlow 0 22) (- 0 26)) (and (<= ($generated@@51 (- 0 32768)) $generated@@138) (< $generated@@138 32768))) (=> (and (<= ($generated@@51 (- 0 32768)) $generated@@138) (< $generated@@138 32768)) (=> (= $generated@@139 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 22) (- 0 25)) (and (<= ($generated@@51 (- 0 32768)) $generated@@139) (< $generated@@139 32768))) (=> (and (<= ($generated@@51 (- 0 32768)) $generated@@139) (< $generated@@139 32768)) (=> (= $generated@@140 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 22) (- 0 24)) (or (and (<= 0 $generated@@140) (< $generated@@140 55296)) (and (<= 57344 $generated@@140) (< $generated@@140 1114112)))) (=> (or (and (<= 0 $generated@@140) (< $generated@@140 55296)) (and (<= 57344 $generated@@140) (< $generated@@140 1114112))) (=> (= $generated@@141 (= ($generated@@67 $generated@@140) $generated@@112)) (and (=> (= (ControlFlow 0 22) (- 0 23)) $generated@@141) (=> $generated@@141 (=> (and ($generated@@116 $generated@@142) ($generated@@118 $generated@@142)) (=> (and (and (forall (($generated@@173 T@U) ) (!  (=> (and (or (not (= $generated@@173 $generated@@119)) (not true)) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@137 $generated@@173) $generated@@1)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@142 $generated@@173) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@137 $generated@@173)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@142 $generated@@173))
)) ($generated@@19 $generated@@137 $generated@@142)) (and (= $generated@@131 $generated@@142) (= (ControlFlow 0 22) 21))) $generated@@170))))))))))))))))
(let (($generated@@174  (and (=> (= (ControlFlow 0 28) 22) $generated@@172) (=> (= (ControlFlow 0 28) 27) $generated@@171))))
(let (($generated@@175  (=> (<= 256 ($generated@@68 $generated@@112)) (=> (and (= $generated@@137 $generated@@143) (= (ControlFlow 0 34) 28)) $generated@@174))))
(let (($generated@@176  (=> (and (< ($generated@@68 $generated@@112) 256) (= $generated@@144 ($generated@@68 $generated@@112))) (and (=> (= (ControlFlow 0 29) (- 0 33)) (and (<= ($generated@@51 0) $generated@@144) (< $generated@@144 256))) (=> (and (<= ($generated@@51 0) $generated@@144) (< $generated@@144 256)) (=> (= $generated@@145 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 29) (- 0 32)) (and (<= ($generated@@51 0) $generated@@145) (< $generated@@145 256))) (=> (and (<= ($generated@@51 0) $generated@@145) (< $generated@@145 256)) (=> (= $generated@@146 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 29) (- 0 31)) (or (and (<= 0 $generated@@146) (< $generated@@146 55296)) (and (<= 57344 $generated@@146) (< $generated@@146 1114112)))) (=> (or (and (<= 0 $generated@@146) (< $generated@@146 55296)) (and (<= 57344 $generated@@146) (< $generated@@146 1114112))) (=> (= $generated@@147 (= ($generated@@67 $generated@@146) $generated@@112)) (and (=> (= (ControlFlow 0 29) (- 0 30)) $generated@@147) (=> $generated@@147 (=> (and ($generated@@116 $generated@@148) ($generated@@118 $generated@@148)) (=> (and (and (forall (($generated@@177 T@U) ) (!  (=> (and (or (not (= $generated@@177 $generated@@119)) (not true)) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@143 $generated@@177) $generated@@1)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@148 $generated@@177) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@143 $generated@@177)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@148 $generated@@177))
)) ($generated@@19 $generated@@143 $generated@@148)) (and (= $generated@@137 $generated@@148) (= (ControlFlow 0 29) 28))) $generated@@174))))))))))))))))
(let (($generated@@178  (and (=> (= (ControlFlow 0 35) 29) $generated@@176) (=> (= (ControlFlow 0 35) 34) $generated@@175))))
(let (($generated@@179  (=> (<= 128 ($generated@@68 $generated@@112)) (=> (and (= $generated@@143 $generated@@149) (= (ControlFlow 0 41) 35)) $generated@@178))))
(let (($generated@@180  (=> (and (< ($generated@@68 $generated@@112) 128) (= $generated@@150 ($generated@@68 $generated@@112))) (and (=> (= (ControlFlow 0 36) (- 0 40)) (and (<= ($generated@@51 (- 0 128)) $generated@@150) (< $generated@@150 128))) (=> (and (<= ($generated@@51 (- 0 128)) $generated@@150) (< $generated@@150 128)) (=> (= $generated@@151 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 36) (- 0 39)) (and (<= ($generated@@51 (- 0 128)) $generated@@151) (< $generated@@151 128))) (=> (and (<= ($generated@@51 (- 0 128)) $generated@@151) (< $generated@@151 128)) (=> (= $generated@@152 ($generated@@68 $generated@@112)) (and (=> (= (ControlFlow 0 36) (- 0 38)) (or (and (<= 0 $generated@@152) (< $generated@@152 55296)) (and (<= 57344 $generated@@152) (< $generated@@152 1114112)))) (=> (or (and (<= 0 $generated@@152) (< $generated@@152 55296)) (and (<= 57344 $generated@@152) (< $generated@@152 1114112))) (=> (= $generated@@153 (= ($generated@@67 $generated@@152) $generated@@112)) (and (=> (= (ControlFlow 0 36) (- 0 37)) $generated@@153) (=> $generated@@153 (=> (and ($generated@@116 $generated@@154) ($generated@@118 $generated@@154)) (=> (and (and (forall (($generated@@181 T@U) ) (!  (=> (and (or (not (= $generated@@181 $generated@@119)) (not true)) ($generated@@7 ($generated@@25 $generated@@3 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@149 $generated@@181) $generated@@1)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@154 $generated@@181) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@149 $generated@@181)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@154 $generated@@181))
)) ($generated@@19 $generated@@149 $generated@@154)) (and (= $generated@@143 $generated@@154) (= (ControlFlow 0 36) 35))) $generated@@178))))))))))))))))
(let (($generated@@182  (=> (= $generated@@155 ($generated@@71 $generated@@119 $generated@@149 $generated@@1 false)) (and (=> (= (ControlFlow 0 42) 36) $generated@@180) (=> (= (ControlFlow 0 42) 41) $generated@@179)))))
(let (($generated@@183  (=> (and (and (and (and (and ($generated@@116 $generated@@149) ($generated@@118 $generated@@149)) ($generated@@108 $generated@@109 $generated@@112 $generated)) (and (and (<= ($generated@@51 (- 0 128)) $generated@@156) (< $generated@@156 128)) true)) (and (and (and (<= ($generated@@51 0) $generated@@157) (< $generated@@157 256)) true) (and (and (<= ($generated@@51 (- 0 32768)) $generated@@158) (< $generated@@158 32768)) true))) (and (and (and (and (<= ($generated@@51 0) $generated@@159) (< $generated@@159 65536)) true) (and (and (<= ($generated@@51 (- 0 2147483648)) $generated@@160) (< $generated@@160 2147483648)) true)) (and (and (and (<= ($generated@@51 (- 0 9223372036854775808)) $generated@@161) (< $generated@@161 8000000000000000)) true) (and (= 1 $generated@@162) (= (ControlFlow 0 43) 42))))) $generated@@182)))
$generated@@183)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
