(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 () Int)
(declare-fun $generated@@19 (T@U T@U Int) Bool)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U Int) Bool)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@37 (Int) T@U)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@47 (Int) Bool)
(declare-fun $generated@@49 (T@U Int) Bool)
(declare-fun $generated@@59 (Int) Bool)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U T@U) Bool)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@105 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@22 T@U) ($generated@@23 Int) ($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@21 $generated@@24 $generated@@25) (=> ($generated@@19 $generated@@22 $generated@@24 $generated@@23) ($generated@@19 $generated@@22 $generated@@25 $generated@@23)))
 :pattern ( ($generated@@19 $generated@@22 $generated@@24 $generated@@23) ($generated@@20 $generated@@24 $generated@@26) ($generated@@20 $generated@@25 $generated@@26))
))))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and ($generated@@21 $generated@@27 $generated@@28) ($generated@@21 $generated@@28 $generated@@29)) ($generated@@21 $generated@@27 $generated@@29))
 :pattern ( ($generated@@21 $generated@@27 $generated@@28) ($generated@@21 $generated@@28 $generated@@29))
 :pattern ( ($generated@@21 $generated@@27 $generated@@28) ($generated@@21 $generated@@27 $generated@@29))
)))
(assert (= ($generated@@2 $generated@@32) 3))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 Int) ) (!  (=> (or ($generated@@33 ($generated@@31 $generated@@32 $generated@@39) $generated@@40) (< 1 $generated@@18)) (and (and (=> (< 0 ($generated@@34 $generated@@39)) (=> (or (not (= $generated@@40 ($generated@@35 3))) (not true)) ($generated@@33 ($generated@@36 $generated@@39 ($generated@@37 1)) (+ $generated@@40 1)))) (=> (=> (< 0 ($generated@@34 $generated@@39)) (or (= $generated@@40 ($generated@@35 3)) ($generated@@19 ($generated@@30 $generated@@38) ($generated@@36 $generated@@39 ($generated@@37 1)) (+ $generated@@40 1)))) (=> (= ($generated@@35 0) ($generated@@34 $generated@@39)) (forall (($generated@@41 T@U) ) (!  (=> ($generated@@20 $generated@@41 $generated@@39) ($generated@@33 $generated@@41 $generated@@40))
 :pattern ( ($generated@@19 ($generated@@30 $generated@@38) $generated@@41 $generated@@40))
))))) (= ($generated@@19 ($generated@@30 $generated@@38) ($generated@@31 $generated@@32 $generated@@39) $generated@@40)  (and (=> (< 0 ($generated@@34 $generated@@39)) (or (= $generated@@40 ($generated@@35 3)) ($generated@@19 ($generated@@30 $generated@@38) ($generated@@36 $generated@@39 ($generated@@37 1)) (+ $generated@@40 1)))) (=> (= ($generated@@35 0) ($generated@@34 $generated@@39)) (exists (($generated@@42 T@U) ) (!  (and ($generated@@20 $generated@@42 $generated@@39) ($generated@@19 ($generated@@30 $generated@@38) $generated@@42 $generated@@40))
 :pattern ( ($generated@@19 ($generated@@30 $generated@@38) $generated@@42 $generated@@40))
)))))))
 :weight 3
 :pattern ( ($generated@@19 ($generated@@30 $generated@@38) ($generated@@31 $generated@@32 $generated@@39) $generated@@40))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 Int) ($generated@@45 Int) ) (!  (=> (and (and (<= 0 $generated@@44) (<= 0 $generated@@45)) (<= (+ $generated@@44 $generated@@45) ($generated@@34 $generated@@43))) (= ($generated@@36 ($generated@@36 $generated@@43 ($generated@@37 $generated@@44)) ($generated@@37 $generated@@45)) ($generated@@36 $generated@@43 ($generated@@37 (+ $generated@@44 $generated@@45)))))
 :pattern ( ($generated@@36 ($generated@@36 $generated@@43 ($generated@@37 $generated@@44)) ($generated@@37 $generated@@45)))
)))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@48 Int) ) (!  (=> (or ($generated@@47 $generated@@48) (and (< 1 $generated@@18) (<= ($generated@@35 0) $generated@@48))) (<= ($generated@@35 0) ($generated@@46 $generated@@48)))
 :pattern ( ($generated@@46 $generated@@48))
))))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@50 T@U) ($generated@@51 Int) ) (!  (=> (exists (($generated@@52 T@U) ) (! ($generated@@19 ($generated@@30 $generated@@50) $generated@@52 $generated@@51)
 :pattern ( ($generated@@19 ($generated@@30 $generated@@50) $generated@@52 $generated@@51))
)) ($generated@@49 ($generated@@30 $generated@@50) $generated@@51))
 :pattern ( ($generated@@49 ($generated@@30 $generated@@50) $generated@@51))
))))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@53 T@U) ($generated@@54 Int) ($generated@@55 T@U) ) (!  (=> (= $generated@@55 ($generated@@37 0)) (not ($generated@@19 $generated@@53 $generated@@55 $generated@@54)))
 :pattern ( ($generated@@19 $generated@@53 $generated@@55 $generated@@54))
))))
(assert (forall (($generated@@56 Int) ) (! (= ($generated@@35 $generated@@56) $generated@@56)
 :pattern ( ($generated@@35 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@31 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@31 $generated@@58 $generated@@57))
)))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@61 Int) ) (!  (=> (or ($generated@@47 $generated@@61) (and (< 1 $generated@@18) (<= ($generated@@35 0) $generated@@61))) (and ($generated@@59 $generated@@61) (= ($generated@@46 $generated@@61) (ite ($generated@@49 ($generated@@30 $generated@@60) $generated@@61) (+ $generated@@61 2) (+ $generated@@61 3)))))
 :pattern ( ($generated@@46 $generated@@61))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 ($generated@@62 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@62 $generated@@65 $generated@@64))
)))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@66 T@U) ($generated@@67 Int) ) (!  (=> ($generated@@49 ($generated@@30 $generated@@66) $generated@@67) (exists (($generated@@68 T@U) ) (! ($generated@@19 ($generated@@30 $generated@@66) $generated@@68 $generated@@67)
 :pattern ( ($generated@@19 ($generated@@30 $generated@@66) $generated@@68 $generated@@67))
)))
 :pattern ( ($generated@@49 ($generated@@30 $generated@@66) $generated@@67))
))))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@69 $generated@@4 $generated@@71 $generated@@70) (<= ($generated@@35 0) ($generated@@9 $generated@@71)))
 :pattern ( ($generated@@69 $generated@@4 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 Int) ) (! (= ($generated@@19 ($generated@@30 $generated@@72) $generated@@73 $generated@@74) ($generated@@19 $generated@@72 $generated@@73 $generated@@74))
 :pattern ( ($generated@@19 ($generated@@30 $generated@@72) $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and ($generated@@75 $generated@@77) (<= ($generated@@34 $generated@@77) ($generated@@34 $generated@@76))) (and (= ($generated@@75 ($generated@@36 $generated@@76 $generated@@77)) ($generated@@75 $generated@@76)) (= ($generated@@34 ($generated@@36 $generated@@76 $generated@@77)) (- ($generated@@34 $generated@@76) ($generated@@34 $generated@@77)))))
 :pattern ( ($generated@@36 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 Int) ) (!  (=> (<= 0 $generated@@78) (and ($generated@@75 ($generated@@37 $generated@@78)) (= ($generated@@34 ($generated@@37 $generated@@78)) $generated@@78)))
 :pattern ( ($generated@@37 $generated@@78))
)))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@79 Int) ) (!  (=> (or ($generated@@47 ($generated@@35 $generated@@79)) (and (< 1 $generated@@18) (<= ($generated@@35 0) $generated@@79))) (and ($generated@@59 ($generated@@35 $generated@@79)) (= ($generated@@46 ($generated@@35 $generated@@79)) (ite ($generated@@49 ($generated@@30 $generated@@60) ($generated@@35 $generated@@79)) (+ $generated@@79 2) (+ $generated@@79 3)))))
 :weight 3
 :pattern ( ($generated@@46 ($generated@@35 $generated@@79)))
))))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 Int) ) (!  (=> (or ($generated@@33 ($generated@@31 $generated@@32 $generated@@81) ($generated@@35 $generated@@82)) (< 1 $generated@@18)) (and (and (=> (< 0 ($generated@@34 $generated@@81)) (=> (or (not (= ($generated@@35 $generated@@82) ($generated@@35 3))) (not true)) ($generated@@33 ($generated@@36 $generated@@81 ($generated@@37 1)) ($generated@@35 (+ $generated@@82 1))))) (=> (=> (< 0 ($generated@@34 $generated@@81)) (or (= ($generated@@35 $generated@@82) ($generated@@35 3)) ($generated@@19 ($generated@@30 $generated@@80) ($generated@@36 $generated@@81 ($generated@@37 1)) ($generated@@35 (+ $generated@@82 1))))) (=> (= ($generated@@35 0) ($generated@@34 $generated@@81)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@20 $generated@@83 $generated@@81) ($generated@@33 $generated@@83 $generated@@82))
 :pattern ( ($generated@@19 ($generated@@30 $generated@@80) $generated@@83 $generated@@82))
))))) (= ($generated@@19 ($generated@@30 $generated@@80) ($generated@@31 $generated@@32 $generated@@81) ($generated@@35 $generated@@82))  (and (=> (< 0 ($generated@@34 $generated@@81)) (or (= ($generated@@35 $generated@@82) ($generated@@35 3)) ($generated@@19 ($generated@@30 $generated@@80) ($generated@@36 $generated@@81 ($generated@@37 1)) ($generated@@35 (+ $generated@@82 1))))) (=> (= ($generated@@35 0) ($generated@@34 $generated@@81)) (exists (($generated@@84 T@U) ) (!  (and ($generated@@20 $generated@@84 $generated@@81) ($generated@@19 ($generated@@30 $generated@@80) $generated@@84 $generated@@82))
 :pattern ( ($generated@@19 ($generated@@30 $generated@@80) $generated@@84 $generated@@82))
)))))))
 :weight 3
 :pattern ( ($generated@@19 ($generated@@30 $generated@@80) ($generated@@31 $generated@@32 $generated@@81) ($generated@@35 $generated@@82)))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or (or ($generated@@21 $generated@@85 $generated@@86) (= $generated@@85 $generated@@86)) ($generated@@21 $generated@@86 $generated@@85))
 :pattern ( ($generated@@21 $generated@@85 $generated@@86) ($generated@@21 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@20 $generated@@87 $generated@@88) ($generated@@21 $generated@@87 $generated@@88))
 :pattern ( ($generated@@20 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 Int) ) (! (= ($generated@@49 ($generated@@30 $generated@@89) $generated@@90) ($generated@@49 $generated@@89 $generated@@90))
 :pattern ( ($generated@@49 ($generated@@30 $generated@@89) $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (! (<= 0 ($generated@@34 $generated@@91))
 :pattern ( ($generated@@34 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@62 $generated@@93 ($generated@@63 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@63 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (and (and (and (=> ($generated@@21 $generated@@94 $generated@@95) (or (not (= $generated@@94 $generated@@95)) (not true))) (=> (and ($generated@@75 $generated@@94) (not ($generated@@75 $generated@@95))) ($generated@@21 $generated@@94 $generated@@95))) (=> (and ($generated@@75 $generated@@94) ($generated@@75 $generated@@95)) (= ($generated@@21 $generated@@94 $generated@@95) (< ($generated@@34 $generated@@94) ($generated@@34 $generated@@95))))) (=> (and ($generated@@21 $generated@@94 $generated@@95) ($generated@@75 $generated@@95)) ($generated@@75 $generated@@94)))
 :pattern ( ($generated@@21 $generated@@94 $generated@@95))
)))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 Int) ) (!  (=> (or ($generated@@33 $generated@@97 $generated@@98) (< 1 $generated@@18)) (and (and (=> (< 0 ($generated@@34 $generated@@97)) (=> (or (not (= $generated@@98 ($generated@@35 3))) (not true)) ($generated@@33 ($generated@@36 $generated@@97 ($generated@@37 1)) (+ $generated@@98 1)))) (=> (=> (< 0 ($generated@@34 $generated@@97)) (or (= $generated@@98 ($generated@@35 3)) ($generated@@19 $generated@@96 ($generated@@36 $generated@@97 ($generated@@37 1)) (+ $generated@@98 1)))) (=> (= ($generated@@35 0) ($generated@@34 $generated@@97)) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@20 $generated@@99 $generated@@97) ($generated@@33 $generated@@99 $generated@@98))
 :pattern ( ($generated@@19 $generated@@96 $generated@@99 $generated@@98))
))))) (= ($generated@@19 ($generated@@30 $generated@@96) $generated@@97 $generated@@98)  (and (=> (< 0 ($generated@@34 $generated@@97)) (or (= $generated@@98 ($generated@@35 3)) ($generated@@19 $generated@@96 ($generated@@36 $generated@@97 ($generated@@37 1)) (+ $generated@@98 1)))) (=> (= ($generated@@35 0) ($generated@@34 $generated@@97)) (exists (($generated@@100 T@U) ) (!  (and ($generated@@20 $generated@@100 $generated@@97) ($generated@@19 $generated@@96 $generated@@100 $generated@@98))
 :pattern ( ($generated@@19 $generated@@96 $generated@@100 $generated@@98))
)))))))
 :pattern ( ($generated@@19 ($generated@@30 $generated@@96) $generated@@97 $generated@@98))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@101 $generated@@111 $generated@@112 $generated@@113 ($generated@@107 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@101 $generated@@118 $generated@@119 $generated@@120 ($generated@@107 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@101 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@101 $generated@@127 $generated@@128 $generated@@129 ($generated@@107 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@101 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))) (= ($generated@@2 $generated@@102) 4)) (= ($generated@@2 $generated@@103) 5)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@105 $generated@@136 $generated@@137 ($generated@@108 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@138) $generated@@140) $generated@@138)
 :weight 0
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@145 $generated@@146) (= ($generated@@105 $generated@@141 $generated@@142 ($generated@@108 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@105 $generated@@141 $generated@@142 $generated@@144 $generated@@146)))
 :weight 0
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (= ($generated@@2 ($generated@@106 $generated@@147 $generated@@148)) 6))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@106 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@110 ($generated@@106 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@106 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Bool) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@7 ($generated@@101 $generated@@102 $generated@@103 $generated@@3 ($generated@@104 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))  (=> (and (or (not (= $generated@@157 $generated@@153)) (not true)) ($generated@@7 ($generated@@62 $generated@@3 ($generated@@105 $generated@@103 $generated@@32 ($generated@@105 $generated@@102 ($generated@@106 $generated@@103 $generated@@32) $generated@@154 $generated@@157) $generated@@155)))) $generated@@156))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103 $generated@@3 ($generated@@104 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> ($generated@@75 $generated@@159) (= $generated@@159 ($generated@@37 ($generated@@34 $generated@@159))))
 :pattern ( ($generated@@34 $generated@@159))
 :pattern ( ($generated@@75 $generated@@159))
)))
(assert (= ($generated@@160 $generated@@70) $generated@@0))
(assert (= ($generated@@161 $generated@@70) $generated@@1))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@75 $generated@@163) (<= ($generated@@34 $generated@@163) ($generated@@34 $generated@@162))) (or (and (= $generated@@163 ($generated@@37 0)) (= ($generated@@36 $generated@@162 $generated@@163) $generated@@162)) (and (or (not (= $generated@@163 ($generated@@37 0))) (not true)) ($generated@@21 ($generated@@36 $generated@@162 $generated@@163) $generated@@162))))
 :pattern ( ($generated@@36 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 Int) ) (! (= ($generated@@63 $generated@@4 ($generated@@8 ($generated@@35 $generated@@164))) ($generated@@31 $generated@@32 ($generated@@63 $generated@@4 ($generated@@8 $generated@@164))))
 :pattern ( ($generated@@63 $generated@@4 ($generated@@8 ($generated@@35 $generated@@164))))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@63 $generated@@166 ($generated@@31 $generated@@166 $generated@@165)) ($generated@@31 $generated@@32 ($generated@@63 $generated@@166 $generated@@165)))
 :pattern ( ($generated@@63 $generated@@166 ($generated@@31 $generated@@166 $generated@@165)))
)))
(assert  (=> (<= 0 $generated@@18) (forall (($generated@@167 T@U) ($generated@@168 Int) ) (!  (=> (or ($generated@@59 $generated@@168) (< 0 $generated@@18)) (and (=> (or (not (= $generated@@168 ($generated@@35 3))) (not true)) ($generated@@59 (+ $generated@@168 1))) (= ($generated@@49 ($generated@@30 $generated@@167) $generated@@168)  (or (= $generated@@168 ($generated@@35 3)) ($generated@@49 $generated@@167 (+ $generated@@168 1))))))
 :pattern ( ($generated@@49 ($generated@@30 $generated@@167) $generated@@168))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@178  (=> (= $generated@@169 (ite (<= $generated@@170 ($generated@@35 3)) (+ $generated@@170 2) (+ $generated@@170 3))) (=> (and ($generated@@47 $generated@@170) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@169 ($generated@@46 $generated@@170))))))
(let (($generated@@179  (=> (< ($generated@@35 3) $generated@@170) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@69 $generated@@4 ($generated@@8 (ite (<= $generated@@170 ($generated@@35 3)) (+ $generated@@170 2) (+ $generated@@170 3))) $generated@@70)) (=> ($generated@@69 $generated@@4 ($generated@@8 (ite (<= $generated@@170 ($generated@@35 3)) (+ $generated@@170 2) (+ $generated@@170 3))) $generated@@70) (=> (= (ControlFlow 0 5) 2) $generated@@178))))))
(let (($generated@@180  (=> (<= $generated@@170 ($generated@@35 3)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@69 $generated@@4 ($generated@@8 (ite (<= $generated@@170 ($generated@@35 3)) (+ $generated@@170 2) (+ $generated@@170 3))) $generated@@70)) (=> ($generated@@69 $generated@@4 ($generated@@8 (ite (<= $generated@@170 ($generated@@35 3)) (+ $generated@@170 2) (+ $generated@@170 3))) $generated@@70) (=> (= (ControlFlow 0 3) 2) $generated@@178))))))
(let (($generated@@181  (=> (= $generated@@171 ($generated@@104 $generated@@172 $generated@@173 $generated false)) (=> (and (and (and ($generated@@174 $generated@@175) ($generated@@176 $generated@@175)) ($generated@@59 $generated@@170)) (and (= ($generated@@49 ($generated@@30 ($generated@@30 $generated@@60)) $generated@@170) (<= $generated@@170 ($generated@@35 3))) (= $generated@@173 $generated@@175))) (and (=> (= (ControlFlow 0 7) 3) $generated@@180) (=> (= (ControlFlow 0 7) 5) $generated@@179))))))
(let (($generated@@182  (=> (and ($generated@@174 $generated@@173) ($generated@@176 $generated@@173)) (=> (and (and (<= ($generated@@35 0) $generated@@170) (<= ($generated@@35 0) $generated@@177)) (and (= 3 $generated@@18) (= (ControlFlow 0 8) 7))) $generated@@181))))
$generated@@182))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
