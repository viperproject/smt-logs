(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 (T@U T@U T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@94 () Int)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@U T@U T@U) Bool)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@9 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@31) $generated@@33) ($generated@@27 $generated@@28 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@31) $generated@@33))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@34 $generated@@36 ($generated@@35 $generated@@37) $generated@@38) ($generated@@34 $generated@@36 $generated@@37 $generated@@38))
 :pattern ( ($generated@@34 $generated@@36 ($generated@@35 $generated@@37) $generated@@38))
)))
(assert (= ($generated@@9 $generated@@41) 4))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@40 $generated@@41 $generated@@44 ($generated@@42 $generated@@43)) ($generated@@39 $generated@@44))
 :pattern ( ($generated@@39 $generated@@44) ($generated@@40 $generated@@41 $generated@@44 ($generated@@42 $generated@@43)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@47 $generated@@54 $generated@@55 ($generated@@51 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@58) $generated@@56)
 :weight 0
)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (or (= $generated@@63 $generated@@64) (= ($generated@@47 $generated@@59 $generated@@60 ($generated@@51 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@64) ($generated@@47 $generated@@59 $generated@@60 $generated@@62 $generated@@64)))
 :weight 0
))) (= ($generated@@9 $generated@@48) 5)) (= ($generated@@9 $generated@@49) 6)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (= ($generated@@9 ($generated@@50 $generated@@65 $generated@@66)) 7))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@52 ($generated@@50 $generated@@67 $generated@@68)) $generated@@67)
 :pattern ( ($generated@@50 $generated@@67 $generated@@68))
))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@50 $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@72 ($generated@@30 $generated@@71) $generated@@73)  (or (= $generated@@72 $generated@@45) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@73 $generated@@72) $generated)))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@72 ($generated@@30 $generated@@71) $generated@@73))
)))
(assert (= ($generated@@25 $generated@@74) 0))
(assert (= ($generated@@75 $generated@@3 $generated@@8) $generated@@74))
(assert  (not ($generated@@76 $generated@@74)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> ($generated@@77 $generated@@78 $generated@@79) (forall (($generated@@80 T@U) ) (!  (=> ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@78 $generated@@80) $generated))) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@79 $generated@@80) $generated))))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@79 $generated@@80) $generated))
)))
 :pattern ( ($generated@@77 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@40 $generated@@41 ($generated@@81 $generated@@84 $generated@@85) ($generated@@42 $generated@@83))  (and ($generated@@82 $generated@@84 $generated@@83) ($generated@@40 $generated@@41 $generated@@85 ($generated@@42 $generated@@83))))
 :pattern ( ($generated@@40 $generated@@41 ($generated@@81 $generated@@84 $generated@@85) ($generated@@42 $generated@@83)))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@39 $generated@@87) (= ($generated@@86 $generated@@87) $generated@@5))
 :pattern ( ($generated@@39 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@46 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@46 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@39 $generated@@91) (exists (($generated@@92 T@U) ($generated@@93 T@U) ) (= $generated@@91 ($generated@@81 $generated@@92 $generated@@93))))
 :pattern ( ($generated@@39 $generated@@91))
)))
(assert  (=> (< 1 $generated@@94) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and (or (not (= $generated@@98 $generated@@45)) (not true)) (= ($generated@@96 $generated@@98) ($generated@@30 $generated@@97))) ($generated@@40 $generated@@41 ($generated@@95 $generated@@97 $generated@@98) ($generated@@42 $generated@@97)))
 :pattern ( ($generated@@95 $generated@@97 $generated@@98))
))))
(assert ($generated@@76 $generated))
(assert  (=> (<= 1 $generated@@94) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@99 $generated@@100 $generated@@102) (and (< 1 $generated@@94) ($generated@@82 $generated@@102 $generated@@100))) (and ($generated@@99 $generated@@100 $generated@@102) (= ($generated@@34 $generated@@100 ($generated@@35 $generated@@101) $generated@@102) ($generated@@81 $generated@@102 ($generated@@34 $generated@@100 $generated@@101 $generated@@102)))))
 :pattern ( ($generated@@34 $generated@@100 ($generated@@35 $generated@@101) $generated@@102))
))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@40 $generated@@28 $generated@@104 ($generated@@29 $generated@@103))  (and ($generated@@40 $generated@@28 $generated@@104 ($generated@@30 $generated@@103)) (or (not (= $generated@@104 $generated@@45)) (not true))))
 :pattern ( ($generated@@40 $generated@@28 $generated@@104 ($generated@@29 $generated@@103)))
 :pattern ( ($generated@@40 $generated@@28 $generated@@104 ($generated@@30 $generated@@103)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@105 ($generated@@88 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@27 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@105 ($generated@@88 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> ($generated@@77 $generated@@110 $generated@@111) (=> ($generated@@105 $generated@@112 $generated@@113 $generated@@110) ($generated@@105 $generated@@112 $generated@@113 $generated@@111)))
 :pattern ( ($generated@@77 $generated@@110 $generated@@111) ($generated@@105 $generated@@112 $generated@@113 $generated@@110))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (!  (=> ($generated@@77 $generated@@114 $generated@@115) (=> ($generated@@27 $generated@@118 $generated@@116 $generated@@117 $generated@@114) ($generated@@27 $generated@@118 $generated@@116 $generated@@117 $generated@@115)))
 :pattern ( ($generated@@77 $generated@@114 $generated@@115) ($generated@@27 $generated@@118 $generated@@116 $generated@@117 $generated@@114))
)))
(assert (forall (($generated@@121 T@U) ) (!  (and (= ($generated@@119 ($generated@@29 $generated@@121)) $generated@@1) (= ($generated@@120 ($generated@@29 $generated@@121)) $generated@@6))
 :pattern ( ($generated@@29 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (!  (and (= ($generated@@119 ($generated@@42 $generated@@122)) $generated@@2) (= ($generated@@120 ($generated@@42 $generated@@122)) $generated@@7))
 :pattern ( ($generated@@42 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (!  (and (= ($generated@@119 ($generated@@30 $generated@@123)) $generated@@4) (= ($generated@@120 ($generated@@30 $generated@@123)) $generated@@6))
 :pattern ( ($generated@@30 $generated@@123))
)))
(assert  (=> (< 1 $generated@@94) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and (and ($generated@@124 $generated@@126) (and (or (not (= $generated@@127 $generated@@45)) (not true)) (= ($generated@@96 $generated@@127) ($generated@@30 $generated@@125)))) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@126 $generated@@127) $generated)))) ($generated@@27 $generated@@41 ($generated@@95 $generated@@125 $generated@@127) ($generated@@42 $generated@@125) $generated@@126))
 :pattern ( ($generated@@95 $generated@@125 $generated@@127) ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@126 $generated@@127) $generated)))
))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and (and ($generated@@124 $generated@@129) (and (or (not (= $generated@@130 $generated@@45)) (not true)) (= ($generated@@96 $generated@@130) ($generated@@30 $generated@@128)))) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@129 $generated@@130) $generated)))) ($generated@@27 $generated@@41 ($generated@@46 $generated@@41 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@129 $generated@@130) $generated@@74)) ($generated@@42 $generated@@128) $generated@@129))
 :pattern ( ($generated@@46 $generated@@41 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@129 $generated@@130) $generated@@74)) ($generated@@30 $generated@@128))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@40 $generated@@28 $generated@@132 ($generated@@30 $generated@@131))  (or (= $generated@@132 $generated@@45) (= ($generated@@96 $generated@@132) ($generated@@30 $generated@@131))))
 :pattern ( ($generated@@40 $generated@@28 $generated@@132 ($generated@@30 $generated@@131)))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (or (not (= $generated@@133 $generated@@135)) (not true)) (=> (and ($generated@@77 $generated@@133 $generated@@134) ($generated@@77 $generated@@134 $generated@@135)) ($generated@@77 $generated@@133 $generated@@135)))
 :pattern ( ($generated@@77 $generated@@133 $generated@@134) ($generated@@77 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (and (= ($generated@@136 ($generated@@75 $generated@@137 $generated@@138)) $generated@@137) (= ($generated@@26 ($generated@@75 $generated@@137 $generated@@138)) $generated@@138))
 :pattern ( ($generated@@75 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@82 ($generated@@88 $generated@@141 $generated@@139) $generated@@140) ($generated@@40 $generated@@141 $generated@@139 $generated@@140))
 :pattern ( ($generated@@82 ($generated@@88 $generated@@141 $generated@@139) $generated@@140))
)))
(assert  (=> (<= 1 $generated@@94) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (or ($generated@@99 $generated@@142 $generated@@144) (and (< 1 $generated@@94) ($generated@@82 $generated@@144 $generated@@142))) ($generated@@40 $generated@@41 ($generated@@34 $generated@@142 $generated@@143 $generated@@144) ($generated@@42 $generated@@142)))
 :pattern ( ($generated@@34 $generated@@142 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@86 ($generated@@81 $generated@@145 $generated@@146)) $generated@@5)
 :pattern ( ($generated@@81 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@147 ($generated@@81 $generated@@148 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@81 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@150 ($generated@@81 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@81 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@153 ($generated@@29 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@29 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@42 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@42 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@30 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@30 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@46 $generated@@160 ($generated@@88 $generated@@160 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@88 $generated@@160 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@124 $generated@@163) (and ($generated@@39 $generated@@161) ($generated@@27 $generated@@41 $generated@@161 ($generated@@42 $generated@@162) $generated@@163))) ($generated@@105 ($generated@@147 $generated@@161) $generated@@162 $generated@@163))
 :pattern ( ($generated@@105 ($generated@@147 $generated@@161) $generated@@162 $generated@@163))
)))
(assert  (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@164 $generated@@167 $generated@@168 $generated@@169 ($generated@@166 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@172 $generated@@173) $generated@@170)
 :weight 0
)) (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@164 $generated@@174 $generated@@175 $generated@@176 ($generated@@166 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@164 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@164 $generated@@183 $generated@@184 $generated@@185 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@164 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@14 ($generated@@164 $generated@@28 $generated@@48 $generated@@10 ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (or (not (= $generated@@196 $generated@@192)) (not true)) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@193 $generated@@196) $generated@@194)))) $generated@@195))
 :pattern ( ($generated@@164 $generated@@28 $generated@@48 $generated@@10 ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and ($generated@@124 $generated@@199) (and (or (not (= $generated@@200 $generated@@45)) (not true)) (= ($generated@@96 $generated@@200) ($generated@@30 $generated@@198)))) ($generated@@40 $generated@@41 ($generated@@46 $generated@@41 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@199 $generated@@200) $generated@@74)) ($generated@@42 $generated@@198)))
 :pattern ( ($generated@@46 $generated@@41 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@199 $generated@@200) $generated@@74)) ($generated@@30 $generated@@198))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@82 $generated@@202 ($generated@@29 $generated@@201)) (and (= ($generated@@88 $generated@@28 ($generated@@46 $generated@@28 $generated@@202)) $generated@@202) ($generated@@40 $generated@@28 ($generated@@46 $generated@@28 $generated@@202) ($generated@@29 $generated@@201))))
 :pattern ( ($generated@@82 $generated@@202 ($generated@@29 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@82 $generated@@204 ($generated@@42 $generated@@203)) (and (= ($generated@@88 $generated@@41 ($generated@@46 $generated@@41 $generated@@204)) $generated@@204) ($generated@@40 $generated@@41 ($generated@@46 $generated@@41 $generated@@204) ($generated@@42 $generated@@203))))
 :pattern ( ($generated@@82 $generated@@204 ($generated@@42 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> ($generated@@82 $generated@@206 ($generated@@30 $generated@@205)) (and (= ($generated@@88 $generated@@28 ($generated@@46 $generated@@28 $generated@@206)) $generated@@206) ($generated@@40 $generated@@28 ($generated@@46 $generated@@28 $generated@@206) ($generated@@30 $generated@@205))))
 :pattern ( ($generated@@82 $generated@@206 ($generated@@30 $generated@@205)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@124 ($generated@@51 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@207 $generated@@208 ($generated@@51 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@207 $generated@@208) $generated@@209 $generated@@210))) ($generated@@77 $generated@@207 ($generated@@51 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@207 $generated@@208 ($generated@@51 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@207 $generated@@208) $generated@@209 $generated@@210))))
 :pattern ( ($generated@@51 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@207 $generated@@208 ($generated@@51 $generated@@48 $generated@@49 ($generated@@47 $generated@@28 ($generated@@50 $generated@@48 $generated@@49) $generated@@207 $generated@@208) $generated@@209 $generated@@210)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@124 $generated@@213) (and ($generated@@39 $generated@@211) ($generated@@27 $generated@@41 $generated@@211 ($generated@@42 $generated@@212) $generated@@213))) ($generated@@27 $generated@@41 ($generated@@150 $generated@@211) ($generated@@42 $generated@@212) $generated@@213))
 :pattern ( ($generated@@27 $generated@@41 ($generated@@150 $generated@@211) ($generated@@42 $generated@@212) $generated@@213))
)))
(assert  (=> (<= 1 $generated@@94) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (or ($generated@@99 $generated@@215 $generated@@217) (and (< 1 $generated@@94) (and ($generated@@82 $generated@@217 $generated@@215) ($generated@@105 $generated@@217 $generated@@215 $generated@@214)))) ($generated@@124 $generated@@214)) ($generated@@27 $generated@@41 ($generated@@34 $generated@@215 $generated@@216 $generated@@217) ($generated@@42 $generated@@215) $generated@@214))
 :pattern ( ($generated@@27 $generated@@41 ($generated@@34 $generated@@215 $generated@@216 $generated@@217) ($generated@@42 $generated@@215) $generated@@214))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> ($generated@@124 $generated@@221) (= ($generated@@27 $generated@@41 ($generated@@81 $generated@@219 $generated@@220) ($generated@@42 $generated@@218) $generated@@221)  (and ($generated@@105 $generated@@219 $generated@@218 $generated@@221) ($generated@@27 $generated@@41 $generated@@220 ($generated@@42 $generated@@218) $generated@@221))))
 :pattern ( ($generated@@27 $generated@@41 ($generated@@81 $generated@@219 $generated@@220) ($generated@@42 $generated@@218) $generated@@221))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@230  (=> (= $generated@@222 ($generated@@165 $generated@@45 $generated@@223 $generated false)) (=> (and ($generated@@105 $generated@@224 $generated@@225 $generated@@223) ($generated@@99 $generated@@225 $generated@@224)) (=> (and (and (and ($generated@@39 ($generated@@34 $generated@@225 ($generated@@35 $generated@@226) $generated@@224)) ($generated@@99 $generated@@225 $generated@@224)) (and (= $generated@@227 ($generated@@34 $generated@@225 ($generated@@35 $generated@@226) $generated@@224)) ($generated@@105 $generated@@224 $generated@@225 $generated@@223))) (and (and ($generated@@99 $generated@@225 $generated@@224) ($generated@@39 ($generated@@34 $generated@@225 ($generated@@35 $generated@@226) $generated@@224))) (and ($generated@@99 $generated@@225 $generated@@224) (= $generated@@228 ($generated@@34 $generated@@225 ($generated@@35 $generated@@226) $generated@@224))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true)))))))
(let (($generated@@231  (=> (and ($generated@@124 $generated@@223) ($generated@@229 $generated@@223)) (=> (and (and ($generated@@82 $generated@@224 $generated@@225) ($generated@@105 $generated@@224 $generated@@225 $generated@@223)) (and (= 2 $generated@@94) (= (ControlFlow 0 4) 2))) $generated@@230))))
$generated@@231)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
