(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 () T@U)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@21 (T@T) Int)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Bool) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (Int) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (Real) T@U)
(declare-fun $generated@@30 (T@U) Real)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@111 (Int) Int)
(declare-fun $generated@@113 (T@T T@U) T@U)
(declare-fun $generated@@116 (T@T T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@21 $generated@@22) 0) (= ($generated@@21 $generated@@23) 1)) (= ($generated@@21 $generated@@24) 2)) (forall (($generated@@31 Bool) ) (! (= ($generated@@26 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 Int) ) (! (= ($generated@@28 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))) (forall (($generated@@34 T@U) ) (! (= ($generated@@27 ($generated@@28 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@28 $generated@@34))
))) (forall (($generated@@35 Real) ) (! (= ($generated@@30 ($generated@@29 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@29 $generated@@35))
))) (forall (($generated@@36 T@U) ) (! (= ($generated@@29 ($generated@@30 $generated@@36)) $generated@@36)
 :pattern ( ($generated@@30 $generated@@36))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17 $generated@@18 $generated@@19 $generated@@20)
)
(assert ($generated@@37 $generated@@38))
(assert (= ($generated@@21 $generated@@40) 3))
(assert (forall (($generated@@43 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@43 $generated@@38)  (or (= $generated@@43 $generated@@41) (= ($generated@@42 $generated@@43) $generated@@38)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@43 $generated@@38))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@47 $generated@@45 $generated@@48) ($generated@@44 $generated@@40 $generated@@47 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@40 $generated@@47 $generated@@45 $generated@@48))
 :pattern ( ($generated@@44 $generated@@40 $generated@@47 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@51 $generated@@49 $generated@@52) ($generated@@44 $generated@@40 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@44 $generated@@40 $generated@@51 $generated@@49 $generated@@52))
 :pattern ( ($generated@@44 $generated@@40 $generated@@51 $generated@@50 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@55 $generated@@53 $generated@@56) ($generated@@44 $generated@@40 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@44 $generated@@40 $generated@@55 $generated@@53 $generated@@56))
 :pattern ( ($generated@@44 $generated@@40 $generated@@55 $generated@@54 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@59 $generated@@57 $generated@@60) ($generated@@44 $generated@@40 $generated@@59 $generated@@58 $generated@@60))
 :pattern ( ($generated@@44 $generated@@40 $generated@@59 $generated@@57 $generated@@60))
 :pattern ( ($generated@@44 $generated@@40 $generated@@59 $generated@@58 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@63 $generated@@61 $generated@@64) ($generated@@44 $generated@@40 $generated@@63 $generated@@62 $generated@@64))
 :pattern ( ($generated@@44 $generated@@40 $generated@@63 $generated@@61 $generated@@64))
 :pattern ( ($generated@@44 $generated@@40 $generated@@63 $generated@@62 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@67 $generated@@65 $generated@@68) ($generated@@44 $generated@@40 $generated@@67 $generated@@66 $generated@@68))
 :pattern ( ($generated@@44 $generated@@40 $generated@@67 $generated@@65 $generated@@68))
 :pattern ( ($generated@@44 $generated@@40 $generated@@67 $generated@@66 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@70 $generated@@69 $generated@@71) ($generated@@44 $generated@@40 $generated@@70 $generated@@38 $generated@@71))
 :pattern ( ($generated@@44 $generated@@40 $generated@@70 $generated@@69 $generated@@71))
 :pattern ( ($generated@@44 $generated@@40 $generated@@70 $generated@@38 $generated@@71))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@73 $generated@@80 $generated@@81 ($generated@@77 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@82) $generated@@84) $generated@@82)
 :weight 0
)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (or (= $generated@@89 $generated@@90) (= ($generated@@73 $generated@@85 $generated@@86 ($generated@@77 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@87) $generated@@90) ($generated@@73 $generated@@85 $generated@@86 $generated@@88 $generated@@90)))
 :weight 0
))) (= ($generated@@21 $generated@@74) 4)) (= ($generated@@21 $generated@@75) 5)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@21 ($generated@@76 $generated@@91 $generated@@92)) 6))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@78 ($generated@@76 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@76 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@76 $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@97 $generated@@46 $generated@@98)  (or (= $generated@@97 $generated@@41) ($generated@@26 ($generated@@72 $generated@@22 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@40 ($generated@@76 $generated@@74 $generated@@75) $generated@@98 $generated@@97) $generated)))))
 :pattern ( ($generated@@44 $generated@@40 $generated@@97 $generated@@46 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@99 $generated@@50 $generated@@100)  (or (= $generated@@99 $generated@@41) ($generated@@26 ($generated@@72 $generated@@22 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@40 ($generated@@76 $generated@@74 $generated@@75) $generated@@100 $generated@@99) $generated)))))
 :pattern ( ($generated@@44 $generated@@40 $generated@@99 $generated@@50 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@101 $generated@@54 $generated@@102)  (or (= $generated@@101 $generated@@41) ($generated@@26 ($generated@@72 $generated@@22 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@40 ($generated@@76 $generated@@74 $generated@@75) $generated@@102 $generated@@101) $generated)))))
 :pattern ( ($generated@@44 $generated@@40 $generated@@101 $generated@@54 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@103 $generated@@58 $generated@@104)  (or (= $generated@@103 $generated@@41) ($generated@@26 ($generated@@72 $generated@@22 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@40 ($generated@@76 $generated@@74 $generated@@75) $generated@@104 $generated@@103) $generated)))))
 :pattern ( ($generated@@44 $generated@@40 $generated@@103 $generated@@58 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@105 $generated@@62 $generated@@106)  (or (= $generated@@105 $generated@@41) ($generated@@26 ($generated@@72 $generated@@22 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@40 ($generated@@76 $generated@@74 $generated@@75) $generated@@106 $generated@@105) $generated)))))
 :pattern ( ($generated@@44 $generated@@40 $generated@@105 $generated@@62 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@107 $generated@@66 $generated@@108)  (or (= $generated@@107 $generated@@41) ($generated@@26 ($generated@@72 $generated@@22 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@40 ($generated@@76 $generated@@74 $generated@@75) $generated@@108 $generated@@107) $generated)))))
 :pattern ( ($generated@@44 $generated@@40 $generated@@107 $generated@@66 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@44 $generated@@40 $generated@@109 $generated@@38 $generated@@110)  (or (= $generated@@109 $generated@@41) ($generated@@26 ($generated@@72 $generated@@22 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@40 ($generated@@76 $generated@@74 $generated@@75) $generated@@110 $generated@@109) $generated)))))
 :pattern ( ($generated@@44 $generated@@40 $generated@@109 $generated@@38 $generated@@110))
)))
(assert (forall (($generated@@112 Int) ) (! (= ($generated@@111 $generated@@112) $generated@@112)
 :pattern ( ($generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@113 $generated@@115 $generated@@114) $generated@@114)
 :pattern ( ($generated@@113 $generated@@115 $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@116 $generated@@118 ($generated@@72 $generated@@118 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@72 $generated@@118 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@119 $generated@@45)  (and ($generated@@39 $generated@@40 $generated@@119 $generated@@46) (or (not (= $generated@@119 $generated@@41)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@119 $generated@@45))
 :pattern ( ($generated@@39 $generated@@40 $generated@@119 $generated@@46))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@120 $generated@@49)  (and ($generated@@39 $generated@@40 $generated@@120 $generated@@50) (or (not (= $generated@@120 $generated@@41)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@120 $generated@@49))
 :pattern ( ($generated@@39 $generated@@40 $generated@@120 $generated@@50))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@121 $generated@@53)  (and ($generated@@39 $generated@@40 $generated@@121 $generated@@54) (or (not (= $generated@@121 $generated@@41)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@121 $generated@@53))
 :pattern ( ($generated@@39 $generated@@40 $generated@@121 $generated@@54))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@122 $generated@@57)  (and ($generated@@39 $generated@@40 $generated@@122 $generated@@58) (or (not (= $generated@@122 $generated@@41)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@122 $generated@@57))
 :pattern ( ($generated@@39 $generated@@40 $generated@@122 $generated@@58))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@123 $generated@@61)  (and ($generated@@39 $generated@@40 $generated@@123 $generated@@62) (or (not (= $generated@@123 $generated@@41)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@123 $generated@@61))
 :pattern ( ($generated@@39 $generated@@40 $generated@@123 $generated@@62))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@124 $generated@@65)  (and ($generated@@39 $generated@@40 $generated@@124 $generated@@66) (or (not (= $generated@@124 $generated@@41)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@124 $generated@@65))
 :pattern ( ($generated@@39 $generated@@40 $generated@@124 $generated@@66))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@125 $generated@@69)  (and ($generated@@39 $generated@@40 $generated@@125 $generated@@38) (or (not (= $generated@@125 $generated@@41)) (not true))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@125 $generated@@69))
 :pattern ( ($generated@@39 $generated@@40 $generated@@125 $generated@@38))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@44 $generated@@40 $generated@@126 $generated@@50 $generated@@127) ($generated@@44 $generated@@40 $generated@@126 $generated@@46 $generated@@127))
 :pattern ( ($generated@@44 $generated@@40 $generated@@126 $generated@@50 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@44 $generated@@40 $generated@@128 $generated@@54 $generated@@129) ($generated@@44 $generated@@40 $generated@@128 $generated@@46 $generated@@129))
 :pattern ( ($generated@@44 $generated@@40 $generated@@128 $generated@@54 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@44 $generated@@40 $generated@@130 $generated@@58 $generated@@131) ($generated@@44 $generated@@40 $generated@@130 $generated@@50 $generated@@131))
 :pattern ( ($generated@@44 $generated@@40 $generated@@130 $generated@@58 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@44 $generated@@40 $generated@@132 $generated@@58 $generated@@133) ($generated@@44 $generated@@40 $generated@@132 $generated@@54 $generated@@133))
 :pattern ( ($generated@@44 $generated@@40 $generated@@132 $generated@@58 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@44 $generated@@40 $generated@@134 $generated@@62 $generated@@135) ($generated@@44 $generated@@40 $generated@@134 $generated@@58 $generated@@135))
 :pattern ( ($generated@@44 $generated@@40 $generated@@134 $generated@@62 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> ($generated@@44 $generated@@40 $generated@@136 $generated@@66 $generated@@137) ($generated@@44 $generated@@40 $generated@@136 $generated@@46 $generated@@137))
 :pattern ( ($generated@@44 $generated@@40 $generated@@136 $generated@@66 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@44 $generated@@40 $generated@@138 $generated@@38 $generated@@139) ($generated@@44 $generated@@40 $generated@@138 $generated@@62 $generated@@139))
 :pattern ( ($generated@@44 $generated@@40 $generated@@138 $generated@@38 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! ($generated@@39 $generated@@40 $generated@@140 $generated@@46)
 :pattern ( ($generated@@39 $generated@@40 $generated@@140 $generated@@46))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@72 $generated@@142 ($generated@@116 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@116 $generated@@142 $generated@@141))
)))
(assert  (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@143 $generated@@146 $generated@@147 $generated@@148 ($generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@143 $generated@@153 $generated@@154 $generated@@155 ($generated@@145 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@143 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@143 $generated@@162 $generated@@163 $generated@@164 ($generated@@145 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@143 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@26 ($generated@@143 $generated@@40 $generated@@74 $generated@@22 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@26 ($generated@@72 $generated@@22 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@40 ($generated@@76 $generated@@74 $generated@@75) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@143 $generated@@40 $generated@@74 $generated@@22 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@177 $generated@@50) ($generated@@39 $generated@@40 $generated@@177 $generated@@46))
 :pattern ( ($generated@@39 $generated@@40 $generated@@177 $generated@@50))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@178 $generated@@54) ($generated@@39 $generated@@40 $generated@@178 $generated@@46))
 :pattern ( ($generated@@39 $generated@@40 $generated@@178 $generated@@54))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@179 $generated@@58) ($generated@@39 $generated@@40 $generated@@179 $generated@@50))
 :pattern ( ($generated@@39 $generated@@40 $generated@@179 $generated@@58))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@180 $generated@@58) ($generated@@39 $generated@@40 $generated@@180 $generated@@54))
 :pattern ( ($generated@@39 $generated@@40 $generated@@180 $generated@@58))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@181 $generated@@62) ($generated@@39 $generated@@40 $generated@@181 $generated@@58))
 :pattern ( ($generated@@39 $generated@@40 $generated@@181 $generated@@62))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@182 $generated@@66) ($generated@@39 $generated@@40 $generated@@182 $generated@@46))
 :pattern ( ($generated@@39 $generated@@40 $generated@@182 $generated@@66))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@183 $generated@@38) ($generated@@39 $generated@@40 $generated@@183 $generated@@62))
 :pattern ( ($generated@@39 $generated@@40 $generated@@183 $generated@@38))
)))
(assert (= ($generated@@184 $generated@@46) $generated@@0))
(assert (= ($generated@@185 $generated@@46) $generated@@14))
(assert (= ($generated@@184 $generated@@45) $generated@@1))
(assert (= ($generated@@185 $generated@@45) $generated@@14))
(assert (= ($generated@@184 $generated@@69) $generated@@2))
(assert (= ($generated@@185 $generated@@69) $generated@@15))
(assert (= ($generated@@184 $generated@@38) $generated@@3))
(assert (= ($generated@@185 $generated@@38) $generated@@15))
(assert (= ($generated@@184 $generated@@50) $generated@@4))
(assert (= ($generated@@185 $generated@@50) $generated@@16))
(assert (= ($generated@@184 $generated@@54) $generated@@5))
(assert (= ($generated@@185 $generated@@54) $generated@@17))
(assert (= ($generated@@184 $generated@@58) $generated@@6))
(assert (= ($generated@@185 $generated@@58) $generated@@18))
(assert (= ($generated@@184 $generated@@62) $generated@@7))
(assert (= ($generated@@185 $generated@@62) $generated@@19))
(assert (= ($generated@@184 $generated@@66) $generated@@8))
(assert (= ($generated@@185 $generated@@66) $generated@@20))
(assert (= ($generated@@184 $generated@@49) $generated@@9))
(assert (= ($generated@@185 $generated@@49) $generated@@16))
(assert (= ($generated@@184 $generated@@53) $generated@@10))
(assert (= ($generated@@185 $generated@@53) $generated@@17))
(assert (= ($generated@@184 $generated@@57) $generated@@11))
(assert (= ($generated@@185 $generated@@57) $generated@@18))
(assert (= ($generated@@184 $generated@@61) $generated@@12))
(assert (= ($generated@@185 $generated@@61) $generated@@19))
(assert (= ($generated@@184 $generated@@65) $generated@@13))
(assert (= ($generated@@185 $generated@@65) $generated@@20))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@187 $generated@@50)  (or (= $generated@@187 $generated@@41) ($generated@@186 ($generated@@42 $generated@@187))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@187 $generated@@50))
)))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@189 $generated@@54)  (or (= $generated@@189 $generated@@41) ($generated@@188 ($generated@@42 $generated@@189))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@189 $generated@@54))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@191 $generated@@58)  (or (= $generated@@191 $generated@@41) ($generated@@190 ($generated@@42 $generated@@191))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@191 $generated@@58))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@192 $generated@@62)  (or (= $generated@@192 $generated@@41) ($generated@@37 ($generated@@42 $generated@@192))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@192 $generated@@62))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@194 $generated@@66)  (or (= $generated@@194 $generated@@41) ($generated@@193 ($generated@@42 $generated@@194))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@194 $generated@@66))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@116 $generated@@23 ($generated@@27 ($generated@@111 $generated@@195))) ($generated@@113 $generated@@75 ($generated@@116 $generated@@23 ($generated@@27 $generated@@195))))
 :pattern ( ($generated@@116 $generated@@23 ($generated@@27 ($generated@@111 $generated@@195))))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@T) ) (! (= ($generated@@116 $generated@@197 ($generated@@113 $generated@@197 $generated@@196)) ($generated@@113 $generated@@75 ($generated@@116 $generated@@197 $generated@@196)))
 :pattern ( ($generated@@116 $generated@@197 ($generated@@113 $generated@@197 $generated@@196)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@207 (T@U) Bool)
(declare-fun $generated@@208 () Bool)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@211 true))
(let (($generated@@212  (=> (and (not ($generated@@39 $generated@@40 $generated@@198 $generated@@65)) (= (ControlFlow 0 3) 1)) $generated@@211)))
(let (($generated@@213  (=> (and ($generated@@39 $generated@@40 $generated@@198 $generated@@65) (= (ControlFlow 0 2) 1)) $generated@@211)))
(let (($generated@@214  (=> (= $generated@@199 (+ $generated@@200 (ite ($generated@@39 $generated@@40 $generated@@198 $generated@@61) 1 0))) (and (=> (= (ControlFlow 0 4) (- 0 5)) true) (and (=> (= (ControlFlow 0 4) 2) $generated@@213) (=> (= (ControlFlow 0 4) 3) $generated@@212))))))
(let (($generated@@215  (=> (and (not ($generated@@39 $generated@@40 $generated@@198 $generated@@61)) (= (ControlFlow 0 7) 4)) $generated@@214)))
(let (($generated@@216  (=> (and ($generated@@39 $generated@@40 $generated@@198 $generated@@61) (= (ControlFlow 0 6) 4)) $generated@@214)))
(let (($generated@@217  (=> (= $generated@@200 (+ $generated@@201 (ite ($generated@@39 $generated@@40 $generated@@198 $generated@@57) 1 0))) (and (=> (= (ControlFlow 0 8) (- 0 9)) true) (and (=> (= (ControlFlow 0 8) 6) $generated@@216) (=> (= (ControlFlow 0 8) 7) $generated@@215))))))
(let (($generated@@218  (=> (and (not ($generated@@39 $generated@@40 $generated@@198 $generated@@57)) (= (ControlFlow 0 11) 8)) $generated@@217)))
(let (($generated@@219  (=> (and ($generated@@39 $generated@@40 $generated@@198 $generated@@57) (= (ControlFlow 0 10) 8)) $generated@@217)))
(let (($generated@@220  (=> (= $generated@@201 (+ $generated@@202 (ite ($generated@@39 $generated@@40 $generated@@198 $generated@@53) 1 0))) (and (=> (= (ControlFlow 0 12) (- 0 13)) true) (and (=> (= (ControlFlow 0 12) 10) $generated@@219) (=> (= (ControlFlow 0 12) 11) $generated@@218))))))
(let (($generated@@221  (=> (and (not ($generated@@39 $generated@@40 $generated@@198 $generated@@53)) (= (ControlFlow 0 15) 12)) $generated@@220)))
(let (($generated@@222  (=> (and ($generated@@39 $generated@@40 $generated@@198 $generated@@53) (= (ControlFlow 0 14) 12)) $generated@@220)))
(let (($generated@@223  (=> (= $generated@@202 (+ $generated@@203 (ite ($generated@@39 $generated@@40 $generated@@198 $generated@@49) 1 0))) (and (=> (= (ControlFlow 0 16) (- 0 17)) true) (and (=> (= (ControlFlow 0 16) 14) $generated@@222) (=> (= (ControlFlow 0 16) 15) $generated@@221))))))
(let (($generated@@224  (=> (and (not ($generated@@39 $generated@@40 $generated@@198 $generated@@49)) (= (ControlFlow 0 19) 16)) $generated@@223)))
(let (($generated@@225  (=> (and ($generated@@39 $generated@@40 $generated@@198 $generated@@49) (= (ControlFlow 0 18) 16)) $generated@@223)))
(let (($generated@@226  (=> (and (= $generated@@204 ($generated@@144 $generated@@41 $generated@@205 $generated false)) (= $generated@@203 ($generated@@111 0))) (and (=> (= (ControlFlow 0 20) (- 0 21)) true) (and (=> (= (ControlFlow 0 20) 18) $generated@@225) (=> (= (ControlFlow 0 20) 19) $generated@@224))))))
(let (($generated@@227  (=> (and (and (and ($generated@@206 $generated@@205) ($generated@@207 $generated@@205)) (and ($generated@@39 $generated@@40 $generated@@198 $generated@@69) ($generated@@44 $generated@@40 $generated@@198 $generated@@69 $generated@@205))) (and (and (=> $generated@@208 (and ($generated@@39 $generated@@40 $generated@@209 $generated@@45) ($generated@@44 $generated@@40 $generated@@209 $generated@@45 $generated@@205))) true) (and (= 1 $generated@@210) (= (ControlFlow 0 22) 20)))) $generated@@226)))
$generated@@227))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
