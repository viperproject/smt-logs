(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U Int) T@U)
(declare-fun $generated@@27 (Int T@U T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 (T@U) Int)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 (Int) Int)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@U T@U) Bool)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@120 (T@U) Int)
(declare-fun $generated@@124 (Int) T@U)
(declare-fun $generated@@125 (T@U) Int)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@132 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@201 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@1))
(assert (= ($generated@@25 $generated@@0) $generated@@2))
(assert (= ($generated@@9 $generated@@31) 3))
(assert (forall (($generated@@32 Int) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 Int) ) (!  (=> (and (<= 0 $generated@@35) (< $generated@@35 ($generated@@28 $generated@@34))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@34 $generated@@35))) ($generated@@29 ($generated@@27 $generated@@32 $generated@@33 $generated@@34))))
 :pattern ( ($generated@@26 $generated@@34 $generated@@35) ($generated@@27 $generated@@32 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 Int) ) (!  (=> (and (<= 0 $generated@@38) (< $generated@@38 ($generated@@28 $generated@@37))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@37 $generated@@38))) ($generated@@29 ($generated@@36 $generated@@37))))
 :pattern ( ($generated@@26 $generated@@37 $generated@@38) ($generated@@36 $generated@@37))
)))
(assert (forall (($generated@@40 Int) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@39 ($generated@@27 $generated@@40 $generated@@41 $generated@@42)) $generated@@6)
 :pattern ( ($generated@@27 $generated@@40 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 Int) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@43 ($generated@@27 $generated@@44 $generated@@45 $generated@@46)) $generated@@44)
 :pattern ( ($generated@@27 $generated@@44 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 Int) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@47 ($generated@@27 $generated@@48 $generated@@49 $generated@@50)) $generated@@49)
 :pattern ( ($generated@@27 $generated@@48 $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 Int) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@51 ($generated@@27 $generated@@52 $generated@@53 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@27 $generated@@52 $generated@@53 $generated@@54))
)))
(assert (= ($generated@@28 $generated@@55) 0))
(assert (forall (($generated@@57 Int) ) (! (= ($generated@@56 $generated@@57) $generated@@57)
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 $generated@@59) $generated@@59)
 :pattern ( ($generated@@58 $generated@@60 $generated@@59))
)))
(assert (= ($generated@@9 $generated@@62) 4))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (and ($generated@@61 $generated@@62 $generated@@66 ($generated@@64 $generated@@68)) ($generated@@65 $generated@@67 $generated@@68)) ($generated@@61 $generated@@62 ($generated@@63 $generated@@66 $generated@@67) ($generated@@64 $generated@@68)))
 :pattern ( ($generated@@61 $generated@@62 ($generated@@63 $generated@@66 $generated@@67) ($generated@@64 $generated@@68)))
)))
(assert (= ($generated@@9 $generated@@70) 5))
(assert (forall (($generated@@71 Int) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@61 $generated@@31 ($generated@@27 $generated@@71 $generated@@72 $generated@@73) $generated@@69)  (and (and ($generated@@61 $generated@@11 ($generated@@15 $generated@@71) $generated@@0) ($generated@@61 $generated@@70 $generated@@72 $generated)) ($generated@@61 $generated@@62 $generated@@73 ($generated@@64 $generated))))
 :pattern ( ($generated@@61 $generated@@31 ($generated@@27 $generated@@71 $generated@@72 $generated@@73) $generated@@69))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@74 $generated@@75) (= ($generated@@39 $generated@@75) $generated@@6))
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@76 $generated@@77) (= ($generated@@39 $generated@@77) $generated@@7))
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@30 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@30 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@74 $generated@@81) (exists (($generated@@82 Int) ($generated@@83 T@U) ($generated@@84 T@U) ) (= $generated@@81 ($generated@@27 $generated@@82 $generated@@83 $generated@@84))))
 :pattern ( ($generated@@74 $generated@@81))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@76 $generated@@85) (exists (($generated@@86 T@U) ) (= $generated@@85 ($generated@@36 $generated@@86))))
 :pattern ( ($generated@@76 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@28 ($generated@@63 $generated@@87 $generated@@88)) (+ 1 ($generated@@28 $generated@@87)))
 :pattern ( ($generated@@63 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@89 ($generated@@78 $generated@@94 $generated@@91) $generated@@92 $generated@@93) ($generated@@90 $generated@@94 $generated@@91 $generated@@92 $generated@@93))
 :pattern ( ($generated@@89 ($generated@@78 $generated@@94 $generated@@91) $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@65 $generated@@95 $generated@@69) (and (= ($generated@@78 $generated@@31 ($generated@@30 $generated@@31 $generated@@95)) $generated@@95) ($generated@@61 $generated@@31 ($generated@@30 $generated@@31 $generated@@95) $generated@@69)))
 :pattern ( ($generated@@65 $generated@@95 $generated@@69))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 Int) ($generated@@98 T@U) ) (!  (and (=> (= $generated@@97 ($generated@@28 $generated@@96)) (= ($generated@@26 ($generated@@63 $generated@@96 $generated@@98) $generated@@97) $generated@@98)) (=> (or (not (= $generated@@97 ($generated@@28 $generated@@96))) (not true)) (= ($generated@@26 ($generated@@63 $generated@@96 $generated@@98) $generated@@97) ($generated@@26 $generated@@96 $generated@@97))))
 :pattern ( ($generated@@26 ($generated@@63 $generated@@96 $generated@@98) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@61 $generated@@31 $generated@@99 $generated@@69) (or ($generated@@74 $generated@@99) ($generated@@76 $generated@@99)))
 :pattern ( ($generated@@76 $generated@@99) ($generated@@61 $generated@@31 $generated@@99 $generated@@69))
 :pattern ( ($generated@@74 $generated@@99) ($generated@@61 $generated@@31 $generated@@99 $generated@@69))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@65 $generated@@100 $generated@@0) (and (= ($generated@@78 $generated@@11 ($generated@@30 $generated@@11 $generated@@100)) $generated@@100) ($generated@@61 $generated@@11 ($generated@@30 $generated@@11 $generated@@100) $generated@@0)))
 :pattern ( ($generated@@65 $generated@@100 $generated@@0))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@65 $generated@@101 $generated) (and (= ($generated@@78 $generated@@70 ($generated@@30 $generated@@70 $generated@@101)) $generated@@101) ($generated@@61 $generated@@70 ($generated@@30 $generated@@70 $generated@@101) $generated)))
 :pattern ( ($generated@@65 $generated@@101 $generated))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@65 ($generated@@78 $generated@@104 $generated@@102) $generated@@103) ($generated@@61 $generated@@104 $generated@@102 $generated@@103))
 :pattern ( ($generated@@65 ($generated@@78 $generated@@104 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (<= 0 ($generated@@28 $generated@@105))
 :pattern ( ($generated@@28 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@90 $generated@@62 $generated@@106 ($generated@@64 $generated@@107) $generated@@108) (forall (($generated@@109 Int) ) (!  (=> (and (<= 0 $generated@@109) (< $generated@@109 ($generated@@28 $generated@@106))) ($generated@@89 ($generated@@26 $generated@@106 $generated@@109) $generated@@107 $generated@@108))
 :pattern ( ($generated@@26 $generated@@106 $generated@@109))
)))
 :pattern ( ($generated@@90 $generated@@62 $generated@@106 ($generated@@64 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 Int) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@27 ($generated@@56 $generated@@110) ($generated@@58 $generated@@70 $generated@@111) ($generated@@58 $generated@@62 $generated@@112)) ($generated@@58 $generated@@31 ($generated@@27 $generated@@110 $generated@@111 $generated@@112)))
 :pattern ( ($generated@@27 ($generated@@56 $generated@@110) ($generated@@58 $generated@@70 $generated@@111) ($generated@@58 $generated@@62 $generated@@112)))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 ($generated@@64 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@64 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@25 ($generated@@64 $generated@@115)) $generated@@3)
 :pattern ( ($generated@@64 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@39 ($generated@@36 $generated@@116)) $generated@@7)
 :pattern ( ($generated@@36 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@51 ($generated@@36 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@36 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@30 $generated@@119 ($generated@@78 $generated@@119 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@78 $generated@@119 $generated@@118))
)))
(assert (forall (($generated@@121 Int) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (< ($generated@@120 $generated@@123) ($generated@@29 ($generated@@27 $generated@@121 $generated@@122 $generated@@123)))
 :pattern ( ($generated@@27 $generated@@121 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@126 Int) ) (!  (=> (or (and (<= 0 $generated@@126) (< $generated@@126 55296)) (and (<= 57344 $generated@@126) (< $generated@@126 1114112))) (= ($generated@@125 ($generated@@124 $generated@@126)) $generated@@126))
 :pattern ( ($generated@@124 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (! (< ($generated@@120 $generated@@127) ($generated@@29 ($generated@@36 $generated@@127)))
 :pattern ( ($generated@@36 $generated@@127))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@128 $generated@@139 $generated@@140 $generated@@141 ($generated@@135 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@144 $generated@@145) $generated@@142)
 :weight 0
)) (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@128 $generated@@146 $generated@@147 $generated@@148 ($generated@@135 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@128 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@128 $generated@@155 $generated@@156 $generated@@157 ($generated@@135 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@128 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)))) (= ($generated@@9 $generated@@129) 6)) (= ($generated@@9 $generated@@130) 7)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@132 $generated@@164 $generated@@165 ($generated@@136 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@166) $generated@@168) $generated@@166)
 :weight 0
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@173 $generated@@174) (= ($generated@@132 $generated@@169 $generated@@170 ($generated@@136 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@171) $generated@@174) ($generated@@132 $generated@@169 $generated@@170 $generated@@172 $generated@@174)))
 :weight 0
))) (= ($generated@@9 $generated@@133) 8)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@9 ($generated@@134 $generated@@175 $generated@@176)) 9))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@137 ($generated@@134 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@134 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@138 ($generated@@134 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@134 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@14 ($generated@@128 $generated@@129 $generated@@130 $generated@@10 ($generated@@131 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (or (not (= $generated@@185 $generated@@181)) (not true)) ($generated@@14 ($generated@@30 $generated@@10 ($generated@@132 $generated@@130 $generated@@133 ($generated@@132 $generated@@129 ($generated@@134 $generated@@130 $generated@@133) $generated@@182 $generated@@185) $generated@@183)))) $generated@@184))
 :pattern ( ($generated@@128 $generated@@129 $generated@@130 $generated@@10 ($generated@@131 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (and (= ($generated@@187 ($generated@@63 $generated@@189 $generated@@190)) $generated@@189) (= ($generated@@188 ($generated@@63 $generated@@189 $generated@@190)) $generated@@190))
 :pattern ( ($generated@@63 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and ($generated@@191 $generated@@193) (and ($generated@@74 $generated@@192) ($generated@@90 $generated@@31 $generated@@192 $generated@@69 $generated@@193))) ($generated@@90 $generated@@11 ($generated@@15 ($generated@@43 $generated@@192)) $generated@@0 $generated@@193))
 :pattern ( ($generated@@90 $generated@@11 ($generated@@15 ($generated@@43 $generated@@192)) $generated@@0 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and ($generated@@191 $generated@@195) (and ($generated@@74 $generated@@194) ($generated@@90 $generated@@31 $generated@@194 $generated@@69 $generated@@195))) ($generated@@90 $generated@@70 ($generated@@47 $generated@@194) $generated $generated@@195))
 :pattern ( ($generated@@90 $generated@@70 ($generated@@47 $generated@@194) $generated $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@65 $generated@@196 ($generated@@64 $generated@@197)) (and (= ($generated@@78 $generated@@62 ($generated@@30 $generated@@62 $generated@@196)) $generated@@196) ($generated@@61 $generated@@62 ($generated@@30 $generated@@62 $generated@@196) ($generated@@64 $generated@@197))))
 :pattern ( ($generated@@65 $generated@@196 ($generated@@64 $generated@@197)))
)))
(assert (forall (($generated@@198 T@U) ) (!  (and (= ($generated@@124 ($generated@@125 $generated@@198)) $generated@@198) (or (and (<= 0 ($generated@@125 $generated@@198)) (< ($generated@@125 $generated@@198) 55296)) (and (<= 57344 ($generated@@125 $generated@@198)) (< ($generated@@125 $generated@@198) 1114112))))
 :pattern ( ($generated@@125 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and ($generated@@191 $generated@@200) ($generated@@61 $generated@@31 $generated@@199 $generated@@69)) ($generated@@90 $generated@@31 $generated@@199 $generated@@69 $generated@@200))
 :pattern ( ($generated@@90 $generated@@31 $generated@@199 $generated@@69 $generated@@200))
)))
(assert (= ($generated@@25 $generated@@69) $generated@@5))
(assert (= ($generated@@201 $generated@@69) $generated@@8))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@61 $generated@@31 ($generated@@36 $generated@@202) $generated@@69) ($generated@@61 $generated@@62 $generated@@202 ($generated@@64 $generated)))
 :pattern ( ($generated@@61 $generated@@31 ($generated@@36 $generated@@202) $generated@@69))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@191 $generated@@204) (and ($generated@@74 $generated@@203) ($generated@@90 $generated@@31 $generated@@203 $generated@@69 $generated@@204))) ($generated@@90 $generated@@62 ($generated@@51 $generated@@203) ($generated@@64 $generated) $generated@@204))
 :pattern ( ($generated@@90 $generated@@62 ($generated@@51 $generated@@203) ($generated@@64 $generated) $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@191 $generated@@206) (and ($generated@@76 $generated@@205) ($generated@@90 $generated@@31 $generated@@205 $generated@@69 $generated@@206))) ($generated@@90 $generated@@62 ($generated@@51 $generated@@205) ($generated@@64 $generated) $generated@@206))
 :pattern ( ($generated@@90 $generated@@62 ($generated@@51 $generated@@205) ($generated@@64 $generated) $generated@@206))
)))
(assert (forall (($generated@@207 Int) ) (! (= ($generated@@78 $generated@@11 ($generated@@15 ($generated@@56 $generated@@207))) ($generated@@58 $generated@@133 ($generated@@78 $generated@@11 ($generated@@15 $generated@@207))))
 :pattern ( ($generated@@78 $generated@@11 ($generated@@15 ($generated@@56 $generated@@207))))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@36 ($generated@@58 $generated@@62 $generated@@208)) ($generated@@58 $generated@@31 ($generated@@36 $generated@@208)))
 :pattern ( ($generated@@36 ($generated@@58 $generated@@62 $generated@@208)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@T) ) (! (= ($generated@@78 $generated@@210 ($generated@@58 $generated@@210 $generated@@209)) ($generated@@58 $generated@@133 ($generated@@78 $generated@@210 $generated@@209)))
 :pattern ( ($generated@@78 $generated@@210 ($generated@@58 $generated@@210 $generated@@209)))
)))
(assert (forall (($generated@@211 T@U) ) (!  (=> (= ($generated@@28 $generated@@211) 0) (= $generated@@211 $generated@@55))
 :pattern ( ($generated@@28 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! ($generated@@90 $generated@@11 $generated@@213 $generated@@0 $generated@@212)
 :pattern ( ($generated@@90 $generated@@11 $generated@@213 $generated@@0 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! ($generated@@90 $generated@@70 $generated@@215 $generated $generated@@214)
 :pattern ( ($generated@@90 $generated@@70 $generated@@215 $generated $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@61 $generated@@62 $generated@@216 ($generated@@64 $generated@@217)) (forall (($generated@@218 Int) ) (!  (=> (and (<= 0 $generated@@218) (< $generated@@218 ($generated@@28 $generated@@216))) ($generated@@65 ($generated@@26 $generated@@216 $generated@@218) $generated@@217))
 :pattern ( ($generated@@26 $generated@@216 $generated@@218))
)))
 :pattern ( ($generated@@61 $generated@@62 $generated@@216 ($generated@@64 $generated@@217)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ) (!  (=> (and (<= 0 $generated@@220) (< $generated@@220 ($generated@@28 $generated@@219))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@219 $generated@@220))) ($generated@@120 $generated@@219)))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@219 $generated@@220))))
)))
(assert (forall (($generated@@221 T@U) ) (! ($generated@@61 $generated@@11 $generated@@221 $generated@@0)
 :pattern ( ($generated@@61 $generated@@11 $generated@@221 $generated@@0))
)))
(assert (forall (($generated@@222 T@U) ) (! ($generated@@61 $generated@@70 $generated@@222 $generated)
 :pattern ( ($generated@@61 $generated@@70 $generated@@222 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@230  (=> (and (= $generated@@223 ($generated@@131 $generated@@224 $generated@@225 $generated@@4 false)) (= $generated@@226 ($generated@@58 $generated@@31 ($generated@@27 ($generated@@56 42) ($generated@@58 $generated@@70 ($generated@@124 113)) ($generated@@58 $generated@@62 ($generated@@63 ($generated@@63 ($generated@@63 ($generated@@63 ($generated@@63 $generated@@55 ($generated@@78 $generated@@70 ($generated@@124 104))) ($generated@@78 $generated@@70 ($generated@@124 101))) ($generated@@78 $generated@@70 ($generated@@124 108))) ($generated@@78 $generated@@70 ($generated@@124 108))) ($generated@@78 $generated@@70 ($generated@@124 111)))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@74 $generated@@226)) (=> ($generated@@74 $generated@@226) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@74 $generated@@226)))))))
(let (($generated@@231  (=> (and ($generated@@191 $generated@@225) ($generated@@227 $generated@@225)) (=> (and (and (and ($generated@@61 $generated@@31 $generated@@228 $generated@@69) ($generated@@90 $generated@@31 $generated@@228 $generated@@69 $generated@@225)) true) (and (= 1 $generated@@229) (= (ControlFlow 0 4) 2))) $generated@@230))))
$generated@@231)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
