(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U T@U) Bool)
(declare-fun $generated@@0 (T@T) Int)
(declare-fun $generated@@1 () T@T)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 (Bool) T@U)
(declare-fun $generated@@5 (T@U) Bool)
(declare-fun $generated@@6 (Int) T@U)
(declare-fun $generated@@7 (T@U) Int)
(declare-fun $generated@@8 (Real) T@U)
(declare-fun $generated@@9 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@20 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@T T@T) T@T)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@28 (T@T) T@T)
(declare-fun $generated@@29 (T@T) T@T)
(declare-fun $generated@@50 (Real) Int)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@54 (Real) Real)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@62 (Int) T@U)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 (T@U) Int)
(declare-fun $generated@@68 (Int) Real)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@82 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@84 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@0 $generated@@1) 0) (= ($generated@@0 $generated@@2) 1)) (= ($generated@@0 $generated@@3) 2)) (forall (($generated@@10 Bool) ) (! (= ($generated@@5 ($generated@@4 $generated@@10)) $generated@@10)
 :pattern ( ($generated@@4 $generated@@10))
))) (forall (($generated@@11 T@U) ) (! (= ($generated@@4 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 Int) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Real) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))))
(assert (forall (($generated@@16 T@U) ($generated@@17 T@U) ($generated@@18 T@U) ) (!  (=> (and ($generated $generated@@16 $generated@@17) ($generated $generated@@17 $generated@@18)) ($generated $generated@@16 $generated@@18))
 :pattern ( ($generated $generated@@16 $generated@@17) ($generated $generated@@17 $generated@@18))
 :pattern ( ($generated $generated@@16 $generated@@17) ($generated $generated@@16 $generated@@18))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@30 T@T) ($generated@@31 T@T) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@20 $generated@@30 $generated@@31 ($generated@@27 $generated@@30 $generated@@31 $generated@@33 $generated@@34 $generated@@32) $generated@@34) $generated@@32)
 :weight 0
)) (forall (($generated@@35 T@T) ($generated@@36 T@T) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (or (= $generated@@39 $generated@@40) (= ($generated@@20 $generated@@35 $generated@@36 ($generated@@27 $generated@@35 $generated@@36 $generated@@38 $generated@@39 $generated@@37) $generated@@40) ($generated@@20 $generated@@35 $generated@@36 $generated@@38 $generated@@40)))
 :weight 0
))) (= ($generated@@0 $generated@@21) 3)) (= ($generated@@0 $generated@@22) 4)) (= ($generated@@0 $generated@@23) 5)) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (= ($generated@@0 ($generated@@24 $generated@@41 $generated@@42)) 6))) (forall (($generated@@43 T@T) ($generated@@44 T@T) ) (! (= ($generated@@28 ($generated@@24 $generated@@43 $generated@@44)) $generated@@43)
 :pattern ( ($generated@@24 $generated@@43 $generated@@44))
))) (forall (($generated@@45 T@T) ($generated@@46 T@T) ) (! (= ($generated@@29 ($generated@@24 $generated@@45 $generated@@46)) $generated@@46)
 :pattern ( ($generated@@24 $generated@@45 $generated@@46))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> ($generated@@19 $generated@@47 $generated@@48) (forall (($generated@@49 T@U) ) (!  (=> ($generated@@5 ($generated@@26 $generated@@1 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@47 $generated@@49) $generated@@25))) ($generated@@5 ($generated@@26 $generated@@1 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@48 $generated@@49) $generated@@25))))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@48 $generated@@49) $generated@@25))
)))
 :pattern ( ($generated@@19 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@51 Real) ) (! (= ($generated@@50 $generated@@51) (to_int $generated@@51))
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@52 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 Real) ) (! (= ($generated@@54 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@56 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 ($generated@@26 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@26 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@65 Int) ) (!  (=> (<= 0 $generated@@65) (and ($generated@@63 ($generated@@62 $generated@@65)) (= ($generated@@64 ($generated@@62 $generated@@65)) $generated@@65)))
 :pattern ( ($generated@@62 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (or (or ($generated $generated@@66 $generated@@67) (= $generated@@66 $generated@@67)) ($generated $generated@@67 $generated@@66))
 :pattern ( ($generated $generated@@66 $generated@@67) ($generated $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@69 Int) ) (! (= ($generated@@68 $generated@@69) (to_real $generated@@69))
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or (not (= $generated@@70 $generated@@72)) (not true)) (=> (and ($generated@@19 $generated@@70 $generated@@71) ($generated@@19 $generated@@71 $generated@@72)) ($generated@@19 $generated@@70 $generated@@72)))
 :pattern ( ($generated@@19 $generated@@70 $generated@@71) ($generated@@19 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (! (<= 0 ($generated@@64 $generated@@73))
 :pattern ( ($generated@@64 $generated@@73))
)))
(assert (forall (($generated@@74 Int) ) (! (= ($generated@@50 ($generated@@68 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@50 ($generated@@68 $generated@@74)))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@26 $generated@@76 ($generated@@59 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@59 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (and (and (and (=> ($generated $generated@@77 $generated@@78) (or (not (= $generated@@77 $generated@@78)) (not true))) (=> (and ($generated@@63 $generated@@77) (not ($generated@@63 $generated@@78))) ($generated $generated@@77 $generated@@78))) (=> (and ($generated@@63 $generated@@77) ($generated@@63 $generated@@78)) (= ($generated $generated@@77 $generated@@78) (< ($generated@@64 $generated@@77) ($generated@@64 $generated@@78))))) (=> (and ($generated $generated@@77 $generated@@78) ($generated@@63 $generated@@78)) ($generated@@63 $generated@@77)))
 :pattern ( ($generated $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 Int) ) (!  (=> (or (and (<= 0 $generated@@81) (< $generated@@81 55296)) (and (<= 57344 $generated@@81) (< $generated@@81 1114112))) (= ($generated@@80 ($generated@@79 $generated@@81)) $generated@@81))
 :pattern ( ($generated@@79 $generated@@81))
)))
(assert  (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@82 $generated@@85 $generated@@86 $generated@@87 ($generated@@84 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@91 $generated@@88) $generated@@90 $generated@@91) $generated@@88)
 :weight 0
)) (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or (= $generated@@97 $generated@@99) (= ($generated@@82 $generated@@92 $generated@@93 $generated@@94 ($generated@@84 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@99 $generated@@100) ($generated@@82 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@99 $generated@@100)))
 :weight 0
)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@82 $generated@@101 $generated@@102 $generated@@103 ($generated@@84 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@108 $generated@@109) ($generated@@82 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@108 $generated@@109)))
 :weight 0
)))))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 Bool) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@5 ($generated@@82 $generated@@23 $generated@@21 $generated@@1 ($generated@@83 $generated@@110 $generated@@111 $generated@@112 $generated@@113) $generated@@114 $generated@@115))  (=> (and (or (not (= $generated@@114 $generated@@110)) (not true)) ($generated@@5 ($generated@@26 $generated@@1 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@111 $generated@@114) $generated@@112)))) $generated@@113))
 :pattern ( ($generated@@82 $generated@@23 $generated@@21 $generated@@1 ($generated@@83 $generated@@110 $generated@@111 $generated@@112 $generated@@113) $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (!  (and (= ($generated@@79 ($generated@@80 $generated@@116)) $generated@@116) (or (and (<= 0 ($generated@@80 $generated@@116)) (< ($generated@@80 $generated@@116) 55296)) (and (<= 57344 ($generated@@80 $generated@@116)) (< ($generated@@80 $generated@@116) 1114112))))
 :pattern ( ($generated@@80 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@63 $generated@@117) (= $generated@@117 ($generated@@62 ($generated@@64 $generated@@117))))
 :pattern ( ($generated@@64 $generated@@117))
 :pattern ( ($generated@@63 $generated@@117))
)))
(assert (forall (($generated@@118 Int) ) (! (= ($generated@@59 $generated@@2 ($generated@@6 ($generated@@52 $generated@@118))) ($generated@@56 $generated@@22 ($generated@@59 $generated@@2 ($generated@@6 $generated@@118))))
 :pattern ( ($generated@@59 $generated@@2 ($generated@@6 ($generated@@52 $generated@@118))))
)))
(assert (forall (($generated@@119 Real) ) (! (= ($generated@@59 $generated@@3 ($generated@@8 ($generated@@54 $generated@@119))) ($generated@@56 $generated@@22 ($generated@@59 $generated@@3 ($generated@@8 $generated@@119))))
 :pattern ( ($generated@@59 $generated@@3 ($generated@@8 ($generated@@54 $generated@@119))))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@59 $generated@@121 ($generated@@56 $generated@@121 $generated@@120)) ($generated@@56 $generated@@22 ($generated@@59 $generated@@121 $generated@@120)))
 :pattern ( ($generated@@59 $generated@@121 ($generated@@56 $generated@@121 $generated@@120)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@122 () T@U)
(declare-fun $generated@@123 () T@U)
(declare-fun $generated@@124 () T@U)
(declare-fun $generated@@125 () Int)
(declare-fun $generated@@126 (T@U) Bool)
(declare-fun $generated@@127 () T@U)
(declare-fun $generated@@128 (T@U) Bool)
(declare-fun $generated@@129 () Real)
(declare-fun $generated@@130 () T@U)
(declare-fun $generated@@131 () T@U)
(declare-fun $generated@@132 () T@U)
(declare-fun $generated@@133 () (_ BitVec 7))
(declare-fun $generated@@134 (T@U) (_ BitVec 7))
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 ((_ BitVec 7)) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 () Int)
(assert  (and (and (and (= ($generated@@0 $generated@@135) 7) (forall (($generated@@144 (_ BitVec 7)) ) (! (= ($generated@@134 ($generated@@136 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@136 $generated@@144))
))) (forall (($generated@@145 T@U) ) (! (= ($generated@@136 ($generated@@134 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@134 $generated@@145))
))) (= ($generated@@0 $generated@@142) 8)))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@146  (=> (and (= $generated@@122 ($generated@@83 $generated@@123 $generated@@124 $generated@@25 false)) (= $generated@@125 ($generated@@52 120))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (<= ($generated@@52 0) $generated@@125)) (=> (<= ($generated@@52 0) $generated@@125) (and (=> (= (ControlFlow 0 2) (- 0 12)) (< $generated@@125 128)) (=> (< $generated@@125 128) (=> (and (and (and ($generated@@126 $generated@@127) ($generated@@128 $generated@@127)) (forall (($generated@@147 T@U) ) (!  (=> (and (or (not (= $generated@@147 $generated@@123)) (not true)) ($generated@@5 ($generated@@26 $generated@@1 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@124 $generated@@147) $generated@@25)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@127 $generated@@147) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@124 $generated@@147)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@127 $generated@@147))
))) (and ($generated@@19 $generated@@124 $generated@@127) (= $generated@@129 ($generated@@54 120.0)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (= ($generated@@68 ($generated@@50 $generated@@129)) $generated@@129)) (=> (= ($generated@@68 ($generated@@50 $generated@@129)) $generated@@129) (and (=> (= (ControlFlow 0 2) (- 0 10)) (<= ($generated@@52 0) ($generated@@50 $generated@@129))) (=> (<= ($generated@@52 0) ($generated@@50 $generated@@129)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (< ($generated@@50 $generated@@129) 128)) (=> (< ($generated@@50 $generated@@129) 128) (=> (and (and (and ($generated@@126 $generated@@130) ($generated@@128 $generated@@130)) (forall (($generated@@148 T@U) ) (!  (=> (and (or (not (= $generated@@148 $generated@@123)) (not true)) ($generated@@5 ($generated@@26 $generated@@1 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@127 $generated@@148) $generated@@25)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@130 $generated@@148) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@127 $generated@@148)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@130 $generated@@148))
))) (and ($generated@@19 $generated@@127 $generated@@130) (= $generated@@131 ($generated@@56 $generated@@22 ($generated@@62 120))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (or (= ($generated@@62 0) $generated@@131) ($generated ($generated@@62 0) $generated@@131))) (=> (or (= ($generated@@62 0) $generated@@131) ($generated ($generated@@62 0) $generated@@131)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated $generated@@131 ($generated@@62 128))) (=> ($generated $generated@@131 ($generated@@62 128)) (=> (and (and (and (and ($generated@@126 $generated@@132) ($generated@@128 $generated@@132)) (forall (($generated@@149 T@U) ) (!  (=> (and (or (not (= $generated@@149 $generated@@123)) (not true)) ($generated@@5 ($generated@@26 $generated@@1 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@130 $generated@@149) $generated@@25)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@132 $generated@@149) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@130 $generated@@149)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@132 $generated@@149))
))) (and ($generated@@19 $generated@@130 $generated@@132) (= $generated@@133 ($generated@@134 ($generated@@56 $generated@@135 ($generated@@136 #b1111000)))))) (and (and (and ($generated@@126 $generated@@137) ($generated@@128 $generated@@137)) (forall (($generated@@150 T@U) ) (!  (=> (and (or (not (= $generated@@150 $generated@@123)) (not true)) ($generated@@5 ($generated@@26 $generated@@1 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@132 $generated@@150) $generated@@25)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@137 $generated@@150) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@132 $generated@@150)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@137 $generated@@150))
))) (and ($generated@@19 $generated@@132 $generated@@137) (= $generated@@138 ($generated@@52 120))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@52 0) $generated@@138) (< $generated@@138 4294967296))) (=> (and (<= ($generated@@52 0) $generated@@138) (< $generated@@138 4294967296)) (=> (= $generated@@139 ($generated@@52 120)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@52 0) $generated@@139)) (=> (<= ($generated@@52 0) $generated@@139) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< $generated@@139 128)) (=> (< $generated@@139 128) (=> (and (and (and ($generated@@126 $generated@@140) ($generated@@128 $generated@@140)) (forall (($generated@@151 T@U) ) (!  (=> (and (or (not (= $generated@@151 $generated@@123)) (not true)) ($generated@@5 ($generated@@26 $generated@@1 ($generated@@20 $generated@@21 $generated@@22 ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@137 $generated@@151) $generated@@25)))) (= ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@140 $generated@@151) ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@137 $generated@@151)))
 :pattern ( ($generated@@20 $generated@@23 ($generated@@24 $generated@@21 $generated@@22) $generated@@140 $generated@@151))
))) (and ($generated@@19 $generated@@137 $generated@@140) (= $generated@@141 ($generated@@56 $generated@@142 ($generated@@79 120))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@80 ($generated@@79 ($generated@@52 0))) ($generated@@80 $generated@@141))) (=> (<= ($generated@@80 ($generated@@79 ($generated@@52 0))) ($generated@@80 $generated@@141)) (=> (= (ControlFlow 0 2) (- 0 1)) (< ($generated@@80 $generated@@141) ($generated@@80 ($generated@@79 ($generated@@52 128)))))))))))))))))))))))))))))))))))
(let (($generated@@152  (=> (and (and ($generated@@126 $generated@@124) ($generated@@128 $generated@@124)) (and (= 2 $generated@@143) (= (ControlFlow 0 14) 2))) $generated@@146)))
$generated@@152)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
