(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@T T@T) T@T)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@37 (T@T) T@T)
(declare-fun $generated@@38 (T@T) T@T)
(declare-fun $generated@@59 (Int) Int)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@T T@U T@U) Bool)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@72 (T@U T@U Int) T@U)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@109 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U Int) T@U)
(declare-fun $generated@@117 (T@U T@U) Bool)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U Int) T@U)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@20 $generated@@6 $generated@@22 $generated@@21 $generated@@23)
 :pattern ( ($generated@@20 $generated@@6 $generated@@22 $generated@@21 $generated@@23))
)))
(assert (forall (($generated@@26 T@U) ) (!  (not ($generated@@24 $generated@@25 $generated@@26))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26))
)))
(assert (= ($generated@@27 $generated@@28) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@39 T@T) ($generated@@40 T@T) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@30 $generated@@39 $generated@@40 ($generated@@36 $generated@@39 $generated@@40 $generated@@42 $generated@@43 $generated@@41) $generated@@43) $generated@@41)
 :weight 0
)) (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (or (= $generated@@48 $generated@@49) (= ($generated@@30 $generated@@44 $generated@@45 ($generated@@36 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@49) ($generated@@30 $generated@@44 $generated@@45 $generated@@47 $generated@@49)))
 :weight 0
))) (= ($generated@@4 $generated@@31) 3)) (= ($generated@@4 $generated@@32) 4)) (= ($generated@@4 $generated@@33) 5)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ) (= ($generated@@4 ($generated@@34 $generated@@50 $generated@@51)) 6))) (forall (($generated@@52 T@T) ($generated@@53 T@T) ) (! (= ($generated@@37 ($generated@@34 $generated@@52 $generated@@53)) $generated@@52)
 :pattern ( ($generated@@34 $generated@@52 $generated@@53))
))) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (! (= ($generated@@38 ($generated@@34 $generated@@54 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@34 $generated@@54 $generated@@55))
))))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> ($generated@@29 $generated@@56 $generated@@57) (forall (($generated@@58 T@U) ) (!  (=> ($generated@@9 ($generated@@35 $generated@@5 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@56 $generated@@58) $generated@@1))) ($generated@@9 ($generated@@35 $generated@@5 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@57 $generated@@58) $generated@@1))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@57 $generated@@58) $generated@@1))
)))
 :pattern ( ($generated@@29 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@60 Int) ) (! (= ($generated@@59 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@63 $generated@@62))
)))
(assert (= ($generated@@4 $generated@@65) 7))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (and ($generated@@64 $generated@@65 $generated@@69 ($generated@@67 $generated@@71)) ($generated@@68 $generated@@70 $generated@@71)) ($generated@@64 $generated@@65 ($generated@@66 $generated@@69 $generated@@70) ($generated@@67 $generated@@71)))
 :pattern ( ($generated@@64 $generated@@65 ($generated@@66 $generated@@69 $generated@@70) ($generated@@67 $generated@@71)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 Int) ($generated@@76 T@U) ) (! (= ($generated@@9 ($generated@@30 $generated@@32 $generated@@5 ($generated@@72 $generated@@73 $generated@@74 $generated@@75) $generated@@76))  (and ($generated@@68 $generated@@76 $generated@@73) (and ($generated@@24 $generated@@74 $generated@@76) (< ($generated@@11 ($generated@@35 $generated@@6 $generated@@76)) $generated@@75))))
 :pattern ( ($generated@@30 $generated@@32 $generated@@5 ($generated@@72 $generated@@73 $generated@@74 $generated@@75) $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@77 $generated@@78 $generated@@79) (forall (($generated@@80 T@U) ) (!  (=> ($generated@@24 $generated@@78 $generated@@80) ($generated@@24 $generated@@79 $generated@@80))
 :pattern ( ($generated@@24 $generated@@78 $generated@@80))
 :pattern ( ($generated@@24 $generated@@79 $generated@@80))
)))
 :pattern ( ($generated@@77 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@35 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@35 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@24 ($generated@@84 $generated@@85) $generated@@86) ($generated@@9 ($generated@@30 $generated@@32 $generated@@5 $generated@@85 $generated@@86)))
 :pattern ( ($generated@@24 ($generated@@84 $generated@@85) $generated@@86))
)))
(assert (= ($generated@@4 $generated@@87) 8))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@64 $generated@@87 $generated@@89 ($generated@@88 $generated@@90)) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@24 $generated@@89 $generated@@91) ($generated@@68 $generated@@91 $generated@@90))
 :pattern ( ($generated@@24 $generated@@89 $generated@@91))
)))
 :pattern ( ($generated@@64 $generated@@87 $generated@@89 ($generated@@88 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@64 $generated@@6 $generated@@92 $generated@@21) (<= ($generated@@59 0) ($generated@@11 $generated@@92)))
 :pattern ( ($generated@@64 $generated@@6 $generated@@92 $generated@@21))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@27 ($generated@@66 $generated@@93 $generated@@94)) (+ 1 ($generated@@27 $generated@@93)))
 :pattern ( ($generated@@66 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@95 ($generated@@81 $generated@@99 $generated@@96) $generated@@97 $generated@@98) ($generated@@20 $generated@@99 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@95 ($generated@@81 $generated@@99 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@29 $generated@@100 $generated@@101) (=> ($generated@@95 $generated@@102 $generated@@103 $generated@@100) ($generated@@95 $generated@@102 $generated@@103 $generated@@101)))
 :pattern ( ($generated@@29 $generated@@100 $generated@@101) ($generated@@95 $generated@@102 $generated@@103 $generated@@100))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (!  (=> ($generated@@29 $generated@@104 $generated@@105) (=> ($generated@@20 $generated@@108 $generated@@106 $generated@@107 $generated@@104) ($generated@@20 $generated@@108 $generated@@106 $generated@@107 $generated@@105)))
 :pattern ( ($generated@@29 $generated@@104 $generated@@105) ($generated@@20 $generated@@108 $generated@@106 $generated@@107 $generated@@104))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@27 ($generated@@109 $generated@@110 $generated@@111)) (+ ($generated@@27 $generated@@110) ($generated@@27 $generated@@111)))
 :pattern ( ($generated@@27 ($generated@@109 $generated@@110 $generated@@111)))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@68 $generated@@112 $generated@@21) (and (= ($generated@@81 $generated@@6 ($generated@@35 $generated@@6 $generated@@112)) $generated@@112) ($generated@@64 $generated@@6 ($generated@@35 $generated@@6 $generated@@112) $generated@@21)))
 :pattern ( ($generated@@68 $generated@@112 $generated@@21))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 Int) ($generated@@116 T@U) ) (!  (and (=> (= $generated@@115 ($generated@@27 $generated@@114)) (= ($generated@@113 ($generated@@66 $generated@@114 $generated@@116) $generated@@115) $generated@@116)) (=> (or (not (= $generated@@115 ($generated@@27 $generated@@114))) (not true)) (= ($generated@@113 ($generated@@66 $generated@@114 $generated@@116) $generated@@115) ($generated@@113 $generated@@114 $generated@@115))))
 :pattern ( ($generated@@113 ($generated@@66 $generated@@114 $generated@@116) $generated@@115))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> ($generated@@117 $generated@@118 $generated@@119) (= $generated@@118 $generated@@119))
 :pattern ( ($generated@@117 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or (not (= $generated@@120 $generated@@122)) (not true)) (=> (and ($generated@@29 $generated@@120 $generated@@121) ($generated@@29 $generated@@121 $generated@@122)) ($generated@@29 $generated@@120 $generated@@122)))
 :pattern ( ($generated@@29 $generated@@120 $generated@@121) ($generated@@29 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@68 ($generated@@81 $generated@@125 $generated@@123) $generated@@124) ($generated@@64 $generated@@125 $generated@@123 $generated@@124))
 :pattern ( ($generated@@68 ($generated@@81 $generated@@125 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (<= 0 ($generated@@27 $generated@@126))
 :pattern ( ($generated@@27 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@20 $generated@@87 $generated@@127 ($generated@@88 $generated@@128) $generated@@129) (forall (($generated@@130 T@U) ) (!  (=> ($generated@@24 $generated@@127 $generated@@130) ($generated@@95 $generated@@130 $generated@@128 $generated@@129))
 :pattern ( ($generated@@24 $generated@@127 $generated@@130))
)))
 :pattern ( ($generated@@20 $generated@@87 $generated@@127 ($generated@@88 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@20 $generated@@65 $generated@@131 ($generated@@67 $generated@@132) $generated@@133) (forall (($generated@@134 Int) ) (!  (=> (and (<= 0 $generated@@134) (< $generated@@134 ($generated@@27 $generated@@131))) ($generated@@95 ($generated@@113 $generated@@131 $generated@@134) $generated@@132 $generated@@133))
 :pattern ( ($generated@@113 $generated@@131 $generated@@134))
)))
 :pattern ( ($generated@@20 $generated@@65 $generated@@131 ($generated@@67 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@135 ($generated@@88 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@88 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@137 ($generated@@88 $generated@@138)) $generated)
 :pattern ( ($generated@@88 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@67 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@67 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@137 ($generated@@67 $generated@@141)) $generated@@0)
 :pattern ( ($generated@@67 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@35 $generated@@143 ($generated@@81 $generated@@143 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@81 $generated@@143 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Int) ($generated@@148 T@U) ) (! (= ($generated@@9 ($generated@@30 $generated@@32 $generated@@5 ($generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148))  (and ($generated@@68 $generated@@148 $generated@@145) (and ($generated@@24 $generated@@146 $generated@@148) (< $generated@@147 ($generated@@11 ($generated@@35 $generated@@6 $generated@@148))))))
 :pattern ( ($generated@@30 $generated@@32 $generated@@5 ($generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148))
)))
(assert  (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@149 $generated@@152 $generated@@153 $generated@@154 ($generated@@151 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@157 $generated@@158) $generated@@155)
 :weight 0
)) (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@149 $generated@@159 $generated@@160 $generated@@161 ($generated@@151 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@149 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@149 $generated@@168 $generated@@169 $generated@@170 ($generated@@151 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@149 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Bool) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@9 ($generated@@149 $generated@@33 $generated@@31 $generated@@5 ($generated@@150 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@181 $generated@@182))  (=> (and (or (not (= $generated@@181 $generated@@177)) (not true)) ($generated@@9 ($generated@@35 $generated@@5 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@178 $generated@@181) $generated@@179)))) $generated@@180))
 :pattern ( ($generated@@149 $generated@@33 $generated@@31 $generated@@5 ($generated@@150 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (and (= ($generated@@183 ($generated@@66 $generated@@185 $generated@@186)) $generated@@185) (= ($generated@@184 ($generated@@66 $generated@@185 $generated@@186)) $generated@@186))
 :pattern ( ($generated@@66 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@68 $generated@@187 ($generated@@88 $generated@@188)) (and (= ($generated@@81 $generated@@87 ($generated@@35 $generated@@87 $generated@@187)) $generated@@187) ($generated@@64 $generated@@87 ($generated@@35 $generated@@87 $generated@@187) ($generated@@88 $generated@@188))))
 :pattern ( ($generated@@68 $generated@@187 ($generated@@88 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@68 $generated@@189 ($generated@@67 $generated@@190)) (and (= ($generated@@81 $generated@@65 ($generated@@35 $generated@@65 $generated@@189)) $generated@@189) ($generated@@64 $generated@@65 ($generated@@35 $generated@@65 $generated@@189) ($generated@@67 $generated@@190))))
 :pattern ( ($generated@@68 $generated@@189 ($generated@@67 $generated@@190)))
)))
(assert (= ($generated@@137 $generated@@21) $generated@@2))
(assert (= ($generated@@191 $generated@@21) $generated@@3))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@117 $generated@@192 $generated@@193) (forall (($generated@@194 T@U) ) (! (= ($generated@@24 $generated@@192 $generated@@194) ($generated@@24 $generated@@193 $generated@@194))
 :pattern ( ($generated@@24 $generated@@192 $generated@@194))
 :pattern ( ($generated@@24 $generated@@193 $generated@@194))
)))
 :pattern ( ($generated@@117 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Int) ) (!  (and (=> (< $generated@@197 ($generated@@27 $generated@@195)) (= ($generated@@113 ($generated@@109 $generated@@195 $generated@@196) $generated@@197) ($generated@@113 $generated@@195 $generated@@197))) (=> (<= ($generated@@27 $generated@@195) $generated@@197) (= ($generated@@113 ($generated@@109 $generated@@195 $generated@@196) $generated@@197) ($generated@@113 $generated@@196 (- $generated@@197 ($generated@@27 $generated@@195))))))
 :pattern ( ($generated@@113 ($generated@@109 $generated@@195 $generated@@196) $generated@@197))
)))
(assert (forall (($generated@@198 Int) ) (! (= ($generated@@81 $generated@@6 ($generated@@10 ($generated@@59 $generated@@198))) ($generated@@61 $generated@@32 ($generated@@81 $generated@@6 ($generated@@10 $generated@@198))))
 :pattern ( ($generated@@81 $generated@@6 ($generated@@10 ($generated@@59 $generated@@198))))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@T) ) (! (= ($generated@@81 $generated@@200 ($generated@@61 $generated@@200 $generated@@199)) ($generated@@61 $generated@@32 ($generated@@81 $generated@@200 $generated@@199)))
 :pattern ( ($generated@@81 $generated@@200 ($generated@@61 $generated@@200 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ) (!  (=> (= ($generated@@27 $generated@@201) 0) (= $generated@@201 $generated@@28))
 :pattern ( ($generated@@27 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@64 $generated@@65 $generated@@202 ($generated@@67 $generated@@203)) (forall (($generated@@204 Int) ) (!  (=> (and (<= 0 $generated@@204) (< $generated@@204 ($generated@@27 $generated@@202))) ($generated@@68 ($generated@@113 $generated@@202 $generated@@204) $generated@@203))
 :pattern ( ($generated@@113 $generated@@202 $generated@@204))
)))
 :pattern ( ($generated@@64 $generated@@65 $generated@@202 ($generated@@67 $generated@@203)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 (T@U) Bool)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@227  (=> (= $generated@@205 ($generated@@84 ($generated@@144 $generated@@21 $generated@@206 $generated@@207))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and ($generated@@77 $generated@@208 $generated@@206) (not ($generated@@77 $generated@@206 $generated@@208)))) (=> (and ($generated@@77 $generated@@208 $generated@@206) (not ($generated@@77 $generated@@206 $generated@@208))) (=> (and (and ($generated@@64 $generated@@65 $generated@@209 ($generated@@67 $generated@@21)) ($generated@@20 $generated@@65 $generated@@209 ($generated@@67 $generated@@21) $generated@@210)) (and ($generated@@211 $generated@@212) ($generated@@213 $generated@@212))) (=> (and (and (and ($generated@@64 $generated@@65 $generated@@214 ($generated@@67 $generated@@21)) ($generated@@20 $generated@@65 $generated@@214 ($generated@@67 $generated@@21) $generated@@212)) (forall (($generated@@228 T@U) ) (!  (=> (and (or (not (= $generated@@228 $generated@@215)) (not true)) ($generated@@9 ($generated@@35 $generated@@5 ($generated@@30 $generated@@31 $generated@@32 ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@210 $generated@@228) $generated@@1)))) (= ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@212 $generated@@228) ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@210 $generated@@228)))
 :pattern ( ($generated@@30 $generated@@33 ($generated@@34 $generated@@31 $generated@@32) $generated@@212 $generated@@228))
))) (and ($generated@@29 $generated@@210 $generated@@212) (= (ControlFlow 0 3) (- 0 2)))) (and ($generated@@77 $generated@@205 $generated@@206) (not ($generated@@77 $generated@@206 $generated@@205))))))))))
(let (($generated@@229  (=> (and (not (and ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 $generated@@216))) (< $generated@@207 $generated@@216))) (= (ControlFlow 0 7) 3)) $generated@@227)))
(let (($generated@@230  (=> (and (and ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 $generated@@216))) (< $generated@@207 $generated@@216)) (= (ControlFlow 0 6) 3)) $generated@@227)))
(let (($generated@@231  (=> (not ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 $generated@@216)))) (and (=> (= (ControlFlow 0 9) 6) $generated@@230) (=> (= (ControlFlow 0 9) 7) $generated@@229)))))
(let (($generated@@232  (=> ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 $generated@@216))) (and (=> (= (ControlFlow 0 8) 6) $generated@@230) (=> (= (ControlFlow 0 8) 7) $generated@@229)))))
(let (($generated@@233  (=> (<= ($generated@@59 0) $generated@@216) (and (=> (= (ControlFlow 0 10) 8) $generated@@232) (=> (= (ControlFlow 0 10) 9) $generated@@231)))))
(let (($generated@@234  (=> (and (< $generated@@216 ($generated@@59 0)) (= (ControlFlow 0 5) 3)) $generated@@227)))
(let (($generated@@235  (=> (= $generated@@208 ($generated@@84 ($generated@@72 $generated@@21 $generated@@206 $generated@@207))) (and (=> (= (ControlFlow 0 11) 10) $generated@@233) (=> (= (ControlFlow 0 11) 5) $generated@@234)))))
(let (($generated@@236  (=> (and (not (and ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 $generated@@217))) (< $generated@@217 $generated@@207))) (= (ControlFlow 0 14) 11)) $generated@@235)))
(let (($generated@@237  (=> (and (and ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 $generated@@217))) (< $generated@@217 $generated@@207)) (= (ControlFlow 0 13) 11)) $generated@@235)))
(let (($generated@@238  (=> (not ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 $generated@@217)))) (and (=> (= (ControlFlow 0 16) 13) $generated@@237) (=> (= (ControlFlow 0 16) 14) $generated@@236)))))
(let (($generated@@239  (=> ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 $generated@@217))) (and (=> (= (ControlFlow 0 15) 13) $generated@@237) (=> (= (ControlFlow 0 15) 14) $generated@@236)))))
(let (($generated@@240  (=> (<= ($generated@@59 0) $generated@@217) (and (=> (= (ControlFlow 0 17) 15) $generated@@239) (=> (= (ControlFlow 0 17) 16) $generated@@238)))))
(let (($generated@@241  (=> (and (< $generated@@217 ($generated@@59 0)) (= (ControlFlow 0 12) 11)) $generated@@235)))
(let (($generated@@242  (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (and ($generated@@64 $generated@@6 ($generated@@10 ($generated@@59 0)) $generated@@21) ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 ($generated@@59 0))))) (or (and ($generated@@64 $generated@@6 ($generated@@10 ($generated@@59 0)) $generated@@21) ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 ($generated@@59 0))))) (exists (($generated@@243 T@U) )  (and (<= ($generated@@59 0) ($generated@@11 $generated@@243)) ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 $generated@@243))))))) (=> (or (and ($generated@@64 $generated@@6 ($generated@@10 ($generated@@59 0)) $generated@@21) ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 ($generated@@59 0))))) (or (and ($generated@@64 $generated@@6 ($generated@@10 ($generated@@59 0)) $generated@@21) ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 ($generated@@59 0))))) (exists (($generated@@244 Int) )  (and (<= ($generated@@59 0) $generated@@244) ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 $generated@@244))))))) (=> (and (<= ($generated@@59 0) $generated@@207) ($generated@@24 $generated@@206 ($generated@@81 $generated@@6 ($generated@@10 $generated@@207)))) (and (=> (= (ControlFlow 0 18) 17) $generated@@240) (=> (= (ControlFlow 0 18) 12) $generated@@241)))))))
(let (($generated@@245  (=> (and (< $generated@@218 ($generated@@59 0)) (= (ControlFlow 0 21) 18)) $generated@@242)))
(let (($generated@@246  (=> (and (<= ($generated@@59 0) $generated@@218) (= (ControlFlow 0 20) 18)) $generated@@242)))
(let (($generated@@247  (=> (not ($generated@@117 $generated@@206 $generated@@25)) (and (=> (= (ControlFlow 0 22) 20) $generated@@246) (=> (= (ControlFlow 0 22) 21) $generated@@245)))))
(let (($generated@@248 true))
(let (($generated@@249  (=> (= $generated@@219 ($generated@@150 $generated@@215 $generated@@210 $generated@@1 false)) (and (=> (= (ControlFlow 0 23) 1) $generated@@248) (=> (= (ControlFlow 0 23) 22) $generated@@247)))))
(let (($generated@@250  (=> (and (and ($generated@@211 $generated@@210) ($generated@@213 $generated@@210)) (and ($generated@@64 $generated@@87 $generated@@206 ($generated@@88 $generated@@21)) ($generated@@20 $generated@@87 $generated@@206 ($generated@@88 $generated@@21) $generated@@210))) (=> (and (and (and ($generated@@64 $generated@@65 $generated@@220 ($generated@@67 $generated@@21)) ($generated@@20 $generated@@65 $generated@@220 ($generated@@67 $generated@@21) $generated@@210)) (and (<= ($generated@@59 0) $generated@@221) true)) (and (and ($generated@@64 $generated@@87 $generated@@222 ($generated@@88 $generated@@21)) ($generated@@20 $generated@@87 $generated@@222 ($generated@@88 $generated@@21) $generated@@210)) true)) (=> (and (and (and (and ($generated@@64 $generated@@87 $generated@@223 ($generated@@88 $generated@@21)) ($generated@@20 $generated@@87 $generated@@223 ($generated@@88 $generated@@21) $generated@@210)) true) (and (and ($generated@@64 $generated@@65 $generated@@224 ($generated@@67 $generated@@21)) ($generated@@20 $generated@@65 $generated@@224 ($generated@@67 $generated@@21) $generated@@210)) true)) (and (and (and ($generated@@64 $generated@@65 $generated@@225 ($generated@@67 $generated@@21)) ($generated@@20 $generated@@65 $generated@@225 ($generated@@67 $generated@@21) $generated@@210)) true) (and (= 0 $generated@@226) (= (ControlFlow 0 24) 23)))) $generated@@249)))))
$generated@@250))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
