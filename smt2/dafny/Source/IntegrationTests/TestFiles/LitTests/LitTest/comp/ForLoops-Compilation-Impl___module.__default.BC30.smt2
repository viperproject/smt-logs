(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@19 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (T@T T@T) T@T)
(declare-fun $generated@@24 (T@T T@U) T@U)
(declare-fun $generated@@25 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@26 (T@T) T@T)
(declare-fun $generated@@27 (T@T) T@T)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@64 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@66 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert  (and (and (and (and (and (and (and (forall (($generated@@28 T@T) ($generated@@29 T@T) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@19 $generated@@28 $generated@@29 ($generated@@25 $generated@@28 $generated@@29 $generated@@31 $generated@@32 $generated@@30) $generated@@32) $generated@@30)
 :weight 0
)) (forall (($generated@@33 T@T) ($generated@@34 T@T) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (or (= $generated@@37 $generated@@38) (= ($generated@@19 $generated@@33 $generated@@34 ($generated@@25 $generated@@33 $generated@@34 $generated@@36 $generated@@37 $generated@@35) $generated@@38) ($generated@@19 $generated@@33 $generated@@34 $generated@@36 $generated@@38)))
 :weight 0
))) (= ($generated@@2 $generated@@20) 3)) (= ($generated@@2 $generated@@21) 4)) (= ($generated@@2 $generated@@22) 5)) (forall (($generated@@39 T@T) ($generated@@40 T@T) ) (= ($generated@@2 ($generated@@23 $generated@@39 $generated@@40)) 6))) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (! (= ($generated@@26 ($generated@@23 $generated@@41 $generated@@42)) $generated@@41)
 :pattern ( ($generated@@23 $generated@@41 $generated@@42))
))) (forall (($generated@@43 T@T) ($generated@@44 T@T) ) (! (= ($generated@@27 ($generated@@23 $generated@@43 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@23 $generated@@43 $generated@@44))
))))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> ($generated@@18 $generated@@45 $generated@@46) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@45 $generated@@47) $generated))) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@46 $generated@@47) $generated))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@46 $generated@@47) $generated))
)))
 :pattern ( ($generated@@18 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@48 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@24 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@24 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@56 $generated@@4 $generated@@58 $generated@@57) (<= ($generated@@48 0) ($generated@@9 $generated@@58)))
 :pattern ( ($generated@@56 $generated@@4 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or (not (= $generated@@59 $generated@@61)) (not true)) (=> (and ($generated@@18 $generated@@59 $generated@@60) ($generated@@18 $generated@@60 $generated@@61)) ($generated@@18 $generated@@59 $generated@@61)))
 :pattern ( ($generated@@18 $generated@@59 $generated@@60) ($generated@@18 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@24 $generated@@63 ($generated@@53 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@53 $generated@@63 $generated@@62))
)))
(assert  (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@64 $generated@@67 $generated@@68 $generated@@69 ($generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@73 $generated@@70) $generated@@72 $generated@@73) $generated@@70)
 :weight 0
)) (and (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@79 $generated@@81) (= ($generated@@64 $generated@@74 $generated@@75 $generated@@76 ($generated@@66 $generated@@74 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@80 $generated@@77) $generated@@81 $generated@@82) ($generated@@64 $generated@@74 $generated@@75 $generated@@76 $generated@@78 $generated@@81 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (or (= $generated@@89 $generated@@91) (= ($generated@@64 $generated@@83 $generated@@84 $generated@@85 ($generated@@66 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@89 $generated@@86) $generated@@90 $generated@@91) ($generated@@64 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@90 $generated@@91)))
 :weight 0
)))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Bool) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@7 ($generated@@64 $generated@@22 $generated@@20 $generated@@3 ($generated@@65 $generated@@92 $generated@@93 $generated@@94 $generated@@95) $generated@@96 $generated@@97))  (=> (and (or (not (= $generated@@96 $generated@@92)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@93 $generated@@96) $generated@@94)))) $generated@@95))
 :pattern ( ($generated@@64 $generated@@22 $generated@@20 $generated@@3 ($generated@@65 $generated@@92 $generated@@93 $generated@@94 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (= ($generated@@98 $generated@@57) $generated@@0))
(assert (= ($generated@@99 $generated@@57) $generated@@1))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@53 $generated@@4 ($generated@@8 ($generated@@48 $generated@@100))) ($generated@@50 $generated@@21 ($generated@@53 $generated@@4 ($generated@@8 $generated@@100))))
 :pattern ( ($generated@@53 $generated@@4 ($generated@@8 ($generated@@48 $generated@@100))))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@53 $generated@@102 ($generated@@50 $generated@@102 $generated@@101)) ($generated@@50 $generated@@21 ($generated@@53 $generated@@102 $generated@@101)))
 :pattern ( ($generated@@53 $generated@@102 ($generated@@50 $generated@@102 $generated@@101)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@103 () Int)
(declare-fun $generated@@104 () Int)
(declare-fun $generated@@105 () Int)
(declare-fun $generated@@106 () Int)
(declare-fun $generated@@107 () Bool)
(declare-fun $generated@@108 () Int)
(declare-fun $generated@@109 () Int)
(declare-fun $generated@@110 () Int)
(declare-fun $generated@@111 () Int)
(declare-fun $generated@@112 () Bool)
(declare-fun $generated@@113 () Bool)
(declare-fun $generated@@114 () Bool)
(declare-fun $generated@@115 () Int)
(declare-fun $generated@@116 () Int)
(declare-fun $generated@@117 () Int)
(declare-fun $generated@@118 () Bool)
(declare-fun $generated@@119 () Int)
(declare-fun $generated@@120 () T@U)
(declare-fun $generated@@121 () T@U)
(declare-fun $generated@@122 () T@U)
(declare-fun $generated@@123 () Int)
(declare-fun $generated@@124 () Int)
(declare-fun $generated@@125 () Int)
(declare-fun $generated@@126 () Int)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 () Int)
(declare-fun $generated@@129 () Bool)
(declare-fun $generated@@130 () Int)
(declare-fun $generated@@131 () Int)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 66) (let (($generated@@137  (=> (or (not (= $generated@@103 ($generated@@48 5))) (not true)) (and (=> (= (ControlFlow 0 40) (- 0 41)) ($generated@@56 $generated@@4 ($generated@@8 (+ $generated@@104 1)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 (+ $generated@@104 1)) $generated@@57) (=> (= $generated@@105 (+ $generated@@104 1)) (=> (and (and (= $generated@@106 (+ $generated@@103 1)) (= (ControlFlow 0 40) (- 0 39))) $generated@@107) (<= $generated@@106 ($generated@@48 5)))))))))
(let (($generated@@138  (=> (and (= $generated@@103 $generated@@108) (= (ControlFlow 0 37) (- 0 36))) false)))
(let (($generated@@139 true))
(let (($generated@@140 true))
(let (($generated@@141  (=> (and (or (not (= $generated@@109 ($generated@@48 5))) (not true)) (= (ControlFlow 0 20) (- 0 19))) ($generated@@56 $generated@@4 ($generated@@8 (+ $generated@@110 1)) $generated@@57))))
(let (($generated@@142 true))
(let (($generated@@143  (=> (or (not (= $generated@@109 $generated@@111)) (not true)) (and (=> (= (ControlFlow 0 21) 18) $generated@@142) (=> (= (ControlFlow 0 21) 20) $generated@@141)))))
(let (($generated@@144 true))
(let (($generated@@145  (=> $generated@@112 (and (=> (= (ControlFlow 0 22) 17) $generated@@144) (=> (= (ControlFlow 0 22) 21) $generated@@143)))))
(let (($generated@@146 true))
(let (($generated@@147  (and (=> (= (ControlFlow 0 23) 16) $generated@@146) (=> (= (ControlFlow 0 23) 22) $generated@@145))))
(let (($generated@@148 true))
(let (($generated@@149  (=> (<= ($generated@@48 0) $generated@@110) (=> (and (and (and (and (and (and (and (and (and (and (and (<= 0 $generated@@110) (not false)) $generated@@113) $generated@@114) (<= 0 $generated@@115)) (= $generated@@116 0)) (= $generated@@117 100)) $generated@@118) (<= 0 $generated@@109)) (= $generated@@119 0)) (= $generated@@111 10)) (and (and (and (<= $generated@@119 $generated@@109) (<= $generated@@109 $generated@@111)) (forall (($generated@@150 T@U) ) (!  (=> (and (or (not (= $generated@@150 $generated@@121)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@150) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@150) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@150)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@150))
))) (and ($generated@@18 $generated@@120 $generated@@120) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (or (not (= $generated@@151 $generated@@121)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@151) $generated)))) (or (= ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@151) $generated@@152) ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@151) $generated@@152)) ($generated@@7 ($generated@@64 $generated@@22 $generated@@20 $generated@@3 $generated@@122 $generated@@151 $generated@@152))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@151) $generated@@152))
))))) (and (=> (= (ControlFlow 0 24) 15) $generated@@148) (=> (= (ControlFlow 0 24) 23) $generated@@147))))))
(let (($generated@@153  (=> (or (not (= $generated@@115 $generated@@117)) (not true)) (=> (and (= $generated@@119 ($generated@@48 0)) (= $generated@@111 ($generated@@48 10))) (and (=> (= (ControlFlow 0 25) (- 0 26)) (<= $generated@@119 $generated@@111)) (=> (<= $generated@@119 $generated@@111) (=> (= (ControlFlow 0 25) 24) $generated@@149)))))))
(let (($generated@@154 true))
(let (($generated@@155  (=> $generated@@118 (and (=> (= (ControlFlow 0 27) 14) $generated@@154) (=> (= (ControlFlow 0 27) 25) $generated@@153)))))
(let (($generated@@156 true))
(let (($generated@@157  (and (=> (= (ControlFlow 0 28) 13) $generated@@156) (=> (= (ControlFlow 0 28) 27) $generated@@155))))
(let (($generated@@158 true))
(let (($generated@@159  (=> (<= ($generated@@48 0) $generated@@123) (=> (and (and (and (and (and (and (and (<= 0 $generated@@123) (not false)) $generated@@113) $generated@@114) (<= 0 $generated@@115)) (= $generated@@116 0)) (= $generated@@117 100)) (and (and (and (<= $generated@@116 $generated@@115) (<= $generated@@115 $generated@@117)) (forall (($generated@@160 T@U) ) (!  (=> (and (or (not (= $generated@@160 $generated@@121)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@160) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@160) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@160)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@160))
))) (and ($generated@@18 $generated@@120 $generated@@120) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (or (not (= $generated@@161 $generated@@121)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@161) $generated)))) (or (= ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@161) $generated@@162) ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@161) $generated@@162)) ($generated@@7 ($generated@@64 $generated@@22 $generated@@20 $generated@@3 $generated@@122 $generated@@161 $generated@@162))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@161) $generated@@162))
))))) (and (=> (= (ControlFlow 0 29) 12) $generated@@158) (=> (= (ControlFlow 0 29) 28) $generated@@157))))))
(let (($generated@@163  (=> (and (= $generated@@116 ($generated@@48 0)) (= $generated@@117 ($generated@@48 100))) (and (=> (= (ControlFlow 0 30) (- 0 31)) (<= $generated@@116 $generated@@117)) (=> (<= $generated@@116 $generated@@117) (=> (= (ControlFlow 0 30) 29) $generated@@159))))))
(let (($generated@@164  (=> (and (= $generated@@103 ($generated@@48 5)) (= (ControlFlow 0 38) 30)) $generated@@163)))
(let (($generated@@165  (=> (or (not (= $generated@@103 $generated@@108)) (not true)) (and (=> (= (ControlFlow 0 42) 38) $generated@@164) (=> (= (ControlFlow 0 42) 40) $generated@@137)))))
(let (($generated@@166  (=> $generated@@107 (and (=> (= (ControlFlow 0 43) 37) $generated@@138) (=> (= (ControlFlow 0 43) 42) $generated@@165)))))
(let (($generated@@167  (and (=> (= (ControlFlow 0 44) 35) $generated@@139) (=> (= (ControlFlow 0 44) 43) $generated@@166))))
(let (($generated@@168  (=> (<= ($generated@@48 0) $generated@@104) (=> (and (and (and (and (and (and (and (and (<= 0 $generated@@104) (not false)) $generated@@113) $generated@@114) (<= 0 $generated@@103)) (= $generated@@124 0)) (= $generated@@108 10)) (and (<= $generated@@124 $generated@@103) (<= $generated@@103 $generated@@108))) (and (and (=> $generated@@107 (<= $generated@@103 ($generated@@48 5))) (forall (($generated@@169 T@U) ) (!  (=> (and (or (not (= $generated@@169 $generated@@121)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@169) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@169) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@169)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@169))
))) (and ($generated@@18 $generated@@120 $generated@@120) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (or (not (= $generated@@170 $generated@@121)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@170) $generated)))) (or (= ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@170) $generated@@171) ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@170) $generated@@171)) ($generated@@7 ($generated@@64 $generated@@22 $generated@@20 $generated@@3 $generated@@122 $generated@@170 $generated@@171))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@170) $generated@@171))
))))) (and (=> (= (ControlFlow 0 45) 34) $generated@@140) (=> (= (ControlFlow 0 45) 44) $generated@@167))))))
(let (($generated@@172  (=> (and (= $generated@@124 ($generated@@48 0)) (= $generated@@108 ($generated@@48 10))) (and (=> (= (ControlFlow 0 46) (- 0 48)) (<= $generated@@124 $generated@@108)) (=> (<= $generated@@124 $generated@@108) (and (=> (= (ControlFlow 0 46) (- 0 47)) (=> $generated@@107 (<= $generated@@124 ($generated@@48 5)))) (=> (=> $generated@@107 (<= $generated@@124 ($generated@@48 5))) (=> (= (ControlFlow 0 46) 45) $generated@@168))))))))
(let (($generated@@173  (=> (and (not ($generated@@7 ($generated@@50 $generated@@3 ($generated@@6 true)))) (= (ControlFlow 0 33) 30)) $generated@@163)))
(let (($generated@@174  (=> ($generated@@7 ($generated@@50 $generated@@3 ($generated@@6 true))) (and (=> (= (ControlFlow 0 49) 46) $generated@@172) (=> (= (ControlFlow 0 49) 33) $generated@@173)))))
(let (($generated@@175  (=> (and (not ($generated@@7 ($generated@@50 $generated@@3 ($generated@@6 true)))) (= (ControlFlow 0 32) 30)) $generated@@163)))
(let (($generated@@176  (=> $generated@@114 (and (=> (= (ControlFlow 0 50) 32) $generated@@175) (=> (= (ControlFlow 0 50) 49) $generated@@174)))))
(let (($generated@@177 true))
(let (($generated@@178  (and (=> (= (ControlFlow 0 51) 11) $generated@@177) (=> (= (ControlFlow 0 51) 50) $generated@@176))))
(let (($generated@@179 true))
(let (($generated@@180  (=> (forall (($generated@@181 T@U) ) (!  (=> (and (or (not (= $generated@@181 $generated@@121)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@181) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@181) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@181)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@181))
)) (=> (and ($generated@@18 $generated@@120 $generated@@120) (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (or (not (= $generated@@182 $generated@@121)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@182) $generated)))) (or (= ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@182) $generated@@183) ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@182) $generated@@183)) ($generated@@7 ($generated@@64 $generated@@22 $generated@@20 $generated@@3 $generated@@122 $generated@@182 $generated@@183))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@182) $generated@@183))
))) (and (=> (= (ControlFlow 0 52) 10) $generated@@179) (=> (= (ControlFlow 0 52) 51) $generated@@178))))))
(let (($generated@@184  (=> (and (= $generated@@125 ($generated@@48 5)) (= (ControlFlow 0 54) 52)) $generated@@180)))
(let (($generated@@185  (=> (and (not ($generated@@7 ($generated@@50 $generated@@3 ($generated@@6 true)))) (= (ControlFlow 0 53) 52)) $generated@@180)))
(let (($generated@@186  (=> (or (not (= $generated@@125 ($generated@@48 5))) (not true)) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@56 $generated@@4 ($generated@@8 (+ $generated@@126 1)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 (+ $generated@@126 1)) $generated@@57) (=> (= $generated@@127 (+ $generated@@126 1)) (=> (and (and (= $generated@@128 (+ $generated@@125 1)) (= (ControlFlow 0 8) (- 0 7))) $generated@@129) (<= $generated@@128 ($generated@@48 5)))))))))
(let (($generated@@187  (=> (or (not (= $generated@@125 $generated@@130)) (not true)) (and (=> (= (ControlFlow 0 55) 54) $generated@@184) (=> (= (ControlFlow 0 55) 8) $generated@@186)))))
(let (($generated@@188  (=> (and (= $generated@@125 $generated@@130) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@189  (=> $generated@@129 (and (=> (= (ControlFlow 0 56) 6) $generated@@188) (=> (= (ControlFlow 0 56) 55) $generated@@187)))))
(let (($generated@@190 true))
(let (($generated@@191  (and (=> (= (ControlFlow 0 57) 4) $generated@@190) (=> (= (ControlFlow 0 57) 56) $generated@@189))))
(let (($generated@@192 true))
(let (($generated@@193  (=> (<= ($generated@@48 0) $generated@@126) (=> (and (and (and (and (and (and (and (<= 0 $generated@@126) (not false)) $generated@@113) (<= 0 $generated@@125)) (= $generated@@131 0)) (= $generated@@130 10)) (and (<= $generated@@131 $generated@@125) (<= $generated@@125 $generated@@130))) (and (and (=> $generated@@129 (<= $generated@@125 ($generated@@48 5))) (forall (($generated@@194 T@U) ) (!  (=> (and (or (not (= $generated@@194 $generated@@121)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@194) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@194) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@194)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@194))
))) (and ($generated@@18 $generated@@120 $generated@@120) (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (or (not (= $generated@@195 $generated@@121)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@195) $generated)))) (or (= ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@195) $generated@@196) ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@195) $generated@@196)) ($generated@@7 ($generated@@64 $generated@@22 $generated@@20 $generated@@3 $generated@@122 $generated@@195 $generated@@196))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@195) $generated@@196))
))))) (and (=> (= (ControlFlow 0 58) 3) $generated@@192) (=> (= (ControlFlow 0 58) 57) $generated@@191))))))
(let (($generated@@197  (=> ($generated@@7 ($generated@@50 $generated@@3 ($generated@@6 true))) (=> (and (= $generated@@131 ($generated@@48 0)) (= $generated@@130 ($generated@@48 10))) (and (=> (= (ControlFlow 0 59) (- 0 61)) (<= $generated@@131 $generated@@130)) (=> (<= $generated@@131 $generated@@130) (and (=> (= (ControlFlow 0 59) (- 0 60)) (=> $generated@@129 (<= $generated@@131 ($generated@@48 5)))) (=> (=> $generated@@129 (<= $generated@@131 ($generated@@48 5))) (=> (= (ControlFlow 0 59) 58) $generated@@193)))))))))
(let (($generated@@198  (=> $generated@@113 (and (=> (= (ControlFlow 0 62) 53) $generated@@185) (=> (= (ControlFlow 0 62) 59) $generated@@197)))))
(let (($generated@@199 true))
(let (($generated@@200  (and (=> (= (ControlFlow 0 63) 2) $generated@@199) (=> (= (ControlFlow 0 63) 62) $generated@@198))))
(let (($generated@@201 true))
(let (($generated@@202  (=> (= $generated@@122 ($generated@@65 $generated@@121 $generated@@120 $generated false)) (and (=> (= (ControlFlow 0 64) (- 0 65)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 0)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 0)) $generated@@57) (=> (and (and (= $generated@@132 ($generated@@48 0)) (forall (($generated@@203 T@U) ) (!  (=> (and (or (not (= $generated@@203 $generated@@121)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@203) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@203) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@203)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@203))
))) (and ($generated@@18 $generated@@120 $generated@@120) (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (or (not (= $generated@@204 $generated@@121)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@204) $generated)))) (or (= ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@204) $generated@@205) ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@204) $generated@@205)) ($generated@@7 ($generated@@64 $generated@@22 $generated@@20 $generated@@3 $generated@@122 $generated@@204 $generated@@205))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@120 $generated@@204) $generated@@205))
)))) (and (=> (= (ControlFlow 0 64) 1) $generated@@201) (=> (= (ControlFlow 0 64) 63) $generated@@200))))))))
(let (($generated@@206  (=> (and (and (and ($generated@@133 $generated@@120) ($generated@@134 $generated@@120)) (<= ($generated@@48 0) $generated@@135)) (and (= 0 $generated@@136) (= (ControlFlow 0 66) 64))) $generated@@202)))
$generated@@206)))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
