(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@T T@T) T@T)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@28 (T@T) T@T)
(declare-fun $generated@@29 (T@T) T@T)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@60 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 () T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 () T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (and (and (and (and (and (and (and (forall (($generated@@30 T@T) ($generated@@31 T@T) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@21 $generated@@30 $generated@@31 ($generated@@27 $generated@@30 $generated@@31 $generated@@33 $generated@@34 $generated@@32) $generated@@34) $generated@@32)
 :weight 0
)) (forall (($generated@@35 T@T) ($generated@@36 T@T) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (or (= $generated@@39 $generated@@40) (= ($generated@@21 $generated@@35 $generated@@36 ($generated@@27 $generated@@35 $generated@@36 $generated@@38 $generated@@39 $generated@@37) $generated@@40) ($generated@@21 $generated@@35 $generated@@36 $generated@@38 $generated@@40)))
 :weight 0
))) (= ($generated@@4 $generated@@22) 3)) (= ($generated@@4 $generated@@23) 4)) (= ($generated@@4 $generated@@24) 5)) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (= ($generated@@4 ($generated@@25 $generated@@41 $generated@@42)) 6))) (forall (($generated@@43 T@T) ($generated@@44 T@T) ) (! (= ($generated@@28 ($generated@@25 $generated@@43 $generated@@44)) $generated@@43)
 :pattern ( ($generated@@25 $generated@@43 $generated@@44))
))) (forall (($generated@@45 T@T) ($generated@@46 T@T) ) (! (= ($generated@@29 ($generated@@25 $generated@@45 $generated@@46)) $generated@@46)
 :pattern ( ($generated@@25 $generated@@45 $generated@@46))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> ($generated@@20 $generated@@47 $generated@@48) (forall (($generated@@49 T@U) ) (!  (=> ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@47 $generated@@49) $generated))) ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@48 $generated@@49) $generated))))
 :pattern ( ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@48 $generated@@49) $generated))
)))
 :pattern ( ($generated@@20 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 ($generated@@26 $generated@@52 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@26 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (or (not (= $generated@@53 $generated@@55)) (not true)) (=> (and ($generated@@20 $generated@@53 $generated@@54) ($generated@@20 $generated@@54 $generated@@55)) ($generated@@20 $generated@@53 $generated@@55)))
 :pattern ( ($generated@@20 $generated@@53 $generated@@54) ($generated@@20 $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@26 $generated@@57 ($generated@@50 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@50 $generated@@57 $generated@@56))
)))
(assert  (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@58 $generated@@61 $generated@@62 $generated@@63 ($generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@67 $generated@@64) $generated@@66 $generated@@67) $generated@@64)
 :weight 0
)) (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@73 $generated@@75) (= ($generated@@58 $generated@@68 $generated@@69 $generated@@70 ($generated@@60 $generated@@68 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@74 $generated@@71) $generated@@75 $generated@@76) ($generated@@58 $generated@@68 $generated@@69 $generated@@70 $generated@@72 $generated@@75 $generated@@76)))
 :weight 0
)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (or (= $generated@@83 $generated@@85) (= ($generated@@58 $generated@@77 $generated@@78 $generated@@79 ($generated@@60 $generated@@77 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@83 $generated@@80) $generated@@84 $generated@@85) ($generated@@58 $generated@@77 $generated@@78 $generated@@79 $generated@@81 $generated@@84 $generated@@85)))
 :weight 0
)))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Bool) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@9 ($generated@@58 $generated@@24 $generated@@22 $generated@@5 ($generated@@59 $generated@@86 $generated@@87 $generated@@88 $generated@@89) $generated@@90 $generated@@91))  (=> (and (or (not (= $generated@@90 $generated@@86)) (not true)) ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@87 $generated@@90) $generated@@88)))) $generated@@89))
 :pattern ( ($generated@@58 $generated@@24 $generated@@22 $generated@@5 ($generated@@59 $generated@@86 $generated@@87 $generated@@88 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (= ($generated@@92 $generated@@93) $generated@@0))
(assert (= ($generated@@94 $generated@@93) $generated@@2))
(assert (= ($generated@@92 $generated@@95) $generated@@1))
(assert (= ($generated@@94 $generated@@95) $generated@@3))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@96 () T@U)
(declare-fun $generated@@97 () T@U)
(declare-fun $generated@@98 () T@U)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@100 () T@U)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@102 () Int)
(declare-fun $generated@@103 () T@U)
(declare-fun $generated@@104 () T@U)
(declare-fun $generated@@105 () T@U)
(declare-fun $generated@@106 () T@U)
(declare-fun $generated@@107 () T@U)
(declare-fun $generated@@108 () T@U)
(declare-fun $generated@@109 () T@U)
(declare-fun $generated@@110 () T@U)
(declare-fun $generated@@111 () T@U)
(declare-fun $generated@@112 () T@U)
(declare-fun $generated@@113 () T@U)
(declare-fun $generated@@114 () T@U)
(declare-fun $generated@@115 () T@U)
(declare-fun $generated@@116 () T@U)
(declare-fun $generated@@117 () T@U)
(declare-fun $generated@@118 () T@U)
(declare-fun $generated@@119 () T@U)
(declare-fun $generated@@120 () T@U)
(declare-fun $generated@@121 () T@U)
(declare-fun $generated@@122 () T@U)
(declare-fun $generated@@123 () T@U)
(declare-fun $generated@@124 () T@U)
(declare-fun $generated@@125 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@126  (=> (= $generated@@96 ($generated@@59 $generated@@97 $generated@@98 $generated false)) (=> (and (and ($generated@@99 $generated@@100) ($generated@@101 $generated@@100)) (and (forall (($generated@@127 T@U) ) (!  (=> (and (or (not (= $generated@@127 $generated@@97)) (not true)) ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@98 $generated@@127) $generated)))) (= ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@100 $generated@@127) ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@98 $generated@@127)))
 :pattern ( ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@100 $generated@@127))
)) ($generated@@20 $generated@@98 $generated@@100))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (not (= 1 $generated@@102)) (not true))) (=> (or (not (= 1 $generated@@102)) (not true)) (=> (and (= $generated@@103 $generated@@104) (= $generated@@105 $generated@@93)) (=> (and (and ($generated@@99 $generated@@106) ($generated@@101 $generated@@106)) (and (forall (($generated@@128 T@U) ) (!  (=> (and (or (not (= $generated@@128 $generated@@97)) (not true)) ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@100 $generated@@128) $generated)))) (= ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@106 $generated@@128) ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@100 $generated@@128)))
 :pattern ( ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@106 $generated@@128))
)) ($generated@@20 $generated@@100 $generated@@106))) (=> (and (and (and ($generated@@99 $generated@@107) ($generated@@101 $generated@@107)) (and (forall (($generated@@129 T@U) ) (!  (=> (and (or (not (= $generated@@129 $generated@@97)) (not true)) ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@106 $generated@@129) $generated)))) (= ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@107 $generated@@129) ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@106 $generated@@129)))
 :pattern ( ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@107 $generated@@129))
)) ($generated@@20 $generated@@106 $generated@@107))) (and (and ($generated@@99 $generated@@108) ($generated@@101 $generated@@108)) (and (forall (($generated@@130 T@U) ) (!  (=> (and (or (not (= $generated@@130 $generated@@97)) (not true)) ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@107 $generated@@130) $generated)))) (= ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@108 $generated@@130) ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@107 $generated@@130)))
 :pattern ( ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@108 $generated@@130))
)) ($generated@@20 $generated@@107 $generated@@108)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= 1 $generated@@102)) (not true))) (=> (or (not (= 1 $generated@@102)) (not true)) (=> (and (= $generated@@109 $generated@@110) (= $generated@@111 $generated@@95)) (=> (and (and (and ($generated@@99 $generated@@112) ($generated@@101 $generated@@112)) (and (forall (($generated@@131 T@U) ) (!  (=> (and (or (not (= $generated@@131 $generated@@97)) (not true)) ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@108 $generated@@131) $generated)))) (= ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@112 $generated@@131) ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@108 $generated@@131)))
 :pattern ( ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@112 $generated@@131))
)) ($generated@@20 $generated@@108 $generated@@112))) (and (and ($generated@@99 $generated@@113) ($generated@@101 $generated@@113)) (and (forall (($generated@@132 T@U) ) (!  (=> (and (or (not (= $generated@@132 $generated@@97)) (not true)) ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@112 $generated@@132) $generated)))) (= ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@113 $generated@@132) ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@112 $generated@@132)))
 :pattern ( ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@113 $generated@@132))
)) ($generated@@20 $generated@@112 $generated@@113)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= 0 $generated@@102)) (not true))) (=> (or (not (= 0 $generated@@102)) (not true)) (=> (= $generated@@114 $generated@@115) (=> (and (and (and ($generated@@99 $generated@@116) ($generated@@101 $generated@@116)) (and (forall (($generated@@133 T@U) ) (!  (=> (and (or (not (= $generated@@133 $generated@@97)) (not true)) ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@113 $generated@@133) $generated)))) (= ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@116 $generated@@133) ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@113 $generated@@133)))
 :pattern ( ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@116 $generated@@133))
)) ($generated@@20 $generated@@113 $generated@@116))) (and (and ($generated@@99 $generated@@117) ($generated@@101 $generated@@117)) (and (forall (($generated@@134 T@U) ) (!  (=> (and (or (not (= $generated@@134 $generated@@97)) (not true)) ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@116 $generated@@134) $generated)))) (= ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@117 $generated@@134) ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@116 $generated@@134)))
 :pattern ( ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@117 $generated@@134))
)) ($generated@@20 $generated@@116 $generated@@117)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= 1 $generated@@102)) (not true))) (=> (or (not (= 1 $generated@@102)) (not true)) (=> (and (= $generated@@118 $generated@@119) (= $generated@@120 $generated@@93)) (=> (and (and ($generated@@99 $generated@@121) ($generated@@101 $generated@@121)) (and (forall (($generated@@135 T@U) ) (!  (=> (and (or (not (= $generated@@135 $generated@@97)) (not true)) ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@117 $generated@@135) $generated)))) (= ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@121 $generated@@135) ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@117 $generated@@135)))
 :pattern ( ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@121 $generated@@135))
)) ($generated@@20 $generated@@117 $generated@@121))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= 1 $generated@@102)) (not true))) (=> (or (not (= 1 $generated@@102)) (not true)) (=> (and (= $generated@@122 $generated@@123) (= $generated@@124 $generated@@95)) (=> (and (and (and ($generated@@99 $generated@@125) ($generated@@101 $generated@@125)) (forall (($generated@@136 T@U) ) (!  (=> (and (or (not (= $generated@@136 $generated@@97)) (not true)) ($generated@@9 ($generated@@26 $generated@@5 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@121 $generated@@136) $generated)))) (= ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@125 $generated@@136) ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@121 $generated@@136)))
 :pattern ( ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@125 $generated@@136))
))) (and ($generated@@20 $generated@@121 $generated@@125) (= (ControlFlow 0 2) (- 0 1)))) (or (not (= 0 $generated@@102)) (not true)))))))))))))))))))))))))))
(let (($generated@@137  (=> (and (and ($generated@@99 $generated@@98) ($generated@@101 $generated@@98)) (and (= 3 $generated@@102) (= (ControlFlow 0 8) 2))) $generated@@126)))
$generated@@137)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
