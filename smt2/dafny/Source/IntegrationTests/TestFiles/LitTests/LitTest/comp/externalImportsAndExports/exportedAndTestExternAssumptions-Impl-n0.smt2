(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U T@U Int) Int)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@80 () Int)
(declare-fun $generated@@81 (Int Int) Bool)
(declare-fun $generated@@82 (Int) Int)
(declare-fun $generated@@83 (Int Int) Bool)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U T@U Int) Bool)
(declare-fun $generated@@99 (T@U T@U T@U) Bool)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert (= ($generated@@8 $generated@@28) 3))
(assert (forall (($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 $generated@@29)  (or (= $generated@@32 $generated@@30) (= ($generated@@31 $generated@@32) $generated@@29)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 $generated@@29))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@35 $generated@@34 $generated@@36) ($generated@@33 $generated@@28 $generated@@35 $generated@@29 $generated@@36))
 :pattern ( ($generated@@33 $generated@@28 $generated@@35 $generated@@34 $generated@@36))
 :pattern ( ($generated@@33 $generated@@28 $generated@@35 $generated@@29 $generated@@36))
)))
(assert (= ($generated@@24 $generated@@37) 0))
(assert (= ($generated@@38 $generated@@5 $generated@@7) $generated@@37))
(assert  (not ($generated@@39 $generated@@37)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@8 $generated@@45) 4)) (= ($generated@@8 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@8 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 Int) ) (!  (=> (and (and (and ($generated@@43 $generated@@68) ($generated@@43 $generated@@69)) (and (or (not (= $generated@@70 $generated@@30)) (not true)) ($generated@@27 $generated@@28 $generated@@70 $generated@@34))) (and ($generated@@40 $generated@@68) ($generated@@41 $generated@@68 $generated@@69))) (=> (forall (($generated@@72 T@U) ($generated@@73 T@U) )  (=> (and (or (not (= $generated@@72 $generated@@30)) (not true)) (= $generated@@72 $generated@@70)) (= ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@68 $generated@@72) $generated@@73) ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@72) $generated@@73)))) (= ($generated@@42 $generated@@68 $generated@@70 $generated@@71) ($generated@@42 $generated@@69 $generated@@70 $generated@@71))))
 :pattern ( ($generated@@40 $generated@@68) ($generated@@41 $generated@@68 $generated@@69) ($generated@@42 $generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@75 $generated@@29 $generated@@76)  (or (= $generated@@75 $generated@@30) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@76 $generated@@75) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@28 $generated@@75 $generated@@29 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@41 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@13 ($generated@@74 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@77 $generated@@79) $generated@@1))) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@78 $generated@@79) $generated@@1))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@78 $generated@@79) $generated@@1))
)))
 :pattern ( ($generated@@41 $generated@@77 $generated@@78))
)))
(assert  (=> (<= 0 $generated@@80) (forall (($generated@@85 Int) ($generated@@86 Int) ) (!  (=> (or ($generated@@83 ($generated@@82 $generated@@85) ($generated@@82 $generated@@86)) (< 0 $generated@@80)) (= ($generated@@81 ($generated@@82 $generated@@85) ($generated@@82 $generated@@86)) ($generated@@13 ($generated@@84 $generated@@9 ($generated@@12 (> $generated@@85 $generated@@86))))))
 :weight 3
 :pattern ( ($generated@@81 ($generated@@82 $generated@@85) ($generated@@82 $generated@@86)))
))))
(assert (forall (($generated@@87 Int) ) (! (= ($generated@@82 $generated@@87) $generated@@87)
 :pattern ( ($generated@@82 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@84 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@84 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@74 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@74 $generated@@92 $generated@@91))
)))
(assert  (=> (<= 0 $generated@@80) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 Int) ) (!  (=> (or ($generated@@93 $generated@@94 $generated@@95 $generated@@96) (and (< 0 $generated@@80) (and ($generated@@43 $generated@@94) (and (or (not (= $generated@@95 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@95 $generated@@34) ($generated@@33 $generated@@28 $generated@@95 $generated@@34 $generated@@94)))))) (= ($generated@@42 $generated@@94 $generated@@95 $generated@@96) (+ $generated@@96 ($generated@@15 ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@94 $generated@@95) $generated@@37))))))
 :pattern ( ($generated@@42 $generated@@94 $generated@@95 $generated@@96) ($generated@@43 $generated@@94))
))))
(assert ($generated@@39 $generated@@1))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and (and ($generated@@43 $generated@@97) (and (or (not (= $generated@@98 $generated@@30)) (not true)) (= ($generated@@31 $generated@@98) $generated@@29))) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@97 $generated@@98) $generated@@1)))) ($generated@@33 $generated@@10 ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@97 $generated@@98) $generated@@37)) $generated $generated@@97))
 :pattern ( ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@97 $generated@@98) $generated@@37)))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@99 ($generated@@90 $generated@@103 $generated@@100) $generated@@101 $generated@@102) ($generated@@33 $generated@@103 $generated@@100 $generated@@101 $generated@@102))
 :pattern ( ($generated@@99 ($generated@@90 $generated@@103 $generated@@100) $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@41 $generated@@104 $generated@@105) (=> ($generated@@99 $generated@@106 $generated@@107 $generated@@104) ($generated@@99 $generated@@106 $generated@@107 $generated@@105)))
 :pattern ( ($generated@@41 $generated@@104 $generated@@105) ($generated@@99 $generated@@106 $generated@@107 $generated@@104))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (!  (=> ($generated@@41 $generated@@108 $generated@@109) (=> ($generated@@33 $generated@@112 $generated@@110 $generated@@111 $generated@@108) ($generated@@33 $generated@@112 $generated@@110 $generated@@111 $generated@@109)))
 :pattern ( ($generated@@41 $generated@@108 $generated@@109) ($generated@@33 $generated@@112 $generated@@110 $generated@@111 $generated@@108))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@113 $generated@@34)  (and ($generated@@27 $generated@@28 $generated@@113 $generated@@29) (or (not (= $generated@@113 $generated@@30)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@113 $generated@@34))
 :pattern ( ($generated@@27 $generated@@28 $generated@@113 $generated@@29))
)))
(assert  (=> (<= 0 $generated@@80) (forall (($generated@@114 Int) ($generated@@115 Int) ) (!  (=> (or ($generated@@83 $generated@@114 $generated@@115) (< 0 $generated@@80)) (= ($generated@@81 $generated@@114 $generated@@115) (> $generated@@114 $generated@@115)))
 :pattern ( ($generated@@81 $generated@@114 $generated@@115))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or (not (= $generated@@116 $generated@@118)) (not true)) (=> (and ($generated@@41 $generated@@116 $generated@@117) ($generated@@41 $generated@@117 $generated@@118)) ($generated@@41 $generated@@116 $generated@@118)))
 :pattern ( ($generated@@41 $generated@@116 $generated@@117) ($generated@@41 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (and (= ($generated@@119 ($generated@@38 $generated@@120 $generated@@121)) $generated@@120) (= ($generated@@26 ($generated@@38 $generated@@120 $generated@@121)) $generated@@121))
 :pattern ( ($generated@@38 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@74 $generated@@123 ($generated@@90 $generated@@123 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@90 $generated@@123 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (and ($generated@@43 $generated@@124) (and (or (not (= $generated@@125 $generated@@30)) (not true)) (= ($generated@@31 $generated@@125) $generated@@29))) ($generated@@27 $generated@@10 ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@124 $generated@@125) $generated@@37)) $generated))
 :pattern ( ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@124 $generated@@125) $generated@@37)))
)))
(assert  (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@126 $generated@@129 $generated@@130 $generated@@131 ($generated@@128 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@126 $generated@@136 $generated@@137 $generated@@138 ($generated@@128 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@126 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@126 $generated@@145 $generated@@146 $generated@@147 ($generated@@128 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@126 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Bool) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@13 ($generated@@126 $generated@@28 $generated@@45 $generated@@9 ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))  (=> (and (or (not (= $generated@@158 $generated@@154)) (not true)) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@155 $generated@@158) $generated@@156)))) $generated@@157))
 :pattern ( ($generated@@126 $generated@@28 $generated@@45 $generated@@9 ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (= ($generated@@25 $generated@@34) $generated@@3))
(assert (= ($generated@@160 $generated@@34) $generated@@6))
(assert (= ($generated@@25 $generated@@29) $generated@@4))
(assert (= ($generated@@160 $generated@@29) $generated@@6))
(assert (forall (($generated@@161 Int) ) (! (= ($generated@@90 $generated@@10 ($generated@@14 ($generated@@82 $generated@@161))) ($generated@@84 $generated@@46 ($generated@@90 $generated@@10 ($generated@@14 $generated@@161))))
 :pattern ( ($generated@@90 $generated@@10 ($generated@@14 ($generated@@82 $generated@@161))))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@90 $generated@@163 ($generated@@84 $generated@@163 $generated@@162)) ($generated@@84 $generated@@46 ($generated@@90 $generated@@163 $generated@@162)))
 :pattern ( ($generated@@90 $generated@@163 ($generated@@84 $generated@@163 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! ($generated@@33 $generated@@10 $generated@@165 $generated $generated@@164)
 :pattern ( ($generated@@33 $generated@@10 $generated@@165 $generated $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (! ($generated@@27 $generated@@10 $generated@@166 $generated)
 :pattern ( ($generated@@27 $generated@@10 $generated@@166 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 (Int) Bool)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Bool)
(declare-fun $generated@@184 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@185  (=> (= $generated@@167 ($generated@@127 $generated@@30 $generated@@168 $generated@@1 false)) (=> (and (and (= $generated@@169 ($generated@@82 3)) (= $generated@@170 ($generated@@82 2))) (and ($generated@@27 $generated@@28 $generated@@171 $generated@@34) ($generated@@33 $generated@@28 $generated@@171 $generated@@34 $generated@@168))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (=> ($generated@@83 $generated@@169 $generated@@170) (or ($generated@@81 $generated@@169 $generated@@170) (> $generated@@169 $generated@@170)))) (=> (=> ($generated@@83 $generated@@169 $generated@@170) (or ($generated@@81 $generated@@169 $generated@@170) (> $generated@@169 $generated@@170))) (=> (and ($generated@@43 $generated@@172) ($generated@@40 $generated@@172)) (=> (and (and ($generated@@27 $generated@@28 $generated@@173 $generated@@34) ($generated@@33 $generated@@28 $generated@@173 $generated@@34 $generated@@172)) (and (forall (($generated@@186 T@U) ) (!  (=> (and (or (not (= $generated@@186 $generated@@30)) (not true)) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@168 $generated@@186) $generated@@1)))) (= ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@186) ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@168 $generated@@186)))
 :pattern ( ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@186))
)) ($generated@@41 $generated@@168 $generated@@172))) (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@173 $generated@@30)) (not true))) (=> (or (not (= $generated@@173 $generated@@30)) (not true)) (=> (and (and ($generated@@43 $generated@@174) ($generated@@40 $generated@@174)) (and (forall (($generated@@187 T@U) ) (!  (=> (and (or (not (= $generated@@187 $generated@@30)) (not true)) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@187) $generated@@1)))) (= ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@174 $generated@@187) ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@187)))
 :pattern ( ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@174 $generated@@187))
)) ($generated@@41 $generated@@172 $generated@@174))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@173 $generated@@30)) (not true))) (=> (and ($generated@@99 ($generated@@90 $generated@@28 $generated@@173) $generated@@29 $generated@@174) ($generated@@33 $generated@@10 ($generated@@14 $generated@@175) $generated $generated@@174)) (=> (and (and ($generated@@93 $generated@@174 $generated@@173 $generated@@175) (= $generated@@176 ($generated@@42 $generated@@174 $generated@@173 $generated@@175))) (and ($generated@@33 $generated@@10 ($generated@@14 $generated@@176) $generated $generated@@174) ($generated@@177 ($generated@@42 $generated@@174 $generated@@173 $generated@@175)))) (=> (and (and (and (and ($generated@@93 $generated@@174 $generated@@173 $generated@@175) ($generated@@177 ($generated@@42 $generated@@174 $generated@@173 $generated@@175))) ($generated@@13 ($generated@@84 $generated@@9 ($generated@@12 false)))) (and (= $generated@@178 ($generated@@82 2)) (= $generated@@179 ($generated@@82 3)))) (and (and (and ($generated@@27 $generated@@28 $generated@@180 $generated@@34) ($generated@@33 $generated@@28 $generated@@180 $generated@@34 $generated@@168)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@83 $generated@@178 $generated@@179))) (or ($generated@@81 $generated@@178 $generated@@179) (> $generated@@178 $generated@@179)))))))))))))))))))
(let (($generated@@188  (=> (and (and (and ($generated@@43 $generated@@168) ($generated@@40 $generated@@168)) (and (=> $generated@@181 (and ($generated@@27 $generated@@28 $generated@@182 $generated@@34) ($generated@@33 $generated@@28 $generated@@182 $generated@@34 $generated@@168))) true)) (and (and (=> $generated@@183 (and ($generated@@27 $generated@@28 $generated@@184 $generated@@34) ($generated@@33 $generated@@28 $generated@@184 $generated@@34 $generated@@168))) true) (and (= 3 $generated@@80) (= (ControlFlow 0 8) 2)))) $generated@@185)))
$generated@@188)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
