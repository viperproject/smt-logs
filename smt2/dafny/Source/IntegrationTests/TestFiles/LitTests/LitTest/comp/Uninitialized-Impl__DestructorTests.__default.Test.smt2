(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun TBool () T@U)
(declare-fun TInt () T@U)
(declare-fun TReal () T@U)
(declare-fun TagBool () T@U)
(declare-fun TagInt () T@U)
(declare-fun TagReal () T@U)
(declare-fun alloc () T@U)
(declare-fun Tagclass.DestructorTests.WithCommonDestructors () T@U)
(declare-fun |##DestructorTests.WithCommonDestructors.CtorA| () T@U)
(declare-fun |##DestructorTests.WithCommonDestructors.CtorAB| () T@U)
(declare-fun |##DestructorTests.WithCommonDestructors.CtorB| () T@U)
(declare-fun tytagFamily$WithCommonDestructors () T@U)
(declare-fun Ctor (T@T) Int)
(declare-fun boolType () T@T)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun Tag (T@U) T@U)
(declare-fun |#DestructorTests.WithCommonDestructors.CtorB| (T@U Int Int) T@U)
(declare-fun DatatypeCtorId (T@U) T@U)
(declare-fun DestructorTests.WithCommonDestructors.b (T@U) T@U)
(declare-fun DestructorTests.WithCommonDestructors.y (T@U) Int)
(declare-fun DestructorTests.WithCommonDestructors.z (T@U) Int)
(declare-fun $Is (T@T T@U T@U) Bool)
(declare-fun DatatypeTypeType () T@T)
(declare-fun Tclass.DestructorTests.WithCommonDestructors (T@U T@U) T@U)
(declare-fun $IsBox (T@U T@U) Bool)
(declare-fun |#DestructorTests.WithCommonDestructors.CtorA| (T@U Int) T@U)
(declare-fun |#DestructorTests.WithCommonDestructors.CtorAB| (T@U T@U) T@U)
(declare-fun LitInt (Int) Int)
(declare-fun LitReal (Real) Real)
(declare-fun Lit (T@T T@U) T@U)
(declare-fun $IsAlloc (T@T T@U T@U T@U) Bool)
(declare-fun $IsGoodHeap (T@U) Bool)
(declare-fun $IsAllocBox (T@U T@U T@U) Bool)
(declare-fun DestructorTests.WithCommonDestructors.CtorA_q (T@U) Bool)
(declare-fun DestructorTests.WithCommonDestructors.CtorAB_q (T@U) Bool)
(declare-fun DestructorTests.WithCommonDestructors.CtorB_q (T@U) Bool)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun $Box (T@T T@U) T@U)
(declare-fun Tclass.DestructorTests.WithCommonDestructors_0 (T@U) T@U)
(declare-fun Tclass.DestructorTests.WithCommonDestructors_1 (T@U) T@U)
(declare-fun DestructorTests.WithCommonDestructors.a (T@U) T@U)
(declare-fun DestructorTests.WithCommonDestructors.x (T@U) Int)
(declare-fun BoxType () T@T)
(declare-fun BoxRank (T@U) Int)
(declare-fun DtRank (T@U) Int)
(declare-fun MapType0Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun refType () T@T)
(declare-fun FieldType () T@T)
(declare-fun |lambda#0| (T@U T@U T@U Bool) T@U)
(declare-fun MapType1Select (T@T T@T T@U T@U) T@U)
(declare-fun MapType1Type (T@T T@T) T@T)
(declare-fun MapType0Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun MapType1Store (T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType1TypeInv0 (T@T) T@T)
(declare-fun MapType1TypeInv1 (T@T) T@T)
(declare-fun TagFamily (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= (Ctor boolType) 0) (= (Ctor intType) 1)) (= (Ctor realType) 2)) (forall ((arg0 Bool) ) (! (= (U_2_bool (bool_2_U arg0)) arg0)
 :pattern ( (bool_2_U arg0))
))) (forall ((x T@U) ) (! (= (bool_2_U (U_2_bool x)) x)
 :pattern ( (U_2_bool x))
))) (forall ((arg0@@0 Int) ) (! (= (U_2_int (int_2_U arg0@@0)) arg0@@0)
 :pattern ( (int_2_U arg0@@0))
))) (forall ((x@@0 T@U) ) (! (= (int_2_U (U_2_int x@@0)) x@@0)
 :pattern ( (U_2_int x@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@1 T@U) ) (! (= (real_2_U (U_2_real x@@1)) x@@1)
 :pattern ( (U_2_real x@@1))
))))
(assert (distinct TBool TInt TReal TagBool TagInt TagReal alloc Tagclass.DestructorTests.WithCommonDestructors |##DestructorTests.WithCommonDestructors.CtorA| |##DestructorTests.WithCommonDestructors.CtorAB| |##DestructorTests.WithCommonDestructors.CtorB| tytagFamily$WithCommonDestructors)
)
(assert (= (Tag TBool) TagBool))
(assert (= (Tag TInt) TagInt))
(assert (= (Tag TReal) TagReal))
(assert (forall ((|a#15#0#0| T@U) (|a#15#1#0| Int) (|a#15#2#0| Int) ) (! (= (DatatypeCtorId (|#DestructorTests.WithCommonDestructors.CtorB| |a#15#0#0| |a#15#1#0| |a#15#2#0|)) |##DestructorTests.WithCommonDestructors.CtorB|)
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorB| |a#15#0#0| |a#15#1#0| |a#15#2#0|))
)))
(assert (forall ((|a#19#0#0| T@U) (|a#19#1#0| Int) (|a#19#2#0| Int) ) (! (= (DestructorTests.WithCommonDestructors.b (|#DestructorTests.WithCommonDestructors.CtorB| |a#19#0#0| |a#19#1#0| |a#19#2#0|)) |a#19#0#0|)
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorB| |a#19#0#0| |a#19#1#0| |a#19#2#0|))
)))
(assert (forall ((|a#21#0#0| T@U) (|a#21#1#0| Int) (|a#21#2#0| Int) ) (! (= (DestructorTests.WithCommonDestructors.y (|#DestructorTests.WithCommonDestructors.CtorB| |a#21#0#0| |a#21#1#0| |a#21#2#0|)) |a#21#1#0|)
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorB| |a#21#0#0| |a#21#1#0| |a#21#2#0|))
)))
(assert (forall ((|a#22#0#0| T@U) (|a#22#1#0| Int) (|a#22#2#0| Int) ) (! (= (DestructorTests.WithCommonDestructors.z (|#DestructorTests.WithCommonDestructors.CtorB| |a#22#0#0| |a#22#1#0| |a#22#2#0|)) |a#22#2#0|)
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorB| |a#22#0#0| |a#22#1#0| |a#22#2#0|))
)))
(assert (= (Ctor DatatypeTypeType) 3))
(assert (forall ((DestructorTests.WithCommonDestructors$A T@U) (DestructorTests.WithCommonDestructors$B T@U) (|a#17#0#0| T@U) (|a#17#1#0| Int) (|a#17#2#0| Int) ) (! (= ($Is DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorB| |a#17#0#0| |a#17#1#0| |a#17#2#0|) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A DestructorTests.WithCommonDestructors$B))  (and (and ($IsBox |a#17#0#0| DestructorTests.WithCommonDestructors$B) ($Is intType (int_2_U |a#17#1#0|) TInt)) ($Is intType (int_2_U |a#17#2#0|) TInt)))
 :pattern ( ($Is DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorB| |a#17#0#0| |a#17#1#0| |a#17#2#0|) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A DestructorTests.WithCommonDestructors$B)))
)))
(assert (forall ((DestructorTests.WithCommonDestructors$A@@0 T@U) (DestructorTests.WithCommonDestructors$B@@0 T@U) (|a#2#0#0| T@U) (|a#2#1#0| Int) ) (! (= ($Is DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorA| |a#2#0#0| |a#2#1#0|) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@0 DestructorTests.WithCommonDestructors$B@@0))  (and ($IsBox |a#2#0#0| DestructorTests.WithCommonDestructors$A@@0) ($Is intType (int_2_U |a#2#1#0|) TInt)))
 :pattern ( ($Is DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorA| |a#2#0#0| |a#2#1#0|) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@0 DestructorTests.WithCommonDestructors$B@@0)))
)))
(assert (forall ((DestructorTests.WithCommonDestructors$A@@1 T@U) (DestructorTests.WithCommonDestructors$B@@1 T@U) (|a#9#0#0| T@U) (|a#9#1#0| T@U) ) (! (= ($Is DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorAB| |a#9#0#0| |a#9#1#0|) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@1 DestructorTests.WithCommonDestructors$B@@1))  (and ($IsBox |a#9#0#0| DestructorTests.WithCommonDestructors$A@@1) ($IsBox |a#9#1#0| DestructorTests.WithCommonDestructors$B@@1)))
 :pattern ( ($Is DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorAB| |a#9#0#0| |a#9#1#0|) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@1 DestructorTests.WithCommonDestructors$B@@1)))
)))
(assert (forall ((x@@2 Int) ) (! (= (LitInt x@@2) x@@2)
 :pattern ( (LitInt x@@2))
)))
(assert (forall ((x@@3 Real) ) (! (= (LitReal x@@3) x@@3)
 :pattern ( (LitReal x@@3))
)))
(assert (forall ((x@@4 T@U) (T T@T) ) (! (= (Lit T x@@4) x@@4)
 :pattern ( (Lit T x@@4))
)))
(assert (forall ((DestructorTests.WithCommonDestructors$A@@2 T@U) (DestructorTests.WithCommonDestructors$B@@2 T@U) (|a#2#0#0@@0| T@U) (|a#2#1#0@@0| Int) ($h T@U) ) (!  (=> ($IsGoodHeap $h) (= ($IsAlloc DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorA| |a#2#0#0@@0| |a#2#1#0@@0|) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@2 DestructorTests.WithCommonDestructors$B@@2) $h)  (and ($IsAllocBox |a#2#0#0@@0| DestructorTests.WithCommonDestructors$A@@2 $h) ($IsAlloc intType (int_2_U |a#2#1#0@@0|) TInt $h))))
 :pattern ( ($IsAlloc DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorA| |a#2#0#0@@0| |a#2#1#0@@0|) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@2 DestructorTests.WithCommonDestructors$B@@2) $h))
)))
(assert (forall ((DestructorTests.WithCommonDestructors$A@@3 T@U) (DestructorTests.WithCommonDestructors$B@@3 T@U) (|a#9#0#0@@0| T@U) (|a#9#1#0@@0| T@U) ($h@@0 T@U) ) (!  (=> ($IsGoodHeap $h@@0) (= ($IsAlloc DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorAB| |a#9#0#0@@0| |a#9#1#0@@0|) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@3 DestructorTests.WithCommonDestructors$B@@3) $h@@0)  (and ($IsAllocBox |a#9#0#0@@0| DestructorTests.WithCommonDestructors$A@@3 $h@@0) ($IsAllocBox |a#9#1#0@@0| DestructorTests.WithCommonDestructors$B@@3 $h@@0))))
 :pattern ( ($IsAlloc DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorAB| |a#9#0#0@@0| |a#9#1#0@@0|) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@3 DestructorTests.WithCommonDestructors$B@@3) $h@@0))
)))
(assert (forall ((d T@U) ) (! (= (DestructorTests.WithCommonDestructors.CtorA_q d) (= (DatatypeCtorId d) |##DestructorTests.WithCommonDestructors.CtorA|))
 :pattern ( (DestructorTests.WithCommonDestructors.CtorA_q d))
)))
(assert (forall ((d@@0 T@U) ) (! (= (DestructorTests.WithCommonDestructors.CtorAB_q d@@0) (= (DatatypeCtorId d@@0) |##DestructorTests.WithCommonDestructors.CtorAB|))
 :pattern ( (DestructorTests.WithCommonDestructors.CtorAB_q d@@0))
)))
(assert (forall ((d@@1 T@U) ) (! (= (DestructorTests.WithCommonDestructors.CtorB_q d@@1) (= (DatatypeCtorId d@@1) |##DestructorTests.WithCommonDestructors.CtorB|))
 :pattern ( (DestructorTests.WithCommonDestructors.CtorB_q d@@1))
)))
(assert (forall ((x@@5 T@U) (T@@0 T@T) ) (! (= ($Box T@@0 ($Unbox T@@0 x@@5)) x@@5)
 :pattern ( ($Unbox T@@0 x@@5))
)))
(assert (forall ((d@@2 T@U) ) (!  (=> (DestructorTests.WithCommonDestructors.CtorB_q d@@2) (exists ((|a#16#0#0| T@U) (|a#16#1#0| Int) (|a#16#2#0| Int) ) (= d@@2 (|#DestructorTests.WithCommonDestructors.CtorB| |a#16#0#0| |a#16#1#0| |a#16#2#0|))))
 :pattern ( (DestructorTests.WithCommonDestructors.CtorB_q d@@2))
)))
(assert (forall ((d@@3 T@U) ) (!  (=> (DestructorTests.WithCommonDestructors.CtorA_q d@@3) (exists ((|a#1#0#0| T@U) (|a#1#1#0| Int) ) (= d@@3 (|#DestructorTests.WithCommonDestructors.CtorA| |a#1#0#0| |a#1#1#0|))))
 :pattern ( (DestructorTests.WithCommonDestructors.CtorA_q d@@3))
)))
(assert (forall ((d@@4 T@U) ) (!  (=> (DestructorTests.WithCommonDestructors.CtorAB_q d@@4) (exists ((|a#8#0#0| T@U) (|a#8#1#0| T@U) ) (= d@@4 (|#DestructorTests.WithCommonDestructors.CtorAB| |a#8#0#0| |a#8#1#0|))))
 :pattern ( (DestructorTests.WithCommonDestructors.CtorAB_q d@@4))
)))
(assert (forall ((v T@U) (t T@U) (h T@U) (T@@1 T@T) ) (! (= ($IsAllocBox ($Box T@@1 v) t h) ($IsAlloc T@@1 v t h))
 :pattern ( ($IsAllocBox ($Box T@@1 v) t h))
)))
(assert (forall ((DestructorTests.WithCommonDestructors$A@@4 T@U) (DestructorTests.WithCommonDestructors$B@@4 T@U) (|a#17#0#0@@0| T@U) (|a#17#1#0@@0| Int) (|a#17#2#0@@0| Int) ($h@@1 T@U) ) (!  (=> ($IsGoodHeap $h@@1) (= ($IsAlloc DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorB| |a#17#0#0@@0| |a#17#1#0@@0| |a#17#2#0@@0|) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@4 DestructorTests.WithCommonDestructors$B@@4) $h@@1)  (and (and ($IsAllocBox |a#17#0#0@@0| DestructorTests.WithCommonDestructors$B@@4 $h@@1) ($IsAlloc intType (int_2_U |a#17#1#0@@0|) TInt $h@@1)) ($IsAlloc intType (int_2_U |a#17#2#0@@0|) TInt $h@@1))))
 :pattern ( ($IsAlloc DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorB| |a#17#0#0@@0| |a#17#1#0@@0| |a#17#2#0@@0|) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@4 DestructorTests.WithCommonDestructors$B@@4) $h@@1))
)))
(assert (forall ((bx T@U) ) (!  (=> ($IsBox bx TInt) (and (= ($Box intType ($Unbox intType bx)) bx) ($Is intType ($Unbox intType bx) TInt)))
 :pattern ( ($IsBox bx TInt))
)))
(assert (forall ((bx@@0 T@U) ) (!  (=> ($IsBox bx@@0 TReal) (and (= ($Box realType ($Unbox realType bx@@0)) bx@@0) ($Is realType ($Unbox realType bx@@0) TReal)))
 :pattern ( ($IsBox bx@@0 TReal))
)))
(assert (forall ((bx@@1 T@U) ) (!  (=> ($IsBox bx@@1 TBool) (and (= ($Box boolType ($Unbox boolType bx@@1)) bx@@1) ($Is boolType ($Unbox boolType bx@@1) TBool)))
 :pattern ( ($IsBox bx@@1 TBool))
)))
(assert (forall ((v@@0 T@U) (t@@0 T@U) (T@@2 T@T) ) (! (= ($IsBox ($Box T@@2 v@@0) t@@0) ($Is T@@2 v@@0 t@@0))
 :pattern ( ($IsBox ($Box T@@2 v@@0) t@@0))
)))
(assert (forall ((DestructorTests.WithCommonDestructors$A@@5 T@U) (DestructorTests.WithCommonDestructors$B@@5 T@U) ) (! (= (Tclass.DestructorTests.WithCommonDestructors_0 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@5 DestructorTests.WithCommonDestructors$B@@5)) DestructorTests.WithCommonDestructors$A@@5)
 :pattern ( (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@5 DestructorTests.WithCommonDestructors$B@@5))
)))
(assert (forall ((DestructorTests.WithCommonDestructors$A@@6 T@U) (DestructorTests.WithCommonDestructors$B@@6 T@U) ) (! (= (Tclass.DestructorTests.WithCommonDestructors_1 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@6 DestructorTests.WithCommonDestructors$B@@6)) DestructorTests.WithCommonDestructors$B@@6)
 :pattern ( (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@6 DestructorTests.WithCommonDestructors$B@@6))
)))
(assert (forall ((|a#0#0#0| T@U) (|a#0#1#0| Int) ) (! (= (DatatypeCtorId (|#DestructorTests.WithCommonDestructors.CtorA| |a#0#0#0| |a#0#1#0|)) |##DestructorTests.WithCommonDestructors.CtorA|)
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorA| |a#0#0#0| |a#0#1#0|))
)))
(assert (forall ((|a#4#0#0| T@U) (|a#4#1#0| Int) ) (! (= (DestructorTests.WithCommonDestructors.a (|#DestructorTests.WithCommonDestructors.CtorA| |a#4#0#0| |a#4#1#0|)) |a#4#0#0|)
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorA| |a#4#0#0| |a#4#1#0|))
)))
(assert (forall ((|a#6#0#0| T@U) (|a#6#1#0| Int) ) (! (= (DestructorTests.WithCommonDestructors.x (|#DestructorTests.WithCommonDestructors.CtorA| |a#6#0#0| |a#6#1#0|)) |a#6#1#0|)
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorA| |a#6#0#0| |a#6#1#0|))
)))
(assert (forall ((|a#7#0#0| T@U) (|a#7#1#0| T@U) ) (! (= (DatatypeCtorId (|#DestructorTests.WithCommonDestructors.CtorAB| |a#7#0#0| |a#7#1#0|)) |##DestructorTests.WithCommonDestructors.CtorAB|)
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorAB| |a#7#0#0| |a#7#1#0|))
)))
(assert (forall ((|a#11#0#0| T@U) (|a#11#1#0| T@U) ) (! (= (DestructorTests.WithCommonDestructors.a (|#DestructorTests.WithCommonDestructors.CtorAB| |a#11#0#0| |a#11#1#0|)) |a#11#0#0|)
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorAB| |a#11#0#0| |a#11#1#0|))
)))
(assert (forall ((|a#13#0#0| T@U) (|a#13#1#0| T@U) ) (! (= (DestructorTests.WithCommonDestructors.b (|#DestructorTests.WithCommonDestructors.CtorAB| |a#13#0#0| |a#13#1#0|)) |a#13#1#0|)
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorAB| |a#13#0#0| |a#13#1#0|))
)))
(assert (= (Ctor BoxType) 4))
(assert (forall ((|a#18#0#0| T@U) (|a#18#1#0| Int) (|a#18#2#0| Int) ) (! (= (|#DestructorTests.WithCommonDestructors.CtorB| (Lit BoxType |a#18#0#0|) (LitInt |a#18#1#0|) (LitInt |a#18#2#0|)) (Lit DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorB| |a#18#0#0| |a#18#1#0| |a#18#2#0|)))
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorB| (Lit BoxType |a#18#0#0|) (LitInt |a#18#1#0|) (LitInt |a#18#2#0|)))
)))
(assert (forall ((x@@6 T@U) (T@@3 T@T) ) (! (= ($Unbox T@@3 ($Box T@@3 x@@6)) x@@6)
 :pattern ( ($Box T@@3 x@@6))
)))
(assert (forall ((|a#20#0#0| T@U) (|a#20#1#0| Int) (|a#20#2#0| Int) ) (! (< (BoxRank |a#20#0#0|) (DtRank (|#DestructorTests.WithCommonDestructors.CtorB| |a#20#0#0| |a#20#1#0| |a#20#2#0|)))
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorB| |a#20#0#0| |a#20#1#0| |a#20#2#0|))
)))
(assert (forall ((|a#5#0#0| T@U) (|a#5#1#0| Int) ) (! (< (BoxRank |a#5#0#0|) (DtRank (|#DestructorTests.WithCommonDestructors.CtorA| |a#5#0#0| |a#5#1#0|)))
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorA| |a#5#0#0| |a#5#1#0|))
)))
(assert (forall ((|a#12#0#0| T@U) (|a#12#1#0| T@U) ) (! (< (BoxRank |a#12#0#0|) (DtRank (|#DestructorTests.WithCommonDestructors.CtorAB| |a#12#0#0| |a#12#1#0|)))
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorAB| |a#12#0#0| |a#12#1#0|))
)))
(assert (forall ((|a#14#0#0| T@U) (|a#14#1#0| T@U) ) (! (< (BoxRank |a#14#1#0|) (DtRank (|#DestructorTests.WithCommonDestructors.CtorAB| |a#14#0#0| |a#14#1#0|)))
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorAB| |a#14#0#0| |a#14#1#0|))
)))
(assert (forall ((DestructorTests.WithCommonDestructors$A@@7 T@U) (DestructorTests.WithCommonDestructors$B@@7 T@U) (d@@5 T@U) ) (!  (=> ($Is DatatypeTypeType d@@5 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@7 DestructorTests.WithCommonDestructors$B@@7)) (or (or (DestructorTests.WithCommonDestructors.CtorA_q d@@5) (DestructorTests.WithCommonDestructors.CtorAB_q d@@5)) (DestructorTests.WithCommonDestructors.CtorB_q d@@5)))
 :pattern ( (DestructorTests.WithCommonDestructors.CtorB_q d@@5) ($Is DatatypeTypeType d@@5 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@7 DestructorTests.WithCommonDestructors$B@@7)))
 :pattern ( (DestructorTests.WithCommonDestructors.CtorAB_q d@@5) ($Is DatatypeTypeType d@@5 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@7 DestructorTests.WithCommonDestructors$B@@7)))
 :pattern ( (DestructorTests.WithCommonDestructors.CtorA_q d@@5) ($Is DatatypeTypeType d@@5 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@7 DestructorTests.WithCommonDestructors$B@@7)))
)))
(assert (forall ((DestructorTests.WithCommonDestructors$A@@8 T@U) (DestructorTests.WithCommonDestructors$B@@8 T@U) (bx@@2 T@U) ) (!  (=> ($IsBox bx@@2 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@8 DestructorTests.WithCommonDestructors$B@@8)) (and (= ($Box DatatypeTypeType ($Unbox DatatypeTypeType bx@@2)) bx@@2) ($Is DatatypeTypeType ($Unbox DatatypeTypeType bx@@2) (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@8 DestructorTests.WithCommonDestructors$B@@8))))
 :pattern ( ($IsBox bx@@2 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@8 DestructorTests.WithCommonDestructors$B@@8)))
)))
(assert  (and (and (and (and (and (and (and (and (forall ((t0 T@T) (t1 T@T) (t2 T@T) (val T@U) (m T@U) (x0 T@U) (x1 T@U) ) (! (= (MapType0Select t0 t1 t2 (MapType0Store t0 t1 t2 m x0 x1 val) x0 x1) val)
 :weight 0
)) (and (forall ((u0 T@T) (u1 T@T) (u2 T@T) (val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (x1@@0 T@U) (y0 T@U) (y1 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select u0 u1 u2 (MapType0Store u0 u1 u2 m@@0 x0@@0 x1@@0 val@@0) y0 y1) (MapType0Select u0 u1 u2 m@@0 y0 y1)))
 :weight 0
)) (forall ((u0@@0 T@T) (u1@@0 T@T) (u2@@0 T@T) (val@@1 T@U) (m@@1 T@U) (x0@@1 T@U) (x1@@1 T@U) (y0@@0 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType0Select u0@@0 u1@@0 u2@@0 (MapType0Store u0@@0 u1@@0 u2@@0 m@@1 x0@@1 x1@@1 val@@1) y0@@0 y1@@0) (MapType0Select u0@@0 u1@@0 u2@@0 m@@1 y0@@0 y1@@0)))
 :weight 0
)))) (= (Ctor refType) 5)) (= (Ctor FieldType) 6)) (forall ((t0@@0 T@T) (t1@@0 T@T) (val@@2 T@U) (m@@2 T@U) (x0@@2 T@U) ) (! (= (MapType1Select t0@@0 t1@@0 (MapType1Store t0@@0 t1@@0 m@@2 x0@@2 val@@2) x0@@2) val@@2)
 :weight 0
))) (forall ((u0@@1 T@T) (u1@@1 T@T) (val@@3 T@U) (m@@3 T@U) (x0@@3 T@U) (y0@@1 T@U) ) (!  (or (= x0@@3 y0@@1) (= (MapType1Select u0@@1 u1@@1 (MapType1Store u0@@1 u1@@1 m@@3 x0@@3 val@@3) y0@@1) (MapType1Select u0@@1 u1@@1 m@@3 y0@@1)))
 :weight 0
))) (forall ((arg0@@2 T@T) (arg1 T@T) ) (= (Ctor (MapType1Type arg0@@2 arg1)) 7))) (forall ((arg0@@3 T@T) (arg1@@0 T@T) ) (! (= (MapType1TypeInv0 (MapType1Type arg0@@3 arg1@@0)) arg0@@3)
 :pattern ( (MapType1Type arg0@@3 arg1@@0))
))) (forall ((arg0@@4 T@T) (arg1@@1 T@T) ) (! (= (MapType1TypeInv1 (MapType1Type arg0@@4 arg1@@1)) arg1@@1)
 :pattern ( (MapType1Type arg0@@4 arg1@@1))
))))
(assert (forall ((|l#0| T@U) (|l#1| T@U) (|l#2| T@U) (|l#3| Bool) ($o T@U) ($f T@U) ) (! (= (U_2_bool (MapType0Select refType FieldType boolType (|lambda#0| |l#0| |l#1| |l#2| |l#3|) $o $f))  (=> (and (or (not (= $o |l#0|)) (not true)) (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) |l#1| $o) |l#2|)))) |l#3|))
 :pattern ( (MapType0Select refType FieldType boolType (|lambda#0| |l#0| |l#1| |l#2| |l#3|) $o $f))
)))
(assert (forall ((DestructorTests.WithCommonDestructors$A@@9 T@U) (DestructorTests.WithCommonDestructors$B@@9 T@U) ) (!  (and (= (Tag (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@9 DestructorTests.WithCommonDestructors$B@@9)) Tagclass.DestructorTests.WithCommonDestructors) (= (TagFamily (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@9 DestructorTests.WithCommonDestructors$B@@9)) tytagFamily$WithCommonDestructors))
 :pattern ( (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@9 DestructorTests.WithCommonDestructors$B@@9))
)))
(assert (forall ((d@@6 T@U) ) (! (= (BoxRank ($Box DatatypeTypeType d@@6)) (DtRank d@@6))
 :pattern ( (BoxRank ($Box DatatypeTypeType d@@6)))
)))
(assert (forall ((d@@7 T@U) (DestructorTests.WithCommonDestructors$A@@10 T@U) ($h@@2 T@U) ) (!  (=> (and ($IsGoodHeap $h@@2) (and (DestructorTests.WithCommonDestructors.CtorA_q d@@7) (exists ((DestructorTests.WithCommonDestructors$B@@10 T@U) ) (! ($IsAlloc DatatypeTypeType d@@7 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@10 DestructorTests.WithCommonDestructors$B@@10) $h@@2)
 :pattern ( ($IsAlloc DatatypeTypeType d@@7 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@10 DestructorTests.WithCommonDestructors$B@@10) $h@@2))
)))) ($IsAllocBox (DestructorTests.WithCommonDestructors.a d@@7) DestructorTests.WithCommonDestructors$A@@10 $h@@2))
 :pattern ( ($IsAllocBox (DestructorTests.WithCommonDestructors.a d@@7) DestructorTests.WithCommonDestructors$A@@10 $h@@2))
)))
(assert (forall ((d@@8 T@U) (DestructorTests.WithCommonDestructors$A@@11 T@U) ($h@@3 T@U) ) (!  (=> (and ($IsGoodHeap $h@@3) (and (DestructorTests.WithCommonDestructors.CtorAB_q d@@8) (exists ((DestructorTests.WithCommonDestructors$B@@11 T@U) ) (! ($IsAlloc DatatypeTypeType d@@8 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@11 DestructorTests.WithCommonDestructors$B@@11) $h@@3)
 :pattern ( ($IsAlloc DatatypeTypeType d@@8 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@11 DestructorTests.WithCommonDestructors$B@@11) $h@@3))
)))) ($IsAllocBox (DestructorTests.WithCommonDestructors.a d@@8) DestructorTests.WithCommonDestructors$A@@11 $h@@3))
 :pattern ( ($IsAllocBox (DestructorTests.WithCommonDestructors.a d@@8) DestructorTests.WithCommonDestructors$A@@11 $h@@3))
)))
(assert (forall ((d@@9 T@U) (DestructorTests.WithCommonDestructors$B@@12 T@U) ($h@@4 T@U) ) (!  (=> (and ($IsGoodHeap $h@@4) (and (DestructorTests.WithCommonDestructors.CtorAB_q d@@9) (exists ((DestructorTests.WithCommonDestructors$A@@12 T@U) ) (! ($IsAlloc DatatypeTypeType d@@9 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@12 DestructorTests.WithCommonDestructors$B@@12) $h@@4)
 :pattern ( ($IsAlloc DatatypeTypeType d@@9 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@12 DestructorTests.WithCommonDestructors$B@@12) $h@@4))
)))) ($IsAllocBox (DestructorTests.WithCommonDestructors.b d@@9) DestructorTests.WithCommonDestructors$B@@12 $h@@4))
 :pattern ( ($IsAllocBox (DestructorTests.WithCommonDestructors.b d@@9) DestructorTests.WithCommonDestructors$B@@12 $h@@4))
)))
(assert (forall ((d@@10 T@U) (DestructorTests.WithCommonDestructors$B@@13 T@U) ($h@@5 T@U) ) (!  (=> (and ($IsGoodHeap $h@@5) (and (DestructorTests.WithCommonDestructors.CtorB_q d@@10) (exists ((DestructorTests.WithCommonDestructors$A@@13 T@U) ) (! ($IsAlloc DatatypeTypeType d@@10 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@13 DestructorTests.WithCommonDestructors$B@@13) $h@@5)
 :pattern ( ($IsAlloc DatatypeTypeType d@@10 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@13 DestructorTests.WithCommonDestructors$B@@13) $h@@5))
)))) ($IsAllocBox (DestructorTests.WithCommonDestructors.b d@@10) DestructorTests.WithCommonDestructors$B@@13 $h@@5))
 :pattern ( ($IsAllocBox (DestructorTests.WithCommonDestructors.b d@@10) DestructorTests.WithCommonDestructors$B@@13 $h@@5))
)))
(assert (forall ((d@@11 T@U) ($h@@6 T@U) ) (!  (=> (and ($IsGoodHeap $h@@6) (and (DestructorTests.WithCommonDestructors.CtorA_q d@@11) (exists ((DestructorTests.WithCommonDestructors$A@@14 T@U) (DestructorTests.WithCommonDestructors$B@@14 T@U) ) (! ($IsAlloc DatatypeTypeType d@@11 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@14 DestructorTests.WithCommonDestructors$B@@14) $h@@6)
 :pattern ( ($IsAlloc DatatypeTypeType d@@11 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@14 DestructorTests.WithCommonDestructors$B@@14) $h@@6))
)))) ($IsAlloc intType (int_2_U (DestructorTests.WithCommonDestructors.x d@@11)) TInt $h@@6))
 :pattern ( ($IsAlloc intType (int_2_U (DestructorTests.WithCommonDestructors.x d@@11)) TInt $h@@6))
)))
(assert (forall ((d@@12 T@U) ($h@@7 T@U) ) (!  (=> (and ($IsGoodHeap $h@@7) (and (DestructorTests.WithCommonDestructors.CtorB_q d@@12) (exists ((DestructorTests.WithCommonDestructors$A@@15 T@U) (DestructorTests.WithCommonDestructors$B@@15 T@U) ) (! ($IsAlloc DatatypeTypeType d@@12 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@15 DestructorTests.WithCommonDestructors$B@@15) $h@@7)
 :pattern ( ($IsAlloc DatatypeTypeType d@@12 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@15 DestructorTests.WithCommonDestructors$B@@15) $h@@7))
)))) ($IsAlloc intType (int_2_U (DestructorTests.WithCommonDestructors.y d@@12)) TInt $h@@7))
 :pattern ( ($IsAlloc intType (int_2_U (DestructorTests.WithCommonDestructors.y d@@12)) TInt $h@@7))
)))
(assert (forall ((d@@13 T@U) ($h@@8 T@U) ) (!  (=> (and ($IsGoodHeap $h@@8) (and (DestructorTests.WithCommonDestructors.CtorB_q d@@13) (exists ((DestructorTests.WithCommonDestructors$A@@16 T@U) (DestructorTests.WithCommonDestructors$B@@16 T@U) ) (! ($IsAlloc DatatypeTypeType d@@13 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@16 DestructorTests.WithCommonDestructors$B@@16) $h@@8)
 :pattern ( ($IsAlloc DatatypeTypeType d@@13 (Tclass.DestructorTests.WithCommonDestructors DestructorTests.WithCommonDestructors$A@@16 DestructorTests.WithCommonDestructors$B@@16) $h@@8))
)))) ($IsAlloc intType (int_2_U (DestructorTests.WithCommonDestructors.z d@@13)) TInt $h@@8))
 :pattern ( ($IsAlloc intType (int_2_U (DestructorTests.WithCommonDestructors.z d@@13)) TInt $h@@8))
)))
(assert (forall ((|a#3#0#0| T@U) (|a#3#1#0| Int) ) (! (= (|#DestructorTests.WithCommonDestructors.CtorA| (Lit BoxType |a#3#0#0|) (LitInt |a#3#1#0|)) (Lit DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorA| |a#3#0#0| |a#3#1#0|)))
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorA| (Lit BoxType |a#3#0#0|) (LitInt |a#3#1#0|)))
)))
(assert (forall ((|a#10#0#0| T@U) (|a#10#1#0| T@U) ) (! (= (|#DestructorTests.WithCommonDestructors.CtorAB| (Lit BoxType |a#10#0#0|) (Lit BoxType |a#10#1#0|)) (Lit DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorAB| |a#10#0#0| |a#10#1#0|)))
 :pattern ( (|#DestructorTests.WithCommonDestructors.CtorAB| (Lit BoxType |a#10#0#0|) (Lit BoxType |a#10#1#0|)))
)))
(assert (forall ((x@@7 Int) ) (! (= ($Box intType (int_2_U (LitInt x@@7))) (Lit BoxType ($Box intType (int_2_U x@@7))))
 :pattern ( ($Box intType (int_2_U (LitInt x@@7))))
)))
(assert (forall ((x@@8 Real) ) (! (= ($Box realType (real_2_U (LitReal x@@8))) (Lit BoxType ($Box realType (real_2_U x@@8))))
 :pattern ( ($Box realType (real_2_U (LitReal x@@8))))
)))
(assert (forall ((x@@9 T@U) (T@@4 T@T) ) (! (= ($Box T@@4 (Lit T@@4 x@@9)) (Lit BoxType ($Box T@@4 x@@9)))
 :pattern ( ($Box T@@4 (Lit T@@4 x@@9)))
)))
(assert (forall ((h@@0 T@U) (v@@1 T@U) ) (! ($IsAlloc intType v@@1 TInt h@@0)
 :pattern ( ($IsAlloc intType v@@1 TInt h@@0))
)))
(assert (forall ((h@@1 T@U) (v@@2 T@U) ) (! ($IsAlloc realType v@@2 TReal h@@1)
 :pattern ( ($IsAlloc realType v@@2 TReal h@@1))
)))
(assert (forall ((h@@2 T@U) (v@@3 T@U) ) (! ($IsAlloc boolType v@@3 TBool h@@2)
 :pattern ( ($IsAlloc boolType v@@3 TBool h@@2))
)))
(assert (forall ((v@@4 T@U) ) (! ($Is intType v@@4 TInt)
 :pattern ( ($Is intType v@@4 TInt))
)))
(assert (forall ((v@@5 T@U) ) (! ($Is realType v@@5 TReal)
 :pattern ( ($Is realType v@@5 TReal))
)))
(assert (forall ((v@@6 T@U) ) (! ($Is boolType v@@6 TBool)
 :pattern ( ($Is boolType v@@6 TBool))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $_ModifiesFrame@0 () T@U)
(declare-fun null () T@U)
(declare-fun $Heap () T@U)
(declare-fun |wcd#0@0| () T@U)
(declare-fun |let#0#0#0| () T@U)
(declare-fun |dt_update_tmp#1#Z#0@0| () T@U)
(declare-fun |let#1#0#0| () Bool)
(declare-fun |dt_update#a#0#Z#0@0| () Bool)
(declare-fun |wcd#0@1| () T@U)
(declare-fun |wcd#0@2| () T@U)
(declare-fun |let#2#0#0| () T@U)
(declare-fun |dt_update_tmp#3#Z#0@0| () T@U)
(declare-fun |let#3#0#0| () Real)
(declare-fun |dt_update#b#0#Z#0@0| () Real)
(declare-fun |wcd#0@3| () T@U)
(declare-fun |let#4#0#0| () T@U)
(declare-fun |dt_update_tmp#4#Z#0@0| () T@U)
(declare-fun |let#5#0#0| () Int)
(declare-fun |dt_update#y#0#Z#0@0| () Int)
(declare-fun |wcd#0@4| () T@U)
(declare-fun |let#6#0#0| () T@U)
(declare-fun |dt_update_tmp#5#Z#0@0| () T@U)
(declare-fun |let#7#0#0| () Int)
(declare-fun |dt_update#y#1#Z#0@0| () Int)
(declare-fun |wcd#0@5| () T@U)
(declare-fun |let#8#0#0| () T@U)
(declare-fun |dt_update_tmp#6#Z#0@0| () T@U)
(declare-fun |wcd#0@6| () T@U)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun |wcd#0| () T@U)
(declare-fun $FunctionContextHeight () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 29) (let ((anon0_correct  (=> (and (= $_ModifiesFrame@0 (|lambda#0| null $Heap alloc false)) (= |wcd#0@0| (Lit DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorA| ($Box boolType (Lit boolType (bool_2_U true))) (LitInt 7))))) (and (=> (= (ControlFlow 0 2) (- 0 28)) (or (DestructorTests.WithCommonDestructors.CtorA_q |wcd#0@0|) (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@0|))) (=> (or (DestructorTests.WithCommonDestructors.CtorA_q |wcd#0@0|) (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@0|)) (and (=> (= (ControlFlow 0 2) (- 0 27)) (not (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@0|))) (=> (not (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@0|)) (and (=> (= (ControlFlow 0 2) (- 0 26)) (or (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@0|) (DestructorTests.WithCommonDestructors.CtorA_q |wcd#0@0|))) (=> (or (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@0|) (DestructorTests.WithCommonDestructors.CtorA_q |wcd#0@0|)) (and (=> (= (ControlFlow 0 2) (- 0 25)) (not (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@0|))) (=> (not (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@0|)) (=> (and (= |let#0#0#0| |wcd#0@0|) ($Is DatatypeTypeType |let#0#0#0| (Tclass.DestructorTests.WithCommonDestructors TBool TReal))) (=> (and (and (= |dt_update_tmp#1#Z#0@0| |let#0#0#0|) (= |let#1#0#0| (U_2_bool (Lit boolType (bool_2_U false))))) (and ($Is boolType (bool_2_U |let#1#0#0|) TBool) (= |dt_update#a#0#Z#0@0| |let#1#0#0|))) (and (=> (= (ControlFlow 0 2) (- 0 24)) (DestructorTests.WithCommonDestructors.CtorA_q |dt_update_tmp#1#Z#0@0|)) (=> (DestructorTests.WithCommonDestructors.CtorA_q |dt_update_tmp#1#Z#0@0|) (=> (= |wcd#0@1| (let ((|dt_update_tmp#1#0| |wcd#0@0|))
(let ((|dt_update#a#0#0| (U_2_bool (Lit boolType (bool_2_U false)))))
(|#DestructorTests.WithCommonDestructors.CtorA| ($Box boolType (bool_2_U |dt_update#a#0#0|)) (DestructorTests.WithCommonDestructors.x |dt_update_tmp#1#0|))))) (and (=> (= (ControlFlow 0 2) (- 0 23)) (or (DestructorTests.WithCommonDestructors.CtorA_q |wcd#0@1|) (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@1|))) (=> (or (DestructorTests.WithCommonDestructors.CtorA_q |wcd#0@1|) (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@1|)) (and (=> (= (ControlFlow 0 2) (- 0 22)) (not (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@1|))) (=> (not (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@1|)) (and (=> (= (ControlFlow 0 2) (- 0 21)) (DestructorTests.WithCommonDestructors.CtorA_q |wcd#0@1|)) (=> (DestructorTests.WithCommonDestructors.CtorA_q |wcd#0@1|) (=> (= |wcd#0@2| (Lit DatatypeTypeType (|#DestructorTests.WithCommonDestructors.CtorB| ($Box realType (real_2_U (LitReal 2.11))) (LitInt 9) (LitInt 100)))) (and (=> (= (ControlFlow 0 2) (- 0 20)) (or (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@2|) (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@2|))) (=> (or (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@2|) (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@2|)) (and (=> (= (ControlFlow 0 2) (- 0 19)) (not (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@2|))) (=> (not (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@2|)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (or (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@2|) (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@2|))) (=> (or (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@2|) (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@2|)) (and (=> (= (ControlFlow 0 2) (- 0 17)) (not (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@2|))) (=> (not (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@2|)) (=> (and (= |let#2#0#0| |wcd#0@2|) ($Is DatatypeTypeType |let#2#0#0| (Tclass.DestructorTests.WithCommonDestructors TBool TReal))) (=> (and (and (= |dt_update_tmp#3#Z#0@0| |let#2#0#0|) (= |let#3#0#0| (LitReal 2.13))) (and ($Is realType (real_2_U |let#3#0#0|) TReal) (= |dt_update#b#0#Z#0@0| |let#3#0#0|))) (and (=> (= (ControlFlow 0 2) (- 0 16)) (DestructorTests.WithCommonDestructors.CtorB_q |dt_update_tmp#3#Z#0@0|)) (=> (DestructorTests.WithCommonDestructors.CtorB_q |dt_update_tmp#3#Z#0@0|) (and (=> (= (ControlFlow 0 2) (- 0 15)) (DestructorTests.WithCommonDestructors.CtorB_q |dt_update_tmp#3#Z#0@0|)) (=> (DestructorTests.WithCommonDestructors.CtorB_q |dt_update_tmp#3#Z#0@0|) (=> (= |wcd#0@3| (let ((|dt_update_tmp#3#0| |wcd#0@2|))
(let ((|dt_update#b#0#0| (LitReal 2.13)))
(|#DestructorTests.WithCommonDestructors.CtorB| ($Box realType (real_2_U |dt_update#b#0#0|)) (DestructorTests.WithCommonDestructors.y |dt_update_tmp#3#0|) (DestructorTests.WithCommonDestructors.z |dt_update_tmp#3#0|))))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (or (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@3|) (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@3|))) (=> (or (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@3|) (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@3|)) (and (=> (= (ControlFlow 0 2) (- 0 13)) (not (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@3|))) (=> (not (DestructorTests.WithCommonDestructors.CtorAB_q |wcd#0@3|)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@3|)) (=> (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@3|) (and (=> (= (ControlFlow 0 2) (- 0 11)) (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@3|)) (=> (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@3|) (=> (and (= |let#4#0#0| |wcd#0@3|) ($Is DatatypeTypeType |let#4#0#0| (Tclass.DestructorTests.WithCommonDestructors TBool TReal))) (=> (and (and (= |dt_update_tmp#4#Z#0@0| |let#4#0#0|) (= |let#5#0#0| (LitInt 11))) (and ($Is intType (int_2_U |let#5#0#0|) TInt) (= |dt_update#y#0#Z#0@0| |let#5#0#0|))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (or (DestructorTests.WithCommonDestructors.CtorAB_q |dt_update_tmp#4#Z#0@0|) (DestructorTests.WithCommonDestructors.CtorB_q |dt_update_tmp#4#Z#0@0|))) (=> (or (DestructorTests.WithCommonDestructors.CtorAB_q |dt_update_tmp#4#Z#0@0|) (DestructorTests.WithCommonDestructors.CtorB_q |dt_update_tmp#4#Z#0@0|)) (=> (= |wcd#0@4| (let ((|dt_update_tmp#4#0| |wcd#0@3|))
(let ((|dt_update#y#0#0| (LitInt 11)))
(|#DestructorTests.WithCommonDestructors.CtorB| (DestructorTests.WithCommonDestructors.b |dt_update_tmp#4#0|) |dt_update#y#0#0| (LitInt 101))))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@4|)) (=> (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@4|) (and (=> (= (ControlFlow 0 2) (- 0 8)) (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@4|)) (=> (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@4|) (=> (and (= |let#6#0#0| |wcd#0@4|) ($Is DatatypeTypeType |let#6#0#0| (Tclass.DestructorTests.WithCommonDestructors TBool TReal))) (=> (and (and (= |dt_update_tmp#5#Z#0@0| |let#6#0#0|) (= |let#7#0#0| (LitInt 12))) (and ($Is intType (int_2_U |let#7#0#0|) TInt) (= |dt_update#y#1#Z#0@0| |let#7#0#0|))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (DestructorTests.WithCommonDestructors.CtorAB_q |dt_update_tmp#5#Z#0@0|) (DestructorTests.WithCommonDestructors.CtorB_q |dt_update_tmp#5#Z#0@0|))) (=> (or (DestructorTests.WithCommonDestructors.CtorAB_q |dt_update_tmp#5#Z#0@0|) (DestructorTests.WithCommonDestructors.CtorB_q |dt_update_tmp#5#Z#0@0|)) (=> (= |wcd#0@5| (let ((|dt_update_tmp#5#0| |wcd#0@4|))
(let ((|dt_update#y#1#0| (LitInt 12)))
(|#DestructorTests.WithCommonDestructors.CtorB| (DestructorTests.WithCommonDestructors.b |dt_update_tmp#5#0|) |dt_update#y#1#0| (LitInt 102))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@5|)) (=> (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@5|) (and (=> (= (ControlFlow 0 2) (- 0 5)) (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@5|)) (=> (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@5|) (=> (= |let#8#0#0| |wcd#0@5|) (=> (and ($Is DatatypeTypeType |let#8#0#0| (Tclass.DestructorTests.WithCommonDestructors TBool TReal)) (= |dt_update_tmp#6#Z#0@0| |let#8#0#0|)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (DestructorTests.WithCommonDestructors.CtorAB_q |dt_update_tmp#6#Z#0@0|) (DestructorTests.WithCommonDestructors.CtorB_q |dt_update_tmp#6#Z#0@0|))) (=> (or (DestructorTests.WithCommonDestructors.CtorAB_q |dt_update_tmp#6#Z#0@0|) (DestructorTests.WithCommonDestructors.CtorB_q |dt_update_tmp#6#Z#0@0|)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (DestructorTests.WithCommonDestructors.CtorB_q |dt_update_tmp#6#Z#0@0|)) (=> (DestructorTests.WithCommonDestructors.CtorB_q |dt_update_tmp#6#Z#0@0|) (=> (and (= |wcd#0@6| (let ((|dt_update_tmp#6#0| |wcd#0@5|))
(|#DestructorTests.WithCommonDestructors.CtorB| (DestructorTests.WithCommonDestructors.b |dt_update_tmp#6#0|) (DestructorTests.WithCommonDestructors.y |dt_update_tmp#6#0|) (LitInt 103)))) (= (ControlFlow 0 2) (- 0 1))) (DestructorTests.WithCommonDestructors.CtorB_q |wcd#0@6|))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let ((PreconditionGeneratedEntry_correct  (=> (and ($IsGoodHeap $Heap) ($IsHeapAnchor $Heap)) (=> (and (and (and ($Is DatatypeTypeType |wcd#0| (Tclass.DestructorTests.WithCommonDestructors TBool TReal)) ($IsAlloc DatatypeTypeType |wcd#0| (Tclass.DestructorTests.WithCommonDestructors TBool TReal) $Heap)) true) (and (= 1 $FunctionContextHeight) (= (ControlFlow 0 29) 2))) anon0_correct))))
PreconditionGeneratedEntry_correct)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
