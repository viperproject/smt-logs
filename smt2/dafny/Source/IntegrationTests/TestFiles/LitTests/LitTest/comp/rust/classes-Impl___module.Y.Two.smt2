(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@T T@T) T@T)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@64 (T@U) Int)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) T@U)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@79 (T@T T@U T@U) Bool)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@100 (Int) Int)
(declare-fun $generated@@102 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@117 (T@U T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@163 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert  (and (and (and (and (and (and (and (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@32 $generated@@45 $generated@@46 ($generated@@42 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@32 $generated@@50 $generated@@51 ($generated@@42 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@32 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))) (= ($generated@@13 $generated@@33) 3)) (= ($generated@@13 $generated@@34) 4)) (= ($generated@@13 $generated@@35) 5)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@13 ($generated@@36 $generated@@56 $generated@@57)) 6))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@43 ($generated@@36 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@36 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@36 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@36 $generated@@60 $generated@@61))
))))
(assert  (=> (< 0 $generated@@29) (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (and (and ($generated@@37 $generated@@62) (and (or (not (= $generated@@63 $generated@@38)) (not true)) (= ($generated@@39 $generated@@63) $generated@@40))) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@62 $generated@@63) $generated@@2)))) ($generated@@41 $generated@@15 ($generated@@19 ($generated@@30 $generated@@63)) $generated $generated@@62))
 :pattern ( ($generated@@30 $generated@@63) ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@62 $generated@@63) $generated@@2)))
))))
(assert (= ($generated@@64 $generated@@2) 0))
(assert (= ($generated@@65 $generated) $generated@@0))
(assert (= ($generated@@66 $generated@@2) $generated@@3))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! ($generated@@68 ($generated@@67 $generated@@69 $generated@@70) $generated@@70)
 :pattern ( ($generated@@67 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@68 $generated@@71 $generated@@73) ($generated@@68 ($generated@@67 $generated@@71 $generated@@72) $generated@@73))
 :pattern ( ($generated@@67 $generated@@71 $generated@@72) ($generated@@68 $generated@@71 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@68 ($generated@@67 $generated@@74 $generated@@75) $generated@@76)  (or (= $generated@@76 $generated@@75) ($generated@@68 $generated@@74 $generated@@76)))
 :pattern ( ($generated@@68 ($generated@@67 $generated@@74 $generated@@75) $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (!  (not ($generated@@68 $generated@@77 $generated@@78))
 :pattern ( ($generated@@68 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@79 $generated@@35 $generated@@80 $generated@@40)  (or (= $generated@@80 $generated@@38) (= ($generated@@39 $generated@@80) $generated@@40)))
 :pattern ( ($generated@@79 $generated@@35 $generated@@80 $generated@@40))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@41 $generated@@35 $generated@@83 $generated@@81 $generated@@84) ($generated@@41 $generated@@35 $generated@@83 $generated@@82 $generated@@84))
 :pattern ( ($generated@@41 $generated@@35 $generated@@83 $generated@@81 $generated@@84))
 :pattern ( ($generated@@41 $generated@@35 $generated@@83 $generated@@82 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@41 $generated@@35 $generated@@86 $generated@@85 $generated@@87) ($generated@@41 $generated@@35 $generated@@86 $generated@@40 $generated@@87))
 :pattern ( ($generated@@41 $generated@@35 $generated@@86 $generated@@85 $generated@@87))
 :pattern ( ($generated@@41 $generated@@35 $generated@@86 $generated@@40 $generated@@87))
)))
(assert (= ($generated@@64 $generated@@88) 0))
(assert (= ($generated@@89 $generated@@7 $generated@@12) $generated@@88))
(assert ($generated@@90 $generated@@88))
(assert (= ($generated@@64 $generated@@91) 0))
(assert (= ($generated@@89 $generated@@7 $generated@@11) $generated@@91))
(assert  (not ($generated@@90 $generated@@91)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@41 $generated@@35 $generated@@92 $generated@@82 $generated@@93)  (or (= $generated@@92 $generated@@38) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@93 $generated@@92) $generated@@2)))))
 :pattern ( ($generated@@41 $generated@@35 $generated@@92 $generated@@82 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@41 $generated@@35 $generated@@94 $generated@@40 $generated@@95)  (or (= $generated@@94 $generated@@38) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@95 $generated@@94) $generated@@2)))))
 :pattern ( ($generated@@41 $generated@@35 $generated@@94 $generated@@40 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@96 $generated@@97 $generated@@98) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@97 $generated@@99) $generated@@2))) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@98 $generated@@99) $generated@@2))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@98 $generated@@99) $generated@@2))
)))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 Int) ) (! (= ($generated@@100 $generated@@101) $generated@@101)
 :pattern ( ($generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@102 $generated@@104 $generated@@103) $generated@@103)
 :pattern ( ($generated@@102 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 ($generated@@31 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@31 $generated@@107 $generated@@106))
)))
(assert  (=> (< 0 $generated@@29) (forall (($generated@@108 T@U) ) (!  (=> (and (or (not (= $generated@@108 $generated@@38)) (not true)) (= ($generated@@39 $generated@@108) $generated@@40)) ($generated@@79 $generated@@15 ($generated@@19 ($generated@@30 $generated@@108)) $generated))
 :pattern ( ($generated@@30 $generated@@108))
))))
(assert (= ($generated@@13 $generated@@109) 7))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@79 $generated@@109 $generated@@112 ($generated@@110 $generated@@113)) (forall (($generated@@114 T@U) ) (!  (=> ($generated@@68 $generated@@112 $generated@@114) ($generated@@111 $generated@@114 $generated@@113))
 :pattern ( ($generated@@68 $generated@@112 $generated@@114))
)))
 :pattern ( ($generated@@79 $generated@@109 $generated@@112 ($generated@@110 $generated@@113)))
)))
(assert ($generated@@90 $generated@@2))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and (and ($generated@@37 $generated@@115) (and (or (not (= $generated@@116 $generated@@38)) (not true)) (= ($generated@@39 $generated@@116) $generated@@40))) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@115 $generated@@116) $generated@@2)))) ($generated@@41 $generated@@15 ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@115 $generated@@116) $generated@@91)) $generated $generated@@115))
 :pattern ( ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@115 $generated@@116) $generated@@91)))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@117 ($generated@@105 $generated@@121 $generated@@118) $generated@@119 $generated@@120) ($generated@@41 $generated@@121 $generated@@118 $generated@@119 $generated@@120))
 :pattern ( ($generated@@117 ($generated@@105 $generated@@121 $generated@@118) $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> ($generated@@96 $generated@@122 $generated@@123) (=> ($generated@@117 $generated@@124 $generated@@125 $generated@@122) ($generated@@117 $generated@@124 $generated@@125 $generated@@123)))
 :pattern ( ($generated@@96 $generated@@122 $generated@@123) ($generated@@117 $generated@@124 $generated@@125 $generated@@122))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@T) ) (!  (=> ($generated@@96 $generated@@126 $generated@@127) (=> ($generated@@41 $generated@@130 $generated@@128 $generated@@129 $generated@@126) ($generated@@41 $generated@@130 $generated@@128 $generated@@129 $generated@@127)))
 :pattern ( ($generated@@96 $generated@@126 $generated@@127) ($generated@@41 $generated@@130 $generated@@128 $generated@@129 $generated@@126))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@111 $generated@@131 $generated@@82) (and (= ($generated@@105 $generated@@35 ($generated@@31 $generated@@35 $generated@@131)) $generated@@131) ($generated@@79 $generated@@35 ($generated@@31 $generated@@35 $generated@@131) $generated@@82)))
 :pattern ( ($generated@@111 $generated@@131 $generated@@82))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@111 $generated@@132 $generated@@81) (and (= ($generated@@105 $generated@@35 ($generated@@31 $generated@@35 $generated@@132)) $generated@@132) ($generated@@79 $generated@@35 ($generated@@31 $generated@@35 $generated@@132) $generated@@81)))
 :pattern ( ($generated@@111 $generated@@132 $generated@@81))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@111 $generated@@133 $generated@@85) (and (= ($generated@@105 $generated@@35 ($generated@@31 $generated@@35 $generated@@133)) $generated@@133) ($generated@@79 $generated@@35 ($generated@@31 $generated@@35 $generated@@133) $generated@@85)))
 :pattern ( ($generated@@111 $generated@@133 $generated@@85))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@111 $generated@@134 $generated@@40) (and (= ($generated@@105 $generated@@35 ($generated@@31 $generated@@35 $generated@@134)) $generated@@134) ($generated@@79 $generated@@35 ($generated@@31 $generated@@35 $generated@@134) $generated@@40)))
 :pattern ( ($generated@@111 $generated@@134 $generated@@40))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@79 $generated@@35 $generated@@135 $generated@@81)  (and ($generated@@79 $generated@@35 $generated@@135 $generated@@82) (or (not (= $generated@@135 $generated@@38)) (not true))))
 :pattern ( ($generated@@79 $generated@@35 $generated@@135 $generated@@81))
 :pattern ( ($generated@@79 $generated@@35 $generated@@135 $generated@@82))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@79 $generated@@35 $generated@@136 $generated@@85)  (and ($generated@@79 $generated@@35 $generated@@136 $generated@@40) (or (not (= $generated@@136 $generated@@38)) (not true))))
 :pattern ( ($generated@@79 $generated@@35 $generated@@136 $generated@@85))
 :pattern ( ($generated@@79 $generated@@35 $generated@@136 $generated@@40))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and ($generated@@37 $generated@@137) (and (or (not (= $generated@@138 $generated@@38)) (not true)) (= ($generated@@39 $generated@@138) $generated@@40))) ($generated@@79 $generated@@109 ($generated@@31 $generated@@109 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@137 $generated@@138) $generated@@88)) ($generated@@110 $generated@@81)))
 :pattern ( ($generated@@31 $generated@@109 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@137 $generated@@138) $generated@@88)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and ($generated@@37 $generated@@139) (and (or (not (= $generated@@140 $generated@@38)) (not true)) (= ($generated@@39 $generated@@140) $generated@@40))) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@139 $generated@@140) $generated@@2)))) ($generated@@41 $generated@@109 ($generated@@31 $generated@@109 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@139 $generated@@140) $generated@@88)) ($generated@@110 $generated@@81) $generated@@139))
 :pattern ( ($generated@@31 $generated@@109 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@139 $generated@@140) $generated@@88)))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (or (not (= $generated@@141 $generated@@143)) (not true)) (=> (and ($generated@@96 $generated@@141 $generated@@142) ($generated@@96 $generated@@142 $generated@@143)) ($generated@@96 $generated@@141 $generated@@143)))
 :pattern ( ($generated@@96 $generated@@141 $generated@@142) ($generated@@96 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (and (= ($generated@@144 ($generated@@89 $generated@@145 $generated@@146)) $generated@@145) (= ($generated@@66 ($generated@@89 $generated@@145 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@89 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@111 $generated@@147 $generated) (and (= ($generated@@105 $generated@@15 ($generated@@31 $generated@@15 $generated@@147)) $generated@@147) ($generated@@79 $generated@@15 ($generated@@31 $generated@@15 $generated@@147) $generated)))
 :pattern ( ($generated@@111 $generated@@147 $generated))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@111 ($generated@@105 $generated@@150 $generated@@148) $generated@@149) ($generated@@79 $generated@@150 $generated@@148 $generated@@149))
 :pattern ( ($generated@@111 ($generated@@105 $generated@@150 $generated@@148) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@41 $generated@@109 $generated@@151 ($generated@@110 $generated@@152) $generated@@153) (forall (($generated@@154 T@U) ) (!  (=> ($generated@@68 $generated@@151 $generated@@154) ($generated@@117 $generated@@154 $generated@@152 $generated@@153))
 :pattern ( ($generated@@68 $generated@@151 $generated@@154))
)))
 :pattern ( ($generated@@41 $generated@@109 $generated@@151 ($generated@@110 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! ($generated@@79 $generated@@35 $generated@@155 $generated@@82)
 :pattern ( ($generated@@79 $generated@@35 $generated@@155 $generated@@82))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@156 ($generated@@110 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@110 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@65 ($generated@@110 $generated@@158)) $generated@@1)
 :pattern ( ($generated@@110 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@31 $generated@@160 ($generated@@105 $generated@@160 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@105 $generated@@160 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@37 $generated@@161) (and (or (not (= $generated@@162 $generated@@38)) (not true)) (= ($generated@@39 $generated@@162) $generated@@40))) ($generated@@79 $generated@@15 ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@161 $generated@@162) $generated@@91)) $generated))
 :pattern ( ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@161 $generated@@162) $generated@@91)))
)))
(assert  (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@163 $generated@@166 $generated@@167 $generated@@168 ($generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@171 $generated@@172) $generated@@169)
 :weight 0
)) (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@163 $generated@@173 $generated@@174 $generated@@175 ($generated@@165 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@163 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@163 $generated@@182 $generated@@183 $generated@@184 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@163 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 Bool) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@18 ($generated@@163 $generated@@35 $generated@@33 $generated@@14 ($generated@@164 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))  (=> (and (or (not (= $generated@@195 $generated@@191)) (not true)) ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@192 $generated@@195) $generated@@193)))) $generated@@194))
 :pattern ( ($generated@@163 $generated@@35 $generated@@33 $generated@@14 ($generated@@164 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@111 $generated@@197 ($generated@@110 $generated@@198)) (and (= ($generated@@105 $generated@@109 ($generated@@31 $generated@@109 $generated@@197)) $generated@@197) ($generated@@79 $generated@@109 ($generated@@31 $generated@@109 $generated@@197) ($generated@@110 $generated@@198))))
 :pattern ( ($generated@@111 $generated@@197 ($generated@@110 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@37 ($generated@@42 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@199 $generated@@200 ($generated@@42 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@199 $generated@@200) $generated@@201 $generated@@202))) ($generated@@96 $generated@@199 ($generated@@42 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@199 $generated@@200 ($generated@@42 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@199 $generated@@200) $generated@@201 $generated@@202))))
 :pattern ( ($generated@@42 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@199 $generated@@200 ($generated@@42 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@199 $generated@@200) $generated@@201 $generated@@202)))
)))
(assert (= ($generated@@65 $generated@@82) $generated@@4))
(assert (= ($generated@@203 $generated@@82) $generated@@9))
(assert (= ($generated@@65 $generated@@81) $generated@@5))
(assert (= ($generated@@203 $generated@@81) $generated@@9))
(assert (= ($generated@@65 $generated@@85) $generated@@6))
(assert (= ($generated@@203 $generated@@85) $generated@@10))
(assert (= ($generated@@65 $generated@@40) $generated@@8))
(assert (= ($generated@@203 $generated@@40) $generated@@10))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@105 $generated@@15 ($generated@@19 ($generated@@100 $generated@@204))) ($generated@@102 $generated@@34 ($generated@@105 $generated@@15 ($generated@@19 $generated@@204))))
 :pattern ( ($generated@@105 $generated@@15 ($generated@@19 ($generated@@100 $generated@@204))))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@T) ) (! (= ($generated@@105 $generated@@206 ($generated@@102 $generated@@206 $generated@@205)) ($generated@@102 $generated@@34 ($generated@@105 $generated@@206 $generated@@205)))
 :pattern ( ($generated@@105 $generated@@206 ($generated@@102 $generated@@206 $generated@@205)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! ($generated@@41 $generated@@15 $generated@@208 $generated $generated@@207)
 :pattern ( ($generated@@41 $generated@@15 $generated@@208 $generated $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ) (! ($generated@@79 $generated@@15 $generated@@209 $generated)
 :pattern ( ($generated@@79 $generated@@15 $generated@@209 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@217  (=> (= $generated@@210 ($generated@@164 $generated@@38 $generated@@211 $generated@@2 false)) (=> (and (= $generated@@212 ($generated@@100 2)) (= $generated@@213 ($generated@@67 $generated@@77 ($generated@@105 $generated@@35 $generated@@214)))) (=> (and (and (and (and (or (not (= $generated@@214 $generated@@38)) (not true)) ($generated@@79 $generated@@35 $generated@@214 $generated@@40)) (not ($generated@@18 ($generated@@31 $generated@@14 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@211 $generated@@214) $generated@@2))))) (and (= ($generated@@20 ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@211 $generated@@214) $generated@@91))) $generated@@212) (= ($generated@@31 $generated@@109 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@211 $generated@@214) $generated@@88)) $generated@@213))) (and (and (= ($generated@@30 $generated@@214) $generated@@212) (= $generated@@215 ($generated@@42 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@211 $generated@@214 ($generated@@42 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@211 $generated@@214) $generated@@2 ($generated@@105 $generated@@14 ($generated@@17 true)))))) (and ($generated@@37 $generated@@215) ($generated@@216 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@20 ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@215 $generated@@214) $generated@@91))) ($generated@@100 2))) (=> (= ($generated@@20 ($generated@@31 $generated@@15 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@35 ($generated@@36 $generated@@33 $generated@@34) $generated@@215 $generated@@214) $generated@@91))) ($generated@@100 2)) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@100 2) ($generated@@30 $generated@@214))))))))))
(let (($generated@@218  (=> (and (and ($generated@@37 $generated@@211) ($generated@@216 $generated@@211)) (and (= 1 $generated@@29) (= (ControlFlow 0 4) 2))) $generated@@217)))
$generated@@218)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
