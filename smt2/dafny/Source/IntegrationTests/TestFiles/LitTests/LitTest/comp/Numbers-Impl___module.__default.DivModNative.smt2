(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun |Seq#Length| (T@U) Int)
(declare-fun |Seq#Empty| () T@U)
(declare-fun Ctor (T@T) Int)
(declare-fun boolType () T@T)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun $HeapSucc (T@U T@U) Bool)
(declare-fun MapType0Select (T@T T@T T@U T@U) T@U)
(declare-fun FieldType () T@T)
(declare-fun BoxType () T@T)
(declare-fun refType () T@T)
(declare-fun MapType0Type (T@T T@T) T@T)
(declare-fun alloc () T@U)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun MapType0Store (T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType0TypeInv0 (T@T) T@T)
(declare-fun MapType0TypeInv1 (T@T) T@T)
(declare-fun LitInt (Int) Int)
(declare-fun Lit (T@T T@U) T@U)
(declare-fun $Box (T@T T@U) T@U)
(declare-fun |Seq#Build| (T@U T@U) T@U)
(declare-fun Div (Int Int) Int)
(declare-fun |char#FromInt| (Int) T@U)
(declare-fun |char#ToInt| (T@U) Int)
(declare-fun MapType1Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun |lambda#0| (T@U T@U T@U Bool) T@U)
(declare-fun MapType1Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun Mod (Int Int) Int)
(declare-fun |Seq#Build_inv0| (T@U) T@U)
(declare-fun |Seq#Build_inv1| (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= (Ctor boolType) 0) (= (Ctor intType) 1)) (= (Ctor realType) 2)) (forall ((arg0 Bool) ) (! (= (U_2_bool (bool_2_U arg0)) arg0)
 :pattern ( (bool_2_U arg0))
))) (forall ((x T@U) ) (! (= (bool_2_U (U_2_bool x)) x)
 :pattern ( (U_2_bool x))
))) (forall ((arg0@@0 Int) ) (! (= (U_2_int (int_2_U arg0@@0)) arg0@@0)
 :pattern ( (int_2_U arg0@@0))
))) (forall ((x@@0 T@U) ) (! (= (int_2_U (U_2_int x@@0)) x@@0)
 :pattern ( (U_2_int x@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@1 T@U) ) (! (= (real_2_U (U_2_real x@@1)) x@@1)
 :pattern ( (U_2_real x@@1))
))))
(assert (= (|Seq#Length| |Seq#Empty|) 0))
(assert  (and (and (and (and (and (and (and (forall ((t0 T@T) (t1 T@T) (val T@U) (m T@U) (x0 T@U) ) (! (= (MapType0Select t0 t1 (MapType0Store t0 t1 m x0 val) x0) val)
 :weight 0
)) (forall ((u0 T@T) (u1 T@T) (val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (y0 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select u0 u1 (MapType0Store u0 u1 m@@0 x0@@0 val@@0) y0) (MapType0Select u0 u1 m@@0 y0)))
 :weight 0
))) (= (Ctor FieldType) 3)) (= (Ctor BoxType) 4)) (= (Ctor refType) 5)) (forall ((arg0@@2 T@T) (arg1 T@T) ) (= (Ctor (MapType0Type arg0@@2 arg1)) 6))) (forall ((arg0@@3 T@T) (arg1@@0 T@T) ) (! (= (MapType0TypeInv0 (MapType0Type arg0@@3 arg1@@0)) arg0@@3)
 :pattern ( (MapType0Type arg0@@3 arg1@@0))
))) (forall ((arg0@@4 T@T) (arg1@@1 T@T) ) (! (= (MapType0TypeInv1 (MapType0Type arg0@@4 arg1@@1)) arg1@@1)
 :pattern ( (MapType0Type arg0@@4 arg1@@1))
))))
(assert (forall ((h T@U) (k T@U) ) (!  (=> ($HeapSucc h k) (forall ((o T@U) ) (!  (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h o) alloc))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o) alloc))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o) alloc))
)))
 :pattern ( ($HeapSucc h k))
)))
(assert (forall ((x@@2 Int) ) (! (= (LitInt x@@2) x@@2)
 :pattern ( (LitInt x@@2))
)))
(assert (forall ((x@@3 T@U) (T T@T) ) (! (= (Lit T x@@3) x@@3)
 :pattern ( (Lit T x@@3))
)))
(assert (forall ((x@@4 T@U) (T@@0 T@T) ) (! (= ($Box T@@0 ($Unbox T@@0 x@@4)) x@@4)
 :pattern ( ($Unbox T@@0 x@@4))
)))
(assert (forall ((s T@U) (v T@U) ) (! (= (|Seq#Length| (|Seq#Build| s v)) (+ 1 (|Seq#Length| s)))
 :pattern ( (|Seq#Build| s v))
)))
(assert (forall ((x@@5 Int) (y Int) ) (! (= (Div x@@5 y) (div x@@5 y))
 :pattern ( (Div x@@5 y))
)))
(assert (forall ((a T@U) (b T@U) (c T@U) ) (!  (=> (or (not (= a c)) (not true)) (=> (and ($HeapSucc a b) ($HeapSucc b c)) ($HeapSucc a c)))
 :pattern ( ($HeapSucc a b) ($HeapSucc b c))
)))
(assert (forall ((s@@0 T@U) ) (! (<= 0 (|Seq#Length| s@@0))
 :pattern ( (|Seq#Length| s@@0))
)))
(assert (forall ((x@@6 T@U) (T@@1 T@T) ) (! (= ($Unbox T@@1 ($Box T@@1 x@@6)) x@@6)
 :pattern ( ($Box T@@1 x@@6))
)))
(assert (forall ((n Int) ) (!  (=> (or (and (<= 0 n) (< n 55296)) (and (<= 57344 n) (< n 1114112))) (= (|char#ToInt| (|char#FromInt| n)) n))
 :pattern ( (|char#FromInt| n))
)))
(assert  (and (forall ((t0@@0 T@T) (t1@@0 T@T) (t2 T@T) (val@@1 T@U) (m@@1 T@U) (x0@@1 T@U) (x1 T@U) ) (! (= (MapType1Select t0@@0 t1@@0 t2 (MapType1Store t0@@0 t1@@0 t2 m@@1 x0@@1 x1 val@@1) x0@@1 x1) val@@1)
 :weight 0
)) (and (forall ((u0@@0 T@T) (u1@@0 T@T) (u2 T@T) (val@@2 T@U) (m@@2 T@U) (x0@@2 T@U) (x1@@0 T@U) (y0@@0 T@U) (y1 T@U) ) (!  (or (= x0@@2 y0@@0) (= (MapType1Select u0@@0 u1@@0 u2 (MapType1Store u0@@0 u1@@0 u2 m@@2 x0@@2 x1@@0 val@@2) y0@@0 y1) (MapType1Select u0@@0 u1@@0 u2 m@@2 y0@@0 y1)))
 :weight 0
)) (forall ((u0@@1 T@T) (u1@@1 T@T) (u2@@0 T@T) (val@@3 T@U) (m@@3 T@U) (x0@@3 T@U) (x1@@1 T@U) (y0@@1 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType1Select u0@@1 u1@@1 u2@@0 (MapType1Store u0@@1 u1@@1 u2@@0 m@@3 x0@@3 x1@@1 val@@3) y0@@1 y1@@0) (MapType1Select u0@@1 u1@@1 u2@@0 m@@3 y0@@1 y1@@0)))
 :weight 0
)))))
(assert (forall ((|l#0| T@U) (|l#1| T@U) (|l#2| T@U) (|l#3| Bool) ($o T@U) ($f T@U) ) (! (= (U_2_bool (MapType1Select refType FieldType boolType (|lambda#0| |l#0| |l#1| |l#2| |l#3|) $o $f))  (=> (and (or (not (= $o |l#0|)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) |l#1| $o) |l#2|)))) |l#3|))
 :pattern ( (MapType1Select refType FieldType boolType (|lambda#0| |l#0| |l#1| |l#2| |l#3|) $o $f))
)))
(assert (forall ((x@@7 Int) (y@@0 Int) ) (! (= (Mod x@@7 y@@0) (mod x@@7 y@@0))
 :pattern ( (Mod x@@7 y@@0))
)))
(assert (forall ((s@@1 T@U) (val@@4 T@U) ) (!  (and (= (|Seq#Build_inv0| (|Seq#Build| s@@1 val@@4)) s@@1) (= (|Seq#Build_inv1| (|Seq#Build| s@@1 val@@4)) val@@4))
 :pattern ( (|Seq#Build| s@@1 val@@4))
)))
(assert (forall ((ch T@U) ) (!  (and (= (|char#FromInt| (|char#ToInt| ch)) ch) (or (and (<= 0 (|char#ToInt| ch)) (< (|char#ToInt| ch) 55296)) (and (<= 57344 (|char#ToInt| ch)) (< (|char#ToInt| ch) 1114112))))
 :pattern ( (|char#ToInt| ch))
)))
(assert (forall ((x@@8 Int) ) (! (= ($Box intType (int_2_U (LitInt x@@8))) (Lit BoxType ($Box intType (int_2_U x@@8))))
 :pattern ( ($Box intType (int_2_U (LitInt x@@8))))
)))
(assert (forall ((x@@9 T@U) (T@@2 T@T) ) (! (= ($Box T@@2 (Lit T@@2 x@@9)) (Lit BoxType ($Box T@@2 x@@9)))
 :pattern ( ($Box T@@2 (Lit T@@2 x@@9)))
)))
(assert (forall ((s@@2 T@U) ) (!  (=> (= (|Seq#Length| s@@2) 0) (= s@@2 |Seq#Empty|))
 :pattern ( (|Seq#Length| s@@2))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun |$rhs#1@0| () Int)
(declare-fun |$rhs#0@0| () Int)
(declare-fun |suffix##12@0| () T@U)
(declare-fun SeqType () T@T)
(declare-fun charType () T@T)
(declare-fun $IsGoodHeap (T@U) Bool)
(declare-fun $Heap@12 () T@U)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun null () T@U)
(declare-fun $Heap@11 () T@U)
(declare-fun |a##9@0| () Int)
(declare-fun |suffix##13@0| () T@U)
(declare-fun $Heap@13 () T@U)
(declare-fun |b##10@0| () Int)
(declare-fun |suffix##14@0| () T@U)
(declare-fun $Heap@14 () T@U)
(declare-fun |a##11@0| () Int)
(declare-fun |b##11@0| () Int)
(declare-fun |suffix##15@0| () T@U)
(declare-fun $Heap@15 () T@U)
(declare-fun |a##12@0| () Int)
(declare-fun |b##12@0| () Int)
(declare-fun |suffix##16@0| () T@U)
(declare-fun $Heap@16 () T@U)
(declare-fun |a##13@0| () Int)
(declare-fun |b##13@0| () Int)
(declare-fun |suffix##17@0| () T@U)
(declare-fun $Heap@17 () T@U)
(declare-fun |newtype$check#16@0| () Int)
(declare-fun |$rhs#2@0| () Int)
(declare-fun |newtype$check#17@0| () Int)
(declare-fun |$rhs#3@0| () Int)
(declare-fun |newtype$check#18@0| () Int)
(declare-fun |$rhs#4@0| () Int)
(declare-fun |newtype$check#19@0| () Int)
(declare-fun |$rhs#5@0| () Int)
(declare-fun |newtype$check#20@0| () Int)
(declare-fun |$rhs#6@0| () Int)
(declare-fun |newtype$check#21@0| () Int)
(declare-fun |$rhs#7@0| () Int)
(declare-fun |newtype$check#22@0| () Int)
(declare-fun |$rhs#8@0| () Int)
(declare-fun |newtype$check#23@0| () Int)
(declare-fun |$rhs#9@0| () Int)
(declare-fun |suffix##18@0| () T@U)
(declare-fun $Heap@18 () T@U)
(declare-fun |newtype$check#24@0| () Int)
(declare-fun |newtype$check#25@0| () Int)
(declare-fun |a##15@0| () Int)
(declare-fun |suffix##19@0| () T@U)
(declare-fun $Heap@19 () T@U)
(declare-fun |newtype$check#26@0| () Int)
(declare-fun |newtype$check#27@0| () Int)
(declare-fun |b##16@0| () Int)
(declare-fun |suffix##20@0| () T@U)
(declare-fun $Heap@20 () T@U)
(declare-fun |newtype$check#28@0| () Int)
(declare-fun |newtype$check#29@0| () Int)
(declare-fun |a##17@0| () Int)
(declare-fun |newtype$check#30@0| () Int)
(declare-fun |newtype$check#31@0| () Int)
(declare-fun |b##17@0| () Int)
(declare-fun |suffix##21@0| () T@U)
(declare-fun $Heap@21 () T@U)
(declare-fun |newtype$check#32@0| () Int)
(declare-fun |a##18@0| () Int)
(declare-fun |newtype$check#33@0| () Int)
(declare-fun |b##18@0| () Int)
(declare-fun |suffix##22@0| () T@U)
(declare-fun $Heap@22 () T@U)
(declare-fun |newtype$check#34@0| () Int)
(declare-fun |a##19@0| () Int)
(declare-fun |newtype$check#35@0| () Int)
(declare-fun |b##19@0| () Int)
(declare-fun |suffix##23@0| () T@U)
(declare-fun $Heap@23 () T@U)
(declare-fun |suffix##24@0| () T@U)
(declare-fun $Heap@24 () T@U)
(declare-fun |newtype$check#36@0| () Int)
(declare-fun |newtype$check#37@0| () Int)
(declare-fun |a##21@0| () Int)
(declare-fun |suffix##25@0| () T@U)
(declare-fun $Heap@25 () T@U)
(declare-fun |newtype$check#38@0| () Int)
(declare-fun |newtype$check#39@0| () Int)
(declare-fun |b##22@0| () Int)
(declare-fun |suffix##26@0| () T@U)
(declare-fun $Heap@26 () T@U)
(declare-fun |newtype$check#40@0| () Int)
(declare-fun |newtype$check#41@0| () Int)
(declare-fun |a##23@0| () Int)
(declare-fun |newtype$check#42@0| () Int)
(declare-fun |newtype$check#43@0| () Int)
(declare-fun |b##23@0| () Int)
(declare-fun |suffix##27@0| () T@U)
(declare-fun $Heap@27 () T@U)
(declare-fun |newtype$check#44@0| () Int)
(declare-fun |a##24@0| () Int)
(declare-fun |newtype$check#45@0| () Int)
(declare-fun |b##24@0| () Int)
(declare-fun |suffix##28@0| () T@U)
(declare-fun $Heap@28 () T@U)
(declare-fun |newtype$check#46@0| () Int)
(declare-fun |a##25@0| () Int)
(declare-fun |newtype$check#47@0| () Int)
(declare-fun |b##25@0| () Int)
(declare-fun |suffix##29@0| () T@U)
(declare-fun $Heap@29 () T@U)
(declare-fun |suffix##30@0| () T@U)
(declare-fun $Heap@30 () T@U)
(declare-fun |newtype$check#48@0| () Int)
(declare-fun |newtype$check#49@0| () Int)
(declare-fun |a##27@0| () Int)
(declare-fun |suffix##31@0| () T@U)
(declare-fun $Heap@31 () T@U)
(declare-fun |newtype$check#50@0| () Int)
(declare-fun |newtype$check#51@0| () Int)
(declare-fun |b##28@0| () Int)
(declare-fun |suffix##32@0| () T@U)
(declare-fun $Heap@32 () T@U)
(declare-fun |newtype$check#52@0| () Int)
(declare-fun |newtype$check#53@0| () Int)
(declare-fun |a##29@0| () Int)
(declare-fun |newtype$check#54@0| () Int)
(declare-fun |newtype$check#55@0| () Int)
(declare-fun |b##29@0| () Int)
(declare-fun |suffix##33@0| () T@U)
(declare-fun $Heap@33 () T@U)
(declare-fun |newtype$check#56@0| () Int)
(declare-fun |a##30@0| () Int)
(declare-fun |newtype$check#57@0| () Int)
(declare-fun |b##30@0| () Int)
(declare-fun |suffix##34@0| () T@U)
(declare-fun $Heap@34 () T@U)
(declare-fun |newtype$check#58@0| () Int)
(declare-fun |a##31@0| () Int)
(declare-fun |newtype$check#59@0| () Int)
(declare-fun |b##31@0| () Int)
(declare-fun |suffix##35@0| () T@U)
(declare-fun $Heap@35 () T@U)
(declare-fun |suffix##36@0| () T@U)
(declare-fun $Heap@36 () T@U)
(declare-fun |newtype$check#60@0| () Int)
(declare-fun |newtype$check#61@0| () Int)
(declare-fun |a##33@0| () Int)
(declare-fun |suffix##37@0| () T@U)
(declare-fun $Heap@37 () T@U)
(declare-fun |newtype$check#62@0| () Int)
(declare-fun |newtype$check#63@0| () Int)
(declare-fun |b##34@0| () Int)
(declare-fun |suffix##38@0| () T@U)
(declare-fun $Heap@38 () T@U)
(declare-fun |newtype$check#64@0| () Int)
(declare-fun |newtype$check#65@0| () Int)
(declare-fun |a##35@0| () Int)
(declare-fun |newtype$check#66@0| () Int)
(declare-fun |newtype$check#67@0| () Int)
(declare-fun |b##35@0| () Int)
(declare-fun |suffix##39@0| () T@U)
(declare-fun $Heap@39 () T@U)
(declare-fun |newtype$check#68@0| () Int)
(declare-fun |a##36@0| () Int)
(declare-fun |newtype$check#69@0| () Int)
(declare-fun |b##36@0| () Int)
(declare-fun |suffix##40@0| () T@U)
(declare-fun $Heap@40 () T@U)
(declare-fun |newtype$check#70@0| () Int)
(declare-fun |a##37@0| () Int)
(declare-fun |newtype$check#71@0| () Int)
(declare-fun |b##37@0| () Int)
(declare-fun |suffix##41@0| () T@U)
(declare-fun $_ModifiesFrame@0 () T@U)
(declare-fun $Heap () T@U)
(declare-fun |newtype$check#0@0| () Int)
(declare-fun |a##0@0| () Int)
(declare-fun |newtype$check#1@0| () Int)
(declare-fun |b##0@0| () Int)
(declare-fun |suffix##0@0| () T@U)
(declare-fun $Heap@0 () T@U)
(declare-fun |newtype$check#2@0| () Int)
(declare-fun |a##1@0| () Int)
(declare-fun |newtype$check#3@0| () Int)
(declare-fun |b##1@0| () Int)
(declare-fun |suffix##1@0| () T@U)
(declare-fun $Heap@1 () T@U)
(declare-fun |newtype$check#4@0| () Int)
(declare-fun |a##2@0| () Int)
(declare-fun |newtype$check#5@0| () Int)
(declare-fun |b##2@0| () Int)
(declare-fun |suffix##2@0| () T@U)
(declare-fun $Heap@2 () T@U)
(declare-fun |newtype$check#6@0| () Int)
(declare-fun |a##3@0| () Int)
(declare-fun |newtype$check#7@0| () Int)
(declare-fun |b##3@0| () Int)
(declare-fun |suffix##3@0| () T@U)
(declare-fun $Heap@3 () T@U)
(declare-fun |newtype$check#8@0| () Int)
(declare-fun |a##4@0| () Int)
(declare-fun |newtype$check#9@0| () Int)
(declare-fun |b##4@0| () Int)
(declare-fun |suffix##4@0| () T@U)
(declare-fun $Heap@4 () T@U)
(declare-fun |newtype$check#10@0| () Int)
(declare-fun |a##5@0| () Int)
(declare-fun |newtype$check#11@0| () Int)
(declare-fun |b##5@0| () Int)
(declare-fun |suffix##5@0| () T@U)
(declare-fun $Heap@5 () T@U)
(declare-fun |newtype$check#12@0| () Int)
(declare-fun |a##6@0| () Int)
(declare-fun |newtype$check#13@0| () Int)
(declare-fun |b##6@0| () Int)
(declare-fun |suffix##6@0| () T@U)
(declare-fun $Heap@6 () T@U)
(declare-fun |newtype$check#14@0| () Int)
(declare-fun |a##7@0| () Int)
(declare-fun |newtype$check#15@0| () Int)
(declare-fun |b##7@0| () Int)
(declare-fun |suffix##7@0| () T@U)
(declare-fun $Heap@7 () T@U)
(declare-fun |suffix##8@0| () T@U)
(declare-fun $Heap@8 () T@U)
(declare-fun |i##1@0| () Int)
(declare-fun |suffix##9@0| () T@U)
(declare-fun $Heap@9 () T@U)
(declare-fun |j##2@0| () Int)
(declare-fun |suffix##10@0| () T@U)
(declare-fun $Heap@10 () T@U)
(declare-fun |i##3@0| () Int)
(declare-fun |j##3@0| () Int)
(declare-fun |suffix##11@0| () T@U)
(declare-fun |i8#0| () Int)
(declare-fun |j8#0| () Int)
(declare-fun |i16#0| () Int)
(declare-fun |j16#0| () Int)
(declare-fun |i32#0| () Int)
(declare-fun |j32#0| () Int)
(declare-fun |i64#0| () Int)
(declare-fun |j64#0| () Int)
(declare-fun $FunctionContextHeight () Int)
(assert  (and (= (Ctor SeqType) 7) (= (Ctor charType) 8)))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 168) (let ((anon8_correct  (and (=> (= (ControlFlow 0 2) (- 0 113)) (= (Div (- 0 103) (- 0 |$rhs#1@0|)) (LitInt 8))) (and (=> (= (ControlFlow 0 2) (- 0 112)) (= (Mod (- 0 |$rhs#0@0|) (- 0 |$rhs#1@0|)) (LitInt 1))) (=> (and (and (= (Div (- 0 103) (- 0 |$rhs#1@0|)) (LitInt 8)) (= (Mod (- 0 |$rhs#0@0|) (- 0 |$rhs#1@0|)) (LitInt 1))) (= |suffix##12@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 111)) (or (not (= |$rhs#1@0| 0)) (not true))) (=> (or (not (= |$rhs#1@0| 0)) (not true)) (=> (and ($IsGoodHeap $Heap@12) ($IsHeapAnchor $Heap@12)) (=> (and (and (forall (($o@@0 T@U) ) (!  (=> (and (or (not (= $o@@0 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@11 $o@@0) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@12 $o@@0) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@11 $o@@0)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@12 $o@@0))
)) ($HeapSucc $Heap@11 $Heap@12)) (and (= |a##9@0| (- 0 |$rhs#0@0|)) (= |suffix##13@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32))))))) (and (=> (= (ControlFlow 0 2) (- 0 110)) (or (not (= |$rhs#1@0| 0)) (not true))) (=> (or (not (= |$rhs#1@0| 0)) (not true)) (=> (and ($IsGoodHeap $Heap@13) ($IsHeapAnchor $Heap@13)) (=> (and (and (forall (($o@@1 T@U) ) (!  (=> (and (or (not (= $o@@1 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@12 $o@@1) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@13 $o@@1) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@12 $o@@1)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@13 $o@@1))
)) ($HeapSucc $Heap@12 $Heap@13)) (and (= |b##10@0| (- 0 |$rhs#1@0|)) (= |suffix##14@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32))))))) (and (=> (= (ControlFlow 0 2) (- 0 109)) (or (not (= |b##10@0| 0)) (not true))) (=> (or (not (= |b##10@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@14) ($IsHeapAnchor $Heap@14)) (forall (($o@@2 T@U) ) (!  (=> (and (or (not (= $o@@2 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@13 $o@@2) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@14 $o@@2) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@13 $o@@2)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@14 $o@@2))
))) (and (and ($HeapSucc $Heap@13 $Heap@14) (= |a##11@0| (- 0 |$rhs#0@0|))) (and (= |b##11@0| (- 0 |$rhs#1@0|)) (= |suffix##15@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))))) (and (=> (= (ControlFlow 0 2) (- 0 108)) (or (not (= |b##11@0| 0)) (not true))) (=> (or (not (= |b##11@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@15) ($IsHeapAnchor $Heap@15)) (forall (($o@@3 T@U) ) (!  (=> (and (or (not (= $o@@3 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@14 $o@@3) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@15 $o@@3) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@14 $o@@3)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@15 $o@@3))
))) (and (and ($HeapSucc $Heap@14 $Heap@15) (= |a##12@0| (LitInt (- 0 108)))) (and (= |b##12@0| (LitInt 9)) (= |suffix##16@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))))) (and (=> (= (ControlFlow 0 2) (- 0 107)) (or (not (= |b##12@0| 0)) (not true))) (=> (or (not (= |b##12@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@16) ($IsHeapAnchor $Heap@16)) (forall (($o@@4 T@U) ) (!  (=> (and (or (not (= $o@@4 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@15 $o@@4) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@16 $o@@4) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@15 $o@@4)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@16 $o@@4))
))) (and (and ($HeapSucc $Heap@15 $Heap@16) (= |a##13@0| (LitInt (- 0 108)))) (and (= |b##13@0| (LitInt (- 0 9))) (= |suffix##17@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 10)))))))) (and (=> (= (ControlFlow 0 2) (- 0 106)) (or (not (= |b##13@0| 0)) (not true))) (=> (or (not (= |b##13@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@17) ($IsHeapAnchor $Heap@17)) (forall (($o@@5 T@U) ) (!  (=> (and (or (not (= $o@@5 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@16 $o@@5) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@17 $o@@5) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@16 $o@@5)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@17 $o@@5))
))) (and ($HeapSucc $Heap@16 $Heap@17) (= |newtype$check#16@0| (LitInt 103)))) (and (=> (= (ControlFlow 0 2) (- 0 105)) (and (<= (LitInt (- 0 128)) |newtype$check#16@0|) (< |newtype$check#16@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#16@0|) (< |newtype$check#16@0| 128)) (=> (and (= |$rhs#2@0| (LitInt 103)) (= |newtype$check#17@0| (LitInt 13))) (and (=> (= (ControlFlow 0 2) (- 0 104)) (and (<= (LitInt (- 0 128)) |newtype$check#17@0|) (< |newtype$check#17@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#17@0|) (< |newtype$check#17@0| 128)) (=> (and (= |$rhs#3@0| (LitInt 13)) (= |newtype$check#18@0| (LitInt 103))) (and (=> (= (ControlFlow 0 2) (- 0 103)) (and (<= (LitInt (- 0 32768)) |newtype$check#18@0|) (< |newtype$check#18@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#18@0|) (< |newtype$check#18@0| 32768)) (=> (and (= |$rhs#4@0| (LitInt 103)) (= |newtype$check#19@0| (LitInt 13))) (and (=> (= (ControlFlow 0 2) (- 0 102)) (and (<= (LitInt (- 0 32768)) |newtype$check#19@0|) (< |newtype$check#19@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#19@0|) (< |newtype$check#19@0| 32768)) (=> (and (= |$rhs#5@0| (LitInt 13)) (= |newtype$check#20@0| (LitInt 103))) (and (=> (= (ControlFlow 0 2) (- 0 101)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#20@0|) (< |newtype$check#20@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#20@0|) (< |newtype$check#20@0| 2147483648)) (=> (and (= |$rhs#6@0| (LitInt 103)) (= |newtype$check#21@0| (LitInt 13))) (and (=> (= (ControlFlow 0 2) (- 0 100)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#21@0|) (< |newtype$check#21@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#21@0|) (< |newtype$check#21@0| 2147483648)) (=> (and (= |$rhs#7@0| (LitInt 13)) (= |newtype$check#22@0| (LitInt 103))) (and (=> (= (ControlFlow 0 2) (- 0 99)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#22@0|) (< |newtype$check#22@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#22@0|) (< |newtype$check#22@0| 9223372036854775808)) (=> (and (= |$rhs#8@0| (LitInt 103)) (= |newtype$check#23@0| (LitInt 13))) (and (=> (= (ControlFlow 0 2) (- 0 98)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#23@0|) (< |newtype$check#23@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#23@0|) (< |newtype$check#23@0| 9223372036854775808)) (=> (and (= |$rhs#9@0| (LitInt 13)) (= |suffix##18@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 97)) (or (not (= |$rhs#3@0| 0)) (not true))) (=> (or (not (= |$rhs#3@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 96)) (<= (LitInt (- 0 127)) |$rhs#2@0|)) (=> (<= (LitInt (- 0 127)) |$rhs#2@0|) (=> (and (and (and ($IsGoodHeap $Heap@18) ($IsHeapAnchor $Heap@18)) (forall (($o@@6 T@U) ) (!  (=> (and (or (not (= $o@@6 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@17 $o@@6) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@18 $o@@6) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@17 $o@@6)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@18 $o@@6))
))) (and ($HeapSucc $Heap@17 $Heap@18) (= |newtype$check#24@0| (LitInt 0)))) (and (=> (= (ControlFlow 0 2) (- 0 95)) (and (<= (LitInt (- 0 128)) |newtype$check#24@0|) (< |newtype$check#24@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#24@0|) (< |newtype$check#24@0| 128)) (=> (= |newtype$check#25@0| (- 0 |$rhs#2@0|)) (and (=> (= (ControlFlow 0 2) (- 0 94)) (and (<= (LitInt (- 0 128)) |newtype$check#25@0|) (< |newtype$check#25@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#25@0|) (< |newtype$check#25@0| 128)) (=> (and (= |a##15@0| (- 0 |$rhs#2@0|)) (= |suffix##19@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 93)) (or (not (= |$rhs#3@0| 0)) (not true))) (=> (or (not (= |$rhs#3@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 92)) (<= (LitInt (- 0 127)) |a##15@0|)) (=> (<= (LitInt (- 0 127)) |a##15@0|) (=> (and (and (and ($IsGoodHeap $Heap@19) ($IsHeapAnchor $Heap@19)) (forall (($o@@7 T@U) ) (!  (=> (and (or (not (= $o@@7 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@18 $o@@7) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@19 $o@@7) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@18 $o@@7)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@19 $o@@7))
))) (and ($HeapSucc $Heap@18 $Heap@19) (= |newtype$check#26@0| (LitInt 0)))) (and (=> (= (ControlFlow 0 2) (- 0 91)) (and (<= (LitInt (- 0 128)) |newtype$check#26@0|) (< |newtype$check#26@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#26@0|) (< |newtype$check#26@0| 128)) (=> (= |newtype$check#27@0| (- 0 |$rhs#3@0|)) (and (=> (= (ControlFlow 0 2) (- 0 90)) (and (<= (LitInt (- 0 128)) |newtype$check#27@0|) (< |newtype$check#27@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#27@0|) (< |newtype$check#27@0| 128)) (=> (and (= |b##16@0| (- 0 |$rhs#3@0|)) (= |suffix##20@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 89)) (or (not (= |b##16@0| 0)) (not true))) (=> (or (not (= |b##16@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 88)) (<= (LitInt (- 0 127)) |$rhs#2@0|)) (=> (<= (LitInt (- 0 127)) |$rhs#2@0|) (=> (and (and (and ($IsGoodHeap $Heap@20) ($IsHeapAnchor $Heap@20)) (forall (($o@@8 T@U) ) (!  (=> (and (or (not (= $o@@8 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@19 $o@@8) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@20 $o@@8) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@19 $o@@8)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@20 $o@@8))
))) (and ($HeapSucc $Heap@19 $Heap@20) (= |newtype$check#28@0| (LitInt 0)))) (and (=> (= (ControlFlow 0 2) (- 0 87)) (and (<= (LitInt (- 0 128)) |newtype$check#28@0|) (< |newtype$check#28@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#28@0|) (< |newtype$check#28@0| 128)) (=> (= |newtype$check#29@0| (- 0 |$rhs#2@0|)) (and (=> (= (ControlFlow 0 2) (- 0 86)) (and (<= (LitInt (- 0 128)) |newtype$check#29@0|) (< |newtype$check#29@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#29@0|) (< |newtype$check#29@0| 128)) (=> (and (= |a##17@0| (- 0 |$rhs#2@0|)) (= |newtype$check#30@0| (LitInt 0))) (and (=> (= (ControlFlow 0 2) (- 0 85)) (and (<= (LitInt (- 0 128)) |newtype$check#30@0|) (< |newtype$check#30@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#30@0|) (< |newtype$check#30@0| 128)) (=> (= |newtype$check#31@0| (- 0 |$rhs#3@0|)) (and (=> (= (ControlFlow 0 2) (- 0 84)) (and (<= (LitInt (- 0 128)) |newtype$check#31@0|) (< |newtype$check#31@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#31@0|) (< |newtype$check#31@0| 128)) (=> (and (= |b##17@0| (- 0 |$rhs#3@0|)) (= |suffix##21@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 83)) (or (not (= |b##17@0| 0)) (not true))) (=> (or (not (= |b##17@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 82)) (<= (LitInt (- 0 127)) |a##17@0|)) (=> (<= (LitInt (- 0 127)) |a##17@0|) (=> (and (and (and ($IsGoodHeap $Heap@21) ($IsHeapAnchor $Heap@21)) (forall (($o@@9 T@U) ) (!  (=> (and (or (not (= $o@@9 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@20 $o@@9) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@21 $o@@9) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@20 $o@@9)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@21 $o@@9))
))) (and ($HeapSucc $Heap@20 $Heap@21) (= |newtype$check#32@0| (LitInt (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 81)) (and (<= (LitInt (- 0 128)) |newtype$check#32@0|) (< |newtype$check#32@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#32@0|) (< |newtype$check#32@0| 128)) (=> (and (= |a##18@0| (LitInt (- 0 108))) (= |newtype$check#33@0| (LitInt 9))) (and (=> (= (ControlFlow 0 2) (- 0 80)) (and (<= (LitInt (- 0 128)) |newtype$check#33@0|) (< |newtype$check#33@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#33@0|) (< |newtype$check#33@0| 128)) (=> (and (= |b##18@0| (LitInt 9)) (= |suffix##22@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 79)) (or (not (= |b##18@0| 0)) (not true))) (=> (or (not (= |b##18@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 78)) (<= (LitInt (- 0 127)) |a##18@0|)) (=> (<= (LitInt (- 0 127)) |a##18@0|) (=> (and (and (and ($IsGoodHeap $Heap@22) ($IsHeapAnchor $Heap@22)) (forall (($o@@10 T@U) ) (!  (=> (and (or (not (= $o@@10 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@21 $o@@10) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@22 $o@@10) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@21 $o@@10)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@22 $o@@10))
))) (and ($HeapSucc $Heap@21 $Heap@22) (= |newtype$check#34@0| (LitInt (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 77)) (and (<= (LitInt (- 0 128)) |newtype$check#34@0|) (< |newtype$check#34@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#34@0|) (< |newtype$check#34@0| 128)) (=> (and (= |a##19@0| (LitInt (- 0 108))) (= |newtype$check#35@0| (LitInt (- 0 9)))) (and (=> (= (ControlFlow 0 2) (- 0 76)) (and (<= (LitInt (- 0 128)) |newtype$check#35@0|) (< |newtype$check#35@0| 128))) (=> (and (<= (LitInt (- 0 128)) |newtype$check#35@0|) (< |newtype$check#35@0| 128)) (=> (and (= |b##19@0| (LitInt (- 0 9))) (= |suffix##23@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 10)))))) (and (=> (= (ControlFlow 0 2) (- 0 75)) (or (not (= |b##19@0| 0)) (not true))) (=> (or (not (= |b##19@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 74)) (<= (LitInt (- 0 127)) |a##19@0|)) (=> (<= (LitInt (- 0 127)) |a##19@0|) (=> (and (and (and ($IsGoodHeap $Heap@23) ($IsHeapAnchor $Heap@23)) (forall (($o@@11 T@U) ) (!  (=> (and (or (not (= $o@@11 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@22 $o@@11) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@23 $o@@11) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@22 $o@@11)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@23 $o@@11))
))) (and ($HeapSucc $Heap@22 $Heap@23) (= |suffix##24@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32))))))) (and (=> (= (ControlFlow 0 2) (- 0 73)) (or (not (= |$rhs#5@0| 0)) (not true))) (=> (or (not (= |$rhs#5@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 72)) (<= (LitInt (- 0 32767)) |$rhs#4@0|)) (=> (<= (LitInt (- 0 32767)) |$rhs#4@0|) (=> (and (and (and ($IsGoodHeap $Heap@24) ($IsHeapAnchor $Heap@24)) (forall (($o@@12 T@U) ) (!  (=> (and (or (not (= $o@@12 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@23 $o@@12) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@24 $o@@12) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@23 $o@@12)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@24 $o@@12))
))) (and ($HeapSucc $Heap@23 $Heap@24) (= |newtype$check#36@0| (LitInt 0)))) (and (=> (= (ControlFlow 0 2) (- 0 71)) (and (<= (LitInt (- 0 32768)) |newtype$check#36@0|) (< |newtype$check#36@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#36@0|) (< |newtype$check#36@0| 32768)) (=> (= |newtype$check#37@0| (- 0 |$rhs#4@0|)) (and (=> (= (ControlFlow 0 2) (- 0 70)) (and (<= (LitInt (- 0 32768)) |newtype$check#37@0|) (< |newtype$check#37@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#37@0|) (< |newtype$check#37@0| 32768)) (=> (and (= |a##21@0| (- 0 |$rhs#4@0|)) (= |suffix##25@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 69)) (or (not (= |$rhs#5@0| 0)) (not true))) (=> (or (not (= |$rhs#5@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 68)) (<= (LitInt (- 0 32767)) |a##21@0|)) (=> (<= (LitInt (- 0 32767)) |a##21@0|) (=> (and (and (and ($IsGoodHeap $Heap@25) ($IsHeapAnchor $Heap@25)) (forall (($o@@13 T@U) ) (!  (=> (and (or (not (= $o@@13 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@24 $o@@13) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@25 $o@@13) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@24 $o@@13)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@25 $o@@13))
))) (and ($HeapSucc $Heap@24 $Heap@25) (= |newtype$check#38@0| (LitInt 0)))) (and (=> (= (ControlFlow 0 2) (- 0 67)) (and (<= (LitInt (- 0 32768)) |newtype$check#38@0|) (< |newtype$check#38@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#38@0|) (< |newtype$check#38@0| 32768)) (=> (= |newtype$check#39@0| (- 0 |$rhs#5@0|)) (and (=> (= (ControlFlow 0 2) (- 0 66)) (and (<= (LitInt (- 0 32768)) |newtype$check#39@0|) (< |newtype$check#39@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#39@0|) (< |newtype$check#39@0| 32768)) (=> (and (= |b##22@0| (- 0 |$rhs#5@0|)) (= |suffix##26@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 65)) (or (not (= |b##22@0| 0)) (not true))) (=> (or (not (= |b##22@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 64)) (<= (LitInt (- 0 32767)) |$rhs#4@0|)) (=> (<= (LitInt (- 0 32767)) |$rhs#4@0|) (=> (and (and (and ($IsGoodHeap $Heap@26) ($IsHeapAnchor $Heap@26)) (forall (($o@@14 T@U) ) (!  (=> (and (or (not (= $o@@14 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@25 $o@@14) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@26 $o@@14) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@25 $o@@14)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@26 $o@@14))
))) (and ($HeapSucc $Heap@25 $Heap@26) (= |newtype$check#40@0| (LitInt 0)))) (and (=> (= (ControlFlow 0 2) (- 0 63)) (and (<= (LitInt (- 0 32768)) |newtype$check#40@0|) (< |newtype$check#40@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#40@0|) (< |newtype$check#40@0| 32768)) (=> (= |newtype$check#41@0| (- 0 |$rhs#4@0|)) (and (=> (= (ControlFlow 0 2) (- 0 62)) (and (<= (LitInt (- 0 32768)) |newtype$check#41@0|) (< |newtype$check#41@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#41@0|) (< |newtype$check#41@0| 32768)) (=> (and (= |a##23@0| (- 0 |$rhs#4@0|)) (= |newtype$check#42@0| (LitInt 0))) (and (=> (= (ControlFlow 0 2) (- 0 61)) (and (<= (LitInt (- 0 32768)) |newtype$check#42@0|) (< |newtype$check#42@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#42@0|) (< |newtype$check#42@0| 32768)) (=> (= |newtype$check#43@0| (- 0 |$rhs#5@0|)) (and (=> (= (ControlFlow 0 2) (- 0 60)) (and (<= (LitInt (- 0 32768)) |newtype$check#43@0|) (< |newtype$check#43@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#43@0|) (< |newtype$check#43@0| 32768)) (=> (and (= |b##23@0| (- 0 |$rhs#5@0|)) (= |suffix##27@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 59)) (or (not (= |b##23@0| 0)) (not true))) (=> (or (not (= |b##23@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 58)) (<= (LitInt (- 0 32767)) |a##23@0|)) (=> (<= (LitInt (- 0 32767)) |a##23@0|) (=> (and (and (and ($IsGoodHeap $Heap@27) ($IsHeapAnchor $Heap@27)) (forall (($o@@15 T@U) ) (!  (=> (and (or (not (= $o@@15 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@26 $o@@15) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@27 $o@@15) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@26 $o@@15)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@27 $o@@15))
))) (and ($HeapSucc $Heap@26 $Heap@27) (= |newtype$check#44@0| (LitInt (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 57)) (and (<= (LitInt (- 0 32768)) |newtype$check#44@0|) (< |newtype$check#44@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#44@0|) (< |newtype$check#44@0| 32768)) (=> (and (= |a##24@0| (LitInt (- 0 108))) (= |newtype$check#45@0| (LitInt 9))) (and (=> (= (ControlFlow 0 2) (- 0 56)) (and (<= (LitInt (- 0 32768)) |newtype$check#45@0|) (< |newtype$check#45@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#45@0|) (< |newtype$check#45@0| 32768)) (=> (and (= |b##24@0| (LitInt 9)) (= |suffix##28@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 55)) (or (not (= |b##24@0| 0)) (not true))) (=> (or (not (= |b##24@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 54)) (<= (LitInt (- 0 32767)) |a##24@0|)) (=> (<= (LitInt (- 0 32767)) |a##24@0|) (=> (and (and (and ($IsGoodHeap $Heap@28) ($IsHeapAnchor $Heap@28)) (forall (($o@@16 T@U) ) (!  (=> (and (or (not (= $o@@16 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@27 $o@@16) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@28 $o@@16) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@27 $o@@16)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@28 $o@@16))
))) (and ($HeapSucc $Heap@27 $Heap@28) (= |newtype$check#46@0| (LitInt (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 53)) (and (<= (LitInt (- 0 32768)) |newtype$check#46@0|) (< |newtype$check#46@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#46@0|) (< |newtype$check#46@0| 32768)) (=> (and (= |a##25@0| (LitInt (- 0 108))) (= |newtype$check#47@0| (LitInt (- 0 9)))) (and (=> (= (ControlFlow 0 2) (- 0 52)) (and (<= (LitInt (- 0 32768)) |newtype$check#47@0|) (< |newtype$check#47@0| 32768))) (=> (and (<= (LitInt (- 0 32768)) |newtype$check#47@0|) (< |newtype$check#47@0| 32768)) (=> (and (= |b##25@0| (LitInt (- 0 9))) (= |suffix##29@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 10)))))) (and (=> (= (ControlFlow 0 2) (- 0 51)) (or (not (= |b##25@0| 0)) (not true))) (=> (or (not (= |b##25@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 50)) (<= (LitInt (- 0 32767)) |a##25@0|)) (=> (<= (LitInt (- 0 32767)) |a##25@0|) (=> (and (and (and ($IsGoodHeap $Heap@29) ($IsHeapAnchor $Heap@29)) (forall (($o@@17 T@U) ) (!  (=> (and (or (not (= $o@@17 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@28 $o@@17) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@29 $o@@17) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@28 $o@@17)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@29 $o@@17))
))) (and ($HeapSucc $Heap@28 $Heap@29) (= |suffix##30@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32))))))) (and (=> (= (ControlFlow 0 2) (- 0 49)) (or (not (= |$rhs#7@0| 0)) (not true))) (=> (or (not (= |$rhs#7@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 48)) (<= (LitInt (- 0 2147483647)) |$rhs#6@0|)) (=> (<= (LitInt (- 0 2147483647)) |$rhs#6@0|) (=> (and (and (and ($IsGoodHeap $Heap@30) ($IsHeapAnchor $Heap@30)) (forall (($o@@18 T@U) ) (!  (=> (and (or (not (= $o@@18 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@29 $o@@18) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@30 $o@@18) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@29 $o@@18)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@30 $o@@18))
))) (and ($HeapSucc $Heap@29 $Heap@30) (= |newtype$check#48@0| (LitInt 0)))) (and (=> (= (ControlFlow 0 2) (- 0 47)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#48@0|) (< |newtype$check#48@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#48@0|) (< |newtype$check#48@0| 2147483648)) (=> (= |newtype$check#49@0| (- 0 |$rhs#6@0|)) (and (=> (= (ControlFlow 0 2) (- 0 46)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#49@0|) (< |newtype$check#49@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#49@0|) (< |newtype$check#49@0| 2147483648)) (=> (and (= |a##27@0| (- 0 |$rhs#6@0|)) (= |suffix##31@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 45)) (or (not (= |$rhs#7@0| 0)) (not true))) (=> (or (not (= |$rhs#7@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 44)) (<= (LitInt (- 0 2147483647)) |a##27@0|)) (=> (<= (LitInt (- 0 2147483647)) |a##27@0|) (=> (and (and (and ($IsGoodHeap $Heap@31) ($IsHeapAnchor $Heap@31)) (forall (($o@@19 T@U) ) (!  (=> (and (or (not (= $o@@19 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@30 $o@@19) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@31 $o@@19) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@30 $o@@19)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@31 $o@@19))
))) (and ($HeapSucc $Heap@30 $Heap@31) (= |newtype$check#50@0| (LitInt 0)))) (and (=> (= (ControlFlow 0 2) (- 0 43)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#50@0|) (< |newtype$check#50@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#50@0|) (< |newtype$check#50@0| 2147483648)) (=> (= |newtype$check#51@0| (- 0 |$rhs#7@0|)) (and (=> (= (ControlFlow 0 2) (- 0 42)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#51@0|) (< |newtype$check#51@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#51@0|) (< |newtype$check#51@0| 2147483648)) (=> (and (= |b##28@0| (- 0 |$rhs#7@0|)) (= |suffix##32@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 41)) (or (not (= |b##28@0| 0)) (not true))) (=> (or (not (= |b##28@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 40)) (<= (LitInt (- 0 2147483647)) |$rhs#6@0|)) (=> (<= (LitInt (- 0 2147483647)) |$rhs#6@0|) (=> (and (and (and ($IsGoodHeap $Heap@32) ($IsHeapAnchor $Heap@32)) (forall (($o@@20 T@U) ) (!  (=> (and (or (not (= $o@@20 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@31 $o@@20) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@32 $o@@20) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@31 $o@@20)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@32 $o@@20))
))) (and ($HeapSucc $Heap@31 $Heap@32) (= |newtype$check#52@0| (LitInt 0)))) (and (=> (= (ControlFlow 0 2) (- 0 39)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#52@0|) (< |newtype$check#52@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#52@0|) (< |newtype$check#52@0| 2147483648)) (=> (= |newtype$check#53@0| (- 0 |$rhs#6@0|)) (and (=> (= (ControlFlow 0 2) (- 0 38)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#53@0|) (< |newtype$check#53@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#53@0|) (< |newtype$check#53@0| 2147483648)) (=> (and (= |a##29@0| (- 0 |$rhs#6@0|)) (= |newtype$check#54@0| (LitInt 0))) (and (=> (= (ControlFlow 0 2) (- 0 37)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#54@0|) (< |newtype$check#54@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#54@0|) (< |newtype$check#54@0| 2147483648)) (=> (= |newtype$check#55@0| (- 0 |$rhs#7@0|)) (and (=> (= (ControlFlow 0 2) (- 0 36)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#55@0|) (< |newtype$check#55@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#55@0|) (< |newtype$check#55@0| 2147483648)) (=> (and (= |b##29@0| (- 0 |$rhs#7@0|)) (= |suffix##33@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 35)) (or (not (= |b##29@0| 0)) (not true))) (=> (or (not (= |b##29@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 34)) (<= (LitInt (- 0 2147483647)) |a##29@0|)) (=> (<= (LitInt (- 0 2147483647)) |a##29@0|) (=> (and (and (and ($IsGoodHeap $Heap@33) ($IsHeapAnchor $Heap@33)) (forall (($o@@21 T@U) ) (!  (=> (and (or (not (= $o@@21 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@32 $o@@21) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@33 $o@@21) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@32 $o@@21)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@33 $o@@21))
))) (and ($HeapSucc $Heap@32 $Heap@33) (= |newtype$check#56@0| (LitInt (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 33)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#56@0|) (< |newtype$check#56@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#56@0|) (< |newtype$check#56@0| 2147483648)) (=> (and (= |a##30@0| (LitInt (- 0 108))) (= |newtype$check#57@0| (LitInt 9))) (and (=> (= (ControlFlow 0 2) (- 0 32)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#57@0|) (< |newtype$check#57@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#57@0|) (< |newtype$check#57@0| 2147483648)) (=> (and (= |b##30@0| (LitInt 9)) (= |suffix##34@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 31)) (or (not (= |b##30@0| 0)) (not true))) (=> (or (not (= |b##30@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 30)) (<= (LitInt (- 0 2147483647)) |a##30@0|)) (=> (<= (LitInt (- 0 2147483647)) |a##30@0|) (=> (and (and (and ($IsGoodHeap $Heap@34) ($IsHeapAnchor $Heap@34)) (forall (($o@@22 T@U) ) (!  (=> (and (or (not (= $o@@22 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@33 $o@@22) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@34 $o@@22) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@33 $o@@22)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@34 $o@@22))
))) (and ($HeapSucc $Heap@33 $Heap@34) (= |newtype$check#58@0| (LitInt (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 29)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#58@0|) (< |newtype$check#58@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#58@0|) (< |newtype$check#58@0| 2147483648)) (=> (and (= |a##31@0| (LitInt (- 0 108))) (= |newtype$check#59@0| (LitInt (- 0 9)))) (and (=> (= (ControlFlow 0 2) (- 0 28)) (and (<= (LitInt (- 0 2147483648)) |newtype$check#59@0|) (< |newtype$check#59@0| 2147483648))) (=> (and (<= (LitInt (- 0 2147483648)) |newtype$check#59@0|) (< |newtype$check#59@0| 2147483648)) (=> (and (= |b##31@0| (LitInt (- 0 9))) (= |suffix##35@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 10)))))) (and (=> (= (ControlFlow 0 2) (- 0 27)) (or (not (= |b##31@0| 0)) (not true))) (=> (or (not (= |b##31@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 26)) (<= (LitInt (- 0 2147483647)) |a##31@0|)) (=> (<= (LitInt (- 0 2147483647)) |a##31@0|) (=> (and (and (and ($IsGoodHeap $Heap@35) ($IsHeapAnchor $Heap@35)) (forall (($o@@23 T@U) ) (!  (=> (and (or (not (= $o@@23 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@34 $o@@23) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@35 $o@@23) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@34 $o@@23)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@35 $o@@23))
))) (and ($HeapSucc $Heap@34 $Heap@35) (= |suffix##36@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32))))))) (and (=> (= (ControlFlow 0 2) (- 0 25)) (or (not (= |$rhs#9@0| 0)) (not true))) (=> (or (not (= |$rhs#9@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 24)) (<= (LitInt (- 0 9223372036854775807)) |$rhs#8@0|)) (=> (<= (LitInt (- 0 9223372036854775807)) |$rhs#8@0|) (=> (and (and (and ($IsGoodHeap $Heap@36) ($IsHeapAnchor $Heap@36)) (forall (($o@@24 T@U) ) (!  (=> (and (or (not (= $o@@24 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@35 $o@@24) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@36 $o@@24) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@35 $o@@24)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@36 $o@@24))
))) (and ($HeapSucc $Heap@35 $Heap@36) (= |newtype$check#60@0| (LitInt 0)))) (and (=> (= (ControlFlow 0 2) (- 0 23)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#60@0|) (< |newtype$check#60@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#60@0|) (< |newtype$check#60@0| 9223372036854775808)) (=> (= |newtype$check#61@0| (- 0 |$rhs#8@0|)) (and (=> (= (ControlFlow 0 2) (- 0 22)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#61@0|) (< |newtype$check#61@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#61@0|) (< |newtype$check#61@0| 9223372036854775808)) (=> (and (= |a##33@0| (- 0 |$rhs#8@0|)) (= |suffix##37@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 21)) (or (not (= |$rhs#9@0| 0)) (not true))) (=> (or (not (= |$rhs#9@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 20)) (<= (LitInt (- 0 9223372036854775807)) |a##33@0|)) (=> (<= (LitInt (- 0 9223372036854775807)) |a##33@0|) (=> (and (and (and ($IsGoodHeap $Heap@37) ($IsHeapAnchor $Heap@37)) (forall (($o@@25 T@U) ) (!  (=> (and (or (not (= $o@@25 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@36 $o@@25) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@37 $o@@25) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@36 $o@@25)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@37 $o@@25))
))) (and ($HeapSucc $Heap@36 $Heap@37) (= |newtype$check#62@0| (LitInt 0)))) (and (=> (= (ControlFlow 0 2) (- 0 19)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#62@0|) (< |newtype$check#62@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#62@0|) (< |newtype$check#62@0| 9223372036854775808)) (=> (= |newtype$check#63@0| (- 0 |$rhs#9@0|)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#63@0|) (< |newtype$check#63@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#63@0|) (< |newtype$check#63@0| 9223372036854775808)) (=> (and (= |b##34@0| (- 0 |$rhs#9@0|)) (= |suffix##38@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (or (not (= |b##34@0| 0)) (not true))) (=> (or (not (= |b##34@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 16)) (<= (LitInt (- 0 9223372036854775807)) |$rhs#8@0|)) (=> (<= (LitInt (- 0 9223372036854775807)) |$rhs#8@0|) (=> (and (and (and ($IsGoodHeap $Heap@38) ($IsHeapAnchor $Heap@38)) (forall (($o@@26 T@U) ) (!  (=> (and (or (not (= $o@@26 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@37 $o@@26) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@38 $o@@26) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@37 $o@@26)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@38 $o@@26))
))) (and ($HeapSucc $Heap@37 $Heap@38) (= |newtype$check#64@0| (LitInt 0)))) (and (=> (= (ControlFlow 0 2) (- 0 15)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#64@0|) (< |newtype$check#64@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#64@0|) (< |newtype$check#64@0| 9223372036854775808)) (=> (= |newtype$check#65@0| (- 0 |$rhs#8@0|)) (and (=> (= (ControlFlow 0 2) (- 0 14)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#65@0|) (< |newtype$check#65@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#65@0|) (< |newtype$check#65@0| 9223372036854775808)) (=> (and (= |a##35@0| (- 0 |$rhs#8@0|)) (= |newtype$check#66@0| (LitInt 0))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#66@0|) (< |newtype$check#66@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#66@0|) (< |newtype$check#66@0| 9223372036854775808)) (=> (= |newtype$check#67@0| (- 0 |$rhs#9@0|)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#67@0|) (< |newtype$check#67@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#67@0|) (< |newtype$check#67@0| 9223372036854775808)) (=> (and (= |b##35@0| (- 0 |$rhs#9@0|)) (= |suffix##39@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (or (not (= |b##35@0| 0)) (not true))) (=> (or (not (= |b##35@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (<= (LitInt (- 0 9223372036854775807)) |a##35@0|)) (=> (<= (LitInt (- 0 9223372036854775807)) |a##35@0|) (=> (and (and (and ($IsGoodHeap $Heap@39) ($IsHeapAnchor $Heap@39)) (forall (($o@@27 T@U) ) (!  (=> (and (or (not (= $o@@27 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@38 $o@@27) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@39 $o@@27) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@38 $o@@27)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@39 $o@@27))
))) (and ($HeapSucc $Heap@38 $Heap@39) (= |newtype$check#68@0| (LitInt (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#68@0|) (< |newtype$check#68@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#68@0|) (< |newtype$check#68@0| 9223372036854775808)) (=> (and (= |a##36@0| (LitInt (- 0 108))) (= |newtype$check#69@0| (LitInt 9))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#69@0|) (< |newtype$check#69@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#69@0|) (< |newtype$check#69@0| 9223372036854775808)) (=> (and (= |b##36@0| (LitInt 9)) (= |suffix##40@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (not (= |b##36@0| 0)) (not true))) (=> (or (not (= |b##36@0| 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= (LitInt (- 0 9223372036854775807)) |a##36@0|)) (=> (<= (LitInt (- 0 9223372036854775807)) |a##36@0|) (=> (and (and (and ($IsGoodHeap $Heap@40) ($IsHeapAnchor $Heap@40)) (forall (($o@@28 T@U) ) (!  (=> (and (or (not (= $o@@28 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@39 $o@@28) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@40 $o@@28) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@39 $o@@28)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@40 $o@@28))
))) (and ($HeapSucc $Heap@39 $Heap@40) (= |newtype$check#70@0| (LitInt (- 0 108))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#70@0|) (< |newtype$check#70@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#70@0|) (< |newtype$check#70@0| 9223372036854775808)) (=> (and (= |a##37@0| (LitInt (- 0 108))) (= |newtype$check#71@0| (LitInt (- 0 9)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#71@0|) (< |newtype$check#71@0| 9223372036854775808))) (=> (and (<= (LitInt (- 0 9223372036854775808)) |newtype$check#71@0|) (< |newtype$check#71@0| 9223372036854775808)) (=> (and (= |b##37@0| (LitInt (- 0 9))) (= |suffix##41@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 10)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= |b##37@0| 0)) (not true))) (=> (or (not (= |b##37@0| 0)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= (LitInt (- 0 9223372036854775807)) |a##37@0|))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let ((anon12_Else_correct  (=> (and (or (not (= (Div (- 0 103) (- 0 |$rhs#1@0|)) (LitInt 8))) (not true)) (= (ControlFlow 0 116) 2)) anon8_correct)))
(let ((anon12_Then_correct  (=> (= (Div (- 0 103) (- 0 |$rhs#1@0|)) (LitInt 8)) (and (=> (= (ControlFlow 0 114) (- 0 115)) (or (not (= (- 0 |$rhs#1@0|) 0)) (not true))) (=> (= (ControlFlow 0 114) 2) anon8_correct)))))
(let ((anon6_correct  (and (=> (= (ControlFlow 0 117) (- 0 120)) (= (Div |$rhs#0@0| (- 0 |$rhs#1@0|)) (LitInt (- 0 7)))) (and (=> (= (ControlFlow 0 117) (- 0 119)) (= (Mod |$rhs#0@0| (- 0 |$rhs#1@0|)) (LitInt 12))) (=> (and (= (Div |$rhs#0@0| (- 0 |$rhs#1@0|)) (LitInt (- 0 7))) (= (Mod |$rhs#0@0| (- 0 |$rhs#1@0|)) (LitInt 12))) (and (=> (= (ControlFlow 0 117) (- 0 118)) (or (not (= (- 0 |$rhs#1@0|) 0)) (not true))) (and (=> (= (ControlFlow 0 117) 114) anon12_Then_correct) (=> (= (ControlFlow 0 117) 116) anon12_Else_correct))))))))
(let ((anon11_Else_correct  (=> (and (or (not (= (Div |$rhs#0@0| (- 0 |$rhs#1@0|)) (LitInt (- 0 7)))) (not true)) (= (ControlFlow 0 123) 117)) anon6_correct)))
(let ((anon11_Then_correct  (=> (= (Div |$rhs#0@0| (- 0 |$rhs#1@0|)) (LitInt (- 0 7))) (and (=> (= (ControlFlow 0 121) (- 0 122)) (or (not (= (- 0 |$rhs#1@0|) 0)) (not true))) (=> (= (ControlFlow 0 121) 117) anon6_correct)))))
(let ((anon4_correct  (and (=> (= (ControlFlow 0 124) (- 0 127)) (= (Div (- 0 |$rhs#0@0|) |$rhs#1@0|) (LitInt (- 0 8)))) (and (=> (= (ControlFlow 0 124) (- 0 126)) (= (Mod (- 0 |$rhs#0@0|) |$rhs#1@0|) (LitInt 1))) (=> (and (= (Div (- 0 |$rhs#0@0|) |$rhs#1@0|) (LitInt (- 0 8))) (= (Mod (- 0 |$rhs#0@0|) |$rhs#1@0|) (LitInt 1))) (and (=> (= (ControlFlow 0 124) (- 0 125)) (or (not (= (- 0 |$rhs#1@0|) 0)) (not true))) (and (=> (= (ControlFlow 0 124) 121) anon11_Then_correct) (=> (= (ControlFlow 0 124) 123) anon11_Else_correct))))))))
(let ((anon10_Else_correct  (=> (and (or (not (= (Div (- 0 |$rhs#0@0|) |$rhs#1@0|) (LitInt (- 0 8)))) (not true)) (= (ControlFlow 0 130) 124)) anon4_correct)))
(let ((anon10_Then_correct  (=> (= (Div (- 0 |$rhs#0@0|) |$rhs#1@0|) (LitInt (- 0 8))) (and (=> (= (ControlFlow 0 128) (- 0 129)) (or (not (= |$rhs#1@0| 0)) (not true))) (=> (= (ControlFlow 0 128) 124) anon4_correct)))))
(let ((anon2_correct  (and (=> (= (ControlFlow 0 131) (- 0 134)) (= (Div |$rhs#0@0| |$rhs#1@0|) (LitInt 7))) (and (=> (= (ControlFlow 0 131) (- 0 133)) (= (Mod |$rhs#0@0| |$rhs#1@0|) (LitInt 12))) (=> (and (= (Div |$rhs#0@0| |$rhs#1@0|) (LitInt 7)) (= (Mod |$rhs#0@0| |$rhs#1@0|) (LitInt 12))) (and (=> (= (ControlFlow 0 131) (- 0 132)) (or (not (= |$rhs#1@0| 0)) (not true))) (and (=> (= (ControlFlow 0 131) 128) anon10_Then_correct) (=> (= (ControlFlow 0 131) 130) anon10_Else_correct))))))))
(let ((anon9_Else_correct  (=> (and (or (not (= (Div |$rhs#0@0| |$rhs#1@0|) (LitInt 7))) (not true)) (= (ControlFlow 0 137) 131)) anon2_correct)))
(let ((anon9_Then_correct  (=> (= (Div |$rhs#0@0| |$rhs#1@0|) (LitInt 7)) (and (=> (= (ControlFlow 0 135) (- 0 136)) (or (not (= |$rhs#1@0| 0)) (not true))) (=> (= (ControlFlow 0 135) 131) anon2_correct)))))
(let ((anon0_correct  (=> (and (= $_ModifiesFrame@0 (|lambda#0| null $Heap alloc false)) (= |newtype$check#0@0| (LitInt 231))) (and (=> (= (ControlFlow 0 138) (- 0 167)) (and (<= (LitInt 0) |newtype$check#0@0|) (< |newtype$check#0@0| 256))) (=> (and (<= (LitInt 0) |newtype$check#0@0|) (< |newtype$check#0@0| 256)) (=> (and (= |a##0@0| (LitInt 231)) (= |newtype$check#1@0| (LitInt 23))) (and (=> (= (ControlFlow 0 138) (- 0 166)) (and (<= (LitInt 0) |newtype$check#1@0|) (< |newtype$check#1@0| 256))) (=> (and (<= (LitInt 0) |newtype$check#1@0|) (< |newtype$check#1@0| 256)) (=> (and (= |b##0@0| (LitInt 23)) (= |suffix##0@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 138) (- 0 165)) (or (not (= |b##0@0| 0)) (not true))) (=> (or (not (= |b##0@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@0) ($IsHeapAnchor $Heap@0)) (forall (($o@@29 T@U) ) (!  (=> (and (or (not (= $o@@29 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap $o@@29) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@29) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap $o@@29)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@29))
))) (and ($HeapSucc $Heap $Heap@0) (= |newtype$check#2@0| (LitInt 231)))) (and (=> (= (ControlFlow 0 138) (- 0 164)) (and (<= (LitInt 0) |newtype$check#2@0|) (< |newtype$check#2@0| 256))) (=> (and (<= (LitInt 0) |newtype$check#2@0|) (< |newtype$check#2@0| 256)) (=> (and (= |a##1@0| (LitInt 231)) (= |newtype$check#3@0| (LitInt 255))) (and (=> (= (ControlFlow 0 138) (- 0 163)) (and (<= (LitInt 0) |newtype$check#3@0|) (< |newtype$check#3@0| 256))) (=> (and (<= (LitInt 0) |newtype$check#3@0|) (< |newtype$check#3@0| 256)) (=> (and (= |b##1@0| (LitInt 255)) (= |suffix##1@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 10)))))) (and (=> (= (ControlFlow 0 138) (- 0 162)) (or (not (= |b##1@0| 0)) (not true))) (=> (or (not (= |b##1@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@1) ($IsHeapAnchor $Heap@1)) (forall (($o@@30 T@U) ) (!  (=> (and (or (not (= $o@@30 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@30) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@30) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@30)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@30))
))) (and ($HeapSucc $Heap@0 $Heap@1) (= |newtype$check#4@0| (LitInt 65511)))) (and (=> (= (ControlFlow 0 138) (- 0 161)) (and (<= (LitInt 0) |newtype$check#4@0|) (< |newtype$check#4@0| 65536))) (=> (and (<= (LitInt 0) |newtype$check#4@0|) (< |newtype$check#4@0| 65536)) (=> (and (= |a##2@0| (LitInt 65511)) (= |newtype$check#5@0| (LitInt 23))) (and (=> (= (ControlFlow 0 138) (- 0 160)) (and (<= (LitInt 0) |newtype$check#5@0|) (< |newtype$check#5@0| 65536))) (=> (and (<= (LitInt 0) |newtype$check#5@0|) (< |newtype$check#5@0| 65536)) (=> (and (= |b##2@0| (LitInt 23)) (= |suffix##2@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 138) (- 0 159)) (or (not (= |b##2@0| 0)) (not true))) (=> (or (not (= |b##2@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@2) ($IsHeapAnchor $Heap@2)) (forall (($o@@31 T@U) ) (!  (=> (and (or (not (= $o@@31 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@31) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@31) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@31)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@31))
))) (and ($HeapSucc $Heap@1 $Heap@2) (= |newtype$check#6@0| (LitInt 65511)))) (and (=> (= (ControlFlow 0 138) (- 0 158)) (and (<= (LitInt 0) |newtype$check#6@0|) (< |newtype$check#6@0| 65536))) (=> (and (<= (LitInt 0) |newtype$check#6@0|) (< |newtype$check#6@0| 65536)) (=> (and (= |a##3@0| (LitInt 65511)) (= |newtype$check#7@0| (LitInt 65535))) (and (=> (= (ControlFlow 0 138) (- 0 157)) (and (<= (LitInt 0) |newtype$check#7@0|) (< |newtype$check#7@0| 65536))) (=> (and (<= (LitInt 0) |newtype$check#7@0|) (< |newtype$check#7@0| 65536)) (=> (and (= |b##3@0| (LitInt 65535)) (= |suffix##3@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 10)))))) (and (=> (= (ControlFlow 0 138) (- 0 156)) (or (not (= |b##3@0| 0)) (not true))) (=> (or (not (= |b##3@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@3) ($IsHeapAnchor $Heap@3)) (forall (($o@@32 T@U) ) (!  (=> (and (or (not (= $o@@32 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@32) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@32) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@32)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@32))
))) (and ($HeapSucc $Heap@2 $Heap@3) (= |newtype$check#8@0| (LitInt 4294967271)))) (and (=> (= (ControlFlow 0 138) (- 0 155)) (and (<= (LitInt 0) |newtype$check#8@0|) (< |newtype$check#8@0| 4294967296))) (=> (and (<= (LitInt 0) |newtype$check#8@0|) (< |newtype$check#8@0| 4294967296)) (=> (and (= |a##4@0| (LitInt 4294967271)) (= |newtype$check#9@0| (LitInt 23))) (and (=> (= (ControlFlow 0 138) (- 0 154)) (and (<= (LitInt 0) |newtype$check#9@0|) (< |newtype$check#9@0| 4294967296))) (=> (and (<= (LitInt 0) |newtype$check#9@0|) (< |newtype$check#9@0| 4294967296)) (=> (and (= |b##4@0| (LitInt 23)) (= |suffix##4@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 138) (- 0 153)) (or (not (= |b##4@0| 0)) (not true))) (=> (or (not (= |b##4@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@4) ($IsHeapAnchor $Heap@4)) (forall (($o@@33 T@U) ) (!  (=> (and (or (not (= $o@@33 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@33) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@33) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@33)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@33))
))) (and ($HeapSucc $Heap@3 $Heap@4) (= |newtype$check#10@0| (LitInt 4294967271)))) (and (=> (= (ControlFlow 0 138) (- 0 152)) (and (<= (LitInt 0) |newtype$check#10@0|) (< |newtype$check#10@0| 4294967296))) (=> (and (<= (LitInt 0) |newtype$check#10@0|) (< |newtype$check#10@0| 4294967296)) (=> (and (= |a##5@0| (LitInt 4294967271)) (= |newtype$check#11@0| (LitInt 4294967295))) (and (=> (= (ControlFlow 0 138) (- 0 151)) (and (<= (LitInt 0) |newtype$check#11@0|) (< |newtype$check#11@0| 4294967296))) (=> (and (<= (LitInt 0) |newtype$check#11@0|) (< |newtype$check#11@0| 4294967296)) (=> (and (= |b##5@0| (LitInt 4294967295)) (= |suffix##5@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 10)))))) (and (=> (= (ControlFlow 0 138) (- 0 150)) (or (not (= |b##5@0| 0)) (not true))) (=> (or (not (= |b##5@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@5) ($IsHeapAnchor $Heap@5)) (forall (($o@@34 T@U) ) (!  (=> (and (or (not (= $o@@34 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@34) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@34) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@34)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@34))
))) (and ($HeapSucc $Heap@4 $Heap@5) (= |newtype$check#12@0| (LitInt 18446744073709551591)))) (and (=> (= (ControlFlow 0 138) (- 0 149)) (and (<= (LitInt 0) |newtype$check#12@0|) (< |newtype$check#12@0| 18446744073709551616))) (=> (and (<= (LitInt 0) |newtype$check#12@0|) (< |newtype$check#12@0| 18446744073709551616)) (=> (and (= |a##6@0| (LitInt 18446744073709551591)) (= |newtype$check#13@0| (LitInt 23))) (and (=> (= (ControlFlow 0 138) (- 0 148)) (and (<= (LitInt 0) |newtype$check#13@0|) (< |newtype$check#13@0| 18446744073709551616))) (=> (and (<= (LitInt 0) |newtype$check#13@0|) (< |newtype$check#13@0| 18446744073709551616)) (=> (and (= |b##6@0| (LitInt 23)) (= |suffix##6@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))) (and (=> (= (ControlFlow 0 138) (- 0 147)) (or (not (= |b##6@0| 0)) (not true))) (=> (or (not (= |b##6@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@6) ($IsHeapAnchor $Heap@6)) (forall (($o@@35 T@U) ) (!  (=> (and (or (not (= $o@@35 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@35) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@35) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@35)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@35))
))) (and ($HeapSucc $Heap@5 $Heap@6) (= |newtype$check#14@0| (LitInt 18446744073709551591)))) (and (=> (= (ControlFlow 0 138) (- 0 146)) (and (<= (LitInt 0) |newtype$check#14@0|) (< |newtype$check#14@0| 18446744073709551616))) (=> (and (<= (LitInt 0) |newtype$check#14@0|) (< |newtype$check#14@0| 18446744073709551616)) (=> (and (= |a##7@0| (LitInt 18446744073709551591)) (= |newtype$check#15@0| (LitInt 18446744073709551615))) (and (=> (= (ControlFlow 0 138) (- 0 145)) (and (<= (LitInt 0) |newtype$check#15@0|) (< |newtype$check#15@0| 18446744073709551616))) (=> (and (<= (LitInt 0) |newtype$check#15@0|) (< |newtype$check#15@0| 18446744073709551616)) (=> (and (= |b##7@0| (LitInt 18446744073709551615)) (= |suffix##7@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 10)))))) (and (=> (= (ControlFlow 0 138) (- 0 144)) (or (not (= |b##7@0| 0)) (not true))) (=> (or (not (= |b##7@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@7) ($IsHeapAnchor $Heap@7)) (forall (($o@@36 T@U) ) (!  (=> (and (or (not (= $o@@36 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@36) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@36) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@36)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@36))
))) (and (and ($HeapSucc $Heap@6 $Heap@7) (= |$rhs#0@0| (LitInt 103))) (and (= |$rhs#1@0| (LitInt 13)) (= |suffix##8@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32)))))))) (and (=> (= (ControlFlow 0 138) (- 0 143)) (or (not (= |$rhs#1@0| 0)) (not true))) (=> (or (not (= |$rhs#1@0| 0)) (not true)) (=> (and ($IsGoodHeap $Heap@8) ($IsHeapAnchor $Heap@8)) (=> (and (and (forall (($o@@37 T@U) ) (!  (=> (and (or (not (= $o@@37 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@37) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@37) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@37)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@37))
)) ($HeapSucc $Heap@7 $Heap@8)) (and (= |i##1@0| (- 0 |$rhs#0@0|)) (= |suffix##9@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32))))))) (and (=> (= (ControlFlow 0 138) (- 0 142)) (or (not (= |$rhs#1@0| 0)) (not true))) (=> (or (not (= |$rhs#1@0| 0)) (not true)) (=> (and ($IsGoodHeap $Heap@9) ($IsHeapAnchor $Heap@9)) (=> (and (and (forall (($o@@38 T@U) ) (!  (=> (and (or (not (= $o@@38 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@38) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 $o@@38) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@38)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 $o@@38))
)) ($HeapSucc $Heap@8 $Heap@9)) (and (= |j##2@0| (- 0 |$rhs#1@0|)) (= |suffix##10@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 32))))))) (and (=> (= (ControlFlow 0 138) (- 0 141)) (or (not (= |j##2@0| 0)) (not true))) (=> (or (not (= |j##2@0| 0)) (not true)) (=> (and (and (and ($IsGoodHeap $Heap@10) ($IsHeapAnchor $Heap@10)) (forall (($o@@39 T@U) ) (!  (=> (and (or (not (= $o@@39 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 $o@@39) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@10 $o@@39) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 $o@@39)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@10 $o@@39))
))) (and (and ($HeapSucc $Heap@9 $Heap@10) (= |i##3@0| (- 0 |$rhs#0@0|))) (and (= |j##3@0| (- 0 |$rhs#1@0|)) (= |suffix##11@0| (Lit SeqType (|Seq#Build| |Seq#Empty| ($Box charType (|char#FromInt| 10)))))))) (and (=> (= (ControlFlow 0 138) (- 0 140)) (or (not (= |j##3@0| 0)) (not true))) (=> (or (not (= |j##3@0| 0)) (not true)) (=> (and (and ($IsGoodHeap $Heap@11) ($IsHeapAnchor $Heap@11)) (and (forall (($o@@40 T@U) ) (!  (=> (and (or (not (= $o@@40 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@10 $o@@40) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@11 $o@@40) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@10 $o@@40)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@11 $o@@40))
)) ($HeapSucc $Heap@10 $Heap@11))) (and (=> (= (ControlFlow 0 138) (- 0 139)) (or (not (= |$rhs#1@0| 0)) (not true))) (and (=> (= (ControlFlow 0 138) 135) anon9_Then_correct) (=> (= (ControlFlow 0 138) 137) anon9_Else_correct))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let ((PreconditionGeneratedEntry_correct  (=> (and ($IsGoodHeap $Heap) ($IsHeapAnchor $Heap)) (=> (and (and (<= (LitInt (- 0 128)) |i8#0|) (< |i8#0| 128)) true) (=> (and (and (and (and (and (<= (LitInt (- 0 128)) |j8#0|) (< |j8#0| 128)) true) (and (and (<= (LitInt (- 0 32768)) |i16#0|) (< |i16#0| 32768)) true)) (and (and (and (<= (LitInt (- 0 32768)) |j16#0|) (< |j16#0| 32768)) true) (and (and (<= (LitInt (- 0 2147483648)) |i32#0|) (< |i32#0| 2147483648)) true))) (and (and (and (and (<= (LitInt (- 0 2147483648)) |j32#0|) (< |j32#0| 2147483648)) true) (and (and (<= (LitInt (- 0 9223372036854775808)) |i64#0|) (< |i64#0| 9223372036854775808)) true)) (and (and (and (<= (LitInt (- 0 9223372036854775808)) |j64#0|) (< |j64#0| 9223372036854775808)) true) (and (= 2 $FunctionContextHeight) (= (ControlFlow 0 168) 138))))) anon0_correct)))))
PreconditionGeneratedEntry_correct)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
