(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@T T@T) T@T)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@38 (T@T) T@T)
(declare-fun $generated@@39 (T@T) T@T)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@T T@U T@U) Bool)
(declare-fun $generated@@84 (Int) Int)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@40 T@T) ($generated@@41 T@T) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@26 $generated@@40 $generated@@41 ($generated@@37 $generated@@40 $generated@@41 $generated@@43 $generated@@44 $generated@@42) $generated@@44) $generated@@42)
 :weight 0
)) (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (or (= $generated@@49 $generated@@50) (= ($generated@@26 $generated@@45 $generated@@46 ($generated@@37 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@50) ($generated@@26 $generated@@45 $generated@@46 $generated@@48 $generated@@50)))
 :weight 0
))) (= ($generated@@8 $generated@@27) 3)) (= ($generated@@8 $generated@@28) 4)) (= ($generated@@8 $generated@@29) 5)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (= ($generated@@8 ($generated@@30 $generated@@51 $generated@@52)) 6))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@38 ($generated@@30 $generated@@53 $generated@@54)) $generated@@53)
 :pattern ( ($generated@@30 $generated@@53 $generated@@54))
))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@39 ($generated@@30 $generated@@55 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@30 $generated@@55 $generated@@56))
))))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (and ($generated@@33 $generated@@58) (and (or (not (= $generated@@59 $generated@@34)) (not true)) (= ($generated@@35 $generated@@59) ($generated@@32 $generated@@57)))) ($generated@@36 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@58 $generated@@59) $generated@@31) $generated@@57))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@58 $generated@@59) $generated@@31) ($generated@@32 $generated@@57))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and (and ($generated@@33 $generated@@63) (and (or (not (= $generated@@64 $generated@@34)) (not true)) (= ($generated@@35 $generated@@64) ($generated@@32 $generated@@62)))) ($generated@@13 ($generated@@60 $generated@@9 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@63 $generated@@64) $generated)))) ($generated@@61 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@63 $generated@@64) $generated@@31) $generated@@62 $generated@@63))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@63 $generated@@64) $generated@@31) ($generated@@32 $generated@@62))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! ($generated@@65 $generated@@10 $generated@@67 $generated@@66 $generated@@68)
 :pattern ( ($generated@@65 $generated@@10 $generated@@67 $generated@@66 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@65 $generated@@29 $generated@@71 ($generated@@69 $generated@@70) $generated@@72) ($generated@@65 $generated@@29 $generated@@71 ($generated@@32 $generated@@70) $generated@@72))
 :pattern ( ($generated@@65 $generated@@29 $generated@@71 ($generated@@69 $generated@@70) $generated@@72))
 :pattern ( ($generated@@65 $generated@@29 $generated@@71 ($generated@@32 $generated@@70) $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@65 $generated@@29 $generated@@74 ($generated@@32 $generated@@73) $generated@@75)  (or (= $generated@@74 $generated@@34) ($generated@@13 ($generated@@60 $generated@@9 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@75 $generated@@74) $generated)))))
 :pattern ( ($generated@@65 $generated@@29 $generated@@74 ($generated@@32 $generated@@73) $generated@@75))
)))
(assert (= ($generated@@24 $generated@@31) 0))
(assert (= ($generated@@76 $generated@@4 $generated@@7) $generated@@31))
(assert  (not ($generated@@77 $generated@@31)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> ($generated@@78 $generated@@79 $generated@@80) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@13 ($generated@@60 $generated@@9 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@79 $generated@@81) $generated))) ($generated@@13 ($generated@@60 $generated@@9 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@80 $generated@@81) $generated))))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@80 $generated@@81) $generated))
)))
 :pattern ( ($generated@@78 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 $generated@@10 $generated@@83 $generated@@66) (> ($generated@@15 $generated@@83) 0))
 :pattern ( ($generated@@82 $generated@@10 $generated@@83 $generated@@66))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@84 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 $generated@@87) $generated@@87)
 :pattern ( ($generated@@86 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@60 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@60 $generated@@91 $generated@@90))
)))
(assert ($generated@@77 $generated))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@82 $generated@@29 $generated@@93 ($generated@@69 $generated@@92))  (and ($generated@@82 $generated@@29 $generated@@93 ($generated@@32 $generated@@92)) (or (not (= $generated@@93 $generated@@34)) (not true))))
 :pattern ( ($generated@@82 $generated@@29 $generated@@93 ($generated@@69 $generated@@92)))
 :pattern ( ($generated@@82 $generated@@29 $generated@@93 ($generated@@32 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@61 ($generated@@89 $generated@@97 $generated@@94) $generated@@95 $generated@@96) ($generated@@65 $generated@@97 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@61 ($generated@@89 $generated@@97 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@78 $generated@@98 $generated@@99) (=> ($generated@@61 $generated@@100 $generated@@101 $generated@@98) ($generated@@61 $generated@@100 $generated@@101 $generated@@99)))
 :pattern ( ($generated@@78 $generated@@98 $generated@@99) ($generated@@61 $generated@@100 $generated@@101 $generated@@98))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (!  (=> ($generated@@78 $generated@@102 $generated@@103) (=> ($generated@@65 $generated@@106 $generated@@104 $generated@@105 $generated@@102) ($generated@@65 $generated@@106 $generated@@104 $generated@@105 $generated@@103)))
 :pattern ( ($generated@@78 $generated@@102 $generated@@103) ($generated@@65 $generated@@106 $generated@@104 $generated@@105 $generated@@102))
)))
(assert (forall (($generated@@109 T@U) ) (!  (and (= ($generated@@107 ($generated@@69 $generated@@109)) $generated@@2) (= ($generated@@108 ($generated@@69 $generated@@109)) $generated@@6))
 :pattern ( ($generated@@69 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (!  (and (= ($generated@@107 ($generated@@32 $generated@@110)) $generated@@3) (= ($generated@@108 ($generated@@32 $generated@@110)) $generated@@6))
 :pattern ( ($generated@@32 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@36 $generated@@111 $generated@@66) (and (= ($generated@@89 $generated@@10 ($generated@@60 $generated@@10 $generated@@111)) $generated@@111) ($generated@@82 $generated@@10 ($generated@@60 $generated@@10 $generated@@111) $generated@@66)))
 :pattern ( ($generated@@36 $generated@@111 $generated@@66))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@82 $generated@@29 $generated@@113 ($generated@@32 $generated@@112))  (or (= $generated@@113 $generated@@34) (= ($generated@@35 $generated@@113) ($generated@@32 $generated@@112))))
 :pattern ( ($generated@@82 $generated@@29 $generated@@113 ($generated@@32 $generated@@112)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or (not (= $generated@@114 $generated@@116)) (not true)) (=> (and ($generated@@78 $generated@@114 $generated@@115) ($generated@@78 $generated@@115 $generated@@116)) ($generated@@78 $generated@@114 $generated@@116)))
 :pattern ( ($generated@@78 $generated@@114 $generated@@115) ($generated@@78 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (and (= ($generated@@117 ($generated@@76 $generated@@118 $generated@@119)) $generated@@118) (= ($generated@@25 ($generated@@76 $generated@@118 $generated@@119)) $generated@@119))
 :pattern ( ($generated@@76 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@36 ($generated@@89 $generated@@122 $generated@@120) $generated@@121) ($generated@@82 $generated@@122 $generated@@120 $generated@@121))
 :pattern ( ($generated@@36 ($generated@@89 $generated@@122 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@69 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@69 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@32 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@32 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@60 $generated@@128 ($generated@@89 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@89 $generated@@128 $generated@@127))
)))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@13 ($generated@@129 $generated@@29 $generated@@27 $generated@@9 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@13 ($generated@@60 $generated@@9 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@129 $generated@@29 $generated@@27 $generated@@9 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@36 $generated@@164 ($generated@@69 $generated@@163)) (and (= ($generated@@89 $generated@@29 ($generated@@60 $generated@@29 $generated@@164)) $generated@@164) ($generated@@82 $generated@@29 ($generated@@60 $generated@@29 $generated@@164) ($generated@@69 $generated@@163))))
 :pattern ( ($generated@@36 $generated@@164 ($generated@@69 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@36 $generated@@166 ($generated@@32 $generated@@165)) (and (= ($generated@@89 $generated@@29 ($generated@@60 $generated@@29 $generated@@166)) $generated@@166) ($generated@@82 $generated@@29 ($generated@@60 $generated@@29 $generated@@166) ($generated@@32 $generated@@165))))
 :pattern ( ($generated@@36 $generated@@166 ($generated@@32 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@33 ($generated@@37 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@167 $generated@@168 ($generated@@37 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@167 $generated@@168) $generated@@169 $generated@@170))) ($generated@@78 $generated@@167 ($generated@@37 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@167 $generated@@168 ($generated@@37 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@167 $generated@@168) $generated@@169 $generated@@170))))
 :pattern ( ($generated@@37 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@167 $generated@@168 ($generated@@37 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@167 $generated@@168) $generated@@169 $generated@@170)))
)))
(assert (= ($generated@@107 $generated@@66) $generated@@1))
(assert (= ($generated@@108 $generated@@66) $generated@@5))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@89 $generated@@10 ($generated@@14 ($generated@@84 $generated@@171))) ($generated@@86 $generated@@28 ($generated@@89 $generated@@10 ($generated@@14 $generated@@171))))
 :pattern ( ($generated@@89 $generated@@10 ($generated@@14 ($generated@@84 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@89 $generated@@173 ($generated@@86 $generated@@173 $generated@@172)) ($generated@@86 $generated@@28 ($generated@@89 $generated@@173 $generated@@172)))
 :pattern ( ($generated@@89 $generated@@173 ($generated@@86 $generated@@173 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@184 true))
(let (($generated@@185 true))
(let (($generated@@186 true))
(let (($generated@@187  (and (=> (= (ControlFlow 0 3) (- 0 9)) true) (and (=> (= (ControlFlow 0 3) (- 0 8)) (or (not (= $generated@@174 $generated@@34)) (not true))) (=> (or (not (= $generated@@174 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 7)) ($generated@@13 ($generated@@129 $generated@@29 $generated@@27 $generated@@9 $generated@@175 $generated@@174 $generated@@31))) (=> ($generated@@13 ($generated@@129 $generated@@29 $generated@@27 $generated@@9 $generated@@175 $generated@@174 $generated@@31)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@82 $generated@@10 ($generated@@14 ($generated@@84 2)) $generated@@66)) (=> ($generated@@82 $generated@@10 ($generated@@14 ($generated@@84 2)) $generated@@66) (=> (= $generated@@176 ($generated@@84 2)) (=> (and (= $generated@@177 ($generated@@37 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@178 $generated@@174 ($generated@@37 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@178 $generated@@174) $generated@@31 ($generated@@89 $generated@@10 ($generated@@14 $generated@@176))))) ($generated@@33 $generated@@177)) (and (=> (= (ControlFlow 0 3) (- 0 5)) true) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= $generated@@174 $generated@@34)) (not true))) (and (=> (= (ControlFlow 0 3) 1) $generated@@186) (=> (= (ControlFlow 0 3) 2) $generated@@185)))))))))))))))
(let (($generated@@188  (=> (and ($generated@@13 ($generated@@86 $generated@@9 ($generated@@12 false))) (= (ControlFlow 0 12) 3)) $generated@@187)))
(let (($generated@@189  (=> (= ($generated@@15 ($generated@@60 $generated@@10 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@178 $generated@@174) $generated@@31))) ($generated@@84 0)) (and (=> (= (ControlFlow 0 13) (- 0 14)) ($generated@@13 ($generated@@86 $generated@@9 ($generated@@12 false)))) (=> ($generated@@13 ($generated@@86 $generated@@9 ($generated@@12 false))) (and (=> (= (ControlFlow 0 13) 11) $generated@@184) (=> (= (ControlFlow 0 13) 12) $generated@@188)))))))
(let (($generated@@190  (=> (and (or (not (= ($generated@@15 ($generated@@60 $generated@@10 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@178 $generated@@174) $generated@@31))) ($generated@@84 0))) (not true)) (= (ControlFlow 0 10) 3)) $generated@@187)))
(let (($generated@@191  (=> (= $generated@@175 ($generated@@130 $generated@@34 $generated@@179 $generated false)) (=> (and (or (not (= $generated@@174 $generated@@34)) (not true)) ($generated@@82 $generated@@29 $generated@@174 ($generated@@32 $generated@@66))) (=> (and (and (not ($generated@@13 ($generated@@60 $generated@@9 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@179 $generated@@174) $generated)))) (= $generated@@178 ($generated@@37 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@179 $generated@@174 ($generated@@37 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@179 $generated@@174) $generated ($generated@@89 $generated@@9 ($generated@@12 true)))))) (and ($generated@@33 $generated@@178) ($generated@@180 $generated@@178))) (and (=> (= (ControlFlow 0 15) (- 0 19)) true) (and (=> (= (ControlFlow 0 15) (- 0 18)) (or (not (= $generated@@174 $generated@@34)) (not true))) (and (=> (= (ControlFlow 0 15) (- 0 17)) true) (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (not (= $generated@@174 $generated@@34)) (not true))) (=> (or (not (= $generated@@174 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 15) 13) $generated@@189) (=> (= (ControlFlow 0 15) 10) $generated@@190))))))))))))
(let (($generated@@192  (=> (and ($generated@@33 $generated@@179) ($generated@@180 $generated@@179)) (=> (and (and (=> $generated@@181 (and ($generated@@82 $generated@@29 $generated@@182 ($generated@@69 $generated@@66)) ($generated@@65 $generated@@29 $generated@@182 ($generated@@69 $generated@@66) $generated@@179))) true) (and (= 1 $generated@@183) (= (ControlFlow 0 20) 15))) $generated@@191))))
$generated@@192))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
