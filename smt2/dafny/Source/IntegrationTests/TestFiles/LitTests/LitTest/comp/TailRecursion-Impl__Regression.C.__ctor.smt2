(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@T T@T) T@T)
(declare-fun $generated@@35 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@T) T@T)
(declare-fun $generated@@37 (T@T) T@T)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@62 () Int)
(declare-fun $generated@@63 (T@U T@U) Int)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@65 (T@T T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (= ($generated@@5 $generated@@23) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@27 ($generated@@24 $generated@@26) $generated@@28) ($generated@@22 $generated@@23 $generated@@27 ($generated@@25 $generated@@26) $generated@@28))
 :pattern ( ($generated@@22 $generated@@23 $generated@@27 ($generated@@24 $generated@@26) $generated@@28))
 :pattern ( ($generated@@22 $generated@@23 $generated@@27 ($generated@@25 $generated@@26) $generated@@28))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@38 T@T) ($generated@@39 T@T) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@39 ($generated@@35 $generated@@38 $generated@@39 $generated@@41 $generated@@42 $generated@@40) $generated@@42) $generated@@40)
 :weight 0
)) (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (or (= $generated@@47 $generated@@48) (= ($generated@@31 $generated@@43 $generated@@44 ($generated@@35 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@48) ($generated@@31 $generated@@43 $generated@@44 $generated@@46 $generated@@48)))
 :weight 0
))) (= ($generated@@5 $generated@@32) 4)) (= ($generated@@5 $generated@@33) 5)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (= ($generated@@5 ($generated@@34 $generated@@49 $generated@@50)) 6))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (! (= ($generated@@36 ($generated@@34 $generated@@51 $generated@@52)) $generated@@51)
 :pattern ( ($generated@@34 $generated@@51 $generated@@52))
))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@37 ($generated@@34 $generated@@53 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@34 $generated@@53 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@56 ($generated@@25 $generated@@55) $generated@@57)  (or (= $generated@@56 $generated@@29) ($generated@@10 ($generated@@30 $generated@@6 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@57 $generated@@56) $generated@@1)))))
 :pattern ( ($generated@@22 $generated@@23 $generated@@56 ($generated@@25 $generated@@55) $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> ($generated@@58 $generated@@59 $generated@@60) (forall (($generated@@61 T@U) ) (!  (=> ($generated@@10 ($generated@@30 $generated@@6 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@59 $generated@@61) $generated@@1))) ($generated@@10 ($generated@@30 $generated@@6 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@60 $generated@@61) $generated@@1))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@60 $generated@@61) $generated@@1))
)))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60))
)))
(assert  (=> (< 0 $generated@@62) (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (and (or (not (= $generated@@67 $generated@@29)) (not true)) (= ($generated@@64 $generated@@67) ($generated@@25 $generated@@66))) ($generated@@65 $generated@@7 ($generated@@11 ($generated@@63 $generated@@66 $generated@@67)) $generated))
 :pattern ( ($generated@@63 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 ($generated@@30 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@30 $generated@@70 $generated@@69))
)))
(assert  (=> (< 0 $generated@@62) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and (or (not (= $generated@@73 $generated@@29)) (not true)) (= ($generated@@64 $generated@@73) ($generated@@25 $generated@@72))) ($generated@@65 $generated@@23 ($generated@@71 $generated@@72 $generated@@73) ($generated@@25 $generated@@72)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73))
))))
(assert  (=> (< 0 $generated@@62) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and (and ($generated@@74 $generated@@76) (and (or (not (= $generated@@77 $generated@@29)) (not true)) (= ($generated@@64 $generated@@77) ($generated@@25 $generated@@75)))) ($generated@@10 ($generated@@30 $generated@@6 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@76 $generated@@77) $generated@@1)))) ($generated@@22 $generated@@7 ($generated@@11 ($generated@@63 $generated@@75 $generated@@77)) $generated $generated@@76))
 :pattern ( ($generated@@63 $generated@@75 $generated@@77) ($generated@@30 $generated@@6 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@76 $generated@@77) $generated@@1)))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@65 $generated@@23 $generated@@79 ($generated@@24 $generated@@78))  (and ($generated@@65 $generated@@23 $generated@@79 ($generated@@25 $generated@@78)) (or (not (= $generated@@79 $generated@@29)) (not true))))
 :pattern ( ($generated@@65 $generated@@23 $generated@@79 ($generated@@24 $generated@@78)))
 :pattern ( ($generated@@65 $generated@@23 $generated@@79 ($generated@@25 $generated@@78)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (!  (=> ($generated@@58 $generated@@80 $generated@@81) (=> ($generated@@22 $generated@@84 $generated@@82 $generated@@83 $generated@@80) ($generated@@22 $generated@@84 $generated@@82 $generated@@83 $generated@@81)))
 :pattern ( ($generated@@58 $generated@@80 $generated@@81) ($generated@@22 $generated@@84 $generated@@82 $generated@@83 $generated@@80))
)))
(assert (forall (($generated@@86 T@U) ) (!  (and (= ($generated@@21 ($generated@@24 $generated@@86)) $generated@@2) (= ($generated@@85 ($generated@@24 $generated@@86)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (!  (and (= ($generated@@21 ($generated@@25 $generated@@87)) $generated@@3) (= ($generated@@85 ($generated@@25 $generated@@87)) $generated@@4))
 :pattern ( ($generated@@25 $generated@@87))
)))
(assert  (=> (< 0 $generated@@62) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and (and ($generated@@74 $generated@@89) (and (or (not (= $generated@@90 $generated@@29)) (not true)) (= ($generated@@64 $generated@@90) ($generated@@25 $generated@@88)))) ($generated@@10 ($generated@@30 $generated@@6 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@89 $generated@@90) $generated@@1)))) ($generated@@22 $generated@@23 ($generated@@71 $generated@@88 $generated@@90) ($generated@@25 $generated@@88) $generated@@89))
 :pattern ( ($generated@@71 $generated@@88 $generated@@90) ($generated@@30 $generated@@6 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@89 $generated@@90) $generated@@1)))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@65 $generated@@23 $generated@@92 ($generated@@25 $generated@@91))  (or (= $generated@@92 $generated@@29) (= ($generated@@64 $generated@@92) ($generated@@25 $generated@@91))))
 :pattern ( ($generated@@65 $generated@@23 $generated@@92 ($generated@@25 $generated@@91)))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or (not (= $generated@@93 $generated@@95)) (not true)) (=> (and ($generated@@58 $generated@@93 $generated@@94) ($generated@@58 $generated@@94 $generated@@95)) ($generated@@58 $generated@@93 $generated@@95)))
 :pattern ( ($generated@@58 $generated@@93 $generated@@94) ($generated@@58 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@24 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@24 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@98 ($generated@@25 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@25 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@30 $generated@@101 ($generated@@68 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@68 $generated@@101 $generated@@100))
)))
(assert  (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@102 $generated@@105 $generated@@106 $generated@@107 ($generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@102 $generated@@112 $generated@@113 $generated@@114 ($generated@@104 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@102 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@102 $generated@@121 $generated@@122 $generated@@123 ($generated@@104 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@102 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Bool) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@10 ($generated@@102 $generated@@23 $generated@@32 $generated@@6 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@130)) (not true)) ($generated@@10 ($generated@@30 $generated@@6 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@131 $generated@@134) $generated@@132)))) $generated@@133))
 :pattern ( ($generated@@102 $generated@@23 $generated@@32 $generated@@6 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@74 ($generated@@35 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@136 $generated@@137 ($generated@@35 $generated@@32 $generated@@33 ($generated@@31 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@136 $generated@@137) $generated@@138 $generated@@139))) ($generated@@58 $generated@@136 ($generated@@35 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@136 $generated@@137 ($generated@@35 $generated@@32 $generated@@33 ($generated@@31 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@136 $generated@@137) $generated@@138 $generated@@139))))
 :pattern ( ($generated@@35 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@136 $generated@@137 ($generated@@35 $generated@@32 $generated@@33 ($generated@@31 $generated@@23 ($generated@@34 $generated@@32 $generated@@33) $generated@@136 $generated@@137) $generated@@138 $generated@@139)))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! ($generated@@22 $generated@@7 $generated@@141 $generated $generated@@140)
 :pattern ( ($generated@@22 $generated@@7 $generated@@141 $generated $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! ($generated@@65 $generated@@7 $generated@@142 $generated)
 :pattern ( ($generated@@65 $generated@@7 $generated@@142 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@148 true))
(let (($generated@@149  (=> (or (not (= $generated@@143 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= $generated@@143 $generated@@29)) (not true))) (=> (or (not (= $generated@@143 $generated@@29)) (not true)) (=> (= (ControlFlow 0 3) 1) $generated@@148))))))
(let (($generated@@150  (=> (and (= $generated@@143 $generated@@29) (= (ControlFlow 0 2) 1)) $generated@@148)))
(let (($generated@@151  (=> (= $generated@@144 ($generated@@103 $generated@@29 $generated@@145 $generated@@1 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@150) (=> (= (ControlFlow 0 5) 3) $generated@@149)))))
(let (($generated@@152  (=> (and ($generated@@74 $generated@@145) ($generated@@146 $generated@@145)) (=> (and (and ($generated@@65 $generated@@23 $generated@@143 ($generated@@25 $generated@@147)) ($generated@@22 $generated@@23 $generated@@143 ($generated@@25 $generated@@147) $generated@@145)) (and (= 1 $generated@@62) (= (ControlFlow 0 6) 5))) $generated@@151))))
$generated@@152))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
