(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@45 () Int)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U T@U T@U T@U Int Int) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U T@U T@U Int Int) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (Int) Int)
(declare-fun $generated@@58 (T@U) Int)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@U Int) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) Bool)
(declare-fun $generated@@113 (Int) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@162 (T@U Int) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U) Bool)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Int)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@226 (T@U) Int)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@2) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and (or (not (= $generated@@32 $generated@@28)) (not true)) (= ($generated@@29 $generated@@32) ($generated@@27 $generated@@31))) ($generated@@30 $generated@@10 ($generated@@14 ($generated@@26 $generated@@32)) $generated))
 :pattern ( ($generated@@26 $generated@@32) ($generated@@27 $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (and (or (not (= $generated@@35 $generated@@28)) (not true)) (= ($generated@@29 $generated@@35) ($generated@@27 $generated@@34))) ($generated@@30 $generated@@10 ($generated@@14 ($generated@@33 $generated@@35)) $generated))
 :pattern ( ($generated@@33 $generated@@35) ($generated@@27 $generated@@34))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! ($generated@@36 $generated@@10 $generated@@38 $generated@@37 $generated@@39)
 :pattern ( ($generated@@36 $generated@@10 $generated@@38 $generated@@37 $generated@@39))
)))
(assert (= ($generated@@8 $generated@@40) 3))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@36 $generated@@40 $generated@@43 ($generated@@41 $generated@@42) $generated@@44) ($generated@@36 $generated@@40 $generated@@43 ($generated@@27 $generated@@42) $generated@@44))
 :pattern ( ($generated@@36 $generated@@40 $generated@@43 ($generated@@41 $generated@@42) $generated@@44))
 :pattern ( ($generated@@36 $generated@@40 $generated@@43 ($generated@@27 $generated@@42) $generated@@44))
)))
(assert (= ($generated@@8 $generated@@46) 4))
(assert  (=> (<= 0 $generated@@45) (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 Int) ($generated@@57 Int) ) (!  (=> (or ($generated@@49 $generated@@52 $generated@@54 $generated@@55 $generated@@56 $generated@@57) (and (< 0 $generated@@45) (and (and (and (and ($generated@@50 $generated@@54) (and ($generated@@30 $generated@@40 $generated@@55 ($generated@@41 $generated@@52)) ($generated@@36 $generated@@40 $generated@@55 ($generated@@41 $generated@@52) $generated@@54))) (<= ($generated@@51 0) $generated@@56)) (<= ($generated@@51 0) $generated@@57)) (and (and (<= $generated@@56 ($generated@@26 $generated@@55)) (<= $generated@@57 ($generated@@33 $generated@@55))) (=> (= $generated@@56 ($generated@@26 $generated@@55)) (= $generated@@57 ($generated@@51 0))))))) ($generated@@36 $generated@@46 ($generated@@47 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57) ($generated@@48 $generated@@52) $generated@@54))
 :pattern ( ($generated@@36 $generated@@46 ($generated@@47 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57) ($generated@@48 $generated@@52) $generated@@54))
))))
(assert (= ($generated@@58 $generated@@59) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@61 $generated@@68 $generated@@69 ($generated@@65 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@72) $generated@@70)
 :weight 0
)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@61 $generated@@73 $generated@@74 ($generated@@65 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@61 $generated@@73 $generated@@74 $generated@@76 $generated@@78)))
 :weight 0
))) (= ($generated@@8 $generated@@62) 5)) (= ($generated@@8 $generated@@63) 6)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (= ($generated@@8 ($generated@@64 $generated@@79 $generated@@80)) 7))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@66 ($generated@@64 $generated@@81 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@64 $generated@@81 $generated@@82))
))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@83 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@64 $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@36 $generated@@40 $generated@@86 ($generated@@27 $generated@@85) $generated@@87)  (or (= $generated@@86 $generated@@28) ($generated@@13 ($generated@@60 $generated@@9 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@87 $generated@@86) $generated@@2)))))
 :pattern ( ($generated@@36 $generated@@40 $generated@@86 ($generated@@27 $generated@@85) $generated@@87))
)))
(assert (forall (($generated@@88 Int) ) (! (= ($generated@@51 $generated@@88) $generated@@88)
 :pattern ( ($generated@@51 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 $generated@@90) $generated@@90)
 :pattern ( ($generated@@89 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and ($generated@@30 $generated@@46 $generated@@94 ($generated@@48 $generated@@96)) ($generated@@93 $generated@@95 $generated@@96)) ($generated@@30 $generated@@46 ($generated@@92 $generated@@94 $generated@@95) ($generated@@48 $generated@@96)))
 :pattern ( ($generated@@30 $generated@@46 ($generated@@92 $generated@@94 $generated@@95) ($generated@@48 $generated@@96)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 ($generated@@60 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@60 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 Int) ) (! (= ($generated@@24 ($generated@@100 $generated@@101 $generated@@102)) (+ ($generated@@24 $generated@@101) 1))
 :pattern ( ($generated@@100 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@30 $generated@@10 $generated@@103 $generated@@37) (<= ($generated@@51 0) ($generated@@15 $generated@@103)))
 :pattern ( ($generated@@30 $generated@@10 $generated@@103 $generated@@37))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@58 ($generated@@92 $generated@@104 $generated@@105)) (+ 1 ($generated@@58 $generated@@104)))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@30 $generated@@40 $generated@@107 ($generated@@41 $generated@@106))  (and ($generated@@30 $generated@@40 $generated@@107 ($generated@@27 $generated@@106)) (or (not (= $generated@@107 $generated@@28)) (not true))))
 :pattern ( ($generated@@30 $generated@@40 $generated@@107 ($generated@@41 $generated@@106)))
 :pattern ( ($generated@@30 $generated@@40 $generated@@107 ($generated@@27 $generated@@106)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@108 ($generated@@97 $generated@@112 $generated@@109) $generated@@110 $generated@@111) ($generated@@36 $generated@@112 $generated@@109 $generated@@110 $generated@@111))
 :pattern ( ($generated@@108 ($generated@@97 $generated@@112 $generated@@109) $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 Int) ($generated@@118 Int) ) (!  (=> (and (and (and ($generated@@50 $generated@@115) (and (or (not (= $generated@@116 $generated@@28)) (not true)) (= ($generated@@29 $generated@@116) ($generated@@27 $generated@@114)))) (and (and (<= 0 $generated@@117) (< $generated@@117 ($generated@@26 $generated@@116))) (and (<= 0 $generated@@118) (< $generated@@118 ($generated@@33 $generated@@116))))) ($generated@@13 ($generated@@60 $generated@@9 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@115 $generated@@116) $generated@@2)))) ($generated@@108 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@115 $generated@@116) ($generated@@100 ($generated@@113 $generated@@117) $generated@@118)) $generated@@114 $generated@@115))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@115 $generated@@116) ($generated@@100 ($generated@@113 $generated@@117) $generated@@118)) ($generated@@27 $generated@@114))
)))
(assert (forall (($generated@@120 T@U) ) (!  (and (= ($generated@@25 ($generated@@27 $generated@@120)) $generated@@4) (= ($generated@@119 ($generated@@27 $generated@@120)) $generated@@7))
 :pattern ( ($generated@@27 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (!  (and (= ($generated@@25 ($generated@@41 $generated@@121)) $generated@@5) (= ($generated@@119 ($generated@@41 $generated@@121)) $generated@@7))
 :pattern ( ($generated@@41 $generated@@121))
)))
(assert  (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@122 $generated@@125 $generated@@126 $generated@@127 ($generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@122 $generated@@132 $generated@@133 $generated@@134 ($generated@@124 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@122 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@122 $generated@@141 $generated@@142 $generated@@143 ($generated@@124 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@122 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@13 ($generated@@122 $generated@@40 $generated@@62 $generated@@9 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@13 ($generated@@60 $generated@@9 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@151 $generated@@154) $generated@@152)))) (= $generated@@154 $generated@@153)))
 :pattern ( ($generated@@122 $generated@@40 $generated@@62 $generated@@9 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@58 ($generated@@156 $generated@@157 $generated@@158)) (+ ($generated@@58 $generated@@157) ($generated@@58 $generated@@158)))
 :pattern ( ($generated@@58 ($generated@@156 $generated@@157 $generated@@158)))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> ($generated@@93 $generated@@159 $generated@@37) (and (= ($generated@@97 $generated@@10 ($generated@@60 $generated@@10 $generated@@159)) $generated@@159) ($generated@@30 $generated@@10 ($generated@@60 $generated@@10 $generated@@159) $generated@@37)))
 :pattern ( ($generated@@93 $generated@@159 $generated@@37))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@30 $generated@@40 $generated@@161 ($generated@@27 $generated@@160))  (or (= $generated@@161 $generated@@28) (= ($generated@@29 $generated@@161) ($generated@@27 $generated@@160))))
 :pattern ( ($generated@@30 $generated@@40 $generated@@161 ($generated@@27 $generated@@160)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ($generated@@165 T@U) ) (!  (and (=> (= $generated@@164 ($generated@@58 $generated@@163)) (= ($generated@@162 ($generated@@92 $generated@@163 $generated@@165) $generated@@164) $generated@@165)) (=> (or (not (= $generated@@164 ($generated@@58 $generated@@163))) (not true)) (= ($generated@@162 ($generated@@92 $generated@@163 $generated@@165) $generated@@164) ($generated@@162 $generated@@163 $generated@@164))))
 :pattern ( ($generated@@162 ($generated@@92 $generated@@163 $generated@@165) $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Int) ($generated@@172 Int) ) (! (= ($generated@@47 $generated@@167 ($generated@@166 $generated@@168) $generated@@169 $generated@@170 $generated@@171 $generated@@172) ($generated@@47 $generated@@167 $generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@172))
 :pattern ( ($generated@@47 $generated@@167 ($generated@@166 $generated@@168) $generated@@169 $generated@@170 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 Int) ) (!  (=> (and (and ($generated@@50 $generated@@174) (and (or (not (= $generated@@175 $generated@@28)) (not true)) (= ($generated@@29 $generated@@175) ($generated@@27 $generated@@173)))) (and (and (<= 0 $generated@@176) (< $generated@@176 ($generated@@26 $generated@@175))) (and (<= 0 $generated@@177) (< $generated@@177 ($generated@@33 $generated@@175))))) ($generated@@93 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@174 $generated@@175) ($generated@@100 ($generated@@113 $generated@@176) $generated@@177)) $generated@@173))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@174 $generated@@175) ($generated@@100 ($generated@@113 $generated@@176) $generated@@177)) ($generated@@27 $generated@@173))
)))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (or ($generated@@179 $generated@@181 $generated@@182 $generated@@183) (and (< 1 $generated@@45) (and ($generated@@50 $generated@@182) ($generated@@30 $generated@@40 $generated@@183 ($generated@@41 $generated@@181))))) (and ($generated@@49 $generated@@181 $generated@@182 $generated@@183 ($generated@@51 0) ($generated@@51 0)) (= ($generated@@178 $generated@@181 $generated@@182 $generated@@183) ($generated@@47 $generated@@181 ($generated@@166 $generated@@180) $generated@@182 $generated@@183 ($generated@@51 0) ($generated@@51 0)))))
 :pattern ( ($generated@@178 $generated@@181 $generated@@182 $generated@@183) ($generated@@50 $generated@@182))
))))
(assert (forall (($generated@@184 T@U) ) (!  (=> ($generated@@93 $generated@@184 $generated) (and (= ($generated@@97 $generated@@10 ($generated@@60 $generated@@10 $generated@@184)) $generated@@184) ($generated@@30 $generated@@10 ($generated@@60 $generated@@10 $generated@@184) $generated)))
 :pattern ( ($generated@@93 $generated@@184 $generated))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@T) ) (! (= ($generated@@93 ($generated@@97 $generated@@187 $generated@@185) $generated@@186) ($generated@@30 $generated@@187 $generated@@185 $generated@@186))
 :pattern ( ($generated@@93 ($generated@@97 $generated@@187 $generated@@185) $generated@@186))
)))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (or ($generated@@179 $generated@@188 $generated@@189 $generated@@190) (and (< 1 $generated@@45) (and ($generated@@50 $generated@@189) (and ($generated@@30 $generated@@40 $generated@@190 ($generated@@41 $generated@@188)) ($generated@@36 $generated@@40 $generated@@190 ($generated@@41 $generated@@188) $generated@@189))))) ($generated@@36 $generated@@46 ($generated@@178 $generated@@188 $generated@@189 $generated@@190) ($generated@@48 $generated@@188) $generated@@189))
 :pattern ( ($generated@@36 $generated@@46 ($generated@@178 $generated@@188 $generated@@189 $generated@@190) ($generated@@48 $generated@@188) $generated@@189))
))))
(assert (forall (($generated@@191 T@U) ) (! (<= 0 ($generated@@58 $generated@@191))
 :pattern ( ($generated@@58 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ) (! (<= 0 ($generated@@26 $generated@@192))
 :pattern ( ($generated@@26 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ) (! (<= 0 ($generated@@33 $generated@@193))
 :pattern ( ($generated@@33 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@36 $generated@@46 $generated@@194 ($generated@@48 $generated@@195) $generated@@196) (forall (($generated@@197 Int) ) (!  (=> (and (<= 0 $generated@@197) (< $generated@@197 ($generated@@58 $generated@@194))) ($generated@@108 ($generated@@162 $generated@@194 $generated@@197) $generated@@195 $generated@@196))
 :pattern ( ($generated@@162 $generated@@194 $generated@@197))
)))
 :pattern ( ($generated@@36 $generated@@46 $generated@@194 ($generated@@48 $generated@@195) $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ) (! (= ($generated@@198 ($generated@@48 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@48 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@25 ($generated@@48 $generated@@200)) $generated@@1)
 :pattern ( ($generated@@48 $generated@@200))
)))
(assert (forall (($generated@@201 Int) ) (! (= ($generated@@24 ($generated@@113 $generated@@201)) 1)
 :pattern ( ($generated@@113 $generated@@201))
)))
(assert (forall (($generated@@203 Int) ) (! (= ($generated@@202 ($generated@@113 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@113 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@204 ($generated@@27 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@27 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ) (! (= ($generated@@206 ($generated@@41 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@41 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@T) ) (! (= ($generated@@60 $generated@@209 ($generated@@97 $generated@@209 $generated@@208)) $generated@@208)
 :pattern ( ($generated@@97 $generated@@209 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and ($generated@@50 $generated@@211) (and (or (not (= $generated@@212 $generated@@28)) (not true)) (= ($generated@@29 $generated@@212) ($generated@@27 $generated@@210)))) ($generated@@13 ($generated@@60 $generated@@9 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@211 $generated@@212) $generated@@2)))) ($generated@@36 $generated@@10 ($generated@@14 ($generated@@26 $generated@@212)) $generated $generated@@211))
 :pattern ( ($generated@@26 $generated@@212) ($generated@@60 $generated@@9 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@211 $generated@@212) $generated@@2)) ($generated@@27 $generated@@210))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and ($generated@@50 $generated@@214) (and (or (not (= $generated@@215 $generated@@28)) (not true)) (= ($generated@@29 $generated@@215) ($generated@@27 $generated@@213)))) ($generated@@13 ($generated@@60 $generated@@9 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@214 $generated@@215) $generated@@2)))) ($generated@@36 $generated@@10 ($generated@@14 ($generated@@33 $generated@@215)) $generated $generated@@214))
 :pattern ( ($generated@@33 $generated@@215) ($generated@@60 $generated@@9 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@214 $generated@@215) $generated@@2)) ($generated@@27 $generated@@213))
)))
(assert  (=> (<= 0 $generated@@45) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (or ($generated@@49 $generated@@216 $generated@@218 $generated@@219 $generated@@220 $generated@@221) (and (< 0 $generated@@45) (and (and (and (and ($generated@@50 $generated@@218) (and ($generated@@30 $generated@@40 $generated@@219 ($generated@@41 $generated@@216)) ($generated@@36 $generated@@40 $generated@@219 ($generated@@41 $generated@@216) $generated@@218))) (<= ($generated@@51 0) $generated@@220)) (<= ($generated@@51 0) $generated@@221)) (and (and (<= $generated@@220 ($generated@@26 $generated@@219)) (<= $generated@@221 ($generated@@33 $generated@@219))) (=> (= $generated@@220 ($generated@@26 $generated@@219)) (= $generated@@221 ($generated@@51 0))))))) ($generated@@30 $generated@@46 ($generated@@47 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221) ($generated@@48 $generated@@216)))
 :pattern ( ($generated@@47 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (or ($generated@@179 $generated@@222 $generated@@223 $generated@@224) (and (< 1 $generated@@45) (and ($generated@@50 $generated@@223) (and ($generated@@30 $generated@@40 $generated@@224 ($generated@@41 $generated@@222)) ($generated@@36 $generated@@40 $generated@@224 ($generated@@41 $generated@@222) $generated@@223))))) ($generated@@30 $generated@@46 ($generated@@178 $generated@@222 $generated@@223 $generated@@224) ($generated@@48 $generated@@222)))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 Int) ) (!  (and (= ($generated@@225 ($generated@@100 $generated@@227 $generated@@228)) $generated@@227) (= ($generated@@226 ($generated@@100 $generated@@227 $generated@@228)) $generated@@228))
 :pattern ( ($generated@@100 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (and (= ($generated@@229 ($generated@@92 $generated@@231 $generated@@232)) $generated@@231) (= ($generated@@230 ($generated@@92 $generated@@231 $generated@@232)) $generated@@232))
 :pattern ( ($generated@@92 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> ($generated@@93 $generated@@233 ($generated@@48 $generated@@234)) (and (= ($generated@@97 $generated@@46 ($generated@@60 $generated@@46 $generated@@233)) $generated@@233) ($generated@@30 $generated@@46 ($generated@@60 $generated@@46 $generated@@233) ($generated@@48 $generated@@234))))
 :pattern ( ($generated@@93 $generated@@233 ($generated@@48 $generated@@234)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> ($generated@@93 $generated@@236 ($generated@@27 $generated@@235)) (and (= ($generated@@97 $generated@@40 ($generated@@60 $generated@@40 $generated@@236)) $generated@@236) ($generated@@30 $generated@@40 ($generated@@60 $generated@@40 $generated@@236) ($generated@@27 $generated@@235))))
 :pattern ( ($generated@@93 $generated@@236 ($generated@@27 $generated@@235)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> ($generated@@93 $generated@@238 ($generated@@41 $generated@@237)) (and (= ($generated@@97 $generated@@40 ($generated@@60 $generated@@40 $generated@@238)) $generated@@238) ($generated@@30 $generated@@40 ($generated@@60 $generated@@40 $generated@@238) ($generated@@41 $generated@@237))))
 :pattern ( ($generated@@93 $generated@@238 ($generated@@41 $generated@@237)))
)))
(assert  (=> (<= 0 $generated@@45) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Int) ($generated@@244 Int) ) (!  (=> (or ($generated@@49 $generated@@239 $generated@@241 $generated@@242 $generated@@243 $generated@@244) (and (< 0 $generated@@45) (and (and (and (and ($generated@@50 $generated@@241) ($generated@@30 $generated@@40 $generated@@242 ($generated@@41 $generated@@239))) (<= ($generated@@51 0) $generated@@243)) (<= ($generated@@51 0) $generated@@244)) (and (and (<= $generated@@243 ($generated@@26 $generated@@242)) (<= $generated@@244 ($generated@@33 $generated@@242))) (=> (= $generated@@243 ($generated@@26 $generated@@242)) (= $generated@@244 ($generated@@51 0))))))) (and (=> (or (not (= $generated@@243 ($generated@@26 $generated@@242))) (not true)) (and (=> (= $generated@@244 ($generated@@33 $generated@@242)) ($generated@@49 $generated@@239 $generated@@241 $generated@@242 (+ $generated@@243 1) ($generated@@51 0))) (=> (or (not (= $generated@@244 ($generated@@33 $generated@@242))) (not true)) ($generated@@49 $generated@@239 $generated@@241 $generated@@242 $generated@@243 (+ $generated@@244 1))))) (= ($generated@@47 $generated@@239 ($generated@@166 $generated@@240) $generated@@241 $generated@@242 $generated@@243 $generated@@244) (ite (= $generated@@243 ($generated@@26 $generated@@242)) $generated@@59 (ite (= $generated@@244 ($generated@@33 $generated@@242)) ($generated@@47 $generated@@239 $generated@@240 $generated@@241 $generated@@242 (+ $generated@@243 1) ($generated@@51 0)) ($generated@@156 ($generated@@92 $generated@@59 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@241 $generated@@242) ($generated@@100 ($generated@@113 $generated@@243) $generated@@244))) ($generated@@47 $generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243 (+ $generated@@244 1))))))))
 :pattern ( ($generated@@47 $generated@@239 ($generated@@166 $generated@@240) $generated@@241 $generated@@242 $generated@@243 $generated@@244) ($generated@@50 $generated@@241))
))))
(assert (= ($generated@@25 $generated@@37) $generated@@3))
(assert (= ($generated@@119 $generated@@37) $generated@@6))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Int) ) (!  (and (=> (< $generated@@247 ($generated@@58 $generated@@245)) (= ($generated@@162 ($generated@@156 $generated@@245 $generated@@246) $generated@@247) ($generated@@162 $generated@@245 $generated@@247))) (=> (<= ($generated@@58 $generated@@245) $generated@@247) (= ($generated@@162 ($generated@@156 $generated@@245 $generated@@246) $generated@@247) ($generated@@162 $generated@@246 (- $generated@@247 ($generated@@58 $generated@@245))))))
 :pattern ( ($generated@@162 ($generated@@156 $generated@@245 $generated@@246) $generated@@247))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@97 $generated@@10 ($generated@@14 ($generated@@51 $generated@@248))) ($generated@@89 $generated@@63 ($generated@@97 $generated@@10 ($generated@@14 $generated@@248))))
 :pattern ( ($generated@@97 $generated@@10 ($generated@@14 ($generated@@51 $generated@@248))))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@T) ) (! (= ($generated@@97 $generated@@250 ($generated@@89 $generated@@250 $generated@@249)) ($generated@@89 $generated@@63 ($generated@@97 $generated@@250 $generated@@249)))
 :pattern ( ($generated@@97 $generated@@250 ($generated@@89 $generated@@250 $generated@@249)))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= ($generated@@58 $generated@@251) 0) (= $generated@@251 $generated@@59))
 :pattern ( ($generated@@58 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! ($generated@@36 $generated@@10 $generated@@253 $generated $generated@@252)
 :pattern ( ($generated@@36 $generated@@10 $generated@@253 $generated $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= ($generated@@30 $generated@@46 $generated@@254 ($generated@@48 $generated@@255)) (forall (($generated@@256 Int) ) (!  (=> (and (<= 0 $generated@@256) (< $generated@@256 ($generated@@58 $generated@@254))) ($generated@@93 ($generated@@162 $generated@@254 $generated@@256) $generated@@255))
 :pattern ( ($generated@@162 $generated@@254 $generated@@256))
)))
 :pattern ( ($generated@@30 $generated@@46 $generated@@254 ($generated@@48 $generated@@255)))
)))
(assert (forall (($generated@@257 T@U) ) (! ($generated@@30 $generated@@10 $generated@@257 $generated)
 :pattern ( ($generated@@30 $generated@@10 $generated@@257 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () Int)
(declare-fun $generated@@262 () Int)
(declare-fun $generated@@263 () Bool)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@266  (=> ($generated@@36 $generated@@40 $generated@@258 ($generated@@41 $generated@@259) $generated@@260) (and (=> (= (ControlFlow 0 3) (- 0 8)) ($generated@@30 $generated@@10 ($generated@@14 ($generated@@51 0)) $generated@@37)) (=> ($generated@@30 $generated@@10 ($generated@@14 ($generated@@51 0)) $generated@@37) (=> (and (= $generated@@261 ($generated@@51 0)) ($generated@@36 $generated@@10 ($generated@@14 $generated@@261) $generated@@37 $generated@@260)) (and (=> (= (ControlFlow 0 3) (- 0 7)) ($generated@@30 $generated@@10 ($generated@@14 ($generated@@51 0)) $generated@@37)) (=> ($generated@@30 $generated@@10 ($generated@@14 ($generated@@51 0)) $generated@@37) (=> (and (= $generated@@262 ($generated@@51 0)) ($generated@@36 $generated@@10 ($generated@@14 $generated@@262) $generated@@37 $generated@@260)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (<= $generated@@261 ($generated@@26 $generated@@258))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= $generated@@262 ($generated@@33 $generated@@258))) (=> (and (<= $generated@@261 ($generated@@26 $generated@@258)) (<= $generated@@262 ($generated@@33 $generated@@258))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> (= $generated@@261 ($generated@@26 $generated@@258)) (= $generated@@262 ($generated@@51 0)))) (=> (=> (= $generated@@261 ($generated@@26 $generated@@258)) (= $generated@@262 ($generated@@51 0))) (=> (and (= $generated@@263 (forall (($generated@@267 T@U) ($generated@@268 T@U) )  (=> (and (and (or (not (= $generated@@267 $generated@@28)) (not true)) ($generated@@13 ($generated@@60 $generated@@9 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@40 ($generated@@64 $generated@@62 $generated@@63) $generated@@260 $generated@@267) $generated@@2)))) (= $generated@@267 $generated@@258)) ($generated@@13 ($generated@@122 $generated@@40 $generated@@62 $generated@@9 $generated@@264 $generated@@267 $generated@@268))))) ($generated@@49 $generated@@259 $generated@@260 $generated@@258 ($generated@@51 0) ($generated@@51 0))) (=> (and (and (= ($generated@@178 $generated@@259 $generated@@260 $generated@@258) ($generated@@47 $generated@@259 ($generated@@166 $generated@@180) $generated@@260 $generated@@258 ($generated@@51 0) ($generated@@51 0))) ($generated@@49 $generated@@259 $generated@@260 $generated@@258 ($generated@@51 0) ($generated@@51 0))) (and ($generated@@30 $generated@@46 ($generated@@178 $generated@@259 $generated@@260 $generated@@258) ($generated@@48 $generated@@259)) (= (ControlFlow 0 3) (- 0 2)))) $generated@@263))))))))))))))))
(let (($generated@@269 true))
(let (($generated@@270  (=> (= $generated@@264 ($generated@@123 $generated@@28 $generated@@260 $generated@@2 $generated@@258)) (and (=> (= (ControlFlow 0 9) 1) $generated@@269) (=> (= (ControlFlow 0 9) 3) $generated@@266)))))
(let (($generated@@271  (=> (and (and (and ($generated@@50 $generated@@260) ($generated@@265 $generated@@260)) ($generated@@30 $generated@@40 $generated@@258 ($generated@@41 $generated@@259))) (and (= 1 $generated@@45) (= (ControlFlow 0 10) 9))) $generated@@270)))
$generated@@271)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
