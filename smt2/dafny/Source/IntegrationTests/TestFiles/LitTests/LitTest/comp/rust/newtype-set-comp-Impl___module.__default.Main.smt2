(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (Int Int Int Int) T@U)
(declare-fun $generated@@25 (Int) T@U)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 () Int)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@48 (Int) Bool)
(declare-fun $generated@@49 (Int Int) Int)
(declare-fun $generated@@50 (Int Int) Int)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@57 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@64 (T@U) Int)
(declare-fun $generated@@68 (T@T T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@95 (T@U Int) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@130 (T@T T@T) T@T)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@T) T@T)
(declare-fun $generated@@133 (T@T) T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert  (and (and (and (forall (($generated@@29 T@T) ($generated@@30 T@T) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@22 $generated@@29 $generated@@30 ($generated@@28 $generated@@29 $generated@@30 $generated@@32 $generated@@33 $generated@@31) $generated@@33) $generated@@31)
 :weight 0
)) (forall (($generated@@34 T@T) ($generated@@35 T@T) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (or (= $generated@@38 $generated@@39) (= ($generated@@22 $generated@@34 $generated@@35 ($generated@@28 $generated@@34 $generated@@35 $generated@@37 $generated@@38 $generated@@36) $generated@@39) ($generated@@22 $generated@@34 $generated@@35 $generated@@37 $generated@@39)))
 :weight 0
))) (= ($generated@@6 $generated@@23) 3)) (= ($generated@@6 $generated@@27) 4)))
(assert (forall (($generated@@40 Int) ($generated@@41 Int) ($generated@@42 Int) ($generated@@43 Int) ($generated@@44 T@U) ) (! (= ($generated@@11 ($generated@@22 $generated@@23 $generated@@7 ($generated@@24 $generated@@40 $generated@@41 $generated@@42 $generated@@43) $generated@@44)) (exists (($generated@@45 Int) ) (!  (and (and (and (<= $generated@@40 $generated@@45) (< $generated@@45 $generated@@41)) (and (<= $generated@@42 $generated@@45) (< $generated@@45 $generated@@43))) (= $generated@@44 ($generated@@26 $generated@@27 ($generated@@25 $generated@@45))))
 :pattern ( ($generated@@25 $generated@@45))
)))
 :pattern ( ($generated@@22 $generated@@23 $generated@@7 ($generated@@24 $generated@@40 $generated@@41 $generated@@42 $generated@@43) $generated@@44))
)))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@54 Int) ) (!  (=> (or ($generated@@48 ($generated@@47 $generated@@54)) (and (< 1 $generated@@46) (and (<= ($generated@@47 0) $generated@@54) (< $generated@@54 65536)))) (= ($generated@@25 ($generated@@47 $generated@@54)) (let (($generated@@55 ($generated@@47 ($generated@@49 $generated@@54 ($generated@@47 256)))))
(let (($generated@@56 ($generated@@47 ($generated@@50 $generated@@54 ($generated@@47 256)))))
($generated@@51 $generated@@27 ($generated@@52 ($generated@@52 $generated@@53 ($generated@@26 $generated@@8 ($generated@@12 $generated@@55))) ($generated@@26 $generated@@8 ($generated@@12 $generated@@56))))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@47 $generated@@54)))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! ($generated@@57 $generated@@8 $generated@@59 $generated@@58 $generated@@60)
 :pattern ( ($generated@@57 $generated@@8 $generated@@59 $generated@@58 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! ($generated@@57 $generated@@8 $generated@@62 $generated@@61 $generated@@63)
 :pattern ( ($generated@@57 $generated@@8 $generated@@62 $generated@@61 $generated@@63))
)))
(assert (= ($generated@@64 $generated@@53) 0))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@47 $generated@@65) $generated@@65)
 :pattern ( ($generated@@47 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@51 $generated@@67 $generated@@66) $generated@@66)
 :pattern ( ($generated@@51 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and ($generated@@68 $generated@@27 $generated@@71 ($generated@@69 $generated@@73)) ($generated@@70 $generated@@72 $generated@@73)) ($generated@@68 $generated@@27 ($generated@@52 $generated@@71 $generated@@72) ($generated@@69 $generated@@73)))
 :pattern ( ($generated@@68 $generated@@27 ($generated@@52 $generated@@71 $generated@@72) ($generated@@69 $generated@@73)))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@26 $generated@@76 ($generated@@74 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@74 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@77 ($generated@@78 $generated@@79) $generated@@80) ($generated@@11 ($generated@@22 $generated@@23 $generated@@7 $generated@@79 $generated@@80)))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@79) $generated@@80))
)))
(assert (= ($generated@@6 $generated@@81) 5))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@68 $generated@@81 $generated@@83 ($generated@@82 $generated@@84)) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@77 $generated@@83 $generated@@85) ($generated@@70 $generated@@85 $generated@@84))
 :pattern ( ($generated@@77 $generated@@83 $generated@@85))
)))
 :pattern ( ($generated@@68 $generated@@81 $generated@@83 ($generated@@82 $generated@@84)))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@64 ($generated@@52 $generated@@86 $generated@@87)) (+ 1 ($generated@@64 $generated@@86)))
 :pattern ( ($generated@@52 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@88 ($generated@@26 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@57 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@88 ($generated@@26 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@70 $generated@@93 $generated@@58) (and (= ($generated@@26 $generated@@8 ($generated@@74 $generated@@8 $generated@@93)) $generated@@93) ($generated@@68 $generated@@8 ($generated@@74 $generated@@8 $generated@@93) $generated@@58)))
 :pattern ( ($generated@@70 $generated@@93 $generated@@58))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@70 $generated@@94 $generated@@61) (and (= ($generated@@26 $generated@@8 ($generated@@74 $generated@@8 $generated@@94)) $generated@@94) ($generated@@68 $generated@@8 ($generated@@74 $generated@@8 $generated@@94) $generated@@61)))
 :pattern ( ($generated@@70 $generated@@94 $generated@@61))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 Int) ($generated@@98 T@U) ) (!  (and (=> (= $generated@@97 ($generated@@64 $generated@@96)) (= ($generated@@95 ($generated@@52 $generated@@96 $generated@@98) $generated@@97) $generated@@98)) (=> (or (not (= $generated@@97 ($generated@@64 $generated@@96))) (not true)) (= ($generated@@95 ($generated@@52 $generated@@96 $generated@@98) $generated@@97) ($generated@@95 $generated@@96 $generated@@97))))
 :pattern ( ($generated@@95 ($generated@@52 $generated@@96 $generated@@98) $generated@@97))
)))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@99 Int) ) (!  (=> (or ($generated@@48 $generated@@99) (and (< 1 $generated@@46) (and (<= ($generated@@47 0) $generated@@99) (< $generated@@99 65536)))) ($generated@@68 $generated@@27 ($generated@@25 $generated@@99) ($generated@@69 $generated@@58)))
 :pattern ( ($generated@@25 $generated@@99))
))))
(assert (forall (($generated@@100 Int) ($generated@@101 Int) ) (! (= ($generated@@49 $generated@@100 $generated@@101) (div $generated@@100 $generated@@101))
 :pattern ( ($generated@@49 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@70 ($generated@@26 $generated@@104 $generated@@102) $generated@@103) ($generated@@68 $generated@@104 $generated@@102 $generated@@103))
 :pattern ( ($generated@@70 ($generated@@26 $generated@@104 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (<= 0 ($generated@@64 $generated@@105))
 :pattern ( ($generated@@64 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@57 $generated@@81 $generated@@106 ($generated@@82 $generated@@107) $generated@@108) (forall (($generated@@109 T@U) ) (!  (=> ($generated@@77 $generated@@106 $generated@@109) ($generated@@88 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@77 $generated@@106 $generated@@109))
)))
 :pattern ( ($generated@@57 $generated@@81 $generated@@106 ($generated@@82 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@57 $generated@@27 $generated@@110 ($generated@@69 $generated@@111) $generated@@112) (forall (($generated@@113 Int) ) (!  (=> (and (<= 0 $generated@@113) (< $generated@@113 ($generated@@64 $generated@@110))) ($generated@@88 ($generated@@95 $generated@@110 $generated@@113) $generated@@111 $generated@@112))
 :pattern ( ($generated@@95 $generated@@110 $generated@@113))
)))
 :pattern ( ($generated@@57 $generated@@27 $generated@@110 ($generated@@69 $generated@@111) $generated@@112))
)))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@114 Int) ) (!  (=> (or ($generated@@48 $generated@@114) (and (< 1 $generated@@46) (and (<= ($generated@@47 0) $generated@@114) (< $generated@@114 65536)))) (= ($generated@@25 $generated@@114) (let (($generated@@115 ($generated@@49 $generated@@114 ($generated@@47 256))))
(let (($generated@@116 ($generated@@50 $generated@@114 ($generated@@47 256))))
($generated@@52 ($generated@@52 $generated@@53 ($generated@@26 $generated@@8 ($generated@@12 $generated@@115))) ($generated@@26 $generated@@8 ($generated@@12 $generated@@116)))))))
 :pattern ( ($generated@@25 $generated@@114))
))))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@82 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@82 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@82 $generated@@120)) $generated)
 :pattern ( ($generated@@82 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@69 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@69 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@119 ($generated@@69 $generated@@123)) $generated@@0)
 :pattern ( ($generated@@69 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@74 $generated@@125 ($generated@@26 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@26 $generated@@125 $generated@@124))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@126 $generated@@134 $generated@@135 $generated@@136 ($generated@@131 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@126 $generated@@141 $generated@@142 $generated@@143 ($generated@@131 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@126 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@126 $generated@@150 $generated@@151 $generated@@152 ($generated@@131 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@126 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))) (= ($generated@@6 $generated@@127) 6)) (= ($generated@@6 $generated@@128) 7)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (= ($generated@@6 ($generated@@130 $generated@@159 $generated@@160)) 8))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@132 ($generated@@130 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@130 $generated@@161 $generated@@162))
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@133 ($generated@@130 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@130 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@11 ($generated@@126 $generated@@127 $generated@@128 $generated@@7 ($generated@@129 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (or (not (= $generated@@169 $generated@@165)) (not true)) ($generated@@11 ($generated@@74 $generated@@7 ($generated@@22 $generated@@128 $generated@@23 ($generated@@22 $generated@@127 ($generated@@130 $generated@@128 $generated@@23) $generated@@166 $generated@@169) $generated@@167)))) $generated@@168))
 :pattern ( ($generated@@126 $generated@@127 $generated@@128 $generated@@7 ($generated@@129 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 Int) ($generated@@172 Int) ) (! (= ($generated@@50 $generated@@171 $generated@@172) (mod $generated@@171 $generated@@172))
 :pattern ( ($generated@@50 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (and (= ($generated@@173 ($generated@@52 $generated@@175 $generated@@176)) $generated@@175) (= ($generated@@174 ($generated@@52 $generated@@175 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@52 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@70 $generated@@177 ($generated@@82 $generated@@178)) (and (= ($generated@@26 $generated@@81 ($generated@@74 $generated@@81 $generated@@177)) $generated@@177) ($generated@@68 $generated@@81 ($generated@@74 $generated@@81 $generated@@177) ($generated@@82 $generated@@178))))
 :pattern ( ($generated@@70 $generated@@177 ($generated@@82 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@70 $generated@@179 ($generated@@69 $generated@@180)) (and (= ($generated@@26 $generated@@27 ($generated@@74 $generated@@27 $generated@@179)) $generated@@179) ($generated@@68 $generated@@27 ($generated@@74 $generated@@27 $generated@@179) ($generated@@69 $generated@@180))))
 :pattern ( ($generated@@70 $generated@@179 ($generated@@69 $generated@@180)))
)))
(assert (= ($generated@@119 $generated@@58) $generated@@2))
(assert (= ($generated@@181 $generated@@58) $generated@@4))
(assert (= ($generated@@119 $generated@@61) $generated@@3))
(assert (= ($generated@@181 $generated@@61) $generated@@5))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@68 $generated@@8 $generated@@182 $generated@@58)  (and (<= ($generated@@47 0) ($generated@@13 $generated@@182)) (< ($generated@@13 $generated@@182) 256)))
 :pattern ( ($generated@@68 $generated@@8 $generated@@182 $generated@@58))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@68 $generated@@8 $generated@@183 $generated@@61)  (and (<= ($generated@@47 0) ($generated@@13 $generated@@183)) (< ($generated@@13 $generated@@183) 65536)))
 :pattern ( ($generated@@68 $generated@@8 $generated@@183 $generated@@61))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@26 $generated@@8 ($generated@@12 ($generated@@47 $generated@@184))) ($generated@@51 $generated@@23 ($generated@@26 $generated@@8 ($generated@@12 $generated@@184))))
 :pattern ( ($generated@@26 $generated@@8 ($generated@@12 ($generated@@47 $generated@@184))))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@T) ) (! (= ($generated@@26 $generated@@186 ($generated@@51 $generated@@186 $generated@@185)) ($generated@@51 $generated@@23 ($generated@@26 $generated@@186 $generated@@185)))
 :pattern ( ($generated@@26 $generated@@186 ($generated@@51 $generated@@186 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= ($generated@@64 $generated@@187) 0) (= $generated@@187 $generated@@53))
 :pattern ( ($generated@@64 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@68 $generated@@27 $generated@@188 ($generated@@69 $generated@@189)) (forall (($generated@@190 Int) ) (!  (=> (and (<= 0 $generated@@190) (< $generated@@190 ($generated@@64 $generated@@188))) ($generated@@70 ($generated@@95 $generated@@188 $generated@@190) $generated@@189))
 :pattern ( ($generated@@95 $generated@@188 $generated@@190))
)))
 :pattern ( ($generated@@68 $generated@@27 $generated@@188 ($generated@@69 $generated@@189)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@200 true))
(let (($generated@@201  (=> (and (not (and (<= ($generated@@47 0) $generated@@191) (< $generated@@191 65535))) (= (ControlFlow 0 4) 1)) $generated@@200)))
(let (($generated@@202  (=> (and (and (and (<= ($generated@@47 0) $generated@@191) (< $generated@@191 65535)) ($generated@@57 $generated@@8 ($generated@@12 $generated@@191) $generated@@61 $generated@@192)) (and ($generated@@48 $generated@@191) (= (ControlFlow 0 3) 1))) $generated@@200)))
(let (($generated@@203  (=> (< $generated@@191 ($generated@@47 0)) (and (=> (= (ControlFlow 0 7) 3) $generated@@202) (=> (= (ControlFlow 0 7) 4) $generated@@201)))))
(let (($generated@@204  (=> (and (<= ($generated@@47 0) $generated@@191) (= $generated@@193 ($generated@@47 65535))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= ($generated@@47 0) $generated@@193) (< $generated@@193 65536))) (=> (and (<= ($generated@@47 0) $generated@@193) (< $generated@@193 65536)) (and (=> (= (ControlFlow 0 5) 3) $generated@@202) (=> (= (ControlFlow 0 5) 4) $generated@@201)))))))
(let (($generated@@205  (=> (and (and (<= ($generated@@47 0) $generated@@191) (< $generated@@191 65536)) (= $generated@@194 ($generated@@47 0))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= ($generated@@47 0) $generated@@194) (< $generated@@194 65536))) (=> (and (<= ($generated@@47 0) $generated@@194) (< $generated@@194 65536)) (and (=> (= (ControlFlow 0 8) 5) $generated@@204) (=> (= (ControlFlow 0 8) 7) $generated@@203)))))))
(let (($generated@@206  (=> (and (not (and (<= ($generated@@47 0) $generated@@191) (< $generated@@191 65536))) (= (ControlFlow 0 2) 1)) $generated@@200)))
(let (($generated@@207  (=> (= $generated@@195 ($generated@@129 $generated@@196 $generated@@192 $generated@@1 false)) (and (=> (= (ControlFlow 0 10) 8) $generated@@205) (=> (= (ControlFlow 0 10) 2) $generated@@206)))))
(let (($generated@@208  (=> (and ($generated@@197 $generated@@192) ($generated@@198 $generated@@192)) (=> (and (and (and ($generated@@68 $generated@@81 $generated@@199 ($generated@@82 ($generated@@69 $generated@@58))) ($generated@@57 $generated@@81 $generated@@199 ($generated@@82 ($generated@@69 $generated@@58)) $generated@@192)) true) (and (= 2 $generated@@46) (= (ControlFlow 0 11) 10))) $generated@@207))))
$generated@@208))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
