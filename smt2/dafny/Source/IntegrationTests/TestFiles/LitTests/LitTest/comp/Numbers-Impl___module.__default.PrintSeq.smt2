(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@T T@T) T@T)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@30 (T@T) T@T)
(declare-fun $generated@@31 (T@T) T@T)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@U T@U) Bool)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@U Int) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@107 (Int) T@U)
(declare-fun $generated@@108 (T@U) Int)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@21) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@32 T@T) ($generated@@33 T@T) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@23 $generated@@32 $generated@@33 ($generated@@29 $generated@@32 $generated@@33 $generated@@35 $generated@@36 $generated@@34) $generated@@36) $generated@@34)
 :weight 0
)) (forall (($generated@@37 T@T) ($generated@@38 T@T) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (or (= $generated@@41 $generated@@42) (= ($generated@@23 $generated@@37 $generated@@38 ($generated@@29 $generated@@37 $generated@@38 $generated@@40 $generated@@41 $generated@@39) $generated@@42) ($generated@@23 $generated@@37 $generated@@38 $generated@@40 $generated@@42)))
 :weight 0
))) (= ($generated@@3 $generated@@24) 3)) (= ($generated@@3 $generated@@25) 4)) (= ($generated@@3 $generated@@26) 5)) (forall (($generated@@43 T@T) ($generated@@44 T@T) ) (= ($generated@@3 ($generated@@27 $generated@@43 $generated@@44)) 6))) (forall (($generated@@45 T@T) ($generated@@46 T@T) ) (! (= ($generated@@30 ($generated@@27 $generated@@45 $generated@@46)) $generated@@45)
 :pattern ( ($generated@@27 $generated@@45 $generated@@46))
))) (forall (($generated@@47 T@T) ($generated@@48 T@T) ) (! (= ($generated@@31 ($generated@@27 $generated@@47 $generated@@48)) $generated@@48)
 :pattern ( ($generated@@27 $generated@@47 $generated@@48))
))))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> ($generated@@22 $generated@@49 $generated@@50) (forall (($generated@@51 T@U) ) (!  (=> ($generated@@8 ($generated@@28 $generated@@4 ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@49 $generated@@51) $generated@@2))) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@50 $generated@@51) $generated@@2))))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@50 $generated@@51) $generated@@2))
)))
 :pattern ( ($generated@@22 $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@52 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@56 $generated@@55))
)))
(assert (= ($generated@@3 $generated@@58) 7))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and ($generated@@57 $generated@@58 $generated@@62 ($generated@@60 $generated@@64)) ($generated@@61 $generated@@63 $generated@@64)) ($generated@@57 $generated@@58 ($generated@@59 $generated@@62 $generated@@63) ($generated@@60 $generated@@64)))
 :pattern ( ($generated@@57 $generated@@58 ($generated@@59 $generated@@62 $generated@@63) ($generated@@60 $generated@@64)))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 ($generated@@28 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@28 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@20 ($generated@@59 $generated@@68 $generated@@69)) (+ 1 ($generated@@20 $generated@@68)))
 :pattern ( ($generated@@59 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@65 $generated@@75 $generated@@72) $generated@@73 $generated@@74) ($generated@@71 $generated@@75 $generated@@72 $generated@@73 $generated@@74))
 :pattern ( ($generated@@70 ($generated@@65 $generated@@75 $generated@@72) $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> ($generated@@22 $generated@@76 $generated@@77) (=> ($generated@@70 $generated@@78 $generated@@79 $generated@@76) ($generated@@70 $generated@@78 $generated@@79 $generated@@77)))
 :pattern ( ($generated@@22 $generated@@76 $generated@@77) ($generated@@70 $generated@@78 $generated@@79 $generated@@76))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (!  (=> ($generated@@22 $generated@@80 $generated@@81) (=> ($generated@@71 $generated@@84 $generated@@82 $generated@@83 $generated@@80) ($generated@@71 $generated@@84 $generated@@82 $generated@@83 $generated@@81)))
 :pattern ( ($generated@@22 $generated@@80 $generated@@81) ($generated@@71 $generated@@84 $generated@@82 $generated@@83 $generated@@80))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 Int) ($generated@@88 T@U) ) (!  (and (=> (= $generated@@87 ($generated@@20 $generated@@86)) (= ($generated@@85 ($generated@@59 $generated@@86 $generated@@88) $generated@@87) $generated@@88)) (=> (or (not (= $generated@@87 ($generated@@20 $generated@@86))) (not true)) (= ($generated@@85 ($generated@@59 $generated@@86 $generated@@88) $generated@@87) ($generated@@85 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@85 ($generated@@59 $generated@@86 $generated@@88) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or (not (= $generated@@89 $generated@@91)) (not true)) (=> (and ($generated@@22 $generated@@89 $generated@@90) ($generated@@22 $generated@@90 $generated@@91)) ($generated@@22 $generated@@89 $generated@@91)))
 :pattern ( ($generated@@22 $generated@@89 $generated@@90) ($generated@@22 $generated@@90 $generated@@91))
)))
(assert (= ($generated@@3 $generated@@92) 8))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@61 $generated@@93 $generated) (and (= ($generated@@65 $generated@@92 ($generated@@28 $generated@@92 $generated@@93)) $generated@@93) ($generated@@57 $generated@@92 ($generated@@28 $generated@@92 $generated@@93) $generated)))
 :pattern ( ($generated@@61 $generated@@93 $generated))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@61 ($generated@@65 $generated@@96 $generated@@94) $generated@@95) ($generated@@57 $generated@@96 $generated@@94 $generated@@95))
 :pattern ( ($generated@@61 ($generated@@65 $generated@@96 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (<= 0 ($generated@@20 $generated@@97))
 :pattern ( ($generated@@20 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@71 $generated@@58 $generated@@98 ($generated@@60 $generated@@99) $generated@@100) (forall (($generated@@101 Int) ) (!  (=> (and (<= 0 $generated@@101) (< $generated@@101 ($generated@@20 $generated@@98))) ($generated@@70 ($generated@@85 $generated@@98 $generated@@101) $generated@@99 $generated@@100))
 :pattern ( ($generated@@85 $generated@@98 $generated@@101))
)))
 :pattern ( ($generated@@71 $generated@@58 $generated@@98 ($generated@@60 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@102 ($generated@@60 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@60 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@19 ($generated@@60 $generated@@104)) $generated@@1)
 :pattern ( ($generated@@60 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@28 $generated@@106 ($generated@@65 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@65 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@109 Int) ) (!  (=> (or (and (<= 0 $generated@@109) (< $generated@@109 55296)) (and (<= 57344 $generated@@109) (< $generated@@109 1114112))) (= ($generated@@108 ($generated@@107 $generated@@109)) $generated@@109))
 :pattern ( ($generated@@107 $generated@@109))
)))
(assert  (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@110 $generated@@113 $generated@@114 $generated@@115 ($generated@@112 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@118 $generated@@119) $generated@@116)
 :weight 0
)) (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@110 $generated@@120 $generated@@121 $generated@@122 ($generated@@112 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@110 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@110 $generated@@129 $generated@@130 $generated@@131 ($generated@@112 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@110 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 Bool) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@8 ($generated@@110 $generated@@26 $generated@@24 $generated@@4 ($generated@@111 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))  (=> (and (or (not (= $generated@@142 $generated@@138)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@139 $generated@@142) $generated@@140)))) $generated@@141))
 :pattern ( ($generated@@110 $generated@@26 $generated@@24 $generated@@4 ($generated@@111 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (and (= ($generated@@144 ($generated@@59 $generated@@146 $generated@@147)) $generated@@146) (= ($generated@@145 ($generated@@59 $generated@@146 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@59 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@61 $generated@@148 ($generated@@60 $generated@@149)) (and (= ($generated@@65 $generated@@58 ($generated@@28 $generated@@58 $generated@@148)) $generated@@148) ($generated@@57 $generated@@58 ($generated@@28 $generated@@58 $generated@@148) ($generated@@60 $generated@@149))))
 :pattern ( ($generated@@61 $generated@@148 ($generated@@60 $generated@@149)))
)))
(assert (forall (($generated@@150 T@U) ) (!  (and (= ($generated@@107 ($generated@@108 $generated@@150)) $generated@@150) (or (and (<= 0 ($generated@@108 $generated@@150)) (< ($generated@@108 $generated@@150) 55296)) (and (<= 57344 ($generated@@108 $generated@@150)) (< ($generated@@108 $generated@@150) 1114112))))
 :pattern ( ($generated@@108 $generated@@150))
)))
(assert (forall (($generated@@151 Int) ) (! (= ($generated@@65 $generated@@5 ($generated@@9 ($generated@@52 $generated@@151))) ($generated@@54 $generated@@25 ($generated@@65 $generated@@5 ($generated@@9 $generated@@151))))
 :pattern ( ($generated@@65 $generated@@5 ($generated@@9 ($generated@@52 $generated@@151))))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@65 $generated@@153 ($generated@@54 $generated@@153 $generated@@152)) ($generated@@54 $generated@@25 ($generated@@65 $generated@@153 $generated@@152)))
 :pattern ( ($generated@@65 $generated@@153 ($generated@@54 $generated@@153 $generated@@152)))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= ($generated@@20 $generated@@154) 0) (= $generated@@154 $generated@@21))
 :pattern ( ($generated@@20 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! ($generated@@71 $generated@@92 $generated@@156 $generated $generated@@155)
 :pattern ( ($generated@@71 $generated@@92 $generated@@156 $generated $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@57 $generated@@58 $generated@@157 ($generated@@60 $generated@@158)) (forall (($generated@@159 Int) ) (!  (=> (and (<= 0 $generated@@159) (< $generated@@159 ($generated@@20 $generated@@157))) ($generated@@61 ($generated@@85 $generated@@157 $generated@@159) $generated@@158))
 :pattern ( ($generated@@85 $generated@@157 $generated@@159))
)))
 :pattern ( ($generated@@57 $generated@@58 $generated@@157 ($generated@@60 $generated@@158)))
)))
(assert (forall (($generated@@160 T@U) ) (! ($generated@@57 $generated@@92 $generated@@160 $generated)
 :pattern ( ($generated@@57 $generated@@92 $generated@@160 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@179  (=> (and (< $generated@@161 ($generated@@20 $generated@@162)) (= $generated@@163 (- ($generated@@20 $generated@@162) $generated@@161))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 $generated@@161) (< $generated@@161 ($generated@@20 $generated@@162)))) (=> (and (= $generated@@164 ($generated@@54 $generated@@58 ($generated@@59 $generated@@21 ($generated@@65 $generated@@92 ($generated@@107 32))))) (= $generated@@165 (+ $generated@@161 1))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@163) (= (- ($generated@@20 $generated@@162) $generated@@165) $generated@@163))) (=> (or (<= 0 $generated@@163) (= (- ($generated@@20 $generated@@162) $generated@@165) $generated@@163)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- ($generated@@20 $generated@@162) $generated@@165) $generated@@163)))))))))
(let (($generated@@180 true))
(let (($generated@@181  (=> $generated@@166 (and (=> (= (ControlFlow 0 8) 3) $generated@@180) (=> (= (ControlFlow 0 8) 5) $generated@@179)))))
(let (($generated@@182 true))
(let (($generated@@183  (and (=> (= (ControlFlow 0 9) 2) $generated@@182) (=> (= (ControlFlow 0 9) 8) $generated@@181))))
(let (($generated@@184 true))
(let (($generated@@185  (=> (and ($generated@@57 $generated@@58 $generated@@167 ($generated@@60 $generated)) ($generated@@71 $generated@@58 $generated@@167 ($generated@@60 $generated) $generated@@168)) (=> (and (and (and (not false) (<= 0 $generated@@161)) (= $generated@@169 0)) (and (and (forall (($generated@@186 T@U) ) (!  (=> (and (or (not (= $generated@@186 $generated@@170)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@168 $generated@@186) $generated@@2)))) (= ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@168 $generated@@186) ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@168 $generated@@186)))
 :pattern ( ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@168 $generated@@186))
)) ($generated@@22 $generated@@168 $generated@@168)) (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (or (not (= $generated@@187 $generated@@170)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@168 $generated@@187) $generated@@2)))) (or (= ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@168 $generated@@187) $generated@@188) ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@168 $generated@@187) $generated@@188)) ($generated@@8 ($generated@@110 $generated@@26 $generated@@24 $generated@@4 $generated@@171 $generated@@187 $generated@@188))))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25 ($generated@@23 $generated@@26 ($generated@@27 $generated@@24 $generated@@25) $generated@@168 $generated@@187) $generated@@188))
)) (<= (- ($generated@@20 $generated@@162) $generated@@161) $generated@@172)))) (and (=> (= (ControlFlow 0 10) 1) $generated@@184) (=> (= (ControlFlow 0 10) 9) $generated@@183))))))
(let (($generated@@189  (=> (= $generated@@171 ($generated@@111 $generated@@170 $generated@@168 $generated@@2 false)) (=> (and (and (= $generated@@173 ($generated@@54 $generated@@58 $generated@@21)) (= $generated@@169 ($generated@@52 0))) (and (= $generated@@172 (- ($generated@@20 $generated@@162) $generated@@169)) (= (ControlFlow 0 11) 10))) $generated@@185))))
(let (($generated@@190  (=> (and (and ($generated@@174 $generated@@168) ($generated@@175 $generated@@168)) (and ($generated@@57 $generated@@58 $generated@@162 ($generated@@60 $generated@@176)) ($generated@@71 $generated@@58 $generated@@162 ($generated@@60 $generated@@176) $generated@@168))) (=> (and (and (and ($generated@@57 $generated@@58 $generated@@177 ($generated@@60 $generated)) ($generated@@71 $generated@@58 $generated@@177 ($generated@@60 $generated) $generated@@168)) true) (and (= 0 $generated@@178) (= (ControlFlow 0 12) 11))) $generated@@189))))
$generated@@190))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
