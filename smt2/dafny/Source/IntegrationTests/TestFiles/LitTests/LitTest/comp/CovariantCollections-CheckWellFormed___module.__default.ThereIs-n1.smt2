(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@29 (T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 (T@T T@U T@U) Bool)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ) (!  (not ($generated@@26 $generated@@27 $generated@@28))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and ($generated@@29 $generated@@33 $generated@@30 $generated@@34) ($generated@@31 $generated@@34)) ($generated@@29 $generated@@33 $generated@@32 $generated@@34))
 :pattern ( ($generated@@29 $generated@@33 $generated@@30 $generated@@34))
)))
(assert (= ($generated@@9 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@38 $generated@@37 $generated@@39) ($generated@@35 $generated@@36 $generated@@38 $generated@@32 $generated@@39))
 :pattern ( ($generated@@35 $generated@@36 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@35 $generated@@36 $generated@@38 $generated@@32 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@41 $generated@@40 $generated@@42) ($generated@@35 $generated@@36 $generated@@41 $generated@@30 $generated@@42))
 :pattern ( ($generated@@35 $generated@@36 $generated@@41 $generated@@40 $generated@@42))
 :pattern ( ($generated@@35 $generated@@36 $generated@@41 $generated@@30 $generated@@42))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@45 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@45 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@45 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@9 $generated@@46) 4)) (= ($generated@@9 $generated@@47) 5)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@9 ($generated@@48 $generated@@63 $generated@@64)) 6))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@48 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@48 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@48 $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@69 $generated@@32 $generated@@70)  (or (= $generated@@69 $generated@@43) ($generated@@14 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@36 ($generated@@48 $generated@@46 $generated@@47) $generated@@70 $generated@@69) $generated@@2)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@69 $generated@@32 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@71 $generated@@30 $generated@@72)  (or (= $generated@@71 $generated@@43) ($generated@@14 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@36 ($generated@@48 $generated@@46 $generated@@47) $generated@@72 $generated@@71) $generated@@2)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@71 $generated@@30 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@44 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@44 $generated@@75 $generated@@74))
)))
(assert  (=> (< 0 $generated@@76) (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@79) (and (or (not (= $generated@@80 $generated@@43)) (not true)) ($generated@@78 $generated@@36 $generated@@80 $generated@@30))) ($generated@@14 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@36 ($generated@@48 $generated@@46 $generated@@47) $generated@@79 $generated@@80) $generated@@2)))) ($generated@@35 $generated@@11 ($generated@@15 ($generated@@77 $generated@@80)) $generated $generated@@79))
 :pattern ( ($generated@@77 $generated@@80) ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@36 ($generated@@48 $generated@@46 $generated@@47) $generated@@79 $generated@@80) $generated@@2)))
))))
(assert (= ($generated@@9 $generated@@81) 7))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@78 $generated@@81 $generated@@84 ($generated@@82 $generated@@85)) (forall (($generated@@86 T@U) ) (!  (=> ($generated@@26 $generated@@84 $generated@@86) ($generated@@83 $generated@@86 $generated@@85))
 :pattern ( ($generated@@26 $generated@@84 $generated@@86))
)))
 :pattern ( ($generated@@78 $generated@@81 $generated@@84 ($generated@@82 $generated@@85)))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@29 ($generated@@73 $generated@@90 $generated@@87) $generated@@88 $generated@@89) ($generated@@35 $generated@@90 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@29 ($generated@@73 $generated@@90 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@83 $generated@@91 $generated@@32) (and (= ($generated@@73 $generated@@36 ($generated@@44 $generated@@36 $generated@@91)) $generated@@91) ($generated@@78 $generated@@36 ($generated@@44 $generated@@36 $generated@@91) $generated@@32)))
 :pattern ( ($generated@@83 $generated@@91 $generated@@32))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@83 $generated@@92 $generated@@37) (and (= ($generated@@73 $generated@@36 ($generated@@44 $generated@@36 $generated@@92)) $generated@@92) ($generated@@78 $generated@@36 ($generated@@44 $generated@@36 $generated@@92) $generated@@37)))
 :pattern ( ($generated@@83 $generated@@92 $generated@@37))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@83 $generated@@93 $generated@@40) (and (= ($generated@@73 $generated@@36 ($generated@@44 $generated@@36 $generated@@93)) $generated@@93) ($generated@@78 $generated@@36 ($generated@@44 $generated@@36 $generated@@93) $generated@@40)))
 :pattern ( ($generated@@83 $generated@@93 $generated@@40))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@83 $generated@@94 $generated@@30) (and (= ($generated@@73 $generated@@36 ($generated@@44 $generated@@36 $generated@@94)) $generated@@94) ($generated@@78 $generated@@36 ($generated@@44 $generated@@36 $generated@@94) $generated@@30)))
 :pattern ( ($generated@@83 $generated@@94 $generated@@30))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@78 $generated@@36 $generated@@95 $generated@@37)  (and ($generated@@78 $generated@@36 $generated@@95 $generated@@32) (or (not (= $generated@@95 $generated@@43)) (not true))))
 :pattern ( ($generated@@78 $generated@@36 $generated@@95 $generated@@37))
 :pattern ( ($generated@@78 $generated@@36 $generated@@95 $generated@@32))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@78 $generated@@36 $generated@@96 $generated@@40)  (and ($generated@@78 $generated@@36 $generated@@96 $generated@@30) (or (not (= $generated@@96 $generated@@43)) (not true))))
 :pattern ( ($generated@@78 $generated@@36 $generated@@96 $generated@@40))
 :pattern ( ($generated@@78 $generated@@36 $generated@@96 $generated@@30))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@35 $generated@@36 $generated@@97 $generated@@30 $generated@@98) ($generated@@35 $generated@@36 $generated@@97 $generated@@32 $generated@@98))
 :pattern ( ($generated@@35 $generated@@36 $generated@@97 $generated@@30 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@99 $generated@@100 $generated@@101) (= $generated@@100 $generated@@101))
 :pattern ( ($generated@@99 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@83 $generated@@102 $generated) (and (= ($generated@@73 $generated@@11 ($generated@@44 $generated@@11 $generated@@102)) $generated@@102) ($generated@@78 $generated@@11 ($generated@@44 $generated@@11 $generated@@102) $generated)))
 :pattern ( ($generated@@83 $generated@@102 $generated))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@83 ($generated@@73 $generated@@105 $generated@@103) $generated@@104) ($generated@@78 $generated@@105 $generated@@103 $generated@@104))
 :pattern ( ($generated@@83 ($generated@@73 $generated@@105 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@35 $generated@@81 $generated@@106 ($generated@@82 $generated@@107) $generated@@108) (forall (($generated@@109 T@U) ) (!  (=> ($generated@@26 $generated@@106 $generated@@109) ($generated@@29 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@26 $generated@@106 $generated@@109))
)))
 :pattern ( ($generated@@35 $generated@@81 $generated@@106 ($generated@@82 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! ($generated@@78 $generated@@36 $generated@@110 $generated@@32)
 :pattern ( ($generated@@78 $generated@@36 $generated@@110 $generated@@32))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@82 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@82 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@25 ($generated@@82 $generated@@113)) $generated@@1)
 :pattern ( ($generated@@82 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@44 $generated@@115 ($generated@@73 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@73 $generated@@115 $generated@@114))
)))
(assert  (=> (< 0 $generated@@76) (forall (($generated@@116 T@U) ) (!  (=> (and (or (not (= $generated@@116 $generated@@43)) (not true)) ($generated@@78 $generated@@36 $generated@@116 $generated@@30)) ($generated@@78 $generated@@11 ($generated@@15 ($generated@@77 $generated@@116)) $generated))
 :pattern ( ($generated@@77 $generated@@116))
))))
(assert  (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@117 $generated@@120 $generated@@121 $generated@@122 ($generated@@119 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@125 $generated@@126) $generated@@123)
 :weight 0
)) (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@117 $generated@@127 $generated@@128 $generated@@129 ($generated@@119 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@117 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@117 $generated@@136 $generated@@137 $generated@@138 ($generated@@119 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@117 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Bool) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@14 ($generated@@117 $generated@@36 $generated@@46 $generated@@10 ($generated@@118 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))  (=> (and (or (not (= $generated@@149 $generated@@145)) (not true)) ($generated@@14 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@36 ($generated@@48 $generated@@46 $generated@@47) $generated@@146 $generated@@149) $generated@@147)))) $generated@@148))
 :pattern ( ($generated@@117 $generated@@36 $generated@@46 $generated@@10 ($generated@@118 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@83 $generated@@151 ($generated@@82 $generated@@152)) (and (= ($generated@@73 $generated@@81 ($generated@@44 $generated@@81 $generated@@151)) $generated@@151) ($generated@@78 $generated@@81 ($generated@@44 $generated@@81 $generated@@151) ($generated@@82 $generated@@152))))
 :pattern ( ($generated@@83 $generated@@151 ($generated@@82 $generated@@152)))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@78 $generated@@36 $generated@@153 $generated@@30) ($generated@@78 $generated@@36 $generated@@153 $generated@@32))
 :pattern ( ($generated@@78 $generated@@36 $generated@@153 $generated@@30))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@83 $generated@@154 $generated@@30) ($generated@@83 $generated@@154 $generated@@32))
 :pattern ( ($generated@@83 $generated@@154 $generated@@30))
)))
(assert (= ($generated@@25 $generated@@32) $generated@@3))
(assert (= ($generated@@155 $generated@@32) $generated@@7))
(assert (= ($generated@@25 $generated@@37) $generated@@4))
(assert (= ($generated@@155 $generated@@37) $generated@@7))
(assert (= ($generated@@25 $generated@@40) $generated@@5))
(assert (= ($generated@@155 $generated@@40) $generated@@8))
(assert (= ($generated@@25 $generated@@30) $generated@@6))
(assert (= ($generated@@155 $generated@@30) $generated@@8))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@78 $generated@@36 $generated@@158 $generated@@30)  (or (= $generated@@158 $generated@@43) ($generated@@156 ($generated@@157 $generated@@158))))
 :pattern ( ($generated@@78 $generated@@36 $generated@@158 $generated@@30))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@99 $generated@@159 $generated@@160) (forall (($generated@@161 T@U) ) (! (= ($generated@@26 $generated@@159 $generated@@161) ($generated@@26 $generated@@160 $generated@@161))
 :pattern ( ($generated@@26 $generated@@159 $generated@@161))
 :pattern ( ($generated@@26 $generated@@160 $generated@@161))
)))
 :pattern ( ($generated@@99 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! ($generated@@35 $generated@@11 $generated@@163 $generated $generated@@162)
 :pattern ( ($generated@@35 $generated@@11 $generated@@163 $generated $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! ($generated@@78 $generated@@11 $generated@@164 $generated)
 :pattern ( ($generated@@78 $generated@@11 $generated@@164 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@173 true))
(let (($generated@@174  (=> (and (=> ($generated@@26 $generated@@165 ($generated@@73 $generated@@36 $generated@@166)) (<= ($generated@@77 $generated@@167) ($generated@@77 $generated@@166))) (= (ControlFlow 0 5) 1)) $generated@@173)))
(let (($generated@@175  (=> ($generated@@26 $generated@@165 ($generated@@73 $generated@@36 $generated@@166)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@167 $generated@@43)) (not true))) (=> (or (not (= $generated@@167 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@166 $generated@@43)) (not true))) (=> (or (not (= $generated@@166 $generated@@43)) (not true)) (=> (and (<= ($generated@@77 $generated@@167) ($generated@@77 $generated@@166)) (= (ControlFlow 0 2) 1)) $generated@@173))))))))
(let (($generated@@176  (=> (and (= $generated@@168 ($generated@@118 $generated@@43 $generated@@169 $generated@@2 false)) (not ($generated@@99 $generated@@165 $generated@@27))) (=> (and (and ($generated@@31 $generated@@170) ($generated@@171 $generated@@170)) (= $generated@@169 $generated@@170)) (=> (and (and (and ($generated@@78 $generated@@36 $generated@@167 $generated@@40) ($generated@@35 $generated@@36 $generated@@167 $generated@@40 $generated@@170)) ($generated@@26 $generated@@165 ($generated@@73 $generated@@36 $generated@@167))) (and ($generated@@78 $generated@@36 $generated@@166 $generated@@40) ($generated@@35 $generated@@36 $generated@@166 $generated@@40 $generated@@170))) (and (=> (= (ControlFlow 0 6) 2) $generated@@175) (=> (= (ControlFlow 0 6) 5) $generated@@174)))))))
(let (($generated@@177  (=> (and (and (and ($generated@@31 $generated@@169) ($generated@@171 $generated@@169)) (and ($generated@@78 $generated@@81 $generated@@165 ($generated@@82 $generated@@40)) ($generated@@35 $generated@@81 $generated@@165 ($generated@@82 $generated@@40) $generated@@169))) (and (and ($generated@@78 $generated@@36 $generated@@172 $generated@@40) ($generated@@35 $generated@@36 $generated@@172 $generated@@40 $generated@@169)) (and (= 1 $generated@@76) (= (ControlFlow 0 7) 6)))) $generated@@176)))
$generated@@177))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
