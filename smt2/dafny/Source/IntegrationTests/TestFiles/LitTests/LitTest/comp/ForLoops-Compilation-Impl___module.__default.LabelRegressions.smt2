(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) Bool)
(declare-fun $generated@@18 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 (T@T T@T) T@T)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@25 (T@T) T@T)
(declare-fun $generated@@26 (T@T) T@T)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@70 (T@U) Int)
(declare-fun $generated@@71 (T@U) Int)
(declare-fun $generated@@76 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@78 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (Int Int) Int)
(declare-fun $generated@@113 () T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert  (and (and (and (and (and (and (and (forall (($generated@@27 T@T) ($generated@@28 T@T) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@18 $generated@@27 $generated@@28 ($generated@@24 $generated@@27 $generated@@28 $generated@@30 $generated@@31 $generated@@29) $generated@@31) $generated@@29)
 :weight 0
)) (forall (($generated@@32 T@T) ($generated@@33 T@T) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (or (= $generated@@36 $generated@@37) (= ($generated@@18 $generated@@32 $generated@@33 ($generated@@24 $generated@@32 $generated@@33 $generated@@35 $generated@@36 $generated@@34) $generated@@37) ($generated@@18 $generated@@32 $generated@@33 $generated@@35 $generated@@37)))
 :weight 0
))) (= ($generated@@1 $generated@@19) 3)) (= ($generated@@1 $generated@@20) 4)) (= ($generated@@1 $generated@@21) 5)) (forall (($generated@@38 T@T) ($generated@@39 T@T) ) (= ($generated@@1 ($generated@@22 $generated@@38 $generated@@39)) 6))) (forall (($generated@@40 T@T) ($generated@@41 T@T) ) (! (= ($generated@@25 ($generated@@22 $generated@@40 $generated@@41)) $generated@@40)
 :pattern ( ($generated@@22 $generated@@40 $generated@@41))
))) (forall (($generated@@42 T@T) ($generated@@43 T@T) ) (! (= ($generated@@26 ($generated@@22 $generated@@42 $generated@@43)) $generated@@43)
 :pattern ( ($generated@@22 $generated@@42 $generated@@43))
))))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> ($generated@@17 $generated@@44 $generated@@45) (forall (($generated@@46 T@U) ) (!  (=> ($generated@@6 ($generated@@23 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@44 $generated@@46) $generated))) ($generated@@6 ($generated@@23 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@45 $generated@@46) $generated))))
 :pattern ( ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@45 $generated@@46) $generated))
)))
 :pattern ( ($generated@@17 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@48 Int) ) (! (= ($generated@@47 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@52 $generated@@54 ($generated@@23 $generated@@54 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@23 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (or (not (= $generated@@55 $generated@@57)) (not true)) (=> (and ($generated@@17 $generated@@55 $generated@@56) ($generated@@17 $generated@@56 $generated@@57)) ($generated@@17 $generated@@55 $generated@@57)))
 :pattern ( ($generated@@17 $generated@@55 $generated@@56) ($generated@@17 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@59 ($generated@@58 $generated@@60 $generated@@61)) $generated@@0)
 :pattern ( ($generated@@58 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@62 ($generated@@58 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@58 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@65 ($generated@@58 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@58 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@23 $generated@@69 ($generated@@52 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@52 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (< ($generated@@70 $generated@@72) ($generated@@71 ($generated@@58 $generated@@72 $generated@@73)))
 :pattern ( ($generated@@58 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (< ($generated@@70 $generated@@75) ($generated@@71 ($generated@@58 $generated@@74 $generated@@75)))
 :pattern ( ($generated@@58 $generated@@74 $generated@@75))
)))
(assert  (and (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@76 $generated@@79 $generated@@80 $generated@@81 ($generated@@78 $generated@@79 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@82) $generated@@84 $generated@@85) $generated@@82)
 :weight 0
)) (and (forall (($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (or (= $generated@@91 $generated@@93) (= ($generated@@76 $generated@@86 $generated@@87 $generated@@88 ($generated@@78 $generated@@86 $generated@@87 $generated@@88 $generated@@90 $generated@@91 $generated@@92 $generated@@89) $generated@@93 $generated@@94) ($generated@@76 $generated@@86 $generated@@87 $generated@@88 $generated@@90 $generated@@93 $generated@@94)))
 :weight 0
)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (or (= $generated@@101 $generated@@103) (= ($generated@@76 $generated@@95 $generated@@96 $generated@@97 ($generated@@78 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@100 $generated@@101 $generated@@98) $generated@@102 $generated@@103) ($generated@@76 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@102 $generated@@103)))
 :weight 0
)))))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 Bool) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@6 ($generated@@76 $generated@@21 $generated@@19 $generated@@2 ($generated@@77 $generated@@104 $generated@@105 $generated@@106 $generated@@107) $generated@@108 $generated@@109))  (=> (and (or (not (= $generated@@108 $generated@@104)) (not true)) ($generated@@6 ($generated@@23 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@105 $generated@@108) $generated@@106)))) $generated@@107))
 :pattern ( ($generated@@76 $generated@@21 $generated@@19 $generated@@2 ($generated@@77 $generated@@104 $generated@@105 $generated@@106 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 Int) ($generated@@112 Int) ) (! (= ($generated@@110 $generated@@111 $generated@@112) (mod $generated@@111 $generated@@112))
 :pattern ( ($generated@@110 $generated@@111 $generated@@112))
)))
(assert (= ($generated@@1 $generated@@113) 7))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@70 ($generated@@52 $generated@@113 $generated@@114)) ($generated@@71 $generated@@114))
 :pattern ( ($generated@@70 ($generated@@52 $generated@@113 $generated@@114)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@58 ($generated@@49 $generated@@20 $generated@@115) ($generated@@49 $generated@@20 $generated@@116)) ($generated@@49 $generated@@113 ($generated@@58 $generated@@115 $generated@@116)))
 :pattern ( ($generated@@58 ($generated@@49 $generated@@20 $generated@@115) ($generated@@49 $generated@@20 $generated@@116)))
)))
(assert (forall (($generated@@117 Int) ) (! (= ($generated@@52 $generated@@3 ($generated@@7 ($generated@@47 $generated@@117))) ($generated@@49 $generated@@20 ($generated@@52 $generated@@3 ($generated@@7 $generated@@117))))
 :pattern ( ($generated@@52 $generated@@3 ($generated@@7 ($generated@@47 $generated@@117))))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@52 $generated@@119 ($generated@@49 $generated@@119 $generated@@118)) ($generated@@49 $generated@@20 ($generated@@52 $generated@@119 $generated@@118)))
 :pattern ( ($generated@@52 $generated@@119 ($generated@@49 $generated@@119 $generated@@118)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 () Bool)
(declare-fun $generated@@123 () Int)
(declare-fun $generated@@124 () Int)
(declare-fun $generated@@125 () Int)
(declare-fun $generated@@126 () Bool)
(declare-fun $generated@@127 () Bool)
(declare-fun $generated@@128 () Int)
(declare-fun $generated@@129 () T@U)
(declare-fun $generated@@130 () T@U)
(declare-fun $generated@@131 () T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 () Int)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 () Bool)
(declare-fun $generated@@137 () Int)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 52) (let (($generated@@141 true))
(let (($generated@@142 true))
(let (($generated@@143 true))
(let (($generated@@144 true))
(let (($generated@@145  (=> (and (or (not (= ($generated@@110 $generated@@120 ($generated@@47 2)) ($generated@@47 0))) (not true)) (= (ControlFlow 0 14) 12)) $generated@@144)))
(let (($generated@@146  (=> (and (= $generated@@120 $generated@@121) (= (ControlFlow 0 13) 12)) $generated@@144)))
(let (($generated@@147 true))
(let (($generated@@148  (=> (or (not (= $generated@@120 $generated@@121)) (not true)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (not (= ($generated@@47 2) 0)) (not true))) (=> (or (not (= ($generated@@47 2) 0)) (not true)) (and (=> (= (ControlFlow 0 15) 11) $generated@@147) (=> (= (ControlFlow 0 15) 14) $generated@@145)))))))
(let (($generated@@149  (=> $generated@@122 (and (=> (= (ControlFlow 0 17) 13) $generated@@146) (=> (= (ControlFlow 0 17) 15) $generated@@148)))))
(let (($generated@@150 true))
(let (($generated@@151  (and (=> (= (ControlFlow 0 18) 10) $generated@@150) (=> (= (ControlFlow 0 18) 17) $generated@@149))))
(let (($generated@@152 true))
(let (($generated@@153  (=> (and (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@123)) (= $generated@@124 0)) (= $generated@@125 10)) $generated@@126) $generated@@127) (<= 0 $generated@@120)) (= $generated@@128 0)) (= $generated@@121 10)) (and (and (and (<= $generated@@128 $generated@@120) (<= $generated@@120 $generated@@121)) (forall (($generated@@154 T@U) ) (!  (=> (and (or (not (= $generated@@154 $generated@@130)) (not true)) ($generated@@6 ($generated@@23 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@154) $generated)))) (= ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@154) ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@154)))
 :pattern ( ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@154))
))) (and ($generated@@17 $generated@@129 $generated@@129) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (or (not (= $generated@@155 $generated@@130)) (not true)) ($generated@@6 ($generated@@23 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@155) $generated)))) (or (= ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@155) $generated@@156) ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@155) $generated@@156)) ($generated@@6 ($generated@@76 $generated@@21 $generated@@19 $generated@@2 $generated@@131 $generated@@155 $generated@@156))))
 :pattern ( ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@155) $generated@@156))
))))) (and (=> (= (ControlFlow 0 19) 9) $generated@@152) (=> (= (ControlFlow 0 19) 18) $generated@@151)))))
(let (($generated@@157  (=> (= ($generated@@49 $generated@@113 ($generated@@58 ($generated@@52 $generated@@3 ($generated@@7 ($generated@@47 0))) ($generated@@52 $generated@@3 ($generated@@7 ($generated@@47 0))))) ($generated@@58 ($generated@@52 $generated@@3 ($generated@@7 $generated@@132)) ($generated@@52 $generated@@3 ($generated@@7 $generated@@133)))) (=> (and (= $generated@@128 ($generated@@47 0)) (= $generated@@121 ($generated@@47 10))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (<= $generated@@128 $generated@@121)) (=> (<= $generated@@128 $generated@@121) (=> (= (ControlFlow 0 20) 19) $generated@@153)))))))
(let (($generated@@158 true))
(let (($generated@@159  (and (=> (= (ControlFlow 0 22) 20) $generated@@157) (=> (= (ControlFlow 0 22) 8) $generated@@158))))
(let (($generated@@160  (=> (= (ControlFlow 0 28) 22) $generated@@159)))
(let (($generated@@161  (=> (and (or (not (= ($generated@@110 $generated@@134 ($generated@@47 2)) ($generated@@47 0))) (not true)) (= (ControlFlow 0 30) 28)) $generated@@160)))
(let (($generated@@162  (=> (or (not (= $generated@@134 $generated@@135)) (not true)) (and (=> (= (ControlFlow 0 31) (- 0 32)) (or (not (= ($generated@@47 2) 0)) (not true))) (=> (or (not (= ($generated@@47 2) 0)) (not true)) (and (=> (= (ControlFlow 0 31) 27) $generated@@141) (=> (= (ControlFlow 0 31) 30) $generated@@161)))))))
(let (($generated@@163  (=> (and (= $generated@@134 $generated@@135) (= (ControlFlow 0 29) 28)) $generated@@160)))
(let (($generated@@164  (=> $generated@@136 (and (=> (= (ControlFlow 0 33) 29) $generated@@163) (=> (= (ControlFlow 0 33) 31) $generated@@162)))))
(let (($generated@@165  (and (=> (= (ControlFlow 0 34) 26) $generated@@142) (=> (= (ControlFlow 0 34) 33) $generated@@164))))
(let (($generated@@166  (=> (and (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@123)) (= $generated@@124 0)) (= $generated@@125 10)) $generated@@126) $generated@@127) (<= 0 $generated@@134)) (= $generated@@137 0)) (= $generated@@135 10)) (and (and (and (<= $generated@@137 $generated@@134) (<= $generated@@134 $generated@@135)) (forall (($generated@@167 T@U) ) (!  (=> (and (or (not (= $generated@@167 $generated@@130)) (not true)) ($generated@@6 ($generated@@23 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@167) $generated)))) (= ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@167) ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@167)))
 :pattern ( ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@167))
))) (and ($generated@@17 $generated@@129 $generated@@129) (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (or (not (= $generated@@168 $generated@@130)) (not true)) ($generated@@6 ($generated@@23 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@168) $generated)))) (or (= ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@168) $generated@@169) ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@168) $generated@@169)) ($generated@@6 ($generated@@76 $generated@@21 $generated@@19 $generated@@2 $generated@@131 $generated@@168 $generated@@169))))
 :pattern ( ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@168) $generated@@169))
))))) (and (=> (= (ControlFlow 0 35) 25) $generated@@143) (=> (= (ControlFlow 0 35) 34) $generated@@165)))))
(let (($generated@@170  (=> (and (= $generated@@137 ($generated@@47 0)) (= $generated@@135 ($generated@@47 10))) (and (=> (= (ControlFlow 0 36) (- 0 37)) (<= $generated@@137 $generated@@135)) (=> (<= $generated@@137 $generated@@135) (=> (= (ControlFlow 0 36) 35) $generated@@166))))))
(let (($generated@@171  (=> (and (not ($generated@@6 ($generated@@49 $generated@@2 ($generated@@5 true)))) (= (ControlFlow 0 24) 22)) $generated@@159)))
(let (($generated@@172  (=> ($generated@@6 ($generated@@49 $generated@@2 ($generated@@5 true))) (and (=> (= (ControlFlow 0 38) 36) $generated@@170) (=> (= (ControlFlow 0 38) 24) $generated@@171)))))
(let (($generated@@173  (=> (and (not ($generated@@6 ($generated@@49 $generated@@2 ($generated@@5 true)))) (= (ControlFlow 0 23) 22)) $generated@@159)))
(let (($generated@@174  (=> $generated@@127 (and (=> (= (ControlFlow 0 39) 23) $generated@@173) (=> (= (ControlFlow 0 39) 38) $generated@@172)))))
(let (($generated@@175 true))
(let (($generated@@176  (and (=> (= (ControlFlow 0 40) 7) $generated@@175) (=> (= (ControlFlow 0 40) 39) $generated@@174))))
(let (($generated@@177 true))
(let (($generated@@178  (=> (forall (($generated@@179 T@U) ) (!  (=> (and (or (not (= $generated@@179 $generated@@130)) (not true)) ($generated@@6 ($generated@@23 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@179) $generated)))) (= ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@179) ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@179)))
 :pattern ( ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@179))
)) (=> (and ($generated@@17 $generated@@129 $generated@@129) (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (or (not (= $generated@@180 $generated@@130)) (not true)) ($generated@@6 ($generated@@23 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@180) $generated)))) (or (= ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@180) $generated@@181) ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@180) $generated@@181)) ($generated@@6 ($generated@@76 $generated@@21 $generated@@19 $generated@@2 $generated@@131 $generated@@180 $generated@@181))))
 :pattern ( ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@180) $generated@@181))
))) (and (=> (= (ControlFlow 0 41) 6) $generated@@177) (=> (= (ControlFlow 0 41) 40) $generated@@176))))))
(let (($generated@@182  (=> (and (or (not (= ($generated@@110 $generated@@123 ($generated@@47 2)) ($generated@@47 0))) (not true)) (= (ControlFlow 0 43) 41)) $generated@@178)))
(let (($generated@@183  (=> (and (= $generated@@123 $generated@@125) (= (ControlFlow 0 42) 41)) $generated@@178)))
(let (($generated@@184 true))
(let (($generated@@185  (=> (or (not (= $generated@@123 $generated@@125)) (not true)) (and (=> (= (ControlFlow 0 44) (- 0 45)) (or (not (= ($generated@@47 2) 0)) (not true))) (=> (or (not (= ($generated@@47 2) 0)) (not true)) (and (=> (= (ControlFlow 0 44) 5) $generated@@184) (=> (= (ControlFlow 0 44) 43) $generated@@182)))))))
(let (($generated@@186  (=> $generated@@126 (and (=> (= (ControlFlow 0 46) 42) $generated@@183) (=> (= (ControlFlow 0 46) 44) $generated@@185)))))
(let (($generated@@187 true))
(let (($generated@@188  (and (=> (= (ControlFlow 0 47) 4) $generated@@187) (=> (= (ControlFlow 0 47) 46) $generated@@186))))
(let (($generated@@189 true))
(let (($generated@@190  (=> (and (and (and (and (not false) (<= 0 $generated@@123)) (= $generated@@124 0)) (= $generated@@125 10)) (and (and (and (<= $generated@@124 $generated@@123) (<= $generated@@123 $generated@@125)) (forall (($generated@@191 T@U) ) (!  (=> (and (or (not (= $generated@@191 $generated@@130)) (not true)) ($generated@@6 ($generated@@23 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@191) $generated)))) (= ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@191) ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@191)))
 :pattern ( ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@191))
))) (and ($generated@@17 $generated@@129 $generated@@129) (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (or (not (= $generated@@192 $generated@@130)) (not true)) ($generated@@6 ($generated@@23 $generated@@2 ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@192) $generated)))) (or (= ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@192) $generated@@193) ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@192) $generated@@193)) ($generated@@6 ($generated@@76 $generated@@21 $generated@@19 $generated@@2 $generated@@131 $generated@@192 $generated@@193))))
 :pattern ( ($generated@@18 $generated@@19 $generated@@20 ($generated@@18 $generated@@21 ($generated@@22 $generated@@19 $generated@@20) $generated@@129 $generated@@192) $generated@@193))
))))) (and (=> (= (ControlFlow 0 48) 3) $generated@@189) (=> (= (ControlFlow 0 48) 47) $generated@@188)))))
(let (($generated@@194  (=> (and (= $generated@@124 ($generated@@47 0)) (= $generated@@125 ($generated@@47 10))) (and (=> (= (ControlFlow 0 49) (- 0 50)) (<= $generated@@124 $generated@@125)) (=> (<= $generated@@124 $generated@@125) (=> (= (ControlFlow 0 49) 48) $generated@@190))))))
(let (($generated@@195  (=> (and (not ($generated@@6 ($generated@@49 $generated@@2 ($generated@@5 true)))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@196  (=> (= $generated@@131 ($generated@@77 $generated@@130 $generated@@129 $generated false)) (and (=> (= (ControlFlow 0 51) 49) $generated@@194) (=> (= (ControlFlow 0 51) 2) $generated@@195)))))
(let (($generated@@197  (=> (and (and ($generated@@138 $generated@@129) ($generated@@139 $generated@@129)) (and (= 0 $generated@@140) (= (ControlFlow 0 52) 51))) $generated@@196)))
$generated@@197))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
