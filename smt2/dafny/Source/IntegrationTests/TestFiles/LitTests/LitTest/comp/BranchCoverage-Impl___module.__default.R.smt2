(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@19 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (T@T T@T) T@T)
(declare-fun $generated@@24 (T@T T@U) T@U)
(declare-fun $generated@@25 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@26 (T@T) T@T)
(declare-fun $generated@@27 (T@T) T@T)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@64 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@66 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (Int Int) Int)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert  (and (and (and (and (and (and (and (forall (($generated@@28 T@T) ($generated@@29 T@T) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@19 $generated@@28 $generated@@29 ($generated@@25 $generated@@28 $generated@@29 $generated@@31 $generated@@32 $generated@@30) $generated@@32) $generated@@30)
 :weight 0
)) (forall (($generated@@33 T@T) ($generated@@34 T@T) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (or (= $generated@@37 $generated@@38) (= ($generated@@19 $generated@@33 $generated@@34 ($generated@@25 $generated@@33 $generated@@34 $generated@@36 $generated@@37 $generated@@35) $generated@@38) ($generated@@19 $generated@@33 $generated@@34 $generated@@36 $generated@@38)))
 :weight 0
))) (= ($generated@@2 $generated@@20) 3)) (= ($generated@@2 $generated@@21) 4)) (= ($generated@@2 $generated@@22) 5)) (forall (($generated@@39 T@T) ($generated@@40 T@T) ) (= ($generated@@2 ($generated@@23 $generated@@39 $generated@@40)) 6))) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (! (= ($generated@@26 ($generated@@23 $generated@@41 $generated@@42)) $generated@@41)
 :pattern ( ($generated@@23 $generated@@41 $generated@@42))
))) (forall (($generated@@43 T@T) ($generated@@44 T@T) ) (! (= ($generated@@27 ($generated@@23 $generated@@43 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@23 $generated@@43 $generated@@44))
))))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> ($generated@@18 $generated@@45 $generated@@46) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@45 $generated@@47) $generated))) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@46 $generated@@47) $generated))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@46 $generated@@47) $generated))
)))
 :pattern ( ($generated@@18 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@48 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@24 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@24 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@56 $generated@@4 $generated@@58 $generated@@57) (<= ($generated@@48 0) ($generated@@9 $generated@@58)))
 :pattern ( ($generated@@56 $generated@@4 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or (not (= $generated@@59 $generated@@61)) (not true)) (=> (and ($generated@@18 $generated@@59 $generated@@60) ($generated@@18 $generated@@60 $generated@@61)) ($generated@@18 $generated@@59 $generated@@61)))
 :pattern ( ($generated@@18 $generated@@59 $generated@@60) ($generated@@18 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@24 $generated@@63 ($generated@@53 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@53 $generated@@63 $generated@@62))
)))
(assert  (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@64 $generated@@67 $generated@@68 $generated@@69 ($generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@73 $generated@@70) $generated@@72 $generated@@73) $generated@@70)
 :weight 0
)) (and (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@79 $generated@@81) (= ($generated@@64 $generated@@74 $generated@@75 $generated@@76 ($generated@@66 $generated@@74 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@80 $generated@@77) $generated@@81 $generated@@82) ($generated@@64 $generated@@74 $generated@@75 $generated@@76 $generated@@78 $generated@@81 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (or (= $generated@@89 $generated@@91) (= ($generated@@64 $generated@@83 $generated@@84 $generated@@85 ($generated@@66 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@89 $generated@@86) $generated@@90 $generated@@91) ($generated@@64 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@90 $generated@@91)))
 :weight 0
)))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Bool) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@7 ($generated@@64 $generated@@22 $generated@@20 $generated@@3 ($generated@@65 $generated@@92 $generated@@93 $generated@@94 $generated@@95) $generated@@96 $generated@@97))  (=> (and (or (not (= $generated@@96 $generated@@92)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@93 $generated@@96) $generated@@94)))) $generated@@95))
 :pattern ( ($generated@@64 $generated@@22 $generated@@20 $generated@@3 ($generated@@65 $generated@@92 $generated@@93 $generated@@94 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 Int) ($generated@@100 Int) ) (! (= ($generated@@98 $generated@@99 $generated@@100) (mod $generated@@99 $generated@@100))
 :pattern ( ($generated@@98 $generated@@99 $generated@@100))
)))
(assert (= ($generated@@101 $generated@@57) $generated@@0))
(assert (= ($generated@@102 $generated@@57) $generated@@1))
(assert (forall (($generated@@103 Int) ) (! (= ($generated@@53 $generated@@4 ($generated@@8 ($generated@@48 $generated@@103))) ($generated@@50 $generated@@21 ($generated@@53 $generated@@4 ($generated@@8 $generated@@103))))
 :pattern ( ($generated@@53 $generated@@4 ($generated@@8 ($generated@@48 $generated@@103))))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@53 $generated@@105 ($generated@@50 $generated@@105 $generated@@104)) ($generated@@50 $generated@@21 ($generated@@53 $generated@@105 $generated@@104)))
 :pattern ( ($generated@@53 $generated@@105 ($generated@@50 $generated@@105 $generated@@104)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@106 () Int)
(declare-fun $generated@@107 () Int)
(declare-fun $generated@@108 () Int)
(declare-fun $generated@@109 () Int)
(declare-fun $generated@@110 () Int)
(declare-fun $generated@@111 () Bool)
(declare-fun $generated@@112 () Bool)
(declare-fun $generated@@113 () Bool)
(declare-fun $generated@@114 () Int)
(declare-fun $generated@@115 () T@U)
(declare-fun $generated@@116 () T@U)
(declare-fun $generated@@117 () T@U)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 () Int)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 () Int)
(declare-fun $generated@@123 (T@U) Bool)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@125 () Int)
(declare-fun $generated@@126 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 40) (let (($generated@@127  (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (<= 0 $generated@@106) (= $generated@@107 $generated@@106))) (=> (or (<= 0 $generated@@106) (= $generated@@107 $generated@@106)) (=> (= (ControlFlow 0 15) (- 0 14)) (< $generated@@107 $generated@@106))))))
(let (($generated@@128  (=> (or (not (= $generated@@106 ($generated@@48 0))) (not true)) (and (=> (= (ControlFlow 0 23) (- 0 24)) ($generated@@56 $generated@@4 ($generated@@8 (- $generated@@106 1)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 (- $generated@@106 1)) $generated@@57) (=> (= $generated@@108 (- $generated@@106 1)) (=> (and (= $generated@@107 $generated@@108) (= (ControlFlow 0 23) 15)) $generated@@127)))))))
(let (($generated@@129  (=> (< 0 $generated@@106) (and (=> (= (ControlFlow 0 20) (- 0 21)) ($generated@@56 $generated@@4 ($generated@@8 (- $generated@@106 1)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 (- $generated@@106 1)) $generated@@57) (=> (= $generated@@109 (- $generated@@106 1)) (=> (and (= $generated@@107 $generated@@109) (= (ControlFlow 0 20) 15)) $generated@@127)))))))
(let (($generated@@130  (and (=> (= (ControlFlow 0 17) (- 0 19)) (or (not (= ($generated@@48 4) 0)) (not true))) (=> (or (not (= ($generated@@48 4) 0)) (not true)) (=> (= ($generated@@98 $generated@@106 ($generated@@48 4)) ($generated@@48 1)) (and (=> (= (ControlFlow 0 17) (- 0 18)) ($generated@@56 $generated@@4 ($generated@@8 (- $generated@@106 1)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 (- $generated@@106 1)) $generated@@57) (=> (= $generated@@110 (- $generated@@106 1)) (=> (and (= $generated@@107 $generated@@110) (= (ControlFlow 0 17) 15)) $generated@@127)))))))))
(let (($generated@@131 true))
(let (($generated@@132  (=> (and (= $generated@@106 ($generated@@48 0)) (= (ControlFlow 0 22) 11)) $generated@@131)))
(let (($generated@@133  (and (=> (= (ControlFlow 0 25) (- 0 26)) (or (not (= ($generated@@48 2) 0)) (not true))) (=> (or (not (= ($generated@@48 2) 0)) (not true)) (=> (= ($generated@@98 $generated@@106 ($generated@@48 2)) ($generated@@48 0)) (and (=> (= (ControlFlow 0 25) 22) $generated@@132) (=> (= (ControlFlow 0 25) 23) $generated@@128)))))))
(let (($generated@@134  (=> (and (and (and (or (not (= ($generated@@98 $generated@@106 ($generated@@48 2)) ($generated@@48 0))) (not true)) (or (not (= ($generated@@98 $generated@@106 ($generated@@48 4)) ($generated@@48 1))) (not true))) (<= $generated@@106 0)) (= (ControlFlow 0 13) 11)) $generated@@131)))
(let (($generated@@135  (=> ($generated@@7 ($generated@@50 $generated@@3 ($generated@@6 true))) (and (and (and (=> (= (ControlFlow 0 27) 25) $generated@@133) (=> (= (ControlFlow 0 27) 17) $generated@@130)) (=> (= (ControlFlow 0 27) 20) $generated@@129)) (=> (= (ControlFlow 0 27) 13) $generated@@134)))))
(let (($generated@@136  (=> (and (not ($generated@@7 ($generated@@50 $generated@@3 ($generated@@6 true)))) (= (ControlFlow 0 12) 11)) $generated@@131)))
(let (($generated@@137  (=> $generated@@111 (and (=> (= (ControlFlow 0 28) 12) $generated@@136) (=> (= (ControlFlow 0 28) 27) $generated@@135)))))
(let (($generated@@138 true))
(let (($generated@@139  (and (=> (= (ControlFlow 0 29) 10) $generated@@138) (=> (= (ControlFlow 0 29) 28) $generated@@137))))
(let (($generated@@140 true))
(let (($generated@@141  (=> (<= ($generated@@48 0) $generated@@106) (=> (and (and (and (and (not false) $generated@@112) $generated@@113) (<= 0 $generated@@114)) (and (and (forall (($generated@@142 T@U) ) (!  (=> (and (or (not (= $generated@@142 $generated@@116)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@142) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@142) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@142)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@142))
)) ($generated@@18 $generated@@115 $generated@@115)) (and (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (or (not (= $generated@@143 $generated@@116)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@143) $generated)))) (or (= ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@143) $generated@@144) ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@143) $generated@@144)) ($generated@@7 ($generated@@64 $generated@@22 $generated@@20 $generated@@3 $generated@@117 $generated@@143 $generated@@144))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@143) $generated@@144))
)) (<= $generated@@106 $generated@@114)))) (and (=> (= (ControlFlow 0 30) 9) $generated@@140) (=> (= (ControlFlow 0 30) 29) $generated@@139))))))
(let (($generated@@145  (=> (= (ControlFlow 0 31) 30) $generated@@141)))
(let (($generated@@146  (=> $generated@@113 (and (=> (= (ControlFlow 0 32) 31) $generated@@145) (=> (= (ControlFlow 0 32) 30) $generated@@141)))))
(let (($generated@@147 true))
(let (($generated@@148  (and (=> (= (ControlFlow 0 33) 8) $generated@@147) (=> (= (ControlFlow 0 33) 32) $generated@@146))))
(let (($generated@@149 true))
(let (($generated@@150  (=> (and (and (<= $generated@@118 $generated@@114) (forall (($generated@@151 T@U) ) (!  (=> (and (or (not (= $generated@@151 $generated@@116)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@151) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@151) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@151)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@151))
))) (and ($generated@@18 $generated@@115 $generated@@115) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (or (not (= $generated@@152 $generated@@116)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@152) $generated)))) (or (= ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@152) $generated@@153) ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@152) $generated@@153)) ($generated@@7 ($generated@@64 $generated@@22 $generated@@20 $generated@@3 $generated@@117 $generated@@152 $generated@@153))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@152) $generated@@153))
)))) (and (=> (= (ControlFlow 0 34) 7) $generated@@149) (=> (= (ControlFlow 0 34) 33) $generated@@148)))))
(let (($generated@@154  (=> (and (< $generated@@114 $generated@@118) (= $generated@@119 (- $generated@@118 $generated@@114))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@56 $generated@@4 ($generated@@8 (+ $generated@@114 1)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 (+ $generated@@114 1)) $generated@@57) (=> (= $generated@@120 (+ $generated@@114 1)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@119) (= (- $generated@@118 $generated@@120) $generated@@119))) (=> (or (<= 0 $generated@@119) (= (- $generated@@118 $generated@@120) $generated@@119)) (=> (= (ControlFlow 0 4) (- 0 3)) (< (- $generated@@118 $generated@@120) $generated@@119))))))))))
(let (($generated@@155  (=> $generated@@112 (and (=> (= (ControlFlow 0 35) 34) $generated@@150) (=> (= (ControlFlow 0 35) 4) $generated@@154)))))
(let (($generated@@156 true))
(let (($generated@@157  (and (=> (= (ControlFlow 0 36) 2) $generated@@156) (=> (= (ControlFlow 0 36) 35) $generated@@155))))
(let (($generated@@158 true))
(let (($generated@@159  (=> (<= ($generated@@48 0) $generated@@114) (=> (and (not false) (<= 0 $generated@@114)) (=> (and (and (forall (($generated@@160 T@U) ) (!  (=> (and (or (not (= $generated@@160 $generated@@116)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@160) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@160) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@160)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@160))
)) ($generated@@18 $generated@@115 $generated@@115)) (and (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (or (not (= $generated@@161 $generated@@116)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@161) $generated)))) (or (= ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@161) $generated@@162) ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@161) $generated@@162)) ($generated@@7 ($generated@@64 $generated@@22 $generated@@20 $generated@@3 $generated@@117 $generated@@161 $generated@@162))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@115 $generated@@161) $generated@@162))
)) (<= (- $generated@@118 $generated@@114) $generated@@121))) (and (=> (= (ControlFlow 0 37) 1) $generated@@158) (=> (= (ControlFlow 0 37) 36) $generated@@157)))))))
(let (($generated@@163  (=> (= $generated@@117 ($generated@@65 $generated@@116 $generated@@115 $generated false)) (and (=> (= (ControlFlow 0 38) (- 0 39)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 0)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 0)) $generated@@57) (=> (= $generated@@122 ($generated@@48 0)) (=> (and (= $generated@@121 (- $generated@@118 $generated@@122)) (= (ControlFlow 0 38) 37)) $generated@@159)))))))
(let (($generated@@164  (=> (and ($generated@@123 $generated@@115) ($generated@@124 $generated@@115)) (=> (and (and (<= ($generated@@48 0) $generated@@125) true) (and (= 0 $generated@@126) (= (ControlFlow 0 40) 38))) $generated@@163))))
$generated@@164))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
