(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@69 (Int) Int)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@115 (T@U) Bool)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@1))
(assert (= ($generated@@23 $generated@@0) $generated@@2))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and (or (not (= $generated@@30 $generated@@26)) (not true)) (= ($generated@@27 $generated@@30) ($generated@@25 $generated@@29))) ($generated@@28 $generated@@9 ($generated@@13 ($generated@@24 $generated@@30)) $generated@@0))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@29))
)))
(assert (= ($generated@@7 $generated@@32) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34) $generated@@36) ($generated@@31 $generated@@32 $generated@@35 ($generated@@25 $generated@@34) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 ($generated@@25 $generated@@34) $generated@@36))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@38 $generated@@45 $generated@@46 ($generated@@42 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@38 $generated@@50 $generated@@51 ($generated@@42 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@38 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))) (= ($generated@@7 $generated@@39) 4)) (= ($generated@@7 $generated@@40) 5)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@7 ($generated@@41 $generated@@56 $generated@@57)) 6))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@43 ($generated@@41 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@41 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@41 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@63 ($generated@@25 $generated@@62) $generated@@64)  (or (= $generated@@63 $generated@@26) ($generated@@12 ($generated@@37 $generated@@8 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@32 ($generated@@41 $generated@@39 $generated@@40) $generated@@64 $generated@@63) $generated@@3)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@63 ($generated@@25 $generated@@62) $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@65 $generated@@66 $generated@@67) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@12 ($generated@@37 $generated@@8 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@32 ($generated@@41 $generated@@39 $generated@@40) $generated@@66 $generated@@68) $generated@@3))) ($generated@@12 ($generated@@37 $generated@@8 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@32 ($generated@@41 $generated@@39 $generated@@40) $generated@@67 $generated@@68) $generated@@3))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@32 ($generated@@41 $generated@@39 $generated@@40) $generated@@67 $generated@@68) $generated@@3))
)))
 :pattern ( ($generated@@65 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@70 Int) ) (! (= ($generated@@69 $generated@@70) $generated@@70)
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@37 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@37 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@78 ($generated@@33 $generated@@77))  (and ($generated@@28 $generated@@32 $generated@@78 ($generated@@25 $generated@@77)) (or (not (= $generated@@78 $generated@@26)) (not true))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@78 ($generated@@33 $generated@@77)))
 :pattern ( ($generated@@28 $generated@@32 $generated@@78 ($generated@@25 $generated@@77)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@79 ($generated@@74 $generated@@83 $generated@@80) $generated@@81 $generated@@82) ($generated@@31 $generated@@83 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@79 ($generated@@74 $generated@@83 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@65 $generated@@84 $generated@@85) (=> ($generated@@79 $generated@@86 $generated@@87 $generated@@84) ($generated@@79 $generated@@86 $generated@@87 $generated@@85)))
 :pattern ( ($generated@@65 $generated@@84 $generated@@85) ($generated@@79 $generated@@86 $generated@@87 $generated@@84))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (!  (=> ($generated@@65 $generated@@88 $generated@@89) (=> ($generated@@31 $generated@@92 $generated@@90 $generated@@91 $generated@@88) ($generated@@31 $generated@@92 $generated@@90 $generated@@91 $generated@@89)))
 :pattern ( ($generated@@65 $generated@@88 $generated@@89) ($generated@@31 $generated@@92 $generated@@90 $generated@@91 $generated@@88))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@23 ($generated@@25 $generated@@94)) $generated@@4) (= ($generated@@93 ($generated@@25 $generated@@94)) $generated@@6))
 :pattern ( ($generated@@25 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@23 ($generated@@33 $generated@@95)) $generated@@5) (= ($generated@@93 ($generated@@33 $generated@@95)) $generated@@6))
 :pattern ( ($generated@@33 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@97 ($generated@@25 $generated@@96))  (or (= $generated@@97 $generated@@26) (= ($generated@@27 $generated@@97) ($generated@@25 $generated@@96))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@97 ($generated@@25 $generated@@96)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or (not (= $generated@@98 $generated@@100)) (not true)) (=> (and ($generated@@65 $generated@@98 $generated@@99) ($generated@@65 $generated@@99 $generated@@100)) ($generated@@65 $generated@@98 $generated@@100)))
 :pattern ( ($generated@@65 $generated@@98 $generated@@99) ($generated@@65 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@101 $generated@@102 $generated@@0) (and (= ($generated@@74 $generated@@9 ($generated@@37 $generated@@9 $generated@@102)) $generated@@102) ($generated@@28 $generated@@9 ($generated@@37 $generated@@9 $generated@@102) $generated@@0)))
 :pattern ( ($generated@@101 $generated@@102 $generated@@0))
)))
(assert (= ($generated@@7 $generated@@103) 7))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@101 $generated@@104 $generated) (and (= ($generated@@74 $generated@@103 ($generated@@37 $generated@@103 $generated@@104)) $generated@@104) ($generated@@28 $generated@@103 ($generated@@37 $generated@@103 $generated@@104) $generated)))
 :pattern ( ($generated@@101 $generated@@104 $generated))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@101 ($generated@@74 $generated@@107 $generated@@105) $generated@@106) ($generated@@28 $generated@@107 $generated@@105 $generated@@106))
 :pattern ( ($generated@@101 ($generated@@74 $generated@@107 $generated@@105) $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (! (<= 0 ($generated@@24 $generated@@108))
 :pattern ( ($generated@@24 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@109 ($generated@@25 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@25 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@33 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@33 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@37 $generated@@114 ($generated@@74 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@74 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and (and ($generated@@115 $generated@@117) (and (or (not (= $generated@@118 $generated@@26)) (not true)) (= ($generated@@27 $generated@@118) ($generated@@25 $generated@@116)))) ($generated@@12 ($generated@@37 $generated@@8 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@32 ($generated@@41 $generated@@39 $generated@@40) $generated@@117 $generated@@118) $generated@@3)))) ($generated@@31 $generated@@9 ($generated@@13 ($generated@@24 $generated@@118)) $generated@@0 $generated@@117))
 :pattern ( ($generated@@24 $generated@@118) ($generated@@37 $generated@@8 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@32 ($generated@@41 $generated@@39 $generated@@40) $generated@@117 $generated@@118) $generated@@3)) ($generated@@25 $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@101 $generated@@120 ($generated@@25 $generated@@119)) (and (= ($generated@@74 $generated@@32 ($generated@@37 $generated@@32 $generated@@120)) $generated@@120) ($generated@@28 $generated@@32 ($generated@@37 $generated@@32 $generated@@120) ($generated@@25 $generated@@119))))
 :pattern ( ($generated@@101 $generated@@120 ($generated@@25 $generated@@119)))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@101 $generated@@122 ($generated@@33 $generated@@121)) (and (= ($generated@@74 $generated@@32 ($generated@@37 $generated@@32 $generated@@122)) $generated@@122) ($generated@@28 $generated@@32 ($generated@@37 $generated@@32 $generated@@122) ($generated@@33 $generated@@121))))
 :pattern ( ($generated@@101 $generated@@122 ($generated@@33 $generated@@121)))
)))
(assert  (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@123 $generated@@126 $generated@@127 $generated@@128 ($generated@@125 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@123 $generated@@133 $generated@@134 $generated@@135 ($generated@@125 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@123 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@123 $generated@@142 $generated@@143 $generated@@144 ($generated@@125 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@123 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@12 ($generated@@123 $generated@@32 $generated@@39 $generated@@8 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@156 $generated@@157))  (=> (and (or (not (= $generated@@156 $generated@@151)) (not true)) ($generated@@12 ($generated@@37 $generated@@8 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@32 ($generated@@41 $generated@@39 $generated@@40) $generated@@152 $generated@@156) $generated@@153)))) (or (= $generated@@156 $generated@@154) (= $generated@@156 $generated@@155))))
 :pattern ( ($generated@@123 $generated@@32 $generated@@39 $generated@@8 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@74 $generated@@9 ($generated@@13 ($generated@@69 $generated@@158))) ($generated@@71 $generated@@40 ($generated@@74 $generated@@9 ($generated@@13 $generated@@158))))
 :pattern ( ($generated@@74 $generated@@9 ($generated@@13 ($generated@@69 $generated@@158))))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@74 $generated@@160 ($generated@@71 $generated@@160 $generated@@159)) ($generated@@71 $generated@@40 ($generated@@74 $generated@@160 $generated@@159)))
 :pattern ( ($generated@@74 $generated@@160 ($generated@@71 $generated@@160 $generated@@159)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! ($generated@@31 $generated@@9 $generated@@162 $generated@@0 $generated@@161)
 :pattern ( ($generated@@31 $generated@@9 $generated@@162 $generated@@0 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! ($generated@@31 $generated@@103 $generated@@164 $generated $generated@@163)
 :pattern ( ($generated@@31 $generated@@103 $generated@@164 $generated $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! ($generated@@28 $generated@@9 $generated@@165 $generated@@0)
 :pattern ( ($generated@@28 $generated@@9 $generated@@165 $generated@@0))
)))
(assert (forall (($generated@@166 T@U) ) (! ($generated@@28 $generated@@103 $generated@@166 $generated)
 :pattern ( ($generated@@28 $generated@@103 $generated@@166 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@175 true))
(let (($generated@@176  (=> (and (or (not (= ($generated@@24 $generated@@167) ($generated@@24 $generated@@168))) (not true)) (= (ControlFlow 0 4) 1)) $generated@@175)))
(let (($generated@@177  (=> (= ($generated@@24 $generated@@167) ($generated@@24 $generated@@168)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@168 $generated@@26)) (not true))) (=> (or (not (= $generated@@168 $generated@@26)) (not true)) (=> (= (ControlFlow 0 2) 1) $generated@@175))))))
(let (($generated@@178  (=> (= $generated@@169 ($generated@@124 $generated@@26 $generated@@170 $generated@@3 $generated@@167 $generated@@168)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (not (= $generated@@167 $generated@@26)) (not true))) (=> (or (not (= $generated@@167 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= $generated@@168 $generated@@26)) (not true))) (=> (or (not (= $generated@@168 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 5) 2) $generated@@177) (=> (= (ControlFlow 0 5) 4) $generated@@176)))))))))
(let (($generated@@179  (=> (and ($generated@@115 $generated@@170) ($generated@@171 $generated@@170)) (=> (and (and (and ($generated@@28 $generated@@32 $generated@@167 ($generated@@33 $generated@@172)) ($generated@@31 $generated@@32 $generated@@167 ($generated@@33 $generated@@172) $generated@@170)) (and ($generated@@28 $generated@@32 $generated@@168 ($generated@@33 $generated)) ($generated@@31 $generated@@32 $generated@@168 ($generated@@33 $generated) $generated@@170))) (and (and ($generated@@101 $generated@@173 $generated@@172) ($generated@@79 $generated@@173 $generated@@172 $generated@@170)) (and (= 0 $generated@@174) (= (ControlFlow 0 8) 5)))) $generated@@178))))
$generated@@179))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
