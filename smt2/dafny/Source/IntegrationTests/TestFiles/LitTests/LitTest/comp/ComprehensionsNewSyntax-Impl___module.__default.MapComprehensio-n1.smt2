(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 (T@T T@U T@U) Bool)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@U T@U) T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@67 (T@U) Int)
(declare-fun $generated@@68 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@76 (Int) Int)
(declare-fun $generated@@81 (Int) Int)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@91 () Int)
(declare-fun $generated@@92 (Int) Bool)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@102 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@103 (T@U) Bool)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@127 (Int) T@U)
(declare-fun $generated@@128 (Int Int) Int)
(declare-fun $generated@@136 (T@U Int) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Int)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@207 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@208 () T@T)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@210 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@211 (T@T T@T) T@T)
(declare-fun $generated@@212 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@287 () T@U)
(declare-fun $generated@@288 (Int) Int)
(declare-fun $generated@@304 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@27 $generated@@28) $generated@@29)  (or (= $generated@@28 $generated@@29) ($generated@@25 $generated@@27 $generated@@29)))
 :pattern ( ($generated@@25 ($generated@@26 $generated@@27 $generated@@28) $generated@@29))
)))
(assert  (and (and (forall (($generated@@35 T@T) ($generated@@36 T@T) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@30 $generated@@35 $generated@@36 ($generated@@34 $generated@@35 $generated@@36 $generated@@38 $generated@@39 $generated@@37) $generated@@39) $generated@@37)
 :weight 0
)) (forall (($generated@@40 T@T) ($generated@@41 T@T) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (or (= $generated@@44 $generated@@45) (= ($generated@@30 $generated@@40 $generated@@41 ($generated@@34 $generated@@40 $generated@@41 $generated@@43 $generated@@44 $generated@@42) $generated@@45) ($generated@@30 $generated@@40 $generated@@41 $generated@@43 $generated@@45)))
 :weight 0
))) (= ($generated@@8 $generated@@31) 3)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@13 ($generated@@30 $generated@@31 $generated@@9 ($generated@@32 $generated@@46 $generated@@47) $generated@@48))  (and ($generated@@33 $generated@@48 $generated@@46) ($generated@@25 $generated@@47 $generated@@48)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@9 ($generated@@32 $generated@@46 $generated@@47) $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@49 ($generated@@50 $generated@@51 $generated@@52 $generated@@53)) $generated@@51)
 :pattern ( ($generated@@49 ($generated@@50 $generated@@51 $generated@@52 $generated@@53)))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@54 ($generated@@50 $generated@@55 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@54 ($generated@@50 $generated@@55 $generated@@56 $generated@@57)))
)))
(assert (= ($generated@@8 $generated@@60) 4))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@59 $generated@@60 $generated@@64 ($generated@@61 $generated@@62 $generated@@63)) ($generated@@58 $generated@@64))
 :pattern ( ($generated@@58 $generated@@64) ($generated@@59 $generated@@60 $generated@@64 ($generated@@61 $generated@@62 $generated@@63)))
)))
(assert (forall (($generated@@66 T@U) ) (!  (not ($generated@@25 $generated@@65 $generated@@66))
 :pattern ( ($generated@@25 $generated@@65 $generated@@66))
)))
(assert (= ($generated@@67 $generated@@65) 0))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@59 $generated@@60 ($generated@@68 $generated@@71 $generated@@72) ($generated@@61 $generated@@69 $generated@@70))  (and ($generated@@33 $generated@@71 $generated@@69) ($generated@@33 $generated@@72 $generated@@70)))
 :pattern ( ($generated@@59 $generated@@60 ($generated@@68 $generated@@71 $generated@@72) ($generated@@61 $generated@@69 $generated@@70)))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@13 ($generated@@30 $generated@@31 $generated@@9 ($generated@@73 $generated@@77 $generated@@78) $generated@@79))  (and ($generated@@33 $generated@@79 $generated@@77) (exists (($generated@@80 Int) )  (and ($generated@@25 $generated@@78 ($generated@@74 $generated@@10 ($generated@@14 $generated@@80))) (= ($generated@@15 ($generated@@75 $generated@@10 $generated@@79)) ($generated@@76 $generated@@80))))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@9 ($generated@@73 $generated@@77 $generated@@78) $generated@@79))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@81 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@85 $generated@@84))
)))
(assert (= ($generated@@8 $generated@@86) 5))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and ($generated@@59 $generated@@86 $generated@@88 ($generated@@87 $generated@@90)) ($generated@@33 $generated@@89 $generated@@90)) ($generated@@59 $generated@@86 ($generated@@26 $generated@@88 $generated@@89) ($generated@@87 $generated@@90)))
 :pattern ( ($generated@@59 $generated@@86 ($generated@@26 $generated@@88 $generated@@89) ($generated@@87 $generated@@90)))
)))
(assert  (=> (<= 0 $generated@@91) (forall (($generated@@93 Int) ) (!  (=> (or ($generated@@92 $generated@@93) (< 0 $generated@@91)) (= ($generated@@76 $generated@@93) (+ $generated@@93 4)))
 :pattern ( ($generated@@76 $generated@@93))
))))
(assert (= ($generated@@8 $generated@@96) 6))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (forall (($generated@@101 T@U) )  (=> ($generated@@95 $generated@@97 $generated@@101) (and ($generated@@33 $generated@@101 $generated@@99) ($generated@@33 ($generated@@30 $generated@@31 $generated@@31 $generated@@98 $generated@@101) $generated@@100)))) ($generated@@59 $generated@@96 ($generated@@50 $generated@@97 $generated@@98 ($generated@@94 $generated@@99 $generated@@100)) ($generated@@94 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@50 $generated@@97 $generated@@98 ($generated@@94 $generated@@99 $generated@@100)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> ($generated@@103 $generated@@109) (= ($generated@@102 $generated@@60 ($generated@@68 $generated@@107 $generated@@108) ($generated@@61 $generated@@105 $generated@@106) $generated@@109)  (and ($generated@@104 $generated@@107 $generated@@105 $generated@@109) ($generated@@104 $generated@@108 $generated@@106 $generated@@109))))
 :pattern ( ($generated@@102 $generated@@60 ($generated@@68 $generated@@107 $generated@@108) ($generated@@61 $generated@@105 $generated@@106) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@58 $generated@@111) (= ($generated@@110 $generated@@111) $generated@@5))
 :pattern ( ($generated@@58 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@74 $generated@@113 ($generated@@75 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@75 $generated@@113 $generated@@112))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@95 ($generated@@114 $generated@@115) $generated@@116) ($generated@@13 ($generated@@30 $generated@@31 $generated@@9 $generated@@115 $generated@@116)))
 :pattern ( ($generated@@95 ($generated@@114 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@58 $generated@@117) (exists (($generated@@118 T@U) ($generated@@119 T@U) ) (= $generated@@117 ($generated@@68 $generated@@118 $generated@@119))))
 :pattern ( ($generated@@58 $generated@@117))
)))
(assert (= ($generated@@8 $generated@@120) 7))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@59 $generated@@120 $generated@@122 ($generated@@121 $generated@@123)) (forall (($generated@@124 T@U) ) (!  (=> ($generated@@95 $generated@@122 $generated@@124) ($generated@@33 $generated@@124 $generated@@123))
 :pattern ( ($generated@@95 $generated@@122 $generated@@124))
)))
 :pattern ( ($generated@@59 $generated@@120 $generated@@122 ($generated@@121 $generated@@123)))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@67 ($generated@@26 $generated@@125 $generated@@126)) (+ 1 ($generated@@67 $generated@@125)))
 :pattern ( ($generated@@26 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@129 Int) ($generated@@130 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@31 ($generated@@127 $generated@@129) $generated@@130) ($generated@@74 $generated@@10 ($generated@@14 ($generated@@128 ($generated@@15 ($generated@@75 $generated@@10 $generated@@130)) $generated@@129))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@31 ($generated@@127 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@104 ($generated@@74 $generated@@134 $generated@@131) $generated@@132 $generated@@133) ($generated@@102 $generated@@134 $generated@@131 $generated@@132 $generated@@133))
 :pattern ( ($generated@@104 ($generated@@74 $generated@@134 $generated@@131) $generated@@132 $generated@@133))
)))
(assert  (=> (<= 0 $generated@@91) (forall (($generated@@135 Int) ) (!  (=> (or ($generated@@92 ($generated@@81 $generated@@135)) (< 0 $generated@@91)) (= ($generated@@76 ($generated@@81 $generated@@135)) ($generated@@81 (+ $generated@@135 4))))
 :weight 3
 :pattern ( ($generated@@76 ($generated@@81 $generated@@135)))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 Int) ($generated@@139 T@U) ) (!  (and (=> (= $generated@@138 ($generated@@67 $generated@@137)) (= ($generated@@136 ($generated@@26 $generated@@137 $generated@@139) $generated@@138) $generated@@139)) (=> (or (not (= $generated@@138 ($generated@@67 $generated@@137))) (not true)) (= ($generated@@136 ($generated@@26 $generated@@137 $generated@@139) $generated@@138) ($generated@@136 $generated@@137 $generated@@138))))
 :pattern ( ($generated@@136 ($generated@@26 $generated@@137 $generated@@139) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@25 $generated@@140 $generated@@141) (exists (($generated@@142 Int) ) (!  (and (and (<= 0 $generated@@142) (< $generated@@142 ($generated@@67 $generated@@140))) (= ($generated@@136 $generated@@140 $generated@@142) $generated@@141))
 :pattern ( ($generated@@136 $generated@@140 $generated@@142))
)))
 :pattern ( ($generated@@25 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 Int) ($generated@@144 Int) ) (! (= ($generated@@128 $generated@@143 $generated@@144) (div $generated@@143 $generated@@144))
 :pattern ( ($generated@@128 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@33 $generated@@145 $generated) (and (= ($generated@@74 $generated@@10 ($generated@@75 $generated@@10 $generated@@145)) $generated@@145) ($generated@@59 $generated@@10 ($generated@@75 $generated@@10 $generated@@145) $generated)))
 :pattern ( ($generated@@33 $generated@@145 $generated))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@33 ($generated@@74 $generated@@148 $generated@@146) $generated@@147) ($generated@@59 $generated@@148 $generated@@146 $generated@@147))
 :pattern ( ($generated@@33 ($generated@@74 $generated@@148 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (<= 0 ($generated@@67 $generated@@149))
 :pattern ( ($generated@@67 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@102 $generated@@120 $generated@@150 ($generated@@121 $generated@@151) $generated@@152) (forall (($generated@@153 T@U) ) (!  (=> ($generated@@95 $generated@@150 $generated@@153) ($generated@@104 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@95 $generated@@150 $generated@@153))
)))
 :pattern ( ($generated@@102 $generated@@120 $generated@@150 ($generated@@121 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@154 ($generated@@94 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@94 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@157 ($generated@@94 $generated@@158 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@94 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@24 ($generated@@94 $generated@@160 $generated@@161)) $generated@@3)
 :pattern ( ($generated@@94 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@110 ($generated@@68 $generated@@162 $generated@@163)) $generated@@5)
 :pattern ( ($generated@@68 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@164 ($generated@@61 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@61 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@167 ($generated@@61 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@61 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@170 ($generated@@68 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@68 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@173 ($generated@@68 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@68 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@102 $generated@@86 $generated@@176 ($generated@@87 $generated@@177) $generated@@178) (forall (($generated@@179 Int) ) (!  (=> (and (<= 0 $generated@@179) (< $generated@@179 ($generated@@67 $generated@@176))) ($generated@@104 ($generated@@136 $generated@@176 $generated@@179) $generated@@177 $generated@@178))
 :pattern ( ($generated@@136 $generated@@176 $generated@@179))
)))
 :pattern ( ($generated@@102 $generated@@86 $generated@@176 ($generated@@87 $generated@@177) $generated@@178))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@180 ($generated@@121 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@121 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@24 ($generated@@121 $generated@@182)) $generated@@1)
 :pattern ( ($generated@@121 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@183 ($generated@@87 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@87 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@24 ($generated@@87 $generated@@185)) $generated@@2)
 :pattern ( ($generated@@87 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@T) ) (! (= ($generated@@75 $generated@@187 ($generated@@74 $generated@@187 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@74 $generated@@187 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@102 $generated@@96 $generated@@188 ($generated@@94 $generated@@189 $generated@@190) $generated@@191) (forall (($generated@@192 T@U) ) (!  (=> ($generated@@95 ($generated@@49 $generated@@188) $generated@@192) (and ($generated@@104 ($generated@@30 $generated@@31 $generated@@31 ($generated@@54 $generated@@188) $generated@@192) $generated@@190 $generated@@191) ($generated@@104 $generated@@192 $generated@@189 $generated@@191)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@31 ($generated@@54 $generated@@188) $generated@@192))
 :pattern ( ($generated@@95 ($generated@@49 $generated@@188) $generated@@192))
)))
 :pattern ( ($generated@@102 $generated@@96 $generated@@188 ($generated@@94 $generated@@189 $generated@@190) $generated@@191))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! (< ($generated@@193 $generated@@195) ($generated@@194 ($generated@@68 $generated@@195 $generated@@196)))
 :pattern ( ($generated@@68 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (< ($generated@@193 $generated@@198) ($generated@@194 ($generated@@68 $generated@@197 $generated@@198)))
 :pattern ( ($generated@@68 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (!  (not ($generated@@95 ($generated@@49 $generated@@199) $generated@@200))
 :pattern ( ($generated@@95 ($generated@@49 $generated@@199) $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@33 $generated@@201 ($generated@@94 $generated@@202 $generated@@203)) (and (= ($generated@@74 $generated@@96 ($generated@@75 $generated@@96 $generated@@201)) $generated@@201) ($generated@@59 $generated@@96 ($generated@@75 $generated@@96 $generated@@201) ($generated@@94 $generated@@202 $generated@@203))))
 :pattern ( ($generated@@33 $generated@@201 ($generated@@94 $generated@@202 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> ($generated@@33 $generated@@206 ($generated@@61 $generated@@204 $generated@@205)) (and (= ($generated@@74 $generated@@60 ($generated@@75 $generated@@60 $generated@@206)) $generated@@206) ($generated@@59 $generated@@60 ($generated@@75 $generated@@60 $generated@@206) ($generated@@61 $generated@@204 $generated@@205))))
 :pattern ( ($generated@@33 $generated@@206 ($generated@@61 $generated@@204 $generated@@205)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@215 T@T) ($generated@@216 T@T) ($generated@@217 T@T) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@207 $generated@@215 $generated@@216 $generated@@217 ($generated@@212 $generated@@215 $generated@@216 $generated@@217 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@220 $generated@@221) $generated@@218)
 :weight 0
)) (and (forall (($generated@@222 T@T) ($generated@@223 T@T) ($generated@@224 T@T) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@207 $generated@@222 $generated@@223 $generated@@224 ($generated@@212 $generated@@222 $generated@@223 $generated@@224 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@207 $generated@@222 $generated@@223 $generated@@224 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)) (forall (($generated@@231 T@T) ($generated@@232 T@T) ($generated@@233 T@T) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@207 $generated@@231 $generated@@232 $generated@@233 ($generated@@212 $generated@@231 $generated@@232 $generated@@233 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@207 $generated@@231 $generated@@232 $generated@@233 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (= ($generated@@8 $generated@@208) 8)) (= ($generated@@8 $generated@@209) 9)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (= ($generated@@8 ($generated@@211 $generated@@240 $generated@@241)) 10))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@213 ($generated@@211 $generated@@242 $generated@@243)) $generated@@242)
 :pattern ( ($generated@@211 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (! (= ($generated@@214 ($generated@@211 $generated@@244 $generated@@245)) $generated@@245)
 :pattern ( ($generated@@211 $generated@@244 $generated@@245))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (= ($generated@@13 ($generated@@207 $generated@@208 $generated@@209 $generated@@9 ($generated@@210 $generated@@246 $generated@@247 $generated@@248 $generated@@249) $generated@@250 $generated@@251))  (=> (and (or (not (= $generated@@250 $generated@@246)) (not true)) ($generated@@13 ($generated@@75 $generated@@9 ($generated@@30 $generated@@209 $generated@@31 ($generated@@30 $generated@@208 ($generated@@211 $generated@@209 $generated@@31) $generated@@247 $generated@@250) $generated@@248)))) $generated@@249))
 :pattern ( ($generated@@207 $generated@@208 $generated@@209 $generated@@9 ($generated@@210 $generated@@246 $generated@@247 $generated@@248 $generated@@249) $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (and (= ($generated@@252 ($generated@@26 $generated@@254 $generated@@255)) $generated@@254) (= ($generated@@253 ($generated@@26 $generated@@254 $generated@@255)) $generated@@255))
 :pattern ( ($generated@@26 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (= ($generated@@24 ($generated@@61 $generated@@257 $generated@@258)) $generated@@6) (= ($generated@@256 ($generated@@61 $generated@@257 $generated@@258)) $generated@@7))
 :pattern ( ($generated@@61 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (or (= $generated@@259 $generated@@199) (exists (($generated@@260 T@U) ) ($generated@@95 ($generated@@49 $generated@@259) $generated@@260)))
 :pattern ( ($generated@@49 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ) (!  (or (= $generated@@262 $generated@@199) (exists (($generated@@263 T@U) ) ($generated@@95 ($generated@@261 $generated@@262) $generated@@263)))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (= ($generated@@95 ($generated@@264 $generated@@265) $generated@@266)  (and ($generated@@95 ($generated@@49 $generated@@265) ($generated@@170 ($generated@@75 $generated@@60 $generated@@266))) (= ($generated@@30 $generated@@31 $generated@@31 ($generated@@54 $generated@@265) ($generated@@170 ($generated@@75 $generated@@60 $generated@@266))) ($generated@@173 ($generated@@75 $generated@@60 $generated@@266)))))
 :pattern ( ($generated@@95 ($generated@@264 $generated@@265) $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= ($generated@@95 ($generated@@261 $generated@@267) $generated@@268) (exists (($generated@@269 T@U) ) (!  (and ($generated@@95 ($generated@@49 $generated@@267) $generated@@269) (= $generated@@268 ($generated@@30 $generated@@31 $generated@@31 ($generated@@54 $generated@@267) $generated@@269)))
 :pattern ( ($generated@@95 ($generated@@49 $generated@@267) $generated@@269))
 :pattern ( ($generated@@30 $generated@@31 $generated@@31 ($generated@@54 $generated@@267) $generated@@269))
)))
 :pattern ( ($generated@@95 ($generated@@261 $generated@@267) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@193 ($generated@@74 $generated@@60 $generated@@270)) ($generated@@194 $generated@@270))
 :pattern ( ($generated@@193 ($generated@@74 $generated@@60 $generated@@270)))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> ($generated@@33 $generated@@271 ($generated@@121 $generated@@272)) (and (= ($generated@@74 $generated@@120 ($generated@@75 $generated@@120 $generated@@271)) $generated@@271) ($generated@@59 $generated@@120 ($generated@@75 $generated@@120 $generated@@271) ($generated@@121 $generated@@272))))
 :pattern ( ($generated@@33 $generated@@271 ($generated@@121 $generated@@272)))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> ($generated@@33 $generated@@273 ($generated@@87 $generated@@274)) (and (= ($generated@@74 $generated@@86 ($generated@@75 $generated@@86 $generated@@273)) $generated@@273) ($generated@@59 $generated@@86 ($generated@@75 $generated@@86 $generated@@273) ($generated@@87 $generated@@274))))
 :pattern ( ($generated@@33 $generated@@273 ($generated@@87 $generated@@274)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (= ($generated@@59 $generated@@96 $generated@@275 ($generated@@94 $generated@@276 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> ($generated@@95 ($generated@@49 $generated@@275) $generated@@278) (and ($generated@@33 ($generated@@30 $generated@@31 $generated@@31 ($generated@@54 $generated@@275) $generated@@278) $generated@@277) ($generated@@33 $generated@@278 $generated@@276)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@31 ($generated@@54 $generated@@275) $generated@@278))
 :pattern ( ($generated@@95 ($generated@@49 $generated@@275) $generated@@278))
)))
 :pattern ( ($generated@@59 $generated@@96 $generated@@275 ($generated@@94 $generated@@276 $generated@@277)))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and ($generated@@103 $generated@@281) (and ($generated@@58 $generated@@279) (exists (($generated@@282 T@U) ) (! ($generated@@102 $generated@@60 $generated@@279 ($generated@@61 $generated@@280 $generated@@282) $generated@@281)
 :pattern ( ($generated@@102 $generated@@60 $generated@@279 ($generated@@61 $generated@@280 $generated@@282) $generated@@281))
)))) ($generated@@104 ($generated@@170 $generated@@279) $generated@@280 $generated@@281))
 :pattern ( ($generated@@104 ($generated@@170 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and ($generated@@103 $generated@@285) (and ($generated@@58 $generated@@283) (exists (($generated@@286 T@U) ) (! ($generated@@102 $generated@@60 $generated@@283 ($generated@@61 $generated@@286 $generated@@284) $generated@@285)
 :pattern ( ($generated@@102 $generated@@60 $generated@@283 ($generated@@61 $generated@@286 $generated@@284) $generated@@285))
)))) ($generated@@104 ($generated@@173 $generated@@283) $generated@@284 $generated@@285))
 :pattern ( ($generated@@104 ($generated@@173 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@289 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@31 $generated@@287 $generated@@289) ($generated@@74 $generated@@10 ($generated@@14 ($generated@@288 ($generated@@15 ($generated@@75 $generated@@10 $generated@@289))))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@31 $generated@@287 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (= ($generated@@68 ($generated@@83 $generated@@31 $generated@@290) ($generated@@83 $generated@@31 $generated@@291)) ($generated@@83 $generated@@60 ($generated@@68 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@68 ($generated@@83 $generated@@31 $generated@@290) ($generated@@83 $generated@@31 $generated@@291)))
)))
(assert (forall (($generated@@292 Int) ) (! (= ($generated@@74 $generated@@10 ($generated@@14 ($generated@@81 $generated@@292))) ($generated@@83 $generated@@31 ($generated@@74 $generated@@10 ($generated@@14 $generated@@292))))
 :pattern ( ($generated@@74 $generated@@10 ($generated@@14 ($generated@@81 $generated@@292))))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@T) ) (! (= ($generated@@74 $generated@@294 ($generated@@83 $generated@@294 $generated@@293)) ($generated@@83 $generated@@31 ($generated@@74 $generated@@294 $generated@@293)))
 :pattern ( ($generated@@74 $generated@@294 ($generated@@83 $generated@@294 $generated@@293)))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= ($generated@@67 $generated@@295) 0) (= $generated@@295 $generated@@65))
 :pattern ( ($generated@@67 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! ($generated@@102 $generated@@10 $generated@@297 $generated $generated@@296)
 :pattern ( ($generated@@102 $generated@@10 $generated@@297 $generated $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (! (= ($generated@@59 $generated@@86 $generated@@298 ($generated@@87 $generated@@299)) (forall (($generated@@300 Int) ) (!  (=> (and (<= 0 $generated@@300) (< $generated@@300 ($generated@@67 $generated@@298))) ($generated@@33 ($generated@@136 $generated@@298 $generated@@300) $generated@@299))
 :pattern ( ($generated@@136 $generated@@298 $generated@@300))
)))
 :pattern ( ($generated@@59 $generated@@86 $generated@@298 ($generated@@87 $generated@@299)))
)))
(assert (forall (($generated@@301 T@U) ) (!  (or (= $generated@@301 $generated@@199) (exists (($generated@@302 T@U) ($generated@@303 T@U) ) ($generated@@95 ($generated@@264 $generated@@301) ($generated@@74 $generated@@60 ($generated@@68 $generated@@302 $generated@@303)))))
 :pattern ( ($generated@@264 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 Int) ) (!  (=> (and (<= 0 $generated@@306) (< $generated@@306 ($generated@@67 $generated@@305))) (< ($generated@@194 ($generated@@75 $generated@@60 ($generated@@136 $generated@@305 $generated@@306))) ($generated@@304 $generated@@305)))
 :pattern ( ($generated@@194 ($generated@@75 $generated@@60 ($generated@@136 $generated@@305 $generated@@306))))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> ($generated@@59 $generated@@96 $generated@@307 ($generated@@94 $generated@@308 $generated@@309)) (and (and ($generated@@59 $generated@@120 ($generated@@49 $generated@@307) ($generated@@121 $generated@@308)) ($generated@@59 $generated@@120 ($generated@@261 $generated@@307) ($generated@@121 $generated@@309))) ($generated@@59 $generated@@120 ($generated@@264 $generated@@307) ($generated@@121 ($generated@@61 $generated@@308 $generated@@309)))))
 :pattern ( ($generated@@59 $generated@@96 $generated@@307 ($generated@@94 $generated@@308 $generated@@309)))
)))
(assert (forall (($generated@@310 T@U) ) (! ($generated@@59 $generated@@10 $generated@@310 $generated)
 :pattern ( ($generated@@59 $generated@@10 $generated@@310 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@311 () T@U)
(declare-fun $generated@@312 () Int)
(declare-fun $generated@@313 () Int)
(declare-fun $generated@@314 () T@U)
(declare-fun $generated@@315 () T@U)
(declare-fun $generated@@316 () Int)
(declare-fun $generated@@317 () T@U)
(declare-fun $generated@@318 () T@U)
(declare-fun $generated@@319 (T@U) Bool)
(declare-fun $generated@@320 () T@U)
(declare-fun $generated@@321 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@322 true))
(let (($generated@@323  (=> (and (not (and ($generated@@25 $generated@@311 ($generated@@74 $generated@@10 ($generated@@14 $generated@@312))) ($generated@@25 $generated@@311 ($generated@@74 $generated@@10 ($generated@@14 $generated@@313))))) (= (ControlFlow 0 6) 3)) $generated@@322)))
(let (($generated@@324  (=> (and ($generated@@25 $generated@@311 ($generated@@74 $generated@@10 ($generated@@14 $generated@@312))) ($generated@@25 $generated@@311 ($generated@@74 $generated@@10 ($generated@@14 $generated@@313)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (not (= ($generated@@76 $generated@@312) ($generated@@76 $generated@@313))) (not true)) (= $generated@@312 $generated@@313))) (=> (or (or (not (= ($generated@@76 $generated@@312) ($generated@@76 $generated@@313))) (not true)) (= $generated@@312 $generated@@313)) (=> (= (ControlFlow 0 4) 3) $generated@@322))))))
(let (($generated@@325  (=> (not ($generated@@25 $generated@@311 ($generated@@74 $generated@@10 ($generated@@14 $generated@@312)))) (and (=> (= (ControlFlow 0 8) 4) $generated@@324) (=> (= (ControlFlow 0 8) 6) $generated@@323)))))
(let (($generated@@326  (=> ($generated@@25 $generated@@311 ($generated@@74 $generated@@10 ($generated@@14 $generated@@312))) (and (=> (= (ControlFlow 0 7) 4) $generated@@324) (=> (= (ControlFlow 0 7) 6) $generated@@323)))))
(let (($generated@@327  (=> (not ($generated@@25 $generated@@311 ($generated@@74 $generated@@10 ($generated@@14 $generated@@312)))) (and (=> (= (ControlFlow 0 10) 7) $generated@@326) (=> (= (ControlFlow 0 10) 8) $generated@@325)))))
(let (($generated@@328  (=> ($generated@@25 $generated@@311 ($generated@@74 $generated@@10 ($generated@@14 $generated@@312))) (=> (and ($generated@@102 $generated@@10 ($generated@@14 $generated@@312) $generated $generated@@314) ($generated@@92 $generated@@312)) (and (=> (= (ControlFlow 0 9) 7) $generated@@326) (=> (= (ControlFlow 0 9) 8) $generated@@325))))))
(let (($generated@@329  (and (=> (= (ControlFlow 0 11) 9) $generated@@328) (=> (= (ControlFlow 0 11) 10) $generated@@327))))
(let (($generated@@330 true))
(let (($generated@@331  (=> (= $generated@@315 ($generated@@50 ($generated@@114 ($generated@@32 $generated $generated@@311)) ($generated@@127 ($generated@@81 2)) ($generated@@94 $generated $generated))) (and (=> (= (ControlFlow 0 12) 11) $generated@@329) (=> (= (ControlFlow 0 12) 2) $generated@@330)))))
(let (($generated@@332  (=> (and (not ($generated@@25 $generated@@311 ($generated@@74 $generated@@10 ($generated@@14 $generated@@316)))) (= (ControlFlow 0 15) 12)) $generated@@331)))
(let (($generated@@333  (=> ($generated@@25 $generated@@311 ($generated@@74 $generated@@10 ($generated@@14 $generated@@316))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (not (= ($generated@@81 2) 0)) (not true))) (=> (or (not (= ($generated@@81 2) 0)) (not true)) (=> (= (ControlFlow 0 13) 12) $generated@@331))))))
(let (($generated@@334  (and (=> (= (ControlFlow 0 16) 13) $generated@@333) (=> (= (ControlFlow 0 16) 15) $generated@@332))))
(let (($generated@@335 true))
(let (($generated@@336  (=> (and (= $generated@@317 ($generated@@210 $generated@@318 $generated@@314 $generated@@4 false)) (= $generated@@311 ($generated@@83 $generated@@86 ($generated@@26 ($generated@@26 ($generated@@26 $generated@@65 ($generated@@74 $generated@@10 ($generated@@14 ($generated@@81 12)))) ($generated@@74 $generated@@10 ($generated@@14 ($generated@@81 13)))) ($generated@@74 $generated@@10 ($generated@@14 ($generated@@81 14))))))) (and (=> (= (ControlFlow 0 17) 16) $generated@@334) (=> (= (ControlFlow 0 17) 1) $generated@@335)))))
(let (($generated@@337  (=> (and ($generated@@103 $generated@@314) ($generated@@319 $generated@@314)) (=> (and (and ($generated@@59 $generated@@86 $generated@@320 ($generated@@87 $generated)) ($generated@@102 $generated@@86 $generated@@320 ($generated@@87 $generated) $generated@@314)) true) (=> (and (and (and ($generated@@59 $generated@@96 $generated@@321 ($generated@@94 $generated $generated)) ($generated@@102 $generated@@96 $generated@@321 ($generated@@94 $generated $generated) $generated@@314)) true) (and (= 1 $generated@@91) (= (ControlFlow 0 18) 17))) $generated@@336)))))
$generated@@337)))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
