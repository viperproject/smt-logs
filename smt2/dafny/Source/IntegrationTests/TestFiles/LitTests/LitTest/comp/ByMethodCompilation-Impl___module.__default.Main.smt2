(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@38 () Int)
(declare-fun $generated@@39 () Bool)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@41 (Int) Int)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@U T@U) Bool)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U T@U T@U) Bool)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@77 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@81 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@138 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@23 ($generated@@22 $generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@22 $generated@@24 $generated@@25))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@26 $generated@@28) ($generated@@23 ($generated@@22 $generated@@26 $generated@@27) $generated@@28))
 :pattern ( ($generated@@22 $generated@@26 $generated@@27) ($generated@@23 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@7 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@7 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@23 ($generated@@22 $generated@@33 $generated@@34) $generated@@35)  (or (= $generated@@35 $generated@@34) ($generated@@23 $generated@@33 $generated@@35)))
 :pattern ( ($generated@@23 ($generated@@22 $generated@@33 $generated@@34) $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ) (!  (not ($generated@@23 $generated@@36 $generated@@37))
 :pattern ( ($generated@@23 $generated@@36 $generated@@37))
)))
(assert  (=> (<= 0 $generated@@38) (=> (or $generated@@39 (< 0 $generated@@38)) (= $generated@@40 ($generated@@41 4)))))
(assert  (=> (<= 0 $generated@@38) (=> (or $generated@@39 (< 0 $generated@@38)) (= $generated@@40 ($generated@@41 4)))))
(assert (forall (($generated@@42 Int) ) (! (= ($generated@@41 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 $generated@@44) $generated@@44)
 :pattern ( ($generated@@43 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 ($generated@@46 $generated@@49 $generated@@48)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@49 $generated@@48))
)))
(assert (= ($generated@@5 $generated@@51) 3))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@50 $generated@@51 $generated@@54 ($generated@@52 $generated@@55)) (forall (($generated@@56 T@U) ) (!  (=> ($generated@@23 $generated@@54 $generated@@56) ($generated@@53 $generated@@56 $generated@@55))
 :pattern ( ($generated@@23 $generated@@54 $generated@@56))
)))
 :pattern ( ($generated@@50 $generated@@51 $generated@@54 ($generated@@52 $generated@@55)))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@50 $generated@@7 $generated@@57 $generated@@30) (<= ($generated@@41 0) ($generated@@12 $generated@@57)))
 :pattern ( ($generated@@50 $generated@@7 $generated@@57 $generated@@30))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@58 ($generated@@47 $generated@@62 $generated@@59) $generated@@60 $generated@@61) ($generated@@29 $generated@@62 $generated@@59 $generated@@60 $generated@@61))
 :pattern ( ($generated@@58 ($generated@@47 $generated@@62 $generated@@59) $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@53 $generated@@63 $generated@@30) (and (= ($generated@@47 $generated@@7 ($generated@@46 $generated@@7 $generated@@63)) $generated@@63) ($generated@@50 $generated@@7 ($generated@@46 $generated@@7 $generated@@63) $generated@@30)))
 :pattern ( ($generated@@53 $generated@@63 $generated@@30))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@53 $generated@@64 $generated) (and (= ($generated@@47 $generated@@7 ($generated@@46 $generated@@7 $generated@@64)) $generated@@64) ($generated@@50 $generated@@7 ($generated@@46 $generated@@7 $generated@@64) $generated)))
 :pattern ( ($generated@@53 $generated@@64 $generated))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@53 ($generated@@47 $generated@@67 $generated@@65) $generated@@66) ($generated@@50 $generated@@67 $generated@@65 $generated@@66))
 :pattern ( ($generated@@53 ($generated@@47 $generated@@67 $generated@@65) $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@29 $generated@@51 $generated@@68 ($generated@@52 $generated@@69) $generated@@70) (forall (($generated@@71 T@U) ) (!  (=> ($generated@@23 $generated@@68 $generated@@71) ($generated@@58 $generated@@71 $generated@@69 $generated@@70))
 :pattern ( ($generated@@23 $generated@@68 $generated@@71))
)))
 :pattern ( ($generated@@29 $generated@@51 $generated@@68 ($generated@@52 $generated@@69) $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@72 ($generated@@52 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@52 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@21 ($generated@@52 $generated@@74)) $generated@@1)
 :pattern ( ($generated@@52 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@46 $generated@@76 ($generated@@47 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@47 $generated@@76 $generated@@75))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@77 $generated@@88 $generated@@89 $generated@@90 ($generated@@84 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@91) $generated@@93 $generated@@94) $generated@@91)
 :weight 0
)) (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (or (= $generated@@100 $generated@@102) (= ($generated@@77 $generated@@95 $generated@@96 $generated@@97 ($generated@@84 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@100 $generated@@101 $generated@@98) $generated@@102 $generated@@103) ($generated@@77 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@102 $generated@@103)))
 :weight 0
)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@110 $generated@@112) (= ($generated@@77 $generated@@104 $generated@@105 $generated@@106 ($generated@@84 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@111 $generated@@112) ($generated@@77 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@111 $generated@@112)))
 :weight 0
)))) (= ($generated@@5 $generated@@78) 4)) (= ($generated@@5 $generated@@79) 5)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@81 $generated@@113 $generated@@114 ($generated@@85 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@115) $generated@@117) $generated@@115)
 :weight 0
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@81 $generated@@118 $generated@@119 ($generated@@85 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@81 $generated@@118 $generated@@119 $generated@@121 $generated@@123)))
 :weight 0
))) (= ($generated@@5 $generated@@82) 6)) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (= ($generated@@5 ($generated@@83 $generated@@124 $generated@@125)) 7))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@126 $generated@@127)) $generated@@126)
 :pattern ( ($generated@@83 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@128 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@83 $generated@@128 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Bool) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@10 ($generated@@77 $generated@@78 $generated@@79 $generated@@6 ($generated@@80 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@130)) (not true)) ($generated@@10 ($generated@@46 $generated@@6 ($generated@@81 $generated@@79 $generated@@82 ($generated@@81 $generated@@78 ($generated@@83 $generated@@79 $generated@@82) $generated@@131 $generated@@134) $generated@@132)))) $generated@@133))
 :pattern ( ($generated@@77 $generated@@78 $generated@@79 $generated@@6 ($generated@@80 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> ($generated@@53 $generated@@136 ($generated@@52 $generated@@137)) (and (= ($generated@@47 $generated@@51 ($generated@@46 $generated@@51 $generated@@136)) $generated@@136) ($generated@@50 $generated@@51 ($generated@@46 $generated@@51 $generated@@136) ($generated@@52 $generated@@137))))
 :pattern ( ($generated@@53 $generated@@136 ($generated@@52 $generated@@137)))
)))
(assert (= ($generated@@21 $generated@@30) $generated@@3))
(assert (= ($generated@@138 $generated@@30) $generated@@4))
(assert (forall (($generated@@139 Int) ) (! (= ($generated@@47 $generated@@7 ($generated@@11 ($generated@@41 $generated@@139))) ($generated@@43 $generated@@82 ($generated@@47 $generated@@7 ($generated@@11 $generated@@139))))
 :pattern ( ($generated@@47 $generated@@7 ($generated@@11 ($generated@@41 $generated@@139))))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@47 $generated@@141 ($generated@@43 $generated@@141 $generated@@140)) ($generated@@43 $generated@@82 ($generated@@47 $generated@@141 $generated@@140)))
 :pattern ( ($generated@@47 $generated@@141 ($generated@@43 $generated@@141 $generated@@140)))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! ($generated@@29 $generated@@7 $generated@@143 $generated $generated@@142)
 :pattern ( ($generated@@29 $generated@@7 $generated@@143 $generated $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! ($generated@@50 $generated@@7 $generated@@144 $generated)
 :pattern ( ($generated@@50 $generated@@7 $generated@@144 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (Int Int) Bool)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 (Int) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@158  (=> (and (and (= $generated@@145 ($generated@@80 $generated@@146 $generated@@147 $generated@@2 false)) $generated@@39) (and $generated@@39 (= $generated@@148 ($generated@@41 $generated@@40)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@50 $generated@@7 ($generated@@11 ($generated@@41 7)) $generated@@30)) (=> ($generated@@50 $generated@@7 ($generated@@11 ($generated@@41 7)) $generated@@30) (=> (and (= $generated@@149 ($generated@@41 7)) ($generated@@29 $generated@@7 ($generated@@11 $generated@@149) $generated@@30 $generated@@147)) (=> (and (and (= $generated@@150 ($generated@@41 0)) ($generated@@29 $generated@@7 ($generated@@11 $generated@@150) $generated@@30 $generated@@147)) (and ($generated@@151 ($generated@@41 7) ($generated@@41 0)) ($generated@@151 ($generated@@41 7) ($generated@@41 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@50 $generated@@7 ($generated@@11 ($generated@@41 2)) $generated@@30)) (=> ($generated@@50 $generated@@7 ($generated@@11 ($generated@@41 2)) $generated@@30) (=> (= $generated@@152 ($generated@@41 2)) (=> (and (and ($generated@@29 $generated@@7 ($generated@@11 $generated@@152) $generated@@30 $generated@@147) ($generated@@153 ($generated@@41 2))) (and ($generated@@153 ($generated@@41 2)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@50 $generated@@7 ($generated@@11 ($generated@@41 4)) $generated@@30))))))))))))
(let (($generated@@159  (=> (and ($generated@@154 $generated@@147) ($generated@@155 $generated@@147)) (=> (and (and ($generated@@50 $generated@@51 $generated@@156 ($generated@@52 $generated)) ($generated@@29 $generated@@51 $generated@@156 ($generated@@52 $generated) $generated@@147)) true) (=> (and (and (and ($generated@@50 $generated@@51 $generated@@157 ($generated@@52 $generated)) ($generated@@29 $generated@@51 $generated@@157 ($generated@@52 $generated) $generated@@147)) true) (and (= 4 $generated@@38) (= (ControlFlow 0 5) 2))) $generated@@158)))))
$generated@@159)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
