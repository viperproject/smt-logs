(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U Int) T@U)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U Int) T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U Int) T@U)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@T T@T) T@T)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T) T@T)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24)
 :pattern ( ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24))
)))
(assert (= ($generated@@5 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (or ($generated@@26 $generated@@32) ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@22))) ($generated@@27 $generated@@28 ($generated@@25 $generated@@31 $generated@@32) $generated@@30))
 :pattern ( ($generated@@25 $generated@@31 $generated@@32))
)))
(assert (= ($generated@@33 $generated@@34) 0))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 Int) ) (!  (=> (and (<= 0 $generated@@39) (<= $generated@@39 ($generated@@33 $generated@@37))) (= ($generated@@35 ($generated@@36 $generated@@37 $generated@@38) $generated@@39) ($generated@@36 ($generated@@35 $generated@@37 $generated@@39) $generated@@38)))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@37 $generated@@38) $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 Int) ) (!  (=> (= $generated@@44 ($generated@@33 $generated@@42)) (and (= ($generated@@40 ($generated@@41 $generated@@42 $generated@@43) $generated@@44) $generated@@42) (= ($generated@@35 ($generated@@41 $generated@@42 $generated@@43) $generated@@44) $generated@@43)))
 :pattern ( ($generated@@40 ($generated@@41 $generated@@42 $generated@@43) $generated@@44))
 :pattern ( ($generated@@35 ($generated@@41 $generated@@42 $generated@@43) $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@21 $generated@@28 $generated@@45 $generated@@30 $generated@@46) ($generated@@21 $generated@@28 $generated@@45 ($generated@@29 $generated@@22) $generated@@46))
 :pattern ( ($generated@@21 $generated@@28 $generated@@45 $generated@@30 $generated@@46))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 Int) ) (!  (=> (= $generated@@48 0) (= ($generated@@35 $generated@@47 $generated@@48) $generated@@47))
 :pattern ( ($generated@@35 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 Int) ) (! (= ($generated@@49 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (and ($generated@@27 $generated@@28 $generated@@55 ($generated@@29 $generated@@57)) ($generated@@54 $generated@@56 $generated@@57)) ($generated@@27 $generated@@28 ($generated@@36 $generated@@55 $generated@@56) ($generated@@29 $generated@@57)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@36 $generated@@55 $generated@@56) ($generated@@29 $generated@@57)))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 Int) ($generated@@61 Int) ) (!  (=> (and (and (<= 0 $generated@@61) (< $generated@@61 $generated@@60)) (< $generated@@61 ($generated@@33 $generated@@59))) (= ($generated@@58 ($generated@@40 $generated@@59 $generated@@60) $generated@@61) ($generated@@58 $generated@@59 $generated@@61)))
 :weight 25
 :pattern ( ($generated@@58 ($generated@@40 $generated@@59 $generated@@60) $generated@@61))
 :pattern ( ($generated@@58 $generated@@59 $generated@@61) ($generated@@40 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 Int) ) (!  (=> (and (<= 0 $generated@@63) (<= $generated@@63 ($generated@@33 $generated@@62))) (= ($generated@@33 ($generated@@35 $generated@@62 $generated@@63)) (- ($generated@@33 $generated@@62) $generated@@63)))
 :pattern ( ($generated@@33 ($generated@@35 $generated@@62 $generated@@63)))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@64 $generated@@65 $generated@@66)  (and (= ($generated@@33 $generated@@65) ($generated@@33 $generated@@66)) (forall (($generated@@67 Int) ) (!  (=> (and (<= 0 $generated@@67) (< $generated@@67 ($generated@@33 $generated@@65))) (= ($generated@@58 $generated@@65 $generated@@67) ($generated@@58 $generated@@66 $generated@@67)))
 :pattern ( ($generated@@58 $generated@@65 $generated@@67))
 :pattern ( ($generated@@58 $generated@@66 $generated@@67))
))))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 ($generated@@68 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@68 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (or ($generated@@26 $generated@@74) ($generated@@27 $generated@@28 $generated@@74 ($generated@@29 $generated@@22))) (and (=> (or (not (= ($generated@@33 $generated@@74) ($generated@@49 0))) (not true)) ($generated@@26 ($generated@@35 $generated@@74 ($generated@@49 1)))) (= ($generated@@25 ($generated@@72 $generated@@73) $generated@@74) (ite (= ($generated@@33 $generated@@74) ($generated@@49 0)) $generated@@34 ($generated@@41 ($generated@@25 $generated@@73 ($generated@@35 $generated@@74 ($generated@@49 1))) ($generated@@36 $generated@@34 ($generated@@58 $generated@@74 ($generated@@49 0))))))))
 :pattern ( ($generated@@25 ($generated@@72 $generated@@73) $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@33 ($generated@@36 $generated@@75 $generated@@76)) (+ 1 ($generated@@33 $generated@@75)))
 :pattern ( ($generated@@36 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@69 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@21 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@69 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 Int) ($generated@@84 Int) ) (!  (=> (and (and (<= 0 $generated@@83) (<= 0 $generated@@84)) (< $generated@@84 (- ($generated@@33 $generated@@82) $generated@@83))) (= ($generated@@58 ($generated@@35 $generated@@82 $generated@@83) $generated@@84) ($generated@@58 $generated@@82 (+ $generated@@84 $generated@@83))))
 :weight 25
 :pattern ( ($generated@@58 ($generated@@35 $generated@@82 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@33 ($generated@@41 $generated@@85 $generated@@86)) (+ ($generated@@33 $generated@@85) ($generated@@33 $generated@@86)))
 :pattern ( ($generated@@33 ($generated@@41 $generated@@85 $generated@@86)))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@54 $generated@@87 $generated@@22) (and (= ($generated@@69 $generated@@7 ($generated@@68 $generated@@7 $generated@@87)) $generated@@87) ($generated@@27 $generated@@7 ($generated@@68 $generated@@7 $generated@@87) $generated@@22)))
 :pattern ( ($generated@@54 $generated@@87 $generated@@22))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@54 $generated@@88 $generated@@30) (and (= ($generated@@69 $generated@@28 ($generated@@68 $generated@@28 $generated@@88)) $generated@@88) ($generated@@27 $generated@@28 ($generated@@68 $generated@@28 $generated@@88) $generated@@30)))
 :pattern ( ($generated@@54 $generated@@88 $generated@@30))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 Int) ($generated@@91 T@U) ) (!  (and (=> (= $generated@@90 ($generated@@33 $generated@@89)) (= ($generated@@58 ($generated@@36 $generated@@89 $generated@@91) $generated@@90) $generated@@91)) (=> (or (not (= $generated@@90 ($generated@@33 $generated@@89))) (not true)) (= ($generated@@58 ($generated@@36 $generated@@89 $generated@@91) $generated@@90) ($generated@@58 $generated@@89 $generated@@90))))
 :pattern ( ($generated@@58 ($generated@@36 $generated@@89 $generated@@91) $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@64 $generated@@92 $generated@@93) (= $generated@@92 $generated@@93))
 :pattern ( ($generated@@64 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 Int) ) (!  (=> (and (<= 0 $generated@@95) (<= $generated@@95 ($generated@@33 $generated@@94))) (= ($generated@@33 ($generated@@40 $generated@@94 $generated@@95)) $generated@@95))
 :pattern ( ($generated@@33 ($generated@@40 $generated@@94 $generated@@95)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@54 ($generated@@69 $generated@@98 $generated@@96) $generated@@97) ($generated@@27 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@54 ($generated@@69 $generated@@98 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (<= 0 ($generated@@33 $generated@@99))
 :pattern ( ($generated@@33 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@26 ($generated@@51 $generated@@28 $generated@@101)) ($generated@@27 $generated@@28 $generated@@101 ($generated@@29 $generated@@22))) (and (=> (or (not (= ($generated@@33 ($generated@@51 $generated@@28 $generated@@101)) ($generated@@49 0))) (not true)) ($generated@@26 ($generated@@51 $generated@@28 ($generated@@35 ($generated@@51 $generated@@28 $generated@@101) ($generated@@49 1))))) (= ($generated@@25 ($generated@@72 $generated@@100) ($generated@@51 $generated@@28 $generated@@101)) (ite (= ($generated@@33 ($generated@@51 $generated@@28 $generated@@101)) ($generated@@49 0)) $generated@@34 ($generated@@41 ($generated@@25 ($generated@@72 $generated@@100) ($generated@@51 $generated@@28 ($generated@@35 ($generated@@51 $generated@@28 $generated@@101) ($generated@@49 1)))) ($generated@@36 $generated@@34 ($generated@@58 ($generated@@51 $generated@@28 $generated@@101) ($generated@@49 0))))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@72 $generated@@100) ($generated@@51 $generated@@28 $generated@@101)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@21 $generated@@28 $generated@@102 ($generated@@29 $generated@@103) $generated@@104) (forall (($generated@@105 Int) ) (!  (=> (and (<= 0 $generated@@105) (< $generated@@105 ($generated@@33 $generated@@102))) ($generated@@77 ($generated@@58 $generated@@102 $generated@@105) $generated@@103 $generated@@104))
 :pattern ( ($generated@@58 $generated@@102 $generated@@105))
)))
 :pattern ( ($generated@@21 $generated@@28 $generated@@102 ($generated@@29 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 ($generated@@29 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@29 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@29 $generated@@109)) $generated)
 :pattern ( ($generated@@29 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@68 $generated@@111 ($generated@@69 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@69 $generated@@111 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@25 ($generated@@72 $generated@@112) $generated@@113) ($generated@@25 $generated@@112 $generated@@113))
 :pattern ( ($generated@@25 ($generated@@72 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@114 $generated@@30)  (and ($generated@@27 $generated@@28 $generated@@114 ($generated@@29 $generated@@22)) (or (= ($generated@@33 $generated@@114) ($generated@@49 0)) (or (not (= ($generated@@33 $generated@@114) 0)) (not true)))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@114 $generated@@30))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@115 $generated@@126 $generated@@127 $generated@@128 ($generated@@122 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@115 $generated@@133 $generated@@134 $generated@@135 ($generated@@122 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@115 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@115 $generated@@142 $generated@@143 $generated@@144 ($generated@@122 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@115 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (= ($generated@@5 $generated@@116) 4)) (= ($generated@@5 $generated@@117) 5)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@119 $generated@@151 $generated@@152 ($generated@@123 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@153) $generated@@155) $generated@@153)
 :weight 0
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@160 $generated@@161) (= ($generated@@119 $generated@@156 $generated@@157 ($generated@@123 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@158) $generated@@161) ($generated@@119 $generated@@156 $generated@@157 $generated@@159 $generated@@161)))
 :weight 0
))) (= ($generated@@5 $generated@@120) 6)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (= ($generated@@5 ($generated@@121 $generated@@162 $generated@@163)) 7))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (! (= ($generated@@124 ($generated@@121 $generated@@164 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@121 $generated@@164 $generated@@165))
))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@125 ($generated@@121 $generated@@166 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@121 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Bool) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@10 ($generated@@115 $generated@@116 $generated@@117 $generated@@6 ($generated@@118 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))  (=> (and (or (not (= $generated@@172 $generated@@168)) (not true)) ($generated@@10 ($generated@@68 $generated@@6 ($generated@@119 $generated@@117 $generated@@120 ($generated@@119 $generated@@116 ($generated@@121 $generated@@117 $generated@@120) $generated@@169 $generated@@172) $generated@@170)))) $generated@@171))
 :pattern ( ($generated@@115 $generated@@116 $generated@@117 $generated@@6 ($generated@@118 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (and (= ($generated@@174 ($generated@@36 $generated@@176 $generated@@177)) $generated@@176) (= ($generated@@175 ($generated@@36 $generated@@176 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@36 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@54 $generated@@178 ($generated@@29 $generated@@179)) (and (= ($generated@@69 $generated@@28 ($generated@@68 $generated@@28 $generated@@178)) $generated@@178) ($generated@@27 $generated@@28 ($generated@@68 $generated@@28 $generated@@178) ($generated@@29 $generated@@179))))
 :pattern ( ($generated@@54 $generated@@178 ($generated@@29 $generated@@179)))
)))
(assert (= ($generated@@108 $generated@@22) $generated@@1))
(assert (= ($generated@@180 $generated@@22) $generated@@3))
(assert (= ($generated@@108 $generated@@30) $generated@@2))
(assert (= ($generated@@180 $generated@@30) $generated@@4))
(assert (forall (($generated@@181 T@U) ($generated@@182 Int) ($generated@@183 Int) ) (!  (=> (and (and (<= 0 $generated@@182) (<= $generated@@182 $generated@@183)) (< $generated@@183 ($generated@@33 $generated@@181))) (= ($generated@@58 ($generated@@35 $generated@@181 $generated@@182) (- $generated@@183 $generated@@182)) ($generated@@58 $generated@@181 $generated@@183)))
 :weight 25
 :pattern ( ($generated@@58 $generated@@181 $generated@@183) ($generated@@35 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 Int) ($generated@@186 Int) ) (!  (=> (and (and (<= 0 $generated@@185) (<= 0 $generated@@186)) (<= (+ $generated@@185 $generated@@186) ($generated@@33 $generated@@184))) (= ($generated@@35 ($generated@@35 $generated@@184 $generated@@185) $generated@@186) ($generated@@35 $generated@@184 (+ $generated@@185 $generated@@186))))
 :pattern ( ($generated@@35 ($generated@@35 $generated@@184 $generated@@185) $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Int) ) (!  (and (=> (< $generated@@189 ($generated@@33 $generated@@187)) (= ($generated@@58 ($generated@@41 $generated@@187 $generated@@188) $generated@@189) ($generated@@58 $generated@@187 $generated@@189))) (=> (<= ($generated@@33 $generated@@187) $generated@@189) (= ($generated@@58 ($generated@@41 $generated@@187 $generated@@188) $generated@@189) ($generated@@58 $generated@@188 (- $generated@@189 ($generated@@33 $generated@@187))))))
 :pattern ( ($generated@@58 ($generated@@41 $generated@@187 $generated@@188) $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@27 $generated@@7 $generated@@190 $generated@@22)  (and (<= ($generated@@49 0) ($generated@@12 $generated@@190)) (< ($generated@@12 $generated@@190) 256)))
 :pattern ( ($generated@@27 $generated@@7 $generated@@190 $generated@@22))
)))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@69 $generated@@7 ($generated@@11 ($generated@@49 $generated@@191))) ($generated@@51 $generated@@120 ($generated@@69 $generated@@7 ($generated@@11 $generated@@191))))
 :pattern ( ($generated@@69 $generated@@7 ($generated@@11 ($generated@@49 $generated@@191))))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@69 $generated@@193 ($generated@@51 $generated@@193 $generated@@192)) ($generated@@51 $generated@@120 ($generated@@69 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@69 $generated@@193 ($generated@@51 $generated@@193 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> (= ($generated@@33 $generated@@194) 0) (= $generated@@194 $generated@@34))
 :pattern ( ($generated@@33 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 Int) ) (!  (=> (= $generated@@196 0) (= ($generated@@40 $generated@@195 $generated@@196) $generated@@34))
 :pattern ( ($generated@@40 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@197 ($generated@@29 $generated@@198)) (forall (($generated@@199 Int) ) (!  (=> (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@33 $generated@@197))) ($generated@@54 ($generated@@58 $generated@@197 $generated@@199) $generated@@198))
 :pattern ( ($generated@@58 $generated@@197 $generated@@199))
)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@197 ($generated@@29 $generated@@198)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 (T@U) Bool)
(declare-fun $generated@@209 (T@U) Bool)
(declare-fun $generated@@210 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@211 true))
(let (($generated@@212 true))
(let (($generated@@213  (=> (and (= $generated@@200 ($generated@@118 $generated@@201 $generated@@202 $generated@@0 false)) (= $generated@@203 ($generated@@49 1))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (and (<= ($generated@@49 0) $generated@@203) (< $generated@@203 256))) (=> (and (<= ($generated@@49 0) $generated@@203) (< $generated@@203 256)) (=> (= $generated@@204 ($generated@@49 2)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (and (<= ($generated@@49 0) $generated@@204) (< $generated@@204 256))) (=> (and (<= ($generated@@49 0) $generated@@204) (< $generated@@204 256)) (=> (and (and (= $generated@@205 ($generated@@51 $generated@@28 ($generated@@36 ($generated@@36 $generated@@34 ($generated@@69 $generated@@7 ($generated@@11 ($generated@@49 1)))) ($generated@@69 $generated@@7 ($generated@@11 ($generated@@49 2)))))) ($generated@@21 $generated@@28 $generated@@205 ($generated@@29 $generated@@22) $generated@@202)) (and ($generated@@26 ($generated@@51 $generated@@28 ($generated@@36 ($generated@@36 $generated@@34 ($generated@@69 $generated@@7 ($generated@@11 ($generated@@49 1)))) ($generated@@69 $generated@@7 ($generated@@11 ($generated@@49 2)))))) (= $generated@@206 ($generated@@49 2)))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (and (<= ($generated@@49 0) $generated@@206) (< $generated@@206 256))) (=> (and (<= ($generated@@49 0) $generated@@206) (< $generated@@206 256)) (=> (= $generated@@207 ($generated@@49 1)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= ($generated@@49 0) $generated@@207) (< $generated@@207 256))) (=> (and (<= ($generated@@49 0) $generated@@207) (< $generated@@207 256)) (=> ($generated@@26 ($generated@@51 $generated@@28 ($generated@@36 ($generated@@36 $generated@@34 ($generated@@69 $generated@@7 ($generated@@11 ($generated@@49 1)))) ($generated@@69 $generated@@7 ($generated@@11 ($generated@@49 2)))))) (and (=> (= (ControlFlow 0 3) 1) $generated@@212) (=> (= (ControlFlow 0 3) 2) $generated@@211)))))))))))))))))
(let (($generated@@214  (=> (and (and ($generated@@208 $generated@@202) ($generated@@209 $generated@@202)) (and (= 0 $generated@@210) (= (ControlFlow 0 8) 3))) $generated@@213)))
$generated@@214)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
