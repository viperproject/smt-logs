(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 () T@U)
(declare-fun $generated@@20 (T@T) Int)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (Bool) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (Int) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (Real) T@U)
(declare-fun $generated@@29 (T@U) Real)
(declare-fun $generated@@36 (T@U T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@61 (T@T T@U T@U) Bool)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T T@T) T@T)
(declare-fun $generated@@74 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@109 (T@T T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 (T@U T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@183 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U) Bool)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@230 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@20 $generated@@21) 0) (= ($generated@@20 $generated@@22) 1)) (= ($generated@@20 $generated@@23) 2)) (forall (($generated@@30 Bool) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 Int) ) (! (= ($generated@@27 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))) (forall (($generated@@34 Real) ) (! (= ($generated@@29 ($generated@@28 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@28 $generated@@34))
))) (forall (($generated@@35 T@U) ) (! (= ($generated@@28 ($generated@@29 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@29 $generated@@35))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17 $generated@@18 $generated@@19)
)
(assert (forall (($generated@@38 T@U) ) ($generated@@36 ($generated@@37 $generated@@38) $generated $generated@@38)))
(assert (= ($generated@@39 $generated) $generated@@0))
(assert (forall (($generated@@42 T@U) ) (!  (=> ($generated@@40 $generated@@42) ($generated@@41 $generated@@42))
 :pattern ( ($generated@@40 $generated@@42))
)))
(assert (= ($generated@@20 $generated@@44) 3))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@47 ($generated@@45 $generated@@46) $generated@@48) ($generated@@43 $generated@@44 $generated@@47 ($generated@@37 $generated@@46) $generated@@48))
 :pattern ( ($generated@@43 $generated@@44 $generated@@47 ($generated@@45 $generated@@46) $generated@@48))
 :pattern ( ($generated@@43 $generated@@44 $generated@@47 ($generated@@37 $generated@@46) $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@51 $generated@@49 $generated@@52) ($generated@@43 $generated@@44 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@43 $generated@@44 $generated@@51 $generated@@49 $generated@@52))
 :pattern ( ($generated@@43 $generated@@44 $generated@@51 $generated@@50 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@55 $generated@@53 $generated@@56) ($generated@@43 $generated@@44 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@43 $generated@@44 $generated@@55 $generated@@53 $generated@@56))
 :pattern ( ($generated@@43 $generated@@44 $generated@@55 $generated@@54 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@59 $generated@@57 $generated@@60) ($generated@@43 $generated@@44 $generated@@59 $generated@@58 $generated@@60))
 :pattern ( ($generated@@43 $generated@@44 $generated@@59 $generated@@57 $generated@@60))
 :pattern ( ($generated@@43 $generated@@44 $generated@@59 $generated@@58 $generated@@60))
)))
(assert (= ($generated@@20 $generated@@62) 4))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@61 $generated@@62 $generated@@64 $generated@@63) ($generated@@41 $generated@@64))
 :pattern ( ($generated@@41 $generated@@64) ($generated@@61 $generated@@62 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@61 $generated@@44 $generated@@67 ($generated@@37 $generated@@66)) ($generated@@61 $generated@@44 $generated@@67 ($generated@@65 $generated $generated@@66)))
 :pattern ( ($generated@@61 $generated@@44 $generated@@67 ($generated@@37 $generated@@66)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@70 $generated@@77 $generated@@78 ($generated@@74 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@79) $generated@@81) $generated@@79)
 :weight 0
)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (= $generated@@86 $generated@@87) (= ($generated@@70 $generated@@82 $generated@@83 ($generated@@74 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@84) $generated@@87) ($generated@@70 $generated@@82 $generated@@83 $generated@@85 $generated@@87)))
 :weight 0
))) (= ($generated@@20 $generated@@71) 5)) (= ($generated@@20 $generated@@72) 6)) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@20 ($generated@@73 $generated@@88 $generated@@89)) 7))) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@75 ($generated@@73 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@73 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@76 ($generated@@73 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@73 $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@95 ($generated@@37 $generated@@94) $generated@@96)  (or (= $generated@@95 $generated@@68) ($generated@@25 ($generated@@69 $generated@@21 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@96 $generated@@95) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@95 ($generated@@37 $generated@@94) $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@97 $generated@@50 $generated@@98)  (or (= $generated@@97 $generated@@68) ($generated@@25 ($generated@@69 $generated@@21 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@98 $generated@@97) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@97 $generated@@50 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@99 $generated@@54 $generated@@100)  (or (= $generated@@99 $generated@@68) ($generated@@25 ($generated@@69 $generated@@21 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@100 $generated@@99) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@99 $generated@@54 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@101 $generated@@58 $generated@@102)  (or (= $generated@@101 $generated@@68) ($generated@@25 ($generated@@69 $generated@@21 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@102 $generated@@101) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@101 $generated@@58 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> ($generated@@103 $generated@@104 $generated@@105) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@25 ($generated@@69 $generated@@21 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@104 $generated@@106) $generated@@1))) ($generated@@25 ($generated@@69 $generated@@21 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@105 $generated@@106) $generated@@1))))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@105 $generated@@106) $generated@@1))
)))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@41 $generated@@108) (= ($generated@@107 $generated@@108) $generated@@9))
 :pattern ( ($generated@@41 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@109 $generated@@111 ($generated@@69 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@69 $generated@@111 $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@41 $generated@@113) (exists (($generated@@114 T@U) ) (= $generated@@113 ($generated@@112 $generated@@114))))
 :pattern ( ($generated@@41 $generated@@113))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@118 ($generated@@115 $generated@@116 $generated@@117))  (and ($generated@@61 $generated@@44 $generated@@118 ($generated@@65 $generated@@116 $generated@@117)) (or (not (= $generated@@118 $generated@@68)) (not true))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@118 ($generated@@115 $generated@@116 $generated@@117)))
 :pattern ( ($generated@@61 $generated@@44 $generated@@118 ($generated@@65 $generated@@116 $generated@@117)))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@120 ($generated@@45 $generated@@119))  (and ($generated@@61 $generated@@44 $generated@@120 ($generated@@37 $generated@@119)) (or (not (= $generated@@120 $generated@@68)) (not true))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@120 ($generated@@45 $generated@@119)))
 :pattern ( ($generated@@61 $generated@@44 $generated@@120 ($generated@@37 $generated@@119)))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (!  (=> ($generated@@103 $generated@@121 $generated@@122) (=> ($generated@@43 $generated@@125 $generated@@123 $generated@@124 $generated@@121) ($generated@@43 $generated@@125 $generated@@123 $generated@@124 $generated@@122)))
 :pattern ( ($generated@@103 $generated@@121 $generated@@122) ($generated@@43 $generated@@125 $generated@@123 $generated@@124 $generated@@121))
)))
(assert (forall (($generated@@127 T@U) ) (!  (and (= ($generated@@39 ($generated@@45 $generated@@127)) $generated@@3) (= ($generated@@126 ($generated@@45 $generated@@127)) $generated@@15))
 :pattern ( ($generated@@45 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (!  (and (= ($generated@@39 ($generated@@37 $generated@@128)) $generated@@6) (= ($generated@@126 ($generated@@37 $generated@@128)) $generated@@15))
 :pattern ( ($generated@@37 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@131 ($generated@@115 $generated@@129 $generated@@130) $generated@@132) ($generated@@43 $generated@@44 $generated@@131 ($generated@@65 $generated@@129 $generated@@130) $generated@@132))
 :pattern ( ($generated@@43 $generated@@44 $generated@@131 ($generated@@115 $generated@@129 $generated@@130) $generated@@132))
 :pattern ( ($generated@@43 $generated@@44 $generated@@131 ($generated@@65 $generated@@129 $generated@@130) $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@135 ($generated@@37 $generated@@134))  (or (= $generated@@135 $generated@@68) (= ($generated@@133 $generated@@135) ($generated@@37 $generated@@134))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@135 ($generated@@37 $generated@@134)))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@43 $generated@@44 $generated@@137 ($generated@@37 $generated@@136) $generated@@138) ($generated@@43 $generated@@44 $generated@@137 ($generated@@65 $generated $generated@@136) $generated@@138))
 :pattern ( ($generated@@43 $generated@@44 $generated@@137 ($generated@@37 $generated@@136) $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@139 $generated@@49)  (and ($generated@@61 $generated@@44 $generated@@139 $generated@@50) (or (not (= $generated@@139 $generated@@68)) (not true))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@139 $generated@@49))
 :pattern ( ($generated@@61 $generated@@44 $generated@@139 $generated@@50))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@140 $generated@@53)  (and ($generated@@61 $generated@@44 $generated@@140 $generated@@54) (or (not (= $generated@@140 $generated@@68)) (not true))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@140 $generated@@53))
 :pattern ( ($generated@@61 $generated@@44 $generated@@140 $generated@@54))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@141 $generated@@57)  (and ($generated@@61 $generated@@44 $generated@@141 $generated@@58) (or (not (= $generated@@141 $generated@@68)) (not true))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@141 $generated@@57))
 :pattern ( ($generated@@61 $generated@@44 $generated@@141 $generated@@58))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@43 $generated@@44 $generated@@142 $generated@@58 $generated@@143) ($generated@@43 $generated@@44 $generated@@142 $generated@@50 $generated@@143))
 :pattern ( ($generated@@43 $generated@@44 $generated@@142 $generated@@58 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> ($generated@@43 $generated@@44 $generated@@144 $generated@@58 $generated@@145) ($generated@@43 $generated@@44 $generated@@144 $generated@@54 $generated@@145))
 :pattern ( ($generated@@43 $generated@@44 $generated@@144 $generated@@58 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@148 ($generated@@65 $generated@@146 $generated@@147) $generated@@149)  (or (= $generated@@148 $generated@@68) ($generated@@25 ($generated@@69 $generated@@21 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@149 $generated@@148) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@148 ($generated@@65 $generated@@146 $generated@@147) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@150 $generated@@152) (= ($generated@@43 $generated@@62 ($generated@@112 $generated@@151) $generated@@63 $generated@@152) ($generated@@43 $generated@@44 $generated@@151 ($generated@@45 $generated) $generated@@152)))
 :pattern ( ($generated@@43 $generated@@62 ($generated@@112 $generated@@151) $generated@@63 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (or (not (= $generated@@153 $generated@@155)) (not true)) (=> (and ($generated@@103 $generated@@153 $generated@@154) ($generated@@103 $generated@@154 $generated@@155)) ($generated@@103 $generated@@153 $generated@@155)))
 :pattern ( ($generated@@103 $generated@@153 $generated@@154) ($generated@@103 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@156 ($generated@@115 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@115 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@159 ($generated@@115 $generated@@160 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@115 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@162 ($generated@@65 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@65 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@165 ($generated@@65 $generated@@166 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@65 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@170 ($generated@@65 $generated@@168 $generated@@169))  (or (= $generated@@170 $generated@@68) ($generated@@36 ($generated@@133 $generated@@170) $generated@@168 $generated@@169)))
 :pattern ( ($generated@@61 $generated@@44 $generated@@170 ($generated@@65 $generated@@168 $generated@@169)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@171 ($generated@@45 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@45 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@173 ($generated@@37 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@37 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@107 ($generated@@112 $generated@@175)) $generated@@9)
 :pattern ( ($generated@@112 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@176 ($generated@@112 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@112 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@T) ) (! (= ($generated@@69 $generated@@179 ($generated@@109 $generated@@179 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@109 $generated@@179 $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@61 $generated@@44 $generated@@182 ($generated@@65 $generated@@180 $generated@@181)) ($generated@@61 $generated@@44 $generated@@182 $generated@@58))
 :pattern ( ($generated@@61 $generated@@44 $generated@@182 ($generated@@65 $generated@@180 $generated@@181)))
)))
(assert  (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@183 $generated@@186 $generated@@187 $generated@@188 ($generated@@185 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@191 $generated@@192) $generated@@189)
 :weight 0
)) (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@183 $generated@@193 $generated@@194 $generated@@195 ($generated@@185 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@183 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@183 $generated@@202 $generated@@203 $generated@@204 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@183 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@25 ($generated@@183 $generated@@44 $generated@@71 $generated@@21 ($generated@@184 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (or (not (= $generated@@215 $generated@@211)) (not true)) ($generated@@25 ($generated@@69 $generated@@21 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@212 $generated@@215) $generated@@213)))) $generated@@214))
 :pattern ( ($generated@@183 $generated@@44 $generated@@71 $generated@@21 ($generated@@184 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (and (= ($generated@@39 ($generated@@115 $generated@@217 $generated@@218)) $generated@@2) (= ($generated@@126 ($generated@@115 $generated@@217 $generated@@218)) $generated@@14))
 :pattern ( ($generated@@115 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (and (= ($generated@@39 ($generated@@65 $generated@@219 $generated@@220)) $generated@@13) (= ($generated@@126 ($generated@@65 $generated@@219 $generated@@220)) $generated@@14))
 :pattern ( ($generated@@65 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> ($generated@@61 $generated@@44 $generated@@221 $generated@@58) ($generated@@61 $generated@@44 $generated@@221 $generated@@50))
 :pattern ( ($generated@@61 $generated@@44 $generated@@221 $generated@@58))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> ($generated@@61 $generated@@44 $generated@@222 $generated@@58) ($generated@@61 $generated@@44 $generated@@222 $generated@@54))
 :pattern ( ($generated@@61 $generated@@44 $generated@@222 $generated@@58))
)))
(assert (= ($generated@@39 $generated@@63) $generated@@4))
(assert (= ($generated@@126 $generated@@63) $generated@@16))
(assert (= ($generated@@39 $generated@@57) $generated@@5))
(assert (= ($generated@@126 $generated@@57) $generated@@17))
(assert (= ($generated@@39 $generated@@49) $generated@@7))
(assert (= ($generated@@126 $generated@@49) $generated@@18))
(assert (= ($generated@@39 $generated@@53) $generated@@8))
(assert (= ($generated@@126 $generated@@53) $generated@@19))
(assert (= ($generated@@39 $generated@@50) $generated@@10))
(assert (= ($generated@@126 $generated@@50) $generated@@18))
(assert (= ($generated@@39 $generated@@54) $generated@@11))
(assert (= ($generated@@126 $generated@@54) $generated@@19))
(assert (= ($generated@@39 $generated@@58) $generated@@12))
(assert (= ($generated@@126 $generated@@58) $generated@@17))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@61 $generated@@62 ($generated@@112 $generated@@223) $generated@@63) ($generated@@61 $generated@@44 $generated@@223 ($generated@@45 $generated)))
 :pattern ( ($generated@@61 $generated@@62 ($generated@@112 $generated@@223) $generated@@63))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and ($generated@@150 $generated@@225) (and ($generated@@41 $generated@@224) ($generated@@43 $generated@@62 $generated@@224 $generated@@63 $generated@@225))) ($generated@@43 $generated@@44 ($generated@@176 $generated@@224) ($generated@@45 $generated) $generated@@225))
 :pattern ( ($generated@@43 $generated@@44 ($generated@@176 $generated@@224) ($generated@@45 $generated) $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@227 $generated@@50)  (or (= $generated@@227 $generated@@68) ($generated@@226 ($generated@@133 $generated@@227))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@227 $generated@@50))
)))
(assert (forall (($generated@@229 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@229 $generated@@54)  (or (= $generated@@229 $generated@@68) ($generated@@228 ($generated@@133 $generated@@229))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@229 $generated@@54))
)))
(assert (forall (($generated@@231 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@231 $generated@@58)  (or (= $generated@@231 $generated@@68) ($generated@@230 ($generated@@133 $generated@@231))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@231 $generated@@58))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> ($generated@@43 $generated@@44 $generated@@234 ($generated@@65 $generated@@232 $generated@@233) $generated@@235) ($generated@@43 $generated@@44 $generated@@234 $generated@@58 $generated@@235))
 :pattern ( ($generated@@43 $generated@@44 $generated@@234 ($generated@@65 $generated@@232 $generated@@233) $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! ($generated@@43 $generated@@22 $generated@@237 $generated $generated@@236)
 :pattern ( ($generated@@43 $generated@@22 $generated@@237 $generated $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! ($generated@@61 $generated@@22 $generated@@238 $generated)
 :pattern ( ($generated@@61 $generated@@22 $generated@@238 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () Bool)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () Bool)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () Bool)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@253  (=> (and (and (= $generated@@239 ($generated@@184 $generated@@68 $generated@@240 $generated@@1 false)) ($generated@@41 $generated@@241)) (and ($generated@@41 $generated@@241) (= $generated@@242 ($generated@@176 $generated@@241)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (and (and ($generated@@150 $generated@@243) ($generated@@244 $generated@@243)) (forall (($generated@@254 T@U) ) (!  (=> (and (or (not (= $generated@@254 $generated@@68)) (not true)) ($generated@@25 ($generated@@69 $generated@@21 ($generated@@70 $generated@@71 $generated@@72 ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@240 $generated@@254) $generated@@1)))) (= ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@243 $generated@@254) ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@240 $generated@@254)))
 :pattern ( ($generated@@70 $generated@@44 ($generated@@73 $generated@@71 $generated@@72) $generated@@243 $generated@@254))
))) (and ($generated@@103 $generated@@240 $generated@@243) (= (ControlFlow 0 2) (- 0 1)))) true)))))
(let (($generated@@255  (=> (and (and (and (and ($generated@@150 $generated@@240) ($generated@@244 $generated@@240)) (and ($generated@@61 $generated@@44 $generated@@245 ($generated@@45 $generated)) ($generated@@43 $generated@@44 $generated@@245 ($generated@@45 $generated) $generated@@240))) (and (and ($generated@@61 $generated@@62 $generated@@241 $generated@@63) ($generated@@43 $generated@@62 $generated@@241 $generated@@63 $generated@@240)) ($generated@@40 $generated@@241))) (and (and (and (=> $generated@@246 (and ($generated@@61 $generated@@44 $generated@@247 ($generated@@115 $generated $generated)) ($generated@@43 $generated@@44 $generated@@247 ($generated@@115 $generated $generated) $generated@@240))) true) (and (=> $generated@@248 (and ($generated@@61 $generated@@44 $generated@@249 $generated@@57) ($generated@@43 $generated@@44 $generated@@249 $generated@@57 $generated@@240))) true)) (and (and (=> $generated@@250 (and ($generated@@61 $generated@@44 $generated@@251 ($generated@@45 $generated)) ($generated@@43 $generated@@44 $generated@@251 ($generated@@45 $generated) $generated@@240))) true) (and (= 2 $generated@@252) (= (ControlFlow 0 4) 2))))) $generated@@253)))
$generated@@255)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
