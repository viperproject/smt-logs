(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@54 (T@U) Int)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@93 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@T T@U T@U) Bool)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@107 (T@U T@U T@U) Bool)
(declare-fun $generated@@108 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@156 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@21 ($generated@@20 $generated@@22 $generated@@23) $generated@@23)
 :pattern ( ($generated@@20 $generated@@22 $generated@@23))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@21 $generated@@24 $generated@@26) ($generated@@21 ($generated@@20 $generated@@24 $generated@@25) $generated@@26))
 :pattern ( ($generated@@20 $generated@@24 $generated@@25) ($generated@@21 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@21 $generated@@28 $generated@@30) ($generated@@21 ($generated@@27 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@21 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@21 $generated@@32 $generated@@33) ($generated@@21 ($generated@@27 $generated@@31 $generated@@32) $generated@@33))
 :pattern ( ($generated@@27 $generated@@31 $generated@@32) ($generated@@21 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@21 ($generated@@20 $generated@@34 $generated@@35) $generated@@36)  (or (= $generated@@36 $generated@@35) ($generated@@21 $generated@@34 $generated@@36)))
 :pattern ( ($generated@@21 ($generated@@20 $generated@@34 $generated@@35) $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@21 $generated@@39 $generated@@40) (not ($generated@@21 ($generated@@37 $generated@@38 $generated@@39) $generated@@40)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39) ($generated@@21 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ) (!  (not ($generated@@21 $generated@@41 $generated@@42))
 :pattern ( ($generated@@21 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@21 ($generated@@43 $generated@@44 $generated@@45) $generated@@46)  (and ($generated@@21 $generated@@44 $generated@@46) ($generated@@21 $generated@@45 $generated@@46)))
 :pattern ( ($generated@@21 ($generated@@43 $generated@@44 $generated@@45) $generated@@46))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@27 ($generated@@27 $generated@@47 $generated@@48) $generated@@48) ($generated@@27 $generated@@47 $generated@@48))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@47 $generated@@48) $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@43 ($generated@@43 $generated@@49 $generated@@50) $generated@@50) ($generated@@43 $generated@@49 $generated@@50))
 :pattern ( ($generated@@43 ($generated@@43 $generated@@49 $generated@@50) $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@21 ($generated@@37 $generated@@51 $generated@@52) $generated@@53)  (and ($generated@@21 $generated@@51 $generated@@53) (not ($generated@@21 $generated@@52 $generated@@53))))
 :pattern ( ($generated@@21 ($generated@@37 $generated@@51 $generated@@52) $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (!  (and (= (= ($generated@@54 $generated@@55) 0) (= $generated@@55 $generated@@41)) (=> (or (not (= ($generated@@54 $generated@@55) 0)) (not true)) (exists (($generated@@56 T@U) ) (! ($generated@@21 $generated@@55 $generated@@56)
 :pattern ( ($generated@@21 $generated@@55 $generated@@56))
))))
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= (+ ($generated@@54 ($generated@@27 $generated@@57 $generated@@58)) ($generated@@54 ($generated@@43 $generated@@57 $generated@@58))) (+ ($generated@@54 $generated@@57) ($generated@@54 $generated@@58)))
 :pattern ( ($generated@@54 ($generated@@27 $generated@@57 $generated@@58)))
 :pattern ( ($generated@@54 ($generated@@43 $generated@@57 $generated@@58)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@60 $generated@@69 $generated@@70 ($generated@@66 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@73) $generated@@71)
 :weight 0
)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (or (= $generated@@78 $generated@@79) (= ($generated@@60 $generated@@74 $generated@@75 ($generated@@66 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@79) ($generated@@60 $generated@@74 $generated@@75 $generated@@77 $generated@@79)))
 :weight 0
))) (= ($generated@@3 $generated@@61) 3)) (= ($generated@@3 $generated@@62) 4)) (= ($generated@@3 $generated@@63) 5)) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@3 ($generated@@64 $generated@@80 $generated@@81)) 6))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@64 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@68 ($generated@@64 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@64 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@59 $generated@@86 $generated@@87) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@8 ($generated@@65 $generated@@4 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@86 $generated@@88) $generated@@2))) ($generated@@8 ($generated@@65 $generated@@4 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@87 $generated@@88) $generated@@2))))
 :pattern ( ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@87 $generated@@88) $generated@@2))
)))
 :pattern ( ($generated@@59 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@89 $generated@@90 $generated@@91) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@21 $generated@@90 $generated@@92) ($generated@@21 $generated@@91 $generated@@92))
 :pattern ( ($generated@@21 $generated@@90 $generated@@92))
 :pattern ( ($generated@@21 $generated@@91 $generated@@92))
)))
 :pattern ( ($generated@@89 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@93 $generated@@95 ($generated@@65 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@65 $generated@@95 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@96 $generated@@97 $generated@@98) (forall (($generated@@99 T@U) ) (!  (or (not ($generated@@21 $generated@@97 $generated@@99)) (not ($generated@@21 $generated@@98 $generated@@99)))
 :pattern ( ($generated@@21 $generated@@97 $generated@@99))
 :pattern ( ($generated@@21 $generated@@98 $generated@@99))
)))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98))
)))
(assert (= ($generated@@3 $generated@@101) 7))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@100 $generated@@101 $generated@@104 ($generated@@102 $generated@@105)) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@21 $generated@@104 $generated@@106) ($generated@@103 $generated@@106 $generated@@105))
 :pattern ( ($generated@@21 $generated@@104 $generated@@106))
)))
 :pattern ( ($generated@@100 $generated@@101 $generated@@104 ($generated@@102 $generated@@105)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@107 ($generated@@93 $generated@@112 $generated@@109) $generated@@110 $generated@@111) ($generated@@108 $generated@@112 $generated@@109 $generated@@110 $generated@@111))
 :pattern ( ($generated@@107 ($generated@@93 $generated@@112 $generated@@109) $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@59 $generated@@113 $generated@@114) (=> ($generated@@107 $generated@@115 $generated@@116 $generated@@113) ($generated@@107 $generated@@115 $generated@@116 $generated@@114)))
 :pattern ( ($generated@@59 $generated@@113 $generated@@114) ($generated@@107 $generated@@115 $generated@@116 $generated@@113))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (!  (=> ($generated@@59 $generated@@117 $generated@@118) (=> ($generated@@108 $generated@@121 $generated@@119 $generated@@120 $generated@@117) ($generated@@108 $generated@@121 $generated@@119 $generated@@120 $generated@@118)))
 :pattern ( ($generated@@59 $generated@@117 $generated@@118) ($generated@@108 $generated@@121 $generated@@119 $generated@@120 $generated@@117))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@21 ($generated@@27 $generated@@122 $generated@@123) $generated@@124)  (or ($generated@@21 $generated@@122 $generated@@124) ($generated@@21 $generated@@123 $generated@@124)))
 :pattern ( ($generated@@21 ($generated@@27 $generated@@122 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@96 $generated@@125 $generated@@126) (and (= ($generated@@37 ($generated@@27 $generated@@125 $generated@@126) $generated@@125) $generated@@126) (= ($generated@@37 ($generated@@27 $generated@@125 $generated@@126) $generated@@126) $generated@@125)))
 :pattern ( ($generated@@27 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@127 $generated@@128 $generated@@129) (= $generated@@128 $generated@@129))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or (not (= $generated@@130 $generated@@132)) (not true)) (=> (and ($generated@@59 $generated@@130 $generated@@131) ($generated@@59 $generated@@131 $generated@@132)) ($generated@@59 $generated@@130 $generated@@132)))
 :pattern ( ($generated@@59 $generated@@130 $generated@@131) ($generated@@59 $generated@@131 $generated@@132))
)))
(assert (= ($generated@@3 $generated@@133) 8))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@103 $generated@@134 $generated) (and (= ($generated@@93 $generated@@133 ($generated@@65 $generated@@133 $generated@@134)) $generated@@134) ($generated@@100 $generated@@133 ($generated@@65 $generated@@133 $generated@@134) $generated)))
 :pattern ( ($generated@@103 $generated@@134 $generated))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (and (= (+ (+ ($generated@@54 ($generated@@37 $generated@@135 $generated@@136)) ($generated@@54 ($generated@@37 $generated@@136 $generated@@135))) ($generated@@54 ($generated@@43 $generated@@135 $generated@@136))) ($generated@@54 ($generated@@27 $generated@@135 $generated@@136))) (= ($generated@@54 ($generated@@37 $generated@@135 $generated@@136)) (- ($generated@@54 $generated@@135) ($generated@@54 ($generated@@43 $generated@@135 $generated@@136)))))
 :pattern ( ($generated@@54 ($generated@@37 $generated@@135 $generated@@136)))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@103 ($generated@@93 $generated@@139 $generated@@137) $generated@@138) ($generated@@100 $generated@@139 $generated@@137 $generated@@138))
 :pattern ( ($generated@@103 ($generated@@93 $generated@@139 $generated@@137) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (<= 0 ($generated@@54 $generated@@140))
 :pattern ( ($generated@@54 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@108 $generated@@101 $generated@@141 ($generated@@102 $generated@@142) $generated@@143) (forall (($generated@@144 T@U) ) (!  (=> ($generated@@21 $generated@@141 $generated@@144) ($generated@@107 $generated@@144 $generated@@142 $generated@@143))
 :pattern ( ($generated@@21 $generated@@141 $generated@@144))
)))
 :pattern ( ($generated@@108 $generated@@101 $generated@@141 ($generated@@102 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@102 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@102 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@19 ($generated@@102 $generated@@147)) $generated@@1)
 :pattern ( ($generated@@102 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@65 $generated@@149 ($generated@@93 $generated@@149 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@93 $generated@@149 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@27 $generated@@150 ($generated@@27 $generated@@150 $generated@@151)) ($generated@@27 $generated@@150 $generated@@151))
 :pattern ( ($generated@@27 $generated@@150 ($generated@@27 $generated@@150 $generated@@151)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@43 $generated@@152 ($generated@@43 $generated@@152 $generated@@153)) ($generated@@43 $generated@@152 $generated@@153))
 :pattern ( ($generated@@43 $generated@@152 ($generated@@43 $generated@@152 $generated@@153)))
)))
(assert  (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@154 $generated@@157 $generated@@158 $generated@@159 ($generated@@156 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@162 $generated@@163) $generated@@160)
 :weight 0
)) (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@154 $generated@@164 $generated@@165 $generated@@166 ($generated@@156 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@171 $generated@@172) ($generated@@154 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@171 $generated@@172)))
 :weight 0
)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@154 $generated@@173 $generated@@174 $generated@@175 ($generated@@156 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@154 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@8 ($generated@@154 $generated@@63 $generated@@61 $generated@@4 ($generated@@155 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))  (=> (and (or (not (= $generated@@186 $generated@@182)) (not true)) ($generated@@8 ($generated@@65 $generated@@4 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@183 $generated@@186) $generated@@184)))) $generated@@185))
 :pattern ( ($generated@@154 $generated@@63 $generated@@61 $generated@@4 ($generated@@155 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@103 $generated@@188 ($generated@@102 $generated@@189)) (and (= ($generated@@93 $generated@@101 ($generated@@65 $generated@@101 $generated@@188)) $generated@@188) ($generated@@100 $generated@@101 ($generated@@65 $generated@@101 $generated@@188) ($generated@@102 $generated@@189))))
 :pattern ( ($generated@@103 $generated@@188 ($generated@@102 $generated@@189)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@21 $generated@@190 $generated@@191) (= ($generated@@54 ($generated@@20 $generated@@190 $generated@@191)) ($generated@@54 $generated@@190)))
 :pattern ( ($generated@@54 ($generated@@20 $generated@@190 $generated@@191)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@127 $generated@@192 $generated@@193) (forall (($generated@@194 T@U) ) (! (= ($generated@@21 $generated@@192 $generated@@194) ($generated@@21 $generated@@193 $generated@@194))
 :pattern ( ($generated@@21 $generated@@192 $generated@@194))
 :pattern ( ($generated@@21 $generated@@193 $generated@@194))
)))
 :pattern ( ($generated@@127 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! ($generated@@108 $generated@@133 $generated@@196 $generated $generated@@195)
 :pattern ( ($generated@@108 $generated@@133 $generated@@196 $generated $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (not ($generated@@21 $generated@@197 $generated@@198)) (= ($generated@@54 ($generated@@20 $generated@@197 $generated@@198)) (+ ($generated@@54 $generated@@197) 1)))
 :pattern ( ($generated@@54 ($generated@@20 $generated@@197 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ) (! ($generated@@100 $generated@@133 $generated@@199 $generated)
 :pattern ( ($generated@@100 $generated@@133 $generated@@199 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 (T@U) Bool)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 (T@U) Bool)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@224  (=> (= (ControlFlow 0 13) (- 0 12)) (=> false ($generated@@21 $generated@@200 ($generated@@93 $generated@@133 $generated@@201))))))
(let (($generated@@225  (=> ($generated@@127 $generated@@202 $generated@@41) (=> (and (= $generated@@201 $generated@@203) (= (ControlFlow 0 14) 13)) $generated@@224))))
(let (($generated@@226  (=> (= (ControlFlow 0 4) (- 0 3)) (and ($generated@@89 $generated@@204 $generated@@202) (not ($generated@@89 $generated@@202 $generated@@204))))))
(let (($generated@@227  (=> (and (not $generated@@205) (= (ControlFlow 0 6) 4)) $generated@@226)))
(let (($generated@@228  (=> (and $generated@@205 (= (ControlFlow 0 5) 4)) $generated@@226)))
(let (($generated@@229  (and (=> (= (ControlFlow 0 7) (- 0 8)) (exists (($generated@@230 T@U) )  (and ($generated@@100 $generated@@133 $generated@@230 $generated) ($generated@@21 $generated@@202 ($generated@@93 $generated@@133 $generated@@230))))) (=> (exists (($generated@@231 T@U) )  (and ($generated@@100 $generated@@133 $generated@@231 $generated) ($generated@@21 $generated@@202 ($generated@@93 $generated@@133 $generated@@231)))) (=> ($generated@@100 $generated@@133 $generated@@206 $generated) (=> (and ($generated@@21 $generated@@202 ($generated@@93 $generated@@133 $generated@@206)) (= $generated@@204 ($generated@@37 $generated@@202 ($generated@@20 $generated@@41 ($generated@@93 $generated@@133 $generated@@206))))) (=> (and (and ($generated@@207 $generated@@208) ($generated@@209 $generated@@208)) (and (forall (($generated@@232 T@U) ) (!  (=> (and (or (not (= $generated@@232 $generated@@210)) (not true)) ($generated@@8 ($generated@@65 $generated@@4 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@211 $generated@@232) $generated@@2)))) (= ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@208 $generated@@232) ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@211 $generated@@232)))
 :pattern ( ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@208 $generated@@232))
)) ($generated@@59 $generated@@211 $generated@@208))) (and (=> (= (ControlFlow 0 7) 5) $generated@@228) (=> (= (ControlFlow 0 7) 6) $generated@@227)))))))))
(let (($generated@@233  (=> (and (not ($generated@@100 $generated@@133 $generated@@212 $generated)) (= (ControlFlow 0 10) 7)) $generated@@229)))
(let (($generated@@234  (=> (and ($generated@@100 $generated@@133 $generated@@212 $generated) (= (ControlFlow 0 9) 7)) $generated@@229)))
(let (($generated@@235  (=> (not ($generated@@127 $generated@@202 $generated@@41)) (and (=> (= (ControlFlow 0 11) 9) $generated@@234) (=> (= (ControlFlow 0 11) 10) $generated@@233)))))
(let (($generated@@236  (=> $generated@@213 (and (=> (= (ControlFlow 0 15) 14) $generated@@225) (=> (= (ControlFlow 0 15) 11) $generated@@235)))))
(let (($generated@@237 true))
(let (($generated@@238  (and (=> (= (ControlFlow 0 16) 2) $generated@@237) (=> (= (ControlFlow 0 16) 15) $generated@@236))))
(let (($generated@@239 true))
(let (($generated@@240  (=> (and (and ($generated@@100 $generated@@133 $generated@@203 $generated) ($generated@@100 $generated@@133 $generated@@214 $generated)) (and ($generated@@100 $generated@@101 $generated@@202 ($generated@@102 $generated)) ($generated@@108 $generated@@101 $generated@@202 ($generated@@102 $generated) $generated@@211))) (=> (and (and (and (and ($generated@@207 $generated@@211) ($generated@@209 $generated@@211)) (not false)) (and (=> $generated@@213 ($generated@@89 $generated@@202 $generated@@200)) (=> $generated@@213 ($generated@@21 $generated@@200 ($generated@@93 $generated@@133 $generated@@203))))) (and (and (forall (($generated@@241 T@U) ) (!  (=> (and (or (not (= $generated@@241 $generated@@210)) (not true)) ($generated@@8 ($generated@@65 $generated@@4 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@215 $generated@@241) $generated@@2)))) (= ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@211 $generated@@241) ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@215 $generated@@241)))
 :pattern ( ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@211 $generated@@241))
)) ($generated@@59 $generated@@215 $generated@@211)) (and (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (or (not (= $generated@@242 $generated@@210)) (not true)) ($generated@@8 ($generated@@65 $generated@@4 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@215 $generated@@242) $generated@@2)))) (or (= ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@211 $generated@@242) $generated@@243) ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@215 $generated@@242) $generated@@243)) ($generated@@8 ($generated@@154 $generated@@63 $generated@@61 $generated@@4 $generated@@216 $generated@@242 $generated@@243))))
 :pattern ( ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@63 ($generated@@64 $generated@@61 $generated@@62) $generated@@211 $generated@@242) $generated@@243))
)) ($generated@@89 $generated@@202 $generated@@217)))) (and (=> (= (ControlFlow 0 17) 1) $generated@@239) (=> (= (ControlFlow 0 17) 16) $generated@@238))))))
(let (($generated@@244  (and (=> (= (ControlFlow 0 18) (- 0 19)) (exists (($generated@@245 T@U) )  (and ($generated@@100 $generated@@133 $generated@@245 $generated) ($generated@@21 $generated@@200 ($generated@@93 $generated@@133 $generated@@245))))) (=> (exists (($generated@@246 T@U) )  (and ($generated@@100 $generated@@133 $generated@@246 $generated) ($generated@@21 $generated@@200 ($generated@@93 $generated@@133 $generated@@246)))) (=> (and (and ($generated@@100 $generated@@133 $generated@@218 $generated) ($generated@@21 $generated@@200 ($generated@@93 $generated@@133 $generated@@218))) (and (= $generated@@217 ($generated@@37 $generated@@200 ($generated@@20 $generated@@41 ($generated@@93 $generated@@133 $generated@@218)))) (= (ControlFlow 0 18) 17))) $generated@@240)))))
(let (($generated@@247  (=> (and (not ($generated@@100 $generated@@133 $generated@@219 $generated)) (= (ControlFlow 0 21) 18)) $generated@@244)))
(let (($generated@@248  (=> (and ($generated@@100 $generated@@133 $generated@@219 $generated) (= (ControlFlow 0 20) 18)) $generated@@244)))
(let (($generated@@249  (=> (= $generated@@216 ($generated@@155 $generated@@210 $generated@@215 $generated@@2 false)) (and (=> (= (ControlFlow 0 22) 20) $generated@@248) (=> (= (ControlFlow 0 22) 21) $generated@@247)))))
(let (($generated@@250  (=> (and ($generated@@207 $generated@@215) ($generated@@209 $generated@@215)) (=> (and (and (and (and ($generated@@100 $generated@@101 $generated@@200 ($generated@@102 $generated)) ($generated@@108 $generated@@101 $generated@@200 ($generated@@102 $generated) $generated@@215)) ($generated@@100 $generated@@133 $generated@@220 $generated)) (and (and ($generated@@100 $generated@@101 $generated@@221 ($generated@@102 $generated)) ($generated@@108 $generated@@101 $generated@@221 ($generated@@102 $generated) $generated@@215)) true)) (and (and (and ($generated@@100 $generated@@133 $generated@@222 $generated) true) (= 0 $generated@@223)) (and (> ($generated@@54 $generated@@200) 0) (= (ControlFlow 0 23) 22)))) $generated@@249))))
$generated@@250))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
