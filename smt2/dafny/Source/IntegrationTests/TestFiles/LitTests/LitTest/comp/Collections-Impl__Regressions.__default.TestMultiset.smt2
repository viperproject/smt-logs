(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@23 (T@U T@U) Int)
(declare-fun $generated@@24 (T@U T@U Int) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@51 (T@U T@U T@U) Bool)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@82 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@86 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@143 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22)
 :pattern ( ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 Int) ($generated@@28 T@U) ) (!  (=> (<= 0 $generated@@27) (and (=> (= $generated@@26 $generated@@28) (= ($generated@@23 ($generated@@24 $generated@@25 $generated@@26 $generated@@27) $generated@@28) $generated@@27)) (=> (or (not (= $generated@@26 $generated@@28)) (not true)) (= ($generated@@23 ($generated@@24 $generated@@25 $generated@@26 $generated@@27) $generated@@28) ($generated@@23 $generated@@25 $generated@@28)))))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@25 $generated@@26 $generated@@27) $generated@@28))
)))
(assert (= ($generated@@3 $generated@@30) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@34)) ($generated@@32 $generated@@33))
 :pattern ( ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@34)))
)))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 ($generated@@40 $generated@@43 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@40 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (or (not (= $generated@@46 $generated@@47)) (not true)) (= ($generated@@23 $generated@@45 $generated@@47) ($generated@@23 ($generated@@44 $generated@@45 $generated@@46) $generated@@47)))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46) ($generated@@23 $generated@@45 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@48 ($generated@@44 $generated@@49 $generated@@50)) (+ ($generated@@48 $generated@@49) 1))
 :pattern ( ($generated@@48 ($generated@@44 $generated@@49 $generated@@50)))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@51 ($generated@@41 $generated@@55 $generated@@52) $generated@@53 $generated@@54) ($generated@@19 $generated@@55 $generated@@52 $generated@@53 $generated@@54))
 :pattern ( ($generated@@51 ($generated@@41 $generated@@55 $generated@@52) $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@56 $generated@@57 $generated@@20) (and (= ($generated@@41 $generated@@5 ($generated@@40 $generated@@5 $generated@@57)) $generated@@57) ($generated@@29 $generated@@5 ($generated@@40 $generated@@5 $generated@@57) $generated@@20)))
 :pattern ( ($generated@@56 $generated@@57 $generated@@20))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@58 ($generated@@31 $generated@@59)) (forall (($generated@@60 T@U) ) (!  (=> (< 0 ($generated@@23 $generated@@58 $generated@@60)) ($generated@@56 $generated@@60 $generated@@59))
 :pattern ( ($generated@@23 $generated@@58 $generated@@60))
)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@58 ($generated@@31 $generated@@59)))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 Int) ) (!  (=> (<= 0 $generated@@63) (= ($generated@@48 ($generated@@24 $generated@@61 $generated@@62 $generated@@63)) (+ (- ($generated@@48 $generated@@61) ($generated@@23 $generated@@61 $generated@@62)) $generated@@63)))
 :pattern ( ($generated@@48 ($generated@@24 $generated@@61 $generated@@62 $generated@@63)))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@56 ($generated@@41 $generated@@66 $generated@@64) $generated@@65) ($generated@@29 $generated@@66 $generated@@64 $generated@@65))
 :pattern ( ($generated@@56 ($generated@@41 $generated@@66 $generated@@64) $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@32 $generated@@67) (forall (($generated@@68 T@U) ) (!  (and (<= 0 ($generated@@23 $generated@@67 $generated@@68)) (<= ($generated@@23 $generated@@67 $generated@@68) ($generated@@48 $generated@@67)))
 :pattern ( ($generated@@23 $generated@@67 $generated@@68))
)))
 :pattern ( ($generated@@32 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (<= 0 ($generated@@48 $generated@@69))
 :pattern ( ($generated@@48 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@23 $generated@@70 $generated@@71) 0)
 :pattern ( ($generated@@23 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@23 ($generated@@44 $generated@@72 $generated@@73) $generated@@73) (+ ($generated@@23 $generated@@72 $generated@@73) 1))
 :pattern ( ($generated@@44 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@74 ($generated@@31 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@31 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@76 ($generated@@31 $generated@@77)) $generated)
 :pattern ( ($generated@@31 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@40 $generated@@79 ($generated@@41 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@41 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (!  (and (= (= ($generated@@48 $generated@@80) 0) (= $generated@@80 $generated@@70)) (=> (or (not (= ($generated@@48 $generated@@80) 0)) (not true)) (exists (($generated@@81 T@U) ) (! (< 0 ($generated@@23 $generated@@80 $generated@@81))
 :pattern ( ($generated@@23 $generated@@80 $generated@@81))
))))
 :pattern ( ($generated@@48 $generated@@80))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@82 $generated@@93 $generated@@94 $generated@@95 ($generated@@89 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@99 $generated@@96) $generated@@98 $generated@@99) $generated@@96)
 :weight 0
)) (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@105 $generated@@107) (= ($generated@@82 $generated@@100 $generated@@101 $generated@@102 ($generated@@89 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@82 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@82 $generated@@109 $generated@@110 $generated@@111 ($generated@@89 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@82 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)))) (= ($generated@@3 $generated@@83) 4)) (= ($generated@@3 $generated@@84) 5)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@86 $generated@@118 $generated@@119 ($generated@@90 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@120) $generated@@122) $generated@@120)
 :weight 0
))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@86 $generated@@123 $generated@@124 ($generated@@90 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@86 $generated@@123 $generated@@124 $generated@@126 $generated@@128)))
 :weight 0
))) (= ($generated@@3 $generated@@87) 6)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (= ($generated@@3 ($generated@@88 $generated@@129 $generated@@130)) 7))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@88 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@133 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@88 $generated@@133 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Bool) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@8 ($generated@@82 $generated@@83 $generated@@84 $generated@@4 ($generated@@85 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))  (=> (and (or (not (= $generated@@139 $generated@@135)) (not true)) ($generated@@8 ($generated@@40 $generated@@4 ($generated@@86 $generated@@84 $generated@@87 ($generated@@86 $generated@@83 ($generated@@88 $generated@@84 $generated@@87) $generated@@136 $generated@@139) $generated@@137)))) $generated@@138))
 :pattern ( ($generated@@82 $generated@@83 $generated@@84 $generated@@4 ($generated@@85 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@56 $generated@@141 ($generated@@31 $generated@@142)) (and (= ($generated@@41 $generated@@30 ($generated@@40 $generated@@30 $generated@@141)) $generated@@141) ($generated@@29 $generated@@30 ($generated@@40 $generated@@30 $generated@@141) ($generated@@31 $generated@@142))))
 :pattern ( ($generated@@56 $generated@@141 ($generated@@31 $generated@@142)))
)))
(assert (= ($generated@@76 $generated@@20) $generated@@1))
(assert (= ($generated@@143 $generated@@20) $generated@@2))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@29 $generated@@5 $generated@@144 $generated@@20)  (and (<= ($generated@@35 0) ($generated@@10 $generated@@144)) (< ($generated@@10 $generated@@144) 4294967296)))
 :pattern ( ($generated@@29 $generated@@5 $generated@@144 $generated@@20))
)))
(assert (forall (($generated@@145 Int) ) (! (= ($generated@@41 $generated@@5 ($generated@@9 ($generated@@35 $generated@@145))) ($generated@@37 $generated@@87 ($generated@@41 $generated@@5 ($generated@@9 $generated@@145))))
 :pattern ( ($generated@@41 $generated@@5 ($generated@@9 ($generated@@35 $generated@@145))))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@41 $generated@@147 ($generated@@37 $generated@@147 $generated@@146)) ($generated@@37 $generated@@87 ($generated@@41 $generated@@147 $generated@@146)))
 :pattern ( ($generated@@41 $generated@@147 ($generated@@37 $generated@@147 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (< 0 ($generated@@23 $generated@@148 $generated@@150)) (< 0 ($generated@@23 ($generated@@44 $generated@@148 $generated@@149) $generated@@150)))
 :pattern ( ($generated@@44 $generated@@148 $generated@@149) ($generated@@23 $generated@@148 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (< 0 ($generated@@23 ($generated@@44 $generated@@151 $generated@@152) $generated@@153))  (or (= $generated@@153 $generated@@152) (< 0 ($generated@@23 $generated@@151 $generated@@153))))
 :pattern ( ($generated@@23 ($generated@@44 $generated@@151 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@19 $generated@@30 $generated@@154 ($generated@@31 $generated@@155) $generated@@156) (forall (($generated@@157 T@U) ) (!  (=> (< 0 ($generated@@23 $generated@@154 $generated@@157)) ($generated@@51 $generated@@157 $generated@@155 $generated@@156))
 :pattern ( ($generated@@23 $generated@@154 $generated@@157))
)))
 :pattern ( ($generated@@19 $generated@@30 $generated@@154 ($generated@@31 $generated@@155) $generated@@156))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@172  (=> (and (= $generated@@158 ($generated@@85 $generated@@159 $generated@@160 $generated@@0 false)) (= $generated@@161 ($generated@@35 14))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@35 0) $generated@@161) (< $generated@@161 4294967296))) (=> (and (<= ($generated@@35 0) $generated@@161) (< $generated@@161 4294967296)) (=> (= $generated@@162 ($generated@@35 123)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@35 0) $generated@@162) (< $generated@@162 4294967296))) (=> (and (<= ($generated@@35 0) $generated@@162) (< $generated@@162 4294967296)) (=> (and (= $generated@@163 ($generated@@37 $generated@@30 ($generated@@44 ($generated@@44 $generated@@70 ($generated@@41 $generated@@5 ($generated@@9 ($generated@@35 14)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@35 123)))))) (= $generated@@164 ($generated@@35 123))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@35 0) $generated@@164) (< $generated@@164 4294967296))) (=> (and (<= ($generated@@35 0) $generated@@164) (< $generated@@164 4294967296)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= 0 ($generated@@35 3))) (=> (<= 0 ($generated@@35 3)) (=> (and (= $generated@@165 ($generated@@24 $generated@@163 ($generated@@41 $generated@@5 ($generated@@9 ($generated@@35 123))) ($generated@@35 3))) (= $generated@@166 ($generated@@35 123))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@35 0) $generated@@166) (< $generated@@166 4294967296))) (=> (and (<= ($generated@@35 0) $generated@@166) (< $generated@@166 4294967296)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= 0 ($generated@@35 3)))))))))))))))))))
(let (($generated@@173  (=> (and ($generated@@167 $generated@@160) ($generated@@168 $generated@@160)) (=> (and (and ($generated@@29 $generated@@30 $generated@@169 ($generated@@31 $generated@@20)) ($generated@@19 $generated@@30 $generated@@169 ($generated@@31 $generated@@20) $generated@@160)) true) (=> (and (and (and ($generated@@29 $generated@@30 $generated@@170 ($generated@@31 $generated@@20)) ($generated@@19 $generated@@30 $generated@@170 ($generated@@31 $generated@@20) $generated@@160)) true) (and (= 1 $generated@@171) (= (ControlFlow 0 8) 2))) $generated@@172)))))
$generated@@173)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
