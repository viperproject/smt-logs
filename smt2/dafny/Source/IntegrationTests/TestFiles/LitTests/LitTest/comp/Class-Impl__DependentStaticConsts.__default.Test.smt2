(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U T@U T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 () Int)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (Int) T@U)
(declare-fun $generated@@48 () Int)
(declare-fun $generated@@49 () Int)
(declare-fun $generated@@50 () Int)
(declare-fun $generated@@51 (Int) Int)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@70 () Int)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@73 (T@U Int) T@U)
(declare-fun $generated@@82 (T@U T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@114 (T@U) Int)
(declare-fun $generated@@115 (T@U) Int)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@122 (T@U) Int)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@135 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@T T@T) T@T)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@236 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@28) 0))
(assert (= ($generated@@10 $generated@@30) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@31 $generated@@36 $generated@@37) ($generated@@32 $generated@@34 $generated@@35))  (and ($generated@@33 $generated@@36 $generated@@34) ($generated@@33 $generated@@37 $generated@@35)))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@31 $generated@@36 $generated@@37) ($generated@@32 $generated@@34 $generated@@35)))
)))
(assert  (and (= ($generated@@10 $generated@@43) 4) (= ($generated@@10 $generated@@46) 5)))
(assert (= $generated@@38 ($generated@@39 ($generated@@39 ($generated@@39 ($generated@@39 $generated@@40 ($generated@@41 $generated@@12 ($generated@@16 $generated@@42)) ($generated@@41 $generated@@43 ($generated@@44 $generated@@43 ($generated@@45 ($generated@@45 ($generated@@45 ($generated@@45 ($generated@@45 $generated@@28 ($generated@@41 $generated@@46 ($generated@@47 104))) ($generated@@41 $generated@@46 ($generated@@47 101))) ($generated@@41 $generated@@46 ($generated@@47 108))) ($generated@@41 $generated@@46 ($generated@@47 108))) ($generated@@41 $generated@@46 ($generated@@47 111)))))) ($generated@@41 $generated@@12 ($generated@@16 $generated@@48)) ($generated@@41 $generated@@43 ($generated@@44 $generated@@43 ($generated@@45 ($generated@@45 $generated@@28 ($generated@@41 $generated@@46 ($generated@@47 104))) ($generated@@41 $generated@@46 ($generated@@47 105)))))) ($generated@@41 $generated@@12 ($generated@@16 $generated@@49)) ($generated@@41 $generated@@43 ($generated@@44 $generated@@43 ($generated@@45 ($generated@@45 ($generated@@45 $generated@@28 ($generated@@41 $generated@@46 ($generated@@47 98))) ($generated@@41 $generated@@46 ($generated@@47 121))) ($generated@@41 $generated@@46 ($generated@@47 101)))))) ($generated@@41 $generated@@12 ($generated@@16 $generated@@50)) ($generated@@41 $generated@@43 ($generated@@44 $generated@@43 ($generated@@45 ($generated@@45 ($generated@@45 ($generated@@45 ($generated@@45 $generated@@28 ($generated@@41 $generated@@46 ($generated@@47 108))) ($generated@@41 $generated@@46 ($generated@@47 97))) ($generated@@41 $generated@@46 ($generated@@47 116))) ($generated@@41 $generated@@46 ($generated@@47 101))) ($generated@@41 $generated@@46 ($generated@@47 114))))))))
(assert (forall (($generated@@52 Int) ) (! (= ($generated@@51 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@44 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@44 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (and ($generated@@29 $generated@@43 $generated@@56 ($generated@@55 $generated@@58)) ($generated@@33 $generated@@57 $generated@@58)) ($generated@@29 $generated@@43 ($generated@@45 $generated@@56 $generated@@57) ($generated@@55 $generated@@58)))
 :pattern ( ($generated@@29 $generated@@43 ($generated@@45 $generated@@56 $generated@@57) ($generated@@55 $generated@@58)))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@41 $generated@@61 ($generated@@59 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@59 $generated@@61 $generated@@60))
)))
(assert (= ($generated@@10 $generated@@62) 6))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@29 $generated@@62 $generated@@65 ($generated@@63 $generated@@66)) (forall (($generated@@67 T@U) ) (!  (=> ($generated@@64 $generated@@65 $generated@@67) ($generated@@33 $generated@@67 $generated@@66))
 :pattern ( ($generated@@64 $generated@@65 $generated@@67))
)))
 :pattern ( ($generated@@29 $generated@@62 $generated@@65 ($generated@@63 $generated@@66)))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@27 ($generated@@45 $generated@@68 $generated@@69)) (+ 1 ($generated@@27 $generated@@68)))
 :pattern ( ($generated@@45 $generated@@68 $generated@@69))
)))
(assert  (=> (< 1 $generated@@70) ($generated@@29 $generated@@12 ($generated@@16 $generated@@42) $generated@@71)))
(assert  (=> (< 1 $generated@@70) ($generated@@29 $generated@@12 ($generated@@16 $generated@@48) $generated@@71)))
(assert  (=> (< 1 $generated@@70) ($generated@@29 $generated@@12 ($generated@@16 $generated@@49) $generated@@71)))
(assert  (=> (< 1 $generated@@70) ($generated@@29 $generated@@12 ($generated@@16 $generated@@50) $generated@@71)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@33 $generated@@72 $generated@@71) (and (= ($generated@@41 $generated@@12 ($generated@@59 $generated@@12 $generated@@72)) $generated@@72) ($generated@@29 $generated@@12 ($generated@@59 $generated@@12 $generated@@72) $generated@@71)))
 :pattern ( ($generated@@33 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 Int) ($generated@@76 T@U) ) (!  (and (=> (= $generated@@75 ($generated@@27 $generated@@74)) (= ($generated@@73 ($generated@@45 $generated@@74 $generated@@76) $generated@@75) $generated@@76)) (=> (or (not (= $generated@@75 ($generated@@27 $generated@@74))) (not true)) (= ($generated@@73 ($generated@@45 $generated@@74 $generated@@76) $generated@@75) ($generated@@73 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@73 ($generated@@45 $generated@@74 $generated@@76) $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@33 $generated@@77 $generated) (and (= ($generated@@41 $generated@@46 ($generated@@59 $generated@@46 $generated@@77)) $generated@@77) ($generated@@29 $generated@@46 ($generated@@59 $generated@@46 $generated@@77) $generated)))
 :pattern ( ($generated@@33 $generated@@77 $generated))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@33 ($generated@@41 $generated@@80 $generated@@78) $generated@@79) ($generated@@29 $generated@@80 $generated@@78 $generated@@79))
 :pattern ( ($generated@@33 ($generated@@41 $generated@@80 $generated@@78) $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (! (<= 0 ($generated@@27 $generated@@81))
 :pattern ( ($generated@@27 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@83 ($generated@@82 $generated@@84 $generated@@85)) $generated@@84)
 :pattern ( ($generated@@82 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@86 ($generated@@82 $generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@82 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@26 ($generated@@82 $generated@@89 $generated@@90)) $generated@@3)
 :pattern ( ($generated@@82 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@91 ($generated@@31 $generated@@92 $generated@@93)) $generated@@5)
 :pattern ( ($generated@@31 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@94 ($generated@@32 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@32 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@97 ($generated@@32 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@32 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@100 ($generated@@31 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@31 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@103 ($generated@@31 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@31 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 ($generated@@63 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@63 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@26 ($generated@@63 $generated@@108)) $generated@@1)
 :pattern ( ($generated@@63 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@109 ($generated@@55 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@55 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@26 ($generated@@55 $generated@@111)) $generated@@2)
 :pattern ( ($generated@@55 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@59 $generated@@113 ($generated@@41 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@41 $generated@@113 $generated@@112))
)))
(assert (= $generated@@42 ($generated@@51 0)))
(assert (= $generated@@48 ($generated@@51 1)))
(assert (= $generated@@49 ($generated@@51 2)))
(assert (= $generated@@50 ($generated@@51 3)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (< ($generated@@114 $generated@@116) ($generated@@115 ($generated@@31 $generated@@116 $generated@@117)))
 :pattern ( ($generated@@31 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (< ($generated@@114 $generated@@119) ($generated@@115 ($generated@@31 $generated@@118 $generated@@119)))
 :pattern ( ($generated@@31 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (!  (not ($generated@@64 ($generated@@120 $generated@@40) $generated@@121))
 :pattern ( ($generated@@64 ($generated@@120 $generated@@40) $generated@@121))
)))
(assert (forall (($generated@@123 Int) ) (!  (=> (or (and (<= 0 $generated@@123) (< $generated@@123 55296)) (and (<= 57344 $generated@@123) (< $generated@@123 1114112))) (= ($generated@@122 ($generated@@47 $generated@@123)) $generated@@123))
 :pattern ( ($generated@@47 $generated@@123))
)))
(assert (= ($generated@@10 $generated@@124) 7))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@33 $generated@@125 ($generated@@82 $generated@@126 $generated@@127)) (and (= ($generated@@41 $generated@@124 ($generated@@59 $generated@@124 $generated@@125)) $generated@@125) ($generated@@29 $generated@@124 ($generated@@59 $generated@@124 $generated@@125) ($generated@@82 $generated@@126 $generated@@127))))
 :pattern ( ($generated@@33 $generated@@125 ($generated@@82 $generated@@126 $generated@@127)))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> ($generated@@33 $generated@@130 ($generated@@32 $generated@@128 $generated@@129)) (and (= ($generated@@41 $generated@@30 ($generated@@59 $generated@@30 $generated@@130)) $generated@@130) ($generated@@29 $generated@@30 ($generated@@59 $generated@@30 $generated@@130) ($generated@@32 $generated@@128 $generated@@129))))
 :pattern ( ($generated@@33 $generated@@130 ($generated@@32 $generated@@128 $generated@@129)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@131 $generated@@142 $generated@@143 $generated@@144 ($generated@@138 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@147 $generated@@148) $generated@@145)
 :weight 0
)) (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@131 $generated@@149 $generated@@150 $generated@@151 ($generated@@138 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@131 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@131 $generated@@158 $generated@@159 $generated@@160 ($generated@@138 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@131 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)))) (= ($generated@@10 $generated@@132) 8)) (= ($generated@@10 $generated@@133) 9)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@135 $generated@@167 $generated@@168 ($generated@@139 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@169) $generated@@171) $generated@@169)
 :weight 0
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@176 $generated@@177) (= ($generated@@135 $generated@@172 $generated@@173 ($generated@@139 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@177) ($generated@@135 $generated@@172 $generated@@173 $generated@@175 $generated@@177)))
 :weight 0
))) (= ($generated@@10 $generated@@136) 10)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@10 ($generated@@137 $generated@@178 $generated@@179)) 11))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@140 ($generated@@137 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@137 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@141 ($generated@@137 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@137 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@15 ($generated@@131 $generated@@132 $generated@@133 $generated@@11 ($generated@@134 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))  (=> (and (or (not (= $generated@@188 $generated@@184)) (not true)) ($generated@@15 ($generated@@59 $generated@@11 ($generated@@135 $generated@@133 $generated@@136 ($generated@@135 $generated@@132 ($generated@@137 $generated@@133 $generated@@136) $generated@@185 $generated@@188) $generated@@186)))) $generated@@187))
 :pattern ( ($generated@@131 $generated@@132 $generated@@133 $generated@@11 ($generated@@134 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (and (= ($generated@@190 ($generated@@45 $generated@@192 $generated@@193)) $generated@@192) (= ($generated@@191 ($generated@@45 $generated@@192 $generated@@193)) $generated@@193))
 :pattern ( ($generated@@45 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (and (= ($generated@@26 ($generated@@32 $generated@@195 $generated@@196)) $generated@@6) (= ($generated@@194 ($generated@@32 $generated@@195 $generated@@196)) $generated@@8))
 :pattern ( ($generated@@32 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ) (!  (or (= $generated@@197 $generated@@40) (exists (($generated@@198 T@U) ) ($generated@@64 ($generated@@120 $generated@@197) $generated@@198)))
 :pattern ( ($generated@@120 $generated@@197))
)))
(assert (forall (($generated@@200 T@U) ) (!  (or (= $generated@@200 $generated@@40) (exists (($generated@@201 T@U) ) ($generated@@64 ($generated@@199 $generated@@200) $generated@@201)))
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@64 ($generated@@202 $generated@@204) $generated@@205)  (and ($generated@@64 ($generated@@120 $generated@@204) ($generated@@100 ($generated@@59 $generated@@30 $generated@@205))) (= ($generated@@135 $generated@@136 $generated@@136 ($generated@@203 $generated@@204) ($generated@@100 ($generated@@59 $generated@@30 $generated@@205))) ($generated@@103 ($generated@@59 $generated@@30 $generated@@205)))))
 :pattern ( ($generated@@64 ($generated@@202 $generated@@204) $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@64 ($generated@@199 $generated@@206) $generated@@207) (exists (($generated@@208 T@U) ) (!  (and ($generated@@64 ($generated@@120 $generated@@206) $generated@@208) (= $generated@@207 ($generated@@135 $generated@@136 $generated@@136 ($generated@@203 $generated@@206) $generated@@208)))
 :pattern ( ($generated@@64 ($generated@@120 $generated@@206) $generated@@208))
 :pattern ( ($generated@@135 $generated@@136 $generated@@136 ($generated@@203 $generated@@206) $generated@@208))
)))
 :pattern ( ($generated@@64 ($generated@@199 $generated@@206) $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (and (=> (= $generated@@211 $generated@@210) (and ($generated@@64 ($generated@@120 ($generated@@39 $generated@@209 $generated@@210 $generated@@212)) $generated@@211) (= ($generated@@135 $generated@@136 $generated@@136 ($generated@@203 ($generated@@39 $generated@@209 $generated@@210 $generated@@212)) $generated@@211) $generated@@212))) (=> (or (not (= $generated@@211 $generated@@210)) (not true)) (and (= ($generated@@64 ($generated@@120 ($generated@@39 $generated@@209 $generated@@210 $generated@@212)) $generated@@211) ($generated@@64 ($generated@@120 $generated@@209) $generated@@211)) (= ($generated@@135 $generated@@136 $generated@@136 ($generated@@203 ($generated@@39 $generated@@209 $generated@@210 $generated@@212)) $generated@@211) ($generated@@135 $generated@@136 $generated@@136 ($generated@@203 $generated@@209) $generated@@211)))))
 :pattern ( ($generated@@64 ($generated@@120 ($generated@@39 $generated@@209 $generated@@210 $generated@@212)) $generated@@211))
 :pattern ( ($generated@@135 $generated@@136 $generated@@136 ($generated@@203 ($generated@@39 $generated@@209 $generated@@210 $generated@@212)) $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ) (! (= ($generated@@114 ($generated@@41 $generated@@30 $generated@@213)) ($generated@@115 $generated@@213))
 :pattern ( ($generated@@114 ($generated@@41 $generated@@30 $generated@@213)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> ($generated@@33 $generated@@214 ($generated@@63 $generated@@215)) (and (= ($generated@@41 $generated@@62 ($generated@@59 $generated@@62 $generated@@214)) $generated@@214) ($generated@@29 $generated@@62 ($generated@@59 $generated@@62 $generated@@214) ($generated@@63 $generated@@215))))
 :pattern ( ($generated@@33 $generated@@214 ($generated@@63 $generated@@215)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> ($generated@@33 $generated@@216 ($generated@@55 $generated@@217)) (and (= ($generated@@41 $generated@@43 ($generated@@59 $generated@@43 $generated@@216)) $generated@@216) ($generated@@29 $generated@@43 ($generated@@59 $generated@@43 $generated@@216) ($generated@@55 $generated@@217))))
 :pattern ( ($generated@@33 $generated@@216 ($generated@@55 $generated@@217)))
)))
(assert (forall (($generated@@218 T@U) ) (!  (and (= ($generated@@47 ($generated@@122 $generated@@218)) $generated@@218) (or (and (<= 0 ($generated@@122 $generated@@218)) (< ($generated@@122 $generated@@218) 55296)) (and (<= 57344 ($generated@@122 $generated@@218)) (< ($generated@@122 $generated@@218) 1114112))))
 :pattern ( ($generated@@122 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@29 $generated@@124 $generated@@219 ($generated@@82 $generated@@220 $generated@@221)) (forall (($generated@@222 T@U) ) (!  (=> ($generated@@64 ($generated@@120 $generated@@219) $generated@@222) (and ($generated@@33 ($generated@@135 $generated@@136 $generated@@136 ($generated@@203 $generated@@219) $generated@@222) $generated@@221) ($generated@@33 $generated@@222 $generated@@220)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@136 ($generated@@203 $generated@@219) $generated@@222))
 :pattern ( ($generated@@64 ($generated@@120 $generated@@219) $generated@@222))
)))
 :pattern ( ($generated@@29 $generated@@124 $generated@@219 ($generated@@82 $generated@@220 $generated@@221)))
)))
(assert (= ($generated@@26 $generated@@71) $generated@@7))
(assert (= ($generated@@194 $generated@@71) $generated@@9))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@29 $generated@@12 $generated@@223 $generated@@71)  (and (<= ($generated@@51 0) ($generated@@17 $generated@@223)) (< ($generated@@17 $generated@@223) 100)))
 :pattern ( ($generated@@29 $generated@@12 $generated@@223 $generated@@71))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@31 ($generated@@44 $generated@@136 $generated@@224) ($generated@@44 $generated@@136 $generated@@225)) ($generated@@44 $generated@@30 ($generated@@31 $generated@@224 $generated@@225)))
 :pattern ( ($generated@@31 ($generated@@44 $generated@@136 $generated@@224) ($generated@@44 $generated@@136 $generated@@225)))
)))
(assert (forall (($generated@@226 Int) ) (! (= ($generated@@41 $generated@@12 ($generated@@16 ($generated@@51 $generated@@226))) ($generated@@44 $generated@@136 ($generated@@41 $generated@@12 ($generated@@16 $generated@@226))))
 :pattern ( ($generated@@41 $generated@@12 ($generated@@16 ($generated@@51 $generated@@226))))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@T) ) (! (= ($generated@@41 $generated@@228 ($generated@@44 $generated@@228 $generated@@227)) ($generated@@44 $generated@@136 ($generated@@41 $generated@@228 $generated@@227)))
 :pattern ( ($generated@@41 $generated@@228 ($generated@@44 $generated@@228 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= ($generated@@27 $generated@@229) 0) (= $generated@@229 $generated@@28))
 :pattern ( ($generated@@27 $generated@@229))
)))
(assert  (=> (< 2 $generated@@70) ($generated@@29 $generated@@124 $generated@@38 ($generated@@82 $generated@@71 ($generated@@55 $generated)))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= ($generated@@29 $generated@@43 $generated@@230 ($generated@@55 $generated@@231)) (forall (($generated@@232 Int) ) (!  (=> (and (<= 0 $generated@@232) (< $generated@@232 ($generated@@27 $generated@@230))) ($generated@@33 ($generated@@73 $generated@@230 $generated@@232) $generated@@231))
 :pattern ( ($generated@@73 $generated@@230 $generated@@232))
)))
 :pattern ( ($generated@@29 $generated@@43 $generated@@230 ($generated@@55 $generated@@231)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (or (= $generated@@233 $generated@@40) (exists (($generated@@234 T@U) ($generated@@235 T@U) ) ($generated@@64 ($generated@@202 $generated@@233) ($generated@@41 $generated@@30 ($generated@@31 $generated@@234 $generated@@235)))))
 :pattern ( ($generated@@202 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 Int) ) (!  (=> (and (<= 0 $generated@@238) (< $generated@@238 ($generated@@27 $generated@@237))) (< ($generated@@115 ($generated@@59 $generated@@30 ($generated@@73 $generated@@237 $generated@@238))) ($generated@@236 $generated@@237)))
 :pattern ( ($generated@@115 ($generated@@59 $generated@@30 ($generated@@73 $generated@@237 $generated@@238))))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> ($generated@@29 $generated@@124 $generated@@239 ($generated@@82 $generated@@240 $generated@@241)) (and (and ($generated@@29 $generated@@62 ($generated@@120 $generated@@239) ($generated@@63 $generated@@240)) ($generated@@29 $generated@@62 ($generated@@199 $generated@@239) ($generated@@63 $generated@@241))) ($generated@@29 $generated@@62 ($generated@@202 $generated@@239) ($generated@@63 ($generated@@32 $generated@@240 $generated@@241)))))
 :pattern ( ($generated@@29 $generated@@124 $generated@@239 ($generated@@82 $generated@@240 $generated@@241)))
)))
(assert (forall (($generated@@242 T@U) ) (! ($generated@@29 $generated@@46 $generated@@242 $generated)
 :pattern ( ($generated@@29 $generated@@46 $generated@@242 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@248  (=> (= $generated@@243 ($generated@@134 $generated@@244 $generated@@245 $generated@@4 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@64 ($generated@@120 $generated@@38) ($generated@@41 $generated@@12 ($generated@@16 $generated@@48)))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@64 ($generated@@120 $generated@@38) ($generated@@41 $generated@@12 ($generated@@16 $generated@@50))))))))
(let (($generated@@249  (=> (and (and ($generated@@246 $generated@@245) ($generated@@247 $generated@@245)) (and (= 3 $generated@@70) (= (ControlFlow 0 4) 2))) $generated@@248)))
$generated@@249)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
