(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@85 (Int) Int)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated@@3) 0))
(assert (= ($generated@@31 $generated) $generated@@1))
(assert (= ($generated@@31 $generated@@0) $generated@@2))
(assert (= ($generated@@32 $generated@@3) $generated@@4))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and (or (not (= $generated@@39 $generated@@35)) (not true)) (= ($generated@@36 $generated@@39) ($generated@@34 $generated@@38))) ($generated@@37 $generated@@16 ($generated@@20 ($generated@@33 $generated@@39)) $generated@@0))
 :pattern ( ($generated@@33 $generated@@39) ($generated@@34 $generated@@38))
)))
(assert (= ($generated@@14 $generated@@41) 3))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@44 ($generated@@42 $generated@@43) $generated@@45) ($generated@@40 $generated@@41 $generated@@44 ($generated@@34 $generated@@43) $generated@@45))
 :pattern ( ($generated@@40 $generated@@41 $generated@@44 ($generated@@42 $generated@@43) $generated@@45))
 :pattern ( ($generated@@40 $generated@@41 $generated@@44 ($generated@@34 $generated@@43) $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@37 $generated@@41 $generated@@47 $generated@@46)  (or (= $generated@@47 $generated@@35) (= ($generated@@36 $generated@@47) $generated@@46)))
 :pattern ( ($generated@@37 $generated@@41 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@49 $generated@@48 $generated@@50) ($generated@@40 $generated@@41 $generated@@49 $generated@@46 $generated@@50))
 :pattern ( ($generated@@40 $generated@@41 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@40 $generated@@41 $generated@@49 $generated@@46 $generated@@50))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@52 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@52 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@52 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@14 $generated@@53) 4)) (= ($generated@@14 $generated@@54) 5)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@14 ($generated@@55 $generated@@70 $generated@@71)) 6))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@55 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@55 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@55 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@77 ($generated@@34 $generated@@76) $generated@@78)  (or (= $generated@@77 $generated@@35) ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@78 $generated@@77) $generated@@3)))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@77 ($generated@@34 $generated@@76) $generated@@78))
)))
(assert (= ($generated@@30 $generated@@79) 0))
(assert (= ($generated@@80 $generated@@8 $generated@@12) $generated@@79))
(assert  (not ($generated@@81 $generated@@79)))
(assert (= ($generated@@30 $generated@@82) 0))
(assert (= ($generated@@80 $generated@@8 $generated@@13) $generated@@82))
(assert  (not ($generated@@81 $generated@@82)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@83 $generated@@46 $generated@@84)  (or (= $generated@@83 $generated@@35) ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@84 $generated@@83) $generated@@3)))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@83 $generated@@46 $generated@@84))
)))
(assert (forall (($generated@@86 Int) ) (! (= ($generated@@85 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@87 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@51 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@51 $generated@@92 $generated@@91))
)))
(assert ($generated@@81 $generated@@3))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@37 $generated@@41 $generated@@94 ($generated@@42 $generated@@93))  (and ($generated@@37 $generated@@41 $generated@@94 ($generated@@34 $generated@@93)) (or (not (= $generated@@94 $generated@@35)) (not true))))
 :pattern ( ($generated@@37 $generated@@41 $generated@@94 ($generated@@42 $generated@@93)))
 :pattern ( ($generated@@37 $generated@@41 $generated@@94 ($generated@@34 $generated@@93)))
)))
(assert  (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@95 $generated@@98 $generated@@99 $generated@@100 ($generated@@97 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104 $generated@@101) $generated@@103 $generated@@104) $generated@@101)
 :weight 0
)) (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@110 $generated@@112) (= ($generated@@95 $generated@@105 $generated@@106 $generated@@107 ($generated@@97 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@112 $generated@@113) ($generated@@95 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@112 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@95 $generated@@114 $generated@@115 $generated@@116 ($generated@@97 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@95 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@19 ($generated@@95 $generated@@41 $generated@@53 $generated@@15 ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@123)) (not true)) ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@124 $generated@@129) $generated@@125)))) (or (or (= $generated@@129 $generated@@126) (= $generated@@129 $generated@@127)) (= $generated@@129 $generated@@128))))
 :pattern ( ($generated@@95 $generated@@41 $generated@@53 $generated@@15 ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (!  (and (= ($generated@@31 ($generated@@34 $generated@@132)) $generated@@5) (= ($generated@@131 ($generated@@34 $generated@@132)) $generated@@10))
 :pattern ( ($generated@@34 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (!  (and (= ($generated@@31 ($generated@@42 $generated@@133)) $generated@@6) (= ($generated@@131 ($generated@@42 $generated@@133)) $generated@@10))
 :pattern ( ($generated@@42 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and ($generated@@134 $generated@@135) (and (or (not (= $generated@@136 $generated@@35)) (not true)) (= ($generated@@36 $generated@@136) $generated@@46))) ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@135 $generated@@136) $generated@@3)))) ($generated@@40 $generated@@41 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@135 $generated@@136) $generated@@79)) ($generated@@42 $generated@@0) $generated@@135))
 :pattern ( ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@135 $generated@@136) $generated@@79)))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and ($generated@@134 $generated@@137) (and (or (not (= $generated@@138 $generated@@35)) (not true)) (= ($generated@@36 $generated@@138) $generated@@46))) ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@137 $generated@@138) $generated@@3)))) ($generated@@40 $generated@@41 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@137 $generated@@138) $generated@@82)) ($generated@@42 $generated@@0) $generated@@137))
 :pattern ( ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@137 $generated@@138) $generated@@82)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@37 $generated@@41 $generated@@140 ($generated@@34 $generated@@139))  (or (= $generated@@140 $generated@@35) (= ($generated@@36 $generated@@140) ($generated@@34 $generated@@139))))
 :pattern ( ($generated@@37 $generated@@41 $generated@@140 ($generated@@34 $generated@@139)))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@37 $generated@@41 $generated@@141 $generated@@48)  (and ($generated@@37 $generated@@41 $generated@@141 $generated@@46) (or (not (= $generated@@141 $generated@@35)) (not true))))
 :pattern ( ($generated@@37 $generated@@41 $generated@@141 $generated@@48))
 :pattern ( ($generated@@37 $generated@@41 $generated@@141 $generated@@46))
)))
(assert  (=> (<= 0 $generated@@142) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (or ($generated@@144 $generated@@145 $generated@@146) (and (< 0 $generated@@142) (and ($generated@@134 $generated@@145) (and (or (not (= $generated@@146 $generated@@35)) (not true)) (and ($generated@@37 $generated@@41 $generated@@146 $generated@@48) ($generated@@40 $generated@@41 $generated@@146 $generated@@48 $generated@@145)))))) (= ($generated@@143 $generated@@145 $generated@@146)  (and (= ($generated@@33 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@145 $generated@@146) $generated@@79))) ($generated@@85 5)) (= ($generated@@33 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@145 $generated@@146) $generated@@82))) ($generated@@85 5)))))
 :pattern ( ($generated@@143 $generated@@145 $generated@@146) ($generated@@134 $generated@@145))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (and (= ($generated@@147 ($generated@@80 $generated@@148 $generated@@149)) $generated@@148) (= ($generated@@32 ($generated@@80 $generated@@148 $generated@@149)) $generated@@149))
 :pattern ( ($generated@@80 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (<= 0 ($generated@@33 $generated@@150))
 :pattern ( ($generated@@33 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@151 ($generated@@34 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@34 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@153 ($generated@@42 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@42 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@51 $generated@@156 ($generated@@90 $generated@@156 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@90 $generated@@156 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and ($generated@@134 $generated@@158) (and (or (not (= $generated@@159 $generated@@35)) (not true)) (= ($generated@@36 $generated@@159) ($generated@@34 $generated@@157)))) ($generated@@19 ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@3)))) ($generated@@40 $generated@@16 ($generated@@20 ($generated@@33 $generated@@159)) $generated@@0 $generated@@158))
 :pattern ( ($generated@@33 $generated@@159) ($generated@@51 $generated@@15 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@158 $generated@@159) $generated@@3)) ($generated@@34 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and ($generated@@134 $generated@@160) (and (or (not (= $generated@@161 $generated@@35)) (not true)) (= ($generated@@36 $generated@@161) $generated@@46))) ($generated@@37 $generated@@41 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@160 $generated@@161) $generated@@79)) ($generated@@42 $generated@@0)))
 :pattern ( ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@160 $generated@@161) $generated@@79)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@134 $generated@@162) (and (or (not (= $generated@@163 $generated@@35)) (not true)) (= ($generated@@36 $generated@@163) $generated@@46))) ($generated@@37 $generated@@41 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@162 $generated@@163) $generated@@82)) ($generated@@42 $generated@@0)))
 :pattern ( ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@162 $generated@@163) $generated@@82)))
)))
(assert (= ($generated@@31 $generated@@48) $generated@@7))
(assert (= ($generated@@131 $generated@@48) $generated@@11))
(assert (= ($generated@@31 $generated@@46) $generated@@9))
(assert (= ($generated@@131 $generated@@46) $generated@@11))
(assert (forall (($generated@@164 Int) ) (! (= ($generated@@90 $generated@@16 ($generated@@20 ($generated@@85 $generated@@164))) ($generated@@87 $generated@@54 ($generated@@90 $generated@@16 ($generated@@20 $generated@@164))))
 :pattern ( ($generated@@90 $generated@@16 ($generated@@20 ($generated@@85 $generated@@164))))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@90 $generated@@166 ($generated@@87 $generated@@166 $generated@@165)) ($generated@@87 $generated@@54 ($generated@@90 $generated@@166 $generated@@165)))
 :pattern ( ($generated@@90 $generated@@166 ($generated@@87 $generated@@166 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! ($generated@@40 $generated@@16 $generated@@168 $generated@@0 $generated@@167)
 :pattern ( ($generated@@40 $generated@@16 $generated@@168 $generated@@0 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! ($generated@@40 $generated@@15 $generated@@170 $generated $generated@@169)
 :pattern ( ($generated@@40 $generated@@15 $generated@@170 $generated $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! ($generated@@37 $generated@@16 $generated@@171 $generated@@0)
 :pattern ( ($generated@@37 $generated@@16 $generated@@171 $generated@@0))
)))
(assert (forall (($generated@@172 T@U) ) (! ($generated@@37 $generated@@15 $generated@@172 $generated)
 :pattern ( ($generated@@37 $generated@@15 $generated@@172 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Bool)
(declare-fun $generated@@176 () Bool)
(declare-fun $generated@@177 () Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Bool)
(declare-fun $generated@@180 () Bool)
(declare-fun $generated@@181 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@182  (=> (and (= ($generated@@143 $generated@@173 $generated@@174)  (and (= ($generated@@33 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@173 $generated@@174) $generated@@79))) ($generated@@85 5)) (= ($generated@@33 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@173 $generated@@174) $generated@@82))) ($generated@@85 5)))) ($generated@@37 $generated@@15 ($generated@@18 ($generated@@143 $generated@@173 $generated@@174)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@175) (=> $generated@@175 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@176))))))
(let (($generated@@183  (=> (or (not (= ($generated@@33 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@173 $generated@@174) $generated@@79))) ($generated@@85 5))) (not true)) (=> (and (= $generated@@176 true) (= (ControlFlow 0 7) 3)) $generated@@182))))
(let (($generated@@184  (=> (and (= ($generated@@33 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@173 $generated@@174) $generated@@79))) ($generated@@85 5)) (= $generated@@177 ($generated@@19 ($generated@@95 $generated@@41 $generated@@53 $generated@@15 $generated@@178 $generated@@174 $generated@@82)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@173 $generated@@174) $generated@@82)) $generated@@35)) (not true))) (=> (or (not (= ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@173 $generated@@174) $generated@@82)) $generated@@35)) (not true)) (=> (and (= $generated@@176 $generated@@177) (= (ControlFlow 0 5) 3)) $generated@@182))))))
(let (($generated@@185  (=> (= $generated@@175 ($generated@@19 ($generated@@95 $generated@@41 $generated@@53 $generated@@15 $generated@@178 $generated@@174 $generated@@79))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@173 $generated@@174) $generated@@79)) $generated@@35)) (not true))) (=> (or (not (= ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@173 $generated@@174) $generated@@79)) $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 8) 5) $generated@@184) (=> (= (ControlFlow 0 8) 7) $generated@@183)))))))
(let (($generated@@186 true))
(let (($generated@@187  (=> (= $generated@@178 ($generated@@96 $generated@@35 $generated@@173 $generated@@3 $generated@@174 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@173 $generated@@174) $generated@@79)) ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@173 $generated@@174) $generated@@82)))) (=> (and (= $generated@@179 ($generated@@19 ($generated@@95 $generated@@41 $generated@@53 $generated@@15 $generated@@178 $generated@@174 $generated@@79))) (= $generated@@180 ($generated@@19 ($generated@@95 $generated@@41 $generated@@53 $generated@@15 $generated@@178 $generated@@174 $generated@@82)))) (and (=> (= (ControlFlow 0 10) (- 0 12)) $generated@@179) (=> $generated@@179 (and (=> (= (ControlFlow 0 10) (- 0 11)) $generated@@180) (=> $generated@@180 (and (=> (= (ControlFlow 0 10) 1) $generated@@186) (=> (= (ControlFlow 0 10) 8) $generated@@185))))))))))
(let (($generated@@188  (=> (and ($generated@@134 $generated@@173) ($generated@@181 $generated@@173)) (=> (and (and (or (not (= $generated@@174 $generated@@35)) (not true)) (and ($generated@@37 $generated@@41 $generated@@174 $generated@@48) ($generated@@40 $generated@@41 $generated@@174 $generated@@48 $generated@@173))) (and (= 0 $generated@@142) (= (ControlFlow 0 13) 10))) $generated@@187))))
$generated@@188))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
