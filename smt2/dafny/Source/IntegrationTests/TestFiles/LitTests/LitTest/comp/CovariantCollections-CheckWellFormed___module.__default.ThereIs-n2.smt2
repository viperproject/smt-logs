(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@32 (T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@U T@U) Int)
(declare-fun $generated@@107 (T@U) Int)
(declare-fun $generated@@111 () T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@9 $generated@@27) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@29 $generated@@30))
 :pattern ( ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (and ($generated@@32 $generated@@36 $generated@@33 $generated@@37) ($generated@@34 $generated@@37)) ($generated@@32 $generated@@36 $generated@@35 $generated@@37))
 :pattern ( ($generated@@32 $generated@@36 $generated@@33 $generated@@37))
)))
(assert (= ($generated@@9 $generated@@39) 4))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@41 $generated@@40 $generated@@42) ($generated@@38 $generated@@39 $generated@@41 $generated@@35 $generated@@42))
 :pattern ( ($generated@@38 $generated@@39 $generated@@41 $generated@@40 $generated@@42))
 :pattern ( ($generated@@38 $generated@@39 $generated@@41 $generated@@35 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@44 $generated@@43 $generated@@45) ($generated@@38 $generated@@39 $generated@@44 $generated@@33 $generated@@45))
 :pattern ( ($generated@@38 $generated@@39 $generated@@44 $generated@@43 $generated@@45))
 :pattern ( ($generated@@38 $generated@@39 $generated@@44 $generated@@33 $generated@@45))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@9 $generated@@49) 5)) (= ($generated@@9 $generated@@50) 6)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@9 ($generated@@51 $generated@@66 $generated@@67)) 7))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@72 $generated@@35 $generated@@73)  (or (= $generated@@72 $generated@@46) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@72) $generated@@2)))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@72 $generated@@35 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@74 $generated@@33 $generated@@75)  (or (= $generated@@74 $generated@@46) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@75 $generated@@74) $generated@@2)))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@74 $generated@@33 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@47 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@47 $generated@@78 $generated@@77))
)))
(assert  (=> (< 0 $generated@@79) (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (and (and ($generated@@34 $generated@@81) (and (or (not (= $generated@@82 $generated@@46)) (not true)) ($generated@@26 $generated@@39 $generated@@82 $generated@@33))) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@81 $generated@@82) $generated@@2)))) ($generated@@38 $generated@@11 ($generated@@15 ($generated@@80 $generated@@82)) $generated $generated@@81))
 :pattern ( ($generated@@80 $generated@@82) ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@81 $generated@@82) $generated@@2)))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@32 ($generated@@76 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@38 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@32 ($generated@@76 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@87 $generated@@88 $generated@@35) (and (= ($generated@@76 $generated@@39 ($generated@@47 $generated@@39 $generated@@88)) $generated@@88) ($generated@@26 $generated@@39 ($generated@@47 $generated@@39 $generated@@88) $generated@@35)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@35))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@87 $generated@@89 $generated@@40) (and (= ($generated@@76 $generated@@39 ($generated@@47 $generated@@39 $generated@@89)) $generated@@89) ($generated@@26 $generated@@39 ($generated@@47 $generated@@39 $generated@@89) $generated@@40)))
 :pattern ( ($generated@@87 $generated@@89 $generated@@40))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@87 $generated@@90 $generated@@43) (and (= ($generated@@76 $generated@@39 ($generated@@47 $generated@@39 $generated@@90)) $generated@@90) ($generated@@26 $generated@@39 ($generated@@47 $generated@@39 $generated@@90) $generated@@43)))
 :pattern ( ($generated@@87 $generated@@90 $generated@@43))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@87 $generated@@91 $generated@@33) (and (= ($generated@@76 $generated@@39 ($generated@@47 $generated@@39 $generated@@91)) $generated@@91) ($generated@@26 $generated@@39 ($generated@@47 $generated@@39 $generated@@91) $generated@@33)))
 :pattern ( ($generated@@87 $generated@@91 $generated@@33))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@26 $generated@@39 $generated@@92 $generated@@40)  (and ($generated@@26 $generated@@39 $generated@@92 $generated@@35) (or (not (= $generated@@92 $generated@@46)) (not true))))
 :pattern ( ($generated@@26 $generated@@39 $generated@@92 $generated@@40))
 :pattern ( ($generated@@26 $generated@@39 $generated@@92 $generated@@35))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@26 $generated@@39 $generated@@93 $generated@@43)  (and ($generated@@26 $generated@@39 $generated@@93 $generated@@33) (or (not (= $generated@@93 $generated@@46)) (not true))))
 :pattern ( ($generated@@26 $generated@@39 $generated@@93 $generated@@43))
 :pattern ( ($generated@@26 $generated@@39 $generated@@93 $generated@@33))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> ($generated@@38 $generated@@39 $generated@@94 $generated@@33 $generated@@95) ($generated@@38 $generated@@39 $generated@@94 $generated@@35 $generated@@95))
 :pattern ( ($generated@@38 $generated@@39 $generated@@94 $generated@@33 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@96 $generated@@97 $generated@@98) (= $generated@@97 $generated@@98))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@100 ($generated@@28 $generated@@101)) (forall (($generated@@102 T@U) ) (!  (=> (< 0 ($generated@@99 $generated@@100 $generated@@102)) ($generated@@87 $generated@@102 $generated@@101))
 :pattern ( ($generated@@99 $generated@@100 $generated@@102))
)))
 :pattern ( ($generated@@26 $generated@@27 $generated@@100 ($generated@@28 $generated@@101)))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@87 $generated@@103 $generated) (and (= ($generated@@76 $generated@@11 ($generated@@47 $generated@@11 $generated@@103)) $generated@@103) ($generated@@26 $generated@@11 ($generated@@47 $generated@@11 $generated@@103) $generated)))
 :pattern ( ($generated@@87 $generated@@103 $generated))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@87 ($generated@@76 $generated@@106 $generated@@104) $generated@@105) ($generated@@26 $generated@@106 $generated@@104 $generated@@105))
 :pattern ( ($generated@@87 ($generated@@76 $generated@@106 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@29 $generated@@108) (forall (($generated@@109 T@U) ) (!  (and (<= 0 ($generated@@99 $generated@@108 $generated@@109)) (<= ($generated@@99 $generated@@108 $generated@@109) ($generated@@107 $generated@@108)))
 :pattern ( ($generated@@99 $generated@@108 $generated@@109))
)))
 :pattern ( ($generated@@29 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (<= 0 ($generated@@107 $generated@@110))
 :pattern ( ($generated@@107 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@99 $generated@@111 $generated@@112) 0)
 :pattern ( ($generated@@99 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (! ($generated@@26 $generated@@39 $generated@@113 $generated@@35)
 :pattern ( ($generated@@26 $generated@@39 $generated@@113 $generated@@35))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@28 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@28 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@25 ($generated@@28 $generated@@116)) $generated@@1)
 :pattern ( ($generated@@28 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@47 $generated@@118 ($generated@@76 $generated@@118 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@76 $generated@@118 $generated@@117))
)))
(assert  (=> (< 0 $generated@@79) (forall (($generated@@119 T@U) ) (!  (=> (and (or (not (= $generated@@119 $generated@@46)) (not true)) ($generated@@26 $generated@@39 $generated@@119 $generated@@33)) ($generated@@26 $generated@@11 ($generated@@15 ($generated@@80 $generated@@119)) $generated))
 :pattern ( ($generated@@80 $generated@@119))
))))
(assert (forall (($generated@@120 T@U) ) (!  (and (= (= ($generated@@107 $generated@@120) 0) (= $generated@@120 $generated@@111)) (=> (or (not (= ($generated@@107 $generated@@120) 0)) (not true)) (exists (($generated@@121 T@U) ) (! (< 0 ($generated@@99 $generated@@120 $generated@@121))
 :pattern ( ($generated@@99 $generated@@120 $generated@@121))
))))
 :pattern ( ($generated@@107 $generated@@120))
)))
(assert  (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@122 $generated@@125 $generated@@126 $generated@@127 ($generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@122 $generated@@132 $generated@@133 $generated@@134 ($generated@@124 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@122 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@122 $generated@@141 $generated@@142 $generated@@143 ($generated@@124 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@122 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@14 ($generated@@122 $generated@@39 $generated@@49 $generated@@10 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@151 $generated@@154) $generated@@152)))) $generated@@153))
 :pattern ( ($generated@@122 $generated@@39 $generated@@49 $generated@@10 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@87 $generated@@156 ($generated@@28 $generated@@157)) (and (= ($generated@@76 $generated@@27 ($generated@@47 $generated@@27 $generated@@156)) $generated@@156) ($generated@@26 $generated@@27 ($generated@@47 $generated@@27 $generated@@156) ($generated@@28 $generated@@157))))
 :pattern ( ($generated@@87 $generated@@156 ($generated@@28 $generated@@157)))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> ($generated@@26 $generated@@39 $generated@@158 $generated@@33) ($generated@@26 $generated@@39 $generated@@158 $generated@@35))
 :pattern ( ($generated@@26 $generated@@39 $generated@@158 $generated@@33))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> ($generated@@87 $generated@@159 $generated@@33) ($generated@@87 $generated@@159 $generated@@35))
 :pattern ( ($generated@@87 $generated@@159 $generated@@33))
)))
(assert (= ($generated@@25 $generated@@35) $generated@@3))
(assert (= ($generated@@160 $generated@@35) $generated@@7))
(assert (= ($generated@@25 $generated@@40) $generated@@4))
(assert (= ($generated@@160 $generated@@40) $generated@@7))
(assert (= ($generated@@25 $generated@@43) $generated@@5))
(assert (= ($generated@@160 $generated@@43) $generated@@8))
(assert (= ($generated@@25 $generated@@33) $generated@@6))
(assert (= ($generated@@160 $generated@@33) $generated@@8))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@26 $generated@@39 $generated@@163 $generated@@33)  (or (= $generated@@163 $generated@@46) ($generated@@161 ($generated@@162 $generated@@163))))
 :pattern ( ($generated@@26 $generated@@39 $generated@@163 $generated@@33))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@96 $generated@@164 $generated@@165) (forall (($generated@@166 T@U) ) (! (= ($generated@@99 $generated@@164 $generated@@166) ($generated@@99 $generated@@165 $generated@@166))
 :pattern ( ($generated@@99 $generated@@164 $generated@@166))
 :pattern ( ($generated@@99 $generated@@165 $generated@@166))
)))
 :pattern ( ($generated@@96 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@38 $generated@@27 $generated@@167 ($generated@@28 $generated@@168) $generated@@169) (forall (($generated@@170 T@U) ) (!  (=> (< 0 ($generated@@99 $generated@@167 $generated@@170)) ($generated@@32 $generated@@170 $generated@@168 $generated@@169))
 :pattern ( ($generated@@99 $generated@@167 $generated@@170))
)))
 :pattern ( ($generated@@38 $generated@@27 $generated@@167 ($generated@@28 $generated@@168) $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! ($generated@@38 $generated@@11 $generated@@172 $generated $generated@@171)
 :pattern ( ($generated@@38 $generated@@11 $generated@@172 $generated $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! ($generated@@26 $generated@@11 $generated@@173 $generated)
 :pattern ( ($generated@@26 $generated@@11 $generated@@173 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@182 true))
(let (($generated@@183  (=> (and (=> (> ($generated@@99 $generated@@174 ($generated@@76 $generated@@39 $generated@@175)) 0) (<= ($generated@@80 $generated@@176) ($generated@@80 $generated@@175))) (= (ControlFlow 0 5) 1)) $generated@@182)))
(let (($generated@@184  (=> (> ($generated@@99 $generated@@174 ($generated@@76 $generated@@39 $generated@@175)) 0) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@176 $generated@@46)) (not true))) (=> (or (not (= $generated@@176 $generated@@46)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@175 $generated@@46)) (not true))) (=> (or (not (= $generated@@175 $generated@@46)) (not true)) (=> (and (<= ($generated@@80 $generated@@176) ($generated@@80 $generated@@175)) (= (ControlFlow 0 2) 1)) $generated@@182))))))))
(let (($generated@@185  (=> (and (= $generated@@177 ($generated@@123 $generated@@46 $generated@@178 $generated@@2 false)) (not ($generated@@96 $generated@@174 $generated@@111))) (=> (and (and ($generated@@34 $generated@@179) ($generated@@180 $generated@@179)) (= $generated@@178 $generated@@179)) (=> (and (and (and ($generated@@26 $generated@@39 $generated@@176 $generated@@43) ($generated@@38 $generated@@39 $generated@@176 $generated@@43 $generated@@179)) (> ($generated@@99 $generated@@174 ($generated@@76 $generated@@39 $generated@@176)) 0)) (and ($generated@@26 $generated@@39 $generated@@175 $generated@@43) ($generated@@38 $generated@@39 $generated@@175 $generated@@43 $generated@@179))) (and (=> (= (ControlFlow 0 6) 2) $generated@@184) (=> (= (ControlFlow 0 6) 5) $generated@@183)))))))
(let (($generated@@186  (=> (and (and (and ($generated@@34 $generated@@178) ($generated@@180 $generated@@178)) (and ($generated@@26 $generated@@27 $generated@@174 ($generated@@28 $generated@@43)) ($generated@@38 $generated@@27 $generated@@174 ($generated@@28 $generated@@43) $generated@@178))) (and (and ($generated@@26 $generated@@39 $generated@@181 $generated@@43) ($generated@@38 $generated@@39 $generated@@181 $generated@@43 $generated@@178)) (and (= 1 $generated@@79) (= (ControlFlow 0 7) 6)))) $generated@@185)))
$generated@@186))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
