(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@77 (T@T T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@131 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@29) $generated@@31) ($generated@@25 $generated@@26 $generated@@30 ($generated@@28 $generated@@29) $generated@@31))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@29) $generated@@31))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 ($generated@@28 $generated@@29) $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@35 ($generated@@32 $generated@@34) $generated@@36) ($generated@@25 $generated@@26 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
 :pattern ( ($generated@@25 $generated@@26 $generated@@35 ($generated@@32 $generated@@34) $generated@@36))
 :pattern ( ($generated@@25 $generated@@26 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@40 ($generated@@37 $generated@@39) $generated@@41) ($generated@@25 $generated@@26 $generated@@40 ($generated@@38 $generated@@39) $generated@@41))
 :pattern ( ($generated@@25 $generated@@26 $generated@@40 ($generated@@37 $generated@@39) $generated@@41))
 :pattern ( ($generated@@25 $generated@@26 $generated@@40 ($generated@@38 $generated@@39) $generated@@41))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@9 $generated@@45) 4)) (= ($generated@@9 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@9 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@69 ($generated@@28 $generated@@68) $generated@@70)  (or (= $generated@@69 $generated@@42) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@26 ($generated@@47 $generated@@45 $generated@@46) $generated@@70 $generated@@69) $generated)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@69 ($generated@@28 $generated@@68) $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@72 ($generated@@33 $generated@@71) $generated@@73)  (or (= $generated@@72 $generated@@42) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@26 ($generated@@47 $generated@@45 $generated@@46) $generated@@73 $generated@@72) $generated)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@72 ($generated@@33 $generated@@71) $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@75 ($generated@@38 $generated@@74) $generated@@76)  (or (= $generated@@75 $generated@@42) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@26 ($generated@@47 $generated@@45 $generated@@46) $generated@@76 $generated@@75) $generated)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@75 ($generated@@38 $generated@@74) $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> ($generated@@77 $generated@@26 $generated@@79 ($generated@@33 $generated@@78)) ($generated@@77 $generated@@26 $generated@@79 ($generated@@28 $generated@@78)))
 :pattern ( ($generated@@77 $generated@@26 $generated@@79 ($generated@@33 $generated@@78)))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@80 $generated@@82 ($generated@@33 $generated@@81)) ($generated@@80 $generated@@82 ($generated@@28 $generated@@81)))
 :pattern ( ($generated@@80 $generated@@82 ($generated@@33 $generated@@81)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@77 $generated@@26 $generated@@84 ($generated@@38 $generated@@83)) ($generated@@77 $generated@@26 $generated@@84 ($generated@@33 $generated@@83)))
 :pattern ( ($generated@@77 $generated@@26 $generated@@84 ($generated@@38 $generated@@83)))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> ($generated@@80 $generated@@86 ($generated@@38 $generated@@85)) ($generated@@80 $generated@@86 ($generated@@33 $generated@@85)))
 :pattern ( ($generated@@80 $generated@@86 ($generated@@38 $generated@@85)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@43 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@43 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@77 $generated@@26 $generated@@91 ($generated@@27 $generated@@90))  (and ($generated@@77 $generated@@26 $generated@@91 ($generated@@28 $generated@@90)) (or (not (= $generated@@91 $generated@@42)) (not true))))
 :pattern ( ($generated@@77 $generated@@26 $generated@@91 ($generated@@27 $generated@@90)))
 :pattern ( ($generated@@77 $generated@@26 $generated@@91 ($generated@@28 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@77 $generated@@26 $generated@@93 ($generated@@32 $generated@@92))  (and ($generated@@77 $generated@@26 $generated@@93 ($generated@@33 $generated@@92)) (or (not (= $generated@@93 $generated@@42)) (not true))))
 :pattern ( ($generated@@77 $generated@@26 $generated@@93 ($generated@@32 $generated@@92)))
 :pattern ( ($generated@@77 $generated@@26 $generated@@93 ($generated@@33 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@77 $generated@@26 $generated@@95 ($generated@@37 $generated@@94))  (and ($generated@@77 $generated@@26 $generated@@95 ($generated@@38 $generated@@94)) (or (not (= $generated@@95 $generated@@42)) (not true))))
 :pattern ( ($generated@@77 $generated@@26 $generated@@95 ($generated@@37 $generated@@94)))
 :pattern ( ($generated@@77 $generated@@26 $generated@@95 ($generated@@38 $generated@@94)))
)))
(assert (forall (($generated@@98 T@U) ) (!  (and (= ($generated@@96 ($generated@@37 $generated@@98)) $generated@@0) (= ($generated@@97 ($generated@@37 $generated@@98)) $generated@@6))
 :pattern ( ($generated@@37 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@96 ($generated@@27 $generated@@99)) $generated@@1) (= ($generated@@97 ($generated@@27 $generated@@99)) $generated@@7))
 :pattern ( ($generated@@27 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (!  (and (= ($generated@@96 ($generated@@32 $generated@@100)) $generated@@2) (= ($generated@@97 ($generated@@32 $generated@@100)) $generated@@8))
 :pattern ( ($generated@@32 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (!  (and (= ($generated@@96 ($generated@@28 $generated@@101)) $generated@@3) (= ($generated@@97 ($generated@@28 $generated@@101)) $generated@@7))
 :pattern ( ($generated@@28 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (!  (and (= ($generated@@96 ($generated@@33 $generated@@102)) $generated@@4) (= ($generated@@97 ($generated@@33 $generated@@102)) $generated@@8))
 :pattern ( ($generated@@33 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (and (= ($generated@@96 ($generated@@38 $generated@@103)) $generated@@5) (= ($generated@@97 ($generated@@38 $generated@@103)) $generated@@6))
 :pattern ( ($generated@@38 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@105 ($generated@@33 $generated@@104) $generated@@106) ($generated@@25 $generated@@26 $generated@@105 ($generated@@28 $generated@@104) $generated@@106))
 :pattern ( ($generated@@25 $generated@@26 $generated@@105 ($generated@@33 $generated@@104) $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@108 ($generated@@38 $generated@@107) $generated@@109) ($generated@@25 $generated@@26 $generated@@108 ($generated@@33 $generated@@107) $generated@@109))
 :pattern ( ($generated@@25 $generated@@26 $generated@@108 ($generated@@38 $generated@@107) $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@80 ($generated@@87 $generated@@112 $generated@@110) $generated@@111) ($generated@@77 $generated@@112 $generated@@110 $generated@@111))
 :pattern ( ($generated@@80 ($generated@@87 $generated@@112 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 ($generated@@37 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@37 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@115 ($generated@@27 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@27 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@32 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@32 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@28 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@28 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@33 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@33 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@38 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@38 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@43 $generated@@126 ($generated@@87 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@87 $generated@@126 $generated@@125))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@77 $generated@@26 $generated@@130 ($generated@@28 $generated@@129))  (or (= $generated@@130 $generated@@42) ($generated@@127 ($generated@@128 $generated@@130) $generated@@129)))
 :pattern ( ($generated@@77 $generated@@26 $generated@@130 ($generated@@28 $generated@@129)))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@77 $generated@@26 $generated@@133 ($generated@@33 $generated@@132))  (or (= $generated@@133 $generated@@42) ($generated@@131 ($generated@@128 $generated@@133) $generated@@132)))
 :pattern ( ($generated@@77 $generated@@26 $generated@@133 ($generated@@33 $generated@@132)))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@77 $generated@@26 $generated@@136 ($generated@@38 $generated@@135))  (or (= $generated@@136 $generated@@42) ($generated@@134 ($generated@@128 $generated@@136) $generated@@135)))
 :pattern ( ($generated@@77 $generated@@26 $generated@@136 ($generated@@38 $generated@@135)))
)))
(assert  (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@137 $generated@@140 $generated@@141 $generated@@142 ($generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@145 $generated@@146) $generated@@143)
 :weight 0
)) (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@137 $generated@@147 $generated@@148 $generated@@149 ($generated@@139 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@137 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@137 $generated@@156 $generated@@157 $generated@@158 ($generated@@139 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@137 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@14 ($generated@@137 $generated@@26 $generated@@45 $generated@@10 ($generated@@138 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (or (not (= $generated@@169 $generated@@165)) (not true)) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@26 ($generated@@47 $generated@@45 $generated@@46) $generated@@166 $generated@@169) $generated@@167)))) $generated@@168))
 :pattern ( ($generated@@137 $generated@@26 $generated@@45 $generated@@10 ($generated@@138 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@80 $generated@@172 ($generated@@37 $generated@@171)) (and (= ($generated@@87 $generated@@26 ($generated@@43 $generated@@26 $generated@@172)) $generated@@172) ($generated@@77 $generated@@26 ($generated@@43 $generated@@26 $generated@@172) ($generated@@37 $generated@@171))))
 :pattern ( ($generated@@80 $generated@@172 ($generated@@37 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@80 $generated@@174 ($generated@@27 $generated@@173)) (and (= ($generated@@87 $generated@@26 ($generated@@43 $generated@@26 $generated@@174)) $generated@@174) ($generated@@77 $generated@@26 ($generated@@43 $generated@@26 $generated@@174) ($generated@@27 $generated@@173))))
 :pattern ( ($generated@@80 $generated@@174 ($generated@@27 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@80 $generated@@176 ($generated@@32 $generated@@175)) (and (= ($generated@@87 $generated@@26 ($generated@@43 $generated@@26 $generated@@176)) $generated@@176) ($generated@@77 $generated@@26 ($generated@@43 $generated@@26 $generated@@176) ($generated@@32 $generated@@175))))
 :pattern ( ($generated@@80 $generated@@176 ($generated@@32 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@80 $generated@@178 ($generated@@28 $generated@@177)) (and (= ($generated@@87 $generated@@26 ($generated@@43 $generated@@26 $generated@@178)) $generated@@178) ($generated@@77 $generated@@26 ($generated@@43 $generated@@26 $generated@@178) ($generated@@28 $generated@@177))))
 :pattern ( ($generated@@80 $generated@@178 ($generated@@28 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@80 $generated@@180 ($generated@@33 $generated@@179)) (and (= ($generated@@87 $generated@@26 ($generated@@43 $generated@@26 $generated@@180)) $generated@@180) ($generated@@77 $generated@@26 ($generated@@43 $generated@@26 $generated@@180) ($generated@@33 $generated@@179))))
 :pattern ( ($generated@@80 $generated@@180 ($generated@@33 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@80 $generated@@182 ($generated@@38 $generated@@181)) (and (= ($generated@@87 $generated@@26 ($generated@@43 $generated@@26 $generated@@182)) $generated@@182) ($generated@@77 $generated@@26 ($generated@@43 $generated@@26 $generated@@182) ($generated@@38 $generated@@181))))
 :pattern ( ($generated@@80 $generated@@182 ($generated@@38 $generated@@181)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@195  (=> (and (= $generated@@183 $generated@@184) (= $generated@@185 $generated@@186)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@187 ($generated@@138 $generated@@42 $generated@@188 $generated false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ) true))))))
(let (($generated@@198  (=> (and (and (and ($generated@@189 $generated@@188) ($generated@@190 $generated@@188)) (and (or (not (= $generated@@191 $generated@@42)) (not true)) (and ($generated@@77 $generated@@26 $generated@@191 ($generated@@37 $generated@@184)) ($generated@@25 $generated@@26 $generated@@191 ($generated@@37 $generated@@184) $generated@@188)))) (and (and ($generated@@80 $generated@@192 $generated@@184) ($generated@@80 $generated@@193 $generated@@186)) (and (= 0 $generated@@194) (= (ControlFlow 0 4) 2)))) $generated@@195)))
$generated@@198)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
