(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U Int) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () Int)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@45 (Int) Int)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@65 (Int) T@U)
(declare-fun $generated@@66 (Int) Bool)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (Int) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@112 (T@U) Int)
(declare-fun $generated@@114 (T@U) Int)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@121 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 (T@T T@T) T@T)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@1))
(assert (= ($generated@@25 $generated@@0) $generated@@2))
(assert (= ($generated@@9 $generated@@31) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 Int) ) (!  (=> (and (<= 0 $generated@@33) (< $generated@@33 ($generated@@28 $generated@@32))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@32 $generated@@33))) ($generated@@29 ($generated@@27 $generated@@32))))
 :pattern ( ($generated@@26 $generated@@32 $generated@@33) ($generated@@27 $generated@@32))
)))
(assert (= ($generated@@28 $generated@@34) 0))
(assert (= ($generated@@35 $generated@@36) $generated@@7))
(assert ($generated@@37 $generated@@31 $generated@@36 $generated@@38))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@44 T@U) ) (!  (=> (or ($generated@@41 $generated@@44) (and (< 1 $generated@@39) (and ($generated@@37 $generated@@31 $generated@@44 $generated@@38) (not ($generated@@42 $generated@@44))))) (= ($generated@@40 $generated@@44) ($generated@@43 $generated@@44)))
 :pattern ( ($generated@@40 $generated@@44))
))))
(assert (forall (($generated@@46 Int) ) (! (= ($generated@@45 $generated@@46) $generated@@46)
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@49 $generated@@48))
)))
(assert (= ($generated@@9 $generated@@50) 4))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (and ($generated@@37 $generated@@50 $generated@@54 ($generated@@52 $generated@@56)) ($generated@@53 $generated@@55 $generated@@56)) ($generated@@37 $generated@@50 ($generated@@51 $generated@@54 $generated@@55) ($generated@@52 $generated@@56)))
 :pattern ( ($generated@@37 $generated@@50 ($generated@@51 $generated@@54 $generated@@55) ($generated@@52 $generated@@56)))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@58) (= ($generated@@35 $generated@@58) $generated@@6))
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@59 $generated@@60) (= ($generated@@35 $generated@@60) $generated@@7))
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 ($generated@@30 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@30 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@59 $generated@@64) (= $generated@@64 $generated@@36))
 :pattern ( ($generated@@59 $generated@@64))
)))
(assert (= ($generated@@9 $generated@@67) 5))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@69 Int) ) (!  (=> (or ($generated@@66 $generated@@69) (< 1 $generated@@39)) (= ($generated@@65 $generated@@69) ($generated@@47 $generated@@31 ($generated@@27 ($generated@@47 $generated@@50 ($generated@@51 ($generated@@51 ($generated@@51 $generated@@34 ($generated@@61 $generated@@67 ($generated@@68 102))) ($generated@@61 $generated@@67 ($generated@@68 111))) ($generated@@61 $generated@@67 ($generated@@68 111))))))))
 :pattern ( ($generated@@65 $generated@@69))
))))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@72 T@U) ) (!  (=> (or ($generated@@71 $generated@@72) (and (< 1 $generated@@39) (and ($generated@@37 $generated@@31 $generated@@72 $generated@@38) ($generated@@42 $generated@@72)))) (= ($generated@@70 $generated@@72) ($generated@@47 $generated@@31 $generated@@36)))
 :pattern ( ($generated@@70 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@57 $generated@@73) (exists (($generated@@74 T@U) ) (= $generated@@73 ($generated@@27 $generated@@74))))
 :pattern ( ($generated@@57 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@28 ($generated@@51 $generated@@75 $generated@@76)) (+ 1 ($generated@@28 $generated@@75)))
 :pattern ( ($generated@@51 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@77 ($generated@@61 $generated@@82 $generated@@79) $generated@@80 $generated@@81) ($generated@@78 $generated@@82 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@77 ($generated@@61 $generated@@82 $generated@@79) $generated@@80 $generated@@81))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@83 Int) ) (!  (=> (or ($generated@@66 ($generated@@45 $generated@@83)) (< 1 $generated@@39)) (= ($generated@@65 ($generated@@45 $generated@@83)) ($generated@@47 $generated@@31 ($generated@@27 ($generated@@47 $generated@@50 ($generated@@51 ($generated@@51 ($generated@@51 $generated@@34 ($generated@@61 $generated@@67 ($generated@@68 102))) ($generated@@61 $generated@@67 ($generated@@68 111))) ($generated@@61 $generated@@67 ($generated@@68 111))))))))
 :weight 3
 :pattern ( ($generated@@65 ($generated@@45 $generated@@83)))
))))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@53 $generated@@84 $generated@@38) (and (= ($generated@@61 $generated@@31 ($generated@@30 $generated@@31 $generated@@84)) $generated@@84) ($generated@@37 $generated@@31 ($generated@@30 $generated@@31 $generated@@84) $generated@@38)))
 :pattern ( ($generated@@53 $generated@@84 $generated@@38))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 Int) ($generated@@87 T@U) ) (!  (and (=> (= $generated@@86 ($generated@@28 $generated@@85)) (= ($generated@@26 ($generated@@51 $generated@@85 $generated@@87) $generated@@86) $generated@@87)) (=> (or (not (= $generated@@86 ($generated@@28 $generated@@85))) (not true)) (= ($generated@@26 ($generated@@51 $generated@@85 $generated@@87) $generated@@86) ($generated@@26 $generated@@85 $generated@@86))))
 :pattern ( ($generated@@26 ($generated@@51 $generated@@85 $generated@@87) $generated@@86))
)))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@89 T@U) ) (!  (=> (or ($generated@@88 $generated@@89) (and (< 0 $generated@@39) ($generated@@37 $generated@@31 $generated@@89 $generated@@38))) (= ($generated@@42 $generated@@89) ($generated@@59 $generated@@89)))
 :pattern ( ($generated@@42 $generated@@89))
))))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@90 T@U) ) (!  (=> (or ($generated@@71 ($generated@@47 $generated@@31 $generated@@90)) (and (< 1 $generated@@39) (and ($generated@@37 $generated@@31 $generated@@90 $generated@@38) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@13 ($generated@@42 ($generated@@47 $generated@@31 $generated@@90)))))))) (= ($generated@@70 ($generated@@47 $generated@@31 $generated@@90)) ($generated@@47 $generated@@31 $generated@@36)))
 :weight 3
 :pattern ( ($generated@@70 ($generated@@47 $generated@@31 $generated@@90)))
))))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@91 T@U) ) (!  (=> (or ($generated@@41 $generated@@91) (and (< 1 $generated@@39) (and ($generated@@37 $generated@@31 $generated@@91 $generated@@38) (not ($generated@@42 $generated@@91))))) ($generated@@37 $generated@@50 ($generated@@40 $generated@@91) ($generated@@52 $generated)))
 :pattern ( ($generated@@40 $generated@@91))
))))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@37 $generated@@31 $generated@@92 $generated@@38) (or ($generated@@57 $generated@@92) ($generated@@59 $generated@@92)))
 :pattern ( ($generated@@59 $generated@@92) ($generated@@37 $generated@@31 $generated@@92 $generated@@38))
 :pattern ( ($generated@@57 $generated@@92) ($generated@@37 $generated@@31 $generated@@92 $generated@@38))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@53 $generated@@93 $generated@@0) (and (= ($generated@@61 $generated@@11 ($generated@@30 $generated@@11 $generated@@93)) $generated@@93) ($generated@@37 $generated@@11 ($generated@@30 $generated@@11 $generated@@93) $generated@@0)))
 :pattern ( ($generated@@53 $generated@@93 $generated@@0))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@53 $generated@@94 $generated) (and (= ($generated@@61 $generated@@67 ($generated@@30 $generated@@67 $generated@@94)) $generated@@94) ($generated@@37 $generated@@67 ($generated@@30 $generated@@67 $generated@@94) $generated)))
 :pattern ( ($generated@@53 $generated@@94 $generated))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@95 T@U) ) (!  (=> (or ($generated@@71 $generated@@95) (and (< 1 $generated@@39) (and ($generated@@37 $generated@@31 $generated@@95 $generated@@38) ($generated@@42 $generated@@95)))) ($generated@@37 $generated@@31 ($generated@@70 $generated@@95) $generated@@38))
 :pattern ( ($generated@@70 $generated@@95))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@53 ($generated@@61 $generated@@98 $generated@@96) $generated@@97) ($generated@@37 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@53 ($generated@@61 $generated@@98 $generated@@96) $generated@@97))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@99 T@U) ) (!  (=> (or ($generated@@41 ($generated@@47 $generated@@31 $generated@@99)) (and (< 1 $generated@@39) (and ($generated@@37 $generated@@31 $generated@@99 $generated@@38) (not ($generated@@14 ($generated@@47 $generated@@10 ($generated@@13 ($generated@@42 ($generated@@47 $generated@@31 $generated@@99))))))))) (= ($generated@@40 ($generated@@47 $generated@@31 $generated@@99)) ($generated@@47 $generated@@50 ($generated@@43 ($generated@@47 $generated@@31 $generated@@99)))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@47 $generated@@31 $generated@@99)))
))))
(assert (forall (($generated@@100 T@U) ) (! (<= 0 ($generated@@28 $generated@@100))
 :pattern ( ($generated@@28 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@78 $generated@@50 $generated@@101 ($generated@@52 $generated@@102) $generated@@103) (forall (($generated@@104 Int) ) (!  (=> (and (<= 0 $generated@@104) (< $generated@@104 ($generated@@28 $generated@@101))) ($generated@@77 ($generated@@26 $generated@@101 $generated@@104) $generated@@102 $generated@@103))
 :pattern ( ($generated@@26 $generated@@101 $generated@@104))
)))
 :pattern ( ($generated@@78 $generated@@50 $generated@@101 ($generated@@52 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 ($generated@@52 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@52 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@25 ($generated@@52 $generated@@107)) $generated@@3)
 :pattern ( ($generated@@52 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@35 ($generated@@27 $generated@@108)) $generated@@6)
 :pattern ( ($generated@@27 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@43 ($generated@@27 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@27 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@30 $generated@@111 ($generated@@61 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@61 $generated@@111 $generated@@110))
)))
(assert (forall (($generated@@113 Int) ) (!  (=> (or (and (<= 0 $generated@@113) (< $generated@@113 55296)) (and (<= 57344 $generated@@113) (< $generated@@113 1114112))) (= ($generated@@112 ($generated@@68 $generated@@113)) $generated@@113))
 :pattern ( ($generated@@68 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (< ($generated@@114 $generated@@115) ($generated@@29 ($generated@@27 $generated@@115)))
 :pattern ( ($generated@@27 $generated@@115))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@116 Int) ) (!  (=> (or ($generated@@66 $generated@@116) (< 1 $generated@@39)) ($generated@@37 $generated@@31 ($generated@@65 $generated@@116) $generated@@38))
 :pattern ( ($generated@@65 $generated@@116))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@117 $generated@@128 $generated@@129 $generated@@130 ($generated@@124 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@133 $generated@@134) $generated@@131)
 :weight 0
)) (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@117 $generated@@135 $generated@@136 $generated@@137 ($generated@@124 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@117 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@117 $generated@@144 $generated@@145 $generated@@146 ($generated@@124 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)))) (= ($generated@@9 $generated@@118) 6)) (= ($generated@@9 $generated@@119) 7)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@121 $generated@@153 $generated@@154 ($generated@@125 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@155) $generated@@157) $generated@@155)
 :weight 0
))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@162 $generated@@163) (= ($generated@@121 $generated@@158 $generated@@159 ($generated@@125 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@160) $generated@@163) ($generated@@121 $generated@@158 $generated@@159 $generated@@161 $generated@@163)))
 :weight 0
))) (= ($generated@@9 $generated@@122) 8)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@9 ($generated@@123 $generated@@164 $generated@@165)) 9))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@126 ($generated@@123 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@123 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@127 ($generated@@123 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@123 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Bool) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@14 ($generated@@117 $generated@@118 $generated@@119 $generated@@10 ($generated@@120 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))  (=> (and (or (not (= $generated@@174 $generated@@170)) (not true)) ($generated@@14 ($generated@@30 $generated@@10 ($generated@@121 $generated@@119 $generated@@122 ($generated@@121 $generated@@118 ($generated@@123 $generated@@119 $generated@@122) $generated@@171 $generated@@174) $generated@@172)))) $generated@@173))
 :pattern ( ($generated@@117 $generated@@118 $generated@@119 $generated@@10 ($generated@@120 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (and (= ($generated@@176 ($generated@@51 $generated@@178 $generated@@179)) $generated@@178) (= ($generated@@177 ($generated@@51 $generated@@178 $generated@@179)) $generated@@179))
 :pattern ( ($generated@@51 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@53 $generated@@180 ($generated@@52 $generated@@181)) (and (= ($generated@@61 $generated@@50 ($generated@@30 $generated@@50 $generated@@180)) $generated@@180) ($generated@@37 $generated@@50 ($generated@@30 $generated@@50 $generated@@180) ($generated@@52 $generated@@181))))
 :pattern ( ($generated@@53 $generated@@180 ($generated@@52 $generated@@181)))
)))
(assert (forall (($generated@@182 T@U) ) (!  (and (= ($generated@@68 ($generated@@112 $generated@@182)) $generated@@182) (or (and (<= 0 ($generated@@112 $generated@@182)) (< ($generated@@112 $generated@@182) 55296)) (and (<= 57344 ($generated@@112 $generated@@182)) (< ($generated@@112 $generated@@182) 1114112))))
 :pattern ( ($generated@@112 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and ($generated@@183 $generated@@185) ($generated@@37 $generated@@31 $generated@@184 $generated@@38)) ($generated@@78 $generated@@31 $generated@@184 $generated@@38 $generated@@185))
 :pattern ( ($generated@@78 $generated@@31 $generated@@184 $generated@@38 $generated@@185))
)))
(assert (= ($generated@@25 $generated@@38) $generated@@5))
(assert (= ($generated@@186 $generated@@38) $generated@@8))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@187 T@U) ) (!  (=> (or ($generated@@88 ($generated@@47 $generated@@31 $generated@@187)) (and (< 0 $generated@@39) ($generated@@37 $generated@@31 $generated@@187 $generated@@38))) (= ($generated@@42 ($generated@@47 $generated@@31 $generated@@187)) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@13 ($generated@@59 ($generated@@47 $generated@@31 $generated@@187)))))))
 :weight 3
 :pattern ( ($generated@@42 ($generated@@47 $generated@@31 $generated@@187)))
))))
(assert (= $generated@@36 ($generated@@47 $generated@@31 $generated@@36)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@37 $generated@@31 ($generated@@27 $generated@@188) $generated@@38) ($generated@@37 $generated@@50 $generated@@188 ($generated@@52 $generated)))
 :pattern ( ($generated@@37 $generated@@31 ($generated@@27 $generated@@188) $generated@@38))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and ($generated@@183 $generated@@190) (and ($generated@@57 $generated@@189) ($generated@@78 $generated@@31 $generated@@189 $generated@@38 $generated@@190))) ($generated@@78 $generated@@50 ($generated@@43 $generated@@189) ($generated@@52 $generated) $generated@@190))
 :pattern ( ($generated@@78 $generated@@50 ($generated@@43 $generated@@189) ($generated@@52 $generated) $generated@@190))
)))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@61 $generated@@11 ($generated@@15 ($generated@@45 $generated@@191))) ($generated@@47 $generated@@122 ($generated@@61 $generated@@11 ($generated@@15 $generated@@191))))
 :pattern ( ($generated@@61 $generated@@11 ($generated@@15 ($generated@@45 $generated@@191))))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@27 ($generated@@47 $generated@@50 $generated@@192)) ($generated@@47 $generated@@31 ($generated@@27 $generated@@192)))
 :pattern ( ($generated@@27 ($generated@@47 $generated@@50 $generated@@192)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@T) ) (! (= ($generated@@61 $generated@@194 ($generated@@47 $generated@@194 $generated@@193)) ($generated@@47 $generated@@122 ($generated@@61 $generated@@194 $generated@@193)))
 :pattern ( ($generated@@61 $generated@@194 ($generated@@47 $generated@@194 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> (= ($generated@@28 $generated@@195) 0) (= $generated@@195 $generated@@34))
 :pattern ( ($generated@@28 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! ($generated@@78 $generated@@11 $generated@@197 $generated@@0 $generated@@196)
 :pattern ( ($generated@@78 $generated@@11 $generated@@197 $generated@@0 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! ($generated@@78 $generated@@67 $generated@@199 $generated $generated@@198)
 :pattern ( ($generated@@78 $generated@@67 $generated@@199 $generated $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@37 $generated@@50 $generated@@200 ($generated@@52 $generated@@201)) (forall (($generated@@202 Int) ) (!  (=> (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@28 $generated@@200))) ($generated@@53 ($generated@@26 $generated@@200 $generated@@202) $generated@@201))
 :pattern ( ($generated@@26 $generated@@200 $generated@@202))
)))
 :pattern ( ($generated@@37 $generated@@50 $generated@@200 ($generated@@52 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 Int) ) (!  (=> (and (<= 0 $generated@@204) (< $generated@@204 ($generated@@28 $generated@@203))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@203 $generated@@204))) ($generated@@114 $generated@@203)))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@203 $generated@@204))))
)))
(assert (forall (($generated@@205 T@U) ) (! ($generated@@37 $generated@@11 $generated@@205 $generated@@0)
 :pattern ( ($generated@@37 $generated@@11 $generated@@205 $generated@@0))
)))
(assert (forall (($generated@@206 T@U) ) (! ($generated@@37 $generated@@67 $generated@@206 $generated)
 :pattern ( ($generated@@37 $generated@@67 $generated@@206 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@218  (=> (not ($generated@@42 $generated@@207)) (=> (and ($generated@@77 ($generated@@61 $generated@@31 $generated@@207) $generated@@38 $generated@@208) (= (ControlFlow 0 4) (- 0 3))) (not ($generated@@42 $generated@@207))))))
(let (($generated@@219  (=> ($generated@@42 $generated@@207) (=> (and (and ($generated@@77 ($generated@@61 $generated@@31 $generated@@207) $generated@@38 $generated@@208) (= (ControlFlow 0 2) (- 0 1))) ($generated@@88 $generated@@207)) (or ($generated@@42 $generated@@207) ($generated@@59 $generated@@207))))))
(let (($generated@@220  (=> (and (= $generated@@209 ($generated@@120 $generated@@210 $generated@@208 $generated@@4 false)) (= $generated@@211 ($generated@@47 $generated@@50 $generated@@34))) (=> (and (and (and (and ($generated@@37 $generated@@31 $generated@@212 $generated@@38) ($generated@@78 $generated@@31 $generated@@212 $generated@@38 $generated@@208)) ($generated@@78 $generated@@11 ($generated@@15 $generated@@213) $generated@@0 $generated@@208)) (and ($generated@@66 $generated@@213) ($generated@@66 $generated@@213))) (and (and (= $generated@@207 ($generated@@65 $generated@@213)) ($generated@@77 ($generated@@61 $generated@@31 $generated@@207) $generated@@38 $generated@@208)) (and ($generated@@88 $generated@@207) ($generated@@88 $generated@@207)))) (and (=> (= (ControlFlow 0 5) 2) $generated@@219) (=> (= (ControlFlow 0 5) 4) $generated@@218))))))
(let (($generated@@221  (=> (and (and (and (and ($generated@@183 $generated@@208) ($generated@@214 $generated@@208)) (and ($generated@@37 $generated@@31 $generated@@215 $generated@@38) ($generated@@78 $generated@@31 $generated@@215 $generated@@38 $generated@@208))) (and (and ($generated@@37 $generated@@50 $generated@@216 ($generated@@52 $generated)) ($generated@@78 $generated@@50 $generated@@216 ($generated@@52 $generated) $generated@@208)) true)) (and (and (and ($generated@@37 $generated@@31 $generated@@217 $generated@@38) ($generated@@78 $generated@@31 $generated@@217 $generated@@38 $generated@@208)) true) (and (= 2 $generated@@39) (= (ControlFlow 0 6) 5)))) $generated@@220)))
$generated@@221)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
