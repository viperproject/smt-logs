(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@72 (Int) Int)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@115 (T@U Int) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@129 (T@U) Bool)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@27)) (not true)) (= ($generated@@28 $generated@@31) ($generated@@26 $generated@@30))) ($generated@@29 $generated@@10 ($generated@@14 ($generated@@25 $generated@@31)) $generated@@0))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@30))
)))
(assert (= ($generated@@8 $generated@@33) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35) $generated@@37) ($generated@@32 $generated@@33 $generated@@36 ($generated@@26 $generated@@35) $generated@@37))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 ($generated@@26 $generated@@35) $generated@@37))
)))
(assert (= ($generated@@38 $generated@@39) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@41 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@41 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@8 $generated@@42) 4)) (= ($generated@@8 $generated@@43) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@8 ($generated@@44 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@44 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@66 ($generated@@26 $generated@@65) $generated@@67)  (or (= $generated@@66 $generated@@27) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@67 $generated@@66) $generated@@4)))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@66 ($generated@@26 $generated@@65) $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@68 $generated@@69 $generated@@70) (forall (($generated@@71 T@U) ) (!  (=> ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@69 $generated@@71) $generated@@4))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@70 $generated@@71) $generated@@4))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@70 $generated@@71) $generated@@4))
)))
 :pattern ( ($generated@@68 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 Int) ) (! (= ($generated@@72 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@40 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@40 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@29 $generated@@33 $generated@@81 ($generated@@34 $generated@@80))  (and ($generated@@29 $generated@@33 $generated@@81 ($generated@@26 $generated@@80)) (or (not (= $generated@@81 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@33 $generated@@81 ($generated@@34 $generated@@80)))
 :pattern ( ($generated@@29 $generated@@33 $generated@@81 ($generated@@26 $generated@@80)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@82 ($generated@@77 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@32 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@82 ($generated@@77 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@68 $generated@@87 $generated@@88) (=> ($generated@@82 $generated@@89 $generated@@90 $generated@@87) ($generated@@82 $generated@@89 $generated@@90 $generated@@88)))
 :pattern ( ($generated@@68 $generated@@87 $generated@@88) ($generated@@82 $generated@@89 $generated@@90 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (!  (=> ($generated@@68 $generated@@91 $generated@@92) (=> ($generated@@32 $generated@@95 $generated@@93 $generated@@94 $generated@@91) ($generated@@32 $generated@@95 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@68 $generated@@91 $generated@@92) ($generated@@32 $generated@@95 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@97 T@U) ) (!  (and (= ($generated@@24 ($generated@@26 $generated@@97)) $generated@@5) (= ($generated@@96 ($generated@@26 $generated@@97)) $generated@@7))
 :pattern ( ($generated@@26 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ) (!  (and (= ($generated@@24 ($generated@@34 $generated@@98)) $generated@@6) (= ($generated@@96 ($generated@@34 $generated@@98)) $generated@@7))
 :pattern ( ($generated@@34 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@29 $generated@@33 $generated@@100 ($generated@@26 $generated@@99))  (or (= $generated@@100 $generated@@27) (= ($generated@@28 $generated@@100) ($generated@@26 $generated@@99))))
 :pattern ( ($generated@@29 $generated@@33 $generated@@100 ($generated@@26 $generated@@99)))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or (not (= $generated@@101 $generated@@103)) (not true)) (=> (and ($generated@@68 $generated@@101 $generated@@102) ($generated@@68 $generated@@102 $generated@@103)) ($generated@@68 $generated@@101 $generated@@103)))
 :pattern ( ($generated@@68 $generated@@101 $generated@@102) ($generated@@68 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@104 $generated@@105 $generated@@0) (and (= ($generated@@77 $generated@@10 ($generated@@40 $generated@@10 $generated@@105)) $generated@@105) ($generated@@29 $generated@@10 ($generated@@40 $generated@@10 $generated@@105) $generated@@0)))
 :pattern ( ($generated@@104 $generated@@105 $generated@@0))
)))
(assert (= ($generated@@8 $generated@@106) 7))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@104 $generated@@107 $generated) (and (= ($generated@@77 $generated@@106 ($generated@@40 $generated@@106 $generated@@107)) $generated@@107) ($generated@@29 $generated@@106 ($generated@@40 $generated@@106 $generated@@107) $generated)))
 :pattern ( ($generated@@104 $generated@@107 $generated))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@104 ($generated@@77 $generated@@110 $generated@@108) $generated@@109) ($generated@@29 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@104 ($generated@@77 $generated@@110 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (<= 0 ($generated@@25 $generated@@111))
 :pattern ( ($generated@@25 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (! (<= 0 ($generated@@38 $generated@@112))
 :pattern ( ($generated@@38 $generated@@112))
)))
(assert (= ($generated@@8 $generated@@113) 8))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@32 $generated@@113 $generated@@116 ($generated@@114 $generated@@117) $generated@@118) (forall (($generated@@119 Int) ) (!  (=> (and (<= 0 $generated@@119) (< $generated@@119 ($generated@@38 $generated@@116))) ($generated@@82 ($generated@@115 $generated@@116 $generated@@119) $generated@@117 $generated@@118))
 :pattern ( ($generated@@115 $generated@@116 $generated@@119))
)))
 :pattern ( ($generated@@32 $generated@@113 $generated@@116 ($generated@@114 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@114 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@114 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@24 ($generated@@114 $generated@@122)) $generated@@3)
 :pattern ( ($generated@@114 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@26 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@26 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@34 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@34 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@40 $generated@@128 ($generated@@77 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@77 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and (and ($generated@@129 $generated@@131) (and (or (not (= $generated@@132 $generated@@27)) (not true)) (= ($generated@@28 $generated@@132) ($generated@@26 $generated@@130)))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@131 $generated@@132) $generated@@4)))) ($generated@@32 $generated@@10 ($generated@@14 ($generated@@25 $generated@@132)) $generated@@0 $generated@@131))
 :pattern ( ($generated@@25 $generated@@132) ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@131 $generated@@132) $generated@@4)) ($generated@@26 $generated@@130))
)))
(assert  (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@133 $generated@@136 $generated@@137 $generated@@138 ($generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@141 $generated@@142) $generated@@139)
 :weight 0
)) (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@133 $generated@@143 $generated@@144 $generated@@145 ($generated@@135 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@133 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@133 $generated@@152 $generated@@153 $generated@@154 ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@133 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@13 ($generated@@133 $generated@@33 $generated@@42 $generated@@9 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))  (=> (and (or (not (= $generated@@165 $generated@@161)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@162 $generated@@165) $generated@@163)))) $generated@@164))
 :pattern ( ($generated@@133 $generated@@33 $generated@@42 $generated@@9 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@104 $generated@@167 ($generated@@114 $generated@@168)) (and (= ($generated@@77 $generated@@113 ($generated@@40 $generated@@113 $generated@@167)) $generated@@167) ($generated@@29 $generated@@113 ($generated@@40 $generated@@113 $generated@@167) ($generated@@114 $generated@@168))))
 :pattern ( ($generated@@104 $generated@@167 ($generated@@114 $generated@@168)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@104 $generated@@170 ($generated@@26 $generated@@169)) (and (= ($generated@@77 $generated@@33 ($generated@@40 $generated@@33 $generated@@170)) $generated@@170) ($generated@@29 $generated@@33 ($generated@@40 $generated@@33 $generated@@170) ($generated@@26 $generated@@169))))
 :pattern ( ($generated@@104 $generated@@170 ($generated@@26 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@104 $generated@@172 ($generated@@34 $generated@@171)) (and (= ($generated@@77 $generated@@33 ($generated@@40 $generated@@33 $generated@@172)) $generated@@172) ($generated@@29 $generated@@33 ($generated@@40 $generated@@33 $generated@@172) ($generated@@34 $generated@@171))))
 :pattern ( ($generated@@104 $generated@@172 ($generated@@34 $generated@@171)))
)))
(assert (forall (($generated@@173 Int) ) (! (= ($generated@@77 $generated@@10 ($generated@@14 ($generated@@72 $generated@@173))) ($generated@@74 $generated@@43 ($generated@@77 $generated@@10 ($generated@@14 $generated@@173))))
 :pattern ( ($generated@@77 $generated@@10 ($generated@@14 ($generated@@72 $generated@@173))))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@77 $generated@@175 ($generated@@74 $generated@@175 $generated@@174)) ($generated@@74 $generated@@43 ($generated@@77 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@77 $generated@@175 ($generated@@74 $generated@@175 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= ($generated@@38 $generated@@176) 0) (= $generated@@176 $generated@@39))
 :pattern ( ($generated@@38 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! ($generated@@32 $generated@@10 $generated@@178 $generated@@0 $generated@@177)
 :pattern ( ($generated@@32 $generated@@10 $generated@@178 $generated@@0 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! ($generated@@32 $generated@@106 $generated@@180 $generated $generated@@179)
 :pattern ( ($generated@@32 $generated@@106 $generated@@180 $generated $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@29 $generated@@113 $generated@@181 ($generated@@114 $generated@@182)) (forall (($generated@@183 Int) ) (!  (=> (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@38 $generated@@181))) ($generated@@104 ($generated@@115 $generated@@181 $generated@@183) $generated@@182))
 :pattern ( ($generated@@115 $generated@@181 $generated@@183))
)))
 :pattern ( ($generated@@29 $generated@@113 $generated@@181 ($generated@@114 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@29 $generated@@10 $generated@@184 $generated@@0)
 :pattern ( ($generated@@29 $generated@@10 $generated@@184 $generated@@0))
)))
(assert (forall (($generated@@185 T@U) ) (! ($generated@@29 $generated@@106 $generated@@185 $generated)
 :pattern ( ($generated@@29 $generated@@106 $generated@@185 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@197  (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= $generated@@186 $generated@@27)) (not true))) (=> (or (not (= $generated@@186 $generated@@27)) (not true)) (=> (= (ControlFlow 0 5) (- 0 4)) (and (<= 0 $generated@@187) (< $generated@@187 ($generated@@25 $generated@@186))))))))
(let (($generated@@198  (=> (and (or (not (= $generated@@187 ($generated@@72 0))) (not true)) (= (ControlFlow 0 8) 5)) $generated@@197)))
(let (($generated@@199  (=> (and (= $generated@@187 ($generated@@72 0)) (= (ControlFlow 0 7) 5)) $generated@@197)))
(let (($generated@@200  (=> (or (not (= $generated@@187 $generated@@188)) (not true)) (and (=> (= (ControlFlow 0 9) 7) $generated@@199) (=> (= (ControlFlow 0 9) 8) $generated@@198)))))
(let (($generated@@201 true))
(let (($generated@@202  (=> $generated@@189 (and (=> (= (ControlFlow 0 10) 3) $generated@@201) (=> (= (ControlFlow 0 10) 9) $generated@@200)))))
(let (($generated@@203 true))
(let (($generated@@204  (and (=> (= (ControlFlow 0 11) 2) $generated@@203) (=> (= (ControlFlow 0 11) 10) $generated@@202))))
(let (($generated@@205 true))
(let (($generated@@206  (=> (and (and (and (and (not false) (<= 0 $generated@@187)) (= $generated@@190 0)) (<= 0 $generated@@188)) (and (and (and (<= $generated@@190 $generated@@187) (<= $generated@@187 $generated@@188)) (forall (($generated@@207 T@U) ) (!  (=> (and (or (not (= $generated@@207 $generated@@27)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@191 $generated@@207) $generated@@4)))) (= ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@191 $generated@@207) ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@191 $generated@@207)))
 :pattern ( ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@191 $generated@@207))
))) (and ($generated@@68 $generated@@191 $generated@@191) (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (or (not (= $generated@@208 $generated@@27)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@191 $generated@@208) $generated@@4)))) (or (= ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@191 $generated@@208) $generated@@209) ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@191 $generated@@208) $generated@@209)) ($generated@@13 ($generated@@133 $generated@@33 $generated@@42 $generated@@9 $generated@@192 $generated@@208 $generated@@209))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@191 $generated@@208) $generated@@209))
))))) (and (=> (= (ControlFlow 0 12) 1) $generated@@205) (=> (= (ControlFlow 0 12) 11) $generated@@204)))))
(let (($generated@@210  (=> (and (= $generated@@192 ($generated@@134 $generated@@27 $generated@@191 $generated@@4 false)) (= $generated@@190 ($generated@@72 0))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (or (not (= $generated@@186 $generated@@27)) (not true))) (=> (or (not (= $generated@@186 $generated@@27)) (not true)) (=> (= $generated@@188 ($generated@@25 $generated@@186)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (<= $generated@@190 $generated@@188)) (=> (<= $generated@@190 $generated@@188) (=> (= (ControlFlow 0 13) 12) $generated@@206)))))))))
(let (($generated@@211  (=> (and (and (and ($generated@@129 $generated@@191) ($generated@@193 $generated@@191)) (and ($generated@@29 $generated@@33 $generated@@186 ($generated@@34 $generated@@194)) ($generated@@32 $generated@@33 $generated@@186 ($generated@@34 $generated@@194) $generated@@191))) (and (and ($generated@@29 $generated@@113 $generated@@195 ($generated@@114 $generated)) ($generated@@32 $generated@@113 $generated@@195 ($generated@@114 $generated) $generated@@191)) (and (= 0 $generated@@196) (= (ControlFlow 0 16) 13)))) $generated@@210)))
$generated@@211)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
