(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@41 (T@U Int) Int)
(declare-fun $generated@@42 (Int) Bool)
(declare-fun $generated@@43 (Int) Int)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@T T@U T@U) Bool)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@115 (T@U T@U) Bool)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@119 (Int Int) Int)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@23 ($generated@@22 $generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@22 $generated@@24 $generated@@25))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@26 $generated@@28) ($generated@@23 ($generated@@22 $generated@@26 $generated@@27) $generated@@28))
 :pattern ( ($generated@@22 $generated@@26 $generated@@27) ($generated@@23 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@7 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@7 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@23 ($generated@@22 $generated@@33 $generated@@34) $generated@@35)  (or (= $generated@@35 $generated@@34) ($generated@@23 $generated@@33 $generated@@35)))
 :pattern ( ($generated@@23 ($generated@@22 $generated@@33 $generated@@34) $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> ($generated@@23 $generated@@38 $generated@@39) (not ($generated@@23 ($generated@@36 $generated@@37 $generated@@38) $generated@@39)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38) ($generated@@23 $generated@@38 $generated@@39))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@44 T@U) ($generated@@45 Int) ) (!  (=> (or ($generated@@42 $generated@@45) (and (< 0 $generated@@40) (<= ($generated@@43 0) $generated@@45))) (<= ($generated@@43 0) ($generated@@41 $generated@@44 $generated@@45)))
 :pattern ( ($generated@@41 $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@47 T@U) ) (!  (not ($generated@@23 $generated@@46 $generated@@47))
 :pattern ( ($generated@@23 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@23 ($generated@@36 $generated@@48 $generated@@49) $generated@@50)  (and ($generated@@23 $generated@@48 $generated@@50) (not ($generated@@23 $generated@@49 $generated@@50))))
 :pattern ( ($generated@@23 ($generated@@36 $generated@@48 $generated@@49) $generated@@50))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@52 $generated@@61 $generated@@62 ($generated@@58 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@65) $generated@@63)
 :weight 0
)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (or (= $generated@@70 $generated@@71) (= ($generated@@52 $generated@@66 $generated@@67 ($generated@@58 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@71) ($generated@@52 $generated@@66 $generated@@67 $generated@@69 $generated@@71)))
 :weight 0
))) (= ($generated@@5 $generated@@53) 3)) (= ($generated@@5 $generated@@54) 4)) (= ($generated@@5 $generated@@55) 5)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (= ($generated@@5 ($generated@@56 $generated@@72 $generated@@73)) 6))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@74 $generated@@75)) $generated@@74)
 :pattern ( ($generated@@56 $generated@@74 $generated@@75))
))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@60 ($generated@@56 $generated@@76 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@56 $generated@@76 $generated@@77))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> ($generated@@51 $generated@@78 $generated@@79) (forall (($generated@@80 T@U) ) (!  (=> ($generated@@10 ($generated@@57 $generated@@6 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@55 ($generated@@56 $generated@@53 $generated@@54) $generated@@78 $generated@@80) $generated@@2))) ($generated@@10 ($generated@@57 $generated@@6 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@55 ($generated@@56 $generated@@53 $generated@@54) $generated@@79 $generated@@80) $generated@@2))))
 :pattern ( ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@55 ($generated@@56 $generated@@53 $generated@@54) $generated@@79 $generated@@80) $generated@@2))
)))
 :pattern ( ($generated@@51 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@43 $generated@@81) $generated@@81)
 :pattern ( ($generated@@43 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 $generated@@86 $generated@@87) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@23 $generated@@86 $generated@@88) ($generated@@23 $generated@@87 $generated@@88))
 :pattern ( ($generated@@23 $generated@@86 $generated@@88))
 :pattern ( ($generated@@23 $generated@@87 $generated@@88))
)))
 :pattern ( ($generated@@85 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@57 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@57 $generated@@91 $generated@@90))
)))
(assert (= ($generated@@5 $generated@@93) 7))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@92 $generated@@93 $generated@@96 ($generated@@94 $generated@@97)) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@23 $generated@@96 $generated@@98) ($generated@@95 $generated@@98 $generated@@97))
 :pattern ( ($generated@@23 $generated@@96 $generated@@98))
)))
 :pattern ( ($generated@@92 $generated@@93 $generated@@96 ($generated@@94 $generated@@97)))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@92 $generated@@7 $generated@@99 $generated@@30) (<= ($generated@@43 0) ($generated@@12 $generated@@99)))
 :pattern ( ($generated@@92 $generated@@7 $generated@@99 $generated@@30))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@100 ($generated@@89 $generated@@104 $generated@@101) $generated@@102 $generated@@103) ($generated@@29 $generated@@104 $generated@@101 $generated@@102 $generated@@103))
 :pattern ( ($generated@@100 ($generated@@89 $generated@@104 $generated@@101) $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> ($generated@@51 $generated@@105 $generated@@106) (=> ($generated@@100 $generated@@107 $generated@@108 $generated@@105) ($generated@@100 $generated@@107 $generated@@108 $generated@@106)))
 :pattern ( ($generated@@51 $generated@@105 $generated@@106) ($generated@@100 $generated@@107 $generated@@108 $generated@@105))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (!  (=> ($generated@@51 $generated@@109 $generated@@110) (=> ($generated@@29 $generated@@113 $generated@@111 $generated@@112 $generated@@109) ($generated@@29 $generated@@113 $generated@@111 $generated@@112 $generated@@110)))
 :pattern ( ($generated@@51 $generated@@109 $generated@@110) ($generated@@29 $generated@@113 $generated@@111 $generated@@112 $generated@@109))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@95 $generated@@114 $generated@@30) (and (= ($generated@@89 $generated@@7 ($generated@@57 $generated@@7 $generated@@114)) $generated@@114) ($generated@@92 $generated@@7 ($generated@@57 $generated@@7 $generated@@114) $generated@@30)))
 :pattern ( ($generated@@95 $generated@@114 $generated@@30))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> ($generated@@115 $generated@@116 $generated@@117) (= $generated@@116 $generated@@117))
 :pattern ( ($generated@@115 $generated@@116 $generated@@117))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@120 T@U) ($generated@@121 Int) ) (!  (=> (or ($generated@@42 $generated@@121) (and (< 0 $generated@@40) (<= ($generated@@43 0) $generated@@121))) (and (=> (or (not (= $generated@@121 ($generated@@43 0))) (not true)) ($generated@@42 (- $generated@@121 1))) (= ($generated@@41 ($generated@@118 $generated@@120) $generated@@121) (ite (= $generated@@121 ($generated@@43 0)) 1 ($generated@@119 ($generated@@43 2) ($generated@@41 $generated@@120 (- $generated@@121 1)))))))
 :pattern ( ($generated@@41 ($generated@@118 $generated@@120) $generated@@121))
))))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (or (not (= $generated@@122 $generated@@124)) (not true)) (=> (and ($generated@@51 $generated@@122 $generated@@123) ($generated@@51 $generated@@123 $generated@@124)) ($generated@@51 $generated@@122 $generated@@124)))
 :pattern ( ($generated@@51 $generated@@122 $generated@@123) ($generated@@51 $generated@@123 $generated@@124))
)))
(assert (= ($generated@@5 $generated@@125) 8))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@95 $generated@@126 $generated) (and (= ($generated@@89 $generated@@125 ($generated@@57 $generated@@125 $generated@@126)) $generated@@126) ($generated@@92 $generated@@125 ($generated@@57 $generated@@125 $generated@@126) $generated)))
 :pattern ( ($generated@@95 $generated@@126 $generated))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@95 ($generated@@89 $generated@@129 $generated@@127) $generated@@128) ($generated@@92 $generated@@129 $generated@@127 $generated@@128))
 :pattern ( ($generated@@95 ($generated@@89 $generated@@129 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@29 $generated@@93 $generated@@130 ($generated@@94 $generated@@131) $generated@@132) (forall (($generated@@133 T@U) ) (!  (=> ($generated@@23 $generated@@130 $generated@@133) ($generated@@100 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@23 $generated@@130 $generated@@133))
)))
 :pattern ( ($generated@@29 $generated@@93 $generated@@130 ($generated@@94 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@134 ($generated@@94 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@94 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@21 ($generated@@94 $generated@@136)) $generated@@1)
 :pattern ( ($generated@@94 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@57 $generated@@138 ($generated@@89 $generated@@138 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@89 $generated@@138 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 Int) ) (! (= ($generated@@41 ($generated@@118 $generated@@139) $generated@@140) ($generated@@41 $generated@@139 $generated@@140))
 :pattern ( ($generated@@41 ($generated@@118 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@143 Int) ) (!  (=> (or (and (<= 0 $generated@@143) (< $generated@@143 55296)) (and (<= 57344 $generated@@143) (< $generated@@143 1114112))) (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143))
 :pattern ( ($generated@@141 $generated@@143))
)))
(assert  (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@144 $generated@@147 $generated@@148 $generated@@149 ($generated@@146 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@144 $generated@@154 $generated@@155 $generated@@156 ($generated@@146 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@144 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@144 $generated@@163 $generated@@164 $generated@@165 ($generated@@146 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@144 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@10 ($generated@@144 $generated@@55 $generated@@53 $generated@@6 ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))  (=> (and (or (not (= $generated@@176 $generated@@172)) (not true)) ($generated@@10 ($generated@@57 $generated@@6 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@55 ($generated@@56 $generated@@53 $generated@@54) $generated@@173 $generated@@176) $generated@@174)))) $generated@@175))
 :pattern ( ($generated@@144 $generated@@55 $generated@@53 $generated@@6 ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 Int) ($generated@@179 Int) ) (! (= ($generated@@119 $generated@@178 $generated@@179) (* $generated@@178 $generated@@179))
 :pattern ( ($generated@@119 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@95 $generated@@180 ($generated@@94 $generated@@181)) (and (= ($generated@@89 $generated@@93 ($generated@@57 $generated@@93 $generated@@180)) $generated@@180) ($generated@@92 $generated@@93 ($generated@@57 $generated@@93 $generated@@180) ($generated@@94 $generated@@181))))
 :pattern ( ($generated@@95 $generated@@180 ($generated@@94 $generated@@181)))
)))
(assert (forall (($generated@@182 T@U) ) (!  (and (= ($generated@@141 ($generated@@142 $generated@@182)) $generated@@182) (or (and (<= 0 ($generated@@142 $generated@@182)) (< ($generated@@142 $generated@@182) 55296)) (and (<= 57344 ($generated@@142 $generated@@182)) (< ($generated@@142 $generated@@182) 1114112))))
 :pattern ( ($generated@@142 $generated@@182))
)))
(assert (= ($generated@@21 $generated@@30) $generated@@3))
(assert (= ($generated@@183 $generated@@30) $generated@@4))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@115 $generated@@184 $generated@@185) (forall (($generated@@186 T@U) ) (! (= ($generated@@23 $generated@@184 $generated@@186) ($generated@@23 $generated@@185 $generated@@186))
 :pattern ( ($generated@@23 $generated@@184 $generated@@186))
 :pattern ( ($generated@@23 $generated@@185 $generated@@186))
)))
 :pattern ( ($generated@@115 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 Int) ) (! (= ($generated@@89 $generated@@7 ($generated@@11 ($generated@@43 $generated@@187))) ($generated@@82 $generated@@54 ($generated@@89 $generated@@7 ($generated@@11 $generated@@187))))
 :pattern ( ($generated@@89 $generated@@7 ($generated@@11 ($generated@@43 $generated@@187))))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@T) ) (! (= ($generated@@89 $generated@@189 ($generated@@82 $generated@@189 $generated@@188)) ($generated@@82 $generated@@54 ($generated@@89 $generated@@189 $generated@@188)))
 :pattern ( ($generated@@89 $generated@@189 ($generated@@82 $generated@@189 $generated@@188)))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@190 T@U) ($generated@@191 Int) ) (!  (=> (or ($generated@@42 ($generated@@43 $generated@@191)) (and (< 0 $generated@@40) (<= ($generated@@43 0) $generated@@191))) (and (=> (or (not (= ($generated@@43 $generated@@191) ($generated@@43 0))) (not true)) ($generated@@42 ($generated@@43 (- $generated@@191 1)))) (= ($generated@@41 ($generated@@118 $generated@@190) ($generated@@43 $generated@@191)) (ite (= ($generated@@43 $generated@@191) ($generated@@43 0)) 1 ($generated@@119 ($generated@@43 2) ($generated@@43 ($generated@@41 ($generated@@118 $generated@@190) ($generated@@43 (- $generated@@191 1)))))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@118 $generated@@190) ($generated@@43 $generated@@191)))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! ($generated@@29 $generated@@125 $generated@@193 $generated $generated@@192)
 :pattern ( ($generated@@29 $generated@@125 $generated@@193 $generated $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! ($generated@@92 $generated@@125 $generated@@194 $generated)
 :pattern ( ($generated@@92 $generated@@125 $generated@@194 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () Bool)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@216  (and (=> (= (ControlFlow 0 5) (- 0 8)) (exists (($generated@@217 T@U) )  (and ($generated@@92 $generated@@125 $generated@@217 $generated) ($generated@@23 $generated@@195 ($generated@@89 $generated@@125 $generated@@217))))) (=> (exists (($generated@@218 T@U) )  (and ($generated@@92 $generated@@125 $generated@@218 $generated) ($generated@@23 $generated@@195 ($generated@@89 $generated@@125 $generated@@218)))) (=> (and (and ($generated@@92 $generated@@125 $generated@@196 $generated) ($generated@@23 $generated@@195 ($generated@@89 $generated@@125 $generated@@196))) (and (= $generated@@197 ($generated@@36 $generated@@195 ($generated@@22 $generated@@46 ($generated@@89 $generated@@125 $generated@@196)))) (= $generated@@198 ($generated@@142 $generated@@196)))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= ($generated@@43 0) $generated@@198)) (=> (<= ($generated@@43 0) $generated@@198) (=> (= $generated@@199 ($generated@@142 $generated@@196)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (<= ($generated@@43 0) $generated@@199)) (=> (<= ($generated@@43 0) $generated@@199) (=> (and (= $generated@@200 ($generated@@142 $generated@@196)) ($generated@@29 $generated@@7 ($generated@@11 $generated@@200) $generated@@30 $generated@@201)) (=> (and (and ($generated@@42 ($generated@@142 $generated@@196)) ($generated@@42 ($generated@@142 $generated@@196))) (and (= $generated@@202 (+ $generated@@203 ($generated@@41 ($generated@@118 $generated@@204) ($generated@@142 $generated@@196)))) (= (ControlFlow 0 5) (- 0 4)))) (and ($generated@@85 $generated@@197 $generated@@195) (not ($generated@@85 $generated@@195 $generated@@197)))))))))))))))
(let (($generated@@219  (=> (and (not ($generated@@92 $generated@@125 $generated@@205 $generated)) (= (ControlFlow 0 10) 5)) $generated@@216)))
(let (($generated@@220  (=> (and ($generated@@92 $generated@@125 $generated@@205 $generated) (= (ControlFlow 0 9) 5)) $generated@@216)))
(let (($generated@@221  (=> (not ($generated@@115 $generated@@195 $generated@@46)) (and (=> (= (ControlFlow 0 11) 9) $generated@@220) (=> (= (ControlFlow 0 11) 10) $generated@@219)))))
(let (($generated@@222 true))
(let (($generated@@223  (=> $generated@@206 (and (=> (= (ControlFlow 0 12) 3) $generated@@222) (=> (= (ControlFlow 0 12) 11) $generated@@221)))))
(let (($generated@@224 true))
(let (($generated@@225  (and (=> (= (ControlFlow 0 13) 2) $generated@@224) (=> (= (ControlFlow 0 13) 12) $generated@@223))))
(let (($generated@@226 true))
(let (($generated@@227  (=> ($generated@@92 $generated@@125 $generated@@207 $generated) (=> (and (and (and ($generated@@92 $generated@@93 $generated@@195 ($generated@@94 $generated)) ($generated@@29 $generated@@93 $generated@@195 ($generated@@94 $generated) $generated@@201)) (not false)) (and (and (forall (($generated@@228 T@U) ) (!  (=> (and (or (not (= $generated@@228 $generated@@208)) (not true)) ($generated@@10 ($generated@@57 $generated@@6 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@55 ($generated@@56 $generated@@53 $generated@@54) $generated@@201 $generated@@228) $generated@@2)))) (= ($generated@@52 $generated@@55 ($generated@@56 $generated@@53 $generated@@54) $generated@@201 $generated@@228) ($generated@@52 $generated@@55 ($generated@@56 $generated@@53 $generated@@54) $generated@@201 $generated@@228)))
 :pattern ( ($generated@@52 $generated@@55 ($generated@@56 $generated@@53 $generated@@54) $generated@@201 $generated@@228))
)) ($generated@@51 $generated@@201 $generated@@201)) (and (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (or (not (= $generated@@229 $generated@@208)) (not true)) ($generated@@10 ($generated@@57 $generated@@6 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@55 ($generated@@56 $generated@@53 $generated@@54) $generated@@201 $generated@@229) $generated@@2)))) (or (= ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@55 ($generated@@56 $generated@@53 $generated@@54) $generated@@201 $generated@@229) $generated@@230) ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@55 ($generated@@56 $generated@@53 $generated@@54) $generated@@201 $generated@@229) $generated@@230)) ($generated@@10 ($generated@@144 $generated@@55 $generated@@53 $generated@@6 $generated@@209 $generated@@229 $generated@@230))))
 :pattern ( ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@55 ($generated@@56 $generated@@53 $generated@@54) $generated@@201 $generated@@229) $generated@@230))
)) ($generated@@85 $generated@@195 $generated@@210)))) (and (=> (= (ControlFlow 0 14) 1) $generated@@226) (=> (= (ControlFlow 0 14) 13) $generated@@225))))))
(let (($generated@@231  (=> (= $generated@@209 ($generated@@145 $generated@@208 $generated@@201 $generated@@2 false)) (=> (and (= $generated@@211 ($generated@@43 0)) (= (ControlFlow 0 15) 14)) $generated@@227))))
(let (($generated@@232  (=> (and (and ($generated@@212 $generated@@201) ($generated@@213 $generated@@201)) (and ($generated@@92 $generated@@93 $generated@@210 ($generated@@94 $generated)) ($generated@@29 $generated@@93 $generated@@210 ($generated@@94 $generated) $generated@@201))) (=> (and (and (and ($generated@@92 $generated@@93 $generated@@214 ($generated@@94 $generated)) ($generated@@29 $generated@@93 $generated@@214 ($generated@@94 $generated) $generated@@201)) true) (and (and ($generated@@92 $generated@@125 $generated@@215 $generated) true) (and (= 1 $generated@@40) (= (ControlFlow 0 16) 15)))) $generated@@231))))
$generated@@232)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
