(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@66 (T@T T@U T@U) Bool)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@6 $generated@@23) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@27 ($generated@@24 $generated@@26) $generated@@28) ($generated@@22 $generated@@23 $generated@@27 ($generated@@25 $generated@@26) $generated@@28))
 :pattern ( ($generated@@22 $generated@@23 $generated@@27 ($generated@@24 $generated@@26) $generated@@28))
 :pattern ( ($generated@@22 $generated@@23 $generated@@27 ($generated@@25 $generated@@26) $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@32 ($generated@@29 $generated@@31) $generated@@33) ($generated@@22 $generated@@23 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
 :pattern ( ($generated@@22 $generated@@23 $generated@@32 ($generated@@29 $generated@@31) $generated@@33))
 :pattern ( ($generated@@22 $generated@@23 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@36 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@36 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@36 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@6 $generated@@37) 4)) (= ($generated@@6 $generated@@38) 5)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@6 ($generated@@39 $generated@@54 $generated@@55)) 6))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@39 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@39 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@39 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@61 ($generated@@25 $generated@@60) $generated@@62)  (or (= $generated@@61 $generated@@34) ($generated@@11 ($generated@@35 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@23 ($generated@@39 $generated@@37 $generated@@38) $generated@@62 $generated@@61) $generated)))))
 :pattern ( ($generated@@22 $generated@@23 $generated@@61 ($generated@@25 $generated@@60) $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@64 ($generated@@30 $generated@@63) $generated@@65)  (or (= $generated@@64 $generated@@34) ($generated@@11 ($generated@@35 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@23 ($generated@@39 $generated@@37 $generated@@38) $generated@@65 $generated@@64) $generated)))))
 :pattern ( ($generated@@22 $generated@@23 $generated@@64 ($generated@@30 $generated@@63) $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@66 $generated@@23 $generated@@68 ($generated@@30 $generated@@67)) ($generated@@66 $generated@@23 $generated@@68 ($generated@@25 $generated@@67)))
 :pattern ( ($generated@@66 $generated@@23 $generated@@68 ($generated@@30 $generated@@67)))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@69 $generated@@71 ($generated@@30 $generated@@70)) ($generated@@69 $generated@@71 ($generated@@25 $generated@@70)))
 :pattern ( ($generated@@69 $generated@@71 ($generated@@30 $generated@@70)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@35 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@35 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@66 $generated@@23 $generated@@76 ($generated@@24 $generated@@75))  (and ($generated@@66 $generated@@23 $generated@@76 ($generated@@25 $generated@@75)) (or (not (= $generated@@76 $generated@@34)) (not true))))
 :pattern ( ($generated@@66 $generated@@23 $generated@@76 ($generated@@24 $generated@@75)))
 :pattern ( ($generated@@66 $generated@@23 $generated@@76 ($generated@@25 $generated@@75)))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@66 $generated@@23 $generated@@78 ($generated@@29 $generated@@77))  (and ($generated@@66 $generated@@23 $generated@@78 ($generated@@30 $generated@@77)) (or (not (= $generated@@78 $generated@@34)) (not true))))
 :pattern ( ($generated@@66 $generated@@23 $generated@@78 ($generated@@29 $generated@@77)))
 :pattern ( ($generated@@66 $generated@@23 $generated@@78 ($generated@@30 $generated@@77)))
)))
(assert (forall (($generated@@81 T@U) ) (!  (and (= ($generated@@79 ($generated@@24 $generated@@81)) $generated@@0) (= ($generated@@80 ($generated@@24 $generated@@81)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ) (!  (and (= ($generated@@79 ($generated@@29 $generated@@82)) $generated@@1) (= ($generated@@80 ($generated@@29 $generated@@82)) $generated@@5))
 :pattern ( ($generated@@29 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ) (!  (and (= ($generated@@79 ($generated@@25 $generated@@83)) $generated@@2) (= ($generated@@80 ($generated@@25 $generated@@83)) $generated@@4))
 :pattern ( ($generated@@25 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (!  (and (= ($generated@@79 ($generated@@30 $generated@@84)) $generated@@3) (= ($generated@@80 ($generated@@30 $generated@@84)) $generated@@5))
 :pattern ( ($generated@@30 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@22 $generated@@23 $generated@@86 ($generated@@30 $generated@@85) $generated@@87) ($generated@@22 $generated@@23 $generated@@86 ($generated@@25 $generated@@85) $generated@@87))
 :pattern ( ($generated@@22 $generated@@23 $generated@@86 ($generated@@30 $generated@@85) $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@69 ($generated@@72 $generated@@90 $generated@@88) $generated@@89) ($generated@@66 $generated@@90 $generated@@88 $generated@@89))
 :pattern ( ($generated@@69 ($generated@@72 $generated@@90 $generated@@88) $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@91 ($generated@@24 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@24 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@93 ($generated@@29 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@29 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@95 ($generated@@25 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@25 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 ($generated@@30 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@30 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@35 $generated@@100 ($generated@@72 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@72 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@66 $generated@@23 $generated@@104 ($generated@@25 $generated@@103))  (or (= $generated@@104 $generated@@34) ($generated@@101 ($generated@@102 $generated@@104) $generated@@103)))
 :pattern ( ($generated@@66 $generated@@23 $generated@@104 ($generated@@25 $generated@@103)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@66 $generated@@23 $generated@@107 ($generated@@30 $generated@@106))  (or (= $generated@@107 $generated@@34) ($generated@@105 ($generated@@102 $generated@@107) $generated@@106)))
 :pattern ( ($generated@@66 $generated@@23 $generated@@107 ($generated@@30 $generated@@106)))
)))
(assert  (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@108 $generated@@111 $generated@@112 $generated@@113 ($generated@@110 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@108 $generated@@118 $generated@@119 $generated@@120 ($generated@@110 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@108 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@108 $generated@@127 $generated@@128 $generated@@129 ($generated@@110 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@108 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 Bool) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@11 ($generated@@108 $generated@@23 $generated@@37 $generated@@7 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))  (=> (and (or (not (= $generated@@140 $generated@@136)) (not true)) ($generated@@11 ($generated@@35 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@23 ($generated@@39 $generated@@37 $generated@@38) $generated@@137 $generated@@140) $generated@@138)))) $generated@@139))
 :pattern ( ($generated@@108 $generated@@23 $generated@@37 $generated@@7 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@69 $generated@@143 ($generated@@24 $generated@@142)) (and (= ($generated@@72 $generated@@23 ($generated@@35 $generated@@23 $generated@@143)) $generated@@143) ($generated@@66 $generated@@23 ($generated@@35 $generated@@23 $generated@@143) ($generated@@24 $generated@@142))))
 :pattern ( ($generated@@69 $generated@@143 ($generated@@24 $generated@@142)))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> ($generated@@69 $generated@@145 ($generated@@29 $generated@@144)) (and (= ($generated@@72 $generated@@23 ($generated@@35 $generated@@23 $generated@@145)) $generated@@145) ($generated@@66 $generated@@23 ($generated@@35 $generated@@23 $generated@@145) ($generated@@29 $generated@@144))))
 :pattern ( ($generated@@69 $generated@@145 ($generated@@29 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@69 $generated@@147 ($generated@@25 $generated@@146)) (and (= ($generated@@72 $generated@@23 ($generated@@35 $generated@@23 $generated@@147)) $generated@@147) ($generated@@66 $generated@@23 ($generated@@35 $generated@@23 $generated@@147) ($generated@@25 $generated@@146))))
 :pattern ( ($generated@@69 $generated@@147 ($generated@@25 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@69 $generated@@149 ($generated@@30 $generated@@148)) (and (= ($generated@@72 $generated@@23 ($generated@@35 $generated@@23 $generated@@149)) $generated@@149) ($generated@@66 $generated@@23 ($generated@@35 $generated@@23 $generated@@149) ($generated@@30 $generated@@148))))
 :pattern ( ($generated@@69 $generated@@149 ($generated@@30 $generated@@148)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@162  (=> (and (= $generated@@150 $generated@@151) (= $generated@@152 $generated@@153)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@154 ($generated@@109 $generated@@34 $generated@@155 $generated false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) true))))))
(let (($generated@@165  (=> (and (and (and ($generated@@156 $generated@@155) ($generated@@157 $generated@@155)) (and (or (not (= $generated@@158 $generated@@34)) (not true)) (and ($generated@@66 $generated@@23 $generated@@158 ($generated@@29 $generated@@151)) ($generated@@22 $generated@@23 $generated@@158 ($generated@@29 $generated@@151) $generated@@155)))) (and (and ($generated@@69 $generated@@159 $generated@@151) ($generated@@69 $generated@@160 $generated@@153)) (and (= 0 $generated@@161) (= (ControlFlow 0 4) 2)))) $generated@@162)))
$generated@@165)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
