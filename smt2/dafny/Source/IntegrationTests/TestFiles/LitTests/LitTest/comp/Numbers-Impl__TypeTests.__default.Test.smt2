(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@66 (T@U) Int)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () Int)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@71 (T@T T@U T@U) Bool)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@77 (Real) Real)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 (Int) T@U)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@108 (T@U) Int)
(declare-fun $generated@@109 (Int) T@U)
(declare-fun $generated@@122 (T@U Int Int Int Int) T@U)
(declare-fun $generated@@123 (Int Int) Int)
(declare-fun $generated@@130 (T@U Int) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@148 (T@T T@T) T@T)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@1))
(assert (= ($generated@@26 $generated@@0) $generated@@2))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! ($generated@@28 ($generated@@27 $generated@@29 $generated@@30) $generated@@30)
 :pattern ( ($generated@@27 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@28 $generated@@31 $generated@@33) ($generated@@28 ($generated@@27 $generated@@31 $generated@@32) $generated@@33))
 :pattern ( ($generated@@27 $generated@@31 $generated@@32) ($generated@@28 $generated@@31 $generated@@33))
)))
(assert (= ($generated@@10 $generated@@35) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! ($generated@@34 $generated@@35 $generated@@37 $generated@@36 $generated@@38)
 :pattern ( ($generated@@34 $generated@@35 $generated@@37 $generated@@36 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! ($generated@@34 $generated@@12 $generated@@40 $generated@@39 $generated@@41)
 :pattern ( ($generated@@34 $generated@@12 $generated@@40 $generated@@39 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@28 ($generated@@27 $generated@@42 $generated@@43) $generated@@44)  (or (= $generated@@44 $generated@@43) ($generated@@28 $generated@@42 $generated@@44)))
 :pattern ( ($generated@@28 ($generated@@27 $generated@@42 $generated@@43) $generated@@44))
)))
(assert  (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@45 $generated@@50 $generated@@51 ($generated@@49 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@45 $generated@@55 $generated@@56 ($generated@@49 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@45 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@10 $generated@@46) 4)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@15 ($generated@@45 $generated@@46 $generated@@11 ($generated@@47 $generated@@61 $generated@@62) $generated@@63))  (and ($generated@@48 $generated@@63 $generated@@61) ($generated@@28 $generated@@62 $generated@@63)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@11 ($generated@@47 $generated@@61 $generated@@62) $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (!  (not ($generated@@28 $generated@@64 $generated@@65))
 :pattern ( ($generated@@28 $generated@@64 $generated@@65))
)))
(assert (= ($generated@@66 $generated@@67) 0))
(assert (= ($generated@@10 $generated@@72) 5))
(assert  (=> (<= 0 $generated@@68) (forall (($generated@@74 T@U) ) (!  (=> (or ($generated@@70 $generated@@74) (< 0 $generated@@68)) ($generated@@71 $generated@@72 ($generated@@69 $generated@@74) ($generated@@73 $generated@@74)))
 :pattern ( ($generated@@69 $generated@@74))
))))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@75 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 Real) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 ($generated@@82 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@82 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@28 ($generated@@86 $generated@@87) $generated@@88) ($generated@@15 ($generated@@45 $generated@@46 $generated@@11 $generated@@87 $generated@@88)))
 :pattern ( ($generated@@28 ($generated@@86 $generated@@87) $generated@@88))
)))
(assert (= ($generated@@10 $generated@@89) 6))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@71 $generated@@89 $generated@@91 ($generated@@90 $generated@@92)) (forall (($generated@@93 T@U) ) (!  (=> ($generated@@28 $generated@@91 $generated@@93) ($generated@@48 $generated@@93 $generated@@92))
 :pattern ( ($generated@@28 $generated@@91 $generated@@93))
)))
 :pattern ( ($generated@@71 $generated@@89 $generated@@91 ($generated@@90 $generated@@92)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@94 ($generated@@83 $generated@@98 $generated@@95) $generated@@96 $generated@@97) ($generated@@34 $generated@@98 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@94 ($generated@@83 $generated@@98 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@102 Int) ) (!  (=> (<= 0 $generated@@102) (and ($generated@@100 ($generated@@99 $generated@@102)) (= ($generated@@101 ($generated@@99 $generated@@102)) $generated@@102)))
 :pattern ( ($generated@@99 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@48 $generated@@103 $generated@@36) (and (= ($generated@@83 $generated@@35 ($generated@@82 $generated@@35 $generated@@103)) $generated@@103) ($generated@@71 $generated@@35 ($generated@@82 $generated@@35 $generated@@103) $generated@@36)))
 :pattern ( ($generated@@48 $generated@@103 $generated@@36))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@48 $generated@@104 $generated@@39) (and (= ($generated@@83 $generated@@12 ($generated@@82 $generated@@12 $generated@@104)) $generated@@104) ($generated@@71 $generated@@12 ($generated@@82 $generated@@12 $generated@@104) $generated@@39)))
 :pattern ( ($generated@@48 $generated@@104 $generated@@39))
)))
(assert  (=> (<= 0 $generated@@68) (forall (($generated@@105 T@U) ) (!  (=> (or ($generated@@70 $generated@@105) (< 0 $generated@@68)) (= ($generated@@69 $generated@@105) ($generated@@79 $generated@@72 $generated@@67)))
 :pattern ( ($generated@@69 $generated@@105))
))))
(assert  (=> (<= 0 $generated@@68) (forall (($generated@@106 T@U) ) (!  (=> (or ($generated@@70 $generated@@106) (< 0 $generated@@68)) (= ($generated@@69 $generated@@106) ($generated@@79 $generated@@72 $generated@@67)))
 :weight 3
 :pattern ( ($generated@@69 $generated@@106))
))))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@71 $generated@@12 $generated@@107 $generated@@39)  (and (and (and (and (and (<= ($generated@@75 0) ($generated@@17 $generated@@107)) (< ($generated@@17 $generated@@107) 10000)) (or (not (= ($generated@@17 $generated@@107) 22)) (not true))) (or (not (= ($generated@@17 $generated@@107) 10)) (not true))) (and (or (not (= ($generated@@17 $generated@@107) 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0)))))) (and (< ($generated@@17 $generated@@107) 200) (or (not (= ($generated@@17 $generated@@107) 16)) (not true)))))
 :pattern ( ($generated@@71 $generated@@12 $generated@@107 $generated@@39))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@71 $generated@@35 $generated@@110 $generated@@36)  (and (<= ($generated@@108 ($generated@@79 $generated@@35 ($generated@@109 65))) ($generated@@108 $generated@@110)) (<= ($generated@@108 $generated@@110) ($generated@@108 ($generated@@79 $generated@@35 ($generated@@109 90))))))
 :pattern ( ($generated@@71 $generated@@35 $generated@@110 $generated@@36))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@48 $generated@@111 $generated) (and (= ($generated@@83 $generated@@11 ($generated@@82 $generated@@11 $generated@@111)) $generated@@111) ($generated@@71 $generated@@11 ($generated@@82 $generated@@11 $generated@@111) $generated)))
 :pattern ( ($generated@@48 $generated@@111 $generated))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@48 $generated@@112 $generated@@0) (and (= ($generated@@83 $generated@@35 ($generated@@82 $generated@@35 $generated@@112)) $generated@@112) ($generated@@71 $generated@@35 ($generated@@82 $generated@@35 $generated@@112) $generated@@0)))
 :pattern ( ($generated@@48 $generated@@112 $generated@@0))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@48 ($generated@@83 $generated@@115 $generated@@113) $generated@@114) ($generated@@71 $generated@@115 $generated@@113 $generated@@114))
 :pattern ( ($generated@@48 ($generated@@83 $generated@@115 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (! (<= 0 ($generated@@101 $generated@@116))
 :pattern ( ($generated@@101 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (! (<= 0 ($generated@@66 $generated@@117))
 :pattern ( ($generated@@66 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@34 $generated@@89 $generated@@118 ($generated@@90 $generated@@119) $generated@@120) (forall (($generated@@121 T@U) ) (!  (=> ($generated@@28 $generated@@118 $generated@@121) ($generated@@94 $generated@@121 $generated@@119 $generated@@120))
 :pattern ( ($generated@@28 $generated@@118 $generated@@121))
)))
 :pattern ( ($generated@@34 $generated@@89 $generated@@118 ($generated@@90 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 Int) ($generated@@126 Int) ($generated@@127 Int) ($generated@@128 Int) ($generated@@129 T@U) ) (! (= ($generated@@15 ($generated@@45 $generated@@46 $generated@@11 ($generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129))  (and ($generated@@48 $generated@@129 $generated@@124) (and (and (<= $generated@@125 ($generated@@17 ($generated@@82 $generated@@12 $generated@@129))) (< ($generated@@17 ($generated@@82 $generated@@12 $generated@@129)) $generated@@126)) (= ($generated@@123 ($generated@@17 ($generated@@82 $generated@@12 $generated@@129)) $generated@@127) $generated@@128))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@11 ($generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@34 $generated@@72 $generated@@131 ($generated@@73 $generated@@132) $generated@@133) (forall (($generated@@134 Int) ) (!  (=> (and (<= 0 $generated@@134) (< $generated@@134 ($generated@@66 $generated@@131))) ($generated@@94 ($generated@@130 $generated@@131 $generated@@134) $generated@@132 $generated@@133))
 :pattern ( ($generated@@130 $generated@@131 $generated@@134))
)))
 :pattern ( ($generated@@34 $generated@@72 $generated@@131 ($generated@@73 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@135 ($generated@@90 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@90 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@26 ($generated@@90 $generated@@137)) $generated@@3)
 :pattern ( ($generated@@90 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@138 ($generated@@73 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@73 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@26 ($generated@@73 $generated@@140)) $generated@@4)
 :pattern ( ($generated@@73 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@82 $generated@@142 ($generated@@83 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@83 $generated@@142 $generated@@141))
)))
(assert (forall (($generated@@143 Int) ) (!  (=> (or (and (<= 0 $generated@@143) (< $generated@@143 55296)) (and (<= 57344 $generated@@143) (< $generated@@143 1114112))) (= ($generated@@108 ($generated@@109 $generated@@143)) $generated@@143))
 :pattern ( ($generated@@109 $generated@@143))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@144 $generated@@152 $generated@@153 $generated@@154 ($generated@@149 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@157 $generated@@158) $generated@@155)
 :weight 0
)) (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@144 $generated@@159 $generated@@160 $generated@@161 ($generated@@149 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@144 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@144 $generated@@168 $generated@@169 $generated@@170 ($generated@@149 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@144 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))) (= ($generated@@10 $generated@@145) 7)) (= ($generated@@10 $generated@@146) 8)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@10 ($generated@@148 $generated@@177 $generated@@178)) 9))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@150 ($generated@@148 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@148 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@151 ($generated@@148 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@148 $generated@@181 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Bool) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@15 ($generated@@144 $generated@@145 $generated@@146 $generated@@11 ($generated@@147 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))  (=> (and (or (not (= $generated@@187 $generated@@183)) (not true)) ($generated@@15 ($generated@@82 $generated@@11 ($generated@@45 $generated@@146 $generated@@46 ($generated@@45 $generated@@145 ($generated@@148 $generated@@146 $generated@@46) $generated@@184 $generated@@187) $generated@@185)))) $generated@@186))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146 $generated@@11 ($generated@@147 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 Int) ($generated@@190 Int) ) (! (= ($generated@@123 $generated@@189 $generated@@190) (mod $generated@@189 $generated@@190))
 :pattern ( ($generated@@123 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@48 $generated@@191 ($generated@@90 $generated@@192)) (and (= ($generated@@83 $generated@@89 ($generated@@82 $generated@@89 $generated@@191)) $generated@@191) ($generated@@71 $generated@@89 ($generated@@82 $generated@@89 $generated@@191) ($generated@@90 $generated@@192))))
 :pattern ( ($generated@@48 $generated@@191 ($generated@@90 $generated@@192)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@48 $generated@@193 ($generated@@73 $generated@@194)) (and (= ($generated@@83 $generated@@72 ($generated@@82 $generated@@72 $generated@@193)) $generated@@193) ($generated@@71 $generated@@72 ($generated@@82 $generated@@72 $generated@@193) ($generated@@73 $generated@@194))))
 :pattern ( ($generated@@48 $generated@@193 ($generated@@73 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (and (= ($generated@@109 ($generated@@108 $generated@@195)) $generated@@195) (or (and (<= 0 ($generated@@108 $generated@@195)) (< ($generated@@108 $generated@@195) 55296)) (and (<= 57344 ($generated@@108 $generated@@195)) (< ($generated@@108 $generated@@195) 1114112))))
 :pattern ( ($generated@@108 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (!  (=> ($generated@@100 $generated@@196) (= $generated@@196 ($generated@@99 ($generated@@101 $generated@@196))))
 :pattern ( ($generated@@101 $generated@@196))
 :pattern ( ($generated@@100 $generated@@196))
)))
(assert (= ($generated@@26 $generated@@36) $generated@@6))
(assert (= ($generated@@197 $generated@@36) $generated@@8))
(assert (= ($generated@@26 $generated@@39) $generated@@7))
(assert (= ($generated@@197 $generated@@39) $generated@@9))
(assert  (=> (<= 0 $generated@@68) (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (or ($generated@@70 $generated@@200) (< 0 $generated@@68)) ($generated@@198 $generated@@199)) ($generated@@34 $generated@@72 ($generated@@69 $generated@@200) ($generated@@73 $generated@@200) $generated@@199))
 :pattern ( ($generated@@34 $generated@@72 ($generated@@69 $generated@@200) ($generated@@73 $generated@@200) $generated@@199))
))))
(assert (forall (($generated@@201 Int) ) (! (= ($generated@@83 $generated@@12 ($generated@@16 ($generated@@75 $generated@@201))) ($generated@@79 $generated@@46 ($generated@@83 $generated@@12 ($generated@@16 $generated@@201))))
 :pattern ( ($generated@@83 $generated@@12 ($generated@@16 ($generated@@75 $generated@@201))))
)))
(assert (forall (($generated@@202 Real) ) (! (= ($generated@@83 $generated@@13 ($generated@@18 ($generated@@77 $generated@@202))) ($generated@@79 $generated@@46 ($generated@@83 $generated@@13 ($generated@@18 $generated@@202))))
 :pattern ( ($generated@@83 $generated@@13 ($generated@@18 ($generated@@77 $generated@@202))))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@83 $generated@@204 ($generated@@79 $generated@@204 $generated@@203)) ($generated@@79 $generated@@46 ($generated@@83 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@83 $generated@@204 ($generated@@79 $generated@@204 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ) (!  (=> (= ($generated@@66 $generated@@205) 0) (= $generated@@205 $generated@@67))
 :pattern ( ($generated@@66 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! ($generated@@34 $generated@@11 $generated@@207 $generated $generated@@206)
 :pattern ( ($generated@@34 $generated@@11 $generated@@207 $generated $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! ($generated@@34 $generated@@35 $generated@@209 $generated@@0 $generated@@208)
 :pattern ( ($generated@@34 $generated@@35 $generated@@209 $generated@@0 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@71 $generated@@72 $generated@@210 ($generated@@73 $generated@@211)) (forall (($generated@@212 Int) ) (!  (=> (and (<= 0 $generated@@212) (< $generated@@212 ($generated@@66 $generated@@210))) ($generated@@48 ($generated@@130 $generated@@210 $generated@@212) $generated@@211))
 :pattern ( ($generated@@130 $generated@@210 $generated@@212))
)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@210 ($generated@@73 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ) (! ($generated@@71 $generated@@11 $generated@@213 $generated)
 :pattern ( ($generated@@71 $generated@@11 $generated@@213 $generated))
)))
(assert (forall (($generated@@214 T@U) ) (! ($generated@@71 $generated@@35 $generated@@214 $generated@@0)
 :pattern ( ($generated@@71 $generated@@35 $generated@@214 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () Int)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () Real)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () (_ BitVec 7))
(declare-fun $generated@@234 (T@U) (_ BitVec 7))
(declare-fun $generated@@235 () T@T)
(declare-fun $generated@@236 ((_ BitVec 7)) T@U)
(declare-fun $generated@@237 () (_ BitVec 129))
(declare-fun $generated@@238 (T@U) (_ BitVec 129))
(declare-fun $generated@@239 () T@T)
(declare-fun $generated@@240 ((_ BitVec 129)) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(assert  (and (and (and (and (and (= ($generated@@10 $generated@@235) 10) (forall (($generated@@247 (_ BitVec 7)) ) (! (= ($generated@@234 ($generated@@236 $generated@@247)) $generated@@247)
 :pattern ( ($generated@@236 $generated@@247))
))) (forall (($generated@@248 T@U) ) (! (= ($generated@@236 ($generated@@234 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@234 $generated@@248))
))) (= ($generated@@10 $generated@@239) 11)) (forall (($generated@@249 (_ BitVec 129)) ) (! (= ($generated@@238 ($generated@@240 $generated@@249)) $generated@@249)
 :pattern ( ($generated@@240 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (= ($generated@@240 ($generated@@238 $generated@@250)) $generated@@250)
 :pattern ( ($generated@@238 $generated@@250))
))))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 43) (let (($generated@@251 true))
(let (($generated@@252  (=> (and (not (and (and (<= ($generated@@75 3) $generated@@215) (< $generated@@215 35)) (= ($generated@@123 $generated@@215 ($generated@@75 3)) ($generated@@75 1)))) (= (ControlFlow 0 4) 1)) $generated@@251)))
(let (($generated@@253  (=> (and (and (and (<= ($generated@@75 3) $generated@@215) (< $generated@@215 35)) (= ($generated@@123 $generated@@215 ($generated@@75 3)) ($generated@@75 1))) (= (ControlFlow 0 3) 1)) $generated@@251)))
(let (($generated@@254  (=> (not (and (<= ($generated@@75 3) $generated@@215) (< $generated@@215 35))) (and (=> (= (ControlFlow 0 19) 3) $generated@@253) (=> (= (ControlFlow 0 19) 4) $generated@@252)))))
(let (($generated@@255  (=> (and (and (<= ($generated@@75 3) $generated@@215) (< $generated@@215 35)) (= $generated@@216 ($generated@@75 3))) (and (=> (= (ControlFlow 0 5) (- 0 18)) (and (and (<= ($generated@@75 0) $generated@@216) (< $generated@@216 10000)) (or (not (= $generated@@216 22)) (not true)))) (=> (and (and (<= ($generated@@75 0) $generated@@216) (< $generated@@216 10000)) (or (not (= $generated@@216 22)) (not true))) (and (=> (= (ControlFlow 0 5) (- 0 17)) (or (not (= $generated@@216 10)) (not true))) (=> (or (not (= $generated@@216 10)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 16)) (and (or (not (= $generated@@216 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0)))))) (=> (and (or (not (= $generated@@216 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0))))) (and (=> (= (ControlFlow 0 5) (- 0 15)) (and (< $generated@@216 200) (or (not (= $generated@@216 16)) (not true)))) (=> (and (< $generated@@216 200) (or (not (= $generated@@216 16)) (not true))) (and (=> (= (ControlFlow 0 5) (- 0 14)) (or (not (= ($generated@@75 3) 0)) (not true))) (=> (or (not (= ($generated@@75 3) 0)) (not true)) (=> (= $generated@@217 ($generated@@123 $generated@@215 ($generated@@75 3))) (and (=> (= (ControlFlow 0 5) (- 0 13)) (and (and (<= ($generated@@75 0) $generated@@217) (< $generated@@217 10000)) (or (not (= $generated@@217 22)) (not true)))) (=> (and (and (<= ($generated@@75 0) $generated@@217) (< $generated@@217 10000)) (or (not (= $generated@@217 22)) (not true))) (and (=> (= (ControlFlow 0 5) (- 0 12)) (or (not (= $generated@@217 10)) (not true))) (=> (or (not (= $generated@@217 10)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 11)) (and (or (not (= $generated@@217 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0)))))) (=> (and (or (not (= $generated@@217 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0))))) (and (=> (= (ControlFlow 0 5) (- 0 10)) (and (< $generated@@217 200) (or (not (= $generated@@217 16)) (not true)))) (=> (and (< $generated@@217 200) (or (not (= $generated@@217 16)) (not true))) (=> (= $generated@@218 ($generated@@75 1)) (and (=> (= (ControlFlow 0 5) (- 0 9)) (and (and (<= ($generated@@75 0) $generated@@218) (< $generated@@218 10000)) (or (not (= $generated@@218 22)) (not true)))) (=> (and (and (<= ($generated@@75 0) $generated@@218) (< $generated@@218 10000)) (or (not (= $generated@@218 22)) (not true))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (not (= $generated@@218 10)) (not true))) (=> (or (not (= $generated@@218 10)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (or (not (= $generated@@218 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0)))))) (=> (and (or (not (= $generated@@218 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (< $generated@@218 200) (or (not (= $generated@@218 16)) (not true)))) (=> (and (< $generated@@218 200) (or (not (= $generated@@218 16)) (not true))) (and (=> (= (ControlFlow 0 5) 3) $generated@@253) (=> (= (ControlFlow 0 5) 4) $generated@@252)))))))))))))))))))))))))))))))))
(let (($generated@@256  (=> (< $generated@@215 ($generated@@75 3)) (and (=> (= (ControlFlow 0 25) 5) $generated@@255) (=> (= (ControlFlow 0 25) 19) $generated@@254)))))
(let (($generated@@257  (=> (and (<= ($generated@@75 3) $generated@@215) (= $generated@@219 ($generated@@75 35))) (and (=> (= (ControlFlow 0 20) (- 0 24)) (and (and (<= ($generated@@75 0) $generated@@219) (< $generated@@219 10000)) (or (not (= $generated@@219 22)) (not true)))) (=> (and (and (<= ($generated@@75 0) $generated@@219) (< $generated@@219 10000)) (or (not (= $generated@@219 22)) (not true))) (and (=> (= (ControlFlow 0 20) (- 0 23)) (or (not (= $generated@@219 10)) (not true))) (=> (or (not (= $generated@@219 10)) (not true)) (and (=> (= (ControlFlow 0 20) (- 0 22)) (and (or (not (= $generated@@219 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0)))))) (=> (and (or (not (= $generated@@219 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0))))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (and (< $generated@@219 200) (or (not (= $generated@@219 16)) (not true)))) (=> (and (< $generated@@219 200) (or (not (= $generated@@219 16)) (not true))) (and (=> (= (ControlFlow 0 20) 5) $generated@@255) (=> (= (ControlFlow 0 20) 19) $generated@@254)))))))))))))
(let (($generated@@258  (=> (and (and (and (and (and (and (<= ($generated@@75 0) $generated@@215) (< $generated@@215 10000)) (or (not (= $generated@@215 22)) (not true))) (or (not (= $generated@@215 10)) (not true))) (and (or (not (= $generated@@215 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0)))))) (and (< $generated@@215 200) (or (not (= $generated@@215 16)) (not true)))) (= $generated@@220 ($generated@@75 3))) (and (=> (= (ControlFlow 0 26) (- 0 30)) (and (and (<= ($generated@@75 0) $generated@@220) (< $generated@@220 10000)) (or (not (= $generated@@220 22)) (not true)))) (=> (and (and (<= ($generated@@75 0) $generated@@220) (< $generated@@220 10000)) (or (not (= $generated@@220 22)) (not true))) (and (=> (= (ControlFlow 0 26) (- 0 29)) (or (not (= $generated@@220 10)) (not true))) (=> (or (not (= $generated@@220 10)) (not true)) (and (=> (= (ControlFlow 0 26) (- 0 28)) (and (or (not (= $generated@@220 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0)))))) (=> (and (or (not (= $generated@@220 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0))))) (and (=> (= (ControlFlow 0 26) (- 0 27)) (and (< $generated@@220 200) (or (not (= $generated@@220 16)) (not true)))) (=> (and (< $generated@@220 200) (or (not (= $generated@@220 16)) (not true))) (and (=> (= (ControlFlow 0 26) 20) $generated@@257) (=> (= (ControlFlow 0 26) 25) $generated@@256)))))))))))))
(let (($generated@@259  (=> (and (not (and (and (and (and (and (<= ($generated@@75 0) $generated@@215) (< $generated@@215 10000)) (or (not (= $generated@@215 22)) (not true))) (or (not (= $generated@@215 10)) (not true))) (and (or (not (= $generated@@215 34)) (not true)) (= ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated))) ($generated@@66 ($generated@@79 $generated@@72 ($generated@@69 $generated@@0)))))) (and (< $generated@@215 200) (or (not (= $generated@@215 16)) (not true))))) (= (ControlFlow 0 2) 1)) $generated@@251)))
(let (($generated@@260  (=> (= $generated@@221 ($generated@@86 ($generated@@47 $generated@@36 $generated@@222))) (and (=> (= (ControlFlow 0 31) 26) $generated@@258) (=> (= (ControlFlow 0 31) 2) $generated@@259)))))
(let (($generated@@261  (=> (and (not ($generated@@28 $generated@@222 ($generated@@83 $generated@@35 $generated@@223))) (= (ControlFlow 0 34) 31)) $generated@@260)))
(let (($generated@@262  (=> (and ($generated@@28 $generated@@222 ($generated@@83 $generated@@35 $generated@@223)) (= (ControlFlow 0 33) 31)) $generated@@260)))
(let (($generated@@263  (=> ($generated@@71 $generated@@35 $generated@@223 $generated@@36) (and (=> (= (ControlFlow 0 35) 33) $generated@@262) (=> (= (ControlFlow 0 35) 34) $generated@@261)))))
(let (($generated@@264  (=> (and (not ($generated@@71 $generated@@35 $generated@@223 $generated@@36)) (= (ControlFlow 0 32) 31)) $generated@@260)))
(let (($generated@@265  (=> (= $generated@@222 ($generated@@86 ($generated@@47 $generated@@0 $generated@@224))) (and (=> (= (ControlFlow 0 36) 35) $generated@@263) (=> (= (ControlFlow 0 36) 32) $generated@@264)))))
(let (($generated@@266  (=> (and (not ($generated@@28 $generated@@224 ($generated@@83 $generated@@35 $generated@@225))) (= (ControlFlow 0 39) 36)) $generated@@265)))
(let (($generated@@267  (=> (and ($generated@@28 $generated@@224 ($generated@@83 $generated@@35 $generated@@225)) (= (ControlFlow 0 38) 36)) $generated@@265)))
(let (($generated@@268  (=> ($generated@@71 $generated@@35 $generated@@225 $generated@@0) (and (=> (= (ControlFlow 0 40) 38) $generated@@267) (=> (= (ControlFlow 0 40) 39) $generated@@266)))))
(let (($generated@@269  (=> (and (not ($generated@@71 $generated@@35 $generated@@225 $generated@@0)) (= (ControlFlow 0 37) 36)) $generated@@265)))
(let (($generated@@270  (=> (= $generated@@226 ($generated@@147 $generated@@227 $generated@@228 $generated@@5 false)) (=> (and (= $generated@@229 ($generated@@77 3.14)) (= $generated@@230 ($generated@@75 100))) (=> (and (and (= $generated@@231 ($generated@@79 $generated@@35 ($generated@@109 99))) (= $generated@@232 ($generated@@79 $generated@@46 ($generated@@99 9876)))) (and (= $generated@@233 ($generated@@234 ($generated@@79 $generated@@235 ($generated@@236 #b1001101)))) (= $generated@@237 ($generated@@238 ($generated@@79 $generated@@239 ($generated@@240 #b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001)))))) (and (=> (= (ControlFlow 0 41) (- 0 42)) ($generated@@100 $generated@@232)) (=> ($generated@@100 $generated@@232) (=> (= $generated@@224 ($generated@@79 $generated@@89 ($generated@@27 ($generated@@27 ($generated@@27 ($generated@@27 ($generated@@27 ($generated@@27 $generated@@64 ($generated@@83 $generated@@35 ($generated@@79 $generated@@35 ($generated@@109 55)))) ($generated@@83 $generated@@35 ($generated@@79 $generated@@35 ($generated@@109 68)))) ($generated@@83 $generated@@35 ($generated@@79 $generated@@35 ($generated@@109 88)))) ($generated@@83 $generated@@35 ($generated@@79 $generated@@35 ($generated@@109 100)))) ($generated@@83 $generated@@35 ($generated@@79 $generated@@35 ($generated@@109 120)))) ($generated@@83 $generated@@35 ($generated@@79 $generated@@35 ($generated@@109 64)))))) (and (=> (= (ControlFlow 0 41) 40) $generated@@268) (=> (= (ControlFlow 0 41) 37) $generated@@269))))))))))
(let (($generated@@271  (=> (and (and (and ($generated@@198 $generated@@228) ($generated@@241 $generated@@228)) (and ($generated@@71 $generated@@35 $generated@@242 $generated@@0) true)) (and (and ($generated@@71 $generated@@89 $generated@@243 ($generated@@90 $generated@@0)) ($generated@@34 $generated@@89 $generated@@243 ($generated@@90 $generated@@0) $generated@@228)) true)) (=> (and (and (and (and ($generated@@71 $generated@@89 $generated@@244 ($generated@@90 $generated@@0)) ($generated@@34 $generated@@89 $generated@@244 ($generated@@90 $generated@@0) $generated@@228)) true) (and (and ($generated@@71 $generated@@89 $generated@@245 ($generated@@90 $generated@@36)) ($generated@@34 $generated@@89 $generated@@245 ($generated@@90 $generated@@36) $generated@@228)) true)) (and (and (and ($generated@@71 $generated@@89 $generated@@246 ($generated@@90 $generated@@39)) ($generated@@34 $generated@@89 $generated@@246 ($generated@@90 $generated@@39) $generated@@228)) true) (and (= 5 $generated@@68) (= (ControlFlow 0 43) 41)))) $generated@@270))))
$generated@@271))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
