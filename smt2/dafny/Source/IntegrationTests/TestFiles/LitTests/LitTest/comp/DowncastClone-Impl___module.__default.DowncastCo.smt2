(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@115 (T@U T@U) Bool)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert ($generated@@26 $generated@@27))
(assert (= ($generated@@28 $generated@@29) $generated@@4))
(assert (= ($generated@@10 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 $generated@@27)  (or (= $generated@@34 $generated@@32) (= ($generated@@33 $generated@@34) $generated@@27)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 $generated@@27))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and ($generated@@35 $generated@@38 $generated@@27 $generated@@39) ($generated@@36 $generated@@39)) ($generated@@35 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@35 $generated@@38 $generated@@27 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 $generated@@31 $generated@@42 $generated@@41 $generated@@43) ($generated@@40 $generated@@31 $generated@@42 $generated@@37 $generated@@43))
 :pattern ( ($generated@@40 $generated@@31 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@40 $generated@@31 $generated@@42 $generated@@37 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@40 $generated@@31 $generated@@45 $generated@@44 $generated@@46) ($generated@@40 $generated@@31 $generated@@45 $generated@@27 $generated@@46))
 :pattern ( ($generated@@40 $generated@@31 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@40 $generated@@31 $generated@@45 $generated@@27 $generated@@46))
)))
(assert (= ($generated@@10 $generated@@47) 4))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> ($generated@@36 $generated@@50) ($generated@@40 $generated@@47 $generated@@29 ($generated@@48 $generated@@49) $generated@@50))
 :pattern ( ($generated@@40 $generated@@47 $generated@@29 ($generated@@48 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ) (! ($generated@@30 $generated@@47 $generated@@29 ($generated@@48 $generated@@51))
 :pattern ( ($generated@@30 $generated@@47 $generated@@29 ($generated@@48 $generated@@51)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@53 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@53 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@53 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@10 $generated@@54) 5)) (= ($generated@@10 $generated@@55) 6)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@10 ($generated@@56 $generated@@71 $generated@@72)) 7))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@56 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@56 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@40 $generated@@31 $generated@@77 $generated@@37 $generated@@78)  (or (= $generated@@77 $generated@@32) ($generated@@15 ($generated@@52 $generated@@11 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@78 $generated@@77) $generated)))))
 :pattern ( ($generated@@40 $generated@@31 $generated@@77 $generated@@37 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@40 $generated@@31 $generated@@79 $generated@@27 $generated@@80)  (or (= $generated@@79 $generated@@32) ($generated@@15 ($generated@@52 $generated@@11 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@80 $generated@@79) $generated)))))
 :pattern ( ($generated@@40 $generated@@31 $generated@@79 $generated@@27 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@81 $generated@@82 $generated@@83) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@15 ($generated@@52 $generated@@11 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@82 $generated@@84) $generated))) ($generated@@15 ($generated@@52 $generated@@11 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@83 $generated@@84) $generated))))
 :pattern ( ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@83 $generated@@84) $generated))
)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 $generated@@89) (= ($generated@@28 $generated@@89) $generated@@3))
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 $generated@@91) (= ($generated@@28 $generated@@91) $generated@@4))
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@52 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@52 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@90 $generated@@95) (= $generated@@95 $generated@@29))
 :pattern ( ($generated@@90 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@88 $generated@@97) (exists (($generated@@98 T@U) ) (= $generated@@97 ($generated@@96 $generated@@98))))
 :pattern ( ($generated@@88 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@35 ($generated@@92 $generated@@102 $generated@@99) $generated@@100 $generated@@101) ($generated@@40 $generated@@102 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@35 ($generated@@92 $generated@@102 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@81 $generated@@103 $generated@@104) (=> ($generated@@35 $generated@@105 $generated@@106 $generated@@103) ($generated@@35 $generated@@105 $generated@@106 $generated@@104)))
 :pattern ( ($generated@@81 $generated@@103 $generated@@104) ($generated@@35 $generated@@105 $generated@@106 $generated@@103))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (!  (=> ($generated@@81 $generated@@107 $generated@@108) (=> ($generated@@40 $generated@@111 $generated@@109 $generated@@110 $generated@@107) ($generated@@40 $generated@@111 $generated@@109 $generated@@110 $generated@@108)))
 :pattern ( ($generated@@81 $generated@@107 $generated@@108) ($generated@@40 $generated@@111 $generated@@109 $generated@@110 $generated@@107))
)))
(assert (forall (($generated@@114 T@U) ) (!  (and (= ($generated@@112 ($generated@@48 $generated@@114)) $generated@@2) (= ($generated@@113 ($generated@@48 $generated@@114)) $generated@@9))
 :pattern ( ($generated@@48 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@115 $generated@@116 $generated@@44) (and (= ($generated@@92 $generated@@31 ($generated@@52 $generated@@31 $generated@@116)) $generated@@116) ($generated@@30 $generated@@31 ($generated@@52 $generated@@31 $generated@@116) $generated@@44)))
 :pattern ( ($generated@@115 $generated@@116 $generated@@44))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@115 $generated@@117 $generated@@41) (and (= ($generated@@92 $generated@@31 ($generated@@52 $generated@@31 $generated@@117)) $generated@@117) ($generated@@30 $generated@@31 ($generated@@52 $generated@@31 $generated@@117) $generated@@41)))
 :pattern ( ($generated@@115 $generated@@117 $generated@@41))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@115 $generated@@118 $generated@@37) (and (= ($generated@@92 $generated@@31 ($generated@@52 $generated@@31 $generated@@118)) $generated@@118) ($generated@@30 $generated@@31 ($generated@@52 $generated@@31 $generated@@118) $generated@@37)))
 :pattern ( ($generated@@115 $generated@@118 $generated@@37))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@115 $generated@@119 $generated@@27) (and (= ($generated@@92 $generated@@31 ($generated@@52 $generated@@31 $generated@@119)) $generated@@119) ($generated@@30 $generated@@31 ($generated@@52 $generated@@31 $generated@@119) $generated@@27)))
 :pattern ( ($generated@@115 $generated@@119 $generated@@27))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@120 $generated@@41)  (and ($generated@@30 $generated@@31 $generated@@120 $generated@@37) (or (not (= $generated@@120 $generated@@32)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@120 $generated@@41))
 :pattern ( ($generated@@30 $generated@@31 $generated@@120 $generated@@37))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@121 $generated@@44)  (and ($generated@@30 $generated@@31 $generated@@121 $generated@@27) (or (not (= $generated@@121 $generated@@32)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@121 $generated@@44))
 :pattern ( ($generated@@30 $generated@@31 $generated@@121 $generated@@27))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@36 $generated@@124) (= ($generated@@40 $generated@@47 ($generated@@96 $generated@@123) ($generated@@48 $generated@@122) $generated@@124) ($generated@@35 $generated@@123 $generated@@122 $generated@@124)))
 :pattern ( ($generated@@40 $generated@@47 ($generated@@96 $generated@@123) ($generated@@48 $generated@@122) $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@40 $generated@@31 $generated@@125 $generated@@27 $generated@@126) ($generated@@40 $generated@@31 $generated@@125 $generated@@37 $generated@@126))
 :pattern ( ($generated@@40 $generated@@31 $generated@@125 $generated@@27 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@30 $generated@@47 $generated@@128 ($generated@@48 $generated@@127)) (or ($generated@@88 $generated@@128) ($generated@@90 $generated@@128)))
 :pattern ( ($generated@@90 $generated@@128) ($generated@@30 $generated@@47 $generated@@128 ($generated@@48 $generated@@127)))
 :pattern ( ($generated@@88 $generated@@128) ($generated@@30 $generated@@47 $generated@@128 ($generated@@48 $generated@@127)))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or (not (= $generated@@129 $generated@@131)) (not true)) (=> (and ($generated@@81 $generated@@129 $generated@@130) ($generated@@81 $generated@@130 $generated@@131)) ($generated@@81 $generated@@129 $generated@@131)))
 :pattern ( ($generated@@81 $generated@@129 $generated@@130) ($generated@@81 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@115 ($generated@@92 $generated@@134 $generated@@132) $generated@@133) ($generated@@30 $generated@@134 $generated@@132 $generated@@133))
 :pattern ( ($generated@@115 ($generated@@92 $generated@@134 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@135 ($generated@@48 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@48 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@28 ($generated@@96 $generated@@137)) $generated@@3)
 :pattern ( ($generated@@96 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@138 ($generated@@96 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@96 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@52 $generated@@141 ($generated@@92 $generated@@141 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@92 $generated@@141 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@30 $generated@@47 ($generated@@96 $generated@@143) ($generated@@48 $generated@@142)) ($generated@@115 $generated@@143 $generated@@142))
 :pattern ( ($generated@@30 $generated@@47 ($generated@@96 $generated@@143) ($generated@@48 $generated@@142)))
)))
(assert (forall (($generated@@146 T@U) ) (! (< ($generated@@144 $generated@@146) ($generated@@145 ($generated@@96 $generated@@146)))
 :pattern ( ($generated@@96 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and ($generated@@36 $generated@@149) (and ($generated@@88 $generated@@147) ($generated@@40 $generated@@47 $generated@@147 ($generated@@48 $generated@@148) $generated@@149))) ($generated@@35 ($generated@@138 $generated@@147) $generated@@148 $generated@@149))
 :pattern ( ($generated@@35 ($generated@@138 $generated@@147) $generated@@148 $generated@@149))
)))
(assert  (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@150 $generated@@153 $generated@@154 $generated@@155 ($generated@@152 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@158 $generated@@159) $generated@@156)
 :weight 0
)) (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@150 $generated@@160 $generated@@161 $generated@@162 ($generated@@152 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@150 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@150 $generated@@169 $generated@@170 $generated@@171 ($generated@@152 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@150 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 Bool) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@15 ($generated@@150 $generated@@31 $generated@@54 $generated@@11 ($generated@@151 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))  (=> (and (or (not (= $generated@@182 $generated@@178)) (not true)) ($generated@@15 ($generated@@52 $generated@@11 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@179 $generated@@182) $generated@@180)))) $generated@@181))
 :pattern ( ($generated@@150 $generated@@31 $generated@@54 $generated@@11 ($generated@@151 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@144 ($generated@@92 $generated@@47 $generated@@184)) ($generated@@145 $generated@@184))
 :pattern ( ($generated@@144 ($generated@@92 $generated@@47 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@115 $generated@@186 ($generated@@48 $generated@@185)) (and (= ($generated@@92 $generated@@47 ($generated@@52 $generated@@47 $generated@@186)) $generated@@186) ($generated@@30 $generated@@47 ($generated@@52 $generated@@47 $generated@@186) ($generated@@48 $generated@@185))))
 :pattern ( ($generated@@115 $generated@@186 ($generated@@48 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@187 $generated@@27) ($generated@@30 $generated@@31 $generated@@187 $generated@@37))
 :pattern ( ($generated@@30 $generated@@31 $generated@@187 $generated@@27))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> ($generated@@115 $generated@@188 $generated@@27) ($generated@@115 $generated@@188 $generated@@37))
 :pattern ( ($generated@@115 $generated@@188 $generated@@27))
)))
(assert (= ($generated@@112 $generated@@44) $generated@@0))
(assert (= ($generated@@113 $generated@@44) $generated@@7))
(assert (= ($generated@@112 $generated@@41) $generated@@1))
(assert (= ($generated@@113 $generated@@41) $generated@@8))
(assert (= ($generated@@112 $generated@@37) $generated@@5))
(assert (= ($generated@@113 $generated@@37) $generated@@8))
(assert (= ($generated@@112 $generated@@27) $generated@@6))
(assert (= ($generated@@113 $generated@@27) $generated@@7))
(assert (= $generated@@29 ($generated@@85 $generated@@47 $generated@@29)))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@189 $generated@@37)  (or (= $generated@@189 $generated@@32) ($generated@@26 ($generated@@33 $generated@@189))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@189 $generated@@37))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@96 ($generated@@85 $generated@@55 $generated@@190)) ($generated@@85 $generated@@47 ($generated@@96 $generated@@190)))
 :pattern ( ($generated@@96 ($generated@@85 $generated@@55 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@T) ) (! (= ($generated@@92 $generated@@192 ($generated@@85 $generated@@192 $generated@@191)) ($generated@@85 $generated@@55 ($generated@@92 $generated@@192 $generated@@191)))
 :pattern ( ($generated@@92 $generated@@192 ($generated@@85 $generated@@192 $generated@@191)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Bool)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@206  (=> (= $generated@@193 ($generated@@151 $generated@@32 $generated@@194 $generated false)) (=> (and (and (or (not (= $generated@@195 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@195 $generated@@44) ($generated@@40 $generated@@31 $generated@@195 $generated@@44 $generated@@194))) (and ($generated@@36 $generated@@196) ($generated@@197 $generated@@196))) (=> (and (and (and (or (not (= $generated@@198 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@198 $generated@@44) ($generated@@40 $generated@@31 $generated@@198 $generated@@44 $generated@@196))) (not ($generated@@15 ($generated@@52 $generated@@11 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@194 $generated@@198) $generated))))) (and (forall (($generated@@207 T@U) ) (!  (=> (and (or (not (= $generated@@207 $generated@@32)) (not true)) ($generated@@15 ($generated@@52 $generated@@11 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@194 $generated@@207) $generated)))) (= ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@196 $generated@@207) ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@194 $generated@@207)))
 :pattern ( ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@196 $generated@@207))
)) ($generated@@81 $generated@@194 $generated@@196))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= $generated@@199 ($generated@@96 ($generated@@92 $generated@@31 $generated@@198))) (=> (and (and ($generated@@30 $generated@@47 $generated@@200 ($generated@@48 $generated@@44)) ($generated@@40 $generated@@47 $generated@@200 ($generated@@48 $generated@@44) $generated@@196)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@30 $generated@@47 $generated@@199 ($generated@@48 $generated@@44))))))))))
(let (($generated@@208  (=> (and (and (and (and ($generated@@36 $generated@@194) ($generated@@197 $generated@@194)) (and (=> $generated@@201 (and ($generated@@30 $generated@@31 $generated@@202 $generated@@44) ($generated@@40 $generated@@31 $generated@@202 $generated@@44 $generated@@194))) true)) (and (and ($generated@@30 $generated@@47 $generated@@203 ($generated@@48 $generated@@41)) ($generated@@40 $generated@@47 $generated@@203 ($generated@@48 $generated@@41) $generated@@194)) true)) (and (and (and ($generated@@30 $generated@@47 $generated@@204 ($generated@@48 $generated@@44)) ($generated@@40 $generated@@47 $generated@@204 ($generated@@48 $generated@@44) $generated@@194)) true) (and (= 1 $generated@@205) (= (ControlFlow 0 4) 2)))) $generated@@206)))
$generated@@208)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
