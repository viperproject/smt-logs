(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@70 (Int) Int)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and (or (not (= $generated@@28 $generated@@24)) (not true)) (= ($generated@@25 $generated@@28) ($generated@@23 $generated@@27))) ($generated@@26 $generated@@7 ($generated@@11 ($generated@@22 $generated@@28)) $generated))
 :pattern ( ($generated@@22 $generated@@28) ($generated@@23 $generated@@27))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@24)) (not true)) (= ($generated@@25 $generated@@31) ($generated@@23 $generated@@30))) ($generated@@26 $generated@@7 ($generated@@11 ($generated@@29 $generated@@31)) $generated))
 :pattern ( ($generated@@29 $generated@@31) ($generated@@23 $generated@@30))
)))
(assert (= ($generated@@5 $generated@@33) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35) $generated@@37) ($generated@@32 $generated@@33 $generated@@36 ($generated@@23 $generated@@35) $generated@@37))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 ($generated@@23 $generated@@35) $generated@@37))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@39 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@39 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@39 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@5 $generated@@40) 4)) (= ($generated@@5 $generated@@41) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@5 ($generated@@42 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@42 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@42 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@42 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@64 ($generated@@23 $generated@@63) $generated@@65)  (or (= $generated@@64 $generated@@24) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@65 $generated@@64) $generated@@1)))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@64 ($generated@@23 $generated@@63) $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@66 $generated@@67 $generated@@68) (forall (($generated@@69 T@U) ) (!  (=> ($generated@@10 ($generated@@38 $generated@@6 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@67 $generated@@69) $generated@@1))) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@68 $generated@@69) $generated@@1))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@68 $generated@@69) $generated@@1))
)))
 :pattern ( ($generated@@66 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@71 Int) ) (! (= ($generated@@70 $generated@@71) $generated@@71)
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@38 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@38 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@26 $generated@@33 $generated@@79 ($generated@@34 $generated@@78))  (and ($generated@@26 $generated@@33 $generated@@79 ($generated@@23 $generated@@78)) (or (not (= $generated@@79 $generated@@24)) (not true))))
 :pattern ( ($generated@@26 $generated@@33 $generated@@79 ($generated@@34 $generated@@78)))
 :pattern ( ($generated@@26 $generated@@33 $generated@@79 ($generated@@23 $generated@@78)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (!  (=> ($generated@@66 $generated@@80 $generated@@81) (=> ($generated@@32 $generated@@84 $generated@@82 $generated@@83 $generated@@80) ($generated@@32 $generated@@84 $generated@@82 $generated@@83 $generated@@81)))
 :pattern ( ($generated@@66 $generated@@80 $generated@@81) ($generated@@32 $generated@@84 $generated@@82 $generated@@83 $generated@@80))
)))
(assert (forall (($generated@@86 T@U) ) (!  (and (= ($generated@@21 ($generated@@23 $generated@@86)) $generated@@2) (= ($generated@@85 ($generated@@23 $generated@@86)) $generated@@4))
 :pattern ( ($generated@@23 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (!  (and (= ($generated@@21 ($generated@@34 $generated@@87)) $generated@@3) (= ($generated@@85 ($generated@@34 $generated@@87)) $generated@@4))
 :pattern ( ($generated@@34 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@26 $generated@@33 $generated@@89 ($generated@@23 $generated@@88))  (or (= $generated@@89 $generated@@24) (= ($generated@@25 $generated@@89) ($generated@@23 $generated@@88))))
 :pattern ( ($generated@@26 $generated@@33 $generated@@89 ($generated@@23 $generated@@88)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or (not (= $generated@@90 $generated@@92)) (not true)) (=> (and ($generated@@66 $generated@@90 $generated@@91) ($generated@@66 $generated@@91 $generated@@92)) ($generated@@66 $generated@@90 $generated@@92)))
 :pattern ( ($generated@@66 $generated@@90 $generated@@91) ($generated@@66 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (! (<= 0 ($generated@@22 $generated@@93))
 :pattern ( ($generated@@22 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (! (<= 0 ($generated@@29 $generated@@94))
 :pattern ( ($generated@@29 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@95 ($generated@@23 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@23 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 ($generated@@34 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@34 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@38 $generated@@100 ($generated@@75 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@75 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and ($generated@@101 $generated@@103) (and (or (not (= $generated@@104 $generated@@24)) (not true)) (= ($generated@@25 $generated@@104) ($generated@@23 $generated@@102)))) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@103 $generated@@104) $generated@@1)))) ($generated@@32 $generated@@7 ($generated@@11 ($generated@@22 $generated@@104)) $generated $generated@@103))
 :pattern ( ($generated@@22 $generated@@104) ($generated@@38 $generated@@6 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@103 $generated@@104) $generated@@1)) ($generated@@23 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and (and ($generated@@101 $generated@@106) (and (or (not (= $generated@@107 $generated@@24)) (not true)) (= ($generated@@25 $generated@@107) ($generated@@23 $generated@@105)))) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@106 $generated@@107) $generated@@1)))) ($generated@@32 $generated@@7 ($generated@@11 ($generated@@29 $generated@@107)) $generated $generated@@106))
 :pattern ( ($generated@@29 $generated@@107) ($generated@@38 $generated@@6 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@106 $generated@@107) $generated@@1)) ($generated@@23 $generated@@105))
)))
(assert  (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@108 $generated@@111 $generated@@112 $generated@@113 ($generated@@110 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@108 $generated@@118 $generated@@119 $generated@@120 ($generated@@110 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@108 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@108 $generated@@127 $generated@@128 $generated@@129 ($generated@@110 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@108 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 Bool) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@10 ($generated@@108 $generated@@33 $generated@@40 $generated@@6 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))  (=> (and (or (not (= $generated@@140 $generated@@136)) (not true)) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@137 $generated@@140) $generated@@138)))) $generated@@139))
 :pattern ( ($generated@@108 $generated@@33 $generated@@40 $generated@@6 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 Int) ) (! (= ($generated@@75 $generated@@7 ($generated@@11 ($generated@@70 $generated@@142))) ($generated@@72 $generated@@41 ($generated@@75 $generated@@7 ($generated@@11 $generated@@142))))
 :pattern ( ($generated@@75 $generated@@7 ($generated@@11 ($generated@@70 $generated@@142))))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@75 $generated@@144 ($generated@@72 $generated@@144 $generated@@143)) ($generated@@72 $generated@@41 ($generated@@75 $generated@@144 $generated@@143)))
 :pattern ( ($generated@@75 $generated@@144 ($generated@@72 $generated@@144 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! ($generated@@32 $generated@@7 $generated@@146 $generated $generated@@145)
 :pattern ( ($generated@@32 $generated@@7 $generated@@146 $generated $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! ($generated@@26 $generated@@7 $generated@@147 $generated)
 :pattern ( ($generated@@26 $generated@@7 $generated@@147 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () Bool)
(declare-fun $generated@@156 () Bool)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@166  (=> (and (< $generated@@148 ($generated@@29 $generated@@149)) (= $generated@@150 (- ($generated@@29 $generated@@149) $generated@@148))) (and (=> (= (ControlFlow 0 12) (- 0 16)) (or (not (= $generated@@149 $generated@@24)) (not true))) (=> (or (not (= $generated@@149 $generated@@24)) (not true)) (and (=> (= (ControlFlow 0 12) (- 0 15)) (and (<= 0 $generated@@151) (< $generated@@151 ($generated@@22 $generated@@149)))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (and (<= 0 $generated@@148) (< $generated@@148 ($generated@@29 $generated@@149)))) (=> (= $generated@@152 (+ $generated@@148 1)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (<= 0 $generated@@150) (= (- ($generated@@29 $generated@@149) $generated@@152) $generated@@150))) (=> (or (<= 0 $generated@@150) (= (- ($generated@@29 $generated@@149) $generated@@152) $generated@@150)) (=> (= (ControlFlow 0 12) (- 0 11)) (< (- ($generated@@29 $generated@@149) $generated@@152) $generated@@150))))))))))))
(let (($generated@@167  (=> (and (<= ($generated@@29 $generated@@149) $generated@@148) (= $generated@@153 (+ $generated@@151 1))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (<= 0 $generated@@154) (= (- ($generated@@22 $generated@@149) $generated@@153) $generated@@154))) (=> (or (<= 0 $generated@@154) (= (- ($generated@@22 $generated@@149) $generated@@153) $generated@@154)) (=> (= (ControlFlow 0 9) (- 0 8)) (< (- ($generated@@22 $generated@@149) $generated@@153) $generated@@154)))))))
(let (($generated@@168  (=> $generated@@155 (and (=> (= (ControlFlow 0 17) (- 0 18)) (or (not (= $generated@@149 $generated@@24)) (not true))) (=> (or (not (= $generated@@149 $generated@@24)) (not true)) (and (=> (= (ControlFlow 0 17) 9) $generated@@167) (=> (= (ControlFlow 0 17) 12) $generated@@166)))))))
(let (($generated@@169  (=> (and (not $generated@@155) (= (ControlFlow 0 7) (- 0 6))) (or (not (= $generated@@149 $generated@@24)) (not true)))))
(let (($generated@@170  (and (=> (= (ControlFlow 0 19) 7) $generated@@169) (=> (= (ControlFlow 0 19) 17) $generated@@168))))
(let (($generated@@171 true))
(let (($generated@@172  (=> (and (and (and (and (not false) (<= 0 $generated@@151)) $generated@@156) (<= 0 $generated@@148)) (and (and (forall (($generated@@173 T@U) ) (!  (=> (and (or (not (= $generated@@173 $generated@@24)) (not true)) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@173) $generated@@1)))) (= ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@173) ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@173)))
 :pattern ( ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@173))
)) ($generated@@66 $generated@@157 $generated@@157)) (and (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (or (not (= $generated@@174 $generated@@24)) (not true)) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@174) $generated@@1)))) (or (= ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@174) $generated@@175) ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@174) $generated@@175)) ($generated@@10 ($generated@@108 $generated@@33 $generated@@40 $generated@@6 $generated@@158 $generated@@174 $generated@@175))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@174) $generated@@175))
)) (<= (- ($generated@@29 $generated@@149) $generated@@148) $generated@@159)))) (and (=> (= (ControlFlow 0 20) 5) $generated@@171) (=> (= (ControlFlow 0 20) 19) $generated@@170)))))
(let (($generated@@176  (=> (< $generated@@151 ($generated@@22 $generated@@149)) (=> (and (and (= $generated@@154 (- ($generated@@22 $generated@@149) $generated@@151)) (= $generated@@160 ($generated@@70 0))) (and (= $generated@@159 (- ($generated@@29 $generated@@149) $generated@@160)) (= (ControlFlow 0 21) 20))) $generated@@172))))
(let (($generated@@177 true))
(let (($generated@@178  (=> $generated@@156 (and (=> (= (ControlFlow 0 22) (- 0 23)) (or (not (= $generated@@149 $generated@@24)) (not true))) (=> (or (not (= $generated@@149 $generated@@24)) (not true)) (and (=> (= (ControlFlow 0 22) 4) $generated@@177) (=> (= (ControlFlow 0 22) 21) $generated@@176)))))))
(let (($generated@@179  (=> (and (not $generated@@156) (= (ControlFlow 0 3) (- 0 2))) (or (not (= $generated@@149 $generated@@24)) (not true)))))
(let (($generated@@180  (and (=> (= (ControlFlow 0 24) 3) $generated@@179) (=> (= (ControlFlow 0 24) 22) $generated@@178))))
(let (($generated@@181 true))
(let (($generated@@182  (=> (and (not false) (<= 0 $generated@@151)) (=> (and (and (forall (($generated@@183 T@U) ) (!  (=> (and (or (not (= $generated@@183 $generated@@24)) (not true)) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@183) $generated@@1)))) (= ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@183) ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@183)))
 :pattern ( ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@183))
)) ($generated@@66 $generated@@157 $generated@@157)) (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (or (not (= $generated@@184 $generated@@24)) (not true)) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@184) $generated@@1)))) (or (= ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@184) $generated@@185) ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@184) $generated@@185)) ($generated@@10 ($generated@@108 $generated@@33 $generated@@40 $generated@@6 $generated@@158 $generated@@184 $generated@@185))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@184) $generated@@185))
)) (<= (- ($generated@@22 $generated@@149) $generated@@151) $generated@@161))) (and (=> (= (ControlFlow 0 25) 1) $generated@@181) (=> (= (ControlFlow 0 25) 24) $generated@@180))))))
(let (($generated@@186  (=> (and (and (= $generated@@158 ($generated@@109 $generated@@24 $generated@@157 $generated@@1 false)) (= $generated@@162 ($generated@@70 0))) (and (= $generated@@161 (- ($generated@@22 $generated@@149) $generated@@162)) (= (ControlFlow 0 26) 25))) $generated@@182)))
(let (($generated@@187  (=> (and ($generated@@101 $generated@@157) ($generated@@163 $generated@@157)) (=> (and (and ($generated@@26 $generated@@33 $generated@@149 ($generated@@34 $generated@@164)) ($generated@@32 $generated@@33 $generated@@149 ($generated@@34 $generated@@164) $generated@@157)) (and (= 0 $generated@@165) (= (ControlFlow 0 27) 26))) $generated@@186))))
$generated@@187)))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
