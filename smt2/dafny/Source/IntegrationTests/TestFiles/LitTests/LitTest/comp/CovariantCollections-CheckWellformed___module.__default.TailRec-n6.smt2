(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@42 (T@U T@U T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@90 (Int) Int)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@114 () Int)
(declare-fun $generated@@115 (T@U Int Int T@U) Int)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@117 (Int Int T@U) Bool)
(declare-fun $generated@@118 (Int Int) Int)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@31 $generated@@16 $generated@@33 $generated@@32 $generated@@34)
 :pattern ( ($generated@@31 $generated@@16 $generated@@33 $generated@@32 $generated@@34))
)))
(assert ($generated@@35 $generated@@36))
(assert (= ($generated@@14 $generated@@38) 3))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@41 $generated@@36)  (or (= $generated@@41 $generated@@39) (= ($generated@@40 $generated@@41) $generated@@36)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@41 $generated@@36))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (and ($generated@@42 $generated@@46 $generated@@43 $generated@@47) ($generated@@44 $generated@@47)) ($generated@@42 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@42 $generated@@46 $generated@@43 $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (and ($generated@@42 $generated@@48 $generated@@36 $generated@@49) ($generated@@44 $generated@@49)) ($generated@@42 $generated@@48 $generated@@43 $generated@@49))
 :pattern ( ($generated@@42 $generated@@48 $generated@@36 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@51 $generated@@50 $generated@@52) ($generated@@31 $generated@@38 $generated@@51 $generated@@45 $generated@@52))
 :pattern ( ($generated@@31 $generated@@38 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@31 $generated@@38 $generated@@51 $generated@@45 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@54 $generated@@53 $generated@@55) ($generated@@31 $generated@@38 $generated@@54 $generated@@43 $generated@@55))
 :pattern ( ($generated@@31 $generated@@38 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@31 $generated@@38 $generated@@54 $generated@@43 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@57 $generated@@56 $generated@@58) ($generated@@31 $generated@@38 $generated@@57 $generated@@36 $generated@@58))
 :pattern ( ($generated@@31 $generated@@38 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@31 $generated@@38 $generated@@57 $generated@@36 $generated@@58))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@60 $generated@@67 $generated@@68 ($generated@@64 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@71) $generated@@69)
 :weight 0
)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@60 $generated@@72 $generated@@73 ($generated@@64 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@60 $generated@@72 $generated@@73 $generated@@75 $generated@@77)))
 :weight 0
))) (= ($generated@@14 $generated@@61) 4)) (= ($generated@@14 $generated@@62) 5)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (= ($generated@@14 ($generated@@63 $generated@@78 $generated@@79)) 6))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@65 ($generated@@63 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@66 ($generated@@63 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@63 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@84 $generated@@45 $generated@@85)  (or (= $generated@@84 $generated@@39) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@85 $generated@@84) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@38 $generated@@84 $generated@@45 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@86 $generated@@43 $generated@@87)  (or (= $generated@@86 $generated@@39) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@87 $generated@@86) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@38 $generated@@86 $generated@@43 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@88 $generated@@36 $generated@@89)  (or (= $generated@@88 $generated@@39) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@89 $generated@@88) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@38 $generated@@88 $generated@@36 $generated@@89))
)))
(assert (forall (($generated@@91 Int) ) (! (= ($generated@@90 $generated@@91) $generated@@91)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@95 $generated@@97 $generated@@98) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@96 $generated@@97 $generated@@99) ($generated@@96 $generated@@98 $generated@@99))
 :pattern ( ($generated@@96 $generated@@97 $generated@@99))
 :pattern ( ($generated@@96 $generated@@98 $generated@@99))
)))
 :pattern ( ($generated@@95 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 ($generated@@59 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@59 $generated@@102 $generated@@101))
)))
(assert (= ($generated@@14 $generated@@103) 7))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@37 $generated@@103 $generated@@106 ($generated@@104 $generated@@107)) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@96 $generated@@106 $generated@@108) ($generated@@105 $generated@@108 $generated@@107))
 :pattern ( ($generated@@96 $generated@@106 $generated@@108))
)))
 :pattern ( ($generated@@37 $generated@@103 $generated@@106 ($generated@@104 $generated@@107)))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@37 $generated@@16 $generated@@109 $generated@@32) (<= ($generated@@90 0) ($generated@@21 $generated@@109)))
 :pattern ( ($generated@@37 $generated@@16 $generated@@109 $generated@@32))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@42 ($generated@@100 $generated@@113 $generated@@110) $generated@@111 $generated@@112) ($generated@@31 $generated@@113 $generated@@110 $generated@@111 $generated@@112))
 :pattern ( ($generated@@42 ($generated@@100 $generated@@113 $generated@@110) $generated@@111 $generated@@112))
)))
(assert  (=> (<= 1 $generated@@114) (forall (($generated@@119 T@U) ($generated@@120 Int) ($generated@@121 Int) ($generated@@122 T@U) ) (!  (=> (or ($generated@@117 ($generated@@90 $generated@@120) ($generated@@90 $generated@@121) ($generated@@92 $generated@@103 $generated@@122)) (and (< 1 $generated@@114) (and (<= ($generated@@90 0) $generated@@120) ($generated@@37 $generated@@103 $generated@@122 ($generated@@104 $generated@@56))))) (and (let (($generated@@123 ($generated@@92 $generated@@103 $generated@@122)))
 (=> (or (not (= ($generated@@90 $generated@@120) ($generated@@90 0))) (not true)) ($generated@@117 ($generated@@90 (- $generated@@120 1)) ($generated@@90 ($generated@@118 ($generated@@90 100) ($generated@@90 $generated@@121))) $generated@@123))) (= ($generated@@115 ($generated@@116 $generated@@119) ($generated@@90 $generated@@120) ($generated@@90 $generated@@121) ($generated@@92 $generated@@103 $generated@@122)) (let (($generated@@124 ($generated@@92 $generated@@103 $generated@@122)))
(ite (= ($generated@@90 $generated@@120) ($generated@@90 0)) 16 ($generated@@115 ($generated@@116 $generated@@119) ($generated@@90 (- $generated@@120 1)) ($generated@@90 ($generated@@118 ($generated@@90 100) ($generated@@90 $generated@@121))) $generated@@124))))))
 :weight 3
 :pattern ( ($generated@@115 ($generated@@116 $generated@@119) ($generated@@90 $generated@@120) ($generated@@90 $generated@@121) ($generated@@92 $generated@@103 $generated@@122)))
))))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@105 $generated@@125 $generated@@32) (and (= ($generated@@100 $generated@@16 ($generated@@59 $generated@@16 $generated@@125)) $generated@@125) ($generated@@37 $generated@@16 ($generated@@59 $generated@@16 $generated@@125) $generated@@32)))
 :pattern ( ($generated@@105 $generated@@125 $generated@@32))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@105 $generated@@126 $generated@@45) (and (= ($generated@@100 $generated@@38 ($generated@@59 $generated@@38 $generated@@126)) $generated@@126) ($generated@@37 $generated@@38 ($generated@@59 $generated@@38 $generated@@126) $generated@@45)))
 :pattern ( ($generated@@105 $generated@@126 $generated@@45))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@105 $generated@@127 $generated@@50) (and (= ($generated@@100 $generated@@38 ($generated@@59 $generated@@38 $generated@@127)) $generated@@127) ($generated@@37 $generated@@38 ($generated@@59 $generated@@38 $generated@@127) $generated@@50)))
 :pattern ( ($generated@@105 $generated@@127 $generated@@50))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@105 $generated@@128 $generated@@53) (and (= ($generated@@100 $generated@@38 ($generated@@59 $generated@@38 $generated@@128)) $generated@@128) ($generated@@37 $generated@@38 ($generated@@59 $generated@@38 $generated@@128) $generated@@53)))
 :pattern ( ($generated@@105 $generated@@128 $generated@@53))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@105 $generated@@129 $generated@@56) (and (= ($generated@@100 $generated@@38 ($generated@@59 $generated@@38 $generated@@129)) $generated@@129) ($generated@@37 $generated@@38 ($generated@@59 $generated@@38 $generated@@129) $generated@@56)))
 :pattern ( ($generated@@105 $generated@@129 $generated@@56))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@105 $generated@@130 $generated@@43) (and (= ($generated@@100 $generated@@38 ($generated@@59 $generated@@38 $generated@@130)) $generated@@130) ($generated@@37 $generated@@38 ($generated@@59 $generated@@38 $generated@@130) $generated@@43)))
 :pattern ( ($generated@@105 $generated@@130 $generated@@43))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@105 $generated@@131 $generated@@36) (and (= ($generated@@100 $generated@@38 ($generated@@59 $generated@@38 $generated@@131)) $generated@@131) ($generated@@37 $generated@@38 ($generated@@59 $generated@@38 $generated@@131) $generated@@36)))
 :pattern ( ($generated@@105 $generated@@131 $generated@@36))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@132 $generated@@50)  (and ($generated@@37 $generated@@38 $generated@@132 $generated@@45) (or (not (= $generated@@132 $generated@@39)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@132 $generated@@50))
 :pattern ( ($generated@@37 $generated@@38 $generated@@132 $generated@@45))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@133 $generated@@53)  (and ($generated@@37 $generated@@38 $generated@@133 $generated@@43) (or (not (= $generated@@133 $generated@@39)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@133 $generated@@53))
 :pattern ( ($generated@@37 $generated@@38 $generated@@133 $generated@@43))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@134 $generated@@56)  (and ($generated@@37 $generated@@38 $generated@@134 $generated@@36) (or (not (= $generated@@134 $generated@@39)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@134 $generated@@56))
 :pattern ( ($generated@@37 $generated@@38 $generated@@134 $generated@@36))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> ($generated@@31 $generated@@38 $generated@@135 $generated@@43 $generated@@136) ($generated@@31 $generated@@38 $generated@@135 $generated@@45 $generated@@136))
 :pattern ( ($generated@@31 $generated@@38 $generated@@135 $generated@@43 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@31 $generated@@38 $generated@@137 $generated@@36 $generated@@138) ($generated@@31 $generated@@38 $generated@@137 $generated@@43 $generated@@138))
 :pattern ( ($generated@@31 $generated@@38 $generated@@137 $generated@@36 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@105 $generated@@139 $generated) (and (= ($generated@@100 $generated@@16 ($generated@@59 $generated@@16 $generated@@139)) $generated@@139) ($generated@@37 $generated@@16 ($generated@@59 $generated@@16 $generated@@139) $generated)))
 :pattern ( ($generated@@105 $generated@@139 $generated))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@105 ($generated@@100 $generated@@142 $generated@@140) $generated@@141) ($generated@@37 $generated@@142 $generated@@140 $generated@@141))
 :pattern ( ($generated@@105 ($generated@@100 $generated@@142 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@31 $generated@@103 $generated@@143 ($generated@@104 $generated@@144) $generated@@145) (forall (($generated@@146 T@U) ) (!  (=> ($generated@@96 $generated@@143 $generated@@146) ($generated@@42 $generated@@146 $generated@@144 $generated@@145))
 :pattern ( ($generated@@96 $generated@@143 $generated@@146))
)))
 :pattern ( ($generated@@31 $generated@@103 $generated@@143 ($generated@@104 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! ($generated@@37 $generated@@38 $generated@@147 $generated@@45)
 :pattern ( ($generated@@37 $generated@@38 $generated@@147 $generated@@45))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@104 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@104 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@30 ($generated@@104 $generated@@150)) $generated@@1)
 :pattern ( ($generated@@104 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@59 $generated@@152 ($generated@@100 $generated@@152 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@100 $generated@@152 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ($generated@@155 Int) ($generated@@156 T@U) ) (! (= ($generated@@115 ($generated@@116 $generated@@153) $generated@@154 $generated@@155 $generated@@156) ($generated@@115 $generated@@153 $generated@@154 $generated@@155 $generated@@156))
 :pattern ( ($generated@@115 ($generated@@116 $generated@@153) $generated@@154 $generated@@155 $generated@@156))
)))
(assert  (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@157 $generated@@160 $generated@@161 $generated@@162 ($generated@@159 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@165 $generated@@166) $generated@@163)
 :weight 0
)) (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@157 $generated@@167 $generated@@168 $generated@@169 ($generated@@159 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@157 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@157 $generated@@176 $generated@@177 $generated@@178 ($generated@@159 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@183 $generated@@184) ($generated@@157 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@183 $generated@@184)))
 :weight 0
)))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 Bool) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@19 ($generated@@157 $generated@@38 $generated@@61 $generated@@15 ($generated@@158 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))  (=> (and (or (not (= $generated@@189 $generated@@185)) (not true)) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@38 ($generated@@63 $generated@@61 $generated@@62) $generated@@186 $generated@@189) $generated@@187)))) $generated@@188))
 :pattern ( ($generated@@157 $generated@@38 $generated@@61 $generated@@15 ($generated@@158 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 Int) ($generated@@192 Int) ) (! (= ($generated@@118 $generated@@191 $generated@@192) (* $generated@@191 $generated@@192))
 :pattern ( ($generated@@118 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@105 $generated@@193 ($generated@@104 $generated@@194)) (and (= ($generated@@100 $generated@@103 ($generated@@59 $generated@@103 $generated@@193)) $generated@@193) ($generated@@37 $generated@@103 ($generated@@59 $generated@@103 $generated@@193) ($generated@@104 $generated@@194))))
 :pattern ( ($generated@@105 $generated@@193 ($generated@@104 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@195 $generated@@43) ($generated@@37 $generated@@38 $generated@@195 $generated@@45))
 :pattern ( ($generated@@37 $generated@@38 $generated@@195 $generated@@43))
)))
(assert (forall (($generated@@196 T@U) ) (!  (=> ($generated@@105 $generated@@196 $generated@@43) ($generated@@105 $generated@@196 $generated@@45))
 :pattern ( ($generated@@105 $generated@@196 $generated@@43))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@197 $generated@@36) ($generated@@37 $generated@@38 $generated@@197 $generated@@43))
 :pattern ( ($generated@@37 $generated@@38 $generated@@197 $generated@@36))
)))
(assert (forall (($generated@@198 T@U) ) (!  (=> ($generated@@105 $generated@@198 $generated@@36) ($generated@@105 $generated@@198 $generated@@43))
 :pattern ( ($generated@@105 $generated@@198 $generated@@36))
)))
(assert (= ($generated@@30 $generated@@32) $generated@@3))
(assert (= ($generated@@199 $generated@@32) $generated@@10))
(assert (= ($generated@@30 $generated@@45) $generated@@4))
(assert (= ($generated@@199 $generated@@45) $generated@@11))
(assert (= ($generated@@30 $generated@@50) $generated@@5))
(assert (= ($generated@@199 $generated@@50) $generated@@11))
(assert (= ($generated@@30 $generated@@53) $generated@@6))
(assert (= ($generated@@199 $generated@@53) $generated@@12))
(assert (= ($generated@@30 $generated@@56) $generated@@7))
(assert (= ($generated@@199 $generated@@56) $generated@@13))
(assert (= ($generated@@30 $generated@@43) $generated@@8))
(assert (= ($generated@@199 $generated@@43) $generated@@12))
(assert (= ($generated@@30 $generated@@36) $generated@@9))
(assert (= ($generated@@199 $generated@@36) $generated@@13))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@200 $generated@@43)  (or (= $generated@@200 $generated@@39) ($generated@@35 ($generated@@40 $generated@@200))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@200 $generated@@43))
)))
(assert (forall (($generated@@201 Int) ) (! (= ($generated@@100 $generated@@16 ($generated@@20 ($generated@@90 $generated@@201))) ($generated@@92 $generated@@62 ($generated@@100 $generated@@16 ($generated@@20 $generated@@201))))
 :pattern ( ($generated@@100 $generated@@16 ($generated@@20 ($generated@@90 $generated@@201))))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@T) ) (! (= ($generated@@100 $generated@@203 ($generated@@92 $generated@@203 $generated@@202)) ($generated@@92 $generated@@62 ($generated@@100 $generated@@203 $generated@@202)))
 :pattern ( ($generated@@100 $generated@@203 ($generated@@92 $generated@@203 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! ($generated@@31 $generated@@16 $generated@@205 $generated $generated@@204)
 :pattern ( ($generated@@31 $generated@@16 $generated@@205 $generated $generated@@204))
)))
(assert  (=> (<= 1 $generated@@114) (forall (($generated@@206 T@U) ($generated@@207 Int) ($generated@@208 Int) ($generated@@209 T@U) ) (!  (=> (or ($generated@@117 $generated@@207 $generated@@208 $generated@@209) (and (< 1 $generated@@114) (and (<= ($generated@@90 0) $generated@@207) ($generated@@37 $generated@@103 $generated@@209 ($generated@@104 $generated@@56))))) (and (let (($generated@@210 $generated@@209))
 (=> (or (not (= $generated@@207 ($generated@@90 0))) (not true)) ($generated@@117 (- $generated@@207 1) ($generated@@118 ($generated@@90 100) $generated@@208) $generated@@210))) (= ($generated@@115 ($generated@@116 $generated@@206) $generated@@207 $generated@@208 $generated@@209) (let (($generated@@211 $generated@@209))
(ite (= $generated@@207 ($generated@@90 0)) 16 ($generated@@115 $generated@@206 (- $generated@@207 1) ($generated@@118 ($generated@@90 100) $generated@@208) $generated@@211))))))
 :pattern ( ($generated@@115 ($generated@@116 $generated@@206) $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@212 T@U) ) (! ($generated@@37 $generated@@16 $generated@@212 $generated)
 :pattern ( ($generated@@37 $generated@@16 $generated@@212 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@223  (=> (or (not (= $generated@@213 ($generated@@90 0))) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@37 $generated@@16 ($generated@@20 (- $generated@@213 1)) $generated@@32)) (=> ($generated@@37 $generated@@16 ($generated@@20 (- $generated@@213 1)) $generated@@32) (=> (and (and (= $generated@@214 (- $generated@@213 1)) ($generated@@31 $generated@@16 ($generated@@20 $generated@@214) $generated@@32 $generated@@215)) (and (= $generated@@216 ($generated@@118 ($generated@@90 100) $generated@@217)) ($generated@@31 $generated@@16 ($generated@@20 $generated@@216) $generated $generated@@215))) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@37 $generated@@103 $generated@@218 ($generated@@104 $generated@@56))) (=> ($generated@@37 $generated@@103 $generated@@218 ($generated@@104 $generated@@56)) (=> ($generated@@31 $generated@@103 $generated@@218 ($generated@@104 $generated@@56) $generated@@215) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@213) (= $generated@@214 $generated@@213))) (=> (or (<= 0 $generated@@213) (= $generated@@214 $generated@@213)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (<= 0 $generated@@217) (< $generated@@214 $generated@@213)) (= $generated@@216 $generated@@217))) (=> (or (or (<= 0 $generated@@217) (< $generated@@214 $generated@@213)) (= $generated@@216 $generated@@217)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< $generated@@214 $generated@@213) (and (= $generated@@214 $generated@@213) (or (< $generated@@216 $generated@@217) (and (= $generated@@216 $generated@@217) (and ($generated@@95 $generated@@218 $generated@@219) (not ($generated@@95 $generated@@219 $generated@@218)))))))))))))))))))))
(let (($generated@@224 true))
(let (($generated@@225  (=> (= $generated@@220 $generated@@219) (=> (and ($generated@@37 $generated@@103 $generated@@220 ($generated@@104 $generated@@53)) (= $generated@@218 $generated@@220)) (and (=> (= (ControlFlow 0 9) 2) $generated@@224) (=> (= (ControlFlow 0 9) 4) $generated@@223))))))
(let (($generated@@226 true))
(let (($generated@@227  (=> (= $generated@@221 ($generated@@158 $generated@@39 $generated@@215 $generated@@2 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@226) (=> (= (ControlFlow 0 10) 9) $generated@@225)))))
(let (($generated@@228  (=> (and ($generated@@44 $generated@@215) ($generated@@222 $generated@@215)) (=> (and (and (<= ($generated@@90 0) $generated@@213) ($generated@@37 $generated@@103 $generated@@219 ($generated@@104 $generated@@56))) (and (= 1 $generated@@114) (= (ControlFlow 0 11) 10))) $generated@@227))))
$generated@@228)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
