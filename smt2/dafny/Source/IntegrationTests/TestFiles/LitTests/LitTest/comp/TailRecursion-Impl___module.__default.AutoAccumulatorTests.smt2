(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@54 (T@U) Int)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@63 (T@T T@U T@U) Bool)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@67 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@96 () Int)
(declare-fun $generated@@97 (T@U Int) T@U)
(declare-fun $generated@@98 (Int) Bool)
(declare-fun $generated@@99 (Int) Int)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (Int Int) Int)
(declare-fun $generated@@106 (T@T T@U) T@U)
(declare-fun $generated@@110 (T@T T@U) T@U)
(declare-fun $generated@@113 (T@U) Bool)
(declare-fun $generated@@115 (T@U) Bool)
(declare-fun $generated@@121 (T@U T@U) Bool)
(declare-fun $generated@@125 (Int T@U) T@U)
(declare-fun $generated@@130 (T@U T@U) Bool)
(declare-fun $generated@@135 (T@U T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U Int) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Int)
(declare-fun $generated@@199 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@200 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@201 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! ($generated@@28 ($generated@@27 $generated@@29 $generated@@30) $generated@@30)
 :pattern ( ($generated@@27 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@28 $generated@@31 $generated@@33) ($generated@@28 ($generated@@27 $generated@@31 $generated@@32) $generated@@33))
 :pattern ( ($generated@@27 $generated@@31 $generated@@32) ($generated@@28 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@28 $generated@@35 $generated@@37) ($generated@@28 ($generated@@34 $generated@@35 $generated@@36) $generated@@37))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36) ($generated@@28 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@28 $generated@@39 $generated@@40) ($generated@@28 ($generated@@34 $generated@@38 $generated@@39) $generated@@40))
 :pattern ( ($generated@@34 $generated@@38 $generated@@39) ($generated@@28 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! ($generated@@41 $generated@@12 $generated@@43 $generated@@42 $generated@@44)
 :pattern ( ($generated@@41 $generated@@12 $generated@@43 $generated@@42 $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@28 ($generated@@27 $generated@@45 $generated@@46) $generated@@47)  (or (= $generated@@47 $generated@@46) ($generated@@28 $generated@@45 $generated@@47)))
 :pattern ( ($generated@@28 ($generated@@27 $generated@@45 $generated@@46) $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> ($generated@@28 $generated@@50 $generated@@51) (not ($generated@@28 ($generated@@48 $generated@@49 $generated@@50) $generated@@51)))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50) ($generated@@28 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (!  (not ($generated@@28 $generated@@52 $generated@@53))
 :pattern ( ($generated@@28 $generated@@52 $generated@@53))
)))
(assert (= ($generated@@54 $generated@@55) 0))
(assert (= ($generated@@56 $generated@@57) $generated@@6))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@34 ($generated@@34 $generated@@58 $generated@@59) $generated@@59) ($generated@@34 $generated@@58 $generated@@59))
 :pattern ( ($generated@@34 ($generated@@34 $generated@@58 $generated@@59) $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@28 ($generated@@48 $generated@@60 $generated@@61) $generated@@62)  (and ($generated@@28 $generated@@60 $generated@@62) (not ($generated@@28 $generated@@61 $generated@@62))))
 :pattern ( ($generated@@28 ($generated@@48 $generated@@60 $generated@@61) $generated@@62))
)))
(assert (= ($generated@@10 $generated@@64) 3))
(assert ($generated@@63 $generated@@64 $generated@@57 $generated@@65))
(assert  (and (and (and (and (and (and (and (forall (($generated@@76 T@T) ($generated@@77 T@T) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@67 $generated@@76 $generated@@77 ($generated@@73 $generated@@76 $generated@@77 $generated@@79 $generated@@80 $generated@@78) $generated@@80) $generated@@78)
 :weight 0
)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or (= $generated@@85 $generated@@86) (= ($generated@@67 $generated@@81 $generated@@82 ($generated@@73 $generated@@81 $generated@@82 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@67 $generated@@81 $generated@@82 $generated@@84 $generated@@86)))
 :weight 0
))) (= ($generated@@10 $generated@@68) 4)) (= ($generated@@10 $generated@@69) 5)) (= ($generated@@10 $generated@@70) 6)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@10 ($generated@@71 $generated@@87 $generated@@88)) 7))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@71 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@71 $generated@@91 $generated@@92))
))))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@66 $generated@@93 $generated@@94) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@15 ($generated@@72 $generated@@11 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@93 $generated@@95) $generated@@3))) ($generated@@15 ($generated@@72 $generated@@11 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@94 $generated@@95) $generated@@3))))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@94 $generated@@95) $generated@@3))
)))
 :pattern ( ($generated@@66 $generated@@93 $generated@@94))
)))
(assert (= ($generated@@10 $generated@@100) 8))
(assert  (=> (<= 0 $generated@@96) (forall (($generated@@102 T@U) ($generated@@103 Int) ) (!  (=> (or ($generated@@98 $generated@@103) (and (< 0 $generated@@96) (<= ($generated@@99 0) $generated@@103))) ($generated@@63 $generated@@100 ($generated@@97 $generated@@102 $generated@@103) ($generated@@101 $generated@@42)))
 :pattern ( ($generated@@97 $generated@@102 $generated@@103))
))))
(assert  (=> (<= 0 $generated@@96) (forall (($generated@@107 T@U) ($generated@@108 Int) ) (!  (=> (or ($generated@@98 $generated@@108) (and (< 0 $generated@@96) (<= ($generated@@99 0) $generated@@108))) (and (=> (or (not (= $generated@@108 ($generated@@99 0))) (not true)) (and (=> (= ($generated@@105 $generated@@108 ($generated@@99 2)) ($generated@@99 0)) ($generated@@98 (- $generated@@108 1))) (=> (or (not (= ($generated@@105 $generated@@108 ($generated@@99 2)) ($generated@@99 0))) (not true)) ($generated@@98 (- $generated@@108 1))))) (= ($generated@@97 ($generated@@104 $generated@@107) $generated@@108) (ite (= $generated@@108 ($generated@@99 0)) ($generated@@27 $generated@@52 ($generated@@106 $generated@@12 ($generated@@16 ($generated@@99 0)))) (ite (= ($generated@@105 $generated@@108 ($generated@@99 2)) ($generated@@99 0)) ($generated@@34 ($generated@@97 $generated@@107 (- $generated@@108 1)) ($generated@@27 $generated@@52 ($generated@@106 $generated@@12 ($generated@@16 $generated@@108)))) ($generated@@34 ($generated@@27 $generated@@52 ($generated@@106 $generated@@12 ($generated@@16 $generated@@108))) ($generated@@97 $generated@@107 (- $generated@@108 1))))))))
 :pattern ( ($generated@@97 ($generated@@104 $generated@@107) $generated@@108))
))))
(assert (forall (($generated@@109 Int) ) (! (= ($generated@@99 $generated@@109) $generated@@109)
 :pattern ( ($generated@@99 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@110 $generated@@112 $generated@@111) $generated@@111)
 :pattern ( ($generated@@110 $generated@@112 $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 $generated@@114) (= ($generated@@56 $generated@@114) $generated@@6))
 :pattern ( ($generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@115 $generated@@116) (= ($generated@@56 $generated@@116) $generated@@7))
 :pattern ( ($generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@106 $generated@@118 ($generated@@72 $generated@@118 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@72 $generated@@118 $generated@@117))
)))
(assert  (=> (<= 0 $generated@@96) (forall (($generated@@119 T@U) ($generated@@120 Int) ) (!  (=> (or ($generated@@98 ($generated@@99 $generated@@120)) (and (< 0 $generated@@96) (<= ($generated@@99 0) $generated@@120))) (and (=> (or (not (= ($generated@@99 $generated@@120) ($generated@@99 0))) (not true)) (and (=> (= ($generated@@99 ($generated@@105 $generated@@120 ($generated@@99 2))) ($generated@@99 0)) ($generated@@98 ($generated@@99 (- $generated@@120 1)))) (=> (or (not (= ($generated@@99 ($generated@@105 $generated@@120 ($generated@@99 2))) ($generated@@99 0))) (not true)) ($generated@@98 ($generated@@99 (- $generated@@120 1)))))) (= ($generated@@97 ($generated@@104 $generated@@119) ($generated@@99 $generated@@120)) (ite (= ($generated@@99 $generated@@120) ($generated@@99 0)) ($generated@@27 $generated@@52 ($generated@@106 $generated@@12 ($generated@@16 ($generated@@99 0)))) (ite (= ($generated@@99 ($generated@@105 $generated@@120 ($generated@@99 2))) ($generated@@99 0)) ($generated@@34 ($generated@@97 ($generated@@104 $generated@@119) ($generated@@99 (- $generated@@120 1))) ($generated@@27 $generated@@52 ($generated@@106 $generated@@12 ($generated@@16 ($generated@@99 $generated@@120))))) ($generated@@34 ($generated@@27 $generated@@52 ($generated@@106 $generated@@12 ($generated@@16 ($generated@@99 $generated@@120)))) ($generated@@97 ($generated@@104 $generated@@119) ($generated@@99 (- $generated@@120 1)))))))))
 :weight 3
 :pattern ( ($generated@@97 ($generated@@104 $generated@@119) ($generated@@99 $generated@@120)))
))))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@121 $generated@@122 $generated@@123) (forall (($generated@@124 T@U) ) (!  (or (not ($generated@@28 $generated@@122 $generated@@124)) (not ($generated@@28 $generated@@123 $generated@@124)))
 :pattern ( ($generated@@28 $generated@@122 $generated@@124))
 :pattern ( ($generated@@28 $generated@@123 $generated@@124))
)))
 :pattern ( ($generated@@121 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@115 $generated@@126) (exists (($generated@@127 Int) ($generated@@128 T@U) ) (= $generated@@126 ($generated@@125 $generated@@127 $generated@@128))))
 :pattern ( ($generated@@115 $generated@@126))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@113 $generated@@129) (= $generated@@129 $generated@@57))
 :pattern ( ($generated@@113 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@63 $generated@@100 $generated@@131 ($generated@@101 $generated@@132)) (forall (($generated@@133 T@U) ) (!  (=> ($generated@@28 $generated@@131 $generated@@133) ($generated@@130 $generated@@133 $generated@@132))
 :pattern ( ($generated@@28 $generated@@131 $generated@@133))
)))
 :pattern ( ($generated@@63 $generated@@100 $generated@@131 ($generated@@101 $generated@@132)))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@63 $generated@@12 $generated@@134 $generated@@42) (<= ($generated@@99 0) ($generated@@17 $generated@@134)))
 :pattern ( ($generated@@63 $generated@@12 $generated@@134 $generated@@42))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@135 ($generated@@106 $generated@@139 $generated@@136) $generated@@137 $generated@@138) ($generated@@41 $generated@@139 $generated@@136 $generated@@137 $generated@@138))
 :pattern ( ($generated@@135 ($generated@@106 $generated@@139 $generated@@136) $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@66 $generated@@140 $generated@@141) (=> ($generated@@135 $generated@@142 $generated@@143 $generated@@140) ($generated@@135 $generated@@142 $generated@@143 $generated@@141)))
 :pattern ( ($generated@@66 $generated@@140 $generated@@141) ($generated@@135 $generated@@142 $generated@@143 $generated@@140))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@T) ) (!  (=> ($generated@@66 $generated@@144 $generated@@145) (=> ($generated@@41 $generated@@148 $generated@@146 $generated@@147 $generated@@144) ($generated@@41 $generated@@148 $generated@@146 $generated@@147 $generated@@145)))
 :pattern ( ($generated@@66 $generated@@144 $generated@@145) ($generated@@41 $generated@@148 $generated@@146 $generated@@147 $generated@@144))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@130 $generated@@149 $generated@@42) (and (= ($generated@@106 $generated@@12 ($generated@@72 $generated@@12 $generated@@149)) $generated@@149) ($generated@@63 $generated@@12 ($generated@@72 $generated@@12 $generated@@149) $generated@@42)))
 :pattern ( ($generated@@130 $generated@@149 $generated@@42))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> ($generated@@130 $generated@@150 $generated@@65) (and (= ($generated@@106 $generated@@64 ($generated@@72 $generated@@64 $generated@@150)) $generated@@150) ($generated@@63 $generated@@64 ($generated@@72 $generated@@64 $generated@@150) $generated@@65)))
 :pattern ( ($generated@@130 $generated@@150 $generated@@65))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@28 ($generated@@34 $generated@@151 $generated@@152) $generated@@153)  (or ($generated@@28 $generated@@151 $generated@@153) ($generated@@28 $generated@@152 $generated@@153)))
 :pattern ( ($generated@@28 ($generated@@34 $generated@@151 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@121 $generated@@154 $generated@@155) (and (= ($generated@@48 ($generated@@34 $generated@@154 $generated@@155) $generated@@154) $generated@@155) (= ($generated@@48 ($generated@@34 $generated@@154 $generated@@155) $generated@@155) $generated@@154)))
 :pattern ( ($generated@@34 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> ($generated@@63 $generated@@64 $generated@@156 $generated@@65) (or ($generated@@113 $generated@@156) ($generated@@115 $generated@@156)))
 :pattern ( ($generated@@115 $generated@@156) ($generated@@63 $generated@@64 $generated@@156 $generated@@65))
 :pattern ( ($generated@@113 $generated@@156) ($generated@@63 $generated@@64 $generated@@156 $generated@@65))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or (not (= $generated@@157 $generated@@159)) (not true)) (=> (and ($generated@@66 $generated@@157 $generated@@158) ($generated@@66 $generated@@158 $generated@@159)) ($generated@@66 $generated@@157 $generated@@159)))
 :pattern ( ($generated@@66 $generated@@157 $generated@@158) ($generated@@66 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> ($generated@@130 $generated@@160 $generated) (and (= ($generated@@106 $generated@@12 ($generated@@72 $generated@@12 $generated@@160)) $generated@@160) ($generated@@63 $generated@@12 ($generated@@72 $generated@@12 $generated@@160) $generated)))
 :pattern ( ($generated@@130 $generated@@160 $generated))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@130 ($generated@@106 $generated@@163 $generated@@161) $generated@@162) ($generated@@63 $generated@@163 $generated@@161 $generated@@162))
 :pattern ( ($generated@@130 ($generated@@106 $generated@@163 $generated@@161) $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! (<= 0 ($generated@@54 $generated@@164))
 :pattern ( ($generated@@54 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@41 $generated@@100 $generated@@165 ($generated@@101 $generated@@166) $generated@@167) (forall (($generated@@168 T@U) ) (!  (=> ($generated@@28 $generated@@165 $generated@@168) ($generated@@135 $generated@@168 $generated@@166 $generated@@167))
 :pattern ( ($generated@@28 $generated@@165 $generated@@168))
)))
 :pattern ( ($generated@@41 $generated@@100 $generated@@165 ($generated@@101 $generated@@166) $generated@@167))
)))
(assert (forall (($generated@@169 Int) ($generated@@170 T@U) ) (! (= ($generated@@56 ($generated@@125 $generated@@169 $generated@@170)) $generated@@7)
 :pattern ( ($generated@@125 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 T@U) ) (! (= ($generated@@171 ($generated@@125 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@125 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 Int) ($generated@@176 T@U) ) (! (= ($generated@@174 ($generated@@125 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@125 $generated@@175 $generated@@176))
)))
(assert (= ($generated@@10 $generated@@177) 9))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@41 $generated@@177 $generated@@180 ($generated@@178 $generated@@181) $generated@@182) (forall (($generated@@183 Int) ) (!  (=> (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@54 $generated@@180))) ($generated@@135 ($generated@@179 $generated@@180 $generated@@183) $generated@@181 $generated@@182))
 :pattern ( ($generated@@179 $generated@@180 $generated@@183))
)))
 :pattern ( ($generated@@41 $generated@@177 $generated@@180 ($generated@@178 $generated@@181) $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@184 ($generated@@101 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@101 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@26 ($generated@@101 $generated@@186)) $generated@@1)
 :pattern ( ($generated@@101 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@187 ($generated@@178 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@178 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@26 ($generated@@178 $generated@@189)) $generated@@2)
 :pattern ( ($generated@@178 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@T) ) (! (= ($generated@@72 $generated@@191 ($generated@@106 $generated@@191 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@106 $generated@@191 $generated@@190))
)))
(assert (forall (($generated@@193 Int) ($generated@@194 T@U) ) (! (< ($generated@@192 $generated@@194) ($generated@@192 ($generated@@125 $generated@@193 $generated@@194)))
 :pattern ( ($generated@@125 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 Int) ) (! (= ($generated@@97 ($generated@@104 $generated@@195) $generated@@196) ($generated@@97 $generated@@195 $generated@@196))
 :pattern ( ($generated@@97 ($generated@@104 $generated@@195) $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@34 $generated@@197 ($generated@@34 $generated@@197 $generated@@198)) ($generated@@34 $generated@@197 $generated@@198))
 :pattern ( ($generated@@34 $generated@@197 ($generated@@34 $generated@@197 $generated@@198)))
)))
(assert  (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@199 $generated@@202 $generated@@203 $generated@@204 ($generated@@201 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@207 $generated@@208) $generated@@205)
 :weight 0
)) (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@199 $generated@@209 $generated@@210 $generated@@211 ($generated@@201 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@199 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@T) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@199 $generated@@218 $generated@@219 $generated@@220 ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@199 $generated@@218 $generated@@219 $generated@@220 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (= ($generated@@15 ($generated@@199 $generated@@70 $generated@@68 $generated@@11 ($generated@@200 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (or (not (= $generated@@231 $generated@@227)) (not true)) ($generated@@15 ($generated@@72 $generated@@11 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@228 $generated@@231) $generated@@229)))) $generated@@230))
 :pattern ( ($generated@@199 $generated@@70 $generated@@68 $generated@@11 ($generated@@200 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 Int) ($generated@@234 Int) ) (! (= ($generated@@105 $generated@@233 $generated@@234) (mod $generated@@233 $generated@@234))
 :pattern ( ($generated@@105 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and ($generated@@235 $generated@@237) (and ($generated@@115 $generated@@236) ($generated@@41 $generated@@64 $generated@@236 $generated@@65 $generated@@237))) ($generated@@41 $generated@@12 ($generated@@16 ($generated@@171 $generated@@236)) $generated $generated@@237))
 :pattern ( ($generated@@41 $generated@@12 ($generated@@16 ($generated@@171 $generated@@236)) $generated $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> ($generated@@130 $generated@@238 ($generated@@101 $generated@@239)) (and (= ($generated@@106 $generated@@100 ($generated@@72 $generated@@100 $generated@@238)) $generated@@238) ($generated@@63 $generated@@100 ($generated@@72 $generated@@100 $generated@@238) ($generated@@101 $generated@@239))))
 :pattern ( ($generated@@130 $generated@@238 ($generated@@101 $generated@@239)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> ($generated@@130 $generated@@240 ($generated@@178 $generated@@241)) (and (= ($generated@@106 $generated@@177 ($generated@@72 $generated@@177 $generated@@240)) $generated@@240) ($generated@@63 $generated@@177 ($generated@@72 $generated@@177 $generated@@240) ($generated@@178 $generated@@241))))
 :pattern ( ($generated@@130 $generated@@240 ($generated@@178 $generated@@241)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and ($generated@@235 $generated@@243) ($generated@@63 $generated@@64 $generated@@242 $generated@@65)) ($generated@@41 $generated@@64 $generated@@242 $generated@@65 $generated@@243))
 :pattern ( ($generated@@41 $generated@@64 $generated@@242 $generated@@65 $generated@@243))
)))
(assert (= ($generated@@26 $generated@@42) $generated@@4))
(assert (= ($generated@@244 $generated@@42) $generated@@8))
(assert (= ($generated@@26 $generated@@65) $generated@@5))
(assert (= ($generated@@244 $generated@@65) $generated@@9))
(assert (= $generated@@57 ($generated@@110 $generated@@64 $generated@@57)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and ($generated@@235 $generated@@246) (and ($generated@@115 $generated@@245) ($generated@@41 $generated@@64 $generated@@245 $generated@@65 $generated@@246))) ($generated@@41 $generated@@64 ($generated@@174 $generated@@245) $generated@@65 $generated@@246))
 :pattern ( ($generated@@41 $generated@@64 ($generated@@174 $generated@@245) $generated@@65 $generated@@246))
)))
(assert (forall (($generated@@247 Int) ($generated@@248 T@U) ) (! (= ($generated@@125 ($generated@@99 $generated@@247) ($generated@@110 $generated@@64 $generated@@248)) ($generated@@110 $generated@@64 ($generated@@125 $generated@@247 $generated@@248)))
 :pattern ( ($generated@@125 ($generated@@99 $generated@@247) ($generated@@110 $generated@@64 $generated@@248)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@106 $generated@@12 ($generated@@16 ($generated@@99 $generated@@249))) ($generated@@110 $generated@@69 ($generated@@106 $generated@@12 ($generated@@16 $generated@@249))))
 :pattern ( ($generated@@106 $generated@@12 ($generated@@16 ($generated@@99 $generated@@249))))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@T) ) (! (= ($generated@@106 $generated@@251 ($generated@@110 $generated@@251 $generated@@250)) ($generated@@110 $generated@@69 ($generated@@106 $generated@@251 $generated@@250)))
 :pattern ( ($generated@@106 $generated@@251 ($generated@@110 $generated@@251 $generated@@250)))
)))
(assert (forall (($generated@@252 Int) ($generated@@253 T@U) ) (! (= ($generated@@63 $generated@@64 ($generated@@125 $generated@@252 $generated@@253) $generated@@65)  (and ($generated@@63 $generated@@12 ($generated@@16 $generated@@252) $generated) ($generated@@63 $generated@@64 $generated@@253 $generated@@65)))
 :pattern ( ($generated@@63 $generated@@64 ($generated@@125 $generated@@252 $generated@@253) $generated@@65))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= ($generated@@54 $generated@@254) 0) (= $generated@@254 $generated@@55))
 :pattern ( ($generated@@54 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! ($generated@@41 $generated@@12 $generated@@256 $generated $generated@@255)
 :pattern ( ($generated@@41 $generated@@12 $generated@@256 $generated $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (= ($generated@@63 $generated@@177 $generated@@257 ($generated@@178 $generated@@258)) (forall (($generated@@259 Int) ) (!  (=> (and (<= 0 $generated@@259) (< $generated@@259 ($generated@@54 $generated@@257))) ($generated@@130 ($generated@@179 $generated@@257 $generated@@259) $generated@@258))
 :pattern ( ($generated@@179 $generated@@257 $generated@@259))
)))
 :pattern ( ($generated@@63 $generated@@177 $generated@@257 ($generated@@178 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 Int) ) (!  (=> (and (<= 0 $generated@@262) (< $generated@@262 ($generated@@54 $generated@@261))) (< ($generated@@192 ($generated@@72 $generated@@64 ($generated@@179 $generated@@261 $generated@@262))) ($generated@@260 $generated@@261)))
 :pattern ( ($generated@@192 ($generated@@72 $generated@@64 ($generated@@179 $generated@@261 $generated@@262))))
)))
(assert (forall (($generated@@263 T@U) ) (! ($generated@@63 $generated@@12 $generated@@263 $generated)
 :pattern ( ($generated@@63 $generated@@12 $generated@@263 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () Int)
(declare-fun $generated@@268 (Int) Bool)
(declare-fun $generated@@269 () Int)
(declare-fun $generated@@270 (Int) Bool)
(declare-fun $generated@@271 () Int)
(declare-fun $generated@@272 (Int) Bool)
(declare-fun $generated@@273 () Int)
(declare-fun $generated@@274 (Int) Bool)
(declare-fun $generated@@275 () Int)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () Int)
(declare-fun $generated@@283 (Int) Bool)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (Int) Bool)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@288 () Int)
(declare-fun $generated@@289 (Int) Bool)
(declare-fun $generated@@290 () Int)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@293  (=> (= $generated@@264 ($generated@@200 $generated@@265 $generated@@266 $generated@@3 false)) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 10)) $generated@@42)) (=> ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 10)) $generated@@42) (=> (and (and (= $generated@@267 ($generated@@99 10)) ($generated@@41 $generated@@12 ($generated@@16 $generated@@267) $generated@@42 $generated@@266)) (and ($generated@@268 ($generated@@99 10)) ($generated@@268 ($generated@@99 10)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 10)) $generated@@42)) (=> ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 10)) $generated@@42) (=> (and (and (= $generated@@269 ($generated@@99 10)) ($generated@@41 $generated@@12 ($generated@@16 $generated@@269) $generated@@42 $generated@@266)) (and ($generated@@270 ($generated@@99 10)) ($generated@@270 ($generated@@99 10)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 10)) $generated@@42)) (=> ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 10)) $generated@@42) (=> (and (and (= $generated@@271 ($generated@@99 10)) ($generated@@41 $generated@@12 ($generated@@16 $generated@@271) $generated@@42 $generated@@266)) (and ($generated@@272 ($generated@@99 10)) ($generated@@272 ($generated@@99 10)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 5)) $generated@@42)) (=> ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 5)) $generated@@42) (=> (and (and (= $generated@@273 ($generated@@99 5)) ($generated@@41 $generated@@12 ($generated@@16 $generated@@273) $generated@@42 $generated@@266)) (and ($generated@@274 ($generated@@99 5)) ($generated@@274 ($generated@@99 5)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 8)) $generated@@42)) (=> ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 8)) $generated@@42) (=> (= $generated@@275 ($generated@@99 8)) (=> (and (and ($generated@@41 $generated@@12 ($generated@@16 $generated@@275) $generated@@42 $generated@@266) ($generated@@98 ($generated@@99 8))) (and ($generated@@98 ($generated@@99 8)) (= $generated@@276 ($generated@@110 $generated@@100 ($generated@@97 ($generated@@104 $generated@@277) ($generated@@99 8)))))) (=> (and (and (and ($generated@@63 $generated@@177 $generated@@278 ($generated@@178 $generated@@42)) ($generated@@41 $generated@@177 $generated@@278 ($generated@@178 $generated@@42) $generated@@266)) (and ($generated@@235 $generated@@279) ($generated@@280 $generated@@279))) (and (and ($generated@@63 $generated@@177 $generated@@281 ($generated@@178 $generated@@42)) ($generated@@41 $generated@@177 $generated@@281 ($generated@@178 $generated@@42) $generated@@279)) (and (forall (($generated@@294 T@U) ) (!  (=> (and (or (not (= $generated@@294 $generated@@265)) (not true)) ($generated@@15 ($generated@@72 $generated@@11 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@266 $generated@@294) $generated@@3)))) (= ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@279 $generated@@294) ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@266 $generated@@294)))
 :pattern ( ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@279 $generated@@294))
)) ($generated@@66 $generated@@266 $generated@@279)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 10)) $generated@@42)) (=> ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 10)) $generated@@42) (=> (and (and (= $generated@@282 ($generated@@99 10)) ($generated@@41 $generated@@12 ($generated@@16 $generated@@282) $generated@@42 $generated@@279)) (and ($generated@@283 ($generated@@99 10)) ($generated@@283 ($generated@@99 10)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 10)) $generated@@42)) (=> ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 10)) $generated@@42) (=> (and (and (and (= $generated@@284 ($generated@@99 10)) ($generated@@41 $generated@@12 ($generated@@16 $generated@@284) $generated@@42 $generated@@279)) (and ($generated@@285 ($generated@@99 10)) ($generated@@285 ($generated@@99 10)))) (and (and (= $generated@@286 ($generated@@110 $generated@@64 ($generated@@125 ($generated@@99 100) ($generated@@110 $generated@@64 ($generated@@125 ($generated@@99 40) ($generated@@110 $generated@@64 ($generated@@125 ($generated@@99 60) ($generated@@110 $generated@@64 $generated@@57)))))))) ($generated@@41 $generated@@64 $generated@@286 $generated@@65 $generated@@279)) (and ($generated@@287 $generated@@286) ($generated@@287 $generated@@286)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 100)) $generated@@42)) (=> ($generated@@63 $generated@@12 ($generated@@16 ($generated@@99 100)) $generated@@42) (=> (and (= $generated@@288 ($generated@@99 100)) ($generated@@41 $generated@@12 ($generated@@16 $generated@@288) $generated@@42 $generated@@279)) (=> (and (and ($generated@@289 ($generated@@99 100)) ($generated@@289 ($generated@@99 100))) (and (= $generated@@290 ($generated@@99 10)) ($generated@@41 $generated@@12 ($generated@@16 $generated@@290) $generated $generated@@279))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@99 0) $generated@@290)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@290 ($generated@@99 20))))))))))))))))))))))))))))))))))
(let (($generated@@295  (=> (and ($generated@@235 $generated@@266) ($generated@@280 $generated@@266)) (=> (and (and ($generated@@63 $generated@@177 $generated@@291 ($generated@@178 $generated@@42)) ($generated@@41 $generated@@177 $generated@@291 ($generated@@178 $generated@@42) $generated@@266)) true) (=> (and (and (and ($generated@@63 $generated@@64 $generated@@292 $generated@@65) ($generated@@41 $generated@@64 $generated@@292 $generated@@65 $generated@@266)) true) (and (= 2 $generated@@96) (= (ControlFlow 0 12) 2))) $generated@@293)))))
$generated@@295)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
