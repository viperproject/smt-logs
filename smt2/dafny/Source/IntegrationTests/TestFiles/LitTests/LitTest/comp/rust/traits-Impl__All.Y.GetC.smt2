(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 () T@U)
(declare-fun $generated@@20 (T@T) Int)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (Bool) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (Int) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (Real) T@U)
(declare-fun $generated@@29 (T@U) Real)
(declare-fun $generated@@36 (T@U T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@39 (T@U) Int)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@60 (T@T T@U T@U) Bool)
(declare-fun $generated@@61 (T@U T@U) T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T T@T) T@T)
(declare-fun $generated@@70 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@93 () T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@102 (Int) Int)
(declare-fun $generated@@104 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@T T@U) T@U)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@114 (T@U) Bool)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@174 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@218 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@20 $generated@@21) 0) (= ($generated@@20 $generated@@22) 1)) (= ($generated@@20 $generated@@23) 2)) (forall (($generated@@30 Bool) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 Int) ) (! (= ($generated@@27 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))) (forall (($generated@@34 Real) ) (! (= ($generated@@29 ($generated@@28 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@28 $generated@@34))
))) (forall (($generated@@35 T@U) ) (! (= ($generated@@28 ($generated@@29 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@29 $generated@@35))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17 $generated@@18 $generated@@19)
)
(assert (forall (($generated@@38 T@U) ) ($generated@@36 ($generated@@37 $generated@@38) $generated $generated@@38)))
(assert (= ($generated@@39 $generated@@1) 0))
(assert (= ($generated@@40 $generated) $generated@@0))
(assert (= ($generated@@41 $generated@@1) $generated@@2))
(assert (= ($generated@@20 $generated@@43) 3))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@46 ($generated@@44 $generated@@45) $generated@@47) ($generated@@42 $generated@@43 $generated@@46 ($generated@@37 $generated@@45) $generated@@47))
 :pattern ( ($generated@@42 $generated@@43 $generated@@46 ($generated@@44 $generated@@45) $generated@@47))
 :pattern ( ($generated@@42 $generated@@43 $generated@@46 ($generated@@37 $generated@@45) $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@50 $generated@@48 $generated@@51) ($generated@@42 $generated@@43 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@42 $generated@@43 $generated@@50 $generated@@48 $generated@@51))
 :pattern ( ($generated@@42 $generated@@43 $generated@@50 $generated@@49 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@54 $generated@@52 $generated@@55) ($generated@@42 $generated@@43 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@42 $generated@@43 $generated@@54 $generated@@52 $generated@@55))
 :pattern ( ($generated@@42 $generated@@43 $generated@@54 $generated@@53 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@58 $generated@@56 $generated@@59) ($generated@@42 $generated@@43 $generated@@58 $generated@@57 $generated@@59))
 :pattern ( ($generated@@42 $generated@@43 $generated@@58 $generated@@56 $generated@@59))
 :pattern ( ($generated@@42 $generated@@43 $generated@@58 $generated@@57 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated@@60 $generated@@43 $generated@@63 ($generated@@37 $generated@@62)) ($generated@@60 $generated@@43 $generated@@63 ($generated@@61 $generated $generated@@62)))
 :pattern ( ($generated@@60 $generated@@43 $generated@@63 ($generated@@37 $generated@@62)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@66 $generated@@73 $generated@@74 ($generated@@70 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@77) $generated@@75)
 :weight 0
)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (or (= $generated@@82 $generated@@83) (= ($generated@@66 $generated@@78 $generated@@79 ($generated@@70 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@80) $generated@@83) ($generated@@66 $generated@@78 $generated@@79 $generated@@81 $generated@@83)))
 :weight 0
))) (= ($generated@@20 $generated@@67) 4)) (= ($generated@@20 $generated@@68) 5)) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (= ($generated@@20 ($generated@@69 $generated@@84 $generated@@85)) 6))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@71 ($generated@@69 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@69 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@72 ($generated@@69 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@69 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@91 ($generated@@37 $generated@@90) $generated@@92)  (or (= $generated@@91 $generated@@64) ($generated@@25 ($generated@@65 $generated@@21 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@92 $generated@@91) $generated@@1)))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@91 ($generated@@37 $generated@@90) $generated@@92))
)))
(assert (= ($generated@@39 $generated@@93) 0))
(assert (= ($generated@@94 $generated@@9 $generated@@19) $generated@@93))
(assert  (not ($generated@@95 $generated@@93)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@96 $generated@@49 $generated@@97)  (or (= $generated@@96 $generated@@64) ($generated@@25 ($generated@@65 $generated@@21 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@97 $generated@@96) $generated@@1)))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@96 $generated@@49 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@98 $generated@@53 $generated@@99)  (or (= $generated@@98 $generated@@64) ($generated@@25 ($generated@@65 $generated@@21 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@99 $generated@@98) $generated@@1)))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@98 $generated@@53 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@100 $generated@@57 $generated@@101)  (or (= $generated@@100 $generated@@64) ($generated@@25 ($generated@@65 $generated@@21 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@101 $generated@@100) $generated@@1)))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@100 $generated@@57 $generated@@101))
)))
(assert (forall (($generated@@103 Int) ) (! (= ($generated@@102 $generated@@103) $generated@@103)
 :pattern ( ($generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@104 $generated@@106 $generated@@105) $generated@@105)
 :pattern ( ($generated@@104 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@107 $generated@@109 ($generated@@65 $generated@@109 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@65 $generated@@109 $generated@@108))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@60 $generated@@43 $generated@@113 ($generated@@110 $generated@@111 $generated@@112))  (and ($generated@@60 $generated@@43 $generated@@113 ($generated@@61 $generated@@111 $generated@@112)) (or (not (= $generated@@113 $generated@@64)) (not true))))
 :pattern ( ($generated@@60 $generated@@43 $generated@@113 ($generated@@110 $generated@@111 $generated@@112)))
 :pattern ( ($generated@@60 $generated@@43 $generated@@113 ($generated@@61 $generated@@111 $generated@@112)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and (and ($generated@@114 $generated@@117) (and (or (not (= $generated@@118 $generated@@64)) (not true)) (= ($generated@@115 $generated@@118) ($generated@@37 $generated@@116)))) ($generated@@25 ($generated@@65 $generated@@21 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@117 $generated@@118) $generated@@1)))) ($generated@@42 $generated@@22 ($generated@@65 $generated@@22 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@117 $generated@@118) $generated@@93)) $generated $generated@@117))
 :pattern ( ($generated@@65 $generated@@22 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@117 $generated@@118) $generated@@93)) ($generated@@37 $generated@@116))
)))
(assert ($generated@@95 $generated@@1))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@60 $generated@@43 $generated@@120 ($generated@@44 $generated@@119))  (and ($generated@@60 $generated@@43 $generated@@120 ($generated@@37 $generated@@119)) (or (not (= $generated@@120 $generated@@64)) (not true))))
 :pattern ( ($generated@@60 $generated@@43 $generated@@120 ($generated@@44 $generated@@119)))
 :pattern ( ($generated@@60 $generated@@43 $generated@@120 ($generated@@37 $generated@@119)))
)))
(assert (forall (($generated@@122 T@U) ) (!  (and (= ($generated@@40 ($generated@@44 $generated@@122)) $generated@@4) (= ($generated@@121 ($generated@@44 $generated@@122)) $generated@@15))
 :pattern ( ($generated@@44 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (!  (and (= ($generated@@40 ($generated@@37 $generated@@123)) $generated@@6) (= ($generated@@121 ($generated@@37 $generated@@123)) $generated@@15))
 :pattern ( ($generated@@37 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@126 ($generated@@110 $generated@@124 $generated@@125) $generated@@127) ($generated@@42 $generated@@43 $generated@@126 ($generated@@61 $generated@@124 $generated@@125) $generated@@127))
 :pattern ( ($generated@@42 $generated@@43 $generated@@126 ($generated@@110 $generated@@124 $generated@@125) $generated@@127))
 :pattern ( ($generated@@42 $generated@@43 $generated@@126 ($generated@@61 $generated@@124 $generated@@125) $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@60 $generated@@43 $generated@@129 ($generated@@37 $generated@@128))  (or (= $generated@@129 $generated@@64) (= ($generated@@115 $generated@@129) ($generated@@37 $generated@@128))))
 :pattern ( ($generated@@60 $generated@@43 $generated@@129 ($generated@@37 $generated@@128)))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@131 ($generated@@37 $generated@@130) $generated@@132) ($generated@@42 $generated@@43 $generated@@131 ($generated@@61 $generated $generated@@130) $generated@@132))
 :pattern ( ($generated@@42 $generated@@43 $generated@@131 ($generated@@37 $generated@@130) $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@60 $generated@@43 $generated@@133 $generated@@48)  (and ($generated@@60 $generated@@43 $generated@@133 $generated@@49) (or (not (= $generated@@133 $generated@@64)) (not true))))
 :pattern ( ($generated@@60 $generated@@43 $generated@@133 $generated@@48))
 :pattern ( ($generated@@60 $generated@@43 $generated@@133 $generated@@49))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@60 $generated@@43 $generated@@134 $generated@@52)  (and ($generated@@60 $generated@@43 $generated@@134 $generated@@53) (or (not (= $generated@@134 $generated@@64)) (not true))))
 :pattern ( ($generated@@60 $generated@@43 $generated@@134 $generated@@52))
 :pattern ( ($generated@@60 $generated@@43 $generated@@134 $generated@@53))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@60 $generated@@43 $generated@@135 $generated@@56)  (and ($generated@@60 $generated@@43 $generated@@135 $generated@@57) (or (not (= $generated@@135 $generated@@64)) (not true))))
 :pattern ( ($generated@@60 $generated@@43 $generated@@135 $generated@@56))
 :pattern ( ($generated@@60 $generated@@43 $generated@@135 $generated@@57))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@136 $generated@@57 $generated@@137) ($generated@@42 $generated@@43 $generated@@136 $generated@@49 $generated@@137))
 :pattern ( ($generated@@42 $generated@@43 $generated@@136 $generated@@57 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@138 $generated@@57 $generated@@139) ($generated@@42 $generated@@43 $generated@@138 $generated@@53 $generated@@139))
 :pattern ( ($generated@@42 $generated@@43 $generated@@138 $generated@@57 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@142 ($generated@@61 $generated@@140 $generated@@141) $generated@@143)  (or (= $generated@@142 $generated@@64) ($generated@@25 ($generated@@65 $generated@@21 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@143 $generated@@142) $generated@@1)))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@142 ($generated@@61 $generated@@140 $generated@@141) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (and (= ($generated@@144 ($generated@@94 $generated@@145 $generated@@146)) $generated@@145) (= ($generated@@41 ($generated@@94 $generated@@145 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@94 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@147 ($generated@@110 $generated@@148 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@110 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@150 ($generated@@110 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@110 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@153 ($generated@@61 $generated@@154 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@61 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@156 ($generated@@61 $generated@@157 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@61 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and ($generated@@114 $generated@@160) (and (or (not (= $generated@@161 $generated@@64)) (not true)) (= ($generated@@115 $generated@@161) ($generated@@37 $generated@@159)))) ($generated@@60 $generated@@22 ($generated@@65 $generated@@22 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@160 $generated@@161) $generated@@93)) $generated))
 :pattern ( ($generated@@65 $generated@@22 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@160 $generated@@161) $generated@@93)) ($generated@@37 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@60 $generated@@43 $generated@@164 ($generated@@61 $generated@@162 $generated@@163))  (or (= $generated@@164 $generated@@64) ($generated@@36 ($generated@@115 $generated@@164) $generated@@162 $generated@@163)))
 :pattern ( ($generated@@60 $generated@@43 $generated@@164 ($generated@@61 $generated@@162 $generated@@163)))
)))
(assert (forall (($generated@@166 T@U) ) (! (= ($generated@@165 ($generated@@44 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@44 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@167 ($generated@@37 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@37 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@T) ) (! (= ($generated@@65 $generated@@170 ($generated@@107 $generated@@170 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@107 $generated@@170 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@60 $generated@@43 $generated@@173 ($generated@@61 $generated@@171 $generated@@172)) ($generated@@60 $generated@@43 $generated@@173 $generated@@57))
 :pattern ( ($generated@@60 $generated@@43 $generated@@173 ($generated@@61 $generated@@171 $generated@@172)))
)))
(assert  (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@174 $generated@@177 $generated@@178 $generated@@179 ($generated@@176 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@182 $generated@@183) $generated@@180)
 :weight 0
)) (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@174 $generated@@184 $generated@@185 $generated@@186 ($generated@@176 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@174 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@174 $generated@@193 $generated@@194 $generated@@195 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@174 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@25 ($generated@@174 $generated@@43 $generated@@67 $generated@@21 ($generated@@175 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (or (not (= $generated@@206 $generated@@202)) (not true)) ($generated@@25 ($generated@@65 $generated@@21 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@203 $generated@@206) $generated@@204)))) $generated@@205))
 :pattern ( ($generated@@174 $generated@@43 $generated@@67 $generated@@21 ($generated@@175 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (and (= ($generated@@40 ($generated@@110 $generated@@208 $generated@@209)) $generated@@3) (= ($generated@@121 ($generated@@110 $generated@@208 $generated@@209)) $generated@@14))
 :pattern ( ($generated@@110 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (and (= ($generated@@40 ($generated@@61 $generated@@210 $generated@@211)) $generated@@13) (= ($generated@@121 ($generated@@61 $generated@@210 $generated@@211)) $generated@@14))
 :pattern ( ($generated@@61 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ) (!  (=> ($generated@@60 $generated@@43 $generated@@212 $generated@@57) ($generated@@60 $generated@@43 $generated@@212 $generated@@49))
 :pattern ( ($generated@@60 $generated@@43 $generated@@212 $generated@@57))
)))
(assert (forall (($generated@@213 T@U) ) (!  (=> ($generated@@60 $generated@@43 $generated@@213 $generated@@57) ($generated@@60 $generated@@43 $generated@@213 $generated@@53))
 :pattern ( ($generated@@60 $generated@@43 $generated@@213 $generated@@57))
)))
(assert (= ($generated@@40 $generated@@56) $generated@@5))
(assert (= ($generated@@121 $generated@@56) $generated@@16))
(assert (= ($generated@@40 $generated@@48) $generated@@7))
(assert (= ($generated@@121 $generated@@48) $generated@@17))
(assert (= ($generated@@40 $generated@@52) $generated@@8))
(assert (= ($generated@@121 $generated@@52) $generated@@18))
(assert (= ($generated@@40 $generated@@49) $generated@@10))
(assert (= ($generated@@121 $generated@@49) $generated@@17))
(assert (= ($generated@@40 $generated@@53) $generated@@11))
(assert (= ($generated@@121 $generated@@53) $generated@@18))
(assert (= ($generated@@40 $generated@@57) $generated@@12))
(assert (= ($generated@@121 $generated@@57) $generated@@16))
(assert (forall (($generated@@215 T@U) ) (! (= ($generated@@60 $generated@@43 $generated@@215 $generated@@49)  (or (= $generated@@215 $generated@@64) ($generated@@214 ($generated@@115 $generated@@215))))
 :pattern ( ($generated@@60 $generated@@43 $generated@@215 $generated@@49))
)))
(assert (forall (($generated@@217 T@U) ) (! (= ($generated@@60 $generated@@43 $generated@@217 $generated@@53)  (or (= $generated@@217 $generated@@64) ($generated@@216 ($generated@@115 $generated@@217))))
 :pattern ( ($generated@@60 $generated@@43 $generated@@217 $generated@@53))
)))
(assert (forall (($generated@@219 T@U) ) (! (= ($generated@@60 $generated@@43 $generated@@219 $generated@@57)  (or (= $generated@@219 $generated@@64) ($generated@@218 ($generated@@115 $generated@@219))))
 :pattern ( ($generated@@60 $generated@@43 $generated@@219 $generated@@57))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@222 ($generated@@61 $generated@@220 $generated@@221) $generated@@223) ($generated@@42 $generated@@43 $generated@@222 $generated@@57 $generated@@223))
 :pattern ( ($generated@@42 $generated@@43 $generated@@222 ($generated@@61 $generated@@220 $generated@@221) $generated@@223))
)))
(assert (forall (($generated@@224 Int) ) (! (= ($generated@@107 $generated@@22 ($generated@@26 ($generated@@102 $generated@@224))) ($generated@@104 $generated@@68 ($generated@@107 $generated@@22 ($generated@@26 $generated@@224))))
 :pattern ( ($generated@@107 $generated@@22 ($generated@@26 ($generated@@102 $generated@@224))))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@T) ) (! (= ($generated@@107 $generated@@226 ($generated@@104 $generated@@226 $generated@@225)) ($generated@@104 $generated@@68 ($generated@@107 $generated@@226 $generated@@225)))
 :pattern ( ($generated@@107 $generated@@226 ($generated@@104 $generated@@226 $generated@@225)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! ($generated@@42 $generated@@22 $generated@@228 $generated $generated@@227)
 :pattern ( ($generated@@42 $generated@@22 $generated@@228 $generated $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! ($generated@@60 $generated@@22 $generated@@229 $generated)
 :pattern ( ($generated@@60 $generated@@22 $generated@@229 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@237  (=> (and (= $generated@@230 (ite (<= ($generated@@27 ($generated@@65 $generated@@22 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@231 $generated@@232) $generated@@93))) ($generated@@102 0)) 37 ($generated@@27 ($generated@@65 $generated@@22 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@231 $generated@@232) $generated@@93))))) (= (ControlFlow 0 2) (- 0 1))) (>= $generated@@230 ($generated@@102 0)))))
(let (($generated@@238  (=> (and (< ($generated@@102 0) ($generated@@27 ($generated@@65 $generated@@22 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@231 $generated@@232) $generated@@93)))) (= (ControlFlow 0 4) 2)) $generated@@237)))
(let (($generated@@239  (=> (and (<= ($generated@@27 ($generated@@65 $generated@@22 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@231 $generated@@232) $generated@@93))) ($generated@@102 0)) (= (ControlFlow 0 3) 2)) $generated@@237)))
(let (($generated@@240  (=> (= $generated@@233 ($generated@@175 $generated@@64 $generated@@231 $generated@@1 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@239) (=> (= (ControlFlow 0 5) 4) $generated@@238)))))
(let (($generated@@241  (=> (and ($generated@@114 $generated@@231) ($generated@@234 $generated@@231)) (=> (and (and (or (not (= $generated@@232 $generated@@64)) (not true)) (and ($generated@@60 $generated@@43 $generated@@232 ($generated@@44 $generated@@235)) ($generated@@42 $generated@@43 $generated@@232 ($generated@@44 $generated@@235) $generated@@231))) (and (= 0 $generated@@236) (= (ControlFlow 0 6) 5))) $generated@@240))))
$generated@@241))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
