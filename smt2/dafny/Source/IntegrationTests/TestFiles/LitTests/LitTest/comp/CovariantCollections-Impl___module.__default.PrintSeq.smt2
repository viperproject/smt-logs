(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@76 (Int) Int)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@T T@U T@U) Bool)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@113 (T@U Int) T@U)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@138 (Int) T@U)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@27) 0))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and ($generated@@28 $generated@@32 $generated@@29 $generated@@33) ($generated@@30 $generated@@33)) ($generated@@28 $generated@@32 $generated@@31 $generated@@33))
 :pattern ( ($generated@@28 $generated@@32 $generated@@29 $generated@@33))
)))
(assert (= ($generated@@9 $generated@@35) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@37 $generated@@36 $generated@@38) ($generated@@34 $generated@@35 $generated@@37 $generated@@31 $generated@@38))
 :pattern ( ($generated@@34 $generated@@35 $generated@@37 $generated@@36 $generated@@38))
 :pattern ( ($generated@@34 $generated@@35 $generated@@37 $generated@@31 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@40 $generated@@39 $generated@@41) ($generated@@34 $generated@@35 $generated@@40 $generated@@29 $generated@@41))
 :pattern ( ($generated@@34 $generated@@35 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@34 $generated@@35 $generated@@40 $generated@@29 $generated@@41))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@9 $generated@@45) 4)) (= ($generated@@9 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@9 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@68 $generated@@31 $generated@@69)  (or (= $generated@@68 $generated@@42) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@68) $generated@@2)))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@68 $generated@@31 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@70 $generated@@29 $generated@@71)  (or (= $generated@@70 $generated@@42) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@71 $generated@@70) $generated@@2)))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@70 $generated@@29 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@72 $generated@@73 $generated@@74) (forall (($generated@@75 T@U) ) (!  (=> ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@73 $generated@@75) $generated@@2))) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@74 $generated@@75) $generated@@2))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@74 $generated@@75) $generated@@2))
)))
 :pattern ( ($generated@@72 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@77 Int) ) (! (= ($generated@@76 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@80 $generated@@79))
)))
(assert (= ($generated@@9 $generated@@82) 7))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (and ($generated@@81 $generated@@82 $generated@@86 ($generated@@84 $generated@@88)) ($generated@@85 $generated@@87 $generated@@88)) ($generated@@81 $generated@@82 ($generated@@83 $generated@@86 $generated@@87) ($generated@@84 $generated@@88)))
 :pattern ( ($generated@@81 $generated@@82 ($generated@@83 $generated@@86 $generated@@87) ($generated@@84 $generated@@88)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@43 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@43 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@26 ($generated@@83 $generated@@92 $generated@@93)) (+ 1 ($generated@@26 $generated@@92)))
 :pattern ( ($generated@@83 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@28 ($generated@@89 $generated@@97 $generated@@94) $generated@@95 $generated@@96) ($generated@@34 $generated@@97 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@28 ($generated@@89 $generated@@97 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@72 $generated@@98 $generated@@99) (=> ($generated@@28 $generated@@100 $generated@@101 $generated@@98) ($generated@@28 $generated@@100 $generated@@101 $generated@@99)))
 :pattern ( ($generated@@72 $generated@@98 $generated@@99) ($generated@@28 $generated@@100 $generated@@101 $generated@@98))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (!  (=> ($generated@@72 $generated@@102 $generated@@103) (=> ($generated@@34 $generated@@106 $generated@@104 $generated@@105 $generated@@102) ($generated@@34 $generated@@106 $generated@@104 $generated@@105 $generated@@103)))
 :pattern ( ($generated@@72 $generated@@102 $generated@@103) ($generated@@34 $generated@@106 $generated@@104 $generated@@105 $generated@@102))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@85 $generated@@107 $generated@@31) (and (= ($generated@@89 $generated@@35 ($generated@@43 $generated@@35 $generated@@107)) $generated@@107) ($generated@@81 $generated@@35 ($generated@@43 $generated@@35 $generated@@107) $generated@@31)))
 :pattern ( ($generated@@85 $generated@@107 $generated@@31))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@85 $generated@@108 $generated@@36) (and (= ($generated@@89 $generated@@35 ($generated@@43 $generated@@35 $generated@@108)) $generated@@108) ($generated@@81 $generated@@35 ($generated@@43 $generated@@35 $generated@@108) $generated@@36)))
 :pattern ( ($generated@@85 $generated@@108 $generated@@36))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@85 $generated@@109 $generated@@39) (and (= ($generated@@89 $generated@@35 ($generated@@43 $generated@@35 $generated@@109)) $generated@@109) ($generated@@81 $generated@@35 ($generated@@43 $generated@@35 $generated@@109) $generated@@39)))
 :pattern ( ($generated@@85 $generated@@109 $generated@@39))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@85 $generated@@110 $generated@@29) (and (= ($generated@@89 $generated@@35 ($generated@@43 $generated@@35 $generated@@110)) $generated@@110) ($generated@@81 $generated@@35 ($generated@@43 $generated@@35 $generated@@110) $generated@@29)))
 :pattern ( ($generated@@85 $generated@@110 $generated@@29))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@81 $generated@@35 $generated@@111 $generated@@36)  (and ($generated@@81 $generated@@35 $generated@@111 $generated@@31) (or (not (= $generated@@111 $generated@@42)) (not true))))
 :pattern ( ($generated@@81 $generated@@35 $generated@@111 $generated@@36))
 :pattern ( ($generated@@81 $generated@@35 $generated@@111 $generated@@31))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@81 $generated@@35 $generated@@112 $generated@@39)  (and ($generated@@81 $generated@@35 $generated@@112 $generated@@29) (or (not (= $generated@@112 $generated@@42)) (not true))))
 :pattern ( ($generated@@81 $generated@@35 $generated@@112 $generated@@39))
 :pattern ( ($generated@@81 $generated@@35 $generated@@112 $generated@@29))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 Int) ($generated@@116 T@U) ) (!  (and (=> (= $generated@@115 ($generated@@26 $generated@@114)) (= ($generated@@113 ($generated@@83 $generated@@114 $generated@@116) $generated@@115) $generated@@116)) (=> (or (not (= $generated@@115 ($generated@@26 $generated@@114))) (not true)) (= ($generated@@113 ($generated@@83 $generated@@114 $generated@@116) $generated@@115) ($generated@@113 $generated@@114 $generated@@115))))
 :pattern ( ($generated@@113 ($generated@@83 $generated@@114 $generated@@116) $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@117 $generated@@29 $generated@@118) ($generated@@34 $generated@@35 $generated@@117 $generated@@31 $generated@@118))
 :pattern ( ($generated@@34 $generated@@35 $generated@@117 $generated@@29 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or (not (= $generated@@119 $generated@@121)) (not true)) (=> (and ($generated@@72 $generated@@119 $generated@@120) ($generated@@72 $generated@@120 $generated@@121)) ($generated@@72 $generated@@119 $generated@@121)))
 :pattern ( ($generated@@72 $generated@@119 $generated@@120) ($generated@@72 $generated@@120 $generated@@121))
)))
(assert (= ($generated@@9 $generated@@122) 8))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@85 $generated@@123 $generated) (and (= ($generated@@89 $generated@@122 ($generated@@43 $generated@@122 $generated@@123)) $generated@@123) ($generated@@81 $generated@@122 ($generated@@43 $generated@@122 $generated@@123) $generated)))
 :pattern ( ($generated@@85 $generated@@123 $generated))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@85 ($generated@@89 $generated@@126 $generated@@124) $generated@@125) ($generated@@81 $generated@@126 $generated@@124 $generated@@125))
 :pattern ( ($generated@@85 ($generated@@89 $generated@@126 $generated@@124) $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! (<= 0 ($generated@@26 $generated@@127))
 :pattern ( ($generated@@26 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (! ($generated@@81 $generated@@35 $generated@@128 $generated@@31)
 :pattern ( ($generated@@81 $generated@@35 $generated@@128 $generated@@31))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@34 $generated@@82 $generated@@129 ($generated@@84 $generated@@130) $generated@@131) (forall (($generated@@132 Int) ) (!  (=> (and (<= 0 $generated@@132) (< $generated@@132 ($generated@@26 $generated@@129))) ($generated@@28 ($generated@@113 $generated@@129 $generated@@132) $generated@@130 $generated@@131))
 :pattern ( ($generated@@113 $generated@@129 $generated@@132))
)))
 :pattern ( ($generated@@34 $generated@@82 $generated@@129 ($generated@@84 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@84 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@84 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@25 ($generated@@84 $generated@@135)) $generated@@1)
 :pattern ( ($generated@@84 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@43 $generated@@137 ($generated@@89 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@89 $generated@@137 $generated@@136))
)))
(assert (forall (($generated@@140 Int) ) (!  (=> (or (and (<= 0 $generated@@140) (< $generated@@140 55296)) (and (<= 57344 $generated@@140) (< $generated@@140 1114112))) (= ($generated@@139 ($generated@@138 $generated@@140)) $generated@@140))
 :pattern ( ($generated@@138 $generated@@140))
)))
(assert  (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@141 $generated@@144 $generated@@145 $generated@@146 ($generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@141 $generated@@151 $generated@@152 $generated@@153 ($generated@@143 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@141 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@141 $generated@@160 $generated@@161 $generated@@162 ($generated@@143 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@141 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@14 ($generated@@141 $generated@@35 $generated@@45 $generated@@10 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@141 $generated@@35 $generated@@45 $generated@@10 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (and (= ($generated@@175 ($generated@@83 $generated@@177 $generated@@178)) $generated@@177) (= ($generated@@176 ($generated@@83 $generated@@177 $generated@@178)) $generated@@178))
 :pattern ( ($generated@@83 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@85 $generated@@179 ($generated@@84 $generated@@180)) (and (= ($generated@@89 $generated@@82 ($generated@@43 $generated@@82 $generated@@179)) $generated@@179) ($generated@@81 $generated@@82 ($generated@@43 $generated@@82 $generated@@179) ($generated@@84 $generated@@180))))
 :pattern ( ($generated@@85 $generated@@179 ($generated@@84 $generated@@180)))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> ($generated@@81 $generated@@35 $generated@@181 $generated@@29) ($generated@@81 $generated@@35 $generated@@181 $generated@@31))
 :pattern ( ($generated@@81 $generated@@35 $generated@@181 $generated@@29))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> ($generated@@85 $generated@@182 $generated@@29) ($generated@@85 $generated@@182 $generated@@31))
 :pattern ( ($generated@@85 $generated@@182 $generated@@29))
)))
(assert (forall (($generated@@183 T@U) ) (!  (and (= ($generated@@138 ($generated@@139 $generated@@183)) $generated@@183) (or (and (<= 0 ($generated@@139 $generated@@183)) (< ($generated@@139 $generated@@183) 55296)) (and (<= 57344 ($generated@@139 $generated@@183)) (< ($generated@@139 $generated@@183) 1114112))))
 :pattern ( ($generated@@139 $generated@@183))
)))
(assert (= ($generated@@25 $generated@@31) $generated@@3))
(assert (= ($generated@@184 $generated@@31) $generated@@7))
(assert (= ($generated@@25 $generated@@36) $generated@@4))
(assert (= ($generated@@184 $generated@@36) $generated@@7))
(assert (= ($generated@@25 $generated@@39) $generated@@5))
(assert (= ($generated@@184 $generated@@39) $generated@@8))
(assert (= ($generated@@25 $generated@@29) $generated@@6))
(assert (= ($generated@@184 $generated@@29) $generated@@8))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@81 $generated@@35 $generated@@187 $generated@@29)  (or (= $generated@@187 $generated@@42) ($generated@@185 ($generated@@186 $generated@@187))))
 :pattern ( ($generated@@81 $generated@@35 $generated@@187 $generated@@29))
)))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@89 $generated@@11 ($generated@@15 ($generated@@76 $generated@@188))) ($generated@@78 $generated@@46 ($generated@@89 $generated@@11 ($generated@@15 $generated@@188))))
 :pattern ( ($generated@@89 $generated@@11 ($generated@@15 ($generated@@76 $generated@@188))))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@T) ) (! (= ($generated@@89 $generated@@190 ($generated@@78 $generated@@190 $generated@@189)) ($generated@@78 $generated@@46 ($generated@@89 $generated@@190 $generated@@189)))
 :pattern ( ($generated@@89 $generated@@190 ($generated@@78 $generated@@190 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (= ($generated@@26 $generated@@191) 0) (= $generated@@191 $generated@@27))
 :pattern ( ($generated@@26 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! ($generated@@34 $generated@@122 $generated@@193 $generated $generated@@192)
 :pattern ( ($generated@@34 $generated@@122 $generated@@193 $generated $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@81 $generated@@82 $generated@@194 ($generated@@84 $generated@@195)) (forall (($generated@@196 Int) ) (!  (=> (and (<= 0 $generated@@196) (< $generated@@196 ($generated@@26 $generated@@194))) ($generated@@85 ($generated@@113 $generated@@194 $generated@@196) $generated@@195))
 :pattern ( ($generated@@113 $generated@@194 $generated@@196))
)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@194 ($generated@@84 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ) (! ($generated@@81 $generated@@122 $generated@@197 $generated)
 :pattern ( ($generated@@81 $generated@@122 $generated@@197 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Bool)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@217  (=> (and (< $generated@@198 ($generated@@26 $generated@@199)) (= $generated@@200 (- ($generated@@26 $generated@@199) $generated@@198))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@26 $generated@@199)))) (=> (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@26 $generated@@199))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (not (= ($generated@@43 $generated@@35 ($generated@@113 $generated@@199 $generated@@198)) $generated@@42)) (not true))) (=> (or (not (= ($generated@@43 $generated@@35 ($generated@@113 $generated@@199 $generated@@198)) $generated@@42)) (not true)) (=> (= $generated@@201 ($generated@@43 $generated@@35 ($generated@@113 $generated@@199 $generated@@198))) (=> (and ($generated@@30 $generated@@202) ($generated@@203 $generated@@202)) (=> (and (and (forall (($generated@@218 T@U) ) (!  (=> (and (or (not (= $generated@@218 $generated@@42)) (not true)) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@204 $generated@@218) $generated@@2)))) (= ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@202 $generated@@218) ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@204 $generated@@218)))
 :pattern ( ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@202 $generated@@218))
)) ($generated@@72 $generated@@204 $generated@@202)) (and (= $generated@@205 (+ $generated@@198 1)) (= $generated@@206 ($generated@@78 $generated@@82 ($generated@@83 ($generated@@83 $generated@@27 ($generated@@89 $generated@@122 ($generated@@138 44))) ($generated@@89 $generated@@122 ($generated@@138 32))))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@200) (= (- ($generated@@26 $generated@@199) $generated@@205) $generated@@200))) (=> (or (<= 0 $generated@@200) (= (- ($generated@@26 $generated@@199) $generated@@205) $generated@@200)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- ($generated@@26 $generated@@199) $generated@@205) $generated@@200))))))))))))))
(let (($generated@@219 true))
(let (($generated@@220  (=> $generated@@207 (and (=> (= (ControlFlow 0 9) 3) $generated@@219) (=> (= (ControlFlow 0 9) 5) $generated@@217)))))
(let (($generated@@221 true))
(let (($generated@@222  (and (=> (= (ControlFlow 0 10) 2) $generated@@221) (=> (= (ControlFlow 0 10) 9) $generated@@220))))
(let (($generated@@223 true))
(let (($generated@@224  (=> (and (and ($generated@@30 $generated@@204) ($generated@@203 $generated@@204)) (and ($generated@@81 $generated@@82 $generated@@208 ($generated@@84 $generated)) ($generated@@34 $generated@@82 $generated@@208 ($generated@@84 $generated) $generated@@204))) (=> (and (and (and (not false) (<= 0 $generated@@198)) (= $generated@@209 0)) (and (and (forall (($generated@@225 T@U) ) (!  (=> (and (or (not (= $generated@@225 $generated@@42)) (not true)) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@210 $generated@@225) $generated@@2)))) (= ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@204 $generated@@225) ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@210 $generated@@225)))
 :pattern ( ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@204 $generated@@225))
)) ($generated@@72 $generated@@210 $generated@@204)) (and (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (or (not (= $generated@@226 $generated@@42)) (not true)) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@210 $generated@@226) $generated@@2)))) (or (= ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@204 $generated@@226) $generated@@227) ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@210 $generated@@226) $generated@@227)) ($generated@@14 ($generated@@141 $generated@@35 $generated@@45 $generated@@10 $generated@@211 $generated@@226 $generated@@227))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@35 ($generated@@47 $generated@@45 $generated@@46) $generated@@204 $generated@@226) $generated@@227))
)) (<= (- ($generated@@26 $generated@@199) $generated@@198) $generated@@212)))) (and (=> (= (ControlFlow 0 11) 1) $generated@@223) (=> (= (ControlFlow 0 11) 10) $generated@@222))))))
(let (($generated@@228  (=> (= $generated@@211 ($generated@@142 $generated@@42 $generated@@210 $generated@@2 false)) (=> (and (and (= $generated@@209 ($generated@@76 0)) (= $generated@@213 ($generated@@78 $generated@@82 $generated@@27))) (and (= $generated@@212 (- ($generated@@26 $generated@@199) $generated@@209)) (= (ControlFlow 0 12) 11))) $generated@@224))))
(let (($generated@@229  (=> (and ($generated@@30 $generated@@210) ($generated@@203 $generated@@210)) (=> (and (and ($generated@@81 $generated@@82 $generated@@214 ($generated@@84 $generated)) ($generated@@34 $generated@@82 $generated@@214 ($generated@@84 $generated) $generated@@210)) (and ($generated@@81 $generated@@82 $generated@@199 ($generated@@84 $generated@@39)) ($generated@@34 $generated@@82 $generated@@199 ($generated@@84 $generated@@39) $generated@@210))) (=> (and (and (and ($generated@@81 $generated@@82 $generated@@215 ($generated@@84 $generated)) ($generated@@34 $generated@@82 $generated@@215 ($generated@@84 $generated) $generated@@210)) true) (and (= 3 $generated@@216) (= (ControlFlow 0 13) 12))) $generated@@228)))))
$generated@@229))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
