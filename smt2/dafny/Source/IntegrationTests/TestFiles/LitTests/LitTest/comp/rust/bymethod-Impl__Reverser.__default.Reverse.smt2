(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U Int) T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U Int) T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@74 (Int) Int)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@T T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@84 () Int)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 (T@U Int) T@U)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24)
 :pattern ( ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24))
)))
(assert (= ($generated@@25 $generated@@26) 0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (and (<= 0 $generated@@31) (<= $generated@@31 ($generated@@25 $generated@@29))) (= ($generated@@27 ($generated@@28 $generated@@29 $generated@@30) $generated@@31) ($generated@@28 ($generated@@27 $generated@@29 $generated@@31) $generated@@30)))
 :pattern ( ($generated@@27 ($generated@@28 $generated@@29 $generated@@30) $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 Int) ) (!  (=> (= $generated@@36 ($generated@@25 $generated@@34)) (and (= ($generated@@32 ($generated@@33 $generated@@34 $generated@@35) $generated@@36) $generated@@34) (= ($generated@@27 ($generated@@33 $generated@@34 $generated@@35) $generated@@36) $generated@@35)))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@34 $generated@@35) $generated@@36))
 :pattern ( ($generated@@27 ($generated@@33 $generated@@34 $generated@@35) $generated@@36))
)))
(assert (= ($generated@@5 $generated@@37) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@21 $generated@@37 $generated@@40 $generated@@38 $generated@@41) ($generated@@21 $generated@@37 $generated@@40 ($generated@@39 $generated@@22) $generated@@41))
 :pattern ( ($generated@@21 $generated@@37 $generated@@40 $generated@@38 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@43 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@43 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@43 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@5 $generated@@44) 4)) (= ($generated@@5 $generated@@45) 5)) (= ($generated@@5 $generated@@46) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@5 ($generated@@47 $generated@@63 $generated@@64)) 7))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@47 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@47 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@47 $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@42 $generated@@69 $generated@@70) (forall (($generated@@71 T@U) ) (!  (=> ($generated@@10 ($generated@@48 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@46 ($generated@@47 $generated@@44 $generated@@45) $generated@@69 $generated@@71) $generated@@0))) ($generated@@10 ($generated@@48 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@46 ($generated@@47 $generated@@44 $generated@@45) $generated@@70 $generated@@71) $generated@@0))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@46 ($generated@@47 $generated@@44 $generated@@45) $generated@@70 $generated@@71) $generated@@0))
)))
 :pattern ( ($generated@@42 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 Int) ) (!  (=> (= $generated@@73 0) (= ($generated@@27 $generated@@72 $generated@@73) $generated@@72))
 :pattern ( ($generated@@27 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 Int) ) (! (= ($generated@@74 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and ($generated@@79 $generated@@37 $generated@@81 ($generated@@39 $generated@@83)) ($generated@@80 $generated@@82 $generated@@83)) ($generated@@79 $generated@@37 ($generated@@28 $generated@@81 $generated@@82) ($generated@@39 $generated@@83)))
 :pattern ( ($generated@@79 $generated@@37 ($generated@@28 $generated@@81 $generated@@82) ($generated@@39 $generated@@83)))
)))
(assert  (=> (<= 3 $generated@@84) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or ($generated@@87 ($generated@@76 $generated@@37 $generated@@90)) (and (< 3 $generated@@84) ($generated@@79 $generated@@37 $generated@@90 ($generated@@39 $generated@@22)))) (and (=> (or (not (= ($generated@@25 ($generated@@76 $generated@@37 $generated@@90)) ($generated@@74 0))) (not true)) ($generated@@87 ($generated@@76 $generated@@37 ($generated@@27 ($generated@@76 $generated@@37 $generated@@90) ($generated@@74 1))))) (= ($generated@@85 ($generated@@86 $generated@@89) ($generated@@76 $generated@@37 $generated@@90)) (ite (= ($generated@@25 ($generated@@76 $generated@@37 $generated@@90)) ($generated@@74 0)) $generated@@26 ($generated@@33 ($generated@@85 ($generated@@86 $generated@@89) ($generated@@76 $generated@@37 ($generated@@27 ($generated@@76 $generated@@37 $generated@@90) ($generated@@74 1)))) ($generated@@28 $generated@@26 ($generated@@88 ($generated@@76 $generated@@37 $generated@@90) ($generated@@74 0))))))))
 :weight 3
 :pattern ( ($generated@@85 ($generated@@86 $generated@@89) ($generated@@76 $generated@@37 $generated@@90)))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 Int) ($generated@@93 Int) ) (!  (=> (and (and (<= 0 $generated@@93) (< $generated@@93 $generated@@92)) (< $generated@@93 ($generated@@25 $generated@@91))) (= ($generated@@88 ($generated@@32 $generated@@91 $generated@@92) $generated@@93) ($generated@@88 $generated@@91 $generated@@93)))
 :weight 25
 :pattern ( ($generated@@88 ($generated@@32 $generated@@91 $generated@@92) $generated@@93))
 :pattern ( ($generated@@88 $generated@@91 $generated@@93) ($generated@@32 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 Int) ) (!  (=> (and (<= 0 $generated@@95) (<= $generated@@95 ($generated@@25 $generated@@94))) (= ($generated@@25 ($generated@@27 $generated@@94 $generated@@95)) (- ($generated@@25 $generated@@94) $generated@@95)))
 :pattern ( ($generated@@25 ($generated@@27 $generated@@94 $generated@@95)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@96 $generated@@97 $generated@@98)  (and (= ($generated@@25 $generated@@97) ($generated@@25 $generated@@98)) (forall (($generated@@99 Int) ) (!  (=> (and (<= 0 $generated@@99) (< $generated@@99 ($generated@@25 $generated@@97))) (= ($generated@@88 $generated@@97 $generated@@99) ($generated@@88 $generated@@98 $generated@@99)))
 :pattern ( ($generated@@88 $generated@@97 $generated@@99))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 ($generated@@48 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@48 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@25 ($generated@@28 $generated@@103 $generated@@104)) (+ 1 ($generated@@25 $generated@@103)))
 :pattern ( ($generated@@28 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@105 ($generated@@100 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@21 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@105 ($generated@@100 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> ($generated@@42 $generated@@110 $generated@@111) (=> ($generated@@105 $generated@@112 $generated@@113 $generated@@110) ($generated@@105 $generated@@112 $generated@@113 $generated@@111)))
 :pattern ( ($generated@@42 $generated@@110 $generated@@111) ($generated@@105 $generated@@112 $generated@@113 $generated@@110))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (!  (=> ($generated@@42 $generated@@114 $generated@@115) (=> ($generated@@21 $generated@@118 $generated@@116 $generated@@117 $generated@@114) ($generated@@21 $generated@@118 $generated@@116 $generated@@117 $generated@@115)))
 :pattern ( ($generated@@42 $generated@@114 $generated@@115) ($generated@@21 $generated@@118 $generated@@116 $generated@@117 $generated@@114))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 Int) ($generated@@121 Int) ) (!  (=> (and (and (<= 0 $generated@@120) (<= 0 $generated@@121)) (< $generated@@121 (- ($generated@@25 $generated@@119) $generated@@120))) (= ($generated@@88 ($generated@@27 $generated@@119 $generated@@120) $generated@@121) ($generated@@88 $generated@@119 (+ $generated@@121 $generated@@120))))
 :weight 25
 :pattern ( ($generated@@88 ($generated@@27 $generated@@119 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@25 ($generated@@33 $generated@@122 $generated@@123)) (+ ($generated@@25 $generated@@122) ($generated@@25 $generated@@123)))
 :pattern ( ($generated@@25 ($generated@@33 $generated@@122 $generated@@123)))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@80 $generated@@124 $generated@@22) (and (= ($generated@@100 $generated@@7 ($generated@@48 $generated@@7 $generated@@124)) $generated@@124) ($generated@@79 $generated@@7 ($generated@@48 $generated@@7 $generated@@124) $generated@@22)))
 :pattern ( ($generated@@80 $generated@@124 $generated@@22))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@80 $generated@@125 $generated@@38) (and (= ($generated@@100 $generated@@37 ($generated@@48 $generated@@37 $generated@@125)) $generated@@125) ($generated@@79 $generated@@37 ($generated@@48 $generated@@37 $generated@@125) $generated@@38)))
 :pattern ( ($generated@@80 $generated@@125 $generated@@38))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 Int) ($generated@@128 T@U) ) (!  (and (=> (= $generated@@127 ($generated@@25 $generated@@126)) (= ($generated@@88 ($generated@@28 $generated@@126 $generated@@128) $generated@@127) $generated@@128)) (=> (or (not (= $generated@@127 ($generated@@25 $generated@@126))) (not true)) (= ($generated@@88 ($generated@@28 $generated@@126 $generated@@128) $generated@@127) ($generated@@88 $generated@@126 $generated@@127))))
 :pattern ( ($generated@@88 ($generated@@28 $generated@@126 $generated@@128) $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> ($generated@@96 $generated@@129 $generated@@130) (= $generated@@129 $generated@@130))
 :pattern ( ($generated@@96 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 Int) ) (!  (=> (and (<= 0 $generated@@132) (<= $generated@@132 ($generated@@25 $generated@@131))) (= ($generated@@25 ($generated@@32 $generated@@131 $generated@@132)) $generated@@132))
 :pattern ( ($generated@@25 ($generated@@32 $generated@@131 $generated@@132)))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (or (not (= $generated@@133 $generated@@135)) (not true)) (=> (and ($generated@@42 $generated@@133 $generated@@134) ($generated@@42 $generated@@134 $generated@@135)) ($generated@@42 $generated@@133 $generated@@135)))
 :pattern ( ($generated@@42 $generated@@133 $generated@@134) ($generated@@42 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@80 ($generated@@100 $generated@@138 $generated@@136) $generated@@137) ($generated@@79 $generated@@138 $generated@@136 $generated@@137))
 :pattern ( ($generated@@80 ($generated@@100 $generated@@138 $generated@@136) $generated@@137))
)))
(assert  (=> (<= 3 $generated@@84) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (or ($generated@@87 $generated@@140) (and (< 3 $generated@@84) ($generated@@79 $generated@@37 $generated@@140 ($generated@@39 $generated@@22)))) ($generated@@79 $generated@@37 ($generated@@85 $generated@@139 $generated@@140) $generated@@38))
 :pattern ( ($generated@@85 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ) (! (<= 0 ($generated@@25 $generated@@141))
 :pattern ( ($generated@@25 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@21 $generated@@37 $generated@@142 ($generated@@39 $generated@@143) $generated@@144) (forall (($generated@@145 Int) ) (!  (=> (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@25 $generated@@142))) ($generated@@105 ($generated@@88 $generated@@142 $generated@@145) $generated@@143 $generated@@144))
 :pattern ( ($generated@@88 $generated@@142 $generated@@145))
)))
 :pattern ( ($generated@@21 $generated@@37 $generated@@142 ($generated@@39 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@39 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@39 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@39 $generated@@149)) $generated)
 :pattern ( ($generated@@39 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@48 $generated@@151 ($generated@@100 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@100 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@85 ($generated@@86 $generated@@152) $generated@@153) ($generated@@85 $generated@@152 $generated@@153))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@79 $generated@@37 $generated@@154 $generated@@38)  (and ($generated@@79 $generated@@37 $generated@@154 ($generated@@39 $generated@@22)) (or (= ($generated@@25 $generated@@154) ($generated@@74 0)) (or (not (= ($generated@@25 $generated@@154) 0)) (not true)))))
 :pattern ( ($generated@@79 $generated@@37 $generated@@154 $generated@@38))
)))
(assert  (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@155 $generated@@158 $generated@@159 $generated@@160 ($generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@155 $generated@@165 $generated@@166 $generated@@167 ($generated@@157 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@155 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@155 $generated@@174 $generated@@175 $generated@@176 ($generated@@157 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@155 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Bool) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@10 ($generated@@155 $generated@@46 $generated@@44 $generated@@6 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))  (=> (and (or (not (= $generated@@187 $generated@@183)) (not true)) ($generated@@10 ($generated@@48 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@46 ($generated@@47 $generated@@44 $generated@@45) $generated@@184 $generated@@187) $generated@@185)))) $generated@@186))
 :pattern ( ($generated@@155 $generated@@46 $generated@@44 $generated@@6 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (and (= ($generated@@189 ($generated@@28 $generated@@191 $generated@@192)) $generated@@191) (= ($generated@@190 ($generated@@28 $generated@@191 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@28 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@80 $generated@@193 ($generated@@39 $generated@@194)) (and (= ($generated@@100 $generated@@37 ($generated@@48 $generated@@37 $generated@@193)) $generated@@193) ($generated@@79 $generated@@37 ($generated@@48 $generated@@37 $generated@@193) ($generated@@39 $generated@@194))))
 :pattern ( ($generated@@80 $generated@@193 ($generated@@39 $generated@@194)))
)))
(assert (= ($generated@@148 $generated@@22) $generated@@1))
(assert (= ($generated@@195 $generated@@22) $generated@@3))
(assert (= ($generated@@148 $generated@@38) $generated@@2))
(assert (= ($generated@@195 $generated@@38) $generated@@4))
(assert (forall (($generated@@196 T@U) ($generated@@197 Int) ($generated@@198 Int) ) (!  (=> (and (and (<= 0 $generated@@197) (<= $generated@@197 $generated@@198)) (< $generated@@198 ($generated@@25 $generated@@196))) (= ($generated@@88 ($generated@@27 $generated@@196 $generated@@197) (- $generated@@198 $generated@@197)) ($generated@@88 $generated@@196 $generated@@198)))
 :weight 25
 :pattern ( ($generated@@88 $generated@@196 $generated@@198) ($generated@@27 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 Int) ($generated@@201 Int) ) (!  (=> (and (and (<= 0 $generated@@200) (<= 0 $generated@@201)) (<= (+ $generated@@200 $generated@@201) ($generated@@25 $generated@@199))) (= ($generated@@27 ($generated@@27 $generated@@199 $generated@@200) $generated@@201) ($generated@@27 $generated@@199 (+ $generated@@200 $generated@@201))))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@199 $generated@@200) $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Int) ) (!  (and (=> (< $generated@@204 ($generated@@25 $generated@@202)) (= ($generated@@88 ($generated@@33 $generated@@202 $generated@@203) $generated@@204) ($generated@@88 $generated@@202 $generated@@204))) (=> (<= ($generated@@25 $generated@@202) $generated@@204) (= ($generated@@88 ($generated@@33 $generated@@202 $generated@@203) $generated@@204) ($generated@@88 $generated@@203 (- $generated@@204 ($generated@@25 $generated@@202))))))
 :pattern ( ($generated@@88 ($generated@@33 $generated@@202 $generated@@203) $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@79 $generated@@7 $generated@@205 $generated@@22)  (and (<= ($generated@@74 0) ($generated@@12 $generated@@205)) (< ($generated@@12 $generated@@205) 256)))
 :pattern ( ($generated@@79 $generated@@7 $generated@@205 $generated@@22))
)))
(assert (forall (($generated@@206 Int) ) (! (= ($generated@@100 $generated@@7 ($generated@@11 ($generated@@74 $generated@@206))) ($generated@@76 $generated@@45 ($generated@@100 $generated@@7 ($generated@@11 $generated@@206))))
 :pattern ( ($generated@@100 $generated@@7 ($generated@@11 ($generated@@74 $generated@@206))))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@T) ) (! (= ($generated@@100 $generated@@208 ($generated@@76 $generated@@208 $generated@@207)) ($generated@@76 $generated@@45 ($generated@@100 $generated@@208 $generated@@207)))
 :pattern ( ($generated@@100 $generated@@208 ($generated@@76 $generated@@208 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ) (!  (=> (= ($generated@@25 $generated@@209) 0) (= $generated@@209 $generated@@26))
 :pattern ( ($generated@@25 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 Int) ) (!  (=> (= $generated@@211 0) (= ($generated@@32 $generated@@210 $generated@@211) $generated@@26))
 :pattern ( ($generated@@32 $generated@@210 $generated@@211))
)))
(assert  (=> (<= 3 $generated@@84) (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (or ($generated@@87 $generated@@213) (and (< 3 $generated@@84) ($generated@@79 $generated@@37 $generated@@213 ($generated@@39 $generated@@22)))) (and (=> (or (not (= ($generated@@25 $generated@@213) ($generated@@74 0))) (not true)) ($generated@@87 ($generated@@27 $generated@@213 ($generated@@74 1)))) (= ($generated@@85 ($generated@@86 $generated@@212) $generated@@213) (ite (= ($generated@@25 $generated@@213) ($generated@@74 0)) $generated@@26 ($generated@@33 ($generated@@85 $generated@@212 ($generated@@27 $generated@@213 ($generated@@74 1))) ($generated@@28 $generated@@26 ($generated@@88 $generated@@213 ($generated@@74 0))))))))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@212) $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@79 $generated@@37 $generated@@214 ($generated@@39 $generated@@215)) (forall (($generated@@216 Int) ) (!  (=> (and (<= 0 $generated@@216) (< $generated@@216 ($generated@@25 $generated@@214))) ($generated@@80 ($generated@@88 $generated@@214 $generated@@216) $generated@@215))
 :pattern ( ($generated@@88 $generated@@214 $generated@@216))
)))
 :pattern ( ($generated@@79 $generated@@37 $generated@@214 ($generated@@39 $generated@@215)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () Int)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () Bool)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 (T@U) Bool)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@231 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@232  (=> (= (ControlFlow 0 5) (- 0 4)) (=> false ($generated@@96 $generated@@217 ($generated@@85 ($generated@@86 ($generated@@86 $generated@@218)) $generated@@219))))))
(let (($generated@@233  (=> (and (and (= $generated@@220 $generated@@221) ($generated@@87 $generated@@219)) (and (= $generated@@217 $generated@@222) (= (ControlFlow 0 6) 5))) $generated@@232)))
(let (($generated@@234 true))
(let (($generated@@235  (=> $generated@@223 (and (=> (= (ControlFlow 0 7) 6) $generated@@233) (=> (= (ControlFlow 0 7) 3) $generated@@234)))))
(let (($generated@@236 true))
(let (($generated@@237  (and (=> (= (ControlFlow 0 8) 2) $generated@@236) (=> (= (ControlFlow 0 8) 7) $generated@@235))))
(let (($generated@@238 true))
(let (($generated@@239  (=> (and ($generated@@79 $generated@@37 $generated@@222 $generated@@38) ($generated@@21 $generated@@37 $generated@@222 $generated@@38 $generated@@224)) (=> (and (and (and (and (not false) (<= 0 $generated@@220)) (= $generated@@221 0)) (<= 0 $generated@@225)) (and (and (and (<= $generated@@221 $generated@@220) (<= $generated@@220 $generated@@225)) (=> $generated@@223 ($generated@@87 ($generated@@27 $generated@@219 $generated@@220)))) (and (and (=> $generated@@223 ($generated@@96 $generated@@222 ($generated@@85 ($generated@@86 ($generated@@86 $generated@@218)) ($generated@@27 $generated@@219 $generated@@220)))) (forall (($generated@@240 T@U) ) (!  (=> (and (or (not (= $generated@@240 $generated@@226)) (not true)) ($generated@@10 ($generated@@48 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@46 ($generated@@47 $generated@@44 $generated@@45) $generated@@224 $generated@@240) $generated@@0)))) (= ($generated@@43 $generated@@46 ($generated@@47 $generated@@44 $generated@@45) $generated@@224 $generated@@240) ($generated@@43 $generated@@46 ($generated@@47 $generated@@44 $generated@@45) $generated@@224 $generated@@240)))
 :pattern ( ($generated@@43 $generated@@46 ($generated@@47 $generated@@44 $generated@@45) $generated@@224 $generated@@240))
))) (and ($generated@@42 $generated@@224 $generated@@224) (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (or (not (= $generated@@241 $generated@@226)) (not true)) ($generated@@10 ($generated@@48 $generated@@6 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@46 ($generated@@47 $generated@@44 $generated@@45) $generated@@224 $generated@@241) $generated@@0)))) (or (= ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@46 ($generated@@47 $generated@@44 $generated@@45) $generated@@224 $generated@@241) $generated@@242) ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@46 ($generated@@47 $generated@@44 $generated@@45) $generated@@224 $generated@@241) $generated@@242)) ($generated@@10 ($generated@@155 $generated@@46 $generated@@44 $generated@@6 $generated@@227 $generated@@241 $generated@@242))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@46 ($generated@@47 $generated@@44 $generated@@45) $generated@@224 $generated@@241) $generated@@242))
)))))) (and (=> (= (ControlFlow 0 9) 1) $generated@@238) (=> (= (ControlFlow 0 9) 8) $generated@@237))))))
(let (($generated@@243  (=> (= $generated@@227 ($generated@@156 $generated@@226 $generated@@224 $generated@@0 false)) (=> (and (and ($generated@@79 $generated@@37 ($generated@@76 $generated@@37 $generated@@26) $generated@@38) (= $generated@@228 ($generated@@76 $generated@@37 $generated@@26))) (and (<= 0 ($generated@@74 0)) (<= ($generated@@74 0) ($generated@@25 $generated@@219)))) (=> (and (and (and (<= ($generated@@74 0) ($generated@@25 $generated@@219)) (<= ($generated@@25 $generated@@219) ($generated@@25 $generated@@219))) ($generated@@96 $generated@@219 ($generated@@27 ($generated@@32 $generated@@219 ($generated@@25 $generated@@219)) ($generated@@74 0)))) (and (and (= $generated@@221 ($generated@@74 0)) (= $generated@@225 ($generated@@25 $generated@@219))) (and (<= $generated@@221 $generated@@225) (= (ControlFlow 0 10) 9)))) $generated@@239)))))
(let (($generated@@244  (=> (and (and (and ($generated@@229 $generated@@224) ($generated@@230 $generated@@224)) (and ($generated@@79 $generated@@37 $generated@@219 ($generated@@39 $generated@@22)) ($generated@@21 $generated@@37 $generated@@219 ($generated@@39 $generated@@22) $generated@@224))) (and (and ($generated@@79 $generated@@37 $generated@@231 $generated@@38) ($generated@@21 $generated@@37 $generated@@231 $generated@@38 $generated@@224)) (and (= 4 $generated@@84) (= (ControlFlow 0 11) 10)))) $generated@@243)))
$generated@@244)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
