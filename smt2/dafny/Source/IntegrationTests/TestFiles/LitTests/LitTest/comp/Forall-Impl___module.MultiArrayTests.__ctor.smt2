(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@88 (Int) Int)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@119 () Int)
(declare-fun $generated@@120 (T@U T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@1) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (= ($generated@@29 $generated@@1) $generated@@2))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and (or (not (= $generated@@36 $generated@@32)) (not true)) (= ($generated@@33 $generated@@36) ($generated@@31 $generated@@35))) ($generated@@34 $generated@@13 ($generated@@17 ($generated@@30 $generated@@36)) $generated))
 :pattern ( ($generated@@30 $generated@@36) ($generated@@31 $generated@@35))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and (or (not (= $generated@@39 $generated@@32)) (not true)) (= ($generated@@33 $generated@@39) ($generated@@31 $generated@@38))) ($generated@@34 $generated@@13 ($generated@@17 ($generated@@37 $generated@@39)) $generated))
 :pattern ( ($generated@@37 $generated@@39) ($generated@@31 $generated@@38))
)))
(assert (= ($generated@@11 $generated@@41) 3))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@44 ($generated@@42 $generated@@43) $generated@@45) ($generated@@40 $generated@@41 $generated@@44 ($generated@@31 $generated@@43) $generated@@45))
 :pattern ( ($generated@@40 $generated@@41 $generated@@44 ($generated@@42 $generated@@43) $generated@@45))
 :pattern ( ($generated@@40 $generated@@41 $generated@@44 ($generated@@31 $generated@@43) $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@34 $generated@@41 $generated@@47 $generated@@46)  (or (= $generated@@47 $generated@@32) (= ($generated@@33 $generated@@47) $generated@@46)))
 :pattern ( ($generated@@34 $generated@@41 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@49 $generated@@48 $generated@@50) ($generated@@40 $generated@@41 $generated@@49 $generated@@46 $generated@@50))
 :pattern ( ($generated@@40 $generated@@41 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@40 $generated@@41 $generated@@49 $generated@@46 $generated@@50))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@52 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@52 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@52 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@11 $generated@@53) 4)) (= ($generated@@11 $generated@@54) 5)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@11 ($generated@@55 $generated@@70 $generated@@71)) 6))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@55 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@55 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@55 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@77 ($generated@@31 $generated@@76) $generated@@78)  (or (= $generated@@77 $generated@@32) ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@78 $generated@@77) $generated@@1)))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@77 ($generated@@31 $generated@@76) $generated@@78))
)))
(assert (= ($generated@@27 $generated@@79) 0))
(assert (= ($generated@@80 $generated@@6 $generated@@10) $generated@@79))
(assert  (not ($generated@@81 $generated@@79)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@82 $generated@@46 $generated@@83)  (or (= $generated@@82 $generated@@32) ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@83 $generated@@82) $generated@@1)))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@82 $generated@@46 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> ($generated@@84 $generated@@85 $generated@@86) (forall (($generated@@87 T@U) ) (!  (=> ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@85 $generated@@87) $generated@@1))) ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@86 $generated@@87) $generated@@1))))
 :pattern ( ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@86 $generated@@87) $generated@@1))
)))
 :pattern ( ($generated@@84 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@89 Int) ) (! (= ($generated@@88 $generated@@89) $generated@@89)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 $generated@@91) $generated@@91)
 :pattern ( ($generated@@90 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and (and (and ($generated@@95 $generated@@96) ($generated@@95 $generated@@97)) (and (or (not (= $generated@@98 $generated@@32)) (not true)) ($generated@@34 $generated@@41 $generated@@98 $generated@@48))) (and ($generated@@93 $generated@@96) ($generated@@84 $generated@@96 $generated@@97))) (=> (forall (($generated@@99 T@U) ($generated@@100 T@U) )  (=> (and (or (not (= $generated@@99 $generated@@32)) (not true)) (or (= $generated@@99 $generated@@98) (= $generated@@99 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@96 $generated@@98) $generated@@79))))) (= ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@96 $generated@@99) $generated@@100) ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@97 $generated@@99) $generated@@100)))) (= ($generated@@94 $generated@@96 $generated@@98) ($generated@@94 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@93 $generated@@96) ($generated@@84 $generated@@96 $generated@@97) ($generated@@94 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 ($generated@@51 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@51 $generated@@103 $generated@@102))
)))
(assert ($generated@@81 $generated@@1))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@34 $generated@@41 $generated@@105 ($generated@@42 $generated@@104))  (and ($generated@@34 $generated@@41 $generated@@105 ($generated@@31 $generated@@104)) (or (not (= $generated@@105 $generated@@32)) (not true))))
 :pattern ( ($generated@@34 $generated@@41 $generated@@105 ($generated@@42 $generated@@104)))
 :pattern ( ($generated@@34 $generated@@41 $generated@@105 ($generated@@31 $generated@@104)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (!  (=> ($generated@@84 $generated@@106 $generated@@107) (=> ($generated@@40 $generated@@110 $generated@@108 $generated@@109 $generated@@106) ($generated@@40 $generated@@110 $generated@@108 $generated@@109 $generated@@107)))
 :pattern ( ($generated@@84 $generated@@106 $generated@@107) ($generated@@40 $generated@@110 $generated@@108 $generated@@109 $generated@@106))
)))
(assert (forall (($generated@@112 T@U) ) (!  (and (= ($generated@@28 ($generated@@31 $generated@@112)) $generated@@3) (= ($generated@@111 ($generated@@31 $generated@@112)) $generated@@8))
 :pattern ( ($generated@@31 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (!  (and (= ($generated@@28 ($generated@@42 $generated@@113)) $generated@@4) (= ($generated@@111 ($generated@@42 $generated@@113)) $generated@@8))
 :pattern ( ($generated@@42 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and (and ($generated@@95 $generated@@114) (and (or (not (= $generated@@115 $generated@@32)) (not true)) (= ($generated@@33 $generated@@115) $generated@@46))) ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@114 $generated@@115) $generated@@1)))) ($generated@@40 $generated@@41 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@114 $generated@@115) $generated@@79)) ($generated@@42 $generated) $generated@@114))
 :pattern ( ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@114 $generated@@115) $generated@@79)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@34 $generated@@41 $generated@@117 ($generated@@31 $generated@@116))  (or (= $generated@@117 $generated@@32) (= ($generated@@33 $generated@@117) ($generated@@31 $generated@@116))))
 :pattern ( ($generated@@34 $generated@@41 $generated@@117 ($generated@@31 $generated@@116)))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@34 $generated@@41 $generated@@118 $generated@@48)  (and ($generated@@34 $generated@@41 $generated@@118 $generated@@46) (or (not (= $generated@@118 $generated@@32)) (not true))))
 :pattern ( ($generated@@34 $generated@@41 $generated@@118 $generated@@48))
 :pattern ( ($generated@@34 $generated@@41 $generated@@118 $generated@@46))
)))
(assert  (=> (<= 0 $generated@@119) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or ($generated@@120 $generated@@121 $generated@@122) (and (< 0 $generated@@119) (and ($generated@@95 $generated@@121) (and (or (not (= $generated@@122 $generated@@32)) (not true)) (and ($generated@@34 $generated@@41 $generated@@122 $generated@@48) ($generated@@40 $generated@@41 $generated@@122 $generated@@48 $generated@@121)))))) (= ($generated@@94 $generated@@121 $generated@@122)  (and (= ($generated@@30 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@121 $generated@@122) $generated@@79))) ($generated@@88 3)) (= ($generated@@37 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@121 $generated@@122) $generated@@79))) ($generated@@88 3)))))
 :pattern ( ($generated@@94 $generated@@121 $generated@@122) ($generated@@95 $generated@@121))
))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (or (not (= $generated@@123 $generated@@125)) (not true)) (=> (and ($generated@@84 $generated@@123 $generated@@124) ($generated@@84 $generated@@124 $generated@@125)) ($generated@@84 $generated@@123 $generated@@125)))
 :pattern ( ($generated@@84 $generated@@123 $generated@@124) ($generated@@84 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (and (= ($generated@@126 ($generated@@80 $generated@@127 $generated@@128)) $generated@@127) (= ($generated@@29 ($generated@@80 $generated@@127 $generated@@128)) $generated@@128))
 :pattern ( ($generated@@80 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (! (<= 0 ($generated@@30 $generated@@129))
 :pattern ( ($generated@@30 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (! (<= 0 ($generated@@37 $generated@@130))
 :pattern ( ($generated@@37 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@31 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@31 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@42 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@42 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@51 $generated@@136 ($generated@@101 $generated@@136 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@101 $generated@@136 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and ($generated@@95 $generated@@138) (and (or (not (= $generated@@139 $generated@@32)) (not true)) (= ($generated@@33 $generated@@139) ($generated@@31 $generated@@137)))) ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@138 $generated@@139) $generated@@1)))) ($generated@@40 $generated@@13 ($generated@@17 ($generated@@30 $generated@@139)) $generated $generated@@138))
 :pattern ( ($generated@@30 $generated@@139) ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@138 $generated@@139) $generated@@1)) ($generated@@31 $generated@@137))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and ($generated@@95 $generated@@141) (and (or (not (= $generated@@142 $generated@@32)) (not true)) (= ($generated@@33 $generated@@142) ($generated@@31 $generated@@140)))) ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@141 $generated@@142) $generated@@1)))) ($generated@@40 $generated@@13 ($generated@@17 ($generated@@37 $generated@@142)) $generated $generated@@141))
 :pattern ( ($generated@@37 $generated@@142) ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@141 $generated@@142) $generated@@1)) ($generated@@31 $generated@@140))
)))
(assert  (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@143 $generated@@146 $generated@@147 $generated@@148 ($generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@143 $generated@@153 $generated@@154 $generated@@155 ($generated@@145 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@143 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@143 $generated@@162 $generated@@163 $generated@@164 ($generated@@145 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@143 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@16 ($generated@@143 $generated@@41 $generated@@53 $generated@@12 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@143 $generated@@41 $generated@@53 $generated@@12 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@95 $generated@@177) (and (or (not (= $generated@@178 $generated@@32)) (not true)) (= ($generated@@33 $generated@@178) $generated@@46))) ($generated@@34 $generated@@41 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@177 $generated@@178) $generated@@79)) ($generated@@42 $generated)))
 :pattern ( ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@177 $generated@@178) $generated@@79)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@95 ($generated@@56 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@179 $generated@@180 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@179 $generated@@180) $generated@@181 $generated@@182))) ($generated@@84 $generated@@179 ($generated@@56 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@179 $generated@@180 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@179 $generated@@180) $generated@@181 $generated@@182))))
 :pattern ( ($generated@@56 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@179 $generated@@180 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@179 $generated@@180) $generated@@181 $generated@@182)))
)))
(assert (= ($generated@@28 $generated@@48) $generated@@5))
(assert (= ($generated@@111 $generated@@48) $generated@@9))
(assert (= ($generated@@28 $generated@@46) $generated@@7))
(assert (= ($generated@@111 $generated@@46) $generated@@9))
(assert (forall (($generated@@183 Int) ) (! (= ($generated@@101 $generated@@13 ($generated@@17 ($generated@@88 $generated@@183))) ($generated@@90 $generated@@54 ($generated@@101 $generated@@13 ($generated@@17 $generated@@183))))
 :pattern ( ($generated@@101 $generated@@13 ($generated@@17 ($generated@@88 $generated@@183))))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@T) ) (! (= ($generated@@101 $generated@@185 ($generated@@90 $generated@@185 $generated@@184)) ($generated@@90 $generated@@54 ($generated@@101 $generated@@185 $generated@@184)))
 :pattern ( ($generated@@101 $generated@@185 ($generated@@90 $generated@@185 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! ($generated@@40 $generated@@13 $generated@@187 $generated $generated@@186)
 :pattern ( ($generated@@40 $generated@@13 $generated@@187 $generated $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! ($generated@@34 $generated@@13 $generated@@188 $generated)
 :pattern ( ($generated@@34 $generated@@13 $generated@@188 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@195  (=> (= $generated@@189 ($generated@@144 $generated@@32 $generated@@190 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= 0 ($generated@@88 3))) (=> (<= 0 ($generated@@88 3)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= 0 ($generated@@88 3))) (=> (<= 0 ($generated@@88 3)) (=> (and (and (and (and (or (not (= $generated@@191 $generated@@32)) (not true)) ($generated@@34 $generated@@41 $generated@@191 ($generated@@31 $generated))) (and (not ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@190 $generated@@191) $generated@@1)))) (= ($generated@@30 $generated@@191) ($generated@@88 3)))) (and (and (= ($generated@@37 $generated@@191) ($generated@@88 3)) (= $generated@@192 ($generated@@56 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@190 $generated@@191 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@190 $generated@@191) $generated@@1 ($generated@@101 $generated@@12 ($generated@@15 true)))))) (and ($generated@@95 $generated@@192) ($generated@@93 $generated@@192)))) (and (and (and (or (not (= $generated@@193 $generated@@32)) (not true)) ($generated@@34 $generated@@41 $generated@@193 $generated@@46)) (not ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@192 $generated@@193) $generated@@1))))) (and (and (= ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@192 $generated@@193) $generated@@79)) $generated@@191) (= $generated@@194 ($generated@@56 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@192 $generated@@193 ($generated@@56 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@192 $generated@@193) $generated@@1 ($generated@@101 $generated@@12 ($generated@@15 true)))))) (and ($generated@@95 $generated@@194) ($generated@@93 $generated@@194))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (or (not (= ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@194 $generated@@193) $generated@@79)) $generated@@32)) (not true)) (not ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@190 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@194 $generated@@193) $generated@@79))) $generated@@1)))))) (=> (and (or (not (= ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@194 $generated@@193) $generated@@79)) $generated@@32)) (not true)) (not ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@190 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@194 $generated@@193) $generated@@79))) $generated@@1))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@120 $generated@@194 $generated@@193) (or ($generated@@94 $generated@@194 $generated@@193) (= ($generated@@30 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@194 $generated@@193) $generated@@79))) ($generated@@88 3))))) (=> (=> ($generated@@120 $generated@@194 $generated@@193) (or ($generated@@94 $generated@@194 $generated@@193) (= ($generated@@30 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@194 $generated@@193) $generated@@79))) ($generated@@88 3)))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@120 $generated@@194 $generated@@193) (or ($generated@@94 $generated@@194 $generated@@193) (= ($generated@@37 ($generated@@51 $generated@@41 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@41 ($generated@@55 $generated@@53 $generated@@54) $generated@@194 $generated@@193) $generated@@79))) ($generated@@88 3)))))))))))))))))
(let (($generated@@196  (=> (and (and ($generated@@95 $generated@@190) ($generated@@93 $generated@@190)) (and (= 1 $generated@@119) (= (ControlFlow 0 7) 2))) $generated@@195)))
$generated@@196)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
