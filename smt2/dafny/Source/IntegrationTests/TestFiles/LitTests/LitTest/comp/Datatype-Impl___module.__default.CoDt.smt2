(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U T@U Int) T@U)
(declare-fun $generated@@31 (T@U Int) Bool)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@62 (Int T@U) T@U)
(declare-fun $generated@@66 (Int T@U) T@U)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@73 (T@U) Int)
(declare-fun $generated@@78 (T@U Int Bool) T@U)
(declare-fun $generated@@85 (Int Bool) Bool)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@115 (T@U) Int)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@122 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@T T@T) T@T)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@128 (T@T) T@T)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@13 $generated@@33) 3))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 Int) ) (!  (=> (or ($generated@@31 $generated@@38 $generated@@39) (and (< 1 $generated@@29) (and ($generated@@32 $generated@@33 $generated@@38 $generated@@34) (<= ($generated@@35 0) $generated@@39)))) ($generated@@32 $generated@@33 ($generated@@30 $generated@@37 $generated@@38 $generated@@39) $generated@@36))
 :pattern ( ($generated@@30 $generated@@37 $generated@@38 $generated@@39))
))))
(assert (= ($generated@@40 $generated) $generated@@1))
(assert (= ($generated@@40 $generated@@0) $generated@@2))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! ($generated@@41 $generated@@15 $generated@@43 $generated@@42 $generated@@44)
 :pattern ( ($generated@@41 $generated@@15 $generated@@43 $generated@@42 $generated@@44))
)))
(assert (= ($generated@@45 $generated@@46) $generated@@7))
(assert (forall (($generated@@48 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@48 $generated@@34) ($generated@@47 $generated@@48))
 :pattern ( ($generated@@47 $generated@@48) ($generated@@32 $generated@@33 $generated@@48 $generated@@34))
)))
(assert ($generated@@32 $generated@@33 $generated@@46 $generated@@36))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@35 $generated@@49) $generated@@49)
 :pattern ( ($generated@@35 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@53 $generated@@54) (= ($generated@@45 $generated@@54) $generated@@7))
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@55 $generated@@56) (= ($generated@@45 $generated@@56) $generated@@8))
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@47 $generated@@57) (= ($generated@@45 $generated@@57) $generated@@9))
 :pattern ( ($generated@@47 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 ($generated@@58 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@58 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@55 $generated@@63) (exists (($generated@@64 Int) ($generated@@65 T@U) ) (= $generated@@63 ($generated@@62 $generated@@64 $generated@@65))))
 :pattern ( ($generated@@55 $generated@@63))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@47 $generated@@67) (exists (($generated@@68 Int) ($generated@@69 T@U) ) (= $generated@@67 ($generated@@66 $generated@@68 $generated@@69))))
 :pattern ( ($generated@@47 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@53 $generated@@70) (= $generated@@70 $generated@@46))
 :pattern ( ($generated@@53 $generated@@70))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 Int) ) (!  (=> (or ($generated@@31 $generated@@75 $generated@@76) (and (< 1 $generated@@29) (and ($generated@@32 $generated@@33 $generated@@75 $generated@@34) (<= ($generated@@35 0) $generated@@76)))) (and (=> (or (not (= $generated@@76 ($generated@@35 0))) (not true)) (and ($generated@@47 $generated@@75) (and ($generated@@47 $generated@@75) ($generated@@31 ($generated@@72 $generated@@75) (- $generated@@76 1))))) (= ($generated@@30 ($generated@@71 $generated@@74) $generated@@75 $generated@@76) (ite (= $generated@@76 ($generated@@35 0)) $generated@@46 ($generated@@62 ($generated@@73 $generated@@75) ($generated@@30 $generated@@74 ($generated@@72 $generated@@75) (- $generated@@76 1)))))))
 :pattern ( ($generated@@30 ($generated@@71 $generated@@74) $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@32 $generated@@15 $generated@@77 $generated@@42) (<= ($generated@@35 0) ($generated@@20 $generated@@77)))
 :pattern ( ($generated@@32 $generated@@15 $generated@@77 $generated@@42))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 Int) ($generated@@81 Bool) ) (! (= ($generated@@78 ($generated@@71 $generated@@79) $generated@@80 $generated@@81) ($generated@@78 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@78 ($generated@@71 $generated@@79) $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 Int) ) (! (= ($generated@@30 ($generated@@71 $generated@@82) $generated@@83 $generated@@84) ($generated@@30 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@30 ($generated@@71 $generated@@82) $generated@@83 $generated@@84))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@86 T@U) ($generated@@87 Int) ($generated@@88 Bool) ) (!  (=> (or ($generated@@85 $generated@@87 $generated@@88) (< 1 $generated@@29)) (and (and (=> $generated@@88 ($generated@@85 $generated@@87 ($generated@@18 ($generated@@50 $generated@@14 ($generated@@17 false))))) (=> (not $generated@@88) ($generated@@85 (+ $generated@@87 1) ($generated@@18 ($generated@@50 $generated@@14 ($generated@@17 true)))))) (= ($generated@@78 ($generated@@71 $generated@@86) $generated@@87 $generated@@88) (ite $generated@@88 ($generated@@78 $generated@@86 $generated@@87 ($generated@@18 ($generated@@50 $generated@@14 ($generated@@17 false)))) ($generated@@66 $generated@@87 ($generated@@78 $generated@@86 (+ $generated@@87 1) ($generated@@18 ($generated@@50 $generated@@14 ($generated@@17 true)))))))))
 :pattern ( ($generated@@78 ($generated@@71 $generated@@86) $generated@@87 $generated@@88))
))))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@89 T@U) ($generated@@90 Int) ($generated@@91 Bool) ) (!  (=> (or ($generated@@85 $generated@@90 $generated@@91) (< 1 $generated@@29)) ($generated@@32 $generated@@33 ($generated@@78 $generated@@89 $generated@@90 $generated@@91) $generated@@34))
 :pattern ( ($generated@@78 $generated@@89 $generated@@90 $generated@@91))
))))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 Int) ) (!  (=> (or ($generated@@31 $generated@@93 ($generated@@35 $generated@@94)) (and (< 1 $generated@@29) (and ($generated@@32 $generated@@33 $generated@@93 $generated@@34) (<= ($generated@@35 0) $generated@@94)))) (and (=> (or (not (= ($generated@@35 $generated@@94) ($generated@@35 0))) (not true)) (and ($generated@@47 $generated@@93) (and ($generated@@47 $generated@@93) ($generated@@31 ($generated@@72 $generated@@93) ($generated@@35 (- $generated@@94 1)))))) (= ($generated@@30 ($generated@@71 $generated@@92) $generated@@93 ($generated@@35 $generated@@94)) (ite (= ($generated@@35 $generated@@94) ($generated@@35 0)) $generated@@46 ($generated@@62 ($generated@@73 $generated@@93) ($generated@@30 ($generated@@71 $generated@@92) ($generated@@72 $generated@@93) ($generated@@35 (- $generated@@94 1))))))))
 :weight 3
 :pattern ( ($generated@@30 ($generated@@71 $generated@@92) $generated@@93 ($generated@@35 $generated@@94)))
))))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 Int) ) (!  (=> (or ($generated@@31 ($generated@@50 $generated@@33 $generated@@96) ($generated@@35 $generated@@97)) (and (< 1 $generated@@29) (and ($generated@@32 $generated@@33 $generated@@96 $generated@@34) (<= ($generated@@35 0) $generated@@97)))) (and (=> (or (not (= ($generated@@35 $generated@@97) ($generated@@35 0))) (not true)) (and ($generated@@47 ($generated@@50 $generated@@33 $generated@@96)) (and ($generated@@47 ($generated@@50 $generated@@33 $generated@@96)) ($generated@@31 ($generated@@50 $generated@@33 ($generated@@72 ($generated@@50 $generated@@33 $generated@@96))) ($generated@@35 (- $generated@@97 1)))))) (= ($generated@@30 ($generated@@71 $generated@@95) ($generated@@50 $generated@@33 $generated@@96) ($generated@@35 $generated@@97)) (ite (= ($generated@@35 $generated@@97) ($generated@@35 0)) $generated@@46 ($generated@@62 ($generated@@35 ($generated@@73 ($generated@@50 $generated@@33 $generated@@96))) ($generated@@50 $generated@@33 ($generated@@30 ($generated@@71 $generated@@95) ($generated@@50 $generated@@33 ($generated@@72 ($generated@@50 $generated@@33 $generated@@96))) ($generated@@35 (- $generated@@97 1)))))))))
 :weight 3
 :pattern ( ($generated@@30 ($generated@@71 $generated@@95) ($generated@@50 $generated@@33 $generated@@96) ($generated@@35 $generated@@97)))
))))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@98 $generated@@36) (or ($generated@@53 $generated@@98) ($generated@@55 $generated@@98)))
 :pattern ( ($generated@@55 $generated@@98) ($generated@@32 $generated@@33 $generated@@98 $generated@@36))
 :pattern ( ($generated@@53 $generated@@98) ($generated@@32 $generated@@33 $generated@@98 $generated@@36))
)))
(assert (forall (($generated@@99 Int) ($generated@@100 T@U) ) (! (= ($generated@@45 ($generated@@62 $generated@@99 $generated@@100)) $generated@@8)
 :pattern ( ($generated@@62 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 Int) ($generated@@103 T@U) ) (! (= ($generated@@101 ($generated@@62 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@62 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 Int) ($generated@@106 T@U) ) (! (= ($generated@@104 ($generated@@62 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@62 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 Int) ($generated@@108 T@U) ) (! (= ($generated@@45 ($generated@@66 $generated@@107 $generated@@108)) $generated@@9)
 :pattern ( ($generated@@66 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 Int) ($generated@@110 T@U) ) (! (= ($generated@@73 ($generated@@66 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@66 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 Int) ($generated@@112 T@U) ) (! (= ($generated@@72 ($generated@@66 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@66 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@58 $generated@@114 ($generated@@59 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@59 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@116 Int) ($generated@@117 T@U) ) (! (< ($generated@@115 $generated@@117) ($generated@@115 ($generated@@62 $generated@@116 $generated@@117)))
 :pattern ( ($generated@@62 $generated@@116 $generated@@117))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@118 $generated@@129 $generated@@130 $generated@@131 ($generated@@125 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@118 $generated@@136 $generated@@137 $generated@@138 ($generated@@125 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@118 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@118 $generated@@145 $generated@@146 $generated@@147 ($generated@@125 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@118 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))) (= ($generated@@13 $generated@@119) 4)) (= ($generated@@13 $generated@@120) 5)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@122 $generated@@154 $generated@@155 ($generated@@126 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@156) $generated@@158) $generated@@156)
 :weight 0
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@163 $generated@@164) (= ($generated@@122 $generated@@159 $generated@@160 ($generated@@126 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@122 $generated@@159 $generated@@160 $generated@@162 $generated@@164)))
 :weight 0
))) (= ($generated@@13 $generated@@123) 6)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@13 ($generated@@124 $generated@@165 $generated@@166)) 7))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@127 ($generated@@124 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@124 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@128 ($generated@@124 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@124 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@18 ($generated@@118 $generated@@119 $generated@@120 $generated@@14 ($generated@@121 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@18 ($generated@@58 $generated@@14 ($generated@@122 $generated@@120 $generated@@123 ($generated@@122 $generated@@119 ($generated@@124 $generated@@120 $generated@@123) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@118 $generated@@119 $generated@@120 $generated@@14 ($generated@@121 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and ($generated@@177 $generated@@179) (and ($generated@@55 $generated@@178) ($generated@@41 $generated@@33 $generated@@178 $generated@@36 $generated@@179))) ($generated@@41 $generated@@15 ($generated@@19 ($generated@@101 $generated@@178)) $generated@@0 $generated@@179))
 :pattern ( ($generated@@41 $generated@@15 ($generated@@19 ($generated@@101 $generated@@178)) $generated@@0 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and ($generated@@177 $generated@@181) (and ($generated@@47 $generated@@180) ($generated@@41 $generated@@33 $generated@@180 $generated@@34 $generated@@181))) ($generated@@41 $generated@@15 ($generated@@19 ($generated@@73 $generated@@180)) $generated@@0 $generated@@181))
 :pattern ( ($generated@@41 $generated@@15 ($generated@@19 ($generated@@73 $generated@@180)) $generated@@0 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@177 $generated@@183) ($generated@@32 $generated@@33 $generated@@182 $generated@@36)) ($generated@@41 $generated@@33 $generated@@182 $generated@@36 $generated@@183))
 :pattern ( ($generated@@41 $generated@@33 $generated@@182 $generated@@36 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and ($generated@@177 $generated@@185) ($generated@@32 $generated@@33 $generated@@184 $generated@@34)) ($generated@@41 $generated@@33 $generated@@184 $generated@@34 $generated@@185))
 :pattern ( ($generated@@41 $generated@@33 $generated@@184 $generated@@34 $generated@@185))
)))
(assert (= ($generated@@40 $generated@@42) $generated@@4))
(assert (= ($generated@@186 $generated@@42) $generated@@10))
(assert (= ($generated@@40 $generated@@36) $generated@@5))
(assert (= ($generated@@186 $generated@@36) $generated@@11))
(assert (= ($generated@@40 $generated@@34) $generated@@6))
(assert (= ($generated@@186 $generated@@34) $generated@@12))
(assert (= $generated@@46 ($generated@@50 $generated@@33 $generated@@46)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@177 $generated@@188) (and ($generated@@55 $generated@@187) ($generated@@41 $generated@@33 $generated@@187 $generated@@36 $generated@@188))) ($generated@@41 $generated@@33 ($generated@@104 $generated@@187) $generated@@36 $generated@@188))
 :pattern ( ($generated@@41 $generated@@33 ($generated@@104 $generated@@187) $generated@@36 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and ($generated@@177 $generated@@190) (and ($generated@@47 $generated@@189) ($generated@@41 $generated@@33 $generated@@189 $generated@@34 $generated@@190))) ($generated@@41 $generated@@33 ($generated@@72 $generated@@189) $generated@@34 $generated@@190))
 :pattern ( ($generated@@41 $generated@@33 ($generated@@72 $generated@@189) $generated@@34 $generated@@190))
)))
(assert (forall (($generated@@191 Int) ($generated@@192 T@U) ) (! (= ($generated@@62 ($generated@@35 $generated@@191) ($generated@@50 $generated@@33 $generated@@192)) ($generated@@50 $generated@@33 ($generated@@62 $generated@@191 $generated@@192)))
 :pattern ( ($generated@@62 ($generated@@35 $generated@@191) ($generated@@50 $generated@@33 $generated@@192)))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@59 $generated@@15 ($generated@@19 ($generated@@35 $generated@@193))) ($generated@@50 $generated@@123 ($generated@@59 $generated@@15 ($generated@@19 $generated@@193))))
 :pattern ( ($generated@@59 $generated@@15 ($generated@@19 ($generated@@35 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@T) ) (! (= ($generated@@59 $generated@@195 ($generated@@50 $generated@@195 $generated@@194)) ($generated@@50 $generated@@123 ($generated@@59 $generated@@195 $generated@@194)))
 :pattern ( ($generated@@59 $generated@@195 ($generated@@50 $generated@@195 $generated@@194)))
)))
(assert (forall (($generated@@196 Int) ($generated@@197 T@U) ) (! (= ($generated@@32 $generated@@33 ($generated@@62 $generated@@196 $generated@@197) $generated@@36)  (and ($generated@@32 $generated@@15 ($generated@@19 $generated@@196) $generated@@0) ($generated@@32 $generated@@33 $generated@@197 $generated@@36)))
 :pattern ( ($generated@@32 $generated@@33 ($generated@@62 $generated@@196 $generated@@197) $generated@@36))
)))
(assert (forall (($generated@@198 Int) ($generated@@199 T@U) ) (! (= ($generated@@32 $generated@@33 ($generated@@66 $generated@@198 $generated@@199) $generated@@34)  (and ($generated@@32 $generated@@15 ($generated@@19 $generated@@198) $generated@@0) ($generated@@32 $generated@@33 $generated@@199 $generated@@34)))
 :pattern ( ($generated@@32 $generated@@33 ($generated@@66 $generated@@198 $generated@@199) $generated@@34))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! ($generated@@41 $generated@@15 $generated@@201 $generated@@0 $generated@@200)
 :pattern ( ($generated@@41 $generated@@15 $generated@@201 $generated@@0 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! ($generated@@41 $generated@@14 $generated@@203 $generated $generated@@202)
 :pattern ( ($generated@@41 $generated@@14 $generated@@203 $generated $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ) (! ($generated@@32 $generated@@15 $generated@@204 $generated@@0)
 :pattern ( ($generated@@32 $generated@@15 $generated@@204 $generated@@0))
)))
(assert (forall (($generated@@205 T@U) ) (! ($generated@@32 $generated@@14 $generated@@205 $generated)
 :pattern ( ($generated@@32 $generated@@14 $generated@@205 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Bool)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@219 true))
(let (($generated@@220  (=> (and (not ($generated@@55 $generated@@206)) (= (ControlFlow 0 5) 1)) $generated@@219)))
(let (($generated@@221  (=> ($generated@@55 $generated@@206) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@55 $generated@@206)) (=> ($generated@@55 $generated@@206) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@55 $generated@@206)) (=> ($generated@@55 $generated@@206) (=> (= (ControlFlow 0 2) 1) $generated@@219))))))))
(let (($generated@@222  (=> (and (= $generated@@207 ($generated@@121 $generated@@208 $generated@@209 $generated@@3 false)) (= $generated@@210 ($generated@@35 0))) (=> (and (and (and ($generated@@41 $generated@@15 ($generated@@19 $generated@@210) $generated@@0 $generated@@209) (= $generated@@211 ($generated@@18 ($generated@@50 $generated@@14 ($generated@@17 true))))) (and ($generated@@41 $generated@@14 ($generated@@17 $generated@@211) $generated $generated@@209) ($generated@@85 ($generated@@35 0) ($generated@@18 ($generated@@50 $generated@@14 ($generated@@17 true)))))) (and (and ($generated@@47 ($generated@@50 $generated@@33 ($generated@@78 ($generated@@71 $generated@@212) ($generated@@35 0) ($generated@@18 ($generated@@50 $generated@@14 ($generated@@17 true)))))) ($generated@@85 ($generated@@35 0) ($generated@@18 ($generated@@50 $generated@@14 ($generated@@17 true))))) (and (= $generated@@213 ($generated@@50 $generated@@33 ($generated@@78 ($generated@@71 $generated@@212) ($generated@@35 0) ($generated@@18 ($generated@@50 $generated@@14 ($generated@@17 true)))))) ($generated@@41 $generated@@33 $generated@@213 $generated@@34 $generated@@209)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@32 $generated@@15 ($generated@@19 ($generated@@35 4)) $generated@@42)) (=> ($generated@@32 $generated@@15 ($generated@@19 ($generated@@35 4)) $generated@@42) (=> (= $generated@@214 ($generated@@35 4)) (=> (and (and ($generated@@41 $generated@@15 ($generated@@19 $generated@@214) $generated@@42 $generated@@209) ($generated@@31 $generated@@213 ($generated@@35 4))) (and ($generated@@31 $generated@@213 ($generated@@35 4)) (= $generated@@206 ($generated@@30 ($generated@@71 $generated@@212) $generated@@213 ($generated@@35 4))))) (and (=> (= (ControlFlow 0 6) 2) $generated@@221) (=> (= (ControlFlow 0 6) 5) $generated@@220))))))))))
(let (($generated@@223  (=> (and ($generated@@177 $generated@@209) ($generated@@215 $generated@@209)) (=> (and (and (and (and ($generated@@32 $generated@@33 $generated@@216 $generated@@34) ($generated@@41 $generated@@33 $generated@@216 $generated@@34 $generated@@209)) true) (and (and ($generated@@32 $generated@@33 $generated@@217 $generated@@36) ($generated@@41 $generated@@33 $generated@@217 $generated@@36 $generated@@209)) true)) (and (and (and ($generated@@32 $generated@@33 $generated@@218 $generated@@34) ($generated@@41 $generated@@33 $generated@@218 $generated@@34 $generated@@209)) true) (and (= 2 $generated@@29) (= (ControlFlow 0 8) 6)))) $generated@@222))))
$generated@@223))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
