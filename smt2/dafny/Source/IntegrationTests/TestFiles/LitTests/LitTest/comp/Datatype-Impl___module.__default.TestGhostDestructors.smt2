(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@34 (Int Int) T@U)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@65 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@T T@T) T@T)
(declare-fun $generated@@68 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@69 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@120 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@128 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ) (!  (=> ($generated@@22 $generated@@24) ($generated@@23 $generated@@24))
 :pattern ( ($generated@@22 $generated@@24))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@25 $generated@@28 $generated@@29)  (and (= ($generated@@26 $generated@@28) ($generated@@26 $generated@@29)) (= ($generated@@27 $generated@@28) ($generated@@27 $generated@@29))))
 :pattern ( ($generated@@25 $generated@@28 $generated@@29))
)))
(assert (= ($generated@@5 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@33 $generated@@32) ($generated@@23 $generated@@33))
 :pattern ( ($generated@@23 $generated@@33) ($generated@@30 $generated@@31 $generated@@33 $generated@@32))
)))
(assert (forall (($generated@@35 Int) ($generated@@36 Int) ) (! (= ($generated@@30 $generated@@31 ($generated@@34 $generated@@35 $generated@@36) $generated@@32)  (and ($generated@@30 $generated@@7 ($generated@@11 $generated@@35) $generated) ($generated@@30 $generated@@7 ($generated@@11 $generated@@36) $generated)))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@34 $generated@@35 $generated@@36) $generated@@32))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@25 $generated@@37 $generated@@38) (= $generated@@37 $generated@@38))
 :pattern ( ($generated@@25 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 Int) ) (! (= ($generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ) (! (= ($generated@@23 $generated@@45) (= ($generated@@44 $generated@@45) $generated@@3))
 :pattern ( ($generated@@23 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 ($generated@@46 $generated@@49 $generated@@48)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (!  (=> ($generated@@23 $generated@@50) (exists (($generated@@51 Int) ($generated@@52 Int) ) (= $generated@@50 ($generated@@34 $generated@@51 $generated@@52))))
 :pattern ( ($generated@@23 $generated@@50))
)))
(assert (forall (($generated@@53 Int) ($generated@@54 Int) ) (! (= ($generated@@44 ($generated@@34 $generated@@53 $generated@@54)) $generated@@3)
 :pattern ( ($generated@@34 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@55 Int) ($generated@@56 Int) ) (! (= ($generated@@26 ($generated@@34 $generated@@55 $generated@@56)) $generated@@55)
 :pattern ( ($generated@@34 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@57 Int) ($generated@@58 Int) ) (! (= ($generated@@27 ($generated@@34 $generated@@57 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@34 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@46 $generated@@60 ($generated@@47 $generated@@60 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@47 $generated@@60 $generated@@59))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@61 $generated@@72 $generated@@73 $generated@@74 ($generated@@68 $generated@@72 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@78 $generated@@75) $generated@@77 $generated@@78) $generated@@75)
 :weight 0
)) (and (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (= $generated@@84 $generated@@86) (= ($generated@@61 $generated@@79 $generated@@80 $generated@@81 ($generated@@68 $generated@@79 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@82) $generated@@86 $generated@@87) ($generated@@61 $generated@@79 $generated@@80 $generated@@81 $generated@@83 $generated@@86 $generated@@87)))
 :weight 0
)) (forall (($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@94 $generated@@96) (= ($generated@@61 $generated@@88 $generated@@89 $generated@@90 ($generated@@68 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@91) $generated@@95 $generated@@96) ($generated@@61 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@95 $generated@@96)))
 :weight 0
)))) (= ($generated@@5 $generated@@62) 4)) (= ($generated@@5 $generated@@63) 5)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@65 $generated@@97 $generated@@98 ($generated@@69 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@99) $generated@@101) $generated@@99)
 :weight 0
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@65 $generated@@102 $generated@@103 ($generated@@69 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@65 $generated@@102 $generated@@103 $generated@@105 $generated@@107)))
 :weight 0
))) (= ($generated@@5 $generated@@66) 6)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (= ($generated@@5 ($generated@@67 $generated@@108 $generated@@109)) 7))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@70 ($generated@@67 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@67 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (! (= ($generated@@71 ($generated@@67 $generated@@112 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@67 $generated@@112 $generated@@113))
))))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 Bool) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@10 ($generated@@61 $generated@@62 $generated@@63 $generated@@6 ($generated@@64 $generated@@114 $generated@@115 $generated@@116 $generated@@117) $generated@@118 $generated@@119))  (=> (and (or (not (= $generated@@118 $generated@@114)) (not true)) ($generated@@10 ($generated@@46 $generated@@6 ($generated@@65 $generated@@63 $generated@@66 ($generated@@65 $generated@@62 ($generated@@67 $generated@@63 $generated@@66) $generated@@115 $generated@@118) $generated@@116)))) $generated@@117))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 $generated@@6 ($generated@@64 $generated@@114 $generated@@115 $generated@@116 $generated@@117) $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (and ($generated@@121 $generated@@123) (and ($generated@@23 $generated@@122) ($generated@@120 $generated@@31 $generated@@122 $generated@@32 $generated@@123))) ($generated@@120 $generated@@7 ($generated@@11 ($generated@@26 $generated@@122)) $generated $generated@@123))
 :pattern ( ($generated@@120 $generated@@7 ($generated@@11 ($generated@@26 $generated@@122)) $generated $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (and ($generated@@121 $generated@@125) (and ($generated@@23 $generated@@124) ($generated@@120 $generated@@31 $generated@@124 $generated@@32 $generated@@125))) ($generated@@120 $generated@@7 ($generated@@11 ($generated@@27 $generated@@124)) $generated $generated@@125))
 :pattern ( ($generated@@120 $generated@@7 ($generated@@11 ($generated@@27 $generated@@124)) $generated $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@121 $generated@@127) ($generated@@30 $generated@@31 $generated@@126 $generated@@32)) ($generated@@120 $generated@@31 $generated@@126 $generated@@32 $generated@@127))
 :pattern ( ($generated@@120 $generated@@31 $generated@@126 $generated@@32 $generated@@127))
)))
(assert (= ($generated@@21 $generated@@32) $generated@@2))
(assert (= ($generated@@128 $generated@@32) $generated@@4))
(assert (forall (($generated@@129 Int) ($generated@@130 Int) ) (! (= ($generated@@34 ($generated@@39 $generated@@129) ($generated@@39 $generated@@130)) ($generated@@41 $generated@@31 ($generated@@34 $generated@@129 $generated@@130)))
 :pattern ( ($generated@@34 ($generated@@39 $generated@@129) ($generated@@39 $generated@@130)))
)))
(assert (forall (($generated@@131 Int) ) (! (= ($generated@@47 $generated@@7 ($generated@@11 ($generated@@39 $generated@@131))) ($generated@@41 $generated@@66 ($generated@@47 $generated@@7 ($generated@@11 $generated@@131))))
 :pattern ( ($generated@@47 $generated@@7 ($generated@@11 ($generated@@39 $generated@@131))))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@47 $generated@@133 ($generated@@41 $generated@@133 $generated@@132)) ($generated@@41 $generated@@66 ($generated@@47 $generated@@133 $generated@@132)))
 :pattern ( ($generated@@47 $generated@@133 ($generated@@41 $generated@@133 $generated@@132)))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! ($generated@@120 $generated@@7 $generated@@135 $generated $generated@@134)
 :pattern ( ($generated@@120 $generated@@7 $generated@@135 $generated $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! ($generated@@30 $generated@@7 $generated@@136 $generated)
 :pattern ( ($generated@@30 $generated@@7 $generated@@136 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () Int)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@166 true))
(let (($generated@@167 true))
(let (($generated@@168  (=> (and (= $generated@@137 ($generated@@64 $generated@@138 $generated@@139 $generated@@1 false)) (= $generated@@140 ($generated@@41 $generated@@31 ($generated@@34 ($generated@@39 10) ($generated@@39 20))))) (=> (and (and (= $generated@@141 $generated@@140) ($generated@@30 $generated@@31 $generated@@141 $generated@@32)) (and (= $generated@@142 $generated@@141) ($generated@@23 $generated@@140))) (=> (and (and (and (= $generated@@143 (+ ($generated@@26 $generated@@140) 1)) ($generated@@23 $generated@@140)) (and ($generated@@30 $generated@@7 ($generated@@11 $generated@@143) $generated) (= $generated@@144 $generated@@143))) (and (and ($generated@@23 $generated@@142) (let (($generated@@169 $generated@@140))
 (and ($generated@@23 $generated@@140) ($generated@@23 $generated@@169)))) (and (= $generated@@145 (let (($generated@@170 $generated@@140))
(let (($generated@@171 (+ ($generated@@26 $generated@@140) 1)))
($generated@@34 $generated@@171 ($generated@@27 $generated@@170))))) (= $generated@@146 $generated@@145)))) (=> (and (and (and (and (and ($generated@@30 $generated@@31 $generated@@146 $generated@@32) (= $generated@@147 $generated@@146)) (and ($generated@@23 $generated@@145) (= $generated@@148 (+ ($generated@@26 $generated@@145) 1)))) (and (and ($generated@@23 $generated@@145) ($generated@@30 $generated@@7 ($generated@@11 $generated@@148) $generated)) (and (= $generated@@149 $generated@@148) ($generated@@23 $generated@@145)))) (and (and (and ($generated@@23 $generated@@145) ($generated@@23 $generated@@145)) (and (= $generated@@150 (let (($generated@@172 (+ ($generated@@26 $generated@@145) 1)))
($generated@@34 $generated@@172 (+ ($generated@@27 $generated@@145) 1)))) (= $generated@@151 $generated@@150))) (and (and ($generated@@30 $generated@@31 $generated@@151 $generated@@32) (= $generated@@152 $generated@@151)) (and ($generated@@23 $generated@@150) (= $generated@@153 (+ ($generated@@26 $generated@@150) 1)))))) (and (and (and (and ($generated@@23 $generated@@150) ($generated@@30 $generated@@7 ($generated@@11 $generated@@153) $generated)) (and (= $generated@@154 $generated@@153) ($generated@@23 $generated@@150))) (and (and ($generated@@23 $generated@@150) ($generated@@23 $generated@@150)) (= $generated@@155 (let (($generated@@173 (+ ($generated@@26 $generated@@150) 1)))
($generated@@34 $generated@@173 (+ ($generated@@27 $generated@@150) 1)))))) (and (and (and (= $generated@@156 $generated@@155) ($generated@@30 $generated@@31 $generated@@156 $generated@@32)) (and (= $generated@@157 $generated@@156) ($generated@@23 $generated@@157))) (and (and ($generated@@23 $generated@@155) (let (($generated@@174 $generated@@155))
 (and ($generated@@23 $generated@@174) ($generated@@23 $generated@@155)))) (and (= $generated@@158 (let (($generated@@175 $generated@@155))
($generated@@34 ($generated@@26 $generated@@175) (+ ($generated@@27 $generated@@155) 1)))) ($generated@@22 $generated@@158)))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@25 $generated@@158 ($generated@@34 ($generated@@39 13) ($generated@@39 23)))) (=> ($generated@@25 $generated@@158 ($generated@@34 ($generated@@39 13) ($generated@@39 23))) (=> (and ($generated@@23 $generated@@158) ($generated@@23 $generated@@158)) (and (=> (= (ControlFlow 0 3) 1) $generated@@167) (=> (= (ControlFlow 0 3) 2) $generated@@166)))))))))))
(let (($generated@@176  (=> (and ($generated@@121 $generated@@139) ($generated@@159 $generated@@139)) (=> (and (and (and ($generated@@30 $generated@@31 $generated@@160 $generated@@32) ($generated@@120 $generated@@31 $generated@@160 $generated@@32 $generated@@139)) true) (and (and ($generated@@30 $generated@@31 $generated@@161 $generated@@32) ($generated@@120 $generated@@31 $generated@@161 $generated@@32 $generated@@139)) true)) (=> (and (and (and (and ($generated@@30 $generated@@31 $generated@@162 $generated@@32) ($generated@@120 $generated@@31 $generated@@162 $generated@@32 $generated@@139)) true) (and (and ($generated@@30 $generated@@31 $generated@@163 $generated@@32) ($generated@@120 $generated@@31 $generated@@163 $generated@@32 $generated@@139)) true)) (and (and (and ($generated@@30 $generated@@31 $generated@@164 $generated@@32) ($generated@@120 $generated@@31 $generated@@164 $generated@@32 $generated@@139)) true) (and (= 1 $generated@@165) (= (ControlFlow 0 5) 3)))) $generated@@168)))))
$generated@@176)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
