(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () Int)
(declare-fun $generated@@0 (T@U T@U Int) Bool)
(declare-fun $generated@@1 (T@U T@U) Bool)
(declare-fun $generated@@2 (T@U T@U) Bool)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U Int) Bool)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (Int) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@79 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@83 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert  (=> (<= 1 $generated) (forall (($generated@@19 T@U) ($generated@@20 Int) ($generated@@21 T@U) ($generated@@22 T@U) ($generated@@23 T@U) ) (!  (=> ($generated@@2 $generated@@21 $generated@@22) (=> ($generated@@0 $generated@@19 $generated@@21 $generated@@20) ($generated@@0 $generated@@19 $generated@@22 $generated@@20)))
 :pattern ( ($generated@@0 $generated@@19 $generated@@21 $generated@@20) ($generated@@1 $generated@@21 $generated@@23) ($generated@@1 $generated@@22 $generated@@23))
))))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> (and ($generated@@2 $generated@@24 $generated@@25) ($generated@@2 $generated@@25 $generated@@26)) ($generated@@2 $generated@@24 $generated@@26))
 :pattern ( ($generated@@2 $generated@@24 $generated@@25) ($generated@@2 $generated@@25 $generated@@26))
 :pattern ( ($generated@@2 $generated@@24 $generated@@25) ($generated@@2 $generated@@24 $generated@@26))
)))
(assert (= ($generated@@3 $generated@@29) 3))
(assert  (=> (<= 1 $generated) (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 Int) ) (!  (=> (or ($generated@@30 ($generated@@28 $generated@@29 $generated@@36) $generated@@37) (< 1 $generated)) (and (and (=> (< 0 ($generated@@31 $generated@@36)) (=> (or (not (= $generated@@37 ($generated@@32 3))) (not true)) ($generated@@30 ($generated@@33 $generated@@36 ($generated@@34 1)) (+ $generated@@37 1)))) (=> (=> (< 0 ($generated@@31 $generated@@36)) (or (= $generated@@37 ($generated@@32 3)) ($generated@@0 ($generated@@27 $generated@@35) ($generated@@33 $generated@@36 ($generated@@34 1)) (+ $generated@@37 1)))) (=> (= ($generated@@32 0) ($generated@@31 $generated@@36)) (forall (($generated@@38 T@U) ) (!  (=> ($generated@@1 $generated@@38 $generated@@36) ($generated@@30 $generated@@38 $generated@@37))
 :pattern ( ($generated@@0 ($generated@@27 $generated@@35) $generated@@38 $generated@@37))
))))) (= ($generated@@0 ($generated@@27 $generated@@35) ($generated@@28 $generated@@29 $generated@@36) $generated@@37)  (and (=> (< 0 ($generated@@31 $generated@@36)) (or (= $generated@@37 ($generated@@32 3)) ($generated@@0 ($generated@@27 $generated@@35) ($generated@@33 $generated@@36 ($generated@@34 1)) (+ $generated@@37 1)))) (=> (= ($generated@@32 0) ($generated@@31 $generated@@36)) (exists (($generated@@39 T@U) ) (!  (and ($generated@@1 $generated@@39 $generated@@36) ($generated@@0 ($generated@@27 $generated@@35) $generated@@39 $generated@@37))
 :pattern ( ($generated@@0 ($generated@@27 $generated@@35) $generated@@39 $generated@@37))
)))))))
 :weight 3
 :pattern ( ($generated@@0 ($generated@@27 $generated@@35) ($generated@@28 $generated@@29 $generated@@36) $generated@@37))
))))
(assert (forall (($generated@@40 T@U) ($generated@@41 Int) ($generated@@42 Int) ) (!  (=> (and (and (<= 0 $generated@@41) (<= 0 $generated@@42)) (<= (+ $generated@@41 $generated@@42) ($generated@@31 $generated@@40))) (= ($generated@@33 ($generated@@33 $generated@@40 ($generated@@34 $generated@@41)) ($generated@@34 $generated@@42)) ($generated@@33 $generated@@40 ($generated@@34 (+ $generated@@41 $generated@@42)))))
 :pattern ( ($generated@@33 ($generated@@33 $generated@@40 ($generated@@34 $generated@@41)) ($generated@@34 $generated@@42)))
)))
(assert  (=> (<= 1 $generated) (forall (($generated@@43 T@U) ($generated@@44 Int) ($generated@@45 T@U) ) (!  (=> (= $generated@@45 ($generated@@34 0)) (not ($generated@@0 $generated@@43 $generated@@45 $generated@@44)))
 :pattern ( ($generated@@0 $generated@@43 $generated@@45 $generated@@44))
))))
(assert (forall (($generated@@46 Int) ) (! (= ($generated@@32 $generated@@46) $generated@@46)
 :pattern ( ($generated@@32 $generated@@46))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@28 $generated@@48 $generated@@47) $generated@@47)
 :pattern ( ($generated@@28 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 ($generated@@49 $generated@@52 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@49 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 Int) ) (! (= ($generated@@0 ($generated@@27 $generated@@53) $generated@@54 $generated@@55) ($generated@@0 $generated@@53 $generated@@54 $generated@@55))
 :pattern ( ($generated@@0 ($generated@@27 $generated@@53) $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (and ($generated@@56 $generated@@58) (<= ($generated@@31 $generated@@58) ($generated@@31 $generated@@57))) (and (= ($generated@@56 ($generated@@33 $generated@@57 $generated@@58)) ($generated@@56 $generated@@57)) (= ($generated@@31 ($generated@@33 $generated@@57 $generated@@58)) (- ($generated@@31 $generated@@57) ($generated@@31 $generated@@58)))))
 :pattern ( ($generated@@33 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@59 Int) ) (!  (=> (<= 0 $generated@@59) (and ($generated@@56 ($generated@@34 $generated@@59)) (= ($generated@@31 ($generated@@34 $generated@@59)) $generated@@59)))
 :pattern ( ($generated@@34 $generated@@59))
)))
(assert  (=> (<= 1 $generated) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 Int) ) (!  (=> (or ($generated@@30 ($generated@@28 $generated@@29 $generated@@61) ($generated@@32 $generated@@62)) (< 1 $generated)) (and (and (=> (< 0 ($generated@@31 $generated@@61)) (=> (or (not (= ($generated@@32 $generated@@62) ($generated@@32 3))) (not true)) ($generated@@30 ($generated@@33 $generated@@61 ($generated@@34 1)) ($generated@@32 (+ $generated@@62 1))))) (=> (=> (< 0 ($generated@@31 $generated@@61)) (or (= ($generated@@32 $generated@@62) ($generated@@32 3)) ($generated@@0 ($generated@@27 $generated@@60) ($generated@@33 $generated@@61 ($generated@@34 1)) ($generated@@32 (+ $generated@@62 1))))) (=> (= ($generated@@32 0) ($generated@@31 $generated@@61)) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@1 $generated@@63 $generated@@61) ($generated@@30 $generated@@63 $generated@@62))
 :pattern ( ($generated@@0 ($generated@@27 $generated@@60) $generated@@63 $generated@@62))
))))) (= ($generated@@0 ($generated@@27 $generated@@60) ($generated@@28 $generated@@29 $generated@@61) ($generated@@32 $generated@@62))  (and (=> (< 0 ($generated@@31 $generated@@61)) (or (= ($generated@@32 $generated@@62) ($generated@@32 3)) ($generated@@0 ($generated@@27 $generated@@60) ($generated@@33 $generated@@61 ($generated@@34 1)) ($generated@@32 (+ $generated@@62 1))))) (=> (= ($generated@@32 0) ($generated@@31 $generated@@61)) (exists (($generated@@64 T@U) ) (!  (and ($generated@@1 $generated@@64 $generated@@61) ($generated@@0 ($generated@@27 $generated@@60) $generated@@64 $generated@@62))
 :pattern ( ($generated@@0 ($generated@@27 $generated@@60) $generated@@64 $generated@@62))
)))))))
 :weight 3
 :pattern ( ($generated@@0 ($generated@@27 $generated@@60) ($generated@@28 $generated@@29 $generated@@61) ($generated@@32 $generated@@62)))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (or ($generated@@2 $generated@@65 $generated@@66) (= $generated@@65 $generated@@66)) ($generated@@2 $generated@@66 $generated@@65))
 :pattern ( ($generated@@2 $generated@@65 $generated@@66) ($generated@@2 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@1 $generated@@67 $generated@@68) ($generated@@2 $generated@@67 $generated@@68))
 :pattern ( ($generated@@1 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (! (<= 0 ($generated@@31 $generated@@69))
 :pattern ( ($generated@@31 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@49 $generated@@71 ($generated@@50 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@50 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (and (and (and (=> ($generated@@2 $generated@@72 $generated@@73) (or (not (= $generated@@72 $generated@@73)) (not true))) (=> (and ($generated@@56 $generated@@72) (not ($generated@@56 $generated@@73))) ($generated@@2 $generated@@72 $generated@@73))) (=> (and ($generated@@56 $generated@@72) ($generated@@56 $generated@@73)) (= ($generated@@2 $generated@@72 $generated@@73) (< ($generated@@31 $generated@@72) ($generated@@31 $generated@@73))))) (=> (and ($generated@@2 $generated@@72 $generated@@73) ($generated@@56 $generated@@73)) ($generated@@56 $generated@@72)))
 :pattern ( ($generated@@2 $generated@@72 $generated@@73))
)))
(assert  (=> (<= 1 $generated) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 Int) ) (!  (=> (or ($generated@@30 $generated@@75 $generated@@76) (< 1 $generated)) (and (and (=> (< 0 ($generated@@31 $generated@@75)) (=> (or (not (= $generated@@76 ($generated@@32 3))) (not true)) ($generated@@30 ($generated@@33 $generated@@75 ($generated@@34 1)) (+ $generated@@76 1)))) (=> (=> (< 0 ($generated@@31 $generated@@75)) (or (= $generated@@76 ($generated@@32 3)) ($generated@@0 $generated@@74 ($generated@@33 $generated@@75 ($generated@@34 1)) (+ $generated@@76 1)))) (=> (= ($generated@@32 0) ($generated@@31 $generated@@75)) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@1 $generated@@77 $generated@@75) ($generated@@30 $generated@@77 $generated@@76))
 :pattern ( ($generated@@0 $generated@@74 $generated@@77 $generated@@76))
))))) (= ($generated@@0 ($generated@@27 $generated@@74) $generated@@75 $generated@@76)  (and (=> (< 0 ($generated@@31 $generated@@75)) (or (= $generated@@76 ($generated@@32 3)) ($generated@@0 $generated@@74 ($generated@@33 $generated@@75 ($generated@@34 1)) (+ $generated@@76 1)))) (=> (= ($generated@@32 0) ($generated@@31 $generated@@75)) (exists (($generated@@78 T@U) ) (!  (and ($generated@@1 $generated@@78 $generated@@75) ($generated@@0 $generated@@74 $generated@@78 $generated@@76))
 :pattern ( ($generated@@0 $generated@@74 $generated@@78 $generated@@76))
)))))))
 :pattern ( ($generated@@0 ($generated@@27 $generated@@74) $generated@@75 $generated@@76))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@79 $generated@@89 $generated@@90 $generated@@91 ($generated@@85 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@94 $generated@@95 $generated@@92) $generated@@94 $generated@@95) $generated@@92)
 :weight 0
)) (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (or (= $generated@@101 $generated@@103) (= ($generated@@79 $generated@@96 $generated@@97 $generated@@98 ($generated@@85 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@103 $generated@@104) ($generated@@79 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@103 $generated@@104)))
 :weight 0
)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@111 $generated@@113) (= ($generated@@79 $generated@@105 $generated@@106 $generated@@107 ($generated@@85 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@112 $generated@@113) ($generated@@79 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@112 $generated@@113)))
 :weight 0
)))) (= ($generated@@3 $generated@@80) 4)) (= ($generated@@3 $generated@@81) 5)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@83 $generated@@114 $generated@@115 ($generated@@86 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@116) $generated@@118) $generated@@116)
 :weight 0
))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 $generated@@119 $generated@@120 ($generated@@86 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@119 $generated@@120 $generated@@122 $generated@@124)))
 :weight 0
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (= ($generated@@3 ($generated@@84 $generated@@125 $generated@@126)) 6))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@127 $generated@@128)) $generated@@127)
 :pattern ( ($generated@@84 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@84 $generated@@129 $generated@@130))
))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 Bool) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@8 ($generated@@79 $generated@@80 $generated@@81 $generated@@4 ($generated@@82 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))  (=> (and (or (not (= $generated@@135 $generated@@131)) (not true)) ($generated@@8 ($generated@@49 $generated@@4 ($generated@@83 $generated@@81 $generated@@29 ($generated@@83 $generated@@80 ($generated@@84 $generated@@81 $generated@@29) $generated@@132 $generated@@135) $generated@@133)))) $generated@@134))
 :pattern ( ($generated@@79 $generated@@80 $generated@@81 $generated@@4 ($generated@@82 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@56 $generated@@137) (= $generated@@137 ($generated@@34 ($generated@@31 $generated@@137))))
 :pattern ( ($generated@@31 $generated@@137))
 :pattern ( ($generated@@56 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and ($generated@@56 $generated@@139) (<= ($generated@@31 $generated@@139) ($generated@@31 $generated@@138))) (or (and (= $generated@@139 ($generated@@34 0)) (= ($generated@@33 $generated@@138 $generated@@139) $generated@@138)) (and (or (not (= $generated@@139 ($generated@@34 0))) (not true)) ($generated@@2 ($generated@@33 $generated@@138 $generated@@139) $generated@@138))))
 :pattern ( ($generated@@33 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 Int) ) (! (= ($generated@@50 $generated@@5 ($generated@@9 ($generated@@32 $generated@@140))) ($generated@@28 $generated@@29 ($generated@@50 $generated@@5 ($generated@@9 $generated@@140))))
 :pattern ( ($generated@@50 $generated@@5 ($generated@@9 ($generated@@32 $generated@@140))))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@50 $generated@@142 ($generated@@28 $generated@@142 $generated@@141)) ($generated@@28 $generated@@29 ($generated@@50 $generated@@142 $generated@@141)))
 :pattern ( ($generated@@50 $generated@@142 ($generated@@28 $generated@@142 $generated@@141)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@143 () Int)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@154  (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@143 ($generated@@32 3)))))
(let (($generated@@155  (=> (<= ($generated@@31 $generated@@144) 0) (=> (and (and (and ($generated@@145 $generated@@146) ($generated@@147 $generated@@146)) (= $generated@@148 $generated@@146)) (and (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and ($generated@@2 $generated@@156 $generated@@144) ($generated@@0 ($generated@@27 $generated@@149) $generated@@156 $generated@@157)) (<= $generated@@157 ($generated@@32 3)))
 :pattern ( ($generated@@0 ($generated@@27 $generated@@149) $generated@@156 $generated@@157))
)) (= (ControlFlow 0 4) 2))) $generated@@154))))
(let (($generated@@158  (=> (and (< 0 ($generated@@31 $generated@@144)) (= (ControlFlow 0 3) 2)) $generated@@154)))
(let (($generated@@159  (=> (= $generated@@150 ($generated@@82 $generated@@151 $generated@@152 $generated@@153 false)) (=> (and (and ($generated@@145 $generated@@148) ($generated@@147 $generated@@148)) (and (= $generated@@152 $generated@@148) (forall (($generated@@160 T@U) ($generated@@161 Int) ) (!  (=> (and ($generated@@0 ($generated@@27 $generated@@149) $generated@@160 $generated@@161) (or ($generated@@2 $generated@@160 $generated@@144) (and (= $generated@@160 $generated@@144) (and (<= 0 $generated@@161) (< $generated@@161 $generated@@143))))) (<= $generated@@161 ($generated@@32 3)))
 :pattern ( ($generated@@0 ($generated@@27 $generated@@149) $generated@@160 $generated@@161))
)))) (and (=> (= (ControlFlow 0 5) 3) $generated@@158) (=> (= (ControlFlow 0 5) 4) $generated@@155))))))
(let (($generated@@162  (=> (and (and (and ($generated@@145 $generated@@152) ($generated@@147 $generated@@152)) (= 2 $generated)) (and (and ($generated@@30 $generated@@144 $generated@@143) (and ($generated@@0 ($generated@@27 $generated@@149) $generated@@144 $generated@@143) (and (=> (< 0 ($generated@@31 $generated@@144)) (or (= $generated@@143 ($generated@@32 3)) ($generated@@0 ($generated@@27 $generated@@149) ($generated@@33 $generated@@144 ($generated@@34 1)) (+ $generated@@143 1)))) (=> (= ($generated@@32 0) ($generated@@31 $generated@@144)) (exists (($generated@@163 T@U) ) (!  (and ($generated@@1 $generated@@163 $generated@@144) ($generated@@0 ($generated@@27 $generated@@149) $generated@@163 $generated@@143))
 :pattern ( ($generated@@0 ($generated@@27 $generated@@149) $generated@@163 $generated@@143))
)))))) (= (ControlFlow 0 6) 5))) $generated@@159)))
$generated@@162))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
