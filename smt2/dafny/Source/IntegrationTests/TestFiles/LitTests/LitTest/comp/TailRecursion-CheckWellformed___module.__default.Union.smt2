(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@51 () Int)
(declare-fun $generated@@52 (T@U Int) T@U)
(declare-fun $generated@@53 (Int) Bool)
(declare-fun $generated@@54 (Int) Int)
(declare-fun $generated@@55 (T@T T@U T@U) Bool)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (Int Int) Int)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@115 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@174 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@20 ($generated@@19 $generated@@21 $generated@@22) $generated@@22)
 :pattern ( ($generated@@19 $generated@@21 $generated@@22))
)))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> ($generated@@20 $generated@@23 $generated@@25) ($generated@@20 ($generated@@19 $generated@@23 $generated@@24) $generated@@25))
 :pattern ( ($generated@@19 $generated@@23 $generated@@24) ($generated@@20 $generated@@23 $generated@@25))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> ($generated@@20 $generated@@27 $generated@@29) ($generated@@20 ($generated@@26 $generated@@27 $generated@@28) $generated@@29))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28) ($generated@@20 $generated@@27 $generated@@29))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@20 $generated@@31 $generated@@32) ($generated@@20 ($generated@@26 $generated@@30 $generated@@31) $generated@@32))
 :pattern ( ($generated@@26 $generated@@30 $generated@@31) ($generated@@20 $generated@@31 $generated@@32))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! ($generated@@33 $generated@@5 $generated@@35 $generated@@34 $generated@@36)
 :pattern ( ($generated@@33 $generated@@5 $generated@@35 $generated@@34 $generated@@36))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@20 ($generated@@19 $generated@@37 $generated@@38) $generated@@39)  (or (= $generated@@39 $generated@@38) ($generated@@20 $generated@@37 $generated@@39)))
 :pattern ( ($generated@@20 ($generated@@19 $generated@@37 $generated@@38) $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@20 $generated@@42 $generated@@43) (not ($generated@@20 ($generated@@40 $generated@@41 $generated@@42) $generated@@43)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42) ($generated@@20 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ) (!  (not ($generated@@20 $generated@@44 $generated@@45))
 :pattern ( ($generated@@20 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@26 ($generated@@26 $generated@@46 $generated@@47) $generated@@47) ($generated@@26 $generated@@46 $generated@@47))
 :pattern ( ($generated@@26 ($generated@@26 $generated@@46 $generated@@47) $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@20 ($generated@@40 $generated@@48 $generated@@49) $generated@@50)  (and ($generated@@20 $generated@@48 $generated@@50) (not ($generated@@20 $generated@@49 $generated@@50))))
 :pattern ( ($generated@@20 ($generated@@40 $generated@@48 $generated@@49) $generated@@50))
)))
(assert (= ($generated@@3 $generated@@56) 3))
(assert  (=> (<= 0 $generated@@51) (forall (($generated@@58 T@U) ($generated@@59 Int) ) (!  (=> (or ($generated@@53 $generated@@59) (and (< 0 $generated@@51) (<= ($generated@@54 0) $generated@@59))) ($generated@@55 $generated@@56 ($generated@@52 $generated@@58 $generated@@59) ($generated@@57 $generated@@34)))
 :pattern ( ($generated@@52 $generated@@58 $generated@@59))
))))
(assert  (=> (<= 0 $generated@@51) (forall (($generated@@63 T@U) ($generated@@64 Int) ) (!  (=> (or ($generated@@53 $generated@@64) (and (< 0 $generated@@51) (<= ($generated@@54 0) $generated@@64))) (and (=> (or (not (= $generated@@64 ($generated@@54 0))) (not true)) (and (=> (= ($generated@@61 $generated@@64 ($generated@@54 2)) ($generated@@54 0)) ($generated@@53 (- $generated@@64 1))) (=> (or (not (= ($generated@@61 $generated@@64 ($generated@@54 2)) ($generated@@54 0))) (not true)) ($generated@@53 (- $generated@@64 1))))) (= ($generated@@52 ($generated@@60 $generated@@63) $generated@@64) (ite (= $generated@@64 ($generated@@54 0)) ($generated@@19 $generated@@44 ($generated@@62 $generated@@5 ($generated@@9 ($generated@@54 0)))) (ite (= ($generated@@61 $generated@@64 ($generated@@54 2)) ($generated@@54 0)) ($generated@@26 ($generated@@52 $generated@@63 (- $generated@@64 1)) ($generated@@19 $generated@@44 ($generated@@62 $generated@@5 ($generated@@9 $generated@@64)))) ($generated@@26 ($generated@@19 $generated@@44 ($generated@@62 $generated@@5 ($generated@@9 $generated@@64))) ($generated@@52 $generated@@63 (- $generated@@64 1))))))))
 :pattern ( ($generated@@52 ($generated@@60 $generated@@63) $generated@@64))
))))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@54 $generated@@65) $generated@@65)
 :pattern ( ($generated@@54 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@62 $generated@@71 ($generated@@69 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@69 $generated@@71 $generated@@70))
)))
(assert  (=> (<= 0 $generated@@51) (forall (($generated@@72 T@U) ($generated@@73 Int) ) (!  (=> (or ($generated@@53 ($generated@@54 $generated@@73)) (and (< 0 $generated@@51) (<= ($generated@@54 0) $generated@@73))) (and (=> (or (not (= ($generated@@54 $generated@@73) ($generated@@54 0))) (not true)) (and (=> (= ($generated@@54 ($generated@@61 $generated@@73 ($generated@@54 2))) ($generated@@54 0)) ($generated@@53 ($generated@@54 (- $generated@@73 1)))) (=> (or (not (= ($generated@@54 ($generated@@61 $generated@@73 ($generated@@54 2))) ($generated@@54 0))) (not true)) ($generated@@53 ($generated@@54 (- $generated@@73 1)))))) (= ($generated@@52 ($generated@@60 $generated@@72) ($generated@@54 $generated@@73)) (ite (= ($generated@@54 $generated@@73) ($generated@@54 0)) ($generated@@19 $generated@@44 ($generated@@62 $generated@@5 ($generated@@9 ($generated@@54 0)))) (ite (= ($generated@@54 ($generated@@61 $generated@@73 ($generated@@54 2))) ($generated@@54 0)) ($generated@@26 ($generated@@52 ($generated@@60 $generated@@72) ($generated@@54 (- $generated@@73 1))) ($generated@@19 $generated@@44 ($generated@@62 $generated@@5 ($generated@@9 ($generated@@54 $generated@@73))))) ($generated@@26 ($generated@@19 $generated@@44 ($generated@@62 $generated@@5 ($generated@@9 ($generated@@54 $generated@@73)))) ($generated@@52 ($generated@@60 $generated@@72) ($generated@@54 (- $generated@@73 1)))))))))
 :weight 3
 :pattern ( ($generated@@52 ($generated@@60 $generated@@72) ($generated@@54 $generated@@73)))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@74 $generated@@75 $generated@@76) (forall (($generated@@77 T@U) ) (!  (or (not ($generated@@20 $generated@@75 $generated@@77)) (not ($generated@@20 $generated@@76 $generated@@77)))
 :pattern ( ($generated@@20 $generated@@75 $generated@@77))
 :pattern ( ($generated@@20 $generated@@76 $generated@@77))
)))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@55 $generated@@56 $generated@@79 ($generated@@57 $generated@@80)) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@20 $generated@@79 $generated@@81) ($generated@@78 $generated@@81 $generated@@80))
 :pattern ( ($generated@@20 $generated@@79 $generated@@81))
)))
 :pattern ( ($generated@@55 $generated@@56 $generated@@79 ($generated@@57 $generated@@80)))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@55 $generated@@5 $generated@@82 $generated@@34) (<= ($generated@@54 0) ($generated@@10 $generated@@82)))
 :pattern ( ($generated@@55 $generated@@5 $generated@@82 $generated@@34))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@83 ($generated@@62 $generated@@87 $generated@@84) $generated@@85 $generated@@86) ($generated@@33 $generated@@87 $generated@@84 $generated@@85 $generated@@86))
 :pattern ( ($generated@@83 ($generated@@62 $generated@@87 $generated@@84) $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@78 $generated@@88 $generated@@34) (and (= ($generated@@62 $generated@@5 ($generated@@69 $generated@@5 $generated@@88)) $generated@@88) ($generated@@55 $generated@@5 ($generated@@69 $generated@@5 $generated@@88) $generated@@34)))
 :pattern ( ($generated@@78 $generated@@88 $generated@@34))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@20 ($generated@@26 $generated@@89 $generated@@90) $generated@@91)  (or ($generated@@20 $generated@@89 $generated@@91) ($generated@@20 $generated@@90 $generated@@91)))
 :pattern ( ($generated@@20 ($generated@@26 $generated@@89 $generated@@90) $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@74 $generated@@92 $generated@@93) (and (= ($generated@@40 ($generated@@26 $generated@@92 $generated@@93) $generated@@92) $generated@@93) (= ($generated@@40 ($generated@@26 $generated@@92 $generated@@93) $generated@@93) $generated@@92)))
 :pattern ( ($generated@@26 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@78 ($generated@@62 $generated@@96 $generated@@94) $generated@@95) ($generated@@55 $generated@@96 $generated@@94 $generated@@95))
 :pattern ( ($generated@@78 ($generated@@62 $generated@@96 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@33 $generated@@56 $generated@@97 ($generated@@57 $generated@@98) $generated@@99) (forall (($generated@@100 T@U) ) (!  (=> ($generated@@20 $generated@@97 $generated@@100) ($generated@@83 $generated@@100 $generated@@98 $generated@@99))
 :pattern ( ($generated@@20 $generated@@97 $generated@@100))
)))
 :pattern ( ($generated@@33 $generated@@56 $generated@@97 ($generated@@57 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@101 ($generated@@57 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@57 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 ($generated@@57 $generated@@104)) $generated)
 :pattern ( ($generated@@57 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@69 $generated@@106 ($generated@@62 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@62 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 Int) ) (! (= ($generated@@52 ($generated@@60 $generated@@107) $generated@@108) ($generated@@52 $generated@@107 $generated@@108))
 :pattern ( ($generated@@52 ($generated@@60 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@26 $generated@@109 ($generated@@26 $generated@@109 $generated@@110)) ($generated@@26 $generated@@109 $generated@@110))
 :pattern ( ($generated@@26 $generated@@109 ($generated@@26 $generated@@109 $generated@@110)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@111 $generated@@122 $generated@@123 $generated@@124 ($generated@@118 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@111 $generated@@129 $generated@@130 $generated@@131 ($generated@@118 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@111 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@111 $generated@@138 $generated@@139 $generated@@140 ($generated@@118 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@111 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))) (= ($generated@@3 $generated@@112) 4)) (= ($generated@@3 $generated@@113) 5)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@115 $generated@@147 $generated@@148 ($generated@@119 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@151) $generated@@149)
 :weight 0
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@156 $generated@@157) (= ($generated@@115 $generated@@152 $generated@@153 ($generated@@119 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@115 $generated@@152 $generated@@153 $generated@@155 $generated@@157)))
 :weight 0
))) (= ($generated@@3 $generated@@116) 6)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (= ($generated@@3 ($generated@@117 $generated@@158 $generated@@159)) 7))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@160 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@117 $generated@@160 $generated@@161))
))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@121 ($generated@@117 $generated@@162 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@117 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@8 ($generated@@111 $generated@@112 $generated@@113 $generated@@4 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@8 ($generated@@69 $generated@@4 ($generated@@115 $generated@@113 $generated@@116 ($generated@@115 $generated@@112 ($generated@@117 $generated@@113 $generated@@116) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@111 $generated@@112 $generated@@113 $generated@@4 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 Int) ($generated@@171 Int) ) (! (= ($generated@@61 $generated@@170 $generated@@171) (mod $generated@@170 $generated@@171))
 :pattern ( ($generated@@61 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@78 $generated@@172 ($generated@@57 $generated@@173)) (and (= ($generated@@62 $generated@@56 ($generated@@69 $generated@@56 $generated@@172)) $generated@@172) ($generated@@55 $generated@@56 ($generated@@69 $generated@@56 $generated@@172) ($generated@@57 $generated@@173))))
 :pattern ( ($generated@@78 $generated@@172 ($generated@@57 $generated@@173)))
)))
(assert (= ($generated@@103 $generated@@34) $generated@@1))
(assert (= ($generated@@174 $generated@@34) $generated@@2))
(assert (forall (($generated@@175 Int) ) (! (= ($generated@@62 $generated@@5 ($generated@@9 ($generated@@54 $generated@@175))) ($generated@@66 $generated@@116 ($generated@@62 $generated@@5 ($generated@@9 $generated@@175))))
 :pattern ( ($generated@@62 $generated@@5 ($generated@@9 ($generated@@54 $generated@@175))))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@62 $generated@@177 ($generated@@66 $generated@@177 $generated@@176)) ($generated@@66 $generated@@116 ($generated@@62 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@62 $generated@@177 ($generated@@66 $generated@@177 $generated@@176)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@186  (=> (or (not (= ($generated@@61 $generated@@178 ($generated@@54 2)) ($generated@@54 0))) (not true)) (and (=> (= (ControlFlow 0 9) (- 0 11)) ($generated@@55 $generated@@5 ($generated@@9 (- $generated@@178 1)) $generated@@34)) (=> ($generated@@55 $generated@@5 ($generated@@9 (- $generated@@178 1)) $generated@@34) (=> (and (= $generated@@179 (- $generated@@178 1)) ($generated@@33 $generated@@5 ($generated@@9 $generated@@179) $generated@@34 $generated@@180)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (<= 0 $generated@@178) (= $generated@@179 $generated@@178))) (=> (or (<= 0 $generated@@178) (= $generated@@179 $generated@@178)) (=> (= (ControlFlow 0 9) (- 0 8)) (< $generated@@179 $generated@@178))))))))))
(let (($generated@@187  (=> (= ($generated@@61 $generated@@178 ($generated@@54 2)) ($generated@@54 0)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@55 $generated@@5 ($generated@@9 (- $generated@@178 1)) $generated@@34)) (=> ($generated@@55 $generated@@5 ($generated@@9 (- $generated@@178 1)) $generated@@34) (=> (and (= $generated@@181 (- $generated@@178 1)) ($generated@@33 $generated@@5 ($generated@@9 $generated@@181) $generated@@34 $generated@@180)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@178) (= $generated@@181 $generated@@178))) (=> (or (<= 0 $generated@@178) (= $generated@@181 $generated@@178)) (=> (= (ControlFlow 0 5) (- 0 4)) (< $generated@@181 $generated@@178))))))))))
(let (($generated@@188  (=> (or (not (= $generated@@178 ($generated@@54 0))) (not true)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (not (= ($generated@@54 2) 0)) (not true))) (=> (or (not (= ($generated@@54 2) 0)) (not true)) (and (=> (= (ControlFlow 0 12) 5) $generated@@187) (=> (= (ControlFlow 0 12) 9) $generated@@186)))))))
(let (($generated@@189  (=> (and (= $generated@@178 ($generated@@54 0)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@55 $generated@@5 ($generated@@9 ($generated@@54 0)) $generated@@34))))
(let (($generated@@190 true))
(let (($generated@@191  (=> (= $generated@@182 ($generated@@114 $generated@@183 $generated@@180 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 14) 1) $generated@@190) (=> (= (ControlFlow 0 14) 3) $generated@@189)) (=> (= (ControlFlow 0 14) 12) $generated@@188)))))
(let (($generated@@192  (=> (and (and (and ($generated@@184 $generated@@180) ($generated@@185 $generated@@180)) (<= ($generated@@54 0) $generated@@178)) (and (= 0 $generated@@51) (= (ControlFlow 0 15) 14))) $generated@@191)))
$generated@@192))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
