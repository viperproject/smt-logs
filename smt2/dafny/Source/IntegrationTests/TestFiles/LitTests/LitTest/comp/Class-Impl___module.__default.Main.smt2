(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@T) T@T)
(declare-fun $generated@@62 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@94 (Int) Int)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! ($generated@@30 $generated@@16 $generated@@32 $generated@@31 $generated@@33)
 :pattern ( ($generated@@30 $generated@@16 $generated@@32 $generated@@31 $generated@@33))
)))
(assert ($generated@@34 $generated@@35))
(assert (= ($generated@@14 $generated@@37) 3))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@41 $generated@@38)  (or (= $generated@@41 $generated@@39) (= ($generated@@40 $generated@@41) $generated@@38)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@41 $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@42 $generated@@35)  (or (= $generated@@42 $generated@@39) (= ($generated@@40 $generated@@42) $generated@@35)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@42 $generated@@35))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@45 $generated@@43 $generated@@46) ($generated@@30 $generated@@37 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@30 $generated@@37 $generated@@45 $generated@@43 $generated@@46))
 :pattern ( ($generated@@30 $generated@@37 $generated@@45 $generated@@44 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@48 $generated@@47 $generated@@49) ($generated@@30 $generated@@37 $generated@@48 $generated@@38 $generated@@49))
 :pattern ( ($generated@@30 $generated@@37 $generated@@48 $generated@@47 $generated@@49))
 :pattern ( ($generated@@30 $generated@@37 $generated@@48 $generated@@38 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@52 $generated@@50 $generated@@53) ($generated@@30 $generated@@37 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@30 $generated@@37 $generated@@52 $generated@@50 $generated@@53))
 :pattern ( ($generated@@30 $generated@@37 $generated@@52 $generated@@51 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@55 $generated@@54 $generated@@56) ($generated@@30 $generated@@37 $generated@@55 $generated@@35 $generated@@56))
 :pattern ( ($generated@@30 $generated@@37 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@30 $generated@@37 $generated@@55 $generated@@35 $generated@@56))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@58 $generated@@65 $generated@@66 ($generated@@62 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@69) $generated@@67)
 :weight 0
)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@74 $generated@@75) (= ($generated@@58 $generated@@70 $generated@@71 ($generated@@62 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@75) ($generated@@58 $generated@@70 $generated@@71 $generated@@73 $generated@@75)))
 :weight 0
))) (= ($generated@@14 $generated@@59) 4)) (= ($generated@@14 $generated@@60) 5)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@14 ($generated@@61 $generated@@76 $generated@@77)) 6))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@63 ($generated@@61 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@61 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@64 ($generated@@61 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@61 $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@82 $generated@@44 $generated@@83)  (or (= $generated@@82 $generated@@39) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@83 $generated@@82) $generated)))))
 :pattern ( ($generated@@30 $generated@@37 $generated@@82 $generated@@44 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@84 $generated@@38 $generated@@85)  (or (= $generated@@84 $generated@@39) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@85 $generated@@84) $generated)))))
 :pattern ( ($generated@@30 $generated@@37 $generated@@84 $generated@@38 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@86 $generated@@51 $generated@@87)  (or (= $generated@@86 $generated@@39) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@87 $generated@@86) $generated)))))
 :pattern ( ($generated@@30 $generated@@37 $generated@@86 $generated@@51 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@88 $generated@@35 $generated@@89)  (or (= $generated@@88 $generated@@39) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@89 $generated@@88) $generated)))))
 :pattern ( ($generated@@30 $generated@@37 $generated@@88 $generated@@35 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@90 $generated@@91 $generated@@92) (forall (($generated@@93 T@U) ) (!  (=> ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@91 $generated@@93) $generated))) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@92 $generated@@93) $generated))))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@92 $generated@@93) $generated))
)))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@94 $generated@@95) $generated@@95)
 :pattern ( ($generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 $generated@@97) $generated@@97)
 :pattern ( ($generated@@96 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@99 $generated@@101 ($generated@@57 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@57 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@36 $generated@@16 $generated@@102 $generated@@31) (<= ($generated@@94 0) ($generated@@21 $generated@@102)))
 :pattern ( ($generated@@36 $generated@@16 $generated@@102 $generated@@31))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (!  (=> ($generated@@90 $generated@@103 $generated@@104) (=> ($generated@@30 $generated@@107 $generated@@105 $generated@@106 $generated@@103) ($generated@@30 $generated@@107 $generated@@105 $generated@@106 $generated@@104)))
 :pattern ( ($generated@@90 $generated@@103 $generated@@104) ($generated@@30 $generated@@107 $generated@@105 $generated@@106 $generated@@103))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@108 $generated@@43)  (and ($generated@@36 $generated@@37 $generated@@108 $generated@@44) (or (not (= $generated@@108 $generated@@39)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@108 $generated@@43))
 :pattern ( ($generated@@36 $generated@@37 $generated@@108 $generated@@44))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@109 $generated@@47)  (and ($generated@@36 $generated@@37 $generated@@109 $generated@@38) (or (not (= $generated@@109 $generated@@39)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@109 $generated@@47))
 :pattern ( ($generated@@36 $generated@@37 $generated@@109 $generated@@38))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@110 $generated@@50)  (and ($generated@@36 $generated@@37 $generated@@110 $generated@@51) (or (not (= $generated@@110 $generated@@39)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@110 $generated@@50))
 :pattern ( ($generated@@36 $generated@@37 $generated@@110 $generated@@51))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@111 $generated@@54)  (and ($generated@@36 $generated@@37 $generated@@111 $generated@@35) (or (not (= $generated@@111 $generated@@39)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@111 $generated@@54))
 :pattern ( ($generated@@36 $generated@@37 $generated@@111 $generated@@35))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> ($generated@@30 $generated@@37 $generated@@112 $generated@@51 $generated@@113) ($generated@@30 $generated@@37 $generated@@112 $generated@@44 $generated@@113))
 :pattern ( ($generated@@30 $generated@@37 $generated@@112 $generated@@51 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@30 $generated@@37 $generated@@114 $generated@@35 $generated@@115) ($generated@@30 $generated@@37 $generated@@114 $generated@@51 $generated@@115))
 :pattern ( ($generated@@30 $generated@@37 $generated@@114 $generated@@35 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or (not (= $generated@@116 $generated@@118)) (not true)) (=> (and ($generated@@90 $generated@@116 $generated@@117) ($generated@@90 $generated@@117 $generated@@118)) ($generated@@90 $generated@@116 $generated@@118)))
 :pattern ( ($generated@@90 $generated@@116 $generated@@117) ($generated@@90 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! ($generated@@36 $generated@@37 $generated@@119 $generated@@44)
 :pattern ( ($generated@@36 $generated@@37 $generated@@119 $generated@@44))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@57 $generated@@121 ($generated@@99 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@99 $generated@@121 $generated@@120))
)))
(assert  (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@122 $generated@@125 $generated@@126 $generated@@127 ($generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@122 $generated@@132 $generated@@133 $generated@@134 ($generated@@124 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@122 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@122 $generated@@141 $generated@@142 $generated@@143 ($generated@@124 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@122 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@19 ($generated@@122 $generated@@37 $generated@@59 $generated@@15 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@151 $generated@@154) $generated@@152)))) $generated@@153))
 :pattern ( ($generated@@122 $generated@@37 $generated@@59 $generated@@15 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@156 $generated@@51) ($generated@@36 $generated@@37 $generated@@156 $generated@@44))
 :pattern ( ($generated@@36 $generated@@37 $generated@@156 $generated@@51))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@157 $generated@@35) ($generated@@36 $generated@@37 $generated@@157 $generated@@51))
 :pattern ( ($generated@@36 $generated@@37 $generated@@157 $generated@@35))
)))
(assert (= ($generated@@158 $generated@@31) $generated@@0))
(assert (= ($generated@@159 $generated@@31) $generated@@9))
(assert (= ($generated@@158 $generated@@44) $generated@@1))
(assert (= ($generated@@159 $generated@@44) $generated@@10))
(assert (= ($generated@@158 $generated@@43) $generated@@2))
(assert (= ($generated@@159 $generated@@43) $generated@@10))
(assert (= ($generated@@158 $generated@@47) $generated@@3))
(assert (= ($generated@@159 $generated@@47) $generated@@11))
(assert (= ($generated@@158 $generated@@50) $generated@@4))
(assert (= ($generated@@159 $generated@@50) $generated@@12))
(assert (= ($generated@@158 $generated@@54) $generated@@5))
(assert (= ($generated@@159 $generated@@54) $generated@@13))
(assert (= ($generated@@158 $generated@@38) $generated@@6))
(assert (= ($generated@@159 $generated@@38) $generated@@11))
(assert (= ($generated@@158 $generated@@51) $generated@@7))
(assert (= ($generated@@159 $generated@@51) $generated@@12))
(assert (= ($generated@@158 $generated@@35) $generated@@8))
(assert (= ($generated@@159 $generated@@35) $generated@@13))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@160 $generated@@51)  (or (= $generated@@160 $generated@@39) ($generated@@34 ($generated@@40 $generated@@160))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@160 $generated@@51))
)))
(assert (forall (($generated@@161 Int) ) (! (= ($generated@@99 $generated@@16 ($generated@@20 ($generated@@94 $generated@@161))) ($generated@@96 $generated@@60 ($generated@@99 $generated@@16 ($generated@@20 $generated@@161))))
 :pattern ( ($generated@@99 $generated@@16 ($generated@@20 ($generated@@94 $generated@@161))))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@99 $generated@@163 ($generated@@96 $generated@@163 $generated@@162)) ($generated@@96 $generated@@60 ($generated@@99 $generated@@163 $generated@@162)))
 :pattern ( ($generated@@99 $generated@@163 ($generated@@96 $generated@@163 $generated@@162)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@195  (=> (and (= $generated@@164 ($generated@@123 $generated@@39 $generated@@165 $generated false)) (= $generated@@166 ($generated@@94 3))) (=> (and (and (and (and (and (or (not (= $generated@@167 $generated@@39)) (not true)) (and ($generated@@36 $generated@@37 $generated@@167 $generated@@47) ($generated@@30 $generated@@37 $generated@@167 $generated@@47 $generated@@165))) (and ($generated@@168 $generated@@169) ($generated@@170 $generated@@169))) (and (and (or (not (= $generated@@171 $generated@@39)) (not true)) (and ($generated@@36 $generated@@37 $generated@@171 $generated@@47) ($generated@@30 $generated@@37 $generated@@171 $generated@@47 $generated@@169))) (and (not ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@165 $generated@@171) $generated)))) (forall (($generated@@196 T@U) ) (!  (=> (and (or (not (= $generated@@196 $generated@@39)) (not true)) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@165 $generated@@196) $generated)))) (= ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@169 $generated@@196) ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@165 $generated@@196)))
 :pattern ( ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@169 $generated@@196))
))))) (and (and (and ($generated@@90 $generated@@165 $generated@@169) (= $generated@@172 ($generated@@94 2))) (and (or (not (= $generated@@173 $generated@@39)) (not true)) (and ($generated@@36 $generated@@37 $generated@@173 $generated@@54) ($generated@@30 $generated@@37 $generated@@173 $generated@@54 $generated@@165)))) (and (and ($generated@@168 $generated@@174) ($generated@@170 $generated@@174)) (and (or (not (= $generated@@175 $generated@@39)) (not true)) (and ($generated@@36 $generated@@37 $generated@@175 $generated@@54) ($generated@@30 $generated@@37 $generated@@175 $generated@@54 $generated@@174)))))) (and (and (and (and (not ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@169 $generated@@175) $generated)))) (forall (($generated@@197 T@U) ) (!  (=> (and (or (not (= $generated@@197 $generated@@39)) (not true)) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@169 $generated@@197) $generated)))) (= ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@174 $generated@@197) ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@169 $generated@@197)))
 :pattern ( ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@174 $generated@@197))
))) (and ($generated@@90 $generated@@169 $generated@@174) (= $generated@@176 ($generated@@94 2)))) (and (and (or (not (= $generated@@177 $generated@@39)) (not true)) (and ($generated@@36 $generated@@37 $generated@@177 $generated@@54) ($generated@@30 $generated@@37 $generated@@177 $generated@@54 $generated@@165))) (and ($generated@@168 $generated@@178) ($generated@@170 $generated@@178)))) (and (and (and (or (not (= $generated@@179 $generated@@39)) (not true)) (and ($generated@@36 $generated@@37 $generated@@179 $generated@@54) ($generated@@30 $generated@@37 $generated@@179 $generated@@54 $generated@@178))) (not ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@174 $generated@@179) $generated))))) (and (forall (($generated@@198 T@U) ) (!  (=> (and (or (not (= $generated@@198 $generated@@39)) (not true)) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@174 $generated@@198) $generated)))) (= ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@178 $generated@@198) ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@174 $generated@@198)))
 :pattern ( ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@178 $generated@@198))
)) ($generated@@90 $generated@@174 $generated@@178))))) (and (=> (= (ControlFlow 0 2) (- 0 14)) true) (and (=> (= (ControlFlow 0 2) (- 0 13)) true) (and (=> (= (ControlFlow 0 2) (- 0 12)) true) (and (=> (= (ControlFlow 0 2) (- 0 11)) true) (and (=> (= (ControlFlow 0 2) (- 0 10)) true) (and (=> (= (ControlFlow 0 2) (- 0 9)) true) (and (=> (= (ControlFlow 0 2) (- 0 8)) true) (=> (=> $generated@@180 (and ($generated@@36 $generated@@37 $generated@@181 $generated@@50) ($generated@@30 $generated@@37 $generated@@181 $generated@@50 $generated@@178))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@199 T@U) ($generated@@200 T@U) )  (=> (and (and (or (not (= $generated@@199 $generated@@39)) (not true)) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@178 $generated@@199) $generated)))) (or (or (= $generated@@199 $generated@@171) (= $generated@@199 $generated@@175)) (= $generated@@199 $generated@@179))) ($generated@@19 ($generated@@122 $generated@@37 $generated@@59 $generated@@15 $generated@@164 $generated@@199 $generated@@200))))) (=> (forall (($generated@@201 T@U) ($generated@@202 T@U) )  (=> (and (and (or (not (= $generated@@201 $generated@@39)) (not true)) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@178 $generated@@201) $generated)))) (or (or (= $generated@@201 $generated@@171) (= $generated@@201 $generated@@175)) (= $generated@@201 $generated@@179))) ($generated@@19 ($generated@@122 $generated@@37 $generated@@59 $generated@@15 $generated@@164 $generated@@201 $generated@@202)))) (=> (and (and (and (and ($generated@@168 $generated@@182) ($generated@@170 $generated@@182)) (and (forall (($generated@@203 T@U) ) (!  (=> (and (or (not (= $generated@@203 $generated@@39)) (not true)) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@178 $generated@@203) $generated)))) (or (= ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@182 $generated@@203) ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@178 $generated@@203)) (or (or (= $generated@@203 $generated@@171) (= $generated@@203 $generated@@175)) (= $generated@@203 $generated@@179))))
 :pattern ( ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@182 $generated@@203))
)) ($generated@@90 $generated@@178 $generated@@182))) (and (and ($generated@@168 $generated@@183) ($generated@@170 $generated@@183)) (and (forall (($generated@@204 T@U) ) (!  (=> (and (or (not (= $generated@@204 $generated@@39)) (not true)) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@182 $generated@@204) $generated)))) (= ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@183 $generated@@204) ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@182 $generated@@204)))
 :pattern ( ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@183 $generated@@204))
)) ($generated@@90 $generated@@182 $generated@@183)))) (and (and (and ($generated@@168 $generated@@184) ($generated@@170 $generated@@184)) (forall (($generated@@205 T@U) ) (!  (=> (and (or (not (= $generated@@205 $generated@@39)) (not true)) ($generated@@19 ($generated@@57 $generated@@15 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@183 $generated@@205) $generated)))) (= ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@184 $generated@@205) ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@183 $generated@@205)))
 :pattern ( ($generated@@58 $generated@@37 ($generated@@61 $generated@@59 $generated@@60) $generated@@184 $generated@@205))
))) (and ($generated@@90 $generated@@183 $generated@@184) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@36 $generated@@16 ($generated@@20 ($generated@@94 70)) $generated@@31))))))))))))))))))))
(let (($generated@@206  (=> (and ($generated@@168 $generated@@165) ($generated@@170 $generated@@165)) (=> (and (and (=> $generated@@185 (and ($generated@@36 $generated@@37 $generated@@186 $generated@@47) ($generated@@30 $generated@@37 $generated@@186 $generated@@47 $generated@@165))) true) (and (=> $generated@@187 (and ($generated@@36 $generated@@37 $generated@@188 $generated@@54) ($generated@@30 $generated@@37 $generated@@188 $generated@@54 $generated@@165))) true)) (=> (and (and (and (=> $generated@@189 (and ($generated@@36 $generated@@37 $generated@@190 $generated@@54) ($generated@@30 $generated@@37 $generated@@190 $generated@@54 $generated@@165))) true) (and (=> $generated@@191 (and ($generated@@36 $generated@@37 $generated@@192 $generated@@50) ($generated@@30 $generated@@37 $generated@@192 $generated@@50 $generated@@165))) true)) (and (and (=> $generated@@180 (and ($generated@@36 $generated@@37 $generated@@193 $generated@@50) ($generated@@30 $generated@@37 $generated@@193 $generated@@50 $generated@@165))) true) (and (= 3 $generated@@194) (= (ControlFlow 0 15) 2)))) $generated@@195)))))
$generated@@206)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
