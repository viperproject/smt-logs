(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@39 (T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@T T@T) T@T)
(declare-fun $generated@@61 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@91 (Int) Int)
(declare-fun $generated@@93 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@189 (Int Int) Int)
(declare-fun $generated@@198 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (! ($generated@@28 $generated@@14 $generated@@30 $generated@@29 $generated@@31)
 :pattern ( ($generated@@28 $generated@@14 $generated@@30 $generated@@29 $generated@@31))
)))
(assert ($generated@@32 $generated@@33))
(assert (= ($generated@@12 $generated@@35) 3))
(assert (forall (($generated@@38 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@38 $generated@@33)  (or (= $generated@@38 $generated@@36) (= ($generated@@37 $generated@@38) $generated@@33)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@38 $generated@@33))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (and ($generated@@39 $generated@@43 $generated@@40 $generated@@44) ($generated@@41 $generated@@44)) ($generated@@39 $generated@@43 $generated@@42 $generated@@44))
 :pattern ( ($generated@@39 $generated@@43 $generated@@40 $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (and ($generated@@39 $generated@@45 $generated@@33 $generated@@46) ($generated@@41 $generated@@46)) ($generated@@39 $generated@@45 $generated@@40 $generated@@46))
 :pattern ( ($generated@@39 $generated@@45 $generated@@33 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@28 $generated@@35 $generated@@48 $generated@@47 $generated@@49) ($generated@@28 $generated@@35 $generated@@48 $generated@@42 $generated@@49))
 :pattern ( ($generated@@28 $generated@@35 $generated@@48 $generated@@47 $generated@@49))
 :pattern ( ($generated@@28 $generated@@35 $generated@@48 $generated@@42 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@28 $generated@@35 $generated@@51 $generated@@50 $generated@@52) ($generated@@28 $generated@@35 $generated@@51 $generated@@40 $generated@@52))
 :pattern ( ($generated@@28 $generated@@35 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@28 $generated@@35 $generated@@51 $generated@@40 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@28 $generated@@35 $generated@@54 $generated@@53 $generated@@55) ($generated@@28 $generated@@35 $generated@@54 $generated@@33 $generated@@55))
 :pattern ( ($generated@@28 $generated@@35 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@28 $generated@@35 $generated@@54 $generated@@33 $generated@@55))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@57 $generated@@64 $generated@@65 ($generated@@61 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@68) $generated@@66)
 :weight 0
)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (or (= $generated@@73 $generated@@74) (= ($generated@@57 $generated@@69 $generated@@70 ($generated@@61 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@74) ($generated@@57 $generated@@69 $generated@@70 $generated@@72 $generated@@74)))
 :weight 0
))) (= ($generated@@12 $generated@@58) 4)) (= ($generated@@12 $generated@@59) 5)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@12 ($generated@@60 $generated@@75 $generated@@76)) 6))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@62 ($generated@@60 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@60 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@63 ($generated@@60 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@60 $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@28 $generated@@35 $generated@@81 $generated@@42 $generated@@82)  (or (= $generated@@81 $generated@@36) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@82 $generated@@81) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@35 $generated@@81 $generated@@42 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@28 $generated@@35 $generated@@83 $generated@@40 $generated@@84)  (or (= $generated@@83 $generated@@36) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@84 $generated@@83) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@35 $generated@@83 $generated@@40 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@28 $generated@@35 $generated@@85 $generated@@33 $generated@@86)  (or (= $generated@@85 $generated@@36) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@86 $generated@@85) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@35 $generated@@85 $generated@@33 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@87 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@88 $generated@@90) $generated@@0))) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@89 $generated@@90) $generated@@0))))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@89 $generated@@90) $generated@@0))
)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 Int) ) (! (= ($generated@@91 $generated@@92) $generated@@92)
 :pattern ( ($generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@93 $generated@@95 $generated@@94) $generated@@94)
 :pattern ( ($generated@@93 $generated@@95 $generated@@94))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@96 $generated@@98 $generated@@99) (forall (($generated@@100 T@U) ) (!  (=> ($generated@@97 $generated@@98 $generated@@100) ($generated@@97 $generated@@99 $generated@@100))
 :pattern ( ($generated@@97 $generated@@98 $generated@@100))
 :pattern ( ($generated@@97 $generated@@99 $generated@@100))
)))
 :pattern ( ($generated@@96 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 ($generated@@56 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@56 $generated@@103 $generated@@102))
)))
(assert (= ($generated@@12 $generated@@104) 7))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@34 $generated@@104 $generated@@107 ($generated@@105 $generated@@108)) (forall (($generated@@109 T@U) ) (!  (=> ($generated@@97 $generated@@107 $generated@@109) ($generated@@106 $generated@@109 $generated@@108))
 :pattern ( ($generated@@97 $generated@@107 $generated@@109))
)))
 :pattern ( ($generated@@34 $generated@@104 $generated@@107 ($generated@@105 $generated@@108)))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@34 $generated@@14 $generated@@110 $generated@@29) (<= ($generated@@91 0) ($generated@@19 $generated@@110)))
 :pattern ( ($generated@@34 $generated@@14 $generated@@110 $generated@@29))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@39 ($generated@@101 $generated@@114 $generated@@111) $generated@@112 $generated@@113) ($generated@@28 $generated@@114 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@39 ($generated@@101 $generated@@114 $generated@@111) $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@87 $generated@@115 $generated@@116) (=> ($generated@@39 $generated@@117 $generated@@118 $generated@@115) ($generated@@39 $generated@@117 $generated@@118 $generated@@116)))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116) ($generated@@39 $generated@@117 $generated@@118 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (!  (=> ($generated@@87 $generated@@119 $generated@@120) (=> ($generated@@28 $generated@@123 $generated@@121 $generated@@122 $generated@@119) ($generated@@28 $generated@@123 $generated@@121 $generated@@122 $generated@@120)))
 :pattern ( ($generated@@87 $generated@@119 $generated@@120) ($generated@@28 $generated@@123 $generated@@121 $generated@@122 $generated@@119))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@106 $generated@@124 $generated@@29) (and (= ($generated@@101 $generated@@14 ($generated@@56 $generated@@14 $generated@@124)) $generated@@124) ($generated@@34 $generated@@14 ($generated@@56 $generated@@14 $generated@@124) $generated@@29)))
 :pattern ( ($generated@@106 $generated@@124 $generated@@29))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@106 $generated@@125 $generated@@42) (and (= ($generated@@101 $generated@@35 ($generated@@56 $generated@@35 $generated@@125)) $generated@@125) ($generated@@34 $generated@@35 ($generated@@56 $generated@@35 $generated@@125) $generated@@42)))
 :pattern ( ($generated@@106 $generated@@125 $generated@@42))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@106 $generated@@126 $generated@@47) (and (= ($generated@@101 $generated@@35 ($generated@@56 $generated@@35 $generated@@126)) $generated@@126) ($generated@@34 $generated@@35 ($generated@@56 $generated@@35 $generated@@126) $generated@@47)))
 :pattern ( ($generated@@106 $generated@@126 $generated@@47))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@106 $generated@@127 $generated@@50) (and (= ($generated@@101 $generated@@35 ($generated@@56 $generated@@35 $generated@@127)) $generated@@127) ($generated@@34 $generated@@35 ($generated@@56 $generated@@35 $generated@@127) $generated@@50)))
 :pattern ( ($generated@@106 $generated@@127 $generated@@50))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@106 $generated@@128 $generated@@53) (and (= ($generated@@101 $generated@@35 ($generated@@56 $generated@@35 $generated@@128)) $generated@@128) ($generated@@34 $generated@@35 ($generated@@56 $generated@@35 $generated@@128) $generated@@53)))
 :pattern ( ($generated@@106 $generated@@128 $generated@@53))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@106 $generated@@129 $generated@@40) (and (= ($generated@@101 $generated@@35 ($generated@@56 $generated@@35 $generated@@129)) $generated@@129) ($generated@@34 $generated@@35 ($generated@@56 $generated@@35 $generated@@129) $generated@@40)))
 :pattern ( ($generated@@106 $generated@@129 $generated@@40))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@106 $generated@@130 $generated@@33) (and (= ($generated@@101 $generated@@35 ($generated@@56 $generated@@35 $generated@@130)) $generated@@130) ($generated@@34 $generated@@35 ($generated@@56 $generated@@35 $generated@@130) $generated@@33)))
 :pattern ( ($generated@@106 $generated@@130 $generated@@33))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@131 $generated@@47)  (and ($generated@@34 $generated@@35 $generated@@131 $generated@@42) (or (not (= $generated@@131 $generated@@36)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@131 $generated@@47))
 :pattern ( ($generated@@34 $generated@@35 $generated@@131 $generated@@42))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@132 $generated@@50)  (and ($generated@@34 $generated@@35 $generated@@132 $generated@@40) (or (not (= $generated@@132 $generated@@36)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@132 $generated@@50))
 :pattern ( ($generated@@34 $generated@@35 $generated@@132 $generated@@40))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@133 $generated@@53)  (and ($generated@@34 $generated@@35 $generated@@133 $generated@@33) (or (not (= $generated@@133 $generated@@36)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@133 $generated@@53))
 :pattern ( ($generated@@34 $generated@@35 $generated@@133 $generated@@33))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@28 $generated@@35 $generated@@134 $generated@@40 $generated@@135) ($generated@@28 $generated@@35 $generated@@134 $generated@@42 $generated@@135))
 :pattern ( ($generated@@28 $generated@@35 $generated@@134 $generated@@40 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> ($generated@@28 $generated@@35 $generated@@136 $generated@@33 $generated@@137) ($generated@@28 $generated@@35 $generated@@136 $generated@@40 $generated@@137))
 :pattern ( ($generated@@28 $generated@@35 $generated@@136 $generated@@33 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (or (not (= $generated@@138 $generated@@140)) (not true)) (=> (and ($generated@@87 $generated@@138 $generated@@139) ($generated@@87 $generated@@139 $generated@@140)) ($generated@@87 $generated@@138 $generated@@140)))
 :pattern ( ($generated@@87 $generated@@138 $generated@@139) ($generated@@87 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@106 ($generated@@101 $generated@@143 $generated@@141) $generated@@142) ($generated@@34 $generated@@143 $generated@@141 $generated@@142))
 :pattern ( ($generated@@106 ($generated@@101 $generated@@143 $generated@@141) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@28 $generated@@104 $generated@@144 ($generated@@105 $generated@@145) $generated@@146) (forall (($generated@@147 T@U) ) (!  (=> ($generated@@97 $generated@@144 $generated@@147) ($generated@@39 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@97 $generated@@144 $generated@@147))
)))
 :pattern ( ($generated@@28 $generated@@104 $generated@@144 ($generated@@105 $generated@@145) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (! ($generated@@34 $generated@@35 $generated@@148 $generated@@42)
 :pattern ( ($generated@@34 $generated@@35 $generated@@148 $generated@@42))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@149 ($generated@@105 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@105 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@151 ($generated@@105 $generated@@152)) $generated)
 :pattern ( ($generated@@105 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@56 $generated@@154 ($generated@@101 $generated@@154 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@101 $generated@@154 $generated@@153))
)))
(assert  (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@155 $generated@@158 $generated@@159 $generated@@160 ($generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@155 $generated@@165 $generated@@166 $generated@@167 ($generated@@157 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@155 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@155 $generated@@174 $generated@@175 $generated@@176 ($generated@@157 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@155 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Bool) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@17 ($generated@@155 $generated@@35 $generated@@58 $generated@@13 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))  (=> (and (or (not (= $generated@@187 $generated@@183)) (not true)) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@35 ($generated@@60 $generated@@58 $generated@@59) $generated@@184 $generated@@187) $generated@@185)))) $generated@@186))
 :pattern ( ($generated@@155 $generated@@35 $generated@@58 $generated@@13 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 Int) ($generated@@191 Int) ) (! (= ($generated@@189 $generated@@190 $generated@@191) (* $generated@@190 $generated@@191))
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> ($generated@@106 $generated@@192 ($generated@@105 $generated@@193)) (and (= ($generated@@101 $generated@@104 ($generated@@56 $generated@@104 $generated@@192)) $generated@@192) ($generated@@34 $generated@@104 ($generated@@56 $generated@@104 $generated@@192) ($generated@@105 $generated@@193))))
 :pattern ( ($generated@@106 $generated@@192 ($generated@@105 $generated@@193)))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@194 $generated@@40) ($generated@@34 $generated@@35 $generated@@194 $generated@@42))
 :pattern ( ($generated@@34 $generated@@35 $generated@@194 $generated@@40))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> ($generated@@106 $generated@@195 $generated@@40) ($generated@@106 $generated@@195 $generated@@42))
 :pattern ( ($generated@@106 $generated@@195 $generated@@40))
)))
(assert (forall (($generated@@196 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@196 $generated@@33) ($generated@@34 $generated@@35 $generated@@196 $generated@@40))
 :pattern ( ($generated@@34 $generated@@35 $generated@@196 $generated@@33))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> ($generated@@106 $generated@@197 $generated@@33) ($generated@@106 $generated@@197 $generated@@40))
 :pattern ( ($generated@@106 $generated@@197 $generated@@33))
)))
(assert (= ($generated@@151 $generated@@29) $generated@@1))
(assert (= ($generated@@198 $generated@@29) $generated@@8))
(assert (= ($generated@@151 $generated@@42) $generated@@2))
(assert (= ($generated@@198 $generated@@42) $generated@@9))
(assert (= ($generated@@151 $generated@@47) $generated@@3))
(assert (= ($generated@@198 $generated@@47) $generated@@9))
(assert (= ($generated@@151 $generated@@50) $generated@@4))
(assert (= ($generated@@198 $generated@@50) $generated@@10))
(assert (= ($generated@@151 $generated@@53) $generated@@5))
(assert (= ($generated@@198 $generated@@53) $generated@@11))
(assert (= ($generated@@151 $generated@@40) $generated@@6))
(assert (= ($generated@@198 $generated@@40) $generated@@10))
(assert (= ($generated@@151 $generated@@33) $generated@@7))
(assert (= ($generated@@198 $generated@@33) $generated@@11))
(assert (forall (($generated@@199 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@199 $generated@@40)  (or (= $generated@@199 $generated@@36) ($generated@@32 ($generated@@37 $generated@@199))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@199 $generated@@40))
)))
(assert (forall (($generated@@200 Int) ) (! (= ($generated@@101 $generated@@14 ($generated@@18 ($generated@@91 $generated@@200))) ($generated@@93 $generated@@59 ($generated@@101 $generated@@14 ($generated@@18 $generated@@200))))
 :pattern ( ($generated@@101 $generated@@14 ($generated@@18 ($generated@@91 $generated@@200))))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@T) ) (! (= ($generated@@101 $generated@@202 ($generated@@93 $generated@@202 $generated@@201)) ($generated@@93 $generated@@59 ($generated@@101 $generated@@202 $generated@@201)))
 :pattern ( ($generated@@101 $generated@@202 ($generated@@93 $generated@@202 $generated@@201)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 (T@U) Bool)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@213 true))
(let (($generated@@214  (=> (or (not (= $generated@@203 0)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@34 $generated@@14 ($generated@@18 (- $generated@@203 1)) $generated@@29)) (=> ($generated@@34 $generated@@14 ($generated@@18 (- $generated@@203 1)) $generated@@29) (=> (and (= $generated@@204 (- $generated@@203 1)) (= $generated@@205 ($generated@@189 ($generated@@91 100) $generated@@206))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@34 $generated@@104 $generated@@207 ($generated@@105 $generated@@53))) (=> ($generated@@34 $generated@@104 $generated@@207 ($generated@@105 $generated@@53)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (<= 0 $generated@@203) (= $generated@@204 $generated@@203))) (=> (or (<= 0 $generated@@203) (= $generated@@204 $generated@@203)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@206) (< $generated@@204 $generated@@203)) (= $generated@@205 $generated@@206))) (=> (or (or (<= 0 $generated@@206) (< $generated@@204 $generated@@203)) (= $generated@@205 $generated@@206)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (< $generated@@204 $generated@@203) (and (= $generated@@204 $generated@@203) (or (< $generated@@205 $generated@@206) (and (= $generated@@205 $generated@@206) (and ($generated@@96 $generated@@207 $generated@@207) (not ($generated@@96 $generated@@207 $generated@@207))))))))))))))))))))
(let (($generated@@215  (=> (= $generated@@208 ($generated@@156 $generated@@36 $generated@@209 $generated@@0 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@214) (=> (= (ControlFlow 0 8) 7) $generated@@213)))))
(let (($generated@@216  (=> (and (and (and (and ($generated@@41 $generated@@209) ($generated@@210 $generated@@209)) (<= ($generated@@91 0) $generated@@203)) (and ($generated@@34 $generated@@104 $generated@@207 ($generated@@105 $generated@@53)) ($generated@@28 $generated@@104 $generated@@207 ($generated@@105 $generated@@53) $generated@@209))) (and (and (and ($generated@@34 $generated@@104 $generated@@211 ($generated@@105 $generated@@50)) ($generated@@28 $generated@@104 $generated@@211 ($generated@@105 $generated@@50) $generated@@209)) true) (and (= 1 $generated@@212) (= (ControlFlow 0 9) 8)))) $generated@@215)))
$generated@@216)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
