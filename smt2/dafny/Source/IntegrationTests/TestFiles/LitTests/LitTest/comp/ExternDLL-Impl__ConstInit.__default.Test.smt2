(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 () T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@9 $generated@@33) 3))
(assert  (=> (< 1 $generated@@27) (forall (($generated@@35 T@U) ) (!  (=> (and (or (not (= $generated@@35 $generated@@29)) (not true)) (= ($generated@@30 $generated@@35) $generated@@31)) ($generated@@32 $generated@@33 ($generated@@28 $generated@@35) $generated@@34))
 :pattern ( ($generated@@28 $generated@@35))
))))
(assert  (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@37 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@37 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@37 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@9 $generated@@38) 4)) (= ($generated@@9 $generated@@39) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@9 ($generated@@40 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@40 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@40 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@40 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@40 $generated@@61 $generated@@62))
))))
(assert  (=> (< 1 $generated@@27) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@63) (and (or (not (= $generated@@64 $generated@@29)) (not true)) (= ($generated@@30 $generated@@64) $generated@@31))) ($generated@@14 ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@63 $generated@@64) $generated)))) ($generated@@42 $generated@@33 ($generated@@28 $generated@@64) $generated@@34 $generated@@63))
 :pattern ( ($generated@@28 $generated@@64) ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@63 $generated@@64) $generated)))
))))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@66 $generated@@65)  (or (= $generated@@66 $generated@@29) (= ($generated@@30 $generated@@66) $generated@@65)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@67 $generated@@31)  (or (= $generated@@67 $generated@@29) (= ($generated@@30 $generated@@67) $generated@@31)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@67 $generated@@31))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@42 $generated@@33 $generated@@68 $generated@@34 $generated@@69) ($generated@@42 $generated@@33 $generated@@68 $generated@@65 $generated@@69))
 :pattern ( ($generated@@42 $generated@@33 $generated@@68 $generated@@34 $generated@@69))
 :pattern ( ($generated@@42 $generated@@33 $generated@@68 $generated@@65 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@42 $generated@@33 $generated@@71 $generated@@70 $generated@@72) ($generated@@42 $generated@@33 $generated@@71 $generated@@31 $generated@@72))
 :pattern ( ($generated@@42 $generated@@33 $generated@@71 $generated@@70 $generated@@72))
 :pattern ( ($generated@@42 $generated@@33 $generated@@71 $generated@@31 $generated@@72))
)))
(assert (= ($generated@@25 $generated@@73) 0))
(assert (= ($generated@@74 $generated@@4 $generated@@8) $generated@@73))
(assert  (not ($generated@@75 $generated@@73)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@42 $generated@@33 $generated@@76 $generated@@65 $generated@@77)  (or (= $generated@@76 $generated@@29) ($generated@@14 ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@76) $generated)))))
 :pattern ( ($generated@@42 $generated@@33 $generated@@76 $generated@@65 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@42 $generated@@33 $generated@@78 $generated@@31 $generated@@79)  (or (= $generated@@78 $generated@@29) ($generated@@14 ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@79 $generated@@78) $generated)))))
 :pattern ( ($generated@@42 $generated@@33 $generated@@78 $generated@@31 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@80 $generated@@81 $generated@@82) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@14 ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@81 $generated@@83) $generated))) ($generated@@14 ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@82 $generated@@83) $generated))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@82 $generated@@83) $generated))
)))
 :pattern ( ($generated@@80 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@36 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@36 $generated@@89 $generated@@88))
)))
(assert ($generated@@75 $generated))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (!  (=> ($generated@@80 $generated@@90 $generated@@91) (=> ($generated@@42 $generated@@94 $generated@@92 $generated@@93 $generated@@90) ($generated@@42 $generated@@94 $generated@@92 $generated@@93 $generated@@91)))
 :pattern ( ($generated@@80 $generated@@90 $generated@@91) ($generated@@42 $generated@@94 $generated@@92 $generated@@93 $generated@@90))
)))
(assert  (=> (< 1 $generated@@27) ($generated@@32 $generated@@33 $generated@@95 $generated@@34)))
(assert  (=> (< 1 $generated@@27) ($generated@@32 $generated@@33 $generated@@96 $generated@@34)))
(assert  (=> (< 1 $generated@@27) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@41 $generated@@97) ($generated@@42 $generated@@33 $generated@@95 $generated@@34 $generated@@97))
 :pattern ( ($generated@@42 $generated@@33 $generated@@95 $generated@@34 $generated@@97))
))))
(assert  (=> (< 1 $generated@@27) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@41 $generated@@98) ($generated@@42 $generated@@33 $generated@@96 $generated@@34 $generated@@98))
 :pattern ( ($generated@@42 $generated@@33 $generated@@96 $generated@@34 $generated@@98))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and ($generated@@41 $generated@@99) (and (or (not (= $generated@@100 $generated@@29)) (not true)) (= ($generated@@30 $generated@@100) $generated@@31))) ($generated@@32 $generated@@33 ($generated@@36 $generated@@33 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@99 $generated@@100) $generated@@73)) $generated@@34))
 :pattern ( ($generated@@36 $generated@@33 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@99 $generated@@100) $generated@@73)))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@101 $generated@@34)  (and ($generated@@32 $generated@@33 $generated@@101 $generated@@65) (or (not (= $generated@@101 $generated@@29)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@101 $generated@@34))
 :pattern ( ($generated@@32 $generated@@33 $generated@@101 $generated@@65))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@102 $generated@@70)  (and ($generated@@32 $generated@@33 $generated@@102 $generated@@31) (or (not (= $generated@@102 $generated@@29)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@102 $generated@@70))
 :pattern ( ($generated@@32 $generated@@33 $generated@@102 $generated@@31))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@103) (and (or (not (= $generated@@104 $generated@@29)) (not true)) (= ($generated@@30 $generated@@104) $generated@@31))) ($generated@@14 ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@103 $generated@@104) $generated)))) ($generated@@42 $generated@@33 ($generated@@36 $generated@@33 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@103 $generated@@104) $generated@@73)) $generated@@34 $generated@@103))
 :pattern ( ($generated@@36 $generated@@33 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@103 $generated@@104) $generated@@73)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (or (not (= $generated@@105 $generated@@107)) (not true)) (=> (and ($generated@@80 $generated@@105 $generated@@106) ($generated@@80 $generated@@106 $generated@@107)) ($generated@@80 $generated@@105 $generated@@107)))
 :pattern ( ($generated@@80 $generated@@105 $generated@@106) ($generated@@80 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (and (= ($generated@@108 ($generated@@74 $generated@@109 $generated@@110)) $generated@@109) (= ($generated@@26 ($generated@@74 $generated@@109 $generated@@110)) $generated@@110))
 :pattern ( ($generated@@74 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@36 $generated@@112 ($generated@@87 $generated@@112 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@87 $generated@@112 $generated@@111))
)))
(assert  (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@113 $generated@@116 $generated@@117 $generated@@118 ($generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@121 $generated@@122) $generated@@119)
 :weight 0
)) (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@113 $generated@@123 $generated@@124 $generated@@125 ($generated@@115 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@113 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@113 $generated@@132 $generated@@133 $generated@@134 ($generated@@115 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@113 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 Bool) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@14 ($generated@@113 $generated@@33 $generated@@38 $generated@@10 ($generated@@114 $generated@@141 $generated@@142 $generated@@143 $generated@@144) $generated@@145 $generated@@146))  (=> (and (or (not (= $generated@@145 $generated@@141)) (not true)) ($generated@@14 ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@142 $generated@@145) $generated@@143)))) $generated@@144))
 :pattern ( ($generated@@113 $generated@@33 $generated@@38 $generated@@10 ($generated@@114 $generated@@141 $generated@@142 $generated@@143 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (= ($generated@@147 $generated@@34) $generated@@1))
(assert (= ($generated@@148 $generated@@34) $generated@@6))
(assert (= ($generated@@147 $generated@@70) $generated@@2))
(assert (= ($generated@@148 $generated@@70) $generated@@7))
(assert (= ($generated@@147 $generated@@65) $generated@@3))
(assert (= ($generated@@148 $generated@@65) $generated@@6))
(assert (= ($generated@@147 $generated@@31) $generated@@5))
(assert (= ($generated@@148 $generated@@31) $generated@@7))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@87 $generated@@150 ($generated@@84 $generated@@150 $generated@@149)) ($generated@@84 $generated@@39 ($generated@@87 $generated@@150 $generated@@149)))
 :pattern ( ($generated@@87 $generated@@150 ($generated@@84 $generated@@150 $generated@@149)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Bool)
(declare-fun $generated@@166 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@167  (=> (and (= $generated@@151 ($generated@@114 $generated@@29 $generated@@152 $generated false)) (= $generated@@153 $generated@@95)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (or (not (= $generated@@153 $generated@@29)) (not true))) (=> (or (not (= $generated@@153 $generated@@29)) (not true)) (=> (and (and (and ($generated@@41 $generated@@154) ($generated@@155 $generated@@154)) (forall (($generated@@168 T@U) ) (!  (=> (and (or (not (= $generated@@168 $generated@@29)) (not true)) ($generated@@14 ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@152 $generated@@168) $generated)))) (= ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@154 $generated@@168) ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@152 $generated@@168)))
 :pattern ( ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@154 $generated@@168))
))) (and ($generated@@80 $generated@@152 $generated@@154) (= $generated@@156 $generated@@96))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (or (not (= $generated@@156 $generated@@29)) (not true))) (=> (or (not (= $generated@@156 $generated@@29)) (not true)) (=> (and (and (and (and (and ($generated@@41 $generated@@157) ($generated@@155 $generated@@157)) (forall (($generated@@169 T@U) ) (!  (=> (and (or (not (= $generated@@169 $generated@@29)) (not true)) ($generated@@14 ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@154 $generated@@169) $generated)))) (= ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@157 $generated@@169) ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@154 $generated@@169)))
 :pattern ( ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@157 $generated@@169))
))) (and ($generated@@80 $generated@@154 $generated@@157) (= $generated@@158 ($generated@@14 ($generated@@84 $generated@@10 ($generated@@13 true)))))) (and (and (or (not (= $generated@@159 $generated@@29)) (not true)) (and ($generated@@32 $generated@@33 $generated@@159 $generated@@70) ($generated@@42 $generated@@33 $generated@@159 $generated@@70 $generated@@152))) (and ($generated@@41 $generated@@160) ($generated@@155 $generated@@160)))) (and (and (and (or (not (= $generated@@161 $generated@@29)) (not true)) (and ($generated@@32 $generated@@33 $generated@@161 $generated@@70) ($generated@@42 $generated@@33 $generated@@161 $generated@@70 $generated@@160))) (not ($generated@@14 ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@157 $generated@@161) $generated))))) (and (forall (($generated@@170 T@U) ) (!  (=> (and (or (not (= $generated@@170 $generated@@29)) (not true)) ($generated@@14 ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@157 $generated@@170) $generated)))) (= ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@160 $generated@@170) ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@157 $generated@@170)))
 :pattern ( ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@160 $generated@@170))
)) ($generated@@80 $generated@@157 $generated@@160)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= $generated@@161 $generated@@29)) (not true))) (=> (or (not (= $generated@@161 $generated@@29)) (not true)) (=> (= $generated@@162 ($generated@@36 $generated@@33 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@160 $generated@@161) $generated@@73))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@162 $generated@@29)) (not true))) (=> (or (not (= $generated@@162 $generated@@29)) (not true)) (=> (and (and ($generated@@41 $generated@@163) ($generated@@155 $generated@@163)) (and (forall (($generated@@171 T@U) ) (!  (=> (and (or (not (= $generated@@171 $generated@@29)) (not true)) ($generated@@14 ($generated@@36 $generated@@10 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@160 $generated@@171) $generated)))) (= ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@163 $generated@@171) ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@160 $generated@@171)))
 :pattern ( ($generated@@37 $generated@@33 ($generated@@40 $generated@@38 $generated@@39) $generated@@163 $generated@@171))
)) ($generated@@80 $generated@@160 $generated@@163))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@161 $generated@@29)) (not true))) (=> (or (not (= $generated@@161 $generated@@29)) (not true)) (=> (and (= $generated@@164 ($generated@@28 $generated@@161)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@164 $generated@@29)) (not true))))))))))))))))))))))
(let (($generated@@172  (=> (and ($generated@@41 $generated@@152) ($generated@@155 $generated@@152)) (=> (and (and (=> $generated@@165 (and ($generated@@32 $generated@@33 $generated@@166 $generated@@70) ($generated@@42 $generated@@33 $generated@@166 $generated@@70 $generated@@152))) true) (and (= 2 $generated@@27) (= (ControlFlow 0 10) 2))) $generated@@167))))
$generated@@172)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
