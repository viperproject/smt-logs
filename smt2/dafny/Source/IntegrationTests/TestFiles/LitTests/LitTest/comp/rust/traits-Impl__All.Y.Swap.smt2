(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 () T@U)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@21 (T@T) Int)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Bool) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (Int) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (Real) T@U)
(declare-fun $generated@@30 (T@U) Real)
(declare-fun $generated@@37 (T@U T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@61 (T@T T@U T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T T@T) T@T)
(declare-fun $generated@@71 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@97 () T@U)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@T T@U) T@U)
(declare-fun $generated@@111 (T@U T@U) T@U)
(declare-fun $generated@@115 (T@U) Bool)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@21 $generated@@22) 0) (= ($generated@@21 $generated@@23) 1)) (= ($generated@@21 $generated@@24) 2)) (forall (($generated@@31 Bool) ) (! (= ($generated@@26 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 Int) ) (! (= ($generated@@28 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))) (forall (($generated@@34 T@U) ) (! (= ($generated@@27 ($generated@@28 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@28 $generated@@34))
))) (forall (($generated@@35 Real) ) (! (= ($generated@@30 ($generated@@29 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@29 $generated@@35))
))) (forall (($generated@@36 T@U) ) (! (= ($generated@@29 ($generated@@30 $generated@@36)) $generated@@36)
 :pattern ( ($generated@@30 $generated@@36))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17 $generated@@18 $generated@@19 $generated@@20)
)
(assert (forall (($generated@@39 T@U) ) ($generated@@37 ($generated@@38 $generated@@39) $generated $generated@@39)))
(assert (= ($generated@@40 $generated@@1) 0))
(assert (= ($generated@@41 $generated) $generated@@0))
(assert (= ($generated@@42 $generated@@1) $generated@@2))
(assert (= ($generated@@21 $generated@@44) 3))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@47 ($generated@@45 $generated@@46) $generated@@48) ($generated@@43 $generated@@44 $generated@@47 ($generated@@38 $generated@@46) $generated@@48))
 :pattern ( ($generated@@43 $generated@@44 $generated@@47 ($generated@@45 $generated@@46) $generated@@48))
 :pattern ( ($generated@@43 $generated@@44 $generated@@47 ($generated@@38 $generated@@46) $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@51 $generated@@49 $generated@@52) ($generated@@43 $generated@@44 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@43 $generated@@44 $generated@@51 $generated@@49 $generated@@52))
 :pattern ( ($generated@@43 $generated@@44 $generated@@51 $generated@@50 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@55 $generated@@53 $generated@@56) ($generated@@43 $generated@@44 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@43 $generated@@44 $generated@@55 $generated@@53 $generated@@56))
 :pattern ( ($generated@@43 $generated@@44 $generated@@55 $generated@@54 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@59 $generated@@57 $generated@@60) ($generated@@43 $generated@@44 $generated@@59 $generated@@58 $generated@@60))
 :pattern ( ($generated@@43 $generated@@44 $generated@@59 $generated@@57 $generated@@60))
 :pattern ( ($generated@@43 $generated@@44 $generated@@59 $generated@@58 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@61 $generated@@44 $generated@@64 ($generated@@38 $generated@@63)) ($generated@@61 $generated@@44 $generated@@64 ($generated@@62 $generated $generated@@63)))
 :pattern ( ($generated@@61 $generated@@44 $generated@@64 ($generated@@38 $generated@@63)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@67 $generated@@74 $generated@@75 ($generated@@71 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@78) $generated@@76)
 :weight 0
)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (or (= $generated@@83 $generated@@84) (= ($generated@@67 $generated@@79 $generated@@80 ($generated@@71 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@81) $generated@@84) ($generated@@67 $generated@@79 $generated@@80 $generated@@82 $generated@@84)))
 :weight 0
))) (= ($generated@@21 $generated@@68) 4)) (= ($generated@@21 $generated@@69) 5)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@21 ($generated@@70 $generated@@85 $generated@@86)) 6))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@72 ($generated@@70 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@70 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@73 ($generated@@70 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@70 $generated@@89 $generated@@90))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@92 ($generated@@38 $generated@@91) $generated@@93)  (or (= $generated@@92 $generated@@65) ($generated@@26 ($generated@@66 $generated@@22 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@93 $generated@@92) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@92 ($generated@@38 $generated@@91) $generated@@93))
)))
(assert (= ($generated@@40 $generated@@94) 0))
(assert (= ($generated@@95 $generated@@9 $generated@@19) $generated@@94))
(assert  (not ($generated@@96 $generated@@94)))
(assert (= ($generated@@40 $generated@@97) 0))
(assert (= ($generated@@95 $generated@@9 $generated@@20) $generated@@97))
(assert  (not ($generated@@96 $generated@@97)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@98 $generated@@50 $generated@@99)  (or (= $generated@@98 $generated@@65) ($generated@@26 ($generated@@66 $generated@@22 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@99 $generated@@98) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@98 $generated@@50 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@100 $generated@@54 $generated@@101)  (or (= $generated@@100 $generated@@65) ($generated@@26 ($generated@@66 $generated@@22 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@101 $generated@@100) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@100 $generated@@54 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@102 $generated@@58 $generated@@103)  (or (= $generated@@102 $generated@@65) ($generated@@26 ($generated@@66 $generated@@22 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@103 $generated@@102) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@102 $generated@@58 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@104 $generated@@105 $generated@@106) (forall (($generated@@107 T@U) ) (!  (=> ($generated@@26 ($generated@@66 $generated@@22 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@105 $generated@@107) $generated@@1))) ($generated@@26 ($generated@@66 $generated@@22 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@106 $generated@@107) $generated@@1))))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@106 $generated@@107) $generated@@1))
)))
 :pattern ( ($generated@@104 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@108 $generated@@110 ($generated@@66 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@66 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@114 ($generated@@111 $generated@@112 $generated@@113))  (and ($generated@@61 $generated@@44 $generated@@114 ($generated@@62 $generated@@112 $generated@@113)) (or (not (= $generated@@114 $generated@@65)) (not true))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@114 ($generated@@111 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@61 $generated@@44 $generated@@114 ($generated@@62 $generated@@112 $generated@@113)))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (and (and ($generated@@115 $generated@@118) (and (or (not (= $generated@@119 $generated@@65)) (not true)) (= ($generated@@116 $generated@@119) ($generated@@38 $generated@@117)))) ($generated@@26 ($generated@@66 $generated@@22 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@118 $generated@@119) $generated@@1)))) ($generated@@43 $generated@@23 ($generated@@66 $generated@@23 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@118 $generated@@119) $generated@@94)) $generated $generated@@118))
 :pattern ( ($generated@@66 $generated@@23 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@118 $generated@@119) $generated@@94)) ($generated@@38 $generated@@117))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and (and ($generated@@115 $generated@@121) (and (or (not (= $generated@@122 $generated@@65)) (not true)) (= ($generated@@116 $generated@@122) ($generated@@38 $generated@@120)))) ($generated@@26 ($generated@@66 $generated@@22 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@121 $generated@@122) $generated@@1)))) ($generated@@43 $generated@@23 ($generated@@66 $generated@@23 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@121 $generated@@122) $generated@@97)) $generated $generated@@121))
 :pattern ( ($generated@@66 $generated@@23 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@121 $generated@@122) $generated@@97)) ($generated@@38 $generated@@120))
)))
(assert ($generated@@96 $generated@@1))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@124 ($generated@@45 $generated@@123))  (and ($generated@@61 $generated@@44 $generated@@124 ($generated@@38 $generated@@123)) (or (not (= $generated@@124 $generated@@65)) (not true))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@124 ($generated@@45 $generated@@123)))
 :pattern ( ($generated@@61 $generated@@44 $generated@@124 ($generated@@38 $generated@@123)))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@T) ) (!  (=> ($generated@@104 $generated@@125 $generated@@126) (=> ($generated@@43 $generated@@129 $generated@@127 $generated@@128 $generated@@125) ($generated@@43 $generated@@129 $generated@@127 $generated@@128 $generated@@126)))
 :pattern ( ($generated@@104 $generated@@125 $generated@@126) ($generated@@43 $generated@@129 $generated@@127 $generated@@128 $generated@@125))
)))
(assert (forall (($generated@@131 T@U) ) (!  (and (= ($generated@@41 ($generated@@45 $generated@@131)) $generated@@4) (= ($generated@@130 ($generated@@45 $generated@@131)) $generated@@15))
 :pattern ( ($generated@@45 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (!  (and (= ($generated@@41 ($generated@@38 $generated@@132)) $generated@@6) (= ($generated@@130 ($generated@@38 $generated@@132)) $generated@@15))
 :pattern ( ($generated@@38 $generated@@132))
)))
(assert  (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@133 $generated@@136 $generated@@137 $generated@@138 ($generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@141 $generated@@142) $generated@@139)
 :weight 0
)) (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@133 $generated@@143 $generated@@144 $generated@@145 ($generated@@135 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@133 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@133 $generated@@152 $generated@@153 $generated@@154 ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@133 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@26 ($generated@@133 $generated@@44 $generated@@68 $generated@@22 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))  (=> (and (or (not (= $generated@@165 $generated@@161)) (not true)) ($generated@@26 ($generated@@66 $generated@@22 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@162 $generated@@165) $generated@@163)))) (= $generated@@165 $generated@@164)))
 :pattern ( ($generated@@133 $generated@@44 $generated@@68 $generated@@22 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@169 ($generated@@111 $generated@@167 $generated@@168) $generated@@170) ($generated@@43 $generated@@44 $generated@@169 ($generated@@62 $generated@@167 $generated@@168) $generated@@170))
 :pattern ( ($generated@@43 $generated@@44 $generated@@169 ($generated@@111 $generated@@167 $generated@@168) $generated@@170))
 :pattern ( ($generated@@43 $generated@@44 $generated@@169 ($generated@@62 $generated@@167 $generated@@168) $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@172 ($generated@@38 $generated@@171))  (or (= $generated@@172 $generated@@65) (= ($generated@@116 $generated@@172) ($generated@@38 $generated@@171))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@172 ($generated@@38 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@43 $generated@@44 $generated@@174 ($generated@@38 $generated@@173) $generated@@175) ($generated@@43 $generated@@44 $generated@@174 ($generated@@62 $generated $generated@@173) $generated@@175))
 :pattern ( ($generated@@43 $generated@@44 $generated@@174 ($generated@@38 $generated@@173) $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@176 $generated@@49)  (and ($generated@@61 $generated@@44 $generated@@176 $generated@@50) (or (not (= $generated@@176 $generated@@65)) (not true))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@176 $generated@@49))
 :pattern ( ($generated@@61 $generated@@44 $generated@@176 $generated@@50))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@177 $generated@@53)  (and ($generated@@61 $generated@@44 $generated@@177 $generated@@54) (or (not (= $generated@@177 $generated@@65)) (not true))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@177 $generated@@53))
 :pattern ( ($generated@@61 $generated@@44 $generated@@177 $generated@@54))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@178 $generated@@57)  (and ($generated@@61 $generated@@44 $generated@@178 $generated@@58) (or (not (= $generated@@178 $generated@@65)) (not true))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@178 $generated@@57))
 :pattern ( ($generated@@61 $generated@@44 $generated@@178 $generated@@58))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@43 $generated@@44 $generated@@179 $generated@@58 $generated@@180) ($generated@@43 $generated@@44 $generated@@179 $generated@@50 $generated@@180))
 :pattern ( ($generated@@43 $generated@@44 $generated@@179 $generated@@58 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@43 $generated@@44 $generated@@181 $generated@@58 $generated@@182) ($generated@@43 $generated@@44 $generated@@181 $generated@@54 $generated@@182))
 :pattern ( ($generated@@43 $generated@@44 $generated@@181 $generated@@58 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@185 ($generated@@62 $generated@@183 $generated@@184) $generated@@186)  (or (= $generated@@185 $generated@@65) ($generated@@26 ($generated@@66 $generated@@22 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@186 $generated@@185) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@185 ($generated@@62 $generated@@183 $generated@@184) $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (or (not (= $generated@@187 $generated@@189)) (not true)) (=> (and ($generated@@104 $generated@@187 $generated@@188) ($generated@@104 $generated@@188 $generated@@189)) ($generated@@104 $generated@@187 $generated@@189)))
 :pattern ( ($generated@@104 $generated@@187 $generated@@188) ($generated@@104 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (and (= ($generated@@190 ($generated@@95 $generated@@191 $generated@@192)) $generated@@191) (= ($generated@@42 ($generated@@95 $generated@@191 $generated@@192)) $generated@@192))
 :pattern ( ($generated@@95 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@193 ($generated@@111 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@111 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@196 ($generated@@111 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@111 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@199 ($generated@@62 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@62 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@202 ($generated@@62 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@62 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and ($generated@@115 $generated@@206) (and (or (not (= $generated@@207 $generated@@65)) (not true)) (= ($generated@@116 $generated@@207) ($generated@@38 $generated@@205)))) ($generated@@61 $generated@@23 ($generated@@66 $generated@@23 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@206 $generated@@207) $generated@@94)) $generated))
 :pattern ( ($generated@@66 $generated@@23 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@206 $generated@@207) $generated@@94)) ($generated@@38 $generated@@205))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and ($generated@@115 $generated@@209) (and (or (not (= $generated@@210 $generated@@65)) (not true)) (= ($generated@@116 $generated@@210) ($generated@@38 $generated@@208)))) ($generated@@61 $generated@@23 ($generated@@66 $generated@@23 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@209 $generated@@210) $generated@@97)) $generated))
 :pattern ( ($generated@@66 $generated@@23 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@209 $generated@@210) $generated@@97)) ($generated@@38 $generated@@208))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@213 ($generated@@62 $generated@@211 $generated@@212))  (or (= $generated@@213 $generated@@65) ($generated@@37 ($generated@@116 $generated@@213) $generated@@211 $generated@@212)))
 :pattern ( ($generated@@61 $generated@@44 $generated@@213 ($generated@@62 $generated@@211 $generated@@212)))
)))
(assert (forall (($generated@@215 T@U) ) (! (= ($generated@@214 ($generated@@45 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@45 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (= ($generated@@216 ($generated@@38 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@38 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@T) ) (! (= ($generated@@66 $generated@@219 ($generated@@108 $generated@@219 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@108 $generated@@219 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> ($generated@@61 $generated@@44 $generated@@222 ($generated@@62 $generated@@220 $generated@@221)) ($generated@@61 $generated@@44 $generated@@222 $generated@@58))
 :pattern ( ($generated@@61 $generated@@44 $generated@@222 ($generated@@62 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (and (= ($generated@@41 ($generated@@111 $generated@@223 $generated@@224)) $generated@@3) (= ($generated@@130 ($generated@@111 $generated@@223 $generated@@224)) $generated@@14))
 :pattern ( ($generated@@111 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (and (= ($generated@@41 ($generated@@62 $generated@@225 $generated@@226)) $generated@@13) (= ($generated@@130 ($generated@@62 $generated@@225 $generated@@226)) $generated@@14))
 :pattern ( ($generated@@62 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> ($generated@@61 $generated@@44 $generated@@227 $generated@@58) ($generated@@61 $generated@@44 $generated@@227 $generated@@50))
 :pattern ( ($generated@@61 $generated@@44 $generated@@227 $generated@@58))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> ($generated@@61 $generated@@44 $generated@@228 $generated@@58) ($generated@@61 $generated@@44 $generated@@228 $generated@@54))
 :pattern ( ($generated@@61 $generated@@44 $generated@@228 $generated@@58))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> ($generated@@115 ($generated@@71 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@229 $generated@@230 ($generated@@71 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@229 $generated@@230) $generated@@231 $generated@@232))) ($generated@@104 $generated@@229 ($generated@@71 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@229 $generated@@230 ($generated@@71 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@229 $generated@@230) $generated@@231 $generated@@232))))
 :pattern ( ($generated@@71 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@229 $generated@@230 ($generated@@71 $generated@@68 $generated@@69 ($generated@@67 $generated@@44 ($generated@@70 $generated@@68 $generated@@69) $generated@@229 $generated@@230) $generated@@231 $generated@@232)))
)))
(assert (= ($generated@@41 $generated@@57) $generated@@5))
(assert (= ($generated@@130 $generated@@57) $generated@@16))
(assert (= ($generated@@41 $generated@@49) $generated@@7))
(assert (= ($generated@@130 $generated@@49) $generated@@17))
(assert (= ($generated@@41 $generated@@53) $generated@@8))
(assert (= ($generated@@130 $generated@@53) $generated@@18))
(assert (= ($generated@@41 $generated@@50) $generated@@10))
(assert (= ($generated@@130 $generated@@50) $generated@@17))
(assert (= ($generated@@41 $generated@@54) $generated@@11))
(assert (= ($generated@@130 $generated@@54) $generated@@18))
(assert (= ($generated@@41 $generated@@58) $generated@@12))
(assert (= ($generated@@130 $generated@@58) $generated@@16))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@234 $generated@@50)  (or (= $generated@@234 $generated@@65) ($generated@@233 ($generated@@116 $generated@@234))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@234 $generated@@50))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@236 $generated@@54)  (or (= $generated@@236 $generated@@65) ($generated@@235 ($generated@@116 $generated@@236))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@236 $generated@@54))
)))
(assert (forall (($generated@@238 T@U) ) (! (= ($generated@@61 $generated@@44 $generated@@238 $generated@@58)  (or (= $generated@@238 $generated@@65) ($generated@@237 ($generated@@116 $generated@@238))))
 :pattern ( ($generated@@61 $generated@@44 $generated@@238 $generated@@58))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> ($generated@@43 $generated@@44 $generated@@241 ($generated@@62 $generated@@239 $generated@@240) $generated@@242) ($generated@@43 $generated@@44 $generated@@241 $generated@@58 $generated@@242))
 :pattern ( ($generated@@43 $generated@@44 $generated@@241 ($generated@@62 $generated@@239 $generated@@240) $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! ($generated@@43 $generated@@23 $generated@@244 $generated $generated@@243)
 :pattern ( ($generated@@43 $generated@@23 $generated@@244 $generated $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! ($generated@@61 $generated@@23 $generated@@245 $generated)
 :pattern ( ($generated@@61 $generated@@23 $generated@@245 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@252  (=> (= $generated@@246 ($generated@@134 $generated@@65 $generated@@247 $generated@@1 $generated@@248)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@26 ($generated@@133 $generated@@44 $generated@@68 $generated@@22 $generated@@246 $generated@@248 $generated@@94))) (=> ($generated@@26 ($generated@@133 $generated@@44 $generated@@68 $generated@@22 $generated@@246 $generated@@248 $generated@@94)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@26 ($generated@@133 $generated@@44 $generated@@68 $generated@@22 $generated@@246 $generated@@248 $generated@@97))))))))
(let (($generated@@253  (=> (and ($generated@@115 $generated@@247) ($generated@@249 $generated@@247)) (=> (and (and (or (not (= $generated@@248 $generated@@65)) (not true)) (and ($generated@@61 $generated@@44 $generated@@248 ($generated@@45 $generated@@250)) ($generated@@43 $generated@@44 $generated@@248 ($generated@@45 $generated@@250) $generated@@247))) (and (= 0 $generated@@251) (= (ControlFlow 0 4) 2))) $generated@@252))))
$generated@@253)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
