(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@65 (Int) Int)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@123 (T@U) Int)
(declare-fun $generated@@124 (T@U) Int)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@8 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@8 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (= ($generated@@26 $generated@@27) $generated@@1))
(assert (= ($generated@@6 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@30 $generated@@32) ($generated@@22 $generated@@28 $generated@@27 ($generated@@29 $generated@@31) $generated@@32))
 :pattern ( ($generated@@22 $generated@@28 $generated@@27 ($generated@@29 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ) (! ($generated@@33 $generated@@28 $generated@@27 ($generated@@29 $generated@@34))
 :pattern ( ($generated@@33 $generated@@28 $generated@@27 ($generated@@29 $generated@@34)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@36 $generated@@45 $generated@@46 ($generated@@42 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@36 $generated@@50 $generated@@51 ($generated@@42 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@36 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))) (= ($generated@@6 $generated@@37) 4)) (= ($generated@@6 $generated@@38) 5)) (= ($generated@@6 $generated@@39) 6)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@6 ($generated@@40 $generated@@56 $generated@@57)) 7))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@40 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@40 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@40 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated@@35 $generated@@62 $generated@@63) (forall (($generated@@64 T@U) ) (!  (=> ($generated@@11 ($generated@@41 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@62 $generated@@64) $generated))) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@63 $generated@@64) $generated))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@63 $generated@@64) $generated))
)))
 :pattern ( ($generated@@35 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@65 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@70 $generated@@71) (= ($generated@@26 $generated@@71) $generated@@1))
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@72 $generated@@73) (= ($generated@@26 $generated@@73) $generated@@3))
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@41 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@41 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@70 $generated@@77) (= $generated@@77 $generated@@27))
 :pattern ( ($generated@@70 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@72 $generated@@79) (exists (($generated@@80 T@U) ) (= $generated@@79 ($generated@@78 $generated@@80))))
 :pattern ( ($generated@@72 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@33 $generated@@8 $generated@@81 $generated@@23)  (and (<= ($generated@@65 (- 0 100)) ($generated@@13 $generated@@81)) (< ($generated@@13 $generated@@81) 2147483648)))
 :pattern ( ($generated@@33 $generated@@8 $generated@@81 $generated@@23))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@82 ($generated@@74 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@22 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@82 ($generated@@74 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@35 $generated@@87 $generated@@88) (=> ($generated@@82 $generated@@89 $generated@@90 $generated@@87) ($generated@@82 $generated@@89 $generated@@90 $generated@@88)))
 :pattern ( ($generated@@35 $generated@@87 $generated@@88) ($generated@@82 $generated@@89 $generated@@90 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (!  (=> ($generated@@35 $generated@@91 $generated@@92) (=> ($generated@@22 $generated@@95 $generated@@93 $generated@@94 $generated@@91) ($generated@@22 $generated@@95 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@35 $generated@@91 $generated@@92) ($generated@@22 $generated@@95 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@98 T@U) ) (!  (and (= ($generated@@96 ($generated@@29 $generated@@98)) $generated@@2) (= ($generated@@97 ($generated@@29 $generated@@98)) $generated@@5))
 :pattern ( ($generated@@29 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@99 $generated@@100 $generated@@23) (and (= ($generated@@74 $generated@@8 ($generated@@41 $generated@@8 $generated@@100)) $generated@@100) ($generated@@33 $generated@@8 ($generated@@41 $generated@@8 $generated@@100) $generated@@23)))
 :pattern ( ($generated@@99 $generated@@100 $generated@@23))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@30 $generated@@103) (= ($generated@@22 $generated@@28 ($generated@@78 $generated@@102) ($generated@@29 $generated@@101) $generated@@103) ($generated@@82 $generated@@102 $generated@@101 $generated@@103)))
 :pattern ( ($generated@@22 $generated@@28 ($generated@@78 $generated@@102) ($generated@@29 $generated@@101) $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@104 $generated@@105) (or ($generated@@70 $generated@@105) ($generated@@72 $generated@@105)))
 :pattern ( ($generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@33 $generated@@28 $generated@@107 ($generated@@29 $generated@@106)) (or ($generated@@70 $generated@@107) ($generated@@72 $generated@@107)))
 :pattern ( ($generated@@72 $generated@@107) ($generated@@33 $generated@@28 $generated@@107 ($generated@@29 $generated@@106)))
 :pattern ( ($generated@@70 $generated@@107) ($generated@@33 $generated@@28 $generated@@107 ($generated@@29 $generated@@106)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or (not (= $generated@@108 $generated@@110)) (not true)) (=> (and ($generated@@35 $generated@@108 $generated@@109) ($generated@@35 $generated@@109 $generated@@110)) ($generated@@35 $generated@@108 $generated@@110)))
 :pattern ( ($generated@@35 $generated@@108 $generated@@109) ($generated@@35 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@99 ($generated@@74 $generated@@113 $generated@@111) $generated@@112) ($generated@@33 $generated@@113 $generated@@111 $generated@@112))
 :pattern ( ($generated@@99 ($generated@@74 $generated@@113 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@29 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@29 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@26 ($generated@@78 $generated@@116)) $generated@@3)
 :pattern ( ($generated@@78 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@78 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@78 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@41 $generated@@120 ($generated@@74 $generated@@120 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@74 $generated@@120 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@33 $generated@@28 ($generated@@78 $generated@@122) ($generated@@29 $generated@@121)) ($generated@@99 $generated@@122 $generated@@121))
 :pattern ( ($generated@@33 $generated@@28 ($generated@@78 $generated@@122) ($generated@@29 $generated@@121)))
)))
(assert (forall (($generated@@125 T@U) ) (! (< ($generated@@123 $generated@@125) ($generated@@124 ($generated@@78 $generated@@125)))
 :pattern ( ($generated@@78 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and ($generated@@30 $generated@@128) (and ($generated@@72 $generated@@126) ($generated@@22 $generated@@28 $generated@@126 ($generated@@29 $generated@@127) $generated@@128))) ($generated@@82 ($generated@@117 $generated@@126) $generated@@127 $generated@@128))
 :pattern ( ($generated@@82 ($generated@@117 $generated@@126) $generated@@127 $generated@@128))
)))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@11 ($generated@@129 $generated@@39 $generated@@37 $generated@@7 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@129 $generated@@39 $generated@@37 $generated@@7 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@123 ($generated@@74 $generated@@28 $generated@@163)) ($generated@@124 $generated@@163))
 :pattern ( ($generated@@123 ($generated@@74 $generated@@28 $generated@@163)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> ($generated@@99 $generated@@165 ($generated@@29 $generated@@164)) (and (= ($generated@@74 $generated@@28 ($generated@@41 $generated@@28 $generated@@165)) $generated@@165) ($generated@@33 $generated@@28 ($generated@@41 $generated@@28 $generated@@165) ($generated@@29 $generated@@164))))
 :pattern ( ($generated@@99 $generated@@165 ($generated@@29 $generated@@164)))
)))
(assert (= ($generated@@96 $generated@@23) $generated@@0))
(assert (= ($generated@@97 $generated@@23) $generated@@4))
(assert (= $generated@@27 ($generated@@67 $generated@@28 $generated@@27)))
(assert (forall (($generated@@166 Int) ) (! (= ($generated@@74 $generated@@8 ($generated@@12 ($generated@@65 $generated@@166))) ($generated@@67 $generated@@38 ($generated@@74 $generated@@8 ($generated@@12 $generated@@166))))
 :pattern ( ($generated@@74 $generated@@8 ($generated@@12 ($generated@@65 $generated@@166))))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@78 ($generated@@67 $generated@@38 $generated@@167)) ($generated@@67 $generated@@28 ($generated@@78 $generated@@167)))
 :pattern ( ($generated@@78 ($generated@@67 $generated@@38 $generated@@167)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@74 $generated@@169 ($generated@@67 $generated@@169 $generated@@168)) ($generated@@67 $generated@@38 ($generated@@74 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@74 $generated@@169 ($generated@@67 $generated@@169 $generated@@168)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@182  (=> (and (= $generated@@170 ($generated@@130 $generated@@171 $generated@@172 $generated false)) ($generated@@72 $generated@@173)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@72 $generated@@173)) (=> ($generated@@72 $generated@@173) (=> (= $generated@@174 ($generated@@65 2147483647)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@65 (- 0 100)) $generated@@174) (< $generated@@174 2147483648))) (=> (and (<= ($generated@@65 (- 0 100)) $generated@@174) (< $generated@@174 2147483648)) (=> (< ($generated@@13 ($generated@@41 $generated@@8 ($generated@@117 $generated@@173))) 2147483647) (=> (and (and (and ($generated@@30 $generated@@175) ($generated@@176 $generated@@175)) (and (forall (($generated@@183 T@U) ) (!  (=> (and (or (not (= $generated@@183 $generated@@171)) (not true)) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@172 $generated@@183) $generated)))) (= ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@175 $generated@@183) ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@172 $generated@@183)))
 :pattern ( ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@175 $generated@@183))
)) ($generated@@35 $generated@@172 $generated@@175))) (and (and ($generated@@33 $generated@@28 $generated@@177 ($generated@@29 $generated@@23)) ($generated@@22 $generated@@28 $generated@@177 ($generated@@29 $generated@@23) $generated@@175)) ($generated@@72 $generated@@177))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@72 $generated@@177)) (=> ($generated@@72 $generated@@177) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@72 $generated@@173)) (=> ($generated@@72 $generated@@173) (=> (= $generated@@178 ($generated@@65 1)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@65 (- 0 100)) $generated@@178) (< $generated@@178 2147483648))) (=> (and (<= ($generated@@65 (- 0 100)) $generated@@178) (< $generated@@178 2147483648)) (=> (and (= $generated@@179 (+ ($generated@@13 ($generated@@41 $generated@@8 ($generated@@117 $generated@@173))) 1)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@65 (- 0 100)) $generated@@179) (< $generated@@179 2147483648))))))))))))))))))))
(let (($generated@@184  (=> (and ($generated@@30 $generated@@172) ($generated@@176 $generated@@172)) (=> (and (and (and ($generated@@33 $generated@@28 $generated@@173 ($generated@@29 $generated@@23)) ($generated@@22 $generated@@28 $generated@@173 ($generated@@29 $generated@@23) $generated@@172)) ($generated@@104 $generated@@173)) (and (and ($generated@@33 $generated@@28 $generated@@180 ($generated@@29 $generated@@23)) ($generated@@22 $generated@@28 $generated@@180 ($generated@@29 $generated@@23) $generated@@172)) (and (= 1 $generated@@181) (= (ControlFlow 0 8) 2)))) $generated@@182))))
$generated@@184)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
