(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) T@U)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@T) T@T)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@97 (T@T T@U T@U) Bool)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@124 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ) (! ($generated@@18 ($generated@@17 $generated@@19 $generated@@20) $generated@@20)
 :pattern ( ($generated@@17 $generated@@19 $generated@@20))
)))
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ($generated@@23 T@U) ) (!  (=> ($generated@@18 $generated@@21 $generated@@23) ($generated@@18 ($generated@@17 $generated@@21 $generated@@22) $generated@@23))
 :pattern ( ($generated@@17 $generated@@21 $generated@@22) ($generated@@18 $generated@@21 $generated@@23))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@18 $generated@@25 $generated@@27) ($generated@@18 ($generated@@24 $generated@@25 $generated@@26) $generated@@27))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26) ($generated@@18 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@18 $generated@@29 $generated@@30) ($generated@@18 ($generated@@24 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@24 $generated@@28 $generated@@29) ($generated@@18 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@18 ($generated@@17 $generated@@31 $generated@@32) $generated@@33)  (or (= $generated@@33 $generated@@32) ($generated@@18 $generated@@31 $generated@@33)))
 :pattern ( ($generated@@18 ($generated@@17 $generated@@31 $generated@@32) $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@18 $generated@@36 $generated@@37) (not ($generated@@18 ($generated@@34 $generated@@35 $generated@@36) $generated@@37)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36) ($generated@@18 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ) (!  (not ($generated@@18 $generated@@38 $generated@@39))
 :pattern ( ($generated@@18 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@18 ($generated@@40 $generated@@41 $generated@@42) $generated@@43)  (and ($generated@@18 $generated@@41 $generated@@43) ($generated@@18 $generated@@42 $generated@@43)))
 :pattern ( ($generated@@18 ($generated@@40 $generated@@41 $generated@@42) $generated@@43))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@24 ($generated@@24 $generated@@44 $generated@@45) $generated@@45) ($generated@@24 $generated@@44 $generated@@45))
 :pattern ( ($generated@@24 ($generated@@24 $generated@@44 $generated@@45) $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@40 ($generated@@40 $generated@@46 $generated@@47) $generated@@47) ($generated@@40 $generated@@46 $generated@@47))
 :pattern ( ($generated@@40 ($generated@@40 $generated@@46 $generated@@47) $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@18 ($generated@@34 $generated@@48 $generated@@49) $generated@@50)  (and ($generated@@18 $generated@@48 $generated@@50) (not ($generated@@18 $generated@@49 $generated@@50))))
 :pattern ( ($generated@@18 ($generated@@34 $generated@@48 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (!  (and (= (= ($generated@@51 $generated@@52) 0) (= $generated@@52 $generated@@38)) (=> (or (not (= ($generated@@51 $generated@@52) 0)) (not true)) (exists (($generated@@53 T@U) ) (! ($generated@@18 $generated@@52 $generated@@53)
 :pattern ( ($generated@@18 $generated@@52 $generated@@53))
))))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= (+ ($generated@@51 ($generated@@24 $generated@@54 $generated@@55)) ($generated@@51 ($generated@@40 $generated@@54 $generated@@55))) (+ ($generated@@51 $generated@@54) ($generated@@51 $generated@@55)))
 :pattern ( ($generated@@51 ($generated@@24 $generated@@54 $generated@@55)))
 :pattern ( ($generated@@51 ($generated@@40 $generated@@54 $generated@@55)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@57 $generated@@66 $generated@@67 ($generated@@63 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@70) $generated@@68)
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@75 $generated@@76) (= ($generated@@57 $generated@@71 $generated@@72 ($generated@@63 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@76) ($generated@@57 $generated@@71 $generated@@72 $generated@@74 $generated@@76)))
 :weight 0
))) (= ($generated@@1 $generated@@58) 3)) (= ($generated@@1 $generated@@59) 4)) (= ($generated@@1 $generated@@60) 5)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (= ($generated@@1 ($generated@@61 $generated@@77 $generated@@78)) 6))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@64 ($generated@@61 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@61 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@65 ($generated@@61 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@61 $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@56 $generated@@83 $generated@@84) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@6 ($generated@@62 $generated@@2 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@83 $generated@@85) $generated@@0))) ($generated@@6 ($generated@@62 $generated@@2 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@84 $generated@@85) $generated@@0))))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@84 $generated@@85) $generated@@0))
)))
 :pattern ( ($generated@@56 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@86 $generated@@87 $generated@@88) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@18 $generated@@87 $generated@@89) ($generated@@18 $generated@@88 $generated@@89))
 :pattern ( ($generated@@18 $generated@@87 $generated@@89))
 :pattern ( ($generated@@18 $generated@@88 $generated@@89))
)))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@62 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@62 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@93 $generated@@94 $generated@@95) (forall (($generated@@96 T@U) ) (!  (or (not ($generated@@18 $generated@@94 $generated@@96)) (not ($generated@@18 $generated@@95 $generated@@96)))
 :pattern ( ($generated@@18 $generated@@94 $generated@@96))
 :pattern ( ($generated@@18 $generated@@95 $generated@@96))
)))
 :pattern ( ($generated@@93 $generated@@94 $generated@@95))
)))
(assert (= ($generated@@1 $generated@@98) 7))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@97 $generated@@98 $generated@@101 ($generated@@99 $generated@@102)) (forall (($generated@@103 T@U) ) (!  (=> ($generated@@18 $generated@@101 $generated@@103) ($generated@@100 $generated@@103 $generated@@102))
 :pattern ( ($generated@@18 $generated@@101 $generated@@103))
)))
 :pattern ( ($generated@@97 $generated@@98 $generated@@101 ($generated@@99 $generated@@102)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@104 ($generated@@90 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@105 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@104 ($generated@@90 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> ($generated@@56 $generated@@110 $generated@@111) (=> ($generated@@104 $generated@@112 $generated@@113 $generated@@110) ($generated@@104 $generated@@112 $generated@@113 $generated@@111)))
 :pattern ( ($generated@@56 $generated@@110 $generated@@111) ($generated@@104 $generated@@112 $generated@@113 $generated@@110))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (!  (=> ($generated@@56 $generated@@114 $generated@@115) (=> ($generated@@105 $generated@@118 $generated@@116 $generated@@117 $generated@@114) ($generated@@105 $generated@@118 $generated@@116 $generated@@117 $generated@@115)))
 :pattern ( ($generated@@56 $generated@@114 $generated@@115) ($generated@@105 $generated@@118 $generated@@116 $generated@@117 $generated@@114))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@18 ($generated@@24 $generated@@119 $generated@@120) $generated@@121)  (or ($generated@@18 $generated@@119 $generated@@121) ($generated@@18 $generated@@120 $generated@@121)))
 :pattern ( ($generated@@18 ($generated@@24 $generated@@119 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@93 $generated@@122 $generated@@123) (and (= ($generated@@34 ($generated@@24 $generated@@122 $generated@@123) $generated@@122) $generated@@123) (= ($generated@@34 ($generated@@24 $generated@@122 $generated@@123) $generated@@123) $generated@@122)))
 :pattern ( ($generated@@24 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@124 $generated@@125 $generated@@126) (= $generated@@125 $generated@@126))
 :pattern ( ($generated@@124 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or (not (= $generated@@127 $generated@@129)) (not true)) (=> (and ($generated@@56 $generated@@127 $generated@@128) ($generated@@56 $generated@@128 $generated@@129)) ($generated@@56 $generated@@127 $generated@@129)))
 :pattern ( ($generated@@56 $generated@@127 $generated@@128) ($generated@@56 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (and (= (+ (+ ($generated@@51 ($generated@@34 $generated@@130 $generated@@131)) ($generated@@51 ($generated@@34 $generated@@131 $generated@@130))) ($generated@@51 ($generated@@40 $generated@@130 $generated@@131))) ($generated@@51 ($generated@@24 $generated@@130 $generated@@131))) (= ($generated@@51 ($generated@@34 $generated@@130 $generated@@131)) (- ($generated@@51 $generated@@130) ($generated@@51 ($generated@@40 $generated@@130 $generated@@131)))))
 :pattern ( ($generated@@51 ($generated@@34 $generated@@130 $generated@@131)))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@100 ($generated@@90 $generated@@134 $generated@@132) $generated@@133) ($generated@@97 $generated@@134 $generated@@132 $generated@@133))
 :pattern ( ($generated@@100 ($generated@@90 $generated@@134 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! (<= 0 ($generated@@51 $generated@@135))
 :pattern ( ($generated@@51 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@105 $generated@@98 $generated@@136 ($generated@@99 $generated@@137) $generated@@138) (forall (($generated@@139 T@U) ) (!  (=> ($generated@@18 $generated@@136 $generated@@139) ($generated@@104 $generated@@139 $generated@@137 $generated@@138))
 :pattern ( ($generated@@18 $generated@@136 $generated@@139))
)))
 :pattern ( ($generated@@105 $generated@@98 $generated@@136 ($generated@@99 $generated@@137) $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@140 ($generated@@99 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@99 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@99 $generated@@143)) $generated)
 :pattern ( ($generated@@99 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@62 $generated@@145 ($generated@@90 $generated@@145 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@90 $generated@@145 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@24 $generated@@146 ($generated@@24 $generated@@146 $generated@@147)) ($generated@@24 $generated@@146 $generated@@147))
 :pattern ( ($generated@@24 $generated@@146 ($generated@@24 $generated@@146 $generated@@147)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@40 $generated@@148 ($generated@@40 $generated@@148 $generated@@149)) ($generated@@40 $generated@@148 $generated@@149))
 :pattern ( ($generated@@40 $generated@@148 ($generated@@40 $generated@@148 $generated@@149)))
)))
(assert  (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@150 $generated@@153 $generated@@154 $generated@@155 ($generated@@152 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@158 $generated@@159) $generated@@156)
 :weight 0
)) (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@150 $generated@@160 $generated@@161 $generated@@162 ($generated@@152 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@150 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@150 $generated@@169 $generated@@170 $generated@@171 ($generated@@152 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@150 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 Bool) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@6 ($generated@@150 $generated@@60 $generated@@58 $generated@@2 ($generated@@151 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))  (=> (and (or (not (= $generated@@182 $generated@@178)) (not true)) ($generated@@6 ($generated@@62 $generated@@2 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@179 $generated@@182) $generated@@180)))) $generated@@181))
 :pattern ( ($generated@@150 $generated@@60 $generated@@58 $generated@@2 ($generated@@151 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@100 $generated@@184 ($generated@@99 $generated@@185)) (and (= ($generated@@90 $generated@@98 ($generated@@62 $generated@@98 $generated@@184)) $generated@@184) ($generated@@97 $generated@@98 ($generated@@62 $generated@@98 $generated@@184) ($generated@@99 $generated@@185))))
 :pattern ( ($generated@@100 $generated@@184 ($generated@@99 $generated@@185)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@18 $generated@@186 $generated@@187) (= ($generated@@51 ($generated@@17 $generated@@186 $generated@@187)) ($generated@@51 $generated@@186)))
 :pattern ( ($generated@@51 ($generated@@17 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@124 $generated@@188 $generated@@189) (forall (($generated@@190 T@U) ) (! (= ($generated@@18 $generated@@188 $generated@@190) ($generated@@18 $generated@@189 $generated@@190))
 :pattern ( ($generated@@18 $generated@@188 $generated@@190))
 :pattern ( ($generated@@18 $generated@@189 $generated@@190))
)))
 :pattern ( ($generated@@124 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (not ($generated@@18 $generated@@191 $generated@@192)) (= ($generated@@51 ($generated@@17 $generated@@191 $generated@@192)) (+ ($generated@@51 $generated@@191) 1)))
 :pattern ( ($generated@@51 ($generated@@17 $generated@@191 $generated@@192)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () Bool)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Bool)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 (T@U) Bool)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Bool)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () Bool)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 34) (let (($generated@@223  (=> (= (ControlFlow 0 20) (- 0 19)) ($generated@@18 $generated@@193 $generated@@194))))
(let (($generated@@224  (=> ($generated@@124 $generated@@195 $generated@@38) (and (=> (= (ControlFlow 0 21) (- 0 22)) $generated@@196) (=> $generated@@196 (=> (and (= $generated@@194 $generated@@197) (= (ControlFlow 0 21) 20)) $generated@@223))))))
(let (($generated@@225  (and (=> (= (ControlFlow 0 5) (- 0 7)) (and ($generated@@86 $generated@@198 $generated@@195) (not ($generated@@86 $generated@@195 $generated@@198)))) (=> (and ($generated@@86 $generated@@198 $generated@@195) (not ($generated@@86 $generated@@195 $generated@@198))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@199 ($generated@@86 $generated@@198 $generated@@193))) (=> (=> $generated@@199 ($generated@@86 $generated@@198 $generated@@193)) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@199 ($generated@@18 $generated@@193 $generated@@200)))))))))
(let (($generated@@226  (=> (not $generated@@201) (=> (and (= $generated@@200 $generated@@197) (= (ControlFlow 0 10) 5)) $generated@@225))))
(let (($generated@@227  (=> $generated@@201 (and (=> (= (ControlFlow 0 8) (- 0 9)) true) (=> (and (= $generated@@200 $generated@@202) (= (ControlFlow 0 8) 5)) $generated@@225)))))
(let (($generated@@228  (and (=> (= (ControlFlow 0 11) (- 0 15)) (exists (($generated@@229 T@U) )  (and ($generated@@100 $generated@@229 $generated@@203) ($generated@@18 $generated@@195 $generated@@229)))) (=> (exists (($generated@@230 T@U) )  (and ($generated@@100 $generated@@230 $generated@@203) ($generated@@18 $generated@@195 $generated@@230))) (=> (and (=> true (and ($generated@@100 $generated@@202 $generated@@203) ($generated@@104 $generated@@202 $generated@@203 $generated@@204))) ($generated@@18 $generated@@195 $generated@@202)) (and (=> (= (ControlFlow 0 11) (- 0 14)) true) (=> (= $generated@@198 ($generated@@34 $generated@@195 ($generated@@17 $generated@@38 $generated@@202))) (and (=> (= (ControlFlow 0 11) (- 0 13)) true) (and (=> (= (ControlFlow 0 11) (- 0 12)) $generated@@196) (=> $generated@@196 (=> (and (and ($generated@@205 $generated@@206) ($generated@@207 $generated@@206)) (and (forall (($generated@@231 T@U) ) (!  (=> (and (or (not (= $generated@@231 $generated@@208)) (not true)) ($generated@@6 ($generated@@62 $generated@@2 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@204 $generated@@231) $generated@@0)))) (= ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@206 $generated@@231) ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@204 $generated@@231)))
 :pattern ( ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@206 $generated@@231))
)) ($generated@@56 $generated@@204 $generated@@206))) (and (=> (= (ControlFlow 0 11) 8) $generated@@227) (=> (= (ControlFlow 0 11) 10) $generated@@226)))))))))))))
(let (($generated@@232  (=> (and (not (and ($generated@@100 $generated@@209 $generated@@203) ($generated@@104 $generated@@209 $generated@@203 $generated@@204))) (= (ControlFlow 0 17) 11)) $generated@@228)))
(let (($generated@@233  (=> (and (and ($generated@@100 $generated@@209 $generated@@203) ($generated@@104 $generated@@209 $generated@@203 $generated@@204)) (= (ControlFlow 0 16) 11)) $generated@@228)))
(let (($generated@@234  (=> (not ($generated@@124 $generated@@195 $generated@@38)) (and (=> (= (ControlFlow 0 18) 16) $generated@@233) (=> (= (ControlFlow 0 18) 17) $generated@@232)))))
(let (($generated@@235  (=> $generated@@199 (and (=> (= (ControlFlow 0 23) 21) $generated@@224) (=> (= (ControlFlow 0 23) 18) $generated@@234)))))
(let (($generated@@236  (=> (not $generated@@199) (=> (and ($generated@@86 $generated@@195 $generated@@193) (= (ControlFlow 0 3) (- 0 2))) $generated@@196))))
(let (($generated@@237  (and (=> (= (ControlFlow 0 24) 3) $generated@@236) (=> (= (ControlFlow 0 24) 23) $generated@@235))))
(let (($generated@@238 true))
(let (($generated@@239  (=> (and (=> $generated@@196 (and ($generated@@100 $generated@@197 $generated@@203) ($generated@@104 $generated@@197 $generated@@203 $generated@@204))) (=> $generated@@210 (and ($generated@@100 $generated@@211 $generated@@203) ($generated@@104 $generated@@211 $generated@@203 $generated@@204)))) (=> (and (and ($generated@@97 $generated@@98 $generated@@195 ($generated@@99 $generated@@203)) ($generated@@105 $generated@@98 $generated@@195 ($generated@@99 $generated@@203) $generated@@204)) (and ($generated@@205 $generated@@204) ($generated@@207 $generated@@204))) (=> (and (and (and (and (and $generated@@196 (not false)) true) (=> $generated@@199 ($generated@@86 $generated@@195 $generated@@193))) (and (=> $generated@@199 ($generated@@18 $generated@@193 $generated@@197)) (forall (($generated@@240 T@U) ) (!  (=> (and (or (not (= $generated@@240 $generated@@208)) (not true)) ($generated@@6 ($generated@@62 $generated@@2 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@212 $generated@@240) $generated@@0)))) (= ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@204 $generated@@240) ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@212 $generated@@240)))
 :pattern ( ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@204 $generated@@240))
)))) (and (and ($generated@@56 $generated@@212 $generated@@204) (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (or (not (= $generated@@241 $generated@@208)) (not true)) ($generated@@6 ($generated@@62 $generated@@2 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@212 $generated@@241) $generated@@0)))) (or (= ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@204 $generated@@241) $generated@@242) ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@212 $generated@@241) $generated@@242)) ($generated@@6 ($generated@@150 $generated@@60 $generated@@58 $generated@@2 $generated@@213 $generated@@241 $generated@@242))))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@60 ($generated@@61 $generated@@58 $generated@@59) $generated@@204 $generated@@241) $generated@@242))
))) (and (=> true $generated@@196) ($generated@@86 $generated@@195 $generated@@214)))) (and (=> (= (ControlFlow 0 25) 1) $generated@@238) (=> (= (ControlFlow 0 25) 24) $generated@@237)))))))
(let (($generated@@243  (and (=> (= (ControlFlow 0 26) (- 0 30)) (exists (($generated@@244 T@U) )  (and ($generated@@100 $generated@@244 $generated@@203) ($generated@@18 $generated@@193 $generated@@244)))) (=> (exists (($generated@@245 T@U) )  (and ($generated@@100 $generated@@245 $generated@@203) ($generated@@18 $generated@@193 $generated@@245))) (=> (and (=> true (and ($generated@@100 $generated@@215 $generated@@203) ($generated@@104 $generated@@215 $generated@@203 $generated@@212))) ($generated@@18 $generated@@193 $generated@@215)) (and (=> (= (ControlFlow 0 26) (- 0 29)) true) (=> (= $generated@@214 ($generated@@34 $generated@@193 ($generated@@17 $generated@@38 $generated@@215))) (and (=> (= (ControlFlow 0 26) (- 0 28)) (=> $generated@@199 ($generated@@86 $generated@@214 $generated@@193))) (=> (=> $generated@@199 ($generated@@86 $generated@@214 $generated@@193)) (and (=> (= (ControlFlow 0 26) (- 0 27)) (=> $generated@@199 ($generated@@18 $generated@@193 $generated@@215))) (=> (=> $generated@@199 ($generated@@18 $generated@@193 $generated@@215)) (=> (= (ControlFlow 0 26) 25) $generated@@239))))))))))))
(let (($generated@@246  (=> (and (not (and ($generated@@100 $generated@@216 $generated@@203) ($generated@@104 $generated@@216 $generated@@203 $generated@@212))) (= (ControlFlow 0 32) 26)) $generated@@243)))
(let (($generated@@247  (=> (and (and ($generated@@100 $generated@@216 $generated@@203) ($generated@@104 $generated@@216 $generated@@203 $generated@@212)) (= (ControlFlow 0 31) 26)) $generated@@243)))
(let (($generated@@248  (=> (= $generated@@213 ($generated@@151 $generated@@208 $generated@@212 $generated@@0 false)) (and (=> (= (ControlFlow 0 33) 31) $generated@@247) (=> (= (ControlFlow 0 33) 32) $generated@@246)))))
(let (($generated@@249  (=> (and ($generated@@205 $generated@@212) ($generated@@207 $generated@@212)) (=> (and (and (and (and ($generated@@97 $generated@@98 $generated@@193 ($generated@@99 $generated@@203)) ($generated@@105 $generated@@98 $generated@@193 ($generated@@99 $generated@@203) $generated@@212)) (=> $generated@@217 (and ($generated@@100 $generated@@218 $generated@@203) ($generated@@104 $generated@@218 $generated@@203 $generated@@212)))) (and (and ($generated@@97 $generated@@98 $generated@@219 ($generated@@99 $generated@@203)) ($generated@@105 $generated@@98 $generated@@219 ($generated@@99 $generated@@203) $generated@@212)) true)) (and (and (and (=> $generated@@220 (and ($generated@@100 $generated@@221 $generated@@203) ($generated@@104 $generated@@221 $generated@@203 $generated@@212))) true) (= 0 $generated@@222)) (and (> ($generated@@51 $generated@@193) 0) (= (ControlFlow 0 34) 33)))) $generated@@248))))
$generated@@249))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
