(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 (T@T) Int)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 (Bool) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (Int) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (Real) T@U)
(declare-fun $generated@@27 (T@U) Real)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@56 (T@U) Int)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@T T@U T@U) Bool)
(declare-fun $generated@@63 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@108 (Int) Int)
(declare-fun $generated@@110 (T@T T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@118 (T@T T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@18 $generated@@19) 0) (= ($generated@@18 $generated@@20) 1)) (= ($generated@@18 $generated@@21) 2)) (forall (($generated@@28 Bool) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Int) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 Real) ) (! (= ($generated@@27 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17)
)
(assert (= ($generated@@34 $generated) $generated@@2))
(assert (= ($generated@@34 $generated@@0) $generated@@3))
(assert (= ($generated@@34 $generated@@1) $generated@@4))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@36 ($generated@@35 $generated@@37 $generated@@38 $generated@@39 $generated@@40)) $generated@@37)
 :pattern ( ($generated@@35 $generated@@37 $generated@@38 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@41 ($generated@@35 $generated@@42 $generated@@43 $generated@@44 $generated@@45)) $generated@@43)
 :pattern ( ($generated@@35 $generated@@42 $generated@@43 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@46 ($generated@@35 $generated@@47 $generated@@48 $generated@@49 $generated@@50)) $generated@@49)
 :pattern ( ($generated@@35 $generated@@47 $generated@@48 $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@51 ($generated@@35 $generated@@52 $generated@@53 $generated@@54 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@35 $generated@@52 $generated@@53 $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and (or (not (= $generated@@62 $generated@@58)) (not true)) (= ($generated@@59 $generated@@62) ($generated@@57 $generated@@61))) ($generated@@60 $generated@@20 ($generated@@24 ($generated@@56 $generated@@62)) $generated@@0))
 :pattern ( ($generated@@56 $generated@@62) ($generated@@57 $generated@@61))
)))
(assert (= ($generated@@18 $generated@@64) 3))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@63 $generated@@64 $generated@@67 ($generated@@65 $generated@@66) $generated@@68) ($generated@@63 $generated@@64 $generated@@67 ($generated@@57 $generated@@66) $generated@@68))
 :pattern ( ($generated@@63 $generated@@64 $generated@@67 ($generated@@65 $generated@@66) $generated@@68))
 :pattern ( ($generated@@63 $generated@@64 $generated@@67 ($generated@@57 $generated@@66) $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@60 $generated@@64 $generated@@70 $generated@@69)  (or (= $generated@@70 $generated@@58) (= ($generated@@59 $generated@@70) $generated@@69)))
 :pattern ( ($generated@@60 $generated@@64 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@63 $generated@@64 $generated@@72 $generated@@71 $generated@@73) ($generated@@63 $generated@@64 $generated@@72 $generated@@69 $generated@@73))
 :pattern ( ($generated@@63 $generated@@64 $generated@@72 $generated@@71 $generated@@73))
 :pattern ( ($generated@@63 $generated@@64 $generated@@72 $generated@@69 $generated@@73))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@75 $generated@@82 $generated@@83 ($generated@@79 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@84) $generated@@86) $generated@@84)
 :weight 0
)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (or (= $generated@@91 $generated@@92) (= ($generated@@75 $generated@@87 $generated@@88 ($generated@@79 $generated@@87 $generated@@88 $generated@@90 $generated@@91 $generated@@89) $generated@@92) ($generated@@75 $generated@@87 $generated@@88 $generated@@90 $generated@@92)))
 :weight 0
))) (= ($generated@@18 $generated@@76) 4)) (= ($generated@@18 $generated@@77) 5)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@18 ($generated@@78 $generated@@93 $generated@@94)) 6))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@80 ($generated@@78 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@78 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@97 $generated@@98))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@63 $generated@@64 $generated@@100 ($generated@@57 $generated@@99) $generated@@101)  (or (= $generated@@100 $generated@@58) ($generated@@23 ($generated@@74 $generated@@19 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@101 $generated@@100) $generated@@5)))))
 :pattern ( ($generated@@63 $generated@@64 $generated@@100 ($generated@@57 $generated@@99) $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@63 $generated@@64 $generated@@102 $generated@@69 $generated@@103)  (or (= $generated@@102 $generated@@58) ($generated@@23 ($generated@@74 $generated@@19 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@103 $generated@@102) $generated@@5)))))
 :pattern ( ($generated@@63 $generated@@64 $generated@@102 $generated@@69 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@104 $generated@@105 $generated@@106) (forall (($generated@@107 T@U) ) (!  (=> ($generated@@23 ($generated@@74 $generated@@19 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@105 $generated@@107) $generated@@5))) ($generated@@23 ($generated@@74 $generated@@19 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@106 $generated@@107) $generated@@5))))
 :pattern ( ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@106 $generated@@107) $generated@@5))
)))
 :pattern ( ($generated@@104 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@109 Int) ) (! (= ($generated@@108 $generated@@109) $generated@@109)
 :pattern ( ($generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@110 $generated@@112 $generated@@111) $generated@@111)
 :pattern ( ($generated@@110 $generated@@112 $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (and (= ($generated@@34 ($generated@@35 $generated@@114 $generated@@115 $generated@@116 $generated@@117)) $generated@@8) (= ($generated@@113 ($generated@@35 $generated@@114 $generated@@115 $generated@@116 $generated@@117)) $generated@@14))
 :pattern ( ($generated@@35 $generated@@114 $generated@@115 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@118 $generated@@120 ($generated@@74 $generated@@120 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@74 $generated@@120 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@60 $generated@@64 $generated@@122 ($generated@@65 $generated@@121))  (and ($generated@@60 $generated@@64 $generated@@122 ($generated@@57 $generated@@121)) (or (not (= $generated@@122 $generated@@58)) (not true))))
 :pattern ( ($generated@@60 $generated@@64 $generated@@122 ($generated@@65 $generated@@121)))
 :pattern ( ($generated@@60 $generated@@64 $generated@@122 ($generated@@57 $generated@@121)))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (!  (=> ($generated@@104 $generated@@123 $generated@@124) (=> ($generated@@63 $generated@@127 $generated@@125 $generated@@126 $generated@@123) ($generated@@63 $generated@@127 $generated@@125 $generated@@126 $generated@@124)))
 :pattern ( ($generated@@104 $generated@@123 $generated@@124) ($generated@@63 $generated@@127 $generated@@125 $generated@@126 $generated@@123))
)))
(assert (forall (($generated@@128 T@U) ) (!  (and (= ($generated@@34 ($generated@@57 $generated@@128)) $generated@@6) (= ($generated@@113 ($generated@@57 $generated@@128)) $generated@@13))
 :pattern ( ($generated@@57 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (and (= ($generated@@34 ($generated@@65 $generated@@129)) $generated@@7) (= ($generated@@113 ($generated@@65 $generated@@129)) $generated@@13))
 :pattern ( ($generated@@65 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (!  (and (= ($generated@@34 ($generated@@130 $generated@@131)) $generated@@9) (= ($generated@@113 ($generated@@130 $generated@@131)) $generated@@15))
 :pattern ( ($generated@@130 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (and (= ($generated@@34 ($generated@@132 $generated@@133)) $generated@@10) (= ($generated@@113 ($generated@@132 $generated@@133)) $generated@@16))
 :pattern ( ($generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@60 $generated@@64 $generated@@135 ($generated@@57 $generated@@134))  (or (= $generated@@135 $generated@@58) (= ($generated@@59 $generated@@135) ($generated@@57 $generated@@134))))
 :pattern ( ($generated@@60 $generated@@64 $generated@@135 ($generated@@57 $generated@@134)))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@60 $generated@@64 $generated@@136 $generated@@71)  (and ($generated@@60 $generated@@64 $generated@@136 $generated@@69) (or (not (= $generated@@136 $generated@@58)) (not true))))
 :pattern ( ($generated@@60 $generated@@64 $generated@@136 $generated@@71))
 :pattern ( ($generated@@60 $generated@@64 $generated@@136 $generated@@69))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (or (not (= $generated@@137 $generated@@139)) (not true)) (=> (and ($generated@@104 $generated@@137 $generated@@138) ($generated@@104 $generated@@138 $generated@@139)) ($generated@@104 $generated@@137 $generated@@139)))
 :pattern ( ($generated@@104 $generated@@137 $generated@@138) ($generated@@104 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (<= 0 ($generated@@56 $generated@@140))
 :pattern ( ($generated@@56 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@141 ($generated@@57 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@57 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@65 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@65 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@130 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@130 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@147 ($generated@@132 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@132 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@74 $generated@@150 ($generated@@118 $generated@@150 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@118 $generated@@150 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and ($generated@@151 $generated@@153) (and (or (not (= $generated@@154 $generated@@58)) (not true)) (= ($generated@@59 $generated@@154) ($generated@@57 $generated@@152)))) ($generated@@23 ($generated@@74 $generated@@19 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@153 $generated@@154) $generated@@5)))) ($generated@@63 $generated@@20 ($generated@@24 ($generated@@56 $generated@@154)) $generated@@0 $generated@@153))
 :pattern ( ($generated@@56 $generated@@154) ($generated@@74 $generated@@19 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@153 $generated@@154) $generated@@5)) ($generated@@57 $generated@@152))
)))
(assert  (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@155 $generated@@158 $generated@@159 $generated@@160 ($generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@155 $generated@@165 $generated@@166 $generated@@167 ($generated@@157 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@155 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@155 $generated@@174 $generated@@175 $generated@@176 ($generated@@157 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@155 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Bool) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@23 ($generated@@155 $generated@@64 $generated@@76 $generated@@19 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))  (=> (and (or (not (= $generated@@187 $generated@@183)) (not true)) ($generated@@23 ($generated@@74 $generated@@19 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@184 $generated@@187) $generated@@185)))) $generated@@186))
 :pattern ( ($generated@@155 $generated@@64 $generated@@76 $generated@@19 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@151 ($generated@@79 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@189 $generated@@190 ($generated@@79 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@189 $generated@@190) $generated@@191 $generated@@192))) ($generated@@104 $generated@@189 ($generated@@79 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@189 $generated@@190 ($generated@@79 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@189 $generated@@190) $generated@@191 $generated@@192))))
 :pattern ( ($generated@@79 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@189 $generated@@190 ($generated@@79 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@189 $generated@@190) $generated@@191 $generated@@192)))
)))
(assert (= ($generated@@34 $generated@@71) $generated@@11))
(assert (= ($generated@@113 $generated@@71) $generated@@17))
(assert (= ($generated@@34 $generated@@69) $generated@@12))
(assert (= ($generated@@113 $generated@@69) $generated@@17))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@118 $generated@@20 ($generated@@24 ($generated@@108 $generated@@193))) ($generated@@110 $generated@@77 ($generated@@118 $generated@@20 ($generated@@24 $generated@@193))))
 :pattern ( ($generated@@118 $generated@@20 ($generated@@24 ($generated@@108 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@T) ) (! (= ($generated@@118 $generated@@195 ($generated@@110 $generated@@195 $generated@@194)) ($generated@@110 $generated@@77 ($generated@@118 $generated@@195 $generated@@194)))
 :pattern ( ($generated@@118 $generated@@195 ($generated@@110 $generated@@195 $generated@@194)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! ($generated@@63 $generated@@20 $generated@@197 $generated@@0 $generated@@196)
 :pattern ( ($generated@@63 $generated@@20 $generated@@197 $generated@@0 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! ($generated@@63 $generated@@21 $generated@@199 $generated@@1 $generated@@198)
 :pattern ( ($generated@@63 $generated@@21 $generated@@199 $generated@@1 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! ($generated@@63 $generated@@19 $generated@@201 $generated $generated@@200)
 :pattern ( ($generated@@63 $generated@@19 $generated@@201 $generated $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ) (! ($generated@@60 $generated@@20 $generated@@202 $generated@@0)
 :pattern ( ($generated@@60 $generated@@20 $generated@@202 $generated@@0))
)))
(assert (forall (($generated@@203 T@U) ) (! ($generated@@60 $generated@@21 $generated@@203 $generated@@1)
 :pattern ( ($generated@@60 $generated@@21 $generated@@203 $generated@@1))
)))
(assert (forall (($generated@@204 T@U) ) (! ($generated@@60 $generated@@19 $generated@@204 $generated)
 :pattern ( ($generated@@60 $generated@@19 $generated@@204 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 (T@U) Bool)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@222  (=> (= $generated@@205 ($generated@@156 $generated@@58 $generated@@206 $generated@@5 false)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (<= 0 ($generated@@108 20))) (=> (<= 0 ($generated@@108 20)) (=> (and (and (and (or (not (= $generated@@207 $generated@@58)) (not true)) ($generated@@60 $generated@@64 $generated@@207 ($generated@@57 ($generated@@130 $generated@@208)))) (not ($generated@@23 ($generated@@74 $generated@@19 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@206 $generated@@207) $generated@@5))))) (and (and (= ($generated@@56 $generated@@207) ($generated@@108 20)) (= $generated@@209 ($generated@@79 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@206 $generated@@207 ($generated@@79 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@206 $generated@@207) $generated@@5 ($generated@@118 $generated@@19 ($generated@@22 true)))))) (and ($generated@@151 $generated@@209) ($generated@@210 $generated@@209)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (<= 0 ($generated@@108 20))) (=> (<= 0 ($generated@@108 20)) (=> (and (and (and (or (not (= $generated@@211 $generated@@58)) (not true)) ($generated@@60 $generated@@64 $generated@@211 ($generated@@57 ($generated@@132 ($generated@@130 $generated@@208))))) (not ($generated@@23 ($generated@@74 $generated@@19 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@209 $generated@@211) $generated@@5))))) (and (and (= ($generated@@56 $generated@@211) ($generated@@108 20)) (= $generated@@212 ($generated@@79 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@209 $generated@@211 ($generated@@79 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@209 $generated@@211) $generated@@5 ($generated@@118 $generated@@19 ($generated@@22 true)))))) (and ($generated@@151 $generated@@212) ($generated@@210 $generated@@212)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (<= 0 ($generated@@108 20))) (=> (<= 0 ($generated@@108 20)) (=> (and (and (and (or (not (= $generated@@213 $generated@@58)) (not true)) ($generated@@60 $generated@@64 $generated@@213 ($generated@@57 ($generated@@130 $generated@@71)))) (not ($generated@@23 ($generated@@74 $generated@@19 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@212 $generated@@213) $generated@@5))))) (and (and (= ($generated@@56 $generated@@213) ($generated@@108 20)) (= $generated@@214 ($generated@@79 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@212 $generated@@213 ($generated@@79 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@212 $generated@@213) $generated@@5 ($generated@@118 $generated@@19 ($generated@@22 true)))))) (and ($generated@@151 $generated@@214) ($generated@@210 $generated@@214)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= 0 ($generated@@108 20))) (=> (<= 0 ($generated@@108 20)) (=> (and (and (and (or (not (= $generated@@215 $generated@@58)) (not true)) ($generated@@60 $generated@@64 $generated@@215 ($generated@@57 ($generated@@35 $generated $generated@@1 ($generated@@132 ($generated@@130 $generated@@208)) $generated@@0)))) (not ($generated@@23 ($generated@@74 $generated@@19 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@214 $generated@@215) $generated@@5))))) (and (and (= ($generated@@56 $generated@@215) ($generated@@108 20)) (= $generated@@216 ($generated@@79 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@214 $generated@@215 ($generated@@79 $generated@@76 $generated@@77 ($generated@@75 $generated@@64 ($generated@@78 $generated@@76 $generated@@77) $generated@@214 $generated@@215) $generated@@5 ($generated@@118 $generated@@19 ($generated@@22 true)))))) (and ($generated@@151 $generated@@216) ($generated@@210 $generated@@216)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@207 $generated@@58)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@211 $generated@@58)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@213 $generated@@58)) (not true))) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= $generated@@215 $generated@@58)) (not true)))))))))))))))))))))
(let (($generated@@223  (=> (and ($generated@@151 $generated@@206) ($generated@@210 $generated@@206)) (=> (and (and ($generated@@60 $generated@@64 $generated@@217 ($generated@@65 ($generated@@130 $generated@@208))) ($generated@@63 $generated@@64 $generated@@217 ($generated@@65 ($generated@@130 $generated@@208)) $generated@@206)) true) (=> (and (and (and (and ($generated@@60 $generated@@64 $generated@@218 ($generated@@65 ($generated@@132 ($generated@@130 $generated@@208)))) ($generated@@63 $generated@@64 $generated@@218 ($generated@@65 ($generated@@132 ($generated@@130 $generated@@208))) $generated@@206)) true) (and (and ($generated@@60 $generated@@64 $generated@@219 ($generated@@65 ($generated@@130 $generated@@71))) ($generated@@63 $generated@@64 $generated@@219 ($generated@@65 ($generated@@130 $generated@@71)) $generated@@206)) true)) (and (and (and ($generated@@60 $generated@@64 $generated@@220 ($generated@@65 ($generated@@35 $generated $generated@@1 ($generated@@132 ($generated@@130 $generated@@208)) $generated@@0))) ($generated@@63 $generated@@64 $generated@@220 ($generated@@65 ($generated@@35 $generated $generated@@1 ($generated@@132 ($generated@@130 $generated@@208)) $generated@@0)) $generated@@206)) true) (and (= 2 $generated@@221) (= (ControlFlow 0 10) 2)))) $generated@@222)))))
$generated@@223)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
