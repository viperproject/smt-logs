(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@T T@T) T@T)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@30 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@31 (T@T) T@T)
(declare-fun $generated@@32 (T@T) T@T)
(declare-fun $generated@@53 (T@T T@U T@U) Bool)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U T@U T@U) Bool)
(declare-fun $generated@@67 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@86 (T@U Int) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@22) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@33 T@T) ($generated@@34 T@T) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@24 $generated@@33 $generated@@34 ($generated@@30 $generated@@33 $generated@@34 $generated@@36 $generated@@37 $generated@@35) $generated@@37) $generated@@35)
 :weight 0
)) (forall (($generated@@38 T@T) ($generated@@39 T@T) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (or (= $generated@@42 $generated@@43) (= ($generated@@24 $generated@@38 $generated@@39 ($generated@@30 $generated@@38 $generated@@39 $generated@@41 $generated@@42 $generated@@40) $generated@@43) ($generated@@24 $generated@@38 $generated@@39 $generated@@41 $generated@@43)))
 :weight 0
))) (= ($generated@@5 $generated@@25) 3)) (= ($generated@@5 $generated@@26) 4)) (= ($generated@@5 $generated@@27) 5)) (forall (($generated@@44 T@T) ($generated@@45 T@T) ) (= ($generated@@5 ($generated@@28 $generated@@44 $generated@@45)) 6))) (forall (($generated@@46 T@T) ($generated@@47 T@T) ) (! (= ($generated@@31 ($generated@@28 $generated@@46 $generated@@47)) $generated@@46)
 :pattern ( ($generated@@28 $generated@@46 $generated@@47))
))) (forall (($generated@@48 T@T) ($generated@@49 T@T) ) (! (= ($generated@@32 ($generated@@28 $generated@@48 $generated@@49)) $generated@@49)
 :pattern ( ($generated@@28 $generated@@48 $generated@@49))
))))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> ($generated@@23 $generated@@50 $generated@@51) (forall (($generated@@52 T@U) ) (!  (=> ($generated@@10 ($generated@@29 $generated@@6 ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@50 $generated@@52) $generated@@0))) ($generated@@10 ($generated@@29 $generated@@6 ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@51 $generated@@52) $generated@@0))))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@51 $generated@@52) $generated@@0))
)))
 :pattern ( ($generated@@23 $generated@@50 $generated@@51))
)))
(assert (= ($generated@@5 $generated@@54) 7))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (and ($generated@@53 $generated@@54 $generated@@58 ($generated@@56 $generated@@60)) ($generated@@57 $generated@@59 $generated@@60)) ($generated@@53 $generated@@54 ($generated@@55 $generated@@58 $generated@@59) ($generated@@56 $generated@@60)))
 :pattern ( ($generated@@53 $generated@@54 ($generated@@55 $generated@@58 $generated@@59) ($generated@@56 $generated@@60)))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 ($generated@@29 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@29 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@21 ($generated@@55 $generated@@64 $generated@@65)) (+ 1 ($generated@@21 $generated@@64)))
 :pattern ( ($generated@@55 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@66 ($generated@@61 $generated@@71 $generated@@68) $generated@@69 $generated@@70) ($generated@@67 $generated@@71 $generated@@68 $generated@@69 $generated@@70))
 :pattern ( ($generated@@66 ($generated@@61 $generated@@71 $generated@@68) $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@23 $generated@@72 $generated@@73) (=> ($generated@@66 $generated@@74 $generated@@75 $generated@@72) ($generated@@66 $generated@@74 $generated@@75 $generated@@73)))
 :pattern ( ($generated@@23 $generated@@72 $generated@@73) ($generated@@66 $generated@@74 $generated@@75 $generated@@72))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (!  (=> ($generated@@23 $generated@@76 $generated@@77) (=> ($generated@@67 $generated@@80 $generated@@78 $generated@@79 $generated@@76) ($generated@@67 $generated@@80 $generated@@78 $generated@@79 $generated@@77)))
 :pattern ( ($generated@@23 $generated@@76 $generated@@77) ($generated@@67 $generated@@80 $generated@@78 $generated@@79 $generated@@76))
)))
(assert (= ($generated@@5 $generated@@82) 8))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@57 $generated@@83 $generated@@81) (and (= ($generated@@61 $generated@@82 ($generated@@29 $generated@@82 $generated@@83)) $generated@@83) ($generated@@53 $generated@@82 ($generated@@29 $generated@@82 $generated@@83) $generated@@81)))
 :pattern ( ($generated@@57 $generated@@83 $generated@@81))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@57 $generated@@85 $generated@@84) (and (= ($generated@@61 $generated@@82 ($generated@@29 $generated@@82 $generated@@85)) $generated@@85) ($generated@@53 $generated@@82 ($generated@@29 $generated@@82 $generated@@85) $generated@@84)))
 :pattern ( ($generated@@57 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 Int) ($generated@@89 T@U) ) (!  (and (=> (= $generated@@88 ($generated@@21 $generated@@87)) (= ($generated@@86 ($generated@@55 $generated@@87 $generated@@89) $generated@@88) $generated@@89)) (=> (or (not (= $generated@@88 ($generated@@21 $generated@@87))) (not true)) (= ($generated@@86 ($generated@@55 $generated@@87 $generated@@89) $generated@@88) ($generated@@86 $generated@@87 $generated@@88))))
 :pattern ( ($generated@@86 ($generated@@55 $generated@@87 $generated@@89) $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or (not (= $generated@@90 $generated@@92)) (not true)) (=> (and ($generated@@23 $generated@@90 $generated@@91) ($generated@@23 $generated@@91 $generated@@92)) ($generated@@23 $generated@@90 $generated@@92)))
 :pattern ( ($generated@@23 $generated@@90 $generated@@91) ($generated@@23 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@57 ($generated@@61 $generated@@95 $generated@@93) $generated@@94) ($generated@@53 $generated@@95 $generated@@93 $generated@@94))
 :pattern ( ($generated@@57 ($generated@@61 $generated@@95 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (<= 0 ($generated@@21 $generated@@96))
 :pattern ( ($generated@@21 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@67 $generated@@54 $generated@@97 ($generated@@56 $generated@@98) $generated@@99) (forall (($generated@@100 Int) ) (!  (=> (and (<= 0 $generated@@100) (< $generated@@100 ($generated@@21 $generated@@97))) ($generated@@66 ($generated@@86 $generated@@97 $generated@@100) $generated@@98 $generated@@99))
 :pattern ( ($generated@@86 $generated@@97 $generated@@100))
)))
 :pattern ( ($generated@@67 $generated@@54 $generated@@97 ($generated@@56 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@101 ($generated@@56 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@56 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 ($generated@@56 $generated@@104)) $generated)
 :pattern ( ($generated@@56 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@29 $generated@@106 ($generated@@61 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@61 $generated@@106 $generated@@105))
)))
(assert  (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@107 $generated@@110 $generated@@111 $generated@@112 ($generated@@109 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@115 $generated@@116) $generated@@113)
 :weight 0
)) (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@107 $generated@@117 $generated@@118 $generated@@119 ($generated@@109 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@107 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@107 $generated@@126 $generated@@127 $generated@@128 ($generated@@109 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@107 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Bool) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@10 ($generated@@107 $generated@@27 $generated@@25 $generated@@6 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))  (=> (and (or (not (= $generated@@139 $generated@@135)) (not true)) ($generated@@10 ($generated@@29 $generated@@6 ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@136 $generated@@139) $generated@@137)))) $generated@@138))
 :pattern ( ($generated@@107 $generated@@27 $generated@@25 $generated@@6 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (and (= ($generated@@141 ($generated@@55 $generated@@143 $generated@@144)) $generated@@143) (= ($generated@@142 ($generated@@55 $generated@@143 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@55 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@57 $generated@@145 ($generated@@56 $generated@@146)) (and (= ($generated@@61 $generated@@54 ($generated@@29 $generated@@54 $generated@@145)) $generated@@145) ($generated@@53 $generated@@54 ($generated@@29 $generated@@54 $generated@@145) ($generated@@56 $generated@@146))))
 :pattern ( ($generated@@57 $generated@@145 ($generated@@56 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and ($generated@@147 $generated@@149) ($generated@@53 $generated@@82 $generated@@148 $generated@@81)) ($generated@@67 $generated@@82 $generated@@148 $generated@@81 $generated@@149))
 :pattern ( ($generated@@67 $generated@@82 $generated@@148 $generated@@81 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@147 $generated@@151) ($generated@@53 $generated@@82 $generated@@150 $generated@@84)) ($generated@@67 $generated@@82 $generated@@150 $generated@@84 $generated@@151))
 :pattern ( ($generated@@67 $generated@@82 $generated@@150 $generated@@84 $generated@@151))
)))
(assert (= ($generated@@103 $generated@@81) $generated@@1))
(assert (= ($generated@@152 $generated@@81) $generated@@3))
(assert (= ($generated@@103 $generated@@84) $generated@@2))
(assert (= ($generated@@152 $generated@@84) $generated@@4))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= ($generated@@21 $generated@@153) 0) (= $generated@@153 $generated@@22))
 :pattern ( ($generated@@21 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@53 $generated@@54 $generated@@154 ($generated@@56 $generated@@155)) (forall (($generated@@156 Int) ) (!  (=> (and (<= 0 $generated@@156) (< $generated@@156 ($generated@@21 $generated@@154))) ($generated@@57 ($generated@@86 $generated@@154 $generated@@156) $generated@@155))
 :pattern ( ($generated@@86 $generated@@154 $generated@@156))
)))
 :pattern ( ($generated@@53 $generated@@54 $generated@@154 ($generated@@56 $generated@@155)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
