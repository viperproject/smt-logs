(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@52 (T@T T@U T@U) Bool)
(declare-fun $generated@@54 (T@U T@U T@U) Bool)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 (T@U Int) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@105 (T@U) Int)
(declare-fun $generated@@106 (T@U) Int)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@113 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 (T@T T@T) T@T)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@T) T@T)
(declare-fun $generated@@119 (T@T) T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@202 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (= ($generated@@30 $generated@@31) 0))
(assert (forall (($generated@@33 Int) ) (! (= ($generated@@32 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@T) ) (! (= ($generated@@34 $generated@@36 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@36 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@37 $generated@@39) (= ($generated@@38 $generated@@39) $generated@@5))
 :pattern ( ($generated@@37 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@40 $generated@@41) (= ($generated@@38 $generated@@41) $generated@@6))
 :pattern ( ($generated@@40 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 ($generated@@42 $generated@@45 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@42 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@47 T@U) ) (!  (=> ($generated@@37 $generated@@47) (exists (($generated@@48 T@U) ) (= $generated@@47 ($generated@@46 $generated@@48))))
 :pattern ( ($generated@@37 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ) (!  (=> ($generated@@40 $generated@@50) (exists (($generated@@51 T@U) ) (= $generated@@50 ($generated@@49 $generated@@51))))
 :pattern ( ($generated@@40 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@52 $generated@@11 $generated@@53 $generated@@27) (<= ($generated@@32 0) ($generated@@16 $generated@@53)))
 :pattern ( ($generated@@52 $generated@@11 $generated@@53 $generated@@27))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@54 ($generated@@43 $generated@@58 $generated@@55) $generated@@56 $generated@@57) ($generated@@26 $generated@@58 $generated@@55 $generated@@56 $generated@@57))
 :pattern ( ($generated@@54 ($generated@@43 $generated@@58 $generated@@55) $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@59 $generated@@60 $generated@@27) (and (= ($generated@@43 $generated@@11 ($generated@@42 $generated@@11 $generated@@60)) $generated@@60) ($generated@@52 $generated@@11 ($generated@@42 $generated@@11 $generated@@60) $generated@@27)))
 :pattern ( ($generated@@59 $generated@@60 $generated@@27))
)))
(assert (= ($generated@@9 $generated@@61) 3))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@52 $generated@@61 $generated@@65 ($generated@@62 $generated@@63 $generated@@64)) (or ($generated@@37 $generated@@65) ($generated@@40 $generated@@65)))
 :pattern ( ($generated@@40 $generated@@65) ($generated@@52 $generated@@61 $generated@@65 ($generated@@62 $generated@@63 $generated@@64)))
 :pattern ( ($generated@@37 $generated@@65) ($generated@@52 $generated@@61 $generated@@65 ($generated@@62 $generated@@63 $generated@@64)))
)))
(assert (= ($generated@@9 $generated@@66) 4))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@59 $generated@@67 $generated) (and (= ($generated@@43 $generated@@66 ($generated@@42 $generated@@66 $generated@@67)) $generated@@67) ($generated@@52 $generated@@66 ($generated@@42 $generated@@66 $generated@@67) $generated)))
 :pattern ( ($generated@@59 $generated@@67 $generated))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@59 ($generated@@43 $generated@@70 $generated@@68) $generated@@69) ($generated@@52 $generated@@70 $generated@@68 $generated@@69))
 :pattern ( ($generated@@59 ($generated@@43 $generated@@70 $generated@@68) $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (<= 0 ($generated@@30 $generated@@71))
 :pattern ( ($generated@@30 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@72 ($generated@@62 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@62 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@75 ($generated@@62 $generated@@76 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@62 $generated@@76 $generated@@77))
)))
(assert (= ($generated@@9 $generated@@78) 5))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@26 $generated@@78 $generated@@81 ($generated@@79 $generated@@82) $generated@@83) (forall (($generated@@84 Int) ) (!  (=> (and (<= 0 $generated@@84) (< $generated@@84 ($generated@@30 $generated@@81))) ($generated@@54 ($generated@@80 $generated@@81 $generated@@84) $generated@@82 $generated@@83))
 :pattern ( ($generated@@80 $generated@@81 $generated@@84))
)))
 :pattern ( ($generated@@26 $generated@@78 $generated@@81 ($generated@@79 $generated@@82) $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@52 $generated@@61 ($generated@@46 $generated@@87) ($generated@@62 $generated@@85 $generated@@86)) ($generated@@59 $generated@@87 $generated@@85))
 :pattern ( ($generated@@52 $generated@@61 ($generated@@46 $generated@@87) ($generated@@62 $generated@@85 $generated@@86)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@52 $generated@@61 ($generated@@49 $generated@@90) ($generated@@62 $generated@@88 $generated@@89)) ($generated@@59 $generated@@90 $generated@@89))
 :pattern ( ($generated@@52 $generated@@61 ($generated@@49 $generated@@90) ($generated@@62 $generated@@88 $generated@@89)))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@91 ($generated@@79 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@79 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@25 ($generated@@79 $generated@@93)) $generated@@1)
 :pattern ( ($generated@@79 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@38 ($generated@@46 $generated@@94)) $generated@@5)
 :pattern ( ($generated@@46 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@95 ($generated@@46 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@46 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@38 ($generated@@49 $generated@@97)) $generated@@6)
 :pattern ( ($generated@@49 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@98 ($generated@@49 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@49 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@42 $generated@@101 ($generated@@43 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@43 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@59 $generated@@104 ($generated@@62 $generated@@102 $generated@@103)) (and (= ($generated@@43 $generated@@61 ($generated@@42 $generated@@61 $generated@@104)) $generated@@104) ($generated@@52 $generated@@61 ($generated@@42 $generated@@61 $generated@@104) ($generated@@62 $generated@@102 $generated@@103))))
 :pattern ( ($generated@@59 $generated@@104 ($generated@@62 $generated@@102 $generated@@103)))
)))
(assert (forall (($generated@@107 T@U) ) (! (< ($generated@@105 $generated@@107) ($generated@@106 ($generated@@46 $generated@@107)))
 :pattern ( ($generated@@46 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (! (< ($generated@@105 $generated@@108) ($generated@@106 ($generated@@49 $generated@@108)))
 :pattern ( ($generated@@49 $generated@@108))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@109 $generated@@120 $generated@@121 $generated@@122 ($generated@@116 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@125 $generated@@126) $generated@@123)
 :weight 0
)) (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@109 $generated@@127 $generated@@128 $generated@@129 ($generated@@116 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@109 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@109 $generated@@136 $generated@@137 $generated@@138 ($generated@@116 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)))) (= ($generated@@9 $generated@@110) 6)) (= ($generated@@9 $generated@@111) 7)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@113 $generated@@145 $generated@@146 ($generated@@117 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@147) $generated@@149) $generated@@147)
 :weight 0
))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@154 $generated@@155) (= ($generated@@113 $generated@@150 $generated@@151 ($generated@@117 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@113 $generated@@150 $generated@@151 $generated@@153 $generated@@155)))
 :weight 0
))) (= ($generated@@9 $generated@@114) 8)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (= ($generated@@9 ($generated@@115 $generated@@156 $generated@@157)) 9))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (! (= ($generated@@118 ($generated@@115 $generated@@158 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@115 $generated@@158 $generated@@159))
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@119 ($generated@@115 $generated@@160 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@115 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Bool) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@14 ($generated@@109 $generated@@110 $generated@@111 $generated@@10 ($generated@@112 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@14 ($generated@@42 $generated@@10 ($generated@@113 $generated@@111 $generated@@114 ($generated@@113 $generated@@110 ($generated@@115 $generated@@111 $generated@@114) $generated@@163 $generated@@166) $generated@@164)))) $generated@@165))
 :pattern ( ($generated@@109 $generated@@110 $generated@@111 $generated@@10 ($generated@@112 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (and (= ($generated@@25 ($generated@@62 $generated@@169 $generated@@170)) $generated@@4) (= ($generated@@168 ($generated@@62 $generated@@169 $generated@@170)) $generated@@8))
 :pattern ( ($generated@@62 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@105 ($generated@@43 $generated@@61 $generated@@171)) ($generated@@106 $generated@@171))
 :pattern ( ($generated@@105 ($generated@@43 $generated@@61 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@59 $generated@@172 ($generated@@79 $generated@@173)) (and (= ($generated@@43 $generated@@78 ($generated@@42 $generated@@78 $generated@@172)) $generated@@172) ($generated@@52 $generated@@78 ($generated@@42 $generated@@78 $generated@@172) ($generated@@79 $generated@@173))))
 :pattern ( ($generated@@59 $generated@@172 ($generated@@79 $generated@@173)))
)))
(assert (= ($generated@@25 $generated@@27) $generated@@3))
(assert (= ($generated@@168 $generated@@27) $generated@@7))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and ($generated@@174 $generated@@177) (and ($generated@@37 $generated@@175) (exists (($generated@@178 T@U) ) (! ($generated@@26 $generated@@61 $generated@@175 ($generated@@62 $generated@@176 $generated@@178) $generated@@177)
 :pattern ( ($generated@@26 $generated@@61 $generated@@175 ($generated@@62 $generated@@176 $generated@@178) $generated@@177))
)))) ($generated@@54 ($generated@@95 $generated@@175) $generated@@176 $generated@@177))
 :pattern ( ($generated@@54 ($generated@@95 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and ($generated@@174 $generated@@181) (and ($generated@@40 $generated@@179) (exists (($generated@@182 T@U) ) (! ($generated@@26 $generated@@61 $generated@@179 ($generated@@62 $generated@@182 $generated@@180) $generated@@181)
 :pattern ( ($generated@@26 $generated@@61 $generated@@179 ($generated@@62 $generated@@182 $generated@@180) $generated@@181))
)))) ($generated@@54 ($generated@@98 $generated@@179) $generated@@180 $generated@@181))
 :pattern ( ($generated@@54 ($generated@@98 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@174 $generated@@186) (= ($generated@@26 $generated@@61 ($generated@@46 $generated@@185) ($generated@@62 $generated@@183 $generated@@184) $generated@@186) ($generated@@54 $generated@@185 $generated@@183 $generated@@186)))
 :pattern ( ($generated@@26 $generated@@61 ($generated@@46 $generated@@185) ($generated@@62 $generated@@183 $generated@@184) $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@174 $generated@@190) (= ($generated@@26 $generated@@61 ($generated@@49 $generated@@189) ($generated@@62 $generated@@187 $generated@@188) $generated@@190) ($generated@@54 $generated@@189 $generated@@188 $generated@@190)))
 :pattern ( ($generated@@26 $generated@@61 ($generated@@49 $generated@@189) ($generated@@62 $generated@@187 $generated@@188) $generated@@190))
)))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@43 $generated@@11 ($generated@@15 ($generated@@32 $generated@@191))) ($generated@@34 $generated@@114 ($generated@@43 $generated@@11 ($generated@@15 $generated@@191))))
 :pattern ( ($generated@@43 $generated@@11 ($generated@@15 ($generated@@32 $generated@@191))))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@46 ($generated@@34 $generated@@114 $generated@@192)) ($generated@@34 $generated@@61 ($generated@@46 $generated@@192)))
 :pattern ( ($generated@@46 ($generated@@34 $generated@@114 $generated@@192)))
)))
(assert (forall (($generated@@193 T@U) ) (! (= ($generated@@49 ($generated@@34 $generated@@114 $generated@@193)) ($generated@@34 $generated@@61 ($generated@@49 $generated@@193)))
 :pattern ( ($generated@@49 ($generated@@34 $generated@@114 $generated@@193)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@T) ) (! (= ($generated@@43 $generated@@195 ($generated@@34 $generated@@195 $generated@@194)) ($generated@@34 $generated@@114 ($generated@@43 $generated@@195 $generated@@194)))
 :pattern ( ($generated@@43 $generated@@195 ($generated@@34 $generated@@195 $generated@@194)))
)))
(assert (forall (($generated@@196 T@U) ) (!  (=> (= ($generated@@30 $generated@@196) 0) (= $generated@@196 $generated@@31))
 :pattern ( ($generated@@30 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! ($generated@@26 $generated@@66 $generated@@198 $generated $generated@@197)
 :pattern ( ($generated@@26 $generated@@66 $generated@@198 $generated $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@52 $generated@@78 $generated@@199 ($generated@@79 $generated@@200)) (forall (($generated@@201 Int) ) (!  (=> (and (<= 0 $generated@@201) (< $generated@@201 ($generated@@30 $generated@@199))) ($generated@@59 ($generated@@80 $generated@@199 $generated@@201) $generated@@200))
 :pattern ( ($generated@@80 $generated@@199 $generated@@201))
)))
 :pattern ( ($generated@@52 $generated@@78 $generated@@199 ($generated@@79 $generated@@200)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 Int) ) (!  (=> (and (<= 0 $generated@@204) (< $generated@@204 ($generated@@30 $generated@@203))) (< ($generated@@106 ($generated@@42 $generated@@61 ($generated@@80 $generated@@203 $generated@@204))) ($generated@@202 $generated@@203)))
 :pattern ( ($generated@@106 ($generated@@42 $generated@@61 ($generated@@80 $generated@@203 $generated@@204))))
)))
(assert (forall (($generated@@205 T@U) ) (! ($generated@@52 $generated@@66 $generated@@205 $generated)
 :pattern ( ($generated@@52 $generated@@66 $generated@@205 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 (T@U) Bool)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@212  (=> (and (= $generated@@206 ($generated@@112 $generated@@207 $generated@@208 $generated@@2 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@52 $generated@@11 ($generated@@15 ($generated@@32 42)) $generated@@27))))
(let (($generated@@213  (=> (and ($generated@@174 $generated@@208) ($generated@@209 $generated@@208)) (=> (and (and (and ($generated@@52 $generated@@61 $generated@@210 ($generated@@62 $generated@@27 ($generated@@79 $generated))) ($generated@@26 $generated@@61 $generated@@210 ($generated@@62 $generated@@27 ($generated@@79 $generated)) $generated@@208)) true) (and (= 0 $generated@@211) (= (ControlFlow 0 3) 2))) $generated@@212))))
$generated@@213)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
