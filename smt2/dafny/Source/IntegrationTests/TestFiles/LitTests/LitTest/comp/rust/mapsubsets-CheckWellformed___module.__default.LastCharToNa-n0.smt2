(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@U Int) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@63 () Int)
(declare-fun $generated@@64 (T@U T@U) Int)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@148 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@152 (T@T T@T) T@T)
(declare-fun $generated@@153 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@231 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ) (!  (not ($generated@@27 $generated@@28 $generated@@29))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29))
)))
(assert (= ($generated@@30 $generated@@28) 0))
(assert (= ($generated@@10 $generated@@32) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@31 $generated@@32 ($generated@@33 $generated@@38 $generated@@39) ($generated@@34 $generated@@36 $generated@@37))  (and ($generated@@35 $generated@@38 $generated@@36) ($generated@@35 $generated@@39 $generated@@37)))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@33 $generated@@38 $generated@@39) ($generated@@34 $generated@@36 $generated@@37)))
)))
(assert (forall (($generated@@41 Int) ) (! (= ($generated@@40 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@T) ) (! (= ($generated@@42 $generated@@44 $generated@@43) $generated@@43)
 :pattern ( ($generated@@42 $generated@@44 $generated@@43))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@45 $generated@@47 $generated@@48)  (and (= ($generated@@30 $generated@@47) ($generated@@30 $generated@@48)) (forall (($generated@@49 Int) ) (!  (=> (and (<= 0 $generated@@49) (< $generated@@49 ($generated@@30 $generated@@47))) (= ($generated@@46 $generated@@47 $generated@@49) ($generated@@46 $generated@@48 $generated@@49)))
 :pattern ( ($generated@@46 $generated@@47 $generated@@49))
 :pattern ( ($generated@@46 $generated@@48 $generated@@49))
))))
 :pattern ( ($generated@@45 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 ($generated@@50 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@50 $generated@@53 $generated@@52))
)))
(assert (= ($generated@@10 $generated@@54) 4))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@31 $generated@@54 $generated@@57 ($generated@@55 $generated@@58)) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@56 $generated@@57 $generated@@59) ($generated@@35 $generated@@59 $generated@@58))
 :pattern ( ($generated@@56 $generated@@57 $generated@@59))
)))
 :pattern ( ($generated@@31 $generated@@54 $generated@@57 ($generated@@55 $generated@@58)))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@31 $generated@@12 $generated@@61 $generated@@60) (<= ($generated@@40 0) ($generated@@17 $generated@@61)))
 :pattern ( ($generated@@31 $generated@@12 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@35 $generated@@62 $generated@@60) (and (= ($generated@@51 $generated@@12 ($generated@@50 $generated@@12 $generated@@62)) $generated@@62) ($generated@@31 $generated@@12 ($generated@@50 $generated@@12 $generated@@62) $generated@@60)))
 :pattern ( ($generated@@35 $generated@@62 $generated@@60))
)))
(assert  (and (and (and (and (and (= ($generated@@10 $generated@@65) 5) (= ($generated@@10 $generated@@66) 6)) (= ($generated@@10 $generated@@71) 7)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@72 $generated@@76 $generated@@77 ($generated@@75 $generated@@76 $generated@@77 $generated@@79 $generated@@80 $generated@@78) $generated@@80) $generated@@78)
 :weight 0
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or (= $generated@@85 $generated@@86) (= ($generated@@72 $generated@@81 $generated@@82 ($generated@@75 $generated@@81 $generated@@82 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@72 $generated@@81 $generated@@82 $generated@@84 $generated@@86)))
 :weight 0
))) (= ($generated@@10 $generated@@73) 8)))
(assert  (=> (<= 0 $generated@@63) (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or ($generated@@67 ($generated@@42 $generated@@65 $generated@@87) ($generated@@42 $generated@@66 $generated@@88)) (and (< 0 $generated@@63) (and (and ($generated@@31 $generated@@65 $generated@@87 ($generated@@68 $generated)) ($generated@@31 $generated@@66 $generated@@88 ($generated@@69 $generated $generated@@60))) (forall (($generated@@89 T@U) ) (!  (=> (and ($generated@@31 $generated@@71 $generated@@89 $generated) ($generated@@27 $generated@@87 ($generated@@51 $generated@@71 $generated@@89))) ($generated@@56 ($generated@@70 $generated@@88) ($generated@@51 $generated@@71 $generated@@89)))
 :pattern ( ($generated@@56 ($generated@@70 $generated@@88) ($generated@@51 $generated@@71 $generated@@89)))
 :pattern ( ($generated@@27 $generated@@87 ($generated@@51 $generated@@71 $generated@@89)))
))))) (= ($generated@@64 ($generated@@42 $generated@@65 $generated@@87) ($generated@@42 $generated@@66 $generated@@88)) (ite ($generated@@45 $generated@@87 $generated@@28) 0 ($generated@@17 ($generated@@50 $generated@@12 ($generated@@72 $generated@@73 $generated@@73 ($generated@@74 ($generated@@42 $generated@@66 $generated@@88)) ($generated@@46 ($generated@@42 $generated@@65 $generated@@87) (- ($generated@@30 ($generated@@42 $generated@@65 $generated@@87)) 1))))))))
 :weight 3
 :pattern ( ($generated@@64 ($generated@@42 $generated@@65 $generated@@87) ($generated@@42 $generated@@66 $generated@@88)))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@27 $generated@@90 $generated@@91) (exists (($generated@@92 Int) ) (!  (and (and (<= 0 $generated@@92) (< $generated@@92 ($generated@@30 $generated@@90))) (= ($generated@@46 $generated@@90 $generated@@92) $generated@@91))
 :pattern ( ($generated@@46 $generated@@90 $generated@@92))
)))
 :pattern ( ($generated@@27 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@45 $generated@@93 $generated@@94) (= $generated@@93 $generated@@94))
 :pattern ( ($generated@@45 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@35 $generated@@95 $generated) (and (= ($generated@@51 $generated@@71 ($generated@@50 $generated@@71 $generated@@95)) $generated@@95) ($generated@@31 $generated@@71 ($generated@@50 $generated@@71 $generated@@95) $generated)))
 :pattern ( ($generated@@35 $generated@@95 $generated))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@35 ($generated@@51 $generated@@98 $generated@@96) $generated@@97) ($generated@@31 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@35 ($generated@@51 $generated@@98 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (<= 0 ($generated@@30 $generated@@99))
 :pattern ( ($generated@@30 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@100 ($generated@@69 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@69 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@103 ($generated@@69 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@69 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@26 ($generated@@69 $generated@@106 $generated@@107)) $generated@@3)
 :pattern ( ($generated@@69 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@108 ($generated@@33 $generated@@109 $generated@@110)) $generated@@6)
 :pattern ( ($generated@@33 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@111 ($generated@@34 $generated@@112 $generated@@113)) $generated@@112)
 :pattern ( ($generated@@34 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@114 ($generated@@34 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@34 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@117 ($generated@@33 $generated@@118 $generated@@119)) $generated@@118)
 :pattern ( ($generated@@33 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@120 ($generated@@33 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@33 $generated@@121 $generated@@122))
)))
(assert  (=> (<= 0 $generated@@63) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (or ($generated@@67 $generated@@123 $generated@@124) (and (< 0 $generated@@63) (and (and ($generated@@31 $generated@@65 $generated@@123 ($generated@@68 $generated)) ($generated@@31 $generated@@66 $generated@@124 ($generated@@69 $generated $generated@@60))) (forall (($generated@@125 T@U) ) (!  (=> (and ($generated@@31 $generated@@71 $generated@@125 $generated) ($generated@@27 $generated@@123 ($generated@@51 $generated@@71 $generated@@125))) ($generated@@56 ($generated@@70 $generated@@124) ($generated@@51 $generated@@71 $generated@@125)))
 :pattern ( ($generated@@56 ($generated@@70 $generated@@124) ($generated@@51 $generated@@71 $generated@@125)))
 :pattern ( ($generated@@27 $generated@@123 ($generated@@51 $generated@@71 $generated@@125)))
))))) (= ($generated@@64 $generated@@123 $generated@@124) (ite ($generated@@45 $generated@@123 $generated@@28) 0 ($generated@@17 ($generated@@50 $generated@@12 ($generated@@72 $generated@@73 $generated@@73 ($generated@@74 $generated@@124) ($generated@@46 $generated@@123 (- ($generated@@30 $generated@@123) 1))))))))
 :pattern ( ($generated@@64 $generated@@123 $generated@@124))
))))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@55 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@55 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@26 ($generated@@55 $generated@@128)) $generated@@1)
 :pattern ( ($generated@@55 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@129 ($generated@@68 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@68 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@26 ($generated@@68 $generated@@131)) $generated@@2)
 :pattern ( ($generated@@68 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@50 $generated@@133 ($generated@@51 $generated@@133 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@51 $generated@@133 $generated@@132))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (< ($generated@@134 $generated@@136) ($generated@@135 ($generated@@33 $generated@@136 $generated@@137)))
 :pattern ( ($generated@@33 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (< ($generated@@134 $generated@@139) ($generated@@135 ($generated@@33 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@33 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (not ($generated@@56 ($generated@@70 $generated@@140) $generated@@141))
 :pattern ( ($generated@@56 ($generated@@70 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@35 $generated@@142 ($generated@@69 $generated@@143 $generated@@144)) (and (= ($generated@@51 $generated@@66 ($generated@@50 $generated@@66 $generated@@142)) $generated@@142) ($generated@@31 $generated@@66 ($generated@@50 $generated@@66 $generated@@142) ($generated@@69 $generated@@143 $generated@@144))))
 :pattern ( ($generated@@35 $generated@@142 ($generated@@69 $generated@@143 $generated@@144)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@35 $generated@@147 ($generated@@34 $generated@@145 $generated@@146)) (and (= ($generated@@51 $generated@@32 ($generated@@50 $generated@@32 $generated@@147)) $generated@@147) ($generated@@31 $generated@@32 ($generated@@50 $generated@@32 $generated@@147) ($generated@@34 $generated@@145 $generated@@146))))
 :pattern ( ($generated@@35 $generated@@147 ($generated@@34 $generated@@145 $generated@@146)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@148 $generated@@156 $generated@@157 $generated@@158 ($generated@@153 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@161 $generated@@162) $generated@@159)
 :weight 0
)) (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@148 $generated@@163 $generated@@164 $generated@@165 ($generated@@153 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@148 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@148 $generated@@172 $generated@@173 $generated@@174 ($generated@@153 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@148 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))) (= ($generated@@10 $generated@@149) 9)) (= ($generated@@10 $generated@@150) 10)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@10 ($generated@@152 $generated@@181 $generated@@182)) 11))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@154 ($generated@@152 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@152 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@155 ($generated@@152 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@152 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@15 ($generated@@148 $generated@@149 $generated@@150 $generated@@11 ($generated@@151 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@15 ($generated@@50 $generated@@11 ($generated@@72 $generated@@150 $generated@@73 ($generated@@72 $generated@@149 ($generated@@152 $generated@@150 $generated@@73) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150 $generated@@11 ($generated@@151 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (and (= ($generated@@26 ($generated@@34 $generated@@194 $generated@@195)) $generated@@7) (= ($generated@@193 ($generated@@34 $generated@@194 $generated@@195)) $generated@@9))
 :pattern ( ($generated@@34 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (!  (or (= $generated@@196 $generated@@140) (exists (($generated@@197 T@U) ) ($generated@@56 ($generated@@70 $generated@@196) $generated@@197)))
 :pattern ( ($generated@@70 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ) (!  (or (= $generated@@199 $generated@@140) (exists (($generated@@200 T@U) ) ($generated@@56 ($generated@@198 $generated@@199) $generated@@200)))
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@56 ($generated@@201 $generated@@202) $generated@@203)  (and ($generated@@56 ($generated@@70 $generated@@202) ($generated@@117 ($generated@@50 $generated@@32 $generated@@203))) (= ($generated@@72 $generated@@73 $generated@@73 ($generated@@74 $generated@@202) ($generated@@117 ($generated@@50 $generated@@32 $generated@@203))) ($generated@@120 ($generated@@50 $generated@@32 $generated@@203)))))
 :pattern ( ($generated@@56 ($generated@@201 $generated@@202) $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@56 ($generated@@198 $generated@@204) $generated@@205) (exists (($generated@@206 T@U) ) (!  (and ($generated@@56 ($generated@@70 $generated@@204) $generated@@206) (= $generated@@205 ($generated@@72 $generated@@73 $generated@@73 ($generated@@74 $generated@@204) $generated@@206)))
 :pattern ( ($generated@@56 ($generated@@70 $generated@@204) $generated@@206))
 :pattern ( ($generated@@72 $generated@@73 $generated@@73 ($generated@@74 $generated@@204) $generated@@206))
)))
 :pattern ( ($generated@@56 ($generated@@198 $generated@@204) $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ) (! (= ($generated@@134 ($generated@@51 $generated@@32 $generated@@207)) ($generated@@135 $generated@@207))
 :pattern ( ($generated@@134 ($generated@@51 $generated@@32 $generated@@207)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@35 $generated@@208 ($generated@@55 $generated@@209)) (and (= ($generated@@51 $generated@@54 ($generated@@50 $generated@@54 $generated@@208)) $generated@@208) ($generated@@31 $generated@@54 ($generated@@50 $generated@@54 $generated@@208) ($generated@@55 $generated@@209))))
 :pattern ( ($generated@@35 $generated@@208 ($generated@@55 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@35 $generated@@210 ($generated@@68 $generated@@211)) (and (= ($generated@@51 $generated@@65 ($generated@@50 $generated@@65 $generated@@210)) $generated@@210) ($generated@@31 $generated@@65 ($generated@@50 $generated@@65 $generated@@210) ($generated@@68 $generated@@211))))
 :pattern ( ($generated@@35 $generated@@210 ($generated@@68 $generated@@211)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@31 $generated@@66 $generated@@212 ($generated@@69 $generated@@213 $generated@@214)) (forall (($generated@@215 T@U) ) (!  (=> ($generated@@56 ($generated@@70 $generated@@212) $generated@@215) (and ($generated@@35 ($generated@@72 $generated@@73 $generated@@73 ($generated@@74 $generated@@212) $generated@@215) $generated@@214) ($generated@@35 $generated@@215 $generated@@213)))
 :pattern ( ($generated@@72 $generated@@73 $generated@@73 ($generated@@74 $generated@@212) $generated@@215))
 :pattern ( ($generated@@56 ($generated@@70 $generated@@212) $generated@@215))
)))
 :pattern ( ($generated@@31 $generated@@66 $generated@@212 ($generated@@69 $generated@@213 $generated@@214)))
)))
(assert (= ($generated@@26 $generated@@60) $generated@@5))
(assert (= ($generated@@193 $generated@@60) $generated@@8))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@33 ($generated@@42 $generated@@73 $generated@@216) ($generated@@42 $generated@@73 $generated@@217)) ($generated@@42 $generated@@32 ($generated@@33 $generated@@216 $generated@@217)))
 :pattern ( ($generated@@33 ($generated@@42 $generated@@73 $generated@@216) ($generated@@42 $generated@@73 $generated@@217)))
)))
(assert (forall (($generated@@218 Int) ) (! (= ($generated@@51 $generated@@12 ($generated@@16 ($generated@@40 $generated@@218))) ($generated@@42 $generated@@73 ($generated@@51 $generated@@12 ($generated@@16 $generated@@218))))
 :pattern ( ($generated@@51 $generated@@12 ($generated@@16 ($generated@@40 $generated@@218))))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@T) ) (! (= ($generated@@51 $generated@@220 ($generated@@42 $generated@@220 $generated@@219)) ($generated@@42 $generated@@73 ($generated@@51 $generated@@220 $generated@@219)))
 :pattern ( ($generated@@51 $generated@@220 ($generated@@42 $generated@@220 $generated@@219)))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= ($generated@@30 $generated@@221) 0) (= $generated@@221 $generated@@28))
 :pattern ( ($generated@@30 $generated@@221))
)))
(assert  (=> (<= 0 $generated@@63) (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (or ($generated@@67 $generated@@222 $generated@@223) (and (< 0 $generated@@63) (and (and ($generated@@31 $generated@@65 $generated@@222 ($generated@@68 $generated)) ($generated@@31 $generated@@66 $generated@@223 ($generated@@69 $generated $generated@@60))) (forall (($generated@@224 T@U) ) (!  (=> (and ($generated@@31 $generated@@71 $generated@@224 $generated) ($generated@@27 $generated@@222 ($generated@@51 $generated@@71 $generated@@224))) ($generated@@56 ($generated@@70 $generated@@223) ($generated@@51 $generated@@71 $generated@@224)))
 :pattern ( ($generated@@56 ($generated@@70 $generated@@223) ($generated@@51 $generated@@71 $generated@@224)))
 :pattern ( ($generated@@27 $generated@@222 ($generated@@51 $generated@@71 $generated@@224)))
))))) (<= ($generated@@40 0) ($generated@@64 $generated@@222 $generated@@223)))
 :pattern ( ($generated@@64 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@31 $generated@@65 $generated@@225 ($generated@@68 $generated@@226)) (forall (($generated@@227 Int) ) (!  (=> (and (<= 0 $generated@@227) (< $generated@@227 ($generated@@30 $generated@@225))) ($generated@@35 ($generated@@46 $generated@@225 $generated@@227) $generated@@226))
 :pattern ( ($generated@@46 $generated@@225 $generated@@227))
)))
 :pattern ( ($generated@@31 $generated@@65 $generated@@225 ($generated@@68 $generated@@226)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (or (= $generated@@228 $generated@@140) (exists (($generated@@229 T@U) ($generated@@230 T@U) ) ($generated@@56 ($generated@@201 $generated@@228) ($generated@@51 $generated@@32 ($generated@@33 $generated@@229 $generated@@230)))))
 :pattern ( ($generated@@201 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 Int) ) (!  (=> (and (<= 0 $generated@@233) (< $generated@@233 ($generated@@30 $generated@@232))) (< ($generated@@135 ($generated@@50 $generated@@32 ($generated@@46 $generated@@232 $generated@@233))) ($generated@@231 $generated@@232)))
 :pattern ( ($generated@@135 ($generated@@50 $generated@@32 ($generated@@46 $generated@@232 $generated@@233))))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> ($generated@@31 $generated@@66 $generated@@234 ($generated@@69 $generated@@235 $generated@@236)) (and (and ($generated@@31 $generated@@54 ($generated@@70 $generated@@234) ($generated@@55 $generated@@235)) ($generated@@31 $generated@@54 ($generated@@198 $generated@@234) ($generated@@55 $generated@@236))) ($generated@@31 $generated@@54 ($generated@@201 $generated@@234) ($generated@@55 ($generated@@34 $generated@@235 $generated@@236)))))
 :pattern ( ($generated@@31 $generated@@66 $generated@@234 ($generated@@69 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@237 T@U) ) (! ($generated@@31 $generated@@71 $generated@@237 $generated)
 :pattern ( ($generated@@31 $generated@@71 $generated@@237 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@246  (=> (not ($generated@@45 $generated@@238 $generated@@28)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 (- ($generated@@30 $generated@@238) 1)) (< (- ($generated@@30 $generated@@238) 1) ($generated@@30 $generated@@238)))) (=> (and (<= 0 (- ($generated@@30 $generated@@238) 1)) (< (- ($generated@@30 $generated@@238) 1) ($generated@@30 $generated@@238))) (=> (= (ControlFlow 0 5) (- 0 4)) ($generated@@56 ($generated@@70 $generated@@239) ($generated@@46 $generated@@238 (- ($generated@@30 $generated@@238) 1)))))))))
(let (($generated@@247  (=> (and ($generated@@45 $generated@@238 $generated@@28) (= (ControlFlow 0 3) (- 0 2))) ($generated@@31 $generated@@12 ($generated@@16 ($generated@@40 0)) $generated@@60))))
(let (($generated@@248 true))
(let (($generated@@249  (=> (forall (($generated@@250 T@U) ) (!  (=> (and ($generated@@31 $generated@@71 $generated@@250 $generated) ($generated@@27 $generated@@238 ($generated@@51 $generated@@71 $generated@@250))) ($generated@@56 ($generated@@70 $generated@@239) ($generated@@51 $generated@@71 $generated@@250)))
 :pattern ( ($generated@@56 ($generated@@70 $generated@@239) ($generated@@51 $generated@@71 $generated@@250)))
 :pattern ( ($generated@@27 $generated@@238 ($generated@@51 $generated@@71 $generated@@250)))
)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@248) (=> (= (ControlFlow 0 7) 3) $generated@@247)) (=> (= (ControlFlow 0 7) 5) $generated@@246)))))
(let (($generated@@251  (=> (and (=> ($generated@@27 $generated@@238 ($generated@@51 $generated@@71 $generated@@240)) ($generated@@56 ($generated@@70 $generated@@239) ($generated@@51 $generated@@71 $generated@@240))) (= (ControlFlow 0 9) 7)) $generated@@249)))
(let (($generated@@252  (=> ($generated@@27 $generated@@238 ($generated@@51 $generated@@71 $generated@@240)) (=> (and ($generated@@56 ($generated@@70 $generated@@239) ($generated@@51 $generated@@71 $generated@@240)) (= (ControlFlow 0 8) 7)) $generated@@249))))
(let (($generated@@253  (=> (and (= $generated@@241 ($generated@@151 $generated@@242 $generated@@243 $generated@@4 false)) ($generated@@31 $generated@@71 $generated@@240 $generated)) (and (=> (= (ControlFlow 0 10) 8) $generated@@252) (=> (= (ControlFlow 0 10) 9) $generated@@251)))))
(let (($generated@@254  (=> (and ($generated@@244 $generated@@243) ($generated@@245 $generated@@243)) (=> (and (and ($generated@@31 $generated@@65 $generated@@238 ($generated@@68 $generated)) ($generated@@31 $generated@@66 $generated@@239 ($generated@@69 $generated $generated@@60))) (and (= 0 $generated@@63) (= (ControlFlow 0 11) 10))) $generated@@253))))
$generated@@254)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
