(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U) T@U)
(declare-fun $generated@@19 (Int) Int)
(declare-fun $generated@@21 (T@T T@U) T@U)
(declare-fun $generated@@24 (T@T T@U) T@U)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@33 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@92 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (= ($generated@@18 $generated) $generated@@0))
(assert (forall (($generated@@20 Int) ) (! (= ($generated@@19 $generated@@20) $generated@@20)
 :pattern ( ($generated@@19 $generated@@20))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@T) ) (! (= ($generated@@21 $generated@@23 $generated@@22) $generated@@22)
 :pattern ( ($generated@@21 $generated@@23 $generated@@22))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@T) ) (! (= ($generated@@25 $generated@@27 ($generated@@24 $generated@@27 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@24 $generated@@27 $generated@@26))
)))
(assert  (=> (< 0 $generated@@28) ($generated@@29 $generated@@4 ($generated@@8 $generated@@30) $generated)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@T) ) (! (= ($generated@@24 $generated@@32 ($generated@@25 $generated@@32 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@32 $generated@@31))
)))
(assert (= $generated@@30 ($generated@@19 18446744073709551616)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@33 $generated@@44 $generated@@45 $generated@@46 ($generated@@40 $generated@@44 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@50 $generated@@47) $generated@@49 $generated@@50) $generated@@47)
 :weight 0
)) (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@56 $generated@@58) (= ($generated@@33 $generated@@51 $generated@@52 $generated@@53 ($generated@@40 $generated@@51 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@57 $generated@@54) $generated@@58 $generated@@59) ($generated@@33 $generated@@51 $generated@@52 $generated@@53 $generated@@55 $generated@@58 $generated@@59)))
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (or (= $generated@@66 $generated@@68) (= ($generated@@33 $generated@@60 $generated@@61 $generated@@62 ($generated@@40 $generated@@60 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@66 $generated@@63) $generated@@67 $generated@@68) ($generated@@33 $generated@@60 $generated@@61 $generated@@62 $generated@@64 $generated@@67 $generated@@68)))
 :weight 0
)))) (= ($generated@@2 $generated@@34) 3)) (= ($generated@@2 $generated@@35) 4)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@37 $generated@@69 $generated@@70 ($generated@@41 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@73) $generated@@71)
 :weight 0
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (or (= $generated@@78 $generated@@79) (= ($generated@@37 $generated@@74 $generated@@75 ($generated@@41 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@79) ($generated@@37 $generated@@74 $generated@@75 $generated@@77 $generated@@79)))
 :weight 0
))) (= ($generated@@2 $generated@@38) 5)) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@2 ($generated@@39 $generated@@80 $generated@@81)) 6))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@39 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@43 ($generated@@39 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@39 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Bool) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@7 ($generated@@33 $generated@@34 $generated@@35 $generated@@3 ($generated@@36 $generated@@86 $generated@@87 $generated@@88 $generated@@89) $generated@@90 $generated@@91))  (=> (and (or (not (= $generated@@90 $generated@@86)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@37 $generated@@35 $generated@@38 ($generated@@37 $generated@@34 ($generated@@39 $generated@@35 $generated@@38) $generated@@87 $generated@@90) $generated@@88)))) $generated@@89))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35 $generated@@3 ($generated@@36 $generated@@86 $generated@@87 $generated@@88 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 Int) ($generated@@94 Int) ) (! (= ($generated@@92 $generated@@93 $generated@@94) (* $generated@@93 $generated@@94))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@25 $generated@@4 ($generated@@8 ($generated@@19 $generated@@95))) ($generated@@21 $generated@@38 ($generated@@25 $generated@@4 ($generated@@8 $generated@@95))))
 :pattern ( ($generated@@25 $generated@@4 ($generated@@8 ($generated@@19 $generated@@95))))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@25 $generated@@97 ($generated@@21 $generated@@97 $generated@@96)) ($generated@@21 $generated@@38 ($generated@@25 $generated@@97 $generated@@96)))
 :pattern ( ($generated@@25 $generated@@97 ($generated@@21 $generated@@97 $generated@@96)))
)))
(assert (forall (($generated@@98 T@U) ) (! ($generated@@29 $generated@@4 $generated@@98 $generated)
 :pattern ( ($generated@@29 $generated@@4 $generated@@98 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@99 () Int)
(declare-fun $generated@@100 () Int)
(declare-fun $generated@@101 () Int)
(declare-fun $generated@@102 () (_ BitVec 64))
(declare-fun $generated@@103 () Int)
(declare-fun $generated@@104 () Int)
(declare-fun $generated@@105 () (_ BitVec 64))
(declare-fun $generated@@106 () Int)
(declare-fun $generated@@107 () Int)
(declare-fun $generated@@108 () Int)
(declare-fun $generated@@109 () Int)
(declare-fun $generated@@110 () Int)
(declare-fun $generated@@111 () Int)
(declare-fun $generated@@112 () T@U)
(declare-fun $generated@@113 () T@U)
(declare-fun $generated@@114 () T@U)
(declare-fun $generated@@115 () Int)
(declare-fun $generated@@116 () Int)
(declare-fun $generated@@117 () Int)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 () Int)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 () Int)
(declare-fun $generated@@123 () Int)
(declare-fun $generated@@124 () Int)
(declare-fun $generated@@125 () Int)
(declare-fun $generated@@126 () Int)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 () Int)
(declare-fun $generated@@129 () Int)
(declare-fun $generated@@130 () Int)
(declare-fun $generated@@131 () Int)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 () Int)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 57) (let (($generated@@142 true))
(let (($generated@@143 true))
(let (($generated@@144  (=> (= (bvlshr ((_ int2bv 64) $generated@@99) (concat #b000000000000000000000000000000000000000000000000000000000 ((_ extract 6 0) ((_ int2bv 64) $generated@@100)))) ((_ int2bv 64) $generated@@100)) (and (=> (= (ControlFlow 0 10) (- 0 15)) (and (<= 0 $generated@@99) (< $generated@@99 18446744073709551616))) (=> (and (<= 0 $generated@@99) (< $generated@@99 18446744073709551616)) (and (=> (= (ControlFlow 0 10) (- 0 14)) (and (<= 0 $generated@@101) (< $generated@@101 18446744073709551616))) (=> (and (<= 0 $generated@@101) (< $generated@@101 18446744073709551616)) (=> (= $generated@@102 ((_ int2bv 64) $generated@@101)) (and (=> (= (ControlFlow 0 10) (- 0 13)) (bvult $generated@@102 #x0000000000000080)) (=> (bvult $generated@@102 #x0000000000000080) (and (=> (= (ControlFlow 0 10) (- 0 12)) (bvule ((_ extract 6 0) ((_ int2bv 64) $generated@@101)) #b1000000)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 $generated@@103) (< $generated@@103 18446744073709551616))) (=> (and (<= 0 $generated@@103) (< $generated@@103 18446744073709551616)) (and (=> (= (ControlFlow 0 10) 8) $generated@@143) (=> (= (ControlFlow 0 10) 9) $generated@@142)))))))))))))))
(let (($generated@@145 true))
(let (($generated@@146  (=> (= ($generated@@92 $generated@@99 ($generated@@19 3)) $generated@@104) (and (=> (= (ControlFlow 0 16) (- 0 21)) (and (<= 0 $generated@@99) (< $generated@@99 18446744073709551616))) (=> (and (<= 0 $generated@@99) (< $generated@@99 18446744073709551616)) (and (=> (= (ControlFlow 0 16) (- 0 20)) (and (<= 0 $generated@@100) (< $generated@@100 18446744073709551616))) (=> (and (<= 0 $generated@@100) (< $generated@@100 18446744073709551616)) (=> (= $generated@@105 ((_ int2bv 64) $generated@@100)) (and (=> (= (ControlFlow 0 16) (- 0 19)) (bvult $generated@@105 #x0000000000000080)) (=> (bvult $generated@@105 #x0000000000000080) (and (=> (= (ControlFlow 0 16) (- 0 18)) (bvule ((_ extract 6 0) ((_ int2bv 64) $generated@@100)) #b1000000)) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= 0 $generated@@100) (< $generated@@100 18446744073709551616))) (=> (and (<= 0 $generated@@100) (< $generated@@100 18446744073709551616)) (and (=> (= (ControlFlow 0 16) 7) $generated@@145) (=> (= (ControlFlow 0 16) 10) $generated@@144)))))))))))))))
(let (($generated@@147 true))
(let (($generated@@148  (=> (and (= (bvxor ((_ int2bv 64) $generated@@99) ((_ int2bv 64) $generated@@106)) ((_ int2bv 64) $generated@@107)) (= $generated@@108 ($generated@@19 3))) (and (=> (= (ControlFlow 0 22) (- 0 24)) (and (<= ($generated@@19 0) $generated@@108) (< $generated@@108 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@108) (< $generated@@108 $generated@@30)) (=> (= $generated@@109 ($generated@@92 $generated@@99 ($generated@@19 3))) (and (=> (= (ControlFlow 0 22) (- 0 23)) (and (<= ($generated@@19 0) $generated@@109) (< $generated@@109 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@109) (< $generated@@109 $generated@@30)) (and (=> (= (ControlFlow 0 22) 6) $generated@@147) (=> (= (ControlFlow 0 22) 16) $generated@@146))))))))))
(let (($generated@@149 true))
(let (($generated@@150  (=> (= (bvor ((_ int2bv 64) $generated@@99) ((_ int2bv 64) $generated@@106)) ((_ int2bv 64) $generated@@106)) (and (=> (= (ControlFlow 0 25) (- 0 28)) (and (<= 0 $generated@@99) (< $generated@@99 18446744073709551616))) (=> (and (<= 0 $generated@@99) (< $generated@@99 18446744073709551616)) (and (=> (= (ControlFlow 0 25) (- 0 27)) (and (<= 0 $generated@@106) (< $generated@@106 18446744073709551616))) (=> (and (<= 0 $generated@@106) (< $generated@@106 18446744073709551616)) (and (=> (= (ControlFlow 0 25) (- 0 26)) (and (<= 0 $generated@@107) (< $generated@@107 18446744073709551616))) (=> (and (<= 0 $generated@@107) (< $generated@@107 18446744073709551616)) (and (=> (= (ControlFlow 0 25) 5) $generated@@149) (=> (= (ControlFlow 0 25) 22) $generated@@148)))))))))))
(let (($generated@@151 true))
(let (($generated@@152  (=> (= (bvand ((_ int2bv 64) $generated@@99) ((_ int2bv 64) $generated@@106)) ((_ int2bv 64) $generated@@99)) (and (=> (= (ControlFlow 0 29) (- 0 32)) (and (<= 0 $generated@@99) (< $generated@@99 18446744073709551616))) (=> (and (<= 0 $generated@@99) (< $generated@@99 18446744073709551616)) (and (=> (= (ControlFlow 0 29) (- 0 31)) (and (<= 0 $generated@@106) (< $generated@@106 18446744073709551616))) (=> (and (<= 0 $generated@@106) (< $generated@@106 18446744073709551616)) (and (=> (= (ControlFlow 0 29) (- 0 30)) (and (<= 0 $generated@@106) (< $generated@@106 18446744073709551616))) (=> (and (<= 0 $generated@@106) (< $generated@@106 18446744073709551616)) (and (=> (= (ControlFlow 0 29) 4) $generated@@151) (=> (= (ControlFlow 0 29) 25) $generated@@150)))))))))))
(let (($generated@@153 true))
(let (($generated@@154  (=> (= (- $generated@@106 $generated@@99) $generated@@107) (and (=> (= (ControlFlow 0 33) (- 0 36)) (and (<= 0 $generated@@99) (< $generated@@99 18446744073709551616))) (=> (and (<= 0 $generated@@99) (< $generated@@99 18446744073709551616)) (and (=> (= (ControlFlow 0 33) (- 0 35)) (and (<= 0 $generated@@106) (< $generated@@106 18446744073709551616))) (=> (and (<= 0 $generated@@106) (< $generated@@106 18446744073709551616)) (and (=> (= (ControlFlow 0 33) (- 0 34)) (and (<= 0 $generated@@99) (< $generated@@99 18446744073709551616))) (=> (and (<= 0 $generated@@99) (< $generated@@99 18446744073709551616)) (and (=> (= (ControlFlow 0 33) 3) $generated@@153) (=> (= (ControlFlow 0 33) 29) $generated@@152)))))))))))
(let (($generated@@155 true))
(let (($generated@@156  (=> (and (= (+ $generated@@99 $generated@@106) $generated@@110) (= $generated@@111 (- $generated@@106 $generated@@99))) (and (=> (= (ControlFlow 0 37) (- 0 38)) (and (<= ($generated@@19 0) $generated@@111) (< $generated@@111 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@111) (< $generated@@111 $generated@@30)) (and (=> (= (ControlFlow 0 37) 2) $generated@@155) (=> (= (ControlFlow 0 37) 33) $generated@@154)))))))
(let (($generated@@157 true))
(let (($generated@@158  (=> (and (= $generated@@112 ($generated@@36 $generated@@113 $generated@@114 $generated@@1 false)) (= $generated@@115 ($generated@@19 1))) (and (=> (= (ControlFlow 0 39) (- 0 56)) (and (<= ($generated@@19 0) $generated@@115) (< $generated@@115 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@115) (< $generated@@115 $generated@@30)) (=> (= $generated@@116 ($generated@@19 1)) (and (=> (= (ControlFlow 0 39) (- 0 55)) (and (<= ($generated@@19 0) $generated@@116) (< $generated@@116 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@116) (< $generated@@116 $generated@@30)) (=> (and (= $generated@@101 ($generated@@19 1)) (= $generated@@117 ($generated@@19 2))) (and (=> (= (ControlFlow 0 39) (- 0 54)) (and (<= ($generated@@19 0) $generated@@117) (< $generated@@117 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@117) (< $generated@@117 $generated@@30)) (=> (= $generated@@118 ($generated@@19 2)) (and (=> (= (ControlFlow 0 39) (- 0 53)) (and (<= ($generated@@19 0) $generated@@118) (< $generated@@118 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@118) (< $generated@@118 $generated@@30)) (=> (and (= $generated@@100 ($generated@@19 2)) (= $generated@@119 ($generated@@19 5))) (and (=> (= (ControlFlow 0 39) (- 0 52)) (and (<= ($generated@@19 0) $generated@@119) (< $generated@@119 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@119) (< $generated@@119 $generated@@30)) (=> (= $generated@@120 ($generated@@19 5)) (and (=> (= (ControlFlow 0 39) (- 0 51)) (and (<= ($generated@@19 0) $generated@@120) (< $generated@@120 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@120) (< $generated@@120 $generated@@30)) (=> (and (= $generated@@107 ($generated@@19 5)) (= $generated@@121 ($generated@@19 8))) (and (=> (= (ControlFlow 0 39) (- 0 50)) (and (<= ($generated@@19 0) $generated@@121) (< $generated@@121 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@121) (< $generated@@121 $generated@@30)) (=> (= $generated@@122 ($generated@@19 8)) (and (=> (= (ControlFlow 0 39) (- 0 49)) (and (<= ($generated@@19 0) $generated@@122) (< $generated@@122 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@122) (< $generated@@122 $generated@@30)) (=> (and (= $generated@@99 ($generated@@19 8)) (= $generated@@123 ($generated@@19 13))) (and (=> (= (ControlFlow 0 39) (- 0 48)) (and (<= ($generated@@19 0) $generated@@123) (< $generated@@123 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@123) (< $generated@@123 $generated@@30)) (=> (= $generated@@124 ($generated@@19 13)) (and (=> (= (ControlFlow 0 39) (- 0 47)) (and (<= ($generated@@19 0) $generated@@124) (< $generated@@124 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@124) (< $generated@@124 $generated@@30)) (=> (and (= $generated@@106 ($generated@@19 13)) (= $generated@@125 ($generated@@19 21))) (and (=> (= (ControlFlow 0 39) (- 0 46)) (and (<= ($generated@@19 0) $generated@@125) (< $generated@@125 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@125) (< $generated@@125 $generated@@30)) (=> (= $generated@@126 ($generated@@19 21)) (and (=> (= (ControlFlow 0 39) (- 0 45)) (and (<= ($generated@@19 0) $generated@@126) (< $generated@@126 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@126) (< $generated@@126 $generated@@30)) (=> (and (= $generated@@110 ($generated@@19 21)) (= $generated@@127 ($generated@@19 24))) (and (=> (= (ControlFlow 0 39) (- 0 44)) (and (<= ($generated@@19 0) $generated@@127) (< $generated@@127 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@127) (< $generated@@127 $generated@@30)) (=> (= $generated@@128 ($generated@@19 24)) (and (=> (= (ControlFlow 0 39) (- 0 43)) (and (<= ($generated@@19 0) $generated@@128) (< $generated@@128 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@128) (< $generated@@128 $generated@@30)) (=> (and (= $generated@@104 ($generated@@19 24)) (= $generated@@129 ($generated@@19 16))) (and (=> (= (ControlFlow 0 39) (- 0 42)) (and (<= ($generated@@19 0) $generated@@129) (< $generated@@129 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@129) (< $generated@@129 $generated@@30)) (=> (= $generated@@130 ($generated@@19 16)) (and (=> (= (ControlFlow 0 39) (- 0 41)) (and (<= ($generated@@19 0) $generated@@130) (< $generated@@130 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@130) (< $generated@@130 $generated@@30)) (=> (and (= $generated@@103 ($generated@@19 16)) (= $generated@@131 (+ $generated@@99 $generated@@106))) (and (=> (= (ControlFlow 0 39) (- 0 40)) (and (<= ($generated@@19 0) $generated@@131) (< $generated@@131 $generated@@30))) (=> (and (<= ($generated@@19 0) $generated@@131) (< $generated@@131 $generated@@30)) (and (=> (= (ControlFlow 0 39) 1) $generated@@157) (=> (= (ControlFlow 0 39) 37) $generated@@156)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@159  (=> (and ($generated@@132 $generated@@114) ($generated@@133 $generated@@114)) (=> (and (and (<= ($generated@@19 0) $generated@@134) (< $generated@@134 $generated@@30)) true) (=> (and (and (and (and (and (<= ($generated@@19 0) $generated@@135) (< $generated@@135 $generated@@30)) true) (and (and (<= ($generated@@19 0) $generated@@136) (< $generated@@136 $generated@@30)) true)) (and (and (and (<= ($generated@@19 0) $generated@@137) (< $generated@@137 $generated@@30)) true) (and (and (<= ($generated@@19 0) $generated@@138) (< $generated@@138 $generated@@30)) true))) (and (and (and (and (<= ($generated@@19 0) $generated@@139) (< $generated@@139 $generated@@30)) true) (and (and (<= ($generated@@19 0) $generated@@140) (< $generated@@140 $generated@@30)) true)) (and (and (and (<= ($generated@@19 0) $generated@@141) (< $generated@@141 $generated@@30)) true) (and (= 2 $generated@@28) (= (ControlFlow 0 57) 39))))) $generated@@158)))))
$generated@@159)))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
