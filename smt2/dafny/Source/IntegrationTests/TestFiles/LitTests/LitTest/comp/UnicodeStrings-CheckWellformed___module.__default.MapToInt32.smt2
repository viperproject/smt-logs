(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U Int) T@U)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@52 (T@U Int) T@U)
(declare-fun $generated@@56 () Int)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U) Int)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@70 (T@U) Int)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@114 (Int) T@U)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@T T@T) T@T)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (= ($generated@@26 $generated@@27) 0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 Int) ) (!  (=> (and (<= 0 $generated@@32) (<= $generated@@32 ($generated@@26 $generated@@30))) (= ($generated@@28 ($generated@@29 $generated@@30 $generated@@31) $generated@@32) ($generated@@29 ($generated@@28 $generated@@30 $generated@@32) $generated@@31)))
 :pattern ( ($generated@@28 ($generated@@29 $generated@@30 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 Int) ) (!  (=> (= $generated@@37 ($generated@@26 $generated@@35)) (and (= ($generated@@33 ($generated@@34 $generated@@35 $generated@@36) $generated@@37) $generated@@35) (= ($generated@@28 ($generated@@34 $generated@@35 $generated@@36) $generated@@37) $generated@@36)))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@35 $generated@@36) $generated@@37))
 :pattern ( ($generated@@28 ($generated@@34 $generated@@35 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 Int) ) (!  (=> (= $generated@@39 0) (= ($generated@@28 $generated@@38 $generated@@39) $generated@@38))
 :pattern ( ($generated@@28 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 Int) ) (! (= ($generated@@40 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@T) ) (! (= ($generated@@42 $generated@@44 $generated@@43) $generated@@43)
 :pattern ( ($generated@@42 $generated@@44 $generated@@43))
)))
(assert (= ($generated@@5 $generated@@46) 3))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (and ($generated@@45 $generated@@46 $generated@@49 ($generated@@47 $generated@@51)) ($generated@@48 $generated@@50 $generated@@51)) ($generated@@45 $generated@@46 ($generated@@29 $generated@@49 $generated@@50) ($generated@@47 $generated@@51)))
 :pattern ( ($generated@@45 $generated@@46 ($generated@@29 $generated@@49 $generated@@50) ($generated@@47 $generated@@51)))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 Int) ($generated@@55 Int) ) (!  (=> (and (and (<= 0 $generated@@55) (< $generated@@55 $generated@@54)) (< $generated@@55 ($generated@@26 $generated@@53))) (= ($generated@@52 ($generated@@33 $generated@@53 $generated@@54) $generated@@55) ($generated@@52 $generated@@53 $generated@@55)))
 :weight 25
 :pattern ( ($generated@@52 ($generated@@33 $generated@@53 $generated@@54) $generated@@55))
 :pattern ( ($generated@@52 $generated@@53 $generated@@55) ($generated@@33 $generated@@53 $generated@@54))
)))
(assert (= ($generated@@5 $generated@@63) 4))
(assert  (=> (<= 1 $generated@@56) (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (or ($generated@@59 $generated@@65) (and (< 1 $generated@@56) ($generated@@45 $generated@@46 $generated@@65 ($generated@@47 $generated)))) (and (=> (or (not (= ($generated@@40 0) ($generated@@26 $generated@@65))) (not true)) ($generated@@59 ($generated@@28 $generated@@65 ($generated@@40 1)))) (= ($generated@@57 ($generated@@58 $generated@@64) $generated@@65) (ite (= ($generated@@40 0) ($generated@@26 $generated@@65)) $generated@@27 ($generated@@34 ($generated@@29 $generated@@27 ($generated@@60 $generated@@7 ($generated@@11 ($generated@@61 ($generated@@62 $generated@@63 ($generated@@52 $generated@@65 ($generated@@40 0))))))) ($generated@@57 $generated@@64 ($generated@@28 $generated@@65 ($generated@@40 1))))))))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@64) $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 Int) ) (!  (=> (and (<= 0 $generated@@67) (<= $generated@@67 ($generated@@26 $generated@@66))) (= ($generated@@26 ($generated@@28 $generated@@66 $generated@@67)) (- ($generated@@26 $generated@@66) $generated@@67)))
 :pattern ( ($generated@@26 ($generated@@28 $generated@@66 $generated@@67)))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@60 $generated@@69 ($generated@@62 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@62 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 Int) ) (!  (=> (and (<= 0 $generated@@72) (< $generated@@72 ($generated@@26 $generated@@71))) (< ($generated@@70 ($generated@@33 $generated@@71 $generated@@72)) ($generated@@70 $generated@@71)))
 :pattern ( ($generated@@70 ($generated@@33 $generated@@71 $generated@@72)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 Int) ) (!  (=> (and (< 0 $generated@@74) (<= $generated@@74 ($generated@@26 $generated@@73))) (< ($generated@@70 ($generated@@28 $generated@@73 $generated@@74)) ($generated@@70 $generated@@73)))
 :pattern ( ($generated@@70 ($generated@@28 $generated@@73 $generated@@74)))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@26 ($generated@@29 $generated@@75 $generated@@76)) (+ 1 ($generated@@26 $generated@@75)))
 :pattern ( ($generated@@29 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@60 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@22 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@60 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 Int) ($generated@@84 Int) ) (!  (=> (and (and (<= 0 $generated@@83) (<= 0 $generated@@84)) (< $generated@@84 (- ($generated@@26 $generated@@82) $generated@@83))) (= ($generated@@52 ($generated@@28 $generated@@82 $generated@@83) $generated@@84) ($generated@@52 $generated@@82 (+ $generated@@84 $generated@@83))))
 :weight 25
 :pattern ( ($generated@@52 ($generated@@28 $generated@@82 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@26 ($generated@@34 $generated@@85 $generated@@86)) (+ ($generated@@26 $generated@@85) ($generated@@26 $generated@@86)))
 :pattern ( ($generated@@26 ($generated@@34 $generated@@85 $generated@@86)))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@48 $generated@@87 $generated@@23) (and (= ($generated@@60 $generated@@7 ($generated@@62 $generated@@7 $generated@@87)) $generated@@87) ($generated@@45 $generated@@7 ($generated@@62 $generated@@7 $generated@@87) $generated@@23)))
 :pattern ( ($generated@@48 $generated@@87 $generated@@23))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 Int) ($generated@@90 T@U) ) (!  (and (=> (= $generated@@89 ($generated@@26 $generated@@88)) (= ($generated@@52 ($generated@@29 $generated@@88 $generated@@90) $generated@@89) $generated@@90)) (=> (or (not (= $generated@@89 ($generated@@26 $generated@@88))) (not true)) (= ($generated@@52 ($generated@@29 $generated@@88 $generated@@90) $generated@@89) ($generated@@52 $generated@@88 $generated@@89))))
 :pattern ( ($generated@@52 ($generated@@29 $generated@@88 $generated@@90) $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (and (<= 0 $generated@@92) (<= $generated@@92 ($generated@@26 $generated@@91))) (= ($generated@@26 ($generated@@33 $generated@@91 $generated@@92)) $generated@@92))
 :pattern ( ($generated@@26 ($generated@@33 $generated@@91 $generated@@92)))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@48 $generated@@93 $generated) (and (= ($generated@@60 $generated@@63 ($generated@@62 $generated@@63 $generated@@93)) $generated@@93) ($generated@@45 $generated@@63 ($generated@@62 $generated@@63 $generated@@93) $generated)))
 :pattern ( ($generated@@48 $generated@@93 $generated))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@48 ($generated@@60 $generated@@96 $generated@@94) $generated@@95) ($generated@@45 $generated@@96 $generated@@94 $generated@@95))
 :pattern ( ($generated@@48 ($generated@@60 $generated@@96 $generated@@94) $generated@@95))
)))
(assert  (=> (<= 1 $generated@@56) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or ($generated@@59 $generated@@98) (and (< 1 $generated@@56) ($generated@@45 $generated@@46 $generated@@98 ($generated@@47 $generated)))) ($generated@@45 $generated@@46 ($generated@@57 $generated@@97 $generated@@98) ($generated@@47 $generated@@23)))
 :pattern ( ($generated@@57 $generated@@97 $generated@@98))
))))
(assert (forall (($generated@@99 T@U) ) (! (<= 0 ($generated@@26 $generated@@99))
 :pattern ( ($generated@@26 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 Int) ($generated@@102 Int) ) (!  (=> (and (and (<= 0 $generated@@101) (< $generated@@101 $generated@@102)) (<= $generated@@102 ($generated@@26 $generated@@100))) (< ($generated@@70 ($generated@@34 ($generated@@33 $generated@@100 $generated@@101) ($generated@@28 $generated@@100 $generated@@102))) ($generated@@70 $generated@@100)))
 :pattern ( ($generated@@70 ($generated@@34 ($generated@@33 $generated@@100 $generated@@101) ($generated@@28 $generated@@100 $generated@@102))))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@22 $generated@@46 $generated@@103 ($generated@@47 $generated@@104) $generated@@105) (forall (($generated@@106 Int) ) (!  (=> (and (<= 0 $generated@@106) (< $generated@@106 ($generated@@26 $generated@@103))) ($generated@@77 ($generated@@52 $generated@@103 $generated@@106) $generated@@104 $generated@@105))
 :pattern ( ($generated@@52 $generated@@103 $generated@@106))
)))
 :pattern ( ($generated@@22 $generated@@46 $generated@@103 ($generated@@47 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@107 ($generated@@47 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@47 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@21 ($generated@@47 $generated@@109)) $generated@@1)
 :pattern ( ($generated@@47 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@62 $generated@@111 ($generated@@60 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@60 $generated@@111 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@57 ($generated@@58 $generated@@112) $generated@@113) ($generated@@57 $generated@@112 $generated@@113))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@115 Int) ) (!  (=> (or (and (<= 0 $generated@@115) (< $generated@@115 55296)) (and (<= 57344 $generated@@115) (< $generated@@115 1114112))) (= ($generated@@61 ($generated@@114 $generated@@115)) $generated@@115))
 :pattern ( ($generated@@114 $generated@@115))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@116 $generated@@127 $generated@@128 $generated@@129 ($generated@@123 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@116 $generated@@134 $generated@@135 $generated@@136 ($generated@@123 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@116 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@116 $generated@@143 $generated@@144 $generated@@145 ($generated@@123 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))) (= ($generated@@5 $generated@@117) 5)) (= ($generated@@5 $generated@@118) 6)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@120 $generated@@152 $generated@@153 ($generated@@124 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@156) $generated@@154)
 :weight 0
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@120 $generated@@157 $generated@@158 ($generated@@124 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@120 $generated@@157 $generated@@158 $generated@@160 $generated@@162)))
 :weight 0
))) (= ($generated@@5 $generated@@121) 7)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@5 ($generated@@122 $generated@@163 $generated@@164)) 8))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@125 ($generated@@122 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@122 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@126 ($generated@@122 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@122 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@10 ($generated@@116 $generated@@117 $generated@@118 $generated@@6 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@10 ($generated@@62 $generated@@6 ($generated@@120 $generated@@118 $generated@@121 ($generated@@120 $generated@@117 ($generated@@122 $generated@@118 $generated@@121) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@116 $generated@@117 $generated@@118 $generated@@6 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (and (= ($generated@@175 ($generated@@29 $generated@@177 $generated@@178)) $generated@@177) (= ($generated@@176 ($generated@@29 $generated@@177 $generated@@178)) $generated@@178))
 :pattern ( ($generated@@29 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@48 $generated@@179 ($generated@@47 $generated@@180)) (and (= ($generated@@60 $generated@@46 ($generated@@62 $generated@@46 $generated@@179)) $generated@@179) ($generated@@45 $generated@@46 ($generated@@62 $generated@@46 $generated@@179) ($generated@@47 $generated@@180))))
 :pattern ( ($generated@@48 $generated@@179 ($generated@@47 $generated@@180)))
)))
(assert (forall (($generated@@181 T@U) ) (!  (and (= ($generated@@114 ($generated@@61 $generated@@181)) $generated@@181) (or (and (<= 0 ($generated@@61 $generated@@181)) (< ($generated@@61 $generated@@181) 55296)) (and (<= 57344 ($generated@@61 $generated@@181)) (< ($generated@@61 $generated@@181) 1114112))))
 :pattern ( ($generated@@61 $generated@@181))
)))
(assert (= ($generated@@21 $generated@@23) $generated@@3))
(assert (= ($generated@@182 $generated@@23) $generated@@4))
(assert (forall (($generated@@183 T@U) ($generated@@184 Int) ($generated@@185 Int) ) (!  (=> (and (and (<= 0 $generated@@184) (<= $generated@@184 $generated@@185)) (< $generated@@185 ($generated@@26 $generated@@183))) (= ($generated@@52 ($generated@@28 $generated@@183 $generated@@184) (- $generated@@185 $generated@@184)) ($generated@@52 $generated@@183 $generated@@185)))
 :weight 25
 :pattern ( ($generated@@52 $generated@@183 $generated@@185) ($generated@@28 $generated@@183 $generated@@184))
)))
(assert  (=> (<= 1 $generated@@56) (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (or ($generated@@59 ($generated@@42 $generated@@46 $generated@@187)) (and (< 1 $generated@@56) ($generated@@45 $generated@@46 $generated@@187 ($generated@@47 $generated)))) (and (=> (or (not (= ($generated@@40 0) ($generated@@26 ($generated@@42 $generated@@46 $generated@@187)))) (not true)) ($generated@@59 ($generated@@42 $generated@@46 ($generated@@28 ($generated@@42 $generated@@46 $generated@@187) ($generated@@40 1))))) (= ($generated@@57 ($generated@@58 $generated@@186) ($generated@@42 $generated@@46 $generated@@187)) (ite (= ($generated@@40 0) ($generated@@26 ($generated@@42 $generated@@46 $generated@@187))) $generated@@27 ($generated@@34 ($generated@@29 $generated@@27 ($generated@@60 $generated@@7 ($generated@@11 ($generated@@61 ($generated@@62 $generated@@63 ($generated@@52 ($generated@@42 $generated@@46 $generated@@187) ($generated@@40 0))))))) ($generated@@57 ($generated@@58 $generated@@186) ($generated@@42 $generated@@46 ($generated@@28 ($generated@@42 $generated@@46 $generated@@187) ($generated@@40 1)))))))))
 :weight 3
 :pattern ( ($generated@@57 ($generated@@58 $generated@@186) ($generated@@42 $generated@@46 $generated@@187)))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 Int) ($generated@@190 Int) ) (!  (=> (and (and (<= 0 $generated@@189) (<= 0 $generated@@190)) (<= (+ $generated@@189 $generated@@190) ($generated@@26 $generated@@188))) (= ($generated@@28 ($generated@@28 $generated@@188 $generated@@189) $generated@@190) ($generated@@28 $generated@@188 (+ $generated@@189 $generated@@190))))
 :pattern ( ($generated@@28 ($generated@@28 $generated@@188 $generated@@189) $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 Int) ) (!  (and (=> (< $generated@@193 ($generated@@26 $generated@@191)) (= ($generated@@52 ($generated@@34 $generated@@191 $generated@@192) $generated@@193) ($generated@@52 $generated@@191 $generated@@193))) (=> (<= ($generated@@26 $generated@@191) $generated@@193) (= ($generated@@52 ($generated@@34 $generated@@191 $generated@@192) $generated@@193) ($generated@@52 $generated@@192 (- $generated@@193 ($generated@@26 $generated@@191))))))
 :pattern ( ($generated@@52 ($generated@@34 $generated@@191 $generated@@192) $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@45 $generated@@7 $generated@@194 $generated@@23)  (and (<= ($generated@@40 (- 0 2147483648)) ($generated@@12 $generated@@194)) (< ($generated@@12 $generated@@194) 2147483648)))
 :pattern ( ($generated@@45 $generated@@7 $generated@@194 $generated@@23))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@60 $generated@@7 ($generated@@11 ($generated@@40 $generated@@195))) ($generated@@42 $generated@@121 ($generated@@60 $generated@@7 ($generated@@11 $generated@@195))))
 :pattern ( ($generated@@60 $generated@@7 ($generated@@11 ($generated@@40 $generated@@195))))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@T) ) (! (= ($generated@@60 $generated@@197 ($generated@@42 $generated@@197 $generated@@196)) ($generated@@42 $generated@@121 ($generated@@60 $generated@@197 $generated@@196)))
 :pattern ( ($generated@@60 $generated@@197 ($generated@@42 $generated@@197 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ) (!  (=> (= ($generated@@26 $generated@@198) 0) (= $generated@@198 $generated@@27))
 :pattern ( ($generated@@26 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 Int) ) (!  (=> (= $generated@@200 0) (= ($generated@@33 $generated@@199 $generated@@200) $generated@@27))
 :pattern ( ($generated@@33 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! ($generated@@22 $generated@@63 $generated@@202 $generated $generated@@201)
 :pattern ( ($generated@@22 $generated@@63 $generated@@202 $generated $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@203 ($generated@@47 $generated@@204)) (forall (($generated@@205 Int) ) (!  (=> (and (<= 0 $generated@@205) (< $generated@@205 ($generated@@26 $generated@@203))) ($generated@@48 ($generated@@52 $generated@@203 $generated@@205) $generated@@204))
 :pattern ( ($generated@@52 $generated@@203 $generated@@205))
)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@203 ($generated@@47 $generated@@204)))
)))
(assert (forall (($generated@@206 T@U) ) (! ($generated@@45 $generated@@63 $generated@@206 $generated)
 :pattern ( ($generated@@45 $generated@@63 $generated@@206 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@216  (=> (or (not (= ($generated@@40 0) ($generated@@26 $generated@@207))) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 8)) (and (<= 0 ($generated@@40 0)) (< ($generated@@40 0) ($generated@@26 $generated@@207)))) (=> (and (<= 0 ($generated@@40 0)) (< ($generated@@40 0) ($generated@@26 $generated@@207))) (=> (= $generated@@208 ($generated@@61 ($generated@@62 $generated@@63 ($generated@@52 $generated@@207 ($generated@@40 0))))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (and (<= ($generated@@40 (- 0 2147483648)) $generated@@208) (< $generated@@208 2147483648))) (=> (and (<= ($generated@@40 (- 0 2147483648)) $generated@@208) (< $generated@@208 2147483648)) (=> (= $generated@@209 ($generated@@61 ($generated@@62 $generated@@63 ($generated@@52 $generated@@207 ($generated@@40 0))))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= ($generated@@40 (- 0 2147483648)) $generated@@209) (< $generated@@209 2147483648))) (=> (and (<= ($generated@@40 (- 0 2147483648)) $generated@@209) (< $generated@@209 2147483648)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 ($generated@@40 1)) (<= ($generated@@40 1) ($generated@@26 $generated@@207)))) (=> (and (<= 0 ($generated@@40 1)) (<= ($generated@@40 1) ($generated@@26 $generated@@207))) (=> (= $generated@@210 ($generated@@28 $generated@@207 ($generated@@40 1))) (=> (and ($generated@@22 $generated@@46 $generated@@210 ($generated@@47 $generated) $generated@@211) (= (ControlFlow 0 4) (- 0 3))) (< ($generated@@70 $generated@@210) ($generated@@70 $generated@@207)))))))))))))))))
(let (($generated@@217 true))
(let (($generated@@218 true))
(let (($generated@@219  (=> (= $generated@@212 ($generated@@119 $generated@@213 $generated@@211 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@218) (=> (= (ControlFlow 0 9) 2) $generated@@217)) (=> (= (ControlFlow 0 9) 4) $generated@@216)))))
(let (($generated@@220  (=> (and (and (and ($generated@@214 $generated@@211) ($generated@@215 $generated@@211)) ($generated@@45 $generated@@46 $generated@@207 ($generated@@47 $generated))) (and (= 1 $generated@@56) (= (ControlFlow 0 10) 9))) $generated@@219)))
$generated@@220))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
