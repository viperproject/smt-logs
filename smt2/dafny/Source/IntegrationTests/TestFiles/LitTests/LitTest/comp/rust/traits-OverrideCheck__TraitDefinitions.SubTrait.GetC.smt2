(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@78 (Int) Int)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@T T@U T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) Bool)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@12 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@32 $generated@@30 $generated@@33) ($generated@@28 $generated@@29 $generated@@32 $generated@@31 $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 $generated@@30 $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@36 $generated@@34 $generated@@37) ($generated@@28 $generated@@29 $generated@@36 $generated@@35 $generated@@37))
 :pattern ( ($generated@@28 $generated@@29 $generated@@36 $generated@@34 $generated@@37))
 :pattern ( ($generated@@28 $generated@@29 $generated@@36 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@40 $generated@@38 $generated@@41) ($generated@@28 $generated@@29 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@28 $generated@@29 $generated@@40 $generated@@38 $generated@@41))
 :pattern ( ($generated@@28 $generated@@29 $generated@@40 $generated@@39 $generated@@41))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@12 $generated@@45) 4)) (= ($generated@@12 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@12 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@68 $generated@@31 $generated@@69)  (or (= $generated@@68 $generated@@42) ($generated@@17 ($generated@@43 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@68) $generated)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@68 $generated@@31 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@70 $generated@@35 $generated@@71)  (or (= $generated@@70 $generated@@42) ($generated@@17 ($generated@@43 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@71 $generated@@70) $generated)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@70 $generated@@35 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@72 $generated@@39 $generated@@73)  (or (= $generated@@72 $generated@@42) ($generated@@17 ($generated@@43 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@73 $generated@@72) $generated)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@72 $generated@@39 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@74 $generated@@75 $generated@@76) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@17 ($generated@@43 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@75 $generated@@77) $generated))) ($generated@@17 ($generated@@43 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@76 $generated@@77) $generated))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@76 $generated@@77) $generated))
)))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@78 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 ($generated@@43 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@43 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@86 $generated@@29 $generated@@91 ($generated@@87 $generated@@89 $generated@@90))  (and ($generated@@86 $generated@@29 $generated@@91 ($generated@@88 $generated@@89 $generated@@90)) (or (not (= $generated@@91 $generated@@42)) (not true))))
 :pattern ( ($generated@@86 $generated@@29 $generated@@91 ($generated@@87 $generated@@89 $generated@@90)))
 :pattern ( ($generated@@86 $generated@@29 $generated@@91 ($generated@@88 $generated@@89 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (!  (=> ($generated@@74 $generated@@92 $generated@@93) (=> ($generated@@28 $generated@@96 $generated@@94 $generated@@95 $generated@@92) ($generated@@28 $generated@@96 $generated@@94 $generated@@95 $generated@@93)))
 :pattern ( ($generated@@74 $generated@@92 $generated@@93) ($generated@@28 $generated@@96 $generated@@94 $generated@@95 $generated@@92))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@99 ($generated@@87 $generated@@97 $generated@@98) $generated@@100) ($generated@@28 $generated@@29 $generated@@99 ($generated@@88 $generated@@97 $generated@@98) $generated@@100))
 :pattern ( ($generated@@28 $generated@@29 $generated@@99 ($generated@@87 $generated@@97 $generated@@98) $generated@@100))
 :pattern ( ($generated@@28 $generated@@29 $generated@@99 ($generated@@88 $generated@@97 $generated@@98) $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@86 $generated@@29 $generated@@101 $generated@@30)  (and ($generated@@86 $generated@@29 $generated@@101 $generated@@31) (or (not (= $generated@@101 $generated@@42)) (not true))))
 :pattern ( ($generated@@86 $generated@@29 $generated@@101 $generated@@30))
 :pattern ( ($generated@@86 $generated@@29 $generated@@101 $generated@@31))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@86 $generated@@29 $generated@@102 $generated@@34)  (and ($generated@@86 $generated@@29 $generated@@102 $generated@@35) (or (not (= $generated@@102 $generated@@42)) (not true))))
 :pattern ( ($generated@@86 $generated@@29 $generated@@102 $generated@@34))
 :pattern ( ($generated@@86 $generated@@29 $generated@@102 $generated@@35))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@86 $generated@@29 $generated@@103 $generated@@38)  (and ($generated@@86 $generated@@29 $generated@@103 $generated@@39) (or (not (= $generated@@103 $generated@@42)) (not true))))
 :pattern ( ($generated@@86 $generated@@29 $generated@@103 $generated@@38))
 :pattern ( ($generated@@86 $generated@@29 $generated@@103 $generated@@39))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@104 $generated@@39 $generated@@105) ($generated@@28 $generated@@29 $generated@@104 $generated@@31 $generated@@105))
 :pattern ( ($generated@@28 $generated@@29 $generated@@104 $generated@@39 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@106 $generated@@39 $generated@@107) ($generated@@28 $generated@@29 $generated@@106 $generated@@35 $generated@@107))
 :pattern ( ($generated@@28 $generated@@29 $generated@@106 $generated@@39 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@110 ($generated@@88 $generated@@108 $generated@@109) $generated@@111)  (or (= $generated@@110 $generated@@42) ($generated@@17 ($generated@@43 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@111 $generated@@110) $generated)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@110 ($generated@@88 $generated@@108 $generated@@109) $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or (not (= $generated@@112 $generated@@114)) (not true)) (=> (and ($generated@@74 $generated@@112 $generated@@113) ($generated@@74 $generated@@113 $generated@@114)) ($generated@@74 $generated@@112 $generated@@114)))
 :pattern ( ($generated@@74 $generated@@112 $generated@@113) ($generated@@74 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 ($generated@@88 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@88 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@88 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@121 ($generated@@87 $generated@@122 $generated@@123)) $generated@@122)
 :pattern ( ($generated@@87 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@124 ($generated@@87 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@87 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@86 $generated@@29 $generated@@131 ($generated@@88 $generated@@129 $generated@@130))  (or (= $generated@@131 $generated@@42) ($generated@@127 ($generated@@128 $generated@@131) $generated@@129 $generated@@130)))
 :pattern ( ($generated@@86 $generated@@29 $generated@@131 ($generated@@88 $generated@@129 $generated@@130)))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@43 $generated@@133 ($generated@@83 $generated@@133 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@83 $generated@@133 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> ($generated@@86 $generated@@29 $generated@@136 ($generated@@88 $generated@@134 $generated@@135)) ($generated@@86 $generated@@29 $generated@@136 $generated@@39))
 :pattern ( ($generated@@86 $generated@@29 $generated@@136 ($generated@@88 $generated@@134 $generated@@135)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (and (= ($generated@@137 ($generated@@88 $generated@@139 $generated@@140)) $generated@@6) (= ($generated@@138 ($generated@@88 $generated@@139 $generated@@140)) $generated@@11))
 :pattern ( ($generated@@88 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (and (= ($generated@@137 ($generated@@87 $generated@@141 $generated@@142)) $generated@@7) (= ($generated@@138 ($generated@@87 $generated@@141 $generated@@142)) $generated@@11))
 :pattern ( ($generated@@87 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@86 $generated@@29 $generated@@143 $generated@@39) ($generated@@86 $generated@@29 $generated@@143 $generated@@31))
 :pattern ( ($generated@@86 $generated@@29 $generated@@143 $generated@@39))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@86 $generated@@29 $generated@@144 $generated@@39) ($generated@@86 $generated@@29 $generated@@144 $generated@@35))
 :pattern ( ($generated@@86 $generated@@29 $generated@@144 $generated@@39))
)))
(assert (= ($generated@@137 $generated@@31) $generated@@0))
(assert (= ($generated@@138 $generated@@31) $generated@@8))
(assert (= ($generated@@137 $generated@@30) $generated@@1))
(assert (= ($generated@@138 $generated@@30) $generated@@8))
(assert (= ($generated@@137 $generated@@35) $generated@@2))
(assert (= ($generated@@138 $generated@@35) $generated@@9))
(assert (= ($generated@@137 $generated@@34) $generated@@3))
(assert (= ($generated@@138 $generated@@34) $generated@@9))
(assert (= ($generated@@137 $generated@@39) $generated@@4))
(assert (= ($generated@@138 $generated@@39) $generated@@10))
(assert (= ($generated@@137 $generated@@38) $generated@@5))
(assert (= ($generated@@138 $generated@@38) $generated@@10))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@86 $generated@@29 $generated@@146 $generated@@31)  (or (= $generated@@146 $generated@@42) ($generated@@145 ($generated@@128 $generated@@146))))
 :pattern ( ($generated@@86 $generated@@29 $generated@@146 $generated@@31))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@86 $generated@@29 $generated@@148 $generated@@35)  (or (= $generated@@148 $generated@@42) ($generated@@147 ($generated@@128 $generated@@148))))
 :pattern ( ($generated@@86 $generated@@29 $generated@@148 $generated@@35))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@86 $generated@@29 $generated@@150 $generated@@39)  (or (= $generated@@150 $generated@@42) ($generated@@149 ($generated@@128 $generated@@150))))
 :pattern ( ($generated@@86 $generated@@29 $generated@@150 $generated@@39))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@153 ($generated@@88 $generated@@151 $generated@@152) $generated@@154) ($generated@@28 $generated@@29 $generated@@153 $generated@@39 $generated@@154))
 :pattern ( ($generated@@28 $generated@@29 $generated@@153 ($generated@@88 $generated@@151 $generated@@152) $generated@@154))
)))
(assert (forall (($generated@@155 Int) ) (! (= ($generated@@83 $generated@@14 ($generated@@18 ($generated@@78 $generated@@155))) ($generated@@80 $generated@@46 ($generated@@83 $generated@@14 ($generated@@18 $generated@@155))))
 :pattern ( ($generated@@83 $generated@@14 ($generated@@18 ($generated@@78 $generated@@155))))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@83 $generated@@157 ($generated@@80 $generated@@157 $generated@@156)) ($generated@@80 $generated@@46 ($generated@@83 $generated@@157 $generated@@156)))
 :pattern ( ($generated@@83 $generated@@157 ($generated@@80 $generated@@157 $generated@@156)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@165  (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) true)) (=> (forall (($generated@@168 T@U) ($generated@@169 T@U) ) true) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) true)))))))
(let (($generated@@172  (=> (and ($generated@@158 $generated@@159) ($generated@@160 $generated@@159)) (=> (and (and (or (not (= $generated@@161 $generated@@42)) (not true)) (and ($generated@@86 $generated@@29 $generated@@161 ($generated@@87 $generated@@162 $generated@@163)) ($generated@@28 $generated@@29 $generated@@161 ($generated@@87 $generated@@162 $generated@@163) $generated@@159))) (and (= 0 $generated@@164) (= (ControlFlow 0 5) 2))) $generated@@165))))
$generated@@172)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
