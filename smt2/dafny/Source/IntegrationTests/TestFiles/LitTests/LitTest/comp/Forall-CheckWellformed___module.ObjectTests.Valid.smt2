(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@U) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated@@1) 0))
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (= ($generated@@31 $generated@@1) $generated@@2))
(assert (= ($generated@@13 $generated@@33) 3))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@37 $generated@@34)  (or (= $generated@@37 $generated@@35) (= ($generated@@36 $generated@@37) $generated@@34)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@37 $generated@@34))
)))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@39 $generated@@38)  (or (= $generated@@39 $generated@@35) (= ($generated@@36 $generated@@39) $generated@@38)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@39 $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 $generated@@33 $generated@@42 $generated@@41 $generated@@43) ($generated@@40 $generated@@33 $generated@@42 $generated@@34 $generated@@43))
 :pattern ( ($generated@@40 $generated@@33 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@40 $generated@@33 $generated@@42 $generated@@34 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@40 $generated@@33 $generated@@45 $generated@@44 $generated@@46) ($generated@@40 $generated@@33 $generated@@45 $generated@@38 $generated@@46))
 :pattern ( ($generated@@40 $generated@@33 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@40 $generated@@33 $generated@@45 $generated@@38 $generated@@46))
)))
(assert (= ($generated@@29 $generated@@47) 0))
(assert (= ($generated@@48 $generated@@6 $generated@@10) $generated@@47))
(assert  (not ($generated@@49 $generated@@47)))
(assert (= ($generated@@29 $generated@@50) 0))
(assert (= ($generated@@48 $generated@@6 $generated@@11) $generated@@50))
(assert  (not ($generated@@49 $generated@@50)))
(assert (= ($generated@@29 $generated@@51) 0))
(assert (= ($generated@@48 $generated@@6 $generated@@12) $generated@@51))
(assert  (not ($generated@@49 $generated@@51)))
(assert  (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@53 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@53 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@53 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@13 $generated@@54) 4)) (= ($generated@@13 $generated@@55) 5)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@13 ($generated@@56 $generated@@71 $generated@@72)) 6))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@56 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@56 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@40 $generated@@33 $generated@@77 $generated@@34 $generated@@78)  (or (= $generated@@77 $generated@@35) ($generated@@18 ($generated@@52 $generated@@14 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@78 $generated@@77) $generated@@1)))))
 :pattern ( ($generated@@40 $generated@@33 $generated@@77 $generated@@34 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@40 $generated@@33 $generated@@79 $generated@@38 $generated@@80)  (or (= $generated@@79 $generated@@35) ($generated@@18 ($generated@@52 $generated@@14 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@80 $generated@@79) $generated@@1)))))
 :pattern ( ($generated@@40 $generated@@33 $generated@@79 $generated@@38 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@52 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@52 $generated@@83 $generated@@82))
)))
(assert ($generated@@49 $generated@@1))
(assert  (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@84 $generated@@87 $generated@@88 $generated@@89 ($generated@@86 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@93 $generated@@90) $generated@@92 $generated@@93) $generated@@90)
 :weight 0
)) (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@99 $generated@@101) (= ($generated@@84 $generated@@94 $generated@@95 $generated@@96 ($generated@@86 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@99 $generated@@100 $generated@@97) $generated@@101 $generated@@102) ($generated@@84 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@101 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@84 $generated@@103 $generated@@104 $generated@@105 ($generated@@86 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@84 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)))))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@18 ($generated@@84 $generated@@33 $generated@@54 $generated@@14 ($generated@@85 $generated@@112 $generated@@113 $generated@@114 $generated@@115) $generated@@116 $generated@@117))  (=> (and (or (not (= $generated@@116 $generated@@112)) (not true)) ($generated@@18 ($generated@@52 $generated@@14 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@113 $generated@@116) $generated@@114)))) (= $generated@@116 $generated@@115)))
 :pattern ( ($generated@@84 $generated@@33 $generated@@54 $generated@@14 ($generated@@85 $generated@@112 $generated@@113 $generated@@114 $generated@@115) $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and ($generated@@118 $generated@@119) (and (or (not (= $generated@@120 $generated@@35)) (not true)) (= ($generated@@36 $generated@@120) $generated@@38))) ($generated@@32 $generated@@33 ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@119 $generated@@120) $generated@@47)) $generated@@41))
 :pattern ( ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@119 $generated@@120) $generated@@47)))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@118 $generated@@121) (and (or (not (= $generated@@122 $generated@@35)) (not true)) (= ($generated@@36 $generated@@122) $generated@@38))) ($generated@@32 $generated@@33 ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@121 $generated@@122) $generated@@50)) $generated@@41))
 :pattern ( ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@121 $generated@@122) $generated@@50)))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (and ($generated@@118 $generated@@123) (and (or (not (= $generated@@124 $generated@@35)) (not true)) (= ($generated@@36 $generated@@124) $generated@@38))) ($generated@@32 $generated@@33 ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@123 $generated@@124) $generated@@51)) $generated@@41))
 :pattern ( ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@123 $generated@@124) $generated@@51)))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@125 $generated@@41)  (and ($generated@@32 $generated@@33 $generated@@125 $generated@@34) (or (not (= $generated@@125 $generated@@35)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@125 $generated@@41))
 :pattern ( ($generated@@32 $generated@@33 $generated@@125 $generated@@34))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@126 $generated@@44)  (and ($generated@@32 $generated@@33 $generated@@126 $generated@@38) (or (not (= $generated@@126 $generated@@35)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@126 $generated@@44))
 :pattern ( ($generated@@32 $generated@@33 $generated@@126 $generated@@38))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and (and ($generated@@118 $generated@@127) (and (or (not (= $generated@@128 $generated@@35)) (not true)) (= ($generated@@36 $generated@@128) $generated@@38))) ($generated@@18 ($generated@@52 $generated@@14 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@127 $generated@@128) $generated@@1)))) ($generated@@40 $generated@@33 ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@127 $generated@@128) $generated@@47)) $generated@@41 $generated@@127))
 :pattern ( ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@127 $generated@@128) $generated@@47)))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and (and ($generated@@118 $generated@@129) (and (or (not (= $generated@@130 $generated@@35)) (not true)) (= ($generated@@36 $generated@@130) $generated@@38))) ($generated@@18 ($generated@@52 $generated@@14 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@129 $generated@@130) $generated@@1)))) ($generated@@40 $generated@@33 ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@129 $generated@@130) $generated@@50)) $generated@@41 $generated@@129))
 :pattern ( ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@129 $generated@@130) $generated@@50)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and (and ($generated@@118 $generated@@131) (and (or (not (= $generated@@132 $generated@@35)) (not true)) (= ($generated@@36 $generated@@132) $generated@@38))) ($generated@@18 ($generated@@52 $generated@@14 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@131 $generated@@132) $generated@@1)))) ($generated@@40 $generated@@33 ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@131 $generated@@132) $generated@@51)) $generated@@41 $generated@@131))
 :pattern ( ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@131 $generated@@132) $generated@@51)))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (and (= ($generated@@133 ($generated@@48 $generated@@134 $generated@@135)) $generated@@134) (= ($generated@@31 ($generated@@48 $generated@@134 $generated@@135)) $generated@@135))
 :pattern ( ($generated@@48 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@52 $generated@@137 ($generated@@81 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@81 $generated@@137 $generated@@136))
)))
(assert (= ($generated@@30 $generated@@44) $generated@@3))
(assert (= ($generated@@138 $generated@@44) $generated@@8))
(assert (= ($generated@@30 $generated@@34) $generated@@4))
(assert (= ($generated@@138 $generated@@34) $generated@@9))
(assert (= ($generated@@30 $generated@@41) $generated@@5))
(assert (= ($generated@@138 $generated@@41) $generated@@9))
(assert (= ($generated@@30 $generated@@38) $generated@@7))
(assert (= ($generated@@138 $generated@@38) $generated@@8))
(assert  (=> (<= 0 $generated@@139) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (or ($generated@@141 $generated@@142 $generated@@143) (and (< 0 $generated@@139) (and ($generated@@118 $generated@@142) (and (or (not (= $generated@@143 $generated@@35)) (not true)) (and ($generated@@32 $generated@@33 $generated@@143 $generated@@44) ($generated@@40 $generated@@33 $generated@@143 $generated@@44 $generated@@142)))))) (= ($generated@@140 $generated@@142 $generated@@143)  (and (and (or (not (= ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@142 $generated@@143) $generated@@47)) ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@142 $generated@@143) $generated@@50)))) (not true)) (or (not (= ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@142 $generated@@143) $generated@@47)) ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@142 $generated@@143) $generated@@51)))) (not true))) (or (not (= ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@142 $generated@@143) $generated@@50)) ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@142 $generated@@143) $generated@@51)))) (not true)))))
 :pattern ( ($generated@@140 $generated@@142 $generated@@143) ($generated@@118 $generated@@142))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! ($generated@@40 $generated@@14 $generated@@145 $generated $generated@@144)
 :pattern ( ($generated@@40 $generated@@14 $generated@@145 $generated $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! ($generated@@32 $generated@@14 $generated@@146 $generated)
 :pattern ( ($generated@@32 $generated@@14 $generated@@146 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () Bool)
(declare-fun $generated@@150 () Bool)
(declare-fun $generated@@151 () Bool)
(declare-fun $generated@@152 () Bool)
(declare-fun $generated@@153 () Bool)
(declare-fun $generated@@154 () Bool)
(declare-fun $generated@@155 () Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Bool)
(declare-fun $generated@@158 () Bool)
(declare-fun $generated@@159 () Bool)
(declare-fun $generated@@160 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@161  (=> (and (= ($generated@@140 $generated@@147 $generated@@148)  (and (and (or (not (= ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@47)) ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@50)))) (not true)) (or (not (= ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@47)) ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@51)))) (not true))) (or (not (= ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@50)) ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@51)))) (not true)))) ($generated@@32 $generated@@14 ($generated@@17 ($generated@@140 $generated@@147 $generated@@148)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 8)) $generated@@149) (=> $generated@@149 (and (=> (= (ControlFlow 0 3) (- 0 7)) $generated@@150) (=> $generated@@150 (and (=> (= (ControlFlow 0 3) (- 0 6)) $generated@@151) (=> $generated@@151 (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@152) (=> $generated@@152 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@153) (=> $generated@@153 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@154))))))))))))))
(let (($generated@@162  (=> (and (and (not (and (or (not (= ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@47)) ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@50)))) (not true)) (or (not (= ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@47)) ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@51)))) (not true)))) (= $generated@@153 true)) (and (= $generated@@154 true) (= (ControlFlow 0 10) 3))) $generated@@161)))
(let (($generated@@163  (=> (and (and (and (or (not (= ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@47)) ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@50)))) (not true)) (or (not (= ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@47)) ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@51)))) (not true))) (= $generated@@155 ($generated@@18 ($generated@@84 $generated@@33 $generated@@54 $generated@@14 $generated@@156 $generated@@148 $generated@@50)))) (and (and (= $generated@@157 ($generated@@18 ($generated@@84 $generated@@33 $generated@@54 $generated@@14 $generated@@156 $generated@@148 $generated@@51))) (= $generated@@153 $generated@@155)) (and (= $generated@@154 $generated@@157) (= (ControlFlow 0 9) 3)))) $generated@@161)))
(let (($generated@@164  (=> (= ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@47)) ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@50))) (=> (and (= $generated@@151 true) (= $generated@@152 true)) (and (=> (= (ControlFlow 0 12) 9) $generated@@163) (=> (= (ControlFlow 0 12) 10) $generated@@162))))))
(let (($generated@@165  (=> (or (not (= ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@47)) ($generated@@52 $generated@@33 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@33 ($generated@@56 $generated@@54 $generated@@55) $generated@@147 $generated@@148) $generated@@50)))) (not true)) (=> (and (and (= $generated@@158 ($generated@@18 ($generated@@84 $generated@@33 $generated@@54 $generated@@14 $generated@@156 $generated@@148 $generated@@47))) (= $generated@@159 ($generated@@18 ($generated@@84 $generated@@33 $generated@@54 $generated@@14 $generated@@156 $generated@@148 $generated@@51)))) (and (= $generated@@151 $generated@@158) (= $generated@@152 $generated@@159))) (and (=> (= (ControlFlow 0 11) 9) $generated@@163) (=> (= (ControlFlow 0 11) 10) $generated@@162))))))
(let (($generated@@166  (=> (and (= $generated@@149 ($generated@@18 ($generated@@84 $generated@@33 $generated@@54 $generated@@14 $generated@@156 $generated@@148 $generated@@47))) (= $generated@@150 ($generated@@18 ($generated@@84 $generated@@33 $generated@@54 $generated@@14 $generated@@156 $generated@@148 $generated@@50)))) (and (=> (= (ControlFlow 0 13) 11) $generated@@165) (=> (= (ControlFlow 0 13) 12) $generated@@164)))))
(let (($generated@@167 true))
(let (($generated@@168  (=> (= $generated@@156 ($generated@@85 $generated@@35 $generated@@147 $generated@@1 $generated@@148)) (and (=> (= (ControlFlow 0 14) 1) $generated@@167) (=> (= (ControlFlow 0 14) 13) $generated@@166)))))
(let (($generated@@169  (=> (and ($generated@@118 $generated@@147) ($generated@@160 $generated@@147)) (=> (and (and (or (not (= $generated@@148 $generated@@35)) (not true)) (and ($generated@@32 $generated@@33 $generated@@148 $generated@@44) ($generated@@40 $generated@@33 $generated@@148 $generated@@44 $generated@@147))) (and (= 0 $generated@@139) (= (ControlFlow 0 15) 14))) $generated@@168))))
$generated@@169))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
