(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () Int)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@U Int) T@U)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@64 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 (T@U T@U) Bool)
(declare-fun $generated@@87 () Bool)
(declare-fun $generated@@88 () Bool)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@129 (T@U) Bool)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@208 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@210 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@9 $generated@@30) 3))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@36 T@U) ) (!  (=> (or ($generated@@28 $generated@@36) (and (< 0 $generated@@26) ($generated@@29 $generated@@30 $generated@@36 ($generated@@31 $generated)))) (= ($generated@@27 $generated@@36) (ite (> ($generated@@32 $generated@@36) 0)  (not ($generated@@14 ($generated@@33 $generated@@10 ($generated@@34 $generated@@36 ($generated@@35 0))))) false)))
 :pattern ( ($generated@@27 $generated@@36))
))))
(assert (= ($generated@@9 $generated@@40) 4))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (or ($generated@@39 $generated@@48) (and (< 0 $generated@@26) (and ($generated@@38 $generated@@47) ($generated@@29 $generated@@40 $generated@@48 ($generated@@41 ($generated@@31 $generated) $generated))))) (= ($generated@@37 $generated@@48) ($generated@@14 ($generated@@33 $generated@@10 ($generated@@42 ($generated@@31 $generated) $generated $generated@@47 $generated@@48 ($generated@@43 $generated@@30 ($generated@@44 $generated@@30 ($generated@@45 $generated@@46 ($generated@@43 $generated@@10 ($generated@@44 $generated@@10 ($generated@@13 false)))))))))))
 :pattern ( ($generated@@37 $generated@@48) ($generated@@38 $generated@@47))
))))
(assert (forall (($generated@@51 T@U) ) (!  (not ($generated@@49 $generated@@50 $generated@@51))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@42 ($generated@@31 $generated) $generated $generated@@53 $generated@@52 $generated@@54) ($generated@@43 $generated@@10 ($generated@@13 ($generated@@27 ($generated@@33 $generated@@30 $generated@@54)))))
 :pattern ( ($generated@@42 ($generated@@31 $generated) $generated $generated@@53 $generated@@52 $generated@@54))
)))
(assert (= ($generated@@32 $generated@@46) 0))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (and (and ($generated@@29 $generated@@40 $generated@@57 ($generated@@55 $generated@@58 $generated@@59)) (forall (($generated@@62 T@U) ) (!  (=> ($generated@@56 $generated@@62 $generated@@60) ($generated@@56 $generated@@62 $generated@@58))
 :pattern ( ($generated@@56 $generated@@62 $generated@@60))
 :pattern ( ($generated@@56 $generated@@62 $generated@@58))
))) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@56 $generated@@63 $generated@@59) ($generated@@56 $generated@@63 $generated@@61))
 :pattern ( ($generated@@56 $generated@@63 $generated@@59))
 :pattern ( ($generated@@56 $generated@@63 $generated@@61))
))) ($generated@@29 $generated@@40 $generated@@57 ($generated@@55 $generated@@60 $generated@@61)))
 :pattern ( ($generated@@29 $generated@@40 $generated@@57 ($generated@@55 $generated@@58 $generated@@59)) ($generated@@29 $generated@@40 $generated@@57 ($generated@@55 $generated@@60 $generated@@61)))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@49 ($generated@@64 ($generated@@31 $generated) $generated $generated@@66 $generated@@52 $generated@@67) $generated@@65) false)
 :pattern ( ($generated@@49 ($generated@@64 ($generated@@31 $generated) $generated $generated@@66 $generated@@52 $generated@@67) $generated@@65))
)))
(assert (forall (($generated@@68 Int) ) (! (= ($generated@@35 $generated@@68) $generated@@68)
 :pattern ( ($generated@@35 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@44 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@44 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and ($generated@@29 $generated@@30 $generated@@71 ($generated@@31 $generated@@73)) ($generated@@56 $generated@@72 $generated@@73)) ($generated@@29 $generated@@30 ($generated@@45 $generated@@71 $generated@@72) ($generated@@31 $generated@@73)))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@45 $generated@@71 $generated@@72) ($generated@@31 $generated@@73)))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and ($generated@@38 $generated@@78) (and ($generated@@56 $generated@@80 $generated@@76) ($generated@@29 $generated@@40 $generated@@79 ($generated@@55 $generated@@76 $generated@@77)))) (= ($generated@@75 ($generated@@64 $generated@@76 $generated@@77 $generated@@74 $generated@@79 $generated@@80) $generated@@50) ($generated@@75 ($generated@@64 $generated@@76 $generated@@77 $generated@@78 $generated@@79 $generated@@80) $generated@@50)))
 :pattern ( ($generated@@64 $generated@@76 $generated@@77 $generated@@74 $generated@@79 $generated@@80) ($generated@@38 $generated@@78))
 :pattern ( ($generated@@64 $generated@@76 $generated@@77 $generated@@78 $generated@@79 $generated@@80))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (or ($generated@@39 ($generated@@44 $generated@@40 $generated@@82)) (and (< 0 $generated@@26) (and ($generated@@38 $generated@@81) ($generated@@29 $generated@@40 $generated@@82 ($generated@@41 ($generated@@31 $generated) $generated))))) (= ($generated@@37 ($generated@@44 $generated@@40 $generated@@82)) ($generated@@14 ($generated@@33 $generated@@10 ($generated@@42 ($generated@@31 $generated) $generated $generated@@81 ($generated@@44 $generated@@40 $generated@@82) ($generated@@43 $generated@@30 ($generated@@44 $generated@@30 ($generated@@45 $generated@@46 ($generated@@43 $generated@@10 ($generated@@44 $generated@@10 ($generated@@13 false)))))))))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@44 $generated@@40 $generated@@82)) ($generated@@38 $generated@@81))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@43 $generated@@84 ($generated@@33 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@33 $generated@@84 $generated@@83))
)))
(assert ($generated@@38 $generated@@74))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@32 ($generated@@45 $generated@@85 $generated@@86)) (+ 1 ($generated@@32 $generated@@85)))
 :pattern ( ($generated@@45 $generated@@85 $generated@@86))
)))
(assert  (=> (<= 1 $generated@@26) (forall (($generated@@89 T@U) ) (!  (=> (or $generated@@88 (and (< 1 $generated@@26) ($generated@@38 $generated@@89))) (and ($generated@@39 $generated@@52) (= $generated@@87 ($generated@@37 $generated@@52))))
 :pattern ( $generated@@87 ($generated@@38 $generated@@89))
))))
(assert  (=> (<= 1 $generated@@26) (forall (($generated@@90 T@U) ) (!  (=> (or $generated@@88 (and (< 1 $generated@@26) ($generated@@38 $generated@@90))) (and ($generated@@39 $generated@@52) (= $generated@@87 ($generated@@37 $generated@@52))))
 :weight 3
 :pattern ( $generated@@87 ($generated@@38 $generated@@90))
))))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@91 ($generated@@43 $generated@@96 $generated@@93) $generated@@94 $generated@@95) ($generated@@92 $generated@@96 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@91 ($generated@@43 $generated@@96 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@92 $generated@@40 $generated@@100 ($generated@@97 $generated@@98 $generated@@99) $generated@@101) ($generated@@92 $generated@@40 $generated@@100 ($generated@@55 $generated@@98 $generated@@99) $generated@@101))
 :pattern ( ($generated@@92 $generated@@40 $generated@@100 ($generated@@97 $generated@@98 $generated@@99) $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@92 $generated@@40 $generated@@104 ($generated@@41 $generated@@102 $generated@@103) $generated@@105) ($generated@@92 $generated@@40 $generated@@104 ($generated@@97 $generated@@102 $generated@@103) $generated@@105))
 :pattern ( ($generated@@92 $generated@@40 $generated@@104 ($generated@@41 $generated@@102 $generated@@103) $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 Int) ($generated@@108 T@U) ) (!  (and (=> (= $generated@@107 ($generated@@32 $generated@@106)) (= ($generated@@34 ($generated@@45 $generated@@106 $generated@@108) $generated@@107) $generated@@108)) (=> (or (not (= $generated@@107 ($generated@@32 $generated@@106))) (not true)) (= ($generated@@34 ($generated@@45 $generated@@106 $generated@@108) $generated@@107) ($generated@@34 $generated@@106 $generated@@107))))
 :pattern ( ($generated@@34 ($generated@@45 $generated@@106 $generated@@108) $generated@@107))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and ($generated@@38 $generated@@113) ($generated@@92 $generated@@40 $generated@@110 ($generated@@55 $generated@@111 $generated@@112) $generated@@113)) (forall (($generated@@114 T@U) ) (!  (=> (and ($generated@@91 $generated@@114 $generated@@111 $generated@@113) ($generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110 $generated@@114)) ($generated@@91 ($generated@@42 $generated@@111 $generated@@112 $generated@@113 $generated@@110 $generated@@114) $generated@@112 $generated@@113))
 :pattern ( ($generated@@42 $generated@@111 $generated@@112 $generated@@113 $generated@@110 $generated@@114))
)))
 :pattern ( ($generated@@92 $generated@@40 $generated@@110 ($generated@@55 $generated@@111 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@75 $generated@@115 $generated@@116) (= $generated@@115 $generated@@116))
 :pattern ( ($generated@@75 $generated@@115 $generated@@116))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@117 T@U) ) (!  (=> (or ($generated@@28 ($generated@@44 $generated@@30 $generated@@117)) (and (< 0 $generated@@26) ($generated@@29 $generated@@30 $generated@@117 ($generated@@31 $generated)))) (= ($generated@@27 ($generated@@44 $generated@@30 $generated@@117)) (ite (> ($generated@@32 ($generated@@44 $generated@@30 $generated@@117)) 0)  (not ($generated@@14 ($generated@@33 $generated@@10 ($generated@@34 ($generated@@44 $generated@@30 $generated@@117) ($generated@@35 0))))) false)))
 :weight 3
 :pattern ( ($generated@@27 ($generated@@44 $generated@@30 $generated@@117)))
))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@27 $generated@@119) ($generated@@14 ($generated@@33 $generated@@10 ($generated@@42 ($generated@@31 $generated) $generated $generated@@118 $generated@@52 ($generated@@43 $generated@@30 $generated@@119)))))
 :pattern ( ($generated@@27 $generated@@119) ($generated@@38 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@29 $generated@@40 $generated@@120 ($generated@@55 $generated@@121 $generated@@122)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (and (and ($generated@@38 $generated@@123) ($generated@@56 $generated@@124 $generated@@121)) ($generated@@109 $generated@@121 $generated@@122 $generated@@123 $generated@@120 $generated@@124)) ($generated@@56 ($generated@@42 $generated@@121 $generated@@122 $generated@@123 $generated@@120 $generated@@124) $generated@@122))
 :pattern ( ($generated@@42 $generated@@121 $generated@@122 $generated@@123 $generated@@120 $generated@@124))
)))
 :pattern ( ($generated@@29 $generated@@40 $generated@@120 ($generated@@55 $generated@@121 $generated@@122)))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@56 $generated@@125 $generated) (and (= ($generated@@43 $generated@@10 ($generated@@33 $generated@@10 $generated@@125)) $generated@@125) ($generated@@29 $generated@@10 ($generated@@33 $generated@@10 $generated@@125) $generated)))
 :pattern ( ($generated@@56 $generated@@125 $generated))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@56 ($generated@@43 $generated@@128 $generated@@126) $generated@@127) ($generated@@29 $generated@@128 $generated@@126 $generated@@127))
 :pattern ( ($generated@@56 ($generated@@43 $generated@@128 $generated@@126) $generated@@127))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@130 ($generated@@31 $generated)) (= ($generated@@129 $generated@@130) true))
 :pattern ( ($generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ) (! (<= 0 ($generated@@32 $generated@@131))
 :pattern ( ($generated@@32 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@132 ($generated@@55 $generated@@133 $generated@@134)) $generated@@133)
 :pattern ( ($generated@@55 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@135 ($generated@@55 $generated@@136 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@55 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@138 ($generated@@97 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@97 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@141 ($generated@@97 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@97 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@144 ($generated@@41 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@41 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@147 ($generated@@41 $generated@@148 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@41 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@92 $generated@@30 $generated@@150 ($generated@@31 $generated@@151) $generated@@152) (forall (($generated@@153 Int) ) (!  (=> (and (<= 0 $generated@@153) (< $generated@@153 ($generated@@32 $generated@@150))) ($generated@@91 ($generated@@34 $generated@@150 $generated@@153) $generated@@151 $generated@@152))
 :pattern ( ($generated@@34 $generated@@150 $generated@@153))
)))
 :pattern ( ($generated@@92 $generated@@30 $generated@@150 ($generated@@31 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@31 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@31 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@25 ($generated@@31 $generated@@156)) $generated@@1)
 :pattern ( ($generated@@31 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@T) ) (! (= ($generated@@33 $generated@@158 ($generated@@43 $generated@@158 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@43 $generated@@158 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@29 $generated@@40 $generated@@161 ($generated@@41 $generated@@159 $generated@@160))  (and ($generated@@29 $generated@@40 $generated@@161 ($generated@@97 $generated@@159 $generated@@160)) (forall (($generated@@162 T@U) )  (=> ($generated@@56 $generated@@162 $generated@@159) ($generated@@109 $generated@@159 $generated@@160 $generated@@74 $generated@@161 $generated@@162)))))
 :pattern ( ($generated@@29 $generated@@40 $generated@@161 ($generated@@41 $generated@@159 $generated@@160)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@29 $generated@@40 $generated@@165 ($generated@@97 $generated@@163 $generated@@164))  (and ($generated@@29 $generated@@40 $generated@@165 ($generated@@55 $generated@@163 $generated@@164)) (forall (($generated@@166 T@U) )  (=> ($generated@@56 $generated@@166 $generated@@163) ($generated@@75 ($generated@@64 $generated@@163 $generated@@164 $generated@@74 $generated@@165 $generated@@166) $generated@@50)))))
 :pattern ( ($generated@@29 $generated@@40 $generated@@165 ($generated@@97 $generated@@163 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@9 $generated@@167) 5) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@169 $generated@@176 $generated@@177 ($generated@@173 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@178) $generated@@180) $generated@@178)
 :weight 0
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@185 $generated@@186) (= ($generated@@169 $generated@@181 $generated@@182 ($generated@@173 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@183) $generated@@186) ($generated@@169 $generated@@181 $generated@@182 $generated@@184 $generated@@186)))
 :weight 0
))) (= ($generated@@9 $generated@@170) 6)) (= ($generated@@9 $generated@@171) 7)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@9 ($generated@@172 $generated@@187 $generated@@188)) 8))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@172 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@175 ($generated@@172 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@172 $generated@@191 $generated@@192))
))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@38 $generated@@196) (= ($generated@@92 $generated@@40 $generated@@193 ($generated@@55 $generated@@194 $generated@@195) $generated@@196) (forall (($generated@@197 T@U) ) (!  (=> (and (and ($generated@@56 $generated@@197 $generated@@194) ($generated@@91 $generated@@197 $generated@@194 $generated@@196)) ($generated@@109 $generated@@194 $generated@@195 $generated@@196 $generated@@193 $generated@@197)) (forall (($generated@@198 T@U) ) (!  (=> (and (or (not (= $generated@@198 $generated@@168)) (not true)) ($generated@@49 ($generated@@64 $generated@@194 $generated@@195 $generated@@196 $generated@@193 $generated@@197) ($generated@@43 $generated@@167 $generated@@198))) ($generated@@14 ($generated@@33 $generated@@10 ($generated@@169 $generated@@170 $generated@@171 ($generated@@169 $generated@@167 ($generated@@172 $generated@@170 $generated@@171) $generated@@196 $generated@@198) $generated@@2))))
 :pattern ( ($generated@@49 ($generated@@64 $generated@@194 $generated@@195 $generated@@196 $generated@@193 $generated@@197) ($generated@@43 $generated@@167 $generated@@198)))
)))
 :pattern ( ($generated@@42 $generated@@194 $generated@@195 $generated@@196 $generated@@193 $generated@@197))
 :pattern ( ($generated@@64 $generated@@194 $generated@@195 $generated@@196 $generated@@193 $generated@@197))
))))
 :pattern ( ($generated@@92 $generated@@40 $generated@@193 ($generated@@55 $generated@@194 $generated@@195) $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> ($generated@@56 $generated@@201 ($generated@@55 $generated@@199 $generated@@200)) (and (= ($generated@@43 $generated@@40 ($generated@@33 $generated@@40 $generated@@201)) $generated@@201) ($generated@@29 $generated@@40 ($generated@@33 $generated@@40 $generated@@201) ($generated@@55 $generated@@199 $generated@@200))))
 :pattern ( ($generated@@56 $generated@@201 ($generated@@55 $generated@@199 $generated@@200)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@56 $generated@@204 ($generated@@97 $generated@@202 $generated@@203)) (and (= ($generated@@43 $generated@@40 ($generated@@33 $generated@@40 $generated@@204)) $generated@@204) ($generated@@29 $generated@@40 ($generated@@33 $generated@@40 $generated@@204) ($generated@@97 $generated@@202 $generated@@203))))
 :pattern ( ($generated@@56 $generated@@204 ($generated@@97 $generated@@202 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> ($generated@@56 $generated@@207 ($generated@@41 $generated@@205 $generated@@206)) (and (= ($generated@@43 $generated@@40 ($generated@@33 $generated@@40 $generated@@207)) $generated@@207) ($generated@@29 $generated@@40 ($generated@@33 $generated@@40 $generated@@207) ($generated@@41 $generated@@205 $generated@@206))))
 :pattern ( ($generated@@56 $generated@@207 ($generated@@41 $generated@@205 $generated@@206)))
)))
(assert  (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@208 $generated@@211 $generated@@212 $generated@@213 ($generated@@210 $generated@@211 $generated@@212 $generated@@213 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@216 $generated@@217) $generated@@214)
 :weight 0
)) (and (forall (($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@T) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@208 $generated@@218 $generated@@219 $generated@@220 ($generated@@210 $generated@@218 $generated@@219 $generated@@220 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@208 $generated@@218 $generated@@219 $generated@@220 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ($generated@@229 T@T) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@233 $generated@@235) (= ($generated@@208 $generated@@227 $generated@@228 $generated@@229 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@208 $generated@@227 $generated@@228 $generated@@229 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (= ($generated@@14 ($generated@@208 $generated@@167 $generated@@170 $generated@@10 ($generated@@209 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (or (not (= $generated@@240 $generated@@236)) (not true)) ($generated@@14 ($generated@@33 $generated@@10 ($generated@@169 $generated@@170 $generated@@171 ($generated@@169 $generated@@167 ($generated@@172 $generated@@170 $generated@@171) $generated@@237 $generated@@240) $generated@@238)))) $generated@@239))
 :pattern ( ($generated@@208 $generated@@167 $generated@@170 $generated@@10 ($generated@@209 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (and (= ($generated@@242 ($generated@@45 $generated@@244 $generated@@245)) $generated@@244) (= ($generated@@243 ($generated@@45 $generated@@244 $generated@@245)) $generated@@245))
 :pattern ( ($generated@@45 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (and (= ($generated@@25 ($generated@@55 $generated@@247 $generated@@248)) $generated@@3) (= ($generated@@246 ($generated@@55 $generated@@247 $generated@@248)) $generated@@6))
 :pattern ( ($generated@@55 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (and (= ($generated@@25 ($generated@@97 $generated@@249 $generated@@250)) $generated@@4) (= ($generated@@246 ($generated@@97 $generated@@249 $generated@@250)) $generated@@7))
 :pattern ( ($generated@@97 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (and (= ($generated@@25 ($generated@@41 $generated@@251 $generated@@252)) $generated@@5) (= ($generated@@246 ($generated@@41 $generated@@251 $generated@@252)) $generated@@8))
 :pattern ( ($generated@@41 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and ($generated@@38 $generated@@255) (and ($generated@@56 $generated@@257 $generated@@253) ($generated@@29 $generated@@40 $generated@@256 ($generated@@55 $generated@@253 $generated@@254)))) ($generated@@75 ($generated@@64 $generated@@253 $generated@@254 $generated@@74 $generated@@256 $generated@@257) $generated@@50)) (= ($generated@@109 $generated@@253 $generated@@254 $generated@@74 $generated@@256 $generated@@257) ($generated@@109 $generated@@253 $generated@@254 $generated@@255 $generated@@256 $generated@@257)))
 :pattern ( ($generated@@109 $generated@@253 $generated@@254 $generated@@74 $generated@@256 $generated@@257) ($generated@@38 $generated@@255))
 :pattern ( ($generated@@109 $generated@@253 $generated@@254 $generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> ($generated@@56 $generated@@258 ($generated@@31 $generated@@259)) (and (= ($generated@@43 $generated@@30 ($generated@@33 $generated@@30 $generated@@258)) $generated@@258) ($generated@@29 $generated@@30 ($generated@@33 $generated@@30 $generated@@258) ($generated@@31 $generated@@259))))
 :pattern ( ($generated@@56 $generated@@258 ($generated@@31 $generated@@259)))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= ($generated@@75 $generated@@260 $generated@@261) (forall (($generated@@262 T@U) ) (! (= ($generated@@49 $generated@@260 $generated@@262) ($generated@@49 $generated@@261 $generated@@262))
 :pattern ( ($generated@@49 $generated@@260 $generated@@262))
 :pattern ( ($generated@@49 $generated@@261 $generated@@262))
)))
 :pattern ( ($generated@@75 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 Int) ) (! (= ($generated@@43 $generated@@11 ($generated@@15 ($generated@@35 $generated@@263))) ($generated@@44 $generated@@171 ($generated@@43 $generated@@11 ($generated@@15 $generated@@263))))
 :pattern ( ($generated@@43 $generated@@11 ($generated@@15 ($generated@@35 $generated@@263))))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@T) ) (! (= ($generated@@43 $generated@@265 ($generated@@44 $generated@@265 $generated@@264)) ($generated@@44 $generated@@171 ($generated@@43 $generated@@265 $generated@@264)))
 :pattern ( ($generated@@43 $generated@@265 ($generated@@44 $generated@@265 $generated@@264)))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= ($generated@@32 $generated@@266) 0) (= $generated@@266 $generated@@46))
 :pattern ( ($generated@@32 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= ($generated@@109 ($generated@@31 $generated) $generated $generated@@267 $generated@@52 $generated@@268) ($generated@@129 ($generated@@33 $generated@@30 $generated@@268)))
 :pattern ( ($generated@@109 ($generated@@31 $generated) $generated $generated@@267 $generated@@52 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! ($generated@@92 $generated@@10 $generated@@270 $generated $generated@@269)
 :pattern ( ($generated@@92 $generated@@10 $generated@@270 $generated $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@271 ($generated@@31 $generated@@272)) (forall (($generated@@273 Int) ) (!  (=> (and (<= 0 $generated@@273) (< $generated@@273 ($generated@@32 $generated@@271))) ($generated@@56 ($generated@@34 $generated@@271 $generated@@273) $generated@@272))
 :pattern ( ($generated@@34 $generated@@271 $generated@@273))
)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@271 ($generated@@31 $generated@@272)))
)))
(assert (forall (($generated@@274 T@U) ) (! ($generated@@29 $generated@@10 $generated@@274 $generated)
 :pattern ( ($generated@@29 $generated@@10 $generated@@274 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@278  (=> (= (ControlFlow 0 3) (- 0 2)) (or (not (= 0 $generated@@26)) (not true)))))
(let (($generated@@279 true))
(let (($generated@@280  (=> (= $generated@@275 ($generated@@209 $generated@@168 $generated@@276 $generated@@2 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@279) (=> (= (ControlFlow 0 4) 3) $generated@@278)))))
(let (($generated@@281  (=> (and (and ($generated@@38 $generated@@276) ($generated@@277 $generated@@276)) (and (= 1 $generated@@26) (= (ControlFlow 0 5) 4))) $generated@@280)))
$generated@@281)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
