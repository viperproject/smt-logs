(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@T T@U T@U) Bool)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@T T@T) T@T)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@34 (T@T) T@T)
(declare-fun $generated@@35 (T@T) T@T)
(declare-fun $generated@@56 (Int) Int)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@65 (T@U T@U) Int)
(declare-fun $generated@@69 (T@U) Int)
(declare-fun $generated@@72 (T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@101 () T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@3 $generated@@21) 3))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> ($generated@@20 $generated@@21 $generated@@24 ($generated@@22 $generated@@25)) ($generated@@23 $generated@@24))
 :pattern ( ($generated@@20 $generated@@21 $generated@@24 ($generated@@22 $generated@@25)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@36 T@T) ($generated@@37 T@T) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@27 $generated@@36 $generated@@37 ($generated@@33 $generated@@36 $generated@@37 $generated@@39 $generated@@40 $generated@@38) $generated@@40) $generated@@38)
 :weight 0
)) (forall (($generated@@41 T@T) ($generated@@42 T@T) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (or (= $generated@@45 $generated@@46) (= ($generated@@27 $generated@@41 $generated@@42 ($generated@@33 $generated@@41 $generated@@42 $generated@@44 $generated@@45 $generated@@43) $generated@@46) ($generated@@27 $generated@@41 $generated@@42 $generated@@44 $generated@@46)))
 :weight 0
))) (= ($generated@@3 $generated@@28) 4)) (= ($generated@@3 $generated@@29) 5)) (= ($generated@@3 $generated@@30) 6)) (forall (($generated@@47 T@T) ($generated@@48 T@T) ) (= ($generated@@3 ($generated@@31 $generated@@47 $generated@@48)) 7))) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (! (= ($generated@@34 ($generated@@31 $generated@@49 $generated@@50)) $generated@@49)
 :pattern ( ($generated@@31 $generated@@49 $generated@@50))
))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (! (= ($generated@@35 ($generated@@31 $generated@@51 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@31 $generated@@51 $generated@@52))
))))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> ($generated@@26 $generated@@53 $generated@@54) (forall (($generated@@55 T@U) ) (!  (=> ($generated@@8 ($generated@@32 $generated@@4 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@53 $generated@@55) $generated@@2))) ($generated@@8 ($generated@@32 $generated@@4 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@54 $generated@@55) $generated@@2))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@54 $generated@@55) $generated@@2))
)))
 :pattern ( ($generated@@26 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@57 Int) ) (! (= ($generated@@56 $generated@@57) $generated@@57)
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 $generated@@59) $generated@@59)
 :pattern ( ($generated@@58 $generated@@60 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 ($generated@@32 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@32 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (or (not (= $generated@@67 $generated@@68)) (not true)) (= ($generated@@65 $generated@@66 $generated@@68) ($generated@@65 ($generated@@64 $generated@@66 $generated@@67) $generated@@68)))
 :pattern ( ($generated@@64 $generated@@66 $generated@@67) ($generated@@65 $generated@@66 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@69 ($generated@@64 $generated@@70 $generated@@71)) (+ ($generated@@69 $generated@@70) 1))
 :pattern ( ($generated@@69 ($generated@@64 $generated@@70 $generated@@71)))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@72 ($generated@@61 $generated@@77 $generated@@74) $generated@@75 $generated@@76) ($generated@@73 $generated@@77 $generated@@74 $generated@@75 $generated@@76))
 :pattern ( ($generated@@72 ($generated@@61 $generated@@77 $generated@@74) $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> ($generated@@26 $generated@@78 $generated@@79) (=> ($generated@@72 $generated@@80 $generated@@81 $generated@@78) ($generated@@72 $generated@@80 $generated@@81 $generated@@79)))
 :pattern ( ($generated@@26 $generated@@78 $generated@@79) ($generated@@72 $generated@@80 $generated@@81 $generated@@78))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (!  (=> ($generated@@26 $generated@@82 $generated@@83) (=> ($generated@@73 $generated@@86 $generated@@84 $generated@@85 $generated@@82) ($generated@@73 $generated@@86 $generated@@84 $generated@@85 $generated@@83)))
 :pattern ( ($generated@@26 $generated@@82 $generated@@83) ($generated@@73 $generated@@86 $generated@@84 $generated@@85 $generated@@82))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@20 $generated@@21 $generated@@88 ($generated@@22 $generated@@89)) (forall (($generated@@90 T@U) ) (!  (=> (< 0 ($generated@@65 $generated@@88 $generated@@90)) ($generated@@87 $generated@@90 $generated@@89))
 :pattern ( ($generated@@65 $generated@@88 $generated@@90))
)))
 :pattern ( ($generated@@20 $generated@@21 $generated@@88 ($generated@@22 $generated@@89)))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or (not (= $generated@@91 $generated@@93)) (not true)) (=> (and ($generated@@26 $generated@@91 $generated@@92) ($generated@@26 $generated@@92 $generated@@93)) ($generated@@26 $generated@@91 $generated@@93)))
 :pattern ( ($generated@@26 $generated@@91 $generated@@92) ($generated@@26 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@87 $generated@@94 $generated) (and (= ($generated@@61 $generated@@5 ($generated@@32 $generated@@5 $generated@@94)) $generated@@94) ($generated@@20 $generated@@5 ($generated@@32 $generated@@5 $generated@@94) $generated)))
 :pattern ( ($generated@@87 $generated@@94 $generated))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@61 $generated@@97 $generated@@95) $generated@@96) ($generated@@20 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@87 ($generated@@61 $generated@@97 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@23 $generated@@98) (forall (($generated@@99 T@U) ) (!  (and (<= 0 ($generated@@65 $generated@@98 $generated@@99)) (<= ($generated@@65 $generated@@98 $generated@@99) ($generated@@69 $generated@@98)))
 :pattern ( ($generated@@65 $generated@@98 $generated@@99))
)))
 :pattern ( ($generated@@23 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (! (<= 0 ($generated@@69 $generated@@100))
 :pattern ( ($generated@@69 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@65 $generated@@101 $generated@@102) 0)
 :pattern ( ($generated@@65 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@65 ($generated@@64 $generated@@103 $generated@@104) $generated@@104) (+ ($generated@@65 $generated@@103 $generated@@104) 1))
 :pattern ( ($generated@@64 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 ($generated@@22 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@22 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@19 ($generated@@22 $generated@@107)) $generated@@1)
 :pattern ( ($generated@@22 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@32 $generated@@109 ($generated@@61 $generated@@109 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@61 $generated@@109 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (!  (and (= (= ($generated@@69 $generated@@110) 0) (= $generated@@110 $generated@@101)) (=> (or (not (= ($generated@@69 $generated@@110) 0)) (not true)) (exists (($generated@@111 T@U) ) (! (< 0 ($generated@@65 $generated@@110 $generated@@111))
 :pattern ( ($generated@@65 $generated@@110 $generated@@111))
))))
 :pattern ( ($generated@@69 $generated@@110))
)))
(assert  (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@112 $generated@@115 $generated@@116 $generated@@117 ($generated@@114 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@112 $generated@@122 $generated@@123 $generated@@124 ($generated@@114 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@112 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@112 $generated@@131 $generated@@132 $generated@@133 ($generated@@114 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@112 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 Bool) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@8 ($generated@@112 $generated@@30 $generated@@28 $generated@@4 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))  (=> (and (or (not (= $generated@@144 $generated@@140)) (not true)) ($generated@@8 ($generated@@32 $generated@@4 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@30 ($generated@@31 $generated@@28 $generated@@29) $generated@@141 $generated@@144) $generated@@142)))) $generated@@143))
 :pattern ( ($generated@@112 $generated@@30 $generated@@28 $generated@@4 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@87 $generated@@146 ($generated@@22 $generated@@147)) (and (= ($generated@@61 $generated@@21 ($generated@@32 $generated@@21 $generated@@146)) $generated@@146) ($generated@@20 $generated@@21 ($generated@@32 $generated@@21 $generated@@146) ($generated@@22 $generated@@147))))
 :pattern ( ($generated@@87 $generated@@146 ($generated@@22 $generated@@147)))
)))
(assert (forall (($generated@@148 Int) ) (! (= ($generated@@61 $generated@@5 ($generated@@9 ($generated@@56 $generated@@148))) ($generated@@58 $generated@@29 ($generated@@61 $generated@@5 ($generated@@9 $generated@@148))))
 :pattern ( ($generated@@61 $generated@@5 ($generated@@9 ($generated@@56 $generated@@148))))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@61 $generated@@150 ($generated@@58 $generated@@150 $generated@@149)) ($generated@@58 $generated@@29 ($generated@@61 $generated@@150 $generated@@149)))
 :pattern ( ($generated@@61 $generated@@150 ($generated@@58 $generated@@150 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (< 0 ($generated@@65 $generated@@151 $generated@@153)) (< 0 ($generated@@65 ($generated@@64 $generated@@151 $generated@@152) $generated@@153)))
 :pattern ( ($generated@@64 $generated@@151 $generated@@152) ($generated@@65 $generated@@151 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (< 0 ($generated@@65 ($generated@@64 $generated@@154 $generated@@155) $generated@@156))  (or (= $generated@@156 $generated@@155) (< 0 ($generated@@65 $generated@@154 $generated@@156))))
 :pattern ( ($generated@@65 ($generated@@64 $generated@@154 $generated@@155) $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@73 $generated@@21 $generated@@157 ($generated@@22 $generated@@158) $generated@@159) (forall (($generated@@160 T@U) ) (!  (=> (< 0 ($generated@@65 $generated@@157 $generated@@160)) ($generated@@72 $generated@@160 $generated@@158 $generated@@159))
 :pattern ( ($generated@@65 $generated@@157 $generated@@160))
)))
 :pattern ( ($generated@@73 $generated@@21 $generated@@157 ($generated@@22 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! ($generated@@73 $generated@@5 $generated@@162 $generated $generated@@161)
 :pattern ( ($generated@@73 $generated@@5 $generated@@162 $generated $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! ($generated@@20 $generated@@5 $generated@@163 $generated)
 :pattern ( ($generated@@20 $generated@@5 $generated@@163 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@178  (=> (= $generated@@164 ($generated@@113 $generated@@165 $generated@@166 $generated@@2 false)) (=> (and (and (= $generated@@167 ($generated@@58 $generated@@21 $generated@@101)) (= $generated@@168 ($generated@@58 $generated@@21 ($generated@@64 ($generated@@64 ($generated@@64 ($generated@@64 $generated@@101 ($generated@@61 $generated@@5 ($generated@@9 ($generated@@56 17)))) ($generated@@61 $generated@@5 ($generated@@9 ($generated@@56 82)))) ($generated@@61 $generated@@5 ($generated@@9 ($generated@@56 17)))) ($generated@@61 $generated@@5 ($generated@@9 ($generated@@56 82))))))) (and (= $generated@@169 ($generated@@58 $generated@@21 ($generated@@64 ($generated@@64 $generated@@101 ($generated@@61 $generated@@5 ($generated@@9 ($generated@@56 12)))) ($generated@@61 $generated@@5 ($generated@@9 ($generated@@56 17)))))) (= $generated@@170 ($generated@@58 $generated@@21 ($generated@@64 ($generated@@64 ($generated@@64 $generated@@101 ($generated@@61 $generated@@5 ($generated@@9 ($generated@@56 12)))) ($generated@@61 $generated@@5 ($generated@@9 ($generated@@56 12)))) ($generated@@61 $generated@@5 ($generated@@9 ($generated@@56 17)))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= 0 ($generated@@56 2))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= 0 ($generated@@56 2))) (=> (= (ControlFlow 0 2) (- 0 1)) (<= 0 ($generated@@56 2)))))))))
(let (($generated@@179  (=> (and ($generated@@171 $generated@@166) ($generated@@172 $generated@@166)) (=> (and (and ($generated@@20 $generated@@21 $generated@@173 ($generated@@22 $generated)) ($generated@@73 $generated@@21 $generated@@173 ($generated@@22 $generated) $generated@@166)) true) (=> (and (and (and (and ($generated@@20 $generated@@21 $generated@@174 ($generated@@22 $generated)) ($generated@@73 $generated@@21 $generated@@174 ($generated@@22 $generated) $generated@@166)) true) (and (and ($generated@@20 $generated@@21 $generated@@175 ($generated@@22 $generated)) ($generated@@73 $generated@@21 $generated@@175 ($generated@@22 $generated) $generated@@166)) true)) (and (and (and ($generated@@20 $generated@@21 $generated@@176 ($generated@@22 $generated)) ($generated@@73 $generated@@21 $generated@@176 ($generated@@22 $generated) $generated@@166)) true) (and (= 1 $generated@@177) (= (ControlFlow 0 5) 2)))) $generated@@178)))))
$generated@@179)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
