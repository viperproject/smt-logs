(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U T@U) Bool)
(declare-fun $generated@@0 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@1 () T@T)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 (T@T T@T) T@T)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (T@T T@U) T@U)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@17 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@18 (T@T) T@T)
(declare-fun $generated@@19 (T@T) T@T)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@61 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@93 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@8) 0) (= ($generated@@9 $generated@@10) 1)) (= ($generated@@9 $generated@@11) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@6 ($generated@@12 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@12 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@12 ($generated@@6 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@6 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@13 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@14 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@15 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@16 $generated@@25))
))) (forall (($generated@@26 T@T) ($generated@@27 T@T) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@0 $generated@@26 $generated@@27 ($generated@@17 $generated@@26 $generated@@27 $generated@@29 $generated@@30 $generated@@28) $generated@@30) $generated@@28)
 :weight 0
))) (forall (($generated@@31 T@T) ($generated@@32 T@T) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (or (= $generated@@35 $generated@@36) (= ($generated@@0 $generated@@31 $generated@@32 ($generated@@17 $generated@@31 $generated@@32 $generated@@34 $generated@@35 $generated@@33) $generated@@36) ($generated@@0 $generated@@31 $generated@@32 $generated@@34 $generated@@36)))
 :weight 0
))) (= ($generated@@9 $generated@@1) 3)) (= ($generated@@9 $generated@@2) 4)) (= ($generated@@9 $generated@@3) 5)) (forall (($generated@@37 T@T) ($generated@@38 T@T) ) (= ($generated@@9 ($generated@@4 $generated@@37 $generated@@38)) 6))) (forall (($generated@@39 T@T) ($generated@@40 T@T) ) (! (= ($generated@@18 ($generated@@4 $generated@@39 $generated@@40)) $generated@@39)
 :pattern ( ($generated@@4 $generated@@39 $generated@@40))
))) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (! (= ($generated@@19 ($generated@@4 $generated@@41 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@4 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated $generated@@43 $generated@@44) (forall (($generated@@45 T@U) ) (!  (=> ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@43 $generated@@45) $generated@@5))) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@44 $generated@@45) $generated@@5))
)))
 :pattern ( ($generated $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@47 Int) ) (! (= ($generated@@46 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 ($generated@@7 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@7 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (or (not (= $generated@@54 $generated@@56)) (not true)) (=> (and ($generated $generated@@54 $generated@@55) ($generated $generated@@55 $generated@@56)) ($generated $generated@@54 $generated@@56)))
 :pattern ( ($generated $generated@@54 $generated@@55) ($generated $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@7 $generated@@58 ($generated@@51 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@51 $generated@@58 $generated@@57))
)))
(assert  (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@59 $generated@@62 $generated@@63 $generated@@64 ($generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@68 $generated@@65) $generated@@67 $generated@@68) $generated@@65)
 :weight 0
)) (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@74 $generated@@76) (= ($generated@@59 $generated@@69 $generated@@70 $generated@@71 ($generated@@61 $generated@@69 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@75 $generated@@72) $generated@@76 $generated@@77) ($generated@@59 $generated@@69 $generated@@70 $generated@@71 $generated@@73 $generated@@76 $generated@@77)))
 :weight 0
)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or (= $generated@@84 $generated@@86) (= ($generated@@59 $generated@@78 $generated@@79 $generated@@80 ($generated@@61 $generated@@78 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@84 $generated@@81) $generated@@85 $generated@@86) ($generated@@59 $generated@@78 $generated@@79 $generated@@80 $generated@@82 $generated@@85 $generated@@86)))
 :weight 0
)))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 Bool) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@6 ($generated@@59 $generated@@3 $generated@@1 $generated@@8 ($generated@@60 $generated@@87 $generated@@88 $generated@@89 $generated@@90) $generated@@91 $generated@@92))  (=> (and (or (not (= $generated@@91 $generated@@87)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@88 $generated@@91) $generated@@89)))) $generated@@90))
 :pattern ( ($generated@@59 $generated@@3 $generated@@1 $generated@@8 ($generated@@60 $generated@@87 $generated@@88 $generated@@89 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 Int) ($generated@@95 Int) ) (! (= ($generated@@93 $generated@@94 $generated@@95) (mod $generated@@94 $generated@@95))
 :pattern ( ($generated@@93 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 Int) ) (! (= ($generated@@51 $generated@@10 ($generated@@13 ($generated@@46 $generated@@96))) ($generated@@48 $generated@@2 ($generated@@51 $generated@@10 ($generated@@13 $generated@@96))))
 :pattern ( ($generated@@51 $generated@@10 ($generated@@13 ($generated@@46 $generated@@96))))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@51 $generated@@98 ($generated@@48 $generated@@98 $generated@@97)) ($generated@@48 $generated@@2 ($generated@@51 $generated@@98 $generated@@97)))
 :pattern ( ($generated@@51 $generated@@98 ($generated@@48 $generated@@98 $generated@@97)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@99 () Int)
(declare-fun $generated@@100 () Int)
(declare-fun $generated@@101 () Int)
(declare-fun $generated@@102 () Int)
(declare-fun $generated@@103 () Bool)
(declare-fun $generated@@104 () Int)
(declare-fun $generated@@105 () Int)
(declare-fun $generated@@106 () Int)
(declare-fun $generated@@107 () Bool)
(declare-fun $generated@@108 () Int)
(declare-fun $generated@@109 () Int)
(declare-fun $generated@@110 () Int)
(declare-fun $generated@@111 () Bool)
(declare-fun $generated@@112 () Int)
(declare-fun $generated@@113 () T@U)
(declare-fun $generated@@114 () T@U)
(declare-fun $generated@@115 () T@U)
(declare-fun $generated@@116 () Int)
(declare-fun $generated@@117 () Int)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 () Int)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 () Int)
(declare-fun $generated@@123 () Bool)
(declare-fun $generated@@124 () Int)
(declare-fun $generated@@125 () Int)
(declare-fun $generated@@126 () Int)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U) Bool)
(declare-fun $generated@@129 (T@U) Bool)
(declare-fun $generated@@130 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 52) (let (($generated@@131 true))
(let (($generated@@132  (=> (and (< $generated@@99 0) (= (ControlFlow 0 24) 22)) $generated@@131)))
(let (($generated@@133  (=> (and (not ($generated@@6 ($generated@@48 $generated@@8 ($generated@@12 true)))) (= (ControlFlow 0 23) 22)) $generated@@131)))
(let (($generated@@134  (=> (and (<= 0 $generated@@99) (= $generated@@100 (+ $generated@@101 1))) (and (=> (= (ControlFlow 0 19) (- 0 21)) (or (<= 0 $generated@@102) (= $generated@@99 $generated@@102))) (=> (or (<= 0 $generated@@102) (= $generated@@99 $generated@@102)) (and (=> (= (ControlFlow 0 19) (- 0 20)) (< $generated@@99 $generated@@102)) (=> (< $generated@@99 $generated@@102) (=> (= (ControlFlow 0 19) (- 0 18)) (=> $generated@@103 (<= ($generated@@46 0) $generated@@99))))))))))
(let (($generated@@135  (=> (and ($generated@@6 ($generated@@48 $generated@@8 ($generated@@12 true))) (= $generated@@99 (- $generated@@102 1))) (and (=> (= (ControlFlow 0 25) 24) $generated@@132) (=> (= (ControlFlow 0 25) 19) $generated@@134)))))
(let (($generated@@136  (=> $generated@@103 (and (=> (= (ControlFlow 0 26) 23) $generated@@133) (=> (= (ControlFlow 0 26) 25) $generated@@135)))))
(let (($generated@@137 true))
(let (($generated@@138  (and (=> (= (ControlFlow 0 27) 17) $generated@@137) (=> (= (ControlFlow 0 27) 26) $generated@@136))))
(let (($generated@@139 true))
(let (($generated@@140  (=> (and (and (and (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@101)) (<= 0 $generated@@104)) (= $generated@@105 0)) (= $generated@@106 7)) $generated@@107) (= $generated@@108 2)) (= $generated@@109 2)) (= $generated@@110 3)) $generated@@111) (and (<= $generated@@102 $generated@@112) (=> $generated@@103 (<= ($generated@@46 0) $generated@@102)))) (and (and (forall (($generated@@141 T@U) ) (!  (=> (and (or (not (= $generated@@141 $generated@@114)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@141) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@141) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@141)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@141))
)) ($generated $generated@@113 $generated@@113)) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (or (not (= $generated@@142 $generated@@114)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@142) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@142) $generated@@143) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@142) $generated@@143)) ($generated@@6 ($generated@@59 $generated@@3 $generated@@1 $generated@@8 $generated@@115 $generated@@142 $generated@@143))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@142) $generated@@143))
)) (<= $generated@@102 $generated@@112)))) (and (=> (= (ControlFlow 0 28) 16) $generated@@139) (=> (= (ControlFlow 0 28) 27) $generated@@138)))))
(let (($generated@@144  (=> (or (not (= $generated@@108 $generated@@110)) (not true)) (and (=> (= (ControlFlow 0 29) (- 0 30)) (=> $generated@@103 (<= ($generated@@46 0) $generated@@112))) (=> (=> $generated@@103 (<= ($generated@@46 0) $generated@@112)) (=> (= (ControlFlow 0 29) 28) $generated@@140))))))
(let (($generated@@145 true))
(let (($generated@@146  (=> $generated@@111 (and (=> (= (ControlFlow 0 31) 15) $generated@@145) (=> (= (ControlFlow 0 31) 29) $generated@@144)))))
(let (($generated@@147 true))
(let (($generated@@148  (and (=> (= (ControlFlow 0 32) 14) $generated@@147) (=> (= (ControlFlow 0 32) 31) $generated@@146))))
(let (($generated@@149 true))
(let (($generated@@150  (=> (and (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@116)) (<= 0 $generated@@104)) (= $generated@@105 0)) (= $generated@@106 7)) $generated@@107) (<= 2 $generated@@108)) (= $generated@@109 2)) (= $generated@@110 3)) (and (and (and (<= $generated@@109 $generated@@108) (<= $generated@@108 $generated@@110)) (forall (($generated@@151 T@U) ) (!  (=> (and (or (not (= $generated@@151 $generated@@114)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@151) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@151) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@151)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@151))
))) (and ($generated $generated@@113 $generated@@113) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (or (not (= $generated@@152 $generated@@114)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@152) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@152) $generated@@153) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@152) $generated@@153)) ($generated@@6 ($generated@@59 $generated@@3 $generated@@1 $generated@@8 $generated@@115 $generated@@152 $generated@@153))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@152) $generated@@153))
))))) (and (=> (= (ControlFlow 0 33) 13) $generated@@149) (=> (= (ControlFlow 0 33) 32) $generated@@148)))))
(let (($generated@@154  (=> (and (= $generated@@109 ($generated@@46 2)) (= $generated@@110 ($generated@@46 3))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (<= $generated@@109 $generated@@110)) (=> (<= $generated@@109 $generated@@110) (=> (= (ControlFlow 0 34) 33) $generated@@150))))))
(let (($generated@@155  (=> (and (or (not (= ($generated@@93 $generated@@117 ($generated@@46 2)) ($generated@@46 0))) (not true)) (= (ControlFlow 0 38) 34)) $generated@@154)))
(let (($generated@@156  (=> (and (= ($generated@@93 $generated@@117 ($generated@@46 2)) ($generated@@46 0)) (= (ControlFlow 0 37) 34)) $generated@@154)))
(let (($generated@@157  (=> (= $generated@@117 $generated@@118) (and (=> (= (ControlFlow 0 39) (- 0 40)) (or (not (= ($generated@@46 2) 0)) (not true))) (=> (or (not (= ($generated@@46 2) 0)) (not true)) (and (=> (= (ControlFlow 0 39) 37) $generated@@156) (=> (= (ControlFlow 0 39) 38) $generated@@155)))))))
(let (($generated@@158  (=> (and (= $generated@@104 $generated@@106) (= (ControlFlow 0 36) 34)) $generated@@154)))
(let (($generated@@159 true))
(let (($generated@@160  (=> (and (< $generated@@118 $generated@@117) (= (ControlFlow 0 11) 9)) $generated@@159)))
(let (($generated@@161  (=> (and (not ($generated@@6 ($generated@@48 $generated@@8 ($generated@@12 true)))) (= (ControlFlow 0 10) 9)) $generated@@159)))
(let (($generated@@162  (=> (<= $generated@@117 $generated@@118) (=> (and (= $generated@@119 (+ $generated@@120 1)) (= $generated@@121 (+ $generated@@117 1))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (<= 0 $generated@@122) (= (- $generated@@118 $generated@@121) $generated@@122))) (=> (or (<= 0 $generated@@122) (= (- $generated@@118 $generated@@121) $generated@@122)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (< (- $generated@@118 $generated@@121) $generated@@122)) (=> (< (- $generated@@118 $generated@@121) $generated@@122) (=> (= (ControlFlow 0 6) (- 0 5)) (=> $generated@@123 (<= $generated@@121 $generated@@118)))))))))))
(let (($generated@@163  (=> (or (not (= $generated@@117 $generated@@118)) (not true)) (and (=> (= (ControlFlow 0 12) 11) $generated@@160) (=> (= (ControlFlow 0 12) 6) $generated@@162)))))
(let (($generated@@164  (=> (and ($generated@@6 ($generated@@48 $generated@@8 ($generated@@12 true))) (= $generated@@122 (- $generated@@118 $generated@@117))) (and (=> (= (ControlFlow 0 41) 39) $generated@@157) (=> (= (ControlFlow 0 41) 12) $generated@@163)))))
(let (($generated@@165  (=> $generated@@123 (and (=> (= (ControlFlow 0 42) 10) $generated@@161) (=> (= (ControlFlow 0 42) 41) $generated@@164)))))
(let (($generated@@166 true))
(let (($generated@@167  (and (=> (= (ControlFlow 0 43) 4) $generated@@166) (=> (= (ControlFlow 0 43) 42) $generated@@165))))
(let (($generated@@168 true))
(let (($generated@@169  (=> (and (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@120)) (<= 0 $generated@@104)) (= $generated@@105 0)) (= $generated@@106 7)) $generated@@107) (<= 0 $generated@@117)) (= $generated@@124 0)) (and (<= $generated@@124 $generated@@117) (=> $generated@@123 (<= $generated@@117 $generated@@118)))) (and (and (forall (($generated@@170 T@U) ) (!  (=> (and (or (not (= $generated@@170 $generated@@114)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@170) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@170) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@170)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@170))
)) ($generated $generated@@113 $generated@@113)) (and (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (or (not (= $generated@@171 $generated@@114)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@171) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@171) $generated@@172) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@171) $generated@@172)) ($generated@@6 ($generated@@59 $generated@@3 $generated@@1 $generated@@8 $generated@@115 $generated@@171 $generated@@172))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@171) $generated@@172))
)) (<= (- $generated@@118 $generated@@117) $generated@@125)))) (and (=> (= (ControlFlow 0 44) 3) $generated@@168) (=> (= (ControlFlow 0 44) 43) $generated@@167)))))
(let (($generated@@173  (=> (or (not (= $generated@@104 $generated@@106)) (not true)) (=> (and (= $generated@@124 ($generated@@46 0)) (= $generated@@125 (- $generated@@118 $generated@@124))) (and (=> (= (ControlFlow 0 45) (- 0 46)) (=> $generated@@123 (<= $generated@@124 $generated@@118))) (=> (=> $generated@@123 (<= $generated@@124 $generated@@118)) (=> (= (ControlFlow 0 45) 44) $generated@@169)))))))
(let (($generated@@174  (=> $generated@@107 (and (=> (= (ControlFlow 0 47) 36) $generated@@158) (=> (= (ControlFlow 0 47) 45) $generated@@173)))))
(let (($generated@@175 true))
(let (($generated@@176  (and (=> (= (ControlFlow 0 48) 2) $generated@@175) (=> (= (ControlFlow 0 48) 47) $generated@@174))))
(let (($generated@@177 true))
(let (($generated@@178  (=> (and (and (and (and (and (not false) (<= 0 $generated@@126)) (<= 0 $generated@@104)) (= $generated@@105 0)) (= $generated@@106 7)) (and (and (and (<= $generated@@105 $generated@@104) (<= $generated@@104 $generated@@106)) (forall (($generated@@179 T@U) ) (!  (=> (and (or (not (= $generated@@179 $generated@@114)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@179) $generated@@5)))) (= ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@179) ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@179)))
 :pattern ( ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@179))
))) (and ($generated $generated@@113 $generated@@113) (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (or (not (= $generated@@180 $generated@@114)) (not true)) ($generated@@6 ($generated@@7 $generated@@8 ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@180) $generated@@5)))) (or (= ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@180) $generated@@181) ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@180) $generated@@181)) ($generated@@6 ($generated@@59 $generated@@3 $generated@@1 $generated@@8 $generated@@115 $generated@@180 $generated@@181))))
 :pattern ( ($generated@@0 $generated@@1 $generated@@2 ($generated@@0 $generated@@3 ($generated@@4 $generated@@1 $generated@@2) $generated@@113 $generated@@180) $generated@@181))
))))) (and (=> (= (ControlFlow 0 49) 1) $generated@@177) (=> (= (ControlFlow 0 49) 48) $generated@@176)))))
(let (($generated@@182  (=> (and (and (= $generated@@115 ($generated@@60 $generated@@114 $generated@@113 $generated@@5 false)) (= $generated@@127 ($generated@@46 0))) (and (= $generated@@105 ($generated@@46 0)) (= $generated@@106 ($generated@@46 7)))) (and (=> (= (ControlFlow 0 50) (- 0 51)) (<= $generated@@105 $generated@@106)) (=> (<= $generated@@105 $generated@@106) (=> (= (ControlFlow 0 50) 49) $generated@@178))))))
(let (($generated@@183  (=> (and ($generated@@128 $generated@@113) ($generated@@129 $generated@@113)) (=> (and (and (<= ($generated@@46 0) $generated@@118) (<= ($generated@@46 0) $generated@@112)) (and (= 0 $generated@@130) (= (ControlFlow 0 52) 50))) $generated@@182))))
$generated@@183))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
