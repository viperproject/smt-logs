(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@41 (Int) T@U)
(declare-fun $generated@@42 (Int) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@84 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@88 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@143 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (= ($generated@@5 $generated@@24) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@28 ($generated@@25 $generated@@26 $generated@@27)) ($generated@@22 $generated@@28))
 :pattern ( ($generated@@22 $generated@@28) ($generated@@23 $generated@@24 $generated@@28 ($generated@@25 $generated@@26 $generated@@27)))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@29 $generated@@33 $generated@@34) ($generated@@25 $generated@@31 $generated@@32))  (and ($generated@@30 $generated@@33 $generated@@31) ($generated@@30 $generated@@34 $generated@@32)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@29 $generated@@33 $generated@@34) ($generated@@25 $generated@@31 $generated@@32)))
)))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@44 Int) ) (!  (=> (or ($generated@@42 ($generated@@35 $generated@@44)) (and (< 0 $generated@@40) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@9 (> $generated@@44 10)))))) (= ($generated@@41 ($generated@@35 $generated@@44)) (let (($generated@@45 ($generated@@35 (+ $generated@@44 1))))
(let (($generated@@46 ($generated@@35 (- $generated@@44 1))))
($generated@@37 $generated@@24 ($generated@@29 ($generated@@43 $generated@@7 ($generated@@11 $generated@@45)) ($generated@@43 $generated@@7 ($generated@@11 $generated@@46))))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@35 $generated@@44)))
))))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@22 $generated@@48) (= ($generated@@47 $generated@@48) $generated@@2))
 :pattern ( ($generated@@22 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@43 $generated@@51 ($generated@@49 $generated@@51 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@49 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@22 $generated@@52) (exists (($generated@@53 T@U) ($generated@@54 T@U) ) (= $generated@@52 ($generated@@29 $generated@@53 $generated@@54))))
 :pattern ( ($generated@@22 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ) (!  (=> ($generated@@30 $generated@@55 $generated) (and (= ($generated@@43 $generated@@7 ($generated@@49 $generated@@7 $generated@@55)) $generated@@55) ($generated@@23 $generated@@7 ($generated@@49 $generated@@7 $generated@@55) $generated)))
 :pattern ( ($generated@@30 $generated@@55 $generated))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@30 ($generated@@43 $generated@@58 $generated@@56) $generated@@57) ($generated@@23 $generated@@58 $generated@@56 $generated@@57))
 :pattern ( ($generated@@30 ($generated@@43 $generated@@58 $generated@@56) $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@47 ($generated@@29 $generated@@59 $generated@@60)) $generated@@2)
 :pattern ( ($generated@@29 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@61 ($generated@@25 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@25 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@64 ($generated@@25 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@25 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@67 ($generated@@29 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@29 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@70 ($generated@@29 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@29 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@49 $generated@@74 ($generated@@43 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@43 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (< ($generated@@75 $generated@@77) ($generated@@76 ($generated@@29 $generated@@77 $generated@@78)))
 :pattern ( ($generated@@29 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (< ($generated@@75 $generated@@80) ($generated@@76 ($generated@@29 $generated@@79 $generated@@80)))
 :pattern ( ($generated@@29 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@30 $generated@@83 ($generated@@25 $generated@@81 $generated@@82)) (and (= ($generated@@43 $generated@@24 ($generated@@49 $generated@@24 $generated@@83)) $generated@@83) ($generated@@23 $generated@@24 ($generated@@49 $generated@@24 $generated@@83) ($generated@@25 $generated@@81 $generated@@82))))
 :pattern ( ($generated@@30 $generated@@83 ($generated@@25 $generated@@81 $generated@@82)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@84 $generated@@95 $generated@@96 $generated@@97 ($generated@@91 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@100 $generated@@101 $generated@@98) $generated@@100 $generated@@101) $generated@@98)
 :weight 0
)) (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@84 $generated@@102 $generated@@103 $generated@@104 ($generated@@91 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@109 $generated@@110) ($generated@@84 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@109 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@84 $generated@@111 $generated@@112 $generated@@113 ($generated@@91 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@84 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)))) (= ($generated@@5 $generated@@85) 4)) (= ($generated@@5 $generated@@86) 5)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@88 $generated@@120 $generated@@121 ($generated@@92 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@122) $generated@@124) $generated@@122)
 :weight 0
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@88 $generated@@125 $generated@@126 ($generated@@92 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@88 $generated@@125 $generated@@126 $generated@@128 $generated@@130)))
 :weight 0
))) (= ($generated@@5 $generated@@89) 6)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (= ($generated@@5 ($generated@@90 $generated@@131 $generated@@132)) 7))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@133 $generated@@134)) $generated@@133)
 :pattern ( ($generated@@90 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@135 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@90 $generated@@135 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 Bool) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@10 ($generated@@84 $generated@@85 $generated@@86 $generated@@6 ($generated@@87 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))  (=> (and (or (not (= $generated@@141 $generated@@137)) (not true)) ($generated@@10 ($generated@@49 $generated@@6 ($generated@@88 $generated@@86 $generated@@89 ($generated@@88 $generated@@85 ($generated@@90 $generated@@86 $generated@@89) $generated@@138 $generated@@141) $generated@@139)))) $generated@@140))
 :pattern ( ($generated@@84 $generated@@85 $generated@@86 $generated@@6 ($generated@@87 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (and (= ($generated@@21 ($generated@@25 $generated@@144 $generated@@145)) $generated@@3) (= ($generated@@143 ($generated@@25 $generated@@144 $generated@@145)) $generated@@4))
 :pattern ( ($generated@@25 $generated@@144 $generated@@145))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@146 Int) ) (!  (=> (or ($generated@@42 $generated@@146) (and (< 0 $generated@@40) (> $generated@@146 10))) (and (> ($generated@@12 ($generated@@49 $generated@@7 ($generated@@67 ($generated@@41 $generated@@146)))) 10) ($generated@@23 $generated@@24 ($generated@@41 $generated@@146) ($generated@@25 $generated $generated))))
 :pattern ( ($generated@@41 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@75 ($generated@@43 $generated@@24 $generated@@147)) ($generated@@76 $generated@@147))
 :pattern ( ($generated@@75 ($generated@@43 $generated@@24 $generated@@147)))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@148 Int) ) (!  (=> (or ($generated@@42 $generated@@148) (and (< 0 $generated@@40) (> $generated@@148 10))) (= ($generated@@41 $generated@@148) (let (($generated@@149 (+ $generated@@148 1)))
(let (($generated@@150 (- $generated@@148 1)))
($generated@@29 ($generated@@43 $generated@@7 ($generated@@11 $generated@@149)) ($generated@@43 $generated@@7 ($generated@@11 $generated@@150)))))))
 :pattern ( ($generated@@41 $generated@@148))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@29 ($generated@@37 $generated@@89 $generated@@151) ($generated@@37 $generated@@89 $generated@@152)) ($generated@@37 $generated@@24 ($generated@@29 $generated@@151 $generated@@152)))
 :pattern ( ($generated@@29 ($generated@@37 $generated@@89 $generated@@151) ($generated@@37 $generated@@89 $generated@@152)))
)))
(assert (forall (($generated@@153 Int) ) (! (= ($generated@@43 $generated@@7 ($generated@@11 ($generated@@35 $generated@@153))) ($generated@@37 $generated@@89 ($generated@@43 $generated@@7 ($generated@@11 $generated@@153))))
 :pattern ( ($generated@@43 $generated@@7 ($generated@@11 ($generated@@35 $generated@@153))))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@43 $generated@@155 ($generated@@37 $generated@@155 $generated@@154)) ($generated@@37 $generated@@89 ($generated@@43 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@43 $generated@@155 ($generated@@37 $generated@@155 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ) (! ($generated@@23 $generated@@7 $generated@@156 $generated)
 :pattern ( ($generated@@23 $generated@@7 $generated@@156 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@168  (=> (= (ControlFlow 0 3) (- 0 2)) (> ($generated@@12 ($generated@@49 $generated@@7 ($generated@@67 $generated@@157))) 10))))
(let (($generated@@169  (=> (and (= $generated@@158 (+ $generated@@159 1)) ($generated@@23 $generated@@7 ($generated@@11 $generated@@158) $generated)) (=> (and (and (and (= $generated@@160 $generated@@158) (= $generated@@161 (- $generated@@159 1))) (and ($generated@@23 $generated@@7 ($generated@@11 $generated@@161) $generated) (= $generated@@162 $generated@@161))) (and (and (= ($generated@@41 $generated@@159) ($generated@@29 ($generated@@43 $generated@@7 ($generated@@11 $generated@@160)) ($generated@@43 $generated@@7 ($generated@@11 $generated@@162)))) ($generated@@23 $generated@@24 ($generated@@41 $generated@@159) ($generated@@25 $generated $generated))) (and (= ($generated@@41 $generated@@159) $generated@@157) (= (ControlFlow 0 4) 3)))) $generated@@168))))
(let (($generated@@170 true))
(let (($generated@@171  (=> (and (= $generated@@163 ($generated@@87 $generated@@164 $generated@@165 $generated@@1 false)) (> $generated@@159 10)) (and (=> (= (ControlFlow 0 5) 1) $generated@@170) (=> (= (ControlFlow 0 5) 4) $generated@@169)))))
(let (($generated@@172  (=> (and (and ($generated@@166 $generated@@165) ($generated@@167 $generated@@165)) (and (= 0 $generated@@40) (= (ControlFlow 0 6) 5))) $generated@@171)))
$generated@@172))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
