(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@96 (T@U T@U T@U) Bool)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@137 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@2) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (= ($generated@@29 $generated@@2) $generated@@3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! ($generated@@30 $generated@@13 $generated@@32 $generated@@31 $generated@@33)
 :pattern ( ($generated@@30 $generated@@13 $generated@@32 $generated@@31 $generated@@33))
)))
(assert (= ($generated@@11 $generated@@35) 3))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@39 $generated@@36)  (or (= $generated@@39 $generated@@37) (= ($generated@@38 $generated@@39) $generated@@36)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@39 $generated@@36))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@30 $generated@@35 $generated@@41 $generated@@40 $generated@@42) ($generated@@30 $generated@@35 $generated@@41 $generated@@36 $generated@@42))
 :pattern ( ($generated@@30 $generated@@35 $generated@@41 $generated@@40 $generated@@42))
 :pattern ( ($generated@@30 $generated@@35 $generated@@41 $generated@@36 $generated@@42))
)))
(assert (= ($generated@@27 $generated@@43) 0))
(assert (= ($generated@@44 $generated@@6 $generated@@10) $generated@@43))
(assert  (not ($generated@@45 $generated@@43)))
(assert  (and (and (and (and (and (and (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@47 $generated@@54 $generated@@55 ($generated@@51 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@58) $generated@@56)
 :weight 0
)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (or (= $generated@@63 $generated@@64) (= ($generated@@47 $generated@@59 $generated@@60 ($generated@@51 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@64) ($generated@@47 $generated@@59 $generated@@60 $generated@@62 $generated@@64)))
 :weight 0
))) (= ($generated@@11 $generated@@48) 4)) (= ($generated@@11 $generated@@49) 5)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (= ($generated@@11 ($generated@@50 $generated@@65 $generated@@66)) 6))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@52 ($generated@@50 $generated@@67 $generated@@68)) $generated@@67)
 :pattern ( ($generated@@50 $generated@@67 $generated@@68))
))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@50 $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@30 $generated@@35 $generated@@71 $generated@@36 $generated@@72)  (or (= $generated@@71 $generated@@37) ($generated@@16 ($generated@@46 $generated@@12 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@72 $generated@@71) $generated@@2)))))
 :pattern ( ($generated@@30 $generated@@35 $generated@@71 $generated@@36 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@73 $generated@@74 $generated@@75) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@16 ($generated@@46 $generated@@12 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@74 $generated@@76) $generated@@2))) ($generated@@16 ($generated@@46 $generated@@12 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@75 $generated@@76) $generated@@2))))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@75 $generated@@76) $generated@@2))
)))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@46 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@46 $generated@@84 $generated@@83))
)))
(assert (= ($generated@@11 $generated@@85) 7))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@34 $generated@@85 $generated@@89 ($generated@@86 $generated@@90)) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@87 $generated@@89 $generated@@91) ($generated@@88 $generated@@91 $generated@@90))
 :pattern ( ($generated@@87 $generated@@89 $generated@@91))
)))
 :pattern ( ($generated@@34 $generated@@85 $generated@@89 ($generated@@86 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@34 $generated@@13 $generated@@92 $generated@@31) (<= ($generated@@77 0) ($generated@@18 $generated@@92)))
 :pattern ( ($generated@@34 $generated@@13 $generated@@92 $generated@@31))
)))
(assert ($generated@@45 $generated@@2))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (and (and ($generated@@93 $generated@@94) (and (or (not (= $generated@@95 $generated@@37)) (not true)) (= ($generated@@38 $generated@@95) $generated@@36))) ($generated@@16 ($generated@@46 $generated@@12 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@94 $generated@@95) $generated@@2)))) ($generated@@30 $generated@@13 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@94 $generated@@95) $generated@@43)) $generated $generated@@94))
 :pattern ( ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@94 $generated@@95) $generated@@43)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@96 ($generated@@82 $generated@@100 $generated@@97) $generated@@98 $generated@@99) ($generated@@30 $generated@@100 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@96 ($generated@@82 $generated@@100 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@73 $generated@@101 $generated@@102) (=> ($generated@@96 $generated@@103 $generated@@104 $generated@@101) ($generated@@96 $generated@@103 $generated@@104 $generated@@102)))
 :pattern ( ($generated@@73 $generated@@101 $generated@@102) ($generated@@96 $generated@@103 $generated@@104 $generated@@101))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (!  (=> ($generated@@73 $generated@@105 $generated@@106) (=> ($generated@@30 $generated@@109 $generated@@107 $generated@@108 $generated@@105) ($generated@@30 $generated@@109 $generated@@107 $generated@@108 $generated@@106)))
 :pattern ( ($generated@@73 $generated@@105 $generated@@106) ($generated@@30 $generated@@109 $generated@@107 $generated@@108 $generated@@105))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@88 $generated@@110 $generated@@31) (and (= ($generated@@82 $generated@@13 ($generated@@46 $generated@@13 $generated@@110)) $generated@@110) ($generated@@34 $generated@@13 ($generated@@46 $generated@@13 $generated@@110) $generated@@31)))
 :pattern ( ($generated@@88 $generated@@110 $generated@@31))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@88 $generated@@111 $generated@@40) (and (= ($generated@@82 $generated@@35 ($generated@@46 $generated@@35 $generated@@111)) $generated@@111) ($generated@@34 $generated@@35 ($generated@@46 $generated@@35 $generated@@111) $generated@@40)))
 :pattern ( ($generated@@88 $generated@@111 $generated@@40))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@88 $generated@@112 $generated@@36) (and (= ($generated@@82 $generated@@35 ($generated@@46 $generated@@35 $generated@@112)) $generated@@112) ($generated@@34 $generated@@35 ($generated@@46 $generated@@35 $generated@@112) $generated@@36)))
 :pattern ( ($generated@@88 $generated@@112 $generated@@36))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@113 $generated@@40)  (and ($generated@@34 $generated@@35 $generated@@113 $generated@@36) (or (not (= $generated@@113 $generated@@37)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@113 $generated@@40))
 :pattern ( ($generated@@34 $generated@@35 $generated@@113 $generated@@36))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or (not (= $generated@@114 $generated@@116)) (not true)) (=> (and ($generated@@73 $generated@@114 $generated@@115) ($generated@@73 $generated@@115 $generated@@116)) ($generated@@73 $generated@@114 $generated@@116)))
 :pattern ( ($generated@@73 $generated@@114 $generated@@115) ($generated@@73 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (and (= ($generated@@117 ($generated@@44 $generated@@118 $generated@@119)) $generated@@118) (= ($generated@@29 ($generated@@44 $generated@@118 $generated@@119)) $generated@@119))
 :pattern ( ($generated@@44 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@88 $generated@@120 $generated) (and (= ($generated@@82 $generated@@13 ($generated@@46 $generated@@13 $generated@@120)) $generated@@120) ($generated@@34 $generated@@13 ($generated@@46 $generated@@13 $generated@@120) $generated)))
 :pattern ( ($generated@@88 $generated@@120 $generated))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@88 ($generated@@82 $generated@@123 $generated@@121) $generated@@122) ($generated@@34 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@88 ($generated@@82 $generated@@123 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@30 $generated@@85 $generated@@124 ($generated@@86 $generated@@125) $generated@@126) (forall (($generated@@127 T@U) ) (!  (=> ($generated@@87 $generated@@124 $generated@@127) ($generated@@96 $generated@@127 $generated@@125 $generated@@126))
 :pattern ( ($generated@@87 $generated@@124 $generated@@127))
)))
 :pattern ( ($generated@@30 $generated@@85 $generated@@124 ($generated@@86 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@86 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@86 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@28 ($generated@@86 $generated@@130)) $generated@@1)
 :pattern ( ($generated@@86 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@46 $generated@@132 ($generated@@82 $generated@@132 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@82 $generated@@132 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and ($generated@@93 $generated@@133) (and (or (not (= $generated@@134 $generated@@37)) (not true)) (= ($generated@@38 $generated@@134) $generated@@36))) ($generated@@34 $generated@@13 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@133 $generated@@134) $generated@@43)) $generated))
 :pattern ( ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@133 $generated@@134) $generated@@43)))
)))
(assert  (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@135 $generated@@138 $generated@@139 $generated@@140 ($generated@@137 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@143 $generated@@144) $generated@@141)
 :weight 0
)) (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@135 $generated@@145 $generated@@146 $generated@@147 ($generated@@137 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@135 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@135 $generated@@154 $generated@@155 $generated@@156 ($generated@@137 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@135 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 Bool) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@16 ($generated@@135 $generated@@35 $generated@@48 $generated@@12 ($generated@@136 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))  (=> (and (or (not (= $generated@@167 $generated@@163)) (not true)) ($generated@@16 ($generated@@46 $generated@@12 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@164 $generated@@167) $generated@@165)))) $generated@@166))
 :pattern ( ($generated@@135 $generated@@35 $generated@@48 $generated@@12 ($generated@@136 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@88 $generated@@169 ($generated@@86 $generated@@170)) (and (= ($generated@@82 $generated@@85 ($generated@@46 $generated@@85 $generated@@169)) $generated@@169) ($generated@@34 $generated@@85 ($generated@@46 $generated@@85 $generated@@169) ($generated@@86 $generated@@170))))
 :pattern ( ($generated@@88 $generated@@169 ($generated@@86 $generated@@170)))
)))
(assert (= ($generated@@28 $generated@@31) $generated@@4))
(assert (= ($generated@@171 $generated@@31) $generated@@8))
(assert (= ($generated@@28 $generated@@40) $generated@@5))
(assert (= ($generated@@171 $generated@@40) $generated@@9))
(assert (= ($generated@@28 $generated@@36) $generated@@7))
(assert (= ($generated@@171 $generated@@36) $generated@@9))
(assert (forall (($generated@@172 Int) ) (! (= ($generated@@82 $generated@@13 ($generated@@17 ($generated@@77 $generated@@172))) ($generated@@79 $generated@@49 ($generated@@82 $generated@@13 ($generated@@17 $generated@@172))))
 :pattern ( ($generated@@82 $generated@@13 ($generated@@17 ($generated@@77 $generated@@172))))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@82 $generated@@174 ($generated@@79 $generated@@174 $generated@@173)) ($generated@@79 $generated@@49 ($generated@@82 $generated@@174 $generated@@173)))
 :pattern ( ($generated@@82 $generated@@174 ($generated@@79 $generated@@174 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! ($generated@@30 $generated@@13 $generated@@176 $generated $generated@@175)
 :pattern ( ($generated@@30 $generated@@13 $generated@@176 $generated $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! ($generated@@34 $generated@@13 $generated@@177 $generated)
 :pattern ( ($generated@@34 $generated@@13 $generated@@177 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (Int) Bool)
(declare-fun $generated@@185 (Int) Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 (Int) Bool)
(declare-fun $generated@@188 (Int) Bool)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@191 true))
(let (($generated@@192  (=> (and (=> (and ($generated@@87 $generated@@178 ($generated@@82 $generated@@35 $generated@@179)) ($generated@@87 $generated@@178 ($generated@@82 $generated@@35 $generated@@180))) (= ($generated@@18 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@181 $generated@@179) $generated@@43))) ($generated@@18 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@181 $generated@@180) $generated@@43))))) (= (ControlFlow 0 5) 1)) $generated@@191)))
(let (($generated@@193  (=> (and ($generated@@87 $generated@@178 ($generated@@82 $generated@@35 $generated@@179)) ($generated@@87 $generated@@178 ($generated@@82 $generated@@35 $generated@@180))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@179 $generated@@37)) (not true))) (=> (or (not (= $generated@@179 $generated@@37)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@180 $generated@@37)) (not true))) (=> (or (not (= $generated@@180 $generated@@37)) (not true)) (=> (and (= ($generated@@18 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@181 $generated@@179) $generated@@43))) ($generated@@18 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@35 ($generated@@50 $generated@@48 $generated@@49) $generated@@181 $generated@@180) $generated@@43)))) (= (ControlFlow 0 2) 1)) $generated@@191))))))))
(let (($generated@@194  (=> (= $generated@@182 ($generated@@136 $generated@@37 $generated@@181 $generated@@2 false)) (=> (and (<= ($generated@@77 0) $generated@@183) ($generated@@30 $generated@@13 ($generated@@17 $generated@@183) $generated $generated@@181)) (=> (and (and ($generated@@184 $generated@@183) (<= ($generated@@77 0) ($generated@@185 $generated@@183))) (and ($generated@@30 $generated@@13 ($generated@@17 $generated@@183) $generated $generated@@181) ($generated@@184 $generated@@183))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@34 $generated@@13 ($generated@@17 ($generated@@185 $generated@@183)) $generated@@31)) (=> ($generated@@34 $generated@@13 ($generated@@17 ($generated@@185 $generated@@183)) $generated@@31) (=> (= $generated@@186 ($generated@@185 $generated@@183)) (=> (and (and (and ($generated@@30 $generated@@13 ($generated@@17 $generated@@186) $generated@@31 $generated@@181) ($generated@@187 ($generated@@185 $generated@@183))) (and ($generated@@188 ($generated@@185 $generated@@183)) (forall (($generated@@195 Int) ) (!  (=> (<= ($generated@@77 0) $generated@@195) (and (<= ($generated@@77 0) ($generated@@185 $generated@@195)) ($generated@@188 ($generated@@185 $generated@@195))))
 :pattern ( ($generated@@185 $generated@@195))
)))) (and (and ($generated@@34 $generated@@35 $generated@@179 $generated@@40) ($generated@@30 $generated@@35 $generated@@179 $generated@@40 $generated@@181)) (and ($generated@@34 $generated@@35 $generated@@180 $generated@@40) ($generated@@30 $generated@@35 $generated@@180 $generated@@40 $generated@@181)))) (and (=> (= (ControlFlow 0 6) 2) $generated@@193) (=> (= (ControlFlow 0 6) 5) $generated@@192)))))))))))
(let (($generated@@196  (=> (and ($generated@@93 $generated@@181) ($generated@@189 $generated@@181)) (=> (and (and ($generated@@34 $generated@@85 $generated@@178 ($generated@@86 $generated@@40)) ($generated@@30 $generated@@85 $generated@@178 ($generated@@86 $generated@@40) $generated@@181)) (and (= 1 $generated@@190) (= (ControlFlow 0 8) 6))) $generated@@194))))
$generated@@196))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
