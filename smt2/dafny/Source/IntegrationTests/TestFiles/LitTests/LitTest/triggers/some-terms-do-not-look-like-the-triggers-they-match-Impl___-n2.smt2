(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 (T@U T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (Int) Int)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U T@U T@U) Bool)
(declare-fun $generated@@47 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U Int) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@79 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@83 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@22 $generated@@23) $generated@@24)  (or (= $generated@@23 $generated@@24) ($generated@@20 $generated@@22 $generated@@24)))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@22 $generated@@23) $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ) (!  (not ($generated@@20 $generated@@25 $generated@@26))
 :pattern ( ($generated@@20 $generated@@25 $generated@@26))
)))
(assert (= ($generated@@27 $generated@@25) 0))
(assert (forall (($generated@@29 Int) ) (! (= ($generated@@28 $generated@@29) $generated@@29)
 :pattern ( ($generated@@28 $generated@@29))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@T) ) (! (= ($generated@@30 $generated@@32 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@32 $generated@@31))
)))
(assert (= ($generated@@3 $generated@@34) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@39)) ($generated@@36 $generated@@38 $generated@@39)) ($generated@@33 $generated@@34 ($generated@@21 $generated@@37 $generated@@38) ($generated@@35 $generated@@39)))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@21 $generated@@37 $generated@@38) ($generated@@35 $generated@@39)))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 ($generated@@40 $generated@@43 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@40 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@27 ($generated@@21 $generated@@44 $generated@@45)) (+ 1 ($generated@@27 $generated@@44)))
 :pattern ( ($generated@@21 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@46 ($generated@@41 $generated@@51 $generated@@48) $generated@@49 $generated@@50) ($generated@@47 $generated@@51 $generated@@48 $generated@@49 $generated@@50))
 :pattern ( ($generated@@46 ($generated@@41 $generated@@51 $generated@@48) $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@27 ($generated@@52 $generated@@53 $generated@@54)) (+ ($generated@@27 $generated@@53) ($generated@@27 $generated@@54)))
 :pattern ( ($generated@@27 ($generated@@52 $generated@@53 $generated@@54)))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 Int) ($generated@@58 T@U) ) (!  (and (=> (= $generated@@57 ($generated@@27 $generated@@56)) (= ($generated@@55 ($generated@@21 $generated@@56 $generated@@58) $generated@@57) $generated@@58)) (=> (or (not (= $generated@@57 ($generated@@27 $generated@@56))) (not true)) (= ($generated@@55 ($generated@@21 $generated@@56 $generated@@58) $generated@@57) ($generated@@55 $generated@@56 $generated@@57))))
 :pattern ( ($generated@@55 ($generated@@21 $generated@@56 $generated@@58) $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@20 ($generated@@52 $generated@@59 $generated@@60) $generated@@61)  (or ($generated@@20 $generated@@59 $generated@@61) ($generated@@20 $generated@@60 $generated@@61)))
 :pattern ( ($generated@@20 ($generated@@52 $generated@@59 $generated@@60) $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@20 $generated@@62 $generated@@63) (exists (($generated@@64 Int) ) (!  (and (and (<= 0 $generated@@64) (< $generated@@64 ($generated@@27 $generated@@62))) (= ($generated@@55 $generated@@62 $generated@@64) $generated@@63))
 :pattern ( ($generated@@55 $generated@@62 $generated@@64))
)))
 :pattern ( ($generated@@20 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@36 $generated@@65 $generated) (and (= ($generated@@41 $generated@@5 ($generated@@40 $generated@@5 $generated@@65)) $generated@@65) ($generated@@33 $generated@@5 ($generated@@40 $generated@@5 $generated@@65) $generated)))
 :pattern ( ($generated@@36 $generated@@65 $generated))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@36 ($generated@@41 $generated@@68 $generated@@66) $generated@@67) ($generated@@33 $generated@@68 $generated@@66 $generated@@67))
 :pattern ( ($generated@@36 ($generated@@41 $generated@@68 $generated@@66) $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (<= 0 ($generated@@27 $generated@@69))
 :pattern ( ($generated@@27 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@47 $generated@@34 $generated@@70 ($generated@@35 $generated@@71) $generated@@72) (forall (($generated@@73 Int) ) (!  (=> (and (<= 0 $generated@@73) (< $generated@@73 ($generated@@27 $generated@@70))) ($generated@@46 ($generated@@55 $generated@@70 $generated@@73) $generated@@71 $generated@@72))
 :pattern ( ($generated@@55 $generated@@70 $generated@@73))
)))
 :pattern ( ($generated@@47 $generated@@34 $generated@@70 ($generated@@35 $generated@@71) $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@74 ($generated@@35 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@35 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@19 ($generated@@35 $generated@@76)) $generated@@1)
 :pattern ( ($generated@@35 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@40 $generated@@78 ($generated@@41 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@41 $generated@@78 $generated@@77))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@79 $generated@@90 $generated@@91 $generated@@92 ($generated@@86 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@95 $generated@@96 $generated@@93) $generated@@95 $generated@@96) $generated@@93)
 :weight 0
)) (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or (= $generated@@102 $generated@@104) (= ($generated@@79 $generated@@97 $generated@@98 $generated@@99 ($generated@@86 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@104 $generated@@105) ($generated@@79 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@104 $generated@@105)))
 :weight 0
)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@112 $generated@@114) (= ($generated@@79 $generated@@106 $generated@@107 $generated@@108 ($generated@@86 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@113 $generated@@114) ($generated@@79 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@113 $generated@@114)))
 :weight 0
)))) (= ($generated@@3 $generated@@80) 4)) (= ($generated@@3 $generated@@81) 5)) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@83 $generated@@115 $generated@@116 ($generated@@87 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@117) $generated@@119) $generated@@117)
 :weight 0
))) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@83 $generated@@120 $generated@@121 ($generated@@87 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@83 $generated@@120 $generated@@121 $generated@@123 $generated@@125)))
 :weight 0
))) (= ($generated@@3 $generated@@84) 6)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (= ($generated@@3 ($generated@@85 $generated@@126 $generated@@127)) 7))) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@128 $generated@@129)) $generated@@128)
 :pattern ( ($generated@@85 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@130 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@85 $generated@@130 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 Bool) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@8 ($generated@@79 $generated@@80 $generated@@81 $generated@@4 ($generated@@82 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))  (=> (and (or (not (= $generated@@136 $generated@@132)) (not true)) ($generated@@8 ($generated@@40 $generated@@4 ($generated@@83 $generated@@81 $generated@@84 ($generated@@83 $generated@@80 ($generated@@85 $generated@@81 $generated@@84) $generated@@133 $generated@@136) $generated@@134)))) $generated@@135))
 :pattern ( ($generated@@79 $generated@@80 $generated@@81 $generated@@4 ($generated@@82 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (and (= ($generated@@138 ($generated@@21 $generated@@140 $generated@@141)) $generated@@140) (= ($generated@@139 ($generated@@21 $generated@@140 $generated@@141)) $generated@@141))
 :pattern ( ($generated@@21 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@36 $generated@@142 ($generated@@35 $generated@@143)) (and (= ($generated@@41 $generated@@34 ($generated@@40 $generated@@34 $generated@@142)) $generated@@142) ($generated@@33 $generated@@34 ($generated@@40 $generated@@34 $generated@@142) ($generated@@35 $generated@@143))))
 :pattern ( ($generated@@36 $generated@@142 ($generated@@35 $generated@@143)))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Int) ) (!  (and (=> (< $generated@@146 ($generated@@27 $generated@@144)) (= ($generated@@55 ($generated@@52 $generated@@144 $generated@@145) $generated@@146) ($generated@@55 $generated@@144 $generated@@146))) (=> (<= ($generated@@27 $generated@@144) $generated@@146) (= ($generated@@55 ($generated@@52 $generated@@144 $generated@@145) $generated@@146) ($generated@@55 $generated@@145 (- $generated@@146 ($generated@@27 $generated@@144))))))
 :pattern ( ($generated@@55 ($generated@@52 $generated@@144 $generated@@145) $generated@@146))
)))
(assert (forall (($generated@@147 Int) ) (! (= ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 $generated@@147))) ($generated@@30 $generated@@84 ($generated@@41 $generated@@5 ($generated@@9 $generated@@147))))
 :pattern ( ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 $generated@@147))))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@41 $generated@@149 ($generated@@30 $generated@@149 $generated@@148)) ($generated@@30 $generated@@84 ($generated@@41 $generated@@149 $generated@@148)))
 :pattern ( ($generated@@41 $generated@@149 ($generated@@30 $generated@@149 $generated@@148)))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= ($generated@@27 $generated@@150) 0) (= $generated@@150 $generated@@25))
 :pattern ( ($generated@@27 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! ($generated@@47 $generated@@5 $generated@@152 $generated $generated@@151)
 :pattern ( ($generated@@47 $generated@@5 $generated@@152 $generated $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@153 ($generated@@35 $generated@@154)) (forall (($generated@@155 Int) ) (!  (=> (and (<= 0 $generated@@155) (< $generated@@155 ($generated@@27 $generated@@153))) ($generated@@36 ($generated@@55 $generated@@153 $generated@@155) $generated@@154))
 :pattern ( ($generated@@55 $generated@@153 $generated@@155))
)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@153 ($generated@@35 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ) (! ($generated@@33 $generated@@5 $generated@@156 $generated)
 :pattern ( ($generated@@33 $generated@@5 $generated@@156 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () Bool)
(declare-fun $generated@@161 () Bool)
(declare-fun $generated@@162 () Bool)
(declare-fun $generated@@163 () Bool)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 44) (let (($generated@@174  (and (=> (= (ControlFlow 0 25) (- 0 26)) ($generated@@20 ($generated@@52 $generated@@157 $generated@@158) ($generated@@41 $generated@@5 ($generated@@9 $generated@@159)))) (=> ($generated@@20 ($generated@@52 $generated@@157 $generated@@158) ($generated@@41 $generated@@5 ($generated@@9 $generated@@159))) (=> (= (ControlFlow 0 25) (- 0 24)) (< $generated@@159 200))))))
(let (($generated@@175 true))
(let (($generated@@176  (=> (or ($generated@@20 $generated@@157 ($generated@@41 $generated@@5 ($generated@@9 $generated@@159))) ($generated@@20 $generated@@158 ($generated@@41 $generated@@5 ($generated@@9 $generated@@159)))) (and (=> (= (ControlFlow 0 27) 23) $generated@@175) (=> (= (ControlFlow 0 27) 25) $generated@@174)))))
(let (($generated@@177  (=> (and ($generated@@20 $generated@@157 ($generated@@41 $generated@@5 ($generated@@9 $generated@@159))) (= (ControlFlow 0 29) 27)) $generated@@176)))
(let (($generated@@178  (=> (and (not ($generated@@20 $generated@@157 ($generated@@41 $generated@@5 ($generated@@9 $generated@@159)))) (= (ControlFlow 0 28) 27)) $generated@@176)))
(let (($generated@@179  (and (=> (= (ControlFlow 0 30) 28) $generated@@178) (=> (= (ControlFlow 0 30) 29) $generated@@177))))
(let (($generated@@180  (and (=> (= (ControlFlow 0 16) (- 0 17)) (=> $generated@@160 $generated@@161)) (=> (and (=> $generated@@160 $generated@@161) (= (ControlFlow 0 16) (- 0 15))) (= $generated@@161 $generated@@160)))))
(let (($generated@@181  (=> (and (not $generated@@160) (= (ControlFlow 0 19) 16)) $generated@@180)))
(let (($generated@@182  (=> (and $generated@@160 (= (ControlFlow 0 18) 16)) $generated@@180)))
(let (($generated@@183  (=> (forall (($generated@@184 T@U) ) (!  (=> (or ($generated@@20 $generated@@157 ($generated@@41 $generated@@5 $generated@@184)) ($generated@@20 $generated@@158 ($generated@@41 $generated@@5 $generated@@184))) (< ($generated@@10 $generated@@184) 200))
 :pattern ( ($generated@@20 $generated@@158 ($generated@@41 $generated@@5 $generated@@184)))
 :pattern ( ($generated@@20 $generated@@157 ($generated@@41 $generated@@5 $generated@@184)))
)) (and (=> (= (ControlFlow 0 21) (- 0 22)) $generated@@160) (=> $generated@@160 (and (=> (= (ControlFlow 0 21) 18) $generated@@182) (=> (= (ControlFlow 0 21) 19) $generated@@181)))))))
(let (($generated@@185  (=> $generated@@161 (and (=> (= (ControlFlow 0 31) 30) $generated@@179) (=> (= (ControlFlow 0 31) 21) $generated@@183)))))
(let (($generated@@186  (=> (not $generated@@161) (and (=> (= (ControlFlow 0 20) 18) $generated@@182) (=> (= (ControlFlow 0 20) 19) $generated@@181)))))
(let (($generated@@187  (and (=> (= (ControlFlow 0 32) 31) $generated@@185) (=> (= (ControlFlow 0 32) 20) $generated@@186))))
(let (($generated@@188  (=> (and (= $generated@@162 (forall (($generated@@189 Int) ) (!  (=> ($generated@@20 ($generated@@21 ($generated@@21 ($generated@@21 $generated@@25 ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 2)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 3)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 5)))) ($generated@@41 $generated@@5 ($generated@@9 $generated@@189))) (< $generated@@189 200))
 :pattern ( ($generated@@20 ($generated@@21 ($generated@@21 ($generated@@21 $generated@@25 ($generated@@41 $generated@@5 ($generated@@9 2))) ($generated@@41 $generated@@5 ($generated@@9 3))) ($generated@@41 $generated@@5 ($generated@@9 5))) ($generated@@41 $generated@@5 ($generated@@9 $generated@@189))))
))) (= (ControlFlow 0 6) (- 0 5))) (= $generated@@163 $generated@@162))))
(let (($generated@@190  (=> (and (not ($generated@@20 ($generated@@21 ($generated@@21 ($generated@@21 $generated@@25 ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 2)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 3)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 5)))) ($generated@@41 $generated@@5 ($generated@@9 $generated@@164)))) (= (ControlFlow 0 8) 6)) $generated@@188)))
(let (($generated@@191  (=> (and ($generated@@20 ($generated@@21 ($generated@@21 ($generated@@21 $generated@@25 ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 2)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 3)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 5)))) ($generated@@41 $generated@@5 ($generated@@9 $generated@@164))) (= (ControlFlow 0 7) 6)) $generated@@188)))
(let (($generated@@192  (and (=> (= (ControlFlow 0 9) 7) $generated@@191) (=> (= (ControlFlow 0 9) 8) $generated@@190))))
(let (($generated@@193 true))
(let (($generated@@194  (=> (= $generated@@163 (forall (($generated@@195 Int) ) (!  (=> ($generated@@20 ($generated@@21 ($generated@@21 ($generated@@21 $generated@@25 ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 2)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 3)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 5)))) ($generated@@41 $generated@@5 ($generated@@9 $generated@@195))) (< $generated@@195 200))
 :pattern ( ($generated@@20 ($generated@@21 ($generated@@21 ($generated@@21 $generated@@25 ($generated@@41 $generated@@5 ($generated@@9 2))) ($generated@@41 $generated@@5 ($generated@@9 3))) ($generated@@41 $generated@@5 ($generated@@9 5))) ($generated@@41 $generated@@5 ($generated@@9 $generated@@195))))
))) (and (=> (= (ControlFlow 0 10) 9) $generated@@192) (=> (= (ControlFlow 0 10) 4) $generated@@193)))))
(let (($generated@@196  (=> (and (not ($generated@@20 ($generated@@21 ($generated@@21 ($generated@@21 $generated@@25 ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 2)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 3)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 5)))) ($generated@@41 $generated@@5 ($generated@@9 $generated@@165)))) (= (ControlFlow 0 12) 10)) $generated@@194)))
(let (($generated@@197  (=> (and ($generated@@20 ($generated@@21 ($generated@@21 ($generated@@21 $generated@@25 ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 2)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 3)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@28 5)))) ($generated@@41 $generated@@5 ($generated@@9 $generated@@165))) (= (ControlFlow 0 11) 10)) $generated@@194)))
(let (($generated@@198  (and (=> (= (ControlFlow 0 13) 11) $generated@@197) (=> (= (ControlFlow 0 13) 12) $generated@@196))))
(let (($generated@@199 true))
(let (($generated@@200  (=> (= $generated@@161 $generated@@160) (and (=> (= (ControlFlow 0 14) 13) $generated@@198) (=> (= (ControlFlow 0 14) 3) $generated@@199)))))
(let (($generated@@201  (=> (= $generated@@160 (forall (($generated@@202 Int) ) (!  (=> (or ($generated@@20 $generated@@157 ($generated@@41 $generated@@5 ($generated@@9 $generated@@202))) ($generated@@20 $generated@@158 ($generated@@41 $generated@@5 ($generated@@9 $generated@@202)))) (< $generated@@202 200))
 :pattern ( ($generated@@20 $generated@@158 ($generated@@41 $generated@@5 ($generated@@9 $generated@@202))))
 :pattern ( ($generated@@20 $generated@@157 ($generated@@41 $generated@@5 ($generated@@9 $generated@@202))))
))) (and (=> (= (ControlFlow 0 33) 32) $generated@@187) (=> (= (ControlFlow 0 33) 14) $generated@@200)))))
(let (($generated@@203  (=> (and (not (or ($generated@@20 $generated@@157 ($generated@@41 $generated@@5 ($generated@@9 $generated@@166))) ($generated@@20 $generated@@158 ($generated@@41 $generated@@5 ($generated@@9 $generated@@166))))) (= (ControlFlow 0 35) 33)) $generated@@201)))
(let (($generated@@204  (=> (and (or ($generated@@20 $generated@@157 ($generated@@41 $generated@@5 ($generated@@9 $generated@@166))) ($generated@@20 $generated@@158 ($generated@@41 $generated@@5 ($generated@@9 $generated@@166)))) (= (ControlFlow 0 34) 33)) $generated@@201)))
(let (($generated@@205  (=> ($generated@@20 $generated@@157 ($generated@@41 $generated@@5 ($generated@@9 $generated@@166))) (and (=> (= (ControlFlow 0 37) 34) $generated@@204) (=> (= (ControlFlow 0 37) 35) $generated@@203)))))
(let (($generated@@206  (=> (not ($generated@@20 $generated@@157 ($generated@@41 $generated@@5 ($generated@@9 $generated@@166)))) (and (=> (= (ControlFlow 0 36) 34) $generated@@204) (=> (= (ControlFlow 0 36) 35) $generated@@203)))))
(let (($generated@@207  (and (=> (= (ControlFlow 0 38) 36) $generated@@206) (=> (= (ControlFlow 0 38) 37) $generated@@205))))
(let (($generated@@208 true))
(let (($generated@@209  (=> (= $generated@@161 (forall (($generated@@210 Int) ) (!  (=> ($generated@@20 ($generated@@52 $generated@@157 $generated@@158) ($generated@@41 $generated@@5 ($generated@@9 $generated@@210))) (< $generated@@210 200))
 :pattern ( ($generated@@20 ($generated@@52 $generated@@157 $generated@@158) ($generated@@41 $generated@@5 ($generated@@9 $generated@@210))))
))) (and (=> (= (ControlFlow 0 39) 38) $generated@@207) (=> (= (ControlFlow 0 39) 2) $generated@@208)))))
(let (($generated@@211  (=> (and (not ($generated@@20 ($generated@@52 $generated@@157 $generated@@158) ($generated@@41 $generated@@5 ($generated@@9 $generated@@167)))) (= (ControlFlow 0 41) 39)) $generated@@209)))
(let (($generated@@212  (=> (and ($generated@@20 ($generated@@52 $generated@@157 $generated@@158) ($generated@@41 $generated@@5 ($generated@@9 $generated@@167))) (= (ControlFlow 0 40) 39)) $generated@@209)))
(let (($generated@@213  (and (=> (= (ControlFlow 0 42) 40) $generated@@212) (=> (= (ControlFlow 0 42) 41) $generated@@211))))
(let (($generated@@214 true))
(let (($generated@@215  (=> (= $generated@@168 ($generated@@82 $generated@@169 $generated@@170 $generated@@2 false)) (and (=> (= (ControlFlow 0 43) 42) $generated@@213) (=> (= (ControlFlow 0 43) 1) $generated@@214)))))
(let (($generated@@216  (=> (and (and (and ($generated@@171 $generated@@170) ($generated@@172 $generated@@170)) (and ($generated@@33 $generated@@34 $generated@@157 ($generated@@35 $generated)) ($generated@@47 $generated@@34 $generated@@157 ($generated@@35 $generated) $generated@@170))) (and (and ($generated@@33 $generated@@34 $generated@@158 ($generated@@35 $generated)) ($generated@@47 $generated@@34 $generated@@158 ($generated@@35 $generated) $generated@@170)) (and (= 0 $generated@@173) (= (ControlFlow 0 44) 43)))) $generated@@215)))
$generated@@216)))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
