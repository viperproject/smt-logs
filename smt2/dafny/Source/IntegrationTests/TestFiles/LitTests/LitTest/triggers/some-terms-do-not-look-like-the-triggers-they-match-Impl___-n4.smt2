(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U T@U T@U) Bool)
(declare-fun $generated@@49 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U T@U) Int)
(declare-fun $generated@@65 (T@U) Int)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 (T@U Int) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@161 (T@U T@U Int) Bool)
(declare-fun $generated@@172 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (= ($generated@@22 $generated@@23) 0))
(assert (= ($generated@@5 $generated@@25) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@29)) ($generated@@27 $generated@@28))
 :pattern ( ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@29)))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@T) ) (! (= ($generated@@30 $generated@@32 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@32 $generated@@31))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@33 $generated@@35 $generated@@36) (forall (($generated@@37 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@37) ($generated@@34 $generated@@36 $generated@@37))
 :pattern ( ($generated@@34 $generated@@35 $generated@@37))
 :pattern ( ($generated@@34 $generated@@36 $generated@@37))
)))
 :pattern ( ($generated@@33 $generated@@35 $generated@@36))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@39 $generated@@41 ($generated@@38 $generated@@41 $generated@@40)) $generated@@40)
 :pattern ( ($generated@@38 $generated@@41 $generated@@40))
)))
(assert (= ($generated@@5 $generated@@42) 4))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@24 $generated@@42 $generated@@45 ($generated@@43 $generated@@46)) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@34 $generated@@45 $generated@@47) ($generated@@44 $generated@@47 $generated@@46))
 :pattern ( ($generated@@34 $generated@@45 $generated@@47))
)))
 :pattern ( ($generated@@24 $generated@@42 $generated@@45 ($generated@@43 $generated@@46)))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@48 ($generated@@39 $generated@@53 $generated@@50) $generated@@51 $generated@@52) ($generated@@49 $generated@@53 $generated@@50 $generated@@51 $generated@@52))
 :pattern ( ($generated@@48 ($generated@@39 $generated@@53 $generated@@50) $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@54 $generated@@55 $generated@@56) (= $generated@@55 $generated@@56))
 :pattern ( ($generated@@54 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@58 ($generated@@26 $generated@@59)) (forall (($generated@@60 T@U) ) (!  (=> (< 0 ($generated@@57 $generated@@58 $generated@@60)) ($generated@@44 $generated@@60 $generated@@59))
 :pattern ( ($generated@@57 $generated@@58 $generated@@60))
)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@58 ($generated@@26 $generated@@59)))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@44 $generated@@61 $generated) (and (= ($generated@@39 $generated@@7 ($generated@@38 $generated@@7 $generated@@61)) $generated@@61) ($generated@@24 $generated@@7 ($generated@@38 $generated@@7 $generated@@61) $generated)))
 :pattern ( ($generated@@44 $generated@@61 $generated))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@44 ($generated@@39 $generated@@64 $generated@@62) $generated@@63) ($generated@@24 $generated@@64 $generated@@62 $generated@@63))
 :pattern ( ($generated@@44 ($generated@@39 $generated@@64 $generated@@62) $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@27 $generated@@66) (forall (($generated@@67 T@U) ) (!  (and (<= 0 ($generated@@57 $generated@@66 $generated@@67)) (<= ($generated@@57 $generated@@66 $generated@@67) ($generated@@65 $generated@@66)))
 :pattern ( ($generated@@57 $generated@@66 $generated@@67))
)))
 :pattern ( ($generated@@27 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (<= 0 ($generated@@65 $generated@@68))
 :pattern ( ($generated@@65 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (! (<= 0 ($generated@@22 $generated@@69))
 :pattern ( ($generated@@22 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@49 $generated@@42 $generated@@70 ($generated@@43 $generated@@71) $generated@@72) (forall (($generated@@73 T@U) ) (!  (=> ($generated@@34 $generated@@70 $generated@@73) ($generated@@48 $generated@@73 $generated@@71 $generated@@72))
 :pattern ( ($generated@@34 $generated@@70 $generated@@73))
)))
 :pattern ( ($generated@@49 $generated@@42 $generated@@70 ($generated@@43 $generated@@71) $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@57 $generated@@74 $generated@@75) 0)
 :pattern ( ($generated@@57 $generated@@74 $generated@@75))
)))
(assert (= ($generated@@5 $generated@@76) 5))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@49 $generated@@76 $generated@@79 ($generated@@77 $generated@@80) $generated@@81) (forall (($generated@@82 Int) ) (!  (=> (and (<= 0 $generated@@82) (< $generated@@82 ($generated@@22 $generated@@79))) ($generated@@48 ($generated@@78 $generated@@79 $generated@@82) $generated@@80 $generated@@81))
 :pattern ( ($generated@@78 $generated@@79 $generated@@82))
)))
 :pattern ( ($generated@@49 $generated@@76 $generated@@79 ($generated@@77 $generated@@80) $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@83 ($generated@@43 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@43 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@21 ($generated@@43 $generated@@85)) $generated@@1)
 :pattern ( ($generated@@43 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 ($generated@@26 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@26 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@21 ($generated@@26 $generated@@88)) $generated@@2)
 :pattern ( ($generated@@26 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@89 ($generated@@77 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@77 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@21 ($generated@@77 $generated@@91)) $generated@@3)
 :pattern ( ($generated@@77 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@38 $generated@@93 ($generated@@39 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@39 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= (= ($generated@@65 $generated@@94) 0) (= $generated@@94 $generated@@74)) (=> (or (not (= ($generated@@65 $generated@@94) 0)) (not true)) (exists (($generated@@95 T@U) ) (! (< 0 ($generated@@57 $generated@@94 $generated@@95))
 :pattern ( ($generated@@57 $generated@@94 $generated@@95))
))))
 :pattern ( ($generated@@65 $generated@@94))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@96 $generated@@107 $generated@@108 $generated@@109 ($generated@@103 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@112 $generated@@113) $generated@@110)
 :weight 0
)) (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@96 $generated@@114 $generated@@115 $generated@@116 ($generated@@103 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@96 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@96 $generated@@123 $generated@@124 $generated@@125 ($generated@@103 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)))) (= ($generated@@5 $generated@@97) 6)) (= ($generated@@5 $generated@@98) 7)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@100 $generated@@132 $generated@@133 ($generated@@104 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@134) $generated@@136) $generated@@134)
 :weight 0
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@100 $generated@@137 $generated@@138 ($generated@@104 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@100 $generated@@137 $generated@@138 $generated@@140 $generated@@142)))
 :weight 0
))) (= ($generated@@5 $generated@@101) 8)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (= ($generated@@5 ($generated@@102 $generated@@143 $generated@@144)) 9))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@102 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@102 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Bool) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@10 ($generated@@96 $generated@@97 $generated@@98 $generated@@6 ($generated@@99 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))  (=> (and (or (not (= $generated@@153 $generated@@149)) (not true)) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@100 $generated@@98 $generated@@101 ($generated@@100 $generated@@97 ($generated@@102 $generated@@98 $generated@@101) $generated@@150 $generated@@153) $generated@@151)))) $generated@@152))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98 $generated@@6 ($generated@@99 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@44 $generated@@155 ($generated@@43 $generated@@156)) (and (= ($generated@@39 $generated@@42 ($generated@@38 $generated@@42 $generated@@155)) $generated@@155) ($generated@@24 $generated@@42 ($generated@@38 $generated@@42 $generated@@155) ($generated@@43 $generated@@156))))
 :pattern ( ($generated@@44 $generated@@155 ($generated@@43 $generated@@156)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@44 $generated@@157 ($generated@@26 $generated@@158)) (and (= ($generated@@39 $generated@@25 ($generated@@38 $generated@@25 $generated@@157)) $generated@@157) ($generated@@24 $generated@@25 ($generated@@38 $generated@@25 $generated@@157) ($generated@@26 $generated@@158))))
 :pattern ( ($generated@@44 $generated@@157 ($generated@@26 $generated@@158)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@44 $generated@@159 ($generated@@77 $generated@@160)) (and (= ($generated@@39 $generated@@76 ($generated@@38 $generated@@76 $generated@@159)) $generated@@159) ($generated@@24 $generated@@76 ($generated@@38 $generated@@76 $generated@@159) ($generated@@77 $generated@@160))))
 :pattern ( ($generated@@44 $generated@@159 ($generated@@77 $generated@@160)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Int) ) (! (= ($generated@@161 $generated@@162 $generated@@163 $generated@@164) (forall (($generated@@165 Int) ) (!  (=> (and (<= 0 $generated@@165) (< $generated@@165 $generated@@164)) (= ($generated@@78 $generated@@162 $generated@@165) ($generated@@78 $generated@@163 $generated@@165)))
 :pattern ( ($generated@@78 $generated@@162 $generated@@165))
 :pattern ( ($generated@@78 $generated@@163 $generated@@165))
)))
 :pattern ( ($generated@@161 $generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@39 $generated@@167 ($generated@@30 $generated@@167 $generated@@166)) ($generated@@30 $generated@@101 ($generated@@39 $generated@@167 $generated@@166)))
 :pattern ( ($generated@@39 $generated@@167 ($generated@@30 $generated@@167 $generated@@166)))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= ($generated@@22 $generated@@168) 0) (= $generated@@168 $generated@@23))
 :pattern ( ($generated@@22 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@54 $generated@@169 $generated@@170) (forall (($generated@@171 T@U) ) (! (= ($generated@@57 $generated@@169 $generated@@171) ($generated@@57 $generated@@170 $generated@@171))
 :pattern ( ($generated@@57 $generated@@169 $generated@@171))
 :pattern ( ($generated@@57 $generated@@170 $generated@@171))
)))
 :pattern ( ($generated@@54 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@172 $generated@@173 $generated@@174) (forall (($generated@@175 T@U) ) (! (<= ($generated@@57 $generated@@173 $generated@@175) ($generated@@57 $generated@@174 $generated@@175))
 :pattern ( ($generated@@57 $generated@@173 $generated@@175))
 :pattern ( ($generated@@57 $generated@@174 $generated@@175))
)))
 :pattern ( ($generated@@172 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@49 $generated@@25 $generated@@176 ($generated@@26 $generated@@177) $generated@@178) (forall (($generated@@179 T@U) ) (!  (=> (< 0 ($generated@@57 $generated@@176 $generated@@179)) ($generated@@48 $generated@@179 $generated@@177 $generated@@178))
 :pattern ( ($generated@@57 $generated@@176 $generated@@179))
)))
 :pattern ( ($generated@@49 $generated@@25 $generated@@176 ($generated@@26 $generated@@177) $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! ($generated@@49 $generated@@7 $generated@@181 $generated $generated@@180)
 :pattern ( ($generated@@49 $generated@@7 $generated@@181 $generated $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@24 $generated@@76 $generated@@182 ($generated@@77 $generated@@183)) (forall (($generated@@184 Int) ) (!  (=> (and (<= 0 $generated@@184) (< $generated@@184 ($generated@@22 $generated@@182))) ($generated@@44 ($generated@@78 $generated@@182 $generated@@184) $generated@@183))
 :pattern ( ($generated@@78 $generated@@182 $generated@@184))
)))
 :pattern ( ($generated@@24 $generated@@76 $generated@@182 ($generated@@77 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ) (! ($generated@@24 $generated@@7 $generated@@185 $generated)
 :pattern ( ($generated@@24 $generated@@7 $generated@@185 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Bool)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Bool)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Bool)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Bool)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () Bool)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () Bool)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@215  (=> (and (= $generated@@186 (exists (($generated@@216 T@U) )  (and ($generated@@24 $generated@@76 $generated@@216 ($generated@@77 $generated)) (and (<= ($generated@@22 $generated@@216) ($generated@@22 $generated@@187)) ($generated@@161 $generated@@216 $generated@@187 ($generated@@22 $generated@@216)))))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@10 ($generated@@30 $generated@@6 ($generated@@9 true))))))
(let (($generated@@217  (=> (and (not (and ($generated@@24 $generated@@76 $generated@@188 ($generated@@77 $generated)) ($generated@@49 $generated@@76 $generated@@188 ($generated@@77 $generated) $generated@@189))) (= (ControlFlow 0 4) 2)) $generated@@215)))
(let (($generated@@218  (=> (and (and ($generated@@24 $generated@@76 $generated@@188 ($generated@@77 $generated)) ($generated@@49 $generated@@76 $generated@@188 ($generated@@77 $generated) $generated@@189)) (= (ControlFlow 0 3) 2)) $generated@@215)))
(let (($generated@@219  (=> (= $generated@@190 (exists (($generated@@220 T@U) )  (and ($generated@@24 $generated@@76 $generated@@220 ($generated@@77 $generated)) (and (< ($generated@@22 $generated@@220) ($generated@@22 $generated@@187)) ($generated@@161 $generated@@220 $generated@@187 ($generated@@22 $generated@@220)))))) (and (=> (= (ControlFlow 0 5) 3) $generated@@218) (=> (= (ControlFlow 0 5) 4) $generated@@217)))))
(let (($generated@@221  (=> (and (not (and ($generated@@24 $generated@@76 $generated@@191 ($generated@@77 $generated)) ($generated@@49 $generated@@76 $generated@@191 ($generated@@77 $generated) $generated@@189))) (= (ControlFlow 0 7) 5)) $generated@@219)))
(let (($generated@@222  (=> (and (and ($generated@@24 $generated@@76 $generated@@191 ($generated@@77 $generated)) ($generated@@49 $generated@@76 $generated@@191 ($generated@@77 $generated) $generated@@189)) (= (ControlFlow 0 6) 5)) $generated@@219)))
(let (($generated@@223  (=> (= $generated@@192 (exists (($generated@@224 T@U) ) (!  (and ($generated@@24 $generated@@25 $generated@@224 ($generated@@26 $generated)) (and ($generated@@172 $generated@@193 $generated@@224) (not ($generated@@54 $generated@@193 $generated@@224))))
 :pattern ( ($generated@@172 $generated@@193 $generated@@224))
))) (and (=> (= (ControlFlow 0 8) 6) $generated@@222) (=> (= (ControlFlow 0 8) 7) $generated@@221)))))
(let (($generated@@225  (=> (and (not (and ($generated@@24 $generated@@25 $generated@@194 ($generated@@26 $generated)) ($generated@@49 $generated@@25 $generated@@194 ($generated@@26 $generated) $generated@@189))) (= (ControlFlow 0 10) 8)) $generated@@223)))
(let (($generated@@226  (=> (and (and ($generated@@24 $generated@@25 $generated@@194 ($generated@@26 $generated)) ($generated@@49 $generated@@25 $generated@@194 ($generated@@26 $generated) $generated@@189)) (= (ControlFlow 0 9) 8)) $generated@@223)))
(let (($generated@@227  (=> (= $generated@@195 (exists (($generated@@228 T@U) ) (!  (and ($generated@@24 $generated@@25 $generated@@228 ($generated@@26 $generated)) ($generated@@172 $generated@@193 $generated@@228))
 :pattern ( ($generated@@172 $generated@@193 $generated@@228))
))) (and (=> (= (ControlFlow 0 11) 9) $generated@@226) (=> (= (ControlFlow 0 11) 10) $generated@@225)))))
(let (($generated@@229  (=> (and (not (and ($generated@@24 $generated@@25 $generated@@196 ($generated@@26 $generated)) ($generated@@49 $generated@@25 $generated@@196 ($generated@@26 $generated) $generated@@189))) (= (ControlFlow 0 13) 11)) $generated@@227)))
(let (($generated@@230  (=> (and (and ($generated@@24 $generated@@25 $generated@@196 ($generated@@26 $generated)) ($generated@@49 $generated@@25 $generated@@196 ($generated@@26 $generated) $generated@@189)) (= (ControlFlow 0 12) 11)) $generated@@227)))
(let (($generated@@231  (=> (= $generated@@197 (exists (($generated@@232 T@U) ) (!  (and ($generated@@24 $generated@@25 $generated@@232 ($generated@@26 $generated)) ($generated@@172 $generated@@232 $generated@@193))
 :pattern ( ($generated@@172 $generated@@232 $generated@@193))
))) (and (=> (= (ControlFlow 0 14) 12) $generated@@230) (=> (= (ControlFlow 0 14) 13) $generated@@229)))))
(let (($generated@@233  (=> (and (not (and ($generated@@24 $generated@@25 $generated@@198 ($generated@@26 $generated)) ($generated@@49 $generated@@25 $generated@@198 ($generated@@26 $generated) $generated@@189))) (= (ControlFlow 0 16) 14)) $generated@@231)))
(let (($generated@@234  (=> (and (and ($generated@@24 $generated@@25 $generated@@198 ($generated@@26 $generated)) ($generated@@49 $generated@@25 $generated@@198 ($generated@@26 $generated) $generated@@189)) (= (ControlFlow 0 15) 14)) $generated@@231)))
(let (($generated@@235  (=> (= $generated@@199 (exists (($generated@@236 T@U) ) (!  (and ($generated@@24 $generated@@25 $generated@@236 ($generated@@26 $generated)) (and ($generated@@172 $generated@@236 $generated@@193) (not ($generated@@54 $generated@@236 $generated@@193))))
 :pattern ( ($generated@@172 $generated@@236 $generated@@193))
))) (and (=> (= (ControlFlow 0 17) 15) $generated@@234) (=> (= (ControlFlow 0 17) 16) $generated@@233)))))
(let (($generated@@237  (=> (and (not (and ($generated@@24 $generated@@25 $generated@@200 ($generated@@26 $generated)) ($generated@@49 $generated@@25 $generated@@200 ($generated@@26 $generated) $generated@@189))) (= (ControlFlow 0 19) 17)) $generated@@235)))
(let (($generated@@238  (=> (and (and ($generated@@24 $generated@@25 $generated@@200 ($generated@@26 $generated)) ($generated@@49 $generated@@25 $generated@@200 ($generated@@26 $generated) $generated@@189)) (= (ControlFlow 0 18) 17)) $generated@@235)))
(let (($generated@@239  (=> (= $generated@@201 (exists (($generated@@240 T@U) ) (!  (and ($generated@@24 $generated@@42 $generated@@240 ($generated@@43 $generated)) (and ($generated@@33 $generated@@202 $generated@@240) (not ($generated@@33 $generated@@240 $generated@@202))))
 :pattern ( ($generated@@33 $generated@@202 $generated@@240))
))) (and (=> (= (ControlFlow 0 20) 18) $generated@@238) (=> (= (ControlFlow 0 20) 19) $generated@@237)))))
(let (($generated@@241  (=> (and (not (and ($generated@@24 $generated@@42 $generated@@203 ($generated@@43 $generated)) ($generated@@49 $generated@@42 $generated@@203 ($generated@@43 $generated) $generated@@189))) (= (ControlFlow 0 22) 20)) $generated@@239)))
(let (($generated@@242  (=> (and (and ($generated@@24 $generated@@42 $generated@@203 ($generated@@43 $generated)) ($generated@@49 $generated@@42 $generated@@203 ($generated@@43 $generated) $generated@@189)) (= (ControlFlow 0 21) 20)) $generated@@239)))
(let (($generated@@243  (=> (= $generated@@204 (exists (($generated@@244 T@U) ) (!  (and ($generated@@24 $generated@@42 $generated@@244 ($generated@@43 $generated)) ($generated@@33 $generated@@202 $generated@@244))
 :pattern ( ($generated@@33 $generated@@202 $generated@@244))
))) (and (=> (= (ControlFlow 0 23) 21) $generated@@242) (=> (= (ControlFlow 0 23) 22) $generated@@241)))))
(let (($generated@@245  (=> (and (not (and ($generated@@24 $generated@@42 $generated@@205 ($generated@@43 $generated)) ($generated@@49 $generated@@42 $generated@@205 ($generated@@43 $generated) $generated@@189))) (= (ControlFlow 0 25) 23)) $generated@@243)))
(let (($generated@@246  (=> (and (and ($generated@@24 $generated@@42 $generated@@205 ($generated@@43 $generated)) ($generated@@49 $generated@@42 $generated@@205 ($generated@@43 $generated) $generated@@189)) (= (ControlFlow 0 24) 23)) $generated@@243)))
(let (($generated@@247  (=> (= $generated@@206 (exists (($generated@@248 T@U) ) (!  (and ($generated@@24 $generated@@42 $generated@@248 ($generated@@43 $generated)) ($generated@@33 $generated@@248 $generated@@202))
 :pattern ( ($generated@@33 $generated@@248 $generated@@202))
))) (and (=> (= (ControlFlow 0 26) 24) $generated@@246) (=> (= (ControlFlow 0 26) 25) $generated@@245)))))
(let (($generated@@249  (=> (and (not (and ($generated@@24 $generated@@42 $generated@@207 ($generated@@43 $generated)) ($generated@@49 $generated@@42 $generated@@207 ($generated@@43 $generated) $generated@@189))) (= (ControlFlow 0 28) 26)) $generated@@247)))
(let (($generated@@250  (=> (and (and ($generated@@24 $generated@@42 $generated@@207 ($generated@@43 $generated)) ($generated@@49 $generated@@42 $generated@@207 ($generated@@43 $generated) $generated@@189)) (= (ControlFlow 0 27) 26)) $generated@@247)))
(let (($generated@@251  (=> (= $generated@@208 (exists (($generated@@252 T@U) ) (!  (and ($generated@@24 $generated@@42 $generated@@252 ($generated@@43 $generated)) (and ($generated@@33 $generated@@252 $generated@@202) (not ($generated@@33 $generated@@202 $generated@@252))))
 :pattern ( ($generated@@33 $generated@@252 $generated@@202))
))) (and (=> (= (ControlFlow 0 29) 27) $generated@@250) (=> (= (ControlFlow 0 29) 28) $generated@@249)))))
(let (($generated@@253  (=> (and (not (and ($generated@@24 $generated@@42 $generated@@209 ($generated@@43 $generated)) ($generated@@49 $generated@@42 $generated@@209 ($generated@@43 $generated) $generated@@189))) (= (ControlFlow 0 31) 29)) $generated@@251)))
(let (($generated@@254  (=> (and (and ($generated@@24 $generated@@42 $generated@@209 ($generated@@43 $generated)) ($generated@@49 $generated@@42 $generated@@209 ($generated@@43 $generated) $generated@@189)) (= (ControlFlow 0 30) 29)) $generated@@251)))
(let (($generated@@255  (=> (= $generated@@210 ($generated@@99 $generated@@211 $generated@@189 $generated@@4 false)) (and (=> (= (ControlFlow 0 32) 30) $generated@@254) (=> (= (ControlFlow 0 32) 31) $generated@@253)))))
(let (($generated@@256  (=> (and ($generated@@212 $generated@@189) ($generated@@213 $generated@@189)) (=> (and (and (and ($generated@@24 $generated@@42 $generated@@202 ($generated@@43 $generated)) ($generated@@49 $generated@@42 $generated@@202 ($generated@@43 $generated) $generated@@189)) (and ($generated@@24 $generated@@25 $generated@@193 ($generated@@26 $generated)) ($generated@@49 $generated@@25 $generated@@193 ($generated@@26 $generated) $generated@@189))) (and (and ($generated@@24 $generated@@76 $generated@@187 ($generated@@77 $generated)) ($generated@@49 $generated@@76 $generated@@187 ($generated@@77 $generated) $generated@@189)) (and (= 0 $generated@@214) (= (ControlFlow 0 33) 32)))) $generated@@255))))
$generated@@256)))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
