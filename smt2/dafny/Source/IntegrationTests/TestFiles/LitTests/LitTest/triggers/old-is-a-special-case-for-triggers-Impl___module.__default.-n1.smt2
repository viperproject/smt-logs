(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@T T@U T@U) Bool)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@T T@T) T@T)
(declare-fun $generated@@35 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@T) T@T)
(declare-fun $generated@@37 (T@T) T@T)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@67 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 () Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@4 $generated@@21) 3))
(assert (forall (($generated@@25 T@U) ) (! (= ($generated@@20 $generated@@21 $generated@@25 $generated@@22)  (or (= $generated@@25 $generated@@23) (= ($generated@@24 $generated@@25) $generated@@22)))
 :pattern ( ($generated@@20 $generated@@21 $generated@@25 $generated@@22))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@26 $generated@@21 $generated@@28 $generated@@27 $generated@@29) ($generated@@26 $generated@@21 $generated@@28 $generated@@22 $generated@@29))
 :pattern ( ($generated@@26 $generated@@21 $generated@@28 $generated@@27 $generated@@29))
 :pattern ( ($generated@@26 $generated@@21 $generated@@28 $generated@@22 $generated@@29))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@38 T@T) ($generated@@39 T@T) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@31 $generated@@38 $generated@@39 ($generated@@35 $generated@@38 $generated@@39 $generated@@41 $generated@@42 $generated@@40) $generated@@42) $generated@@40)
 :weight 0
)) (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (or (= $generated@@47 $generated@@48) (= ($generated@@31 $generated@@43 $generated@@44 ($generated@@35 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@48) ($generated@@31 $generated@@43 $generated@@44 $generated@@46 $generated@@48)))
 :weight 0
))) (= ($generated@@4 $generated@@32) 4)) (= ($generated@@4 $generated@@33) 5)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (= ($generated@@4 ($generated@@34 $generated@@49 $generated@@50)) 6))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (! (= ($generated@@36 ($generated@@34 $generated@@51 $generated@@52)) $generated@@51)
 :pattern ( ($generated@@34 $generated@@51 $generated@@52))
))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@37 ($generated@@34 $generated@@53 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@34 $generated@@53 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@26 $generated@@21 $generated@@55 $generated@@22 $generated@@56)  (or (= $generated@@55 $generated@@23) ($generated@@9 ($generated@@30 $generated@@5 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@56 $generated@@55) $generated@@0)))))
 :pattern ( ($generated@@26 $generated@@21 $generated@@55 $generated@@22 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@57 $generated@@59 ($generated@@30 $generated@@59 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@30 $generated@@59 $generated@@58))
)))
(assert (= ($generated@@4 $generated@@60) 7))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@20 $generated@@60 $generated@@64 ($generated@@61 $generated@@65)) (forall (($generated@@66 T@U) ) (!  (=> ($generated@@62 $generated@@64 $generated@@66) ($generated@@63 $generated@@66 $generated@@65))
 :pattern ( ($generated@@62 $generated@@64 $generated@@66))
)))
 :pattern ( ($generated@@20 $generated@@60 $generated@@64 ($generated@@61 $generated@@65)))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@57 $generated@@71 $generated@@68) $generated@@69 $generated@@70) ($generated@@26 $generated@@71 $generated@@68 $generated@@69 $generated@@70))
 :pattern ( ($generated@@67 ($generated@@57 $generated@@71 $generated@@68) $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@63 $generated@@72 $generated@@27) (and (= ($generated@@57 $generated@@21 ($generated@@30 $generated@@21 $generated@@72)) $generated@@72) ($generated@@20 $generated@@21 ($generated@@30 $generated@@21 $generated@@72) $generated@@27)))
 :pattern ( ($generated@@63 $generated@@72 $generated@@27))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@63 $generated@@73 $generated@@22) (and (= ($generated@@57 $generated@@21 ($generated@@30 $generated@@21 $generated@@73)) $generated@@73) ($generated@@20 $generated@@21 ($generated@@30 $generated@@21 $generated@@73) $generated@@22)))
 :pattern ( ($generated@@63 $generated@@73 $generated@@22))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@20 $generated@@21 $generated@@74 $generated@@27)  (and ($generated@@20 $generated@@21 $generated@@74 $generated@@22) (or (not (= $generated@@74 $generated@@23)) (not true))))
 :pattern ( ($generated@@20 $generated@@21 $generated@@74 $generated@@27))
 :pattern ( ($generated@@20 $generated@@21 $generated@@74 $generated@@22))
)))
(assert  (=> (<= 1 $generated@@75) (forall (($generated@@78 T@U) ) (!  (=> (or ($generated@@77 $generated@@78) (and (< 1 $generated@@75) ($generated@@20 $generated@@21 $generated@@78 $generated@@27))) ($generated@@20 $generated@@21 ($generated@@76 $generated@@78) $generated@@27))
 :pattern ( ($generated@@76 $generated@@78))
))))
(assert  (=> (<= 1 $generated@@75) (forall (($generated@@81 T@U) ) (!  (=> (or ($generated@@80 $generated@@81) (and (< 1 $generated@@75) ($generated@@20 $generated@@21 $generated@@81 $generated@@27))) ($generated@@20 $generated@@21 ($generated@@79 $generated@@81) $generated@@27))
 :pattern ( ($generated@@79 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@63 ($generated@@57 $generated@@84 $generated@@82) $generated@@83) ($generated@@20 $generated@@84 $generated@@82 $generated@@83))
 :pattern ( ($generated@@63 ($generated@@57 $generated@@84 $generated@@82) $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@26 $generated@@60 $generated@@85 ($generated@@61 $generated@@86) $generated@@87) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@62 $generated@@85 $generated@@88) ($generated@@67 $generated@@88 $generated@@86 $generated@@87))
 :pattern ( ($generated@@62 $generated@@85 $generated@@88))
)))
 :pattern ( ($generated@@26 $generated@@60 $generated@@85 ($generated@@61 $generated@@86) $generated@@87))
)))
(assert  (=> (<= 1 $generated@@75) (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (or ($generated@@77 $generated@@91) (and (< 1 $generated@@75) (and ($generated@@20 $generated@@21 $generated@@91 $generated@@27) ($generated@@26 $generated@@21 $generated@@91 $generated@@27 $generated@@90)))) ($generated@@89 $generated@@90)) ($generated@@26 $generated@@21 ($generated@@76 $generated@@91) $generated@@27 $generated@@90))
 :pattern ( ($generated@@26 $generated@@21 ($generated@@76 $generated@@91) $generated@@27 $generated@@90))
))))
(assert  (=> (<= 1 $generated@@75) (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (and (or ($generated@@80 $generated@@93) (and (< 1 $generated@@75) (and ($generated@@20 $generated@@21 $generated@@93 $generated@@27) ($generated@@26 $generated@@21 $generated@@93 $generated@@27 $generated@@92)))) ($generated@@89 $generated@@92)) ($generated@@26 $generated@@21 ($generated@@79 $generated@@93) $generated@@27 $generated@@92))
 :pattern ( ($generated@@26 $generated@@21 ($generated@@79 $generated@@93) $generated@@27 $generated@@92))
))))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@94 ($generated@@61 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@61 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@61 $generated@@97)) $generated)
 :pattern ( ($generated@@61 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@30 $generated@@99 ($generated@@57 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@57 $generated@@99 $generated@@98))
)))
(assert  (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@100 $generated@@103 $generated@@104 $generated@@105 ($generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@100 $generated@@110 $generated@@111 $generated@@112 ($generated@@102 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@100 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@100 $generated@@119 $generated@@120 $generated@@121 ($generated@@102 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@100 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 Bool) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@9 ($generated@@100 $generated@@21 $generated@@32 $generated@@5 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))  (=> (and (or (not (= $generated@@132 $generated@@128)) (not true)) ($generated@@9 ($generated@@30 $generated@@5 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@21 ($generated@@34 $generated@@32 $generated@@33) $generated@@129 $generated@@132) $generated@@130)))) $generated@@131))
 :pattern ( ($generated@@100 $generated@@21 $generated@@32 $generated@@5 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@63 $generated@@134 ($generated@@61 $generated@@135)) (and (= ($generated@@57 $generated@@60 ($generated@@30 $generated@@60 $generated@@134)) $generated@@134) ($generated@@20 $generated@@60 ($generated@@30 $generated@@60 $generated@@134) ($generated@@61 $generated@@135))))
 :pattern ( ($generated@@63 $generated@@134 ($generated@@61 $generated@@135)))
)))
(assert (= ($generated@@96 $generated@@27) $generated@@1))
(assert (= ($generated@@136 $generated@@27) $generated@@3))
(assert (= ($generated@@96 $generated@@22) $generated@@2))
(assert (= ($generated@@136 $generated@@22) $generated@@3))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@141  (=> (= $generated@@137 ($generated@@101 $generated@@23 $generated@@138 $generated@@0 false)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (forall (($generated@@142 T@U) ) (!  (=> (and ($generated@@20 $generated@@21 $generated@@142 $generated@@27) ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@142))) (or true (= $generated@@142 ($generated@@76 $generated@@142))))
 :pattern ( ($generated@@76 $generated@@142))
 :pattern ( ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@142)))
))) (=> (forall (($generated@@143 T@U) ) (!  (=> (and ($generated@@20 $generated@@21 $generated@@143 $generated@@27) ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@143))) (or true (= $generated@@143 ($generated@@76 $generated@@143))))
 :pattern ( ($generated@@76 $generated@@143))
 :pattern ( ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@143)))
)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (forall (($generated@@144 T@U) ) (!  (=> (and ($generated@@20 $generated@@21 $generated@@144 $generated@@27) ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@144))) (or true (= ($generated@@76 $generated@@144) ($generated@@76 ($generated@@76 $generated@@144)))))
 :pattern ( ($generated@@76 ($generated@@76 $generated@@144)))
 :pattern ( ($generated@@76 $generated@@144))
 :pattern ( ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@144)))
))) (=> (forall (($generated@@145 T@U) ) (!  (=> (and ($generated@@20 $generated@@21 $generated@@145 $generated@@27) ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@145))) (or true (= ($generated@@76 $generated@@145) ($generated@@76 ($generated@@76 $generated@@145)))))
 :pattern ( ($generated@@76 ($generated@@76 $generated@@145)))
 :pattern ( ($generated@@76 $generated@@145))
 :pattern ( ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@145)))
)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (forall (($generated@@146 T@U) ) (!  (=> (and ($generated@@20 $generated@@21 $generated@@146 $generated@@27) ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@146))) (or (or (or true (= ($generated@@76 ($generated@@76 $generated@@146)) ($generated@@79 ($generated@@76 $generated@@146)))) (= ($generated@@76 ($generated@@79 $generated@@146)) ($generated@@79 ($generated@@76 $generated@@146)))) (= ($generated@@76 ($generated@@79 $generated@@146)) ($generated@@79 ($generated@@76 $generated@@146)))))
 :pattern ( ($generated@@76 ($generated@@79 $generated@@146)))
 :pattern ( ($generated@@79 ($generated@@76 $generated@@146)))
 :pattern ( ($generated@@76 ($generated@@79 $generated@@146)))
 :pattern ( ($generated@@79 ($generated@@76 $generated@@146)))
 :pattern ( ($generated@@76 ($generated@@76 $generated@@146)))
 :pattern ( ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@146)))
))) (=> (forall (($generated@@147 T@U) ) (!  (=> (and ($generated@@20 $generated@@21 $generated@@147 $generated@@27) ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@147))) (or (or (or true (= ($generated@@76 ($generated@@76 $generated@@147)) ($generated@@79 ($generated@@76 $generated@@147)))) (= ($generated@@76 ($generated@@79 $generated@@147)) ($generated@@79 ($generated@@76 $generated@@147)))) (= ($generated@@76 ($generated@@79 $generated@@147)) ($generated@@79 ($generated@@76 $generated@@147)))))
 :pattern ( ($generated@@76 ($generated@@79 $generated@@147)))
 :pattern ( ($generated@@79 ($generated@@76 $generated@@147)))
 :pattern ( ($generated@@76 ($generated@@79 $generated@@147)))
 :pattern ( ($generated@@79 ($generated@@76 $generated@@147)))
 :pattern ( ($generated@@76 ($generated@@76 $generated@@147)))
 :pattern ( ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@147)))
)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@148 T@U) ) (!  (=> (and ($generated@@20 $generated@@21 $generated@@148 $generated@@27) ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@148))) (or true (= ($generated@@76 $generated@@148) ($generated@@79 ($generated@@76 $generated@@148)))))
 :pattern ( ($generated@@76 $generated@@148))
 :pattern ( ($generated@@76 $generated@@148))
 :pattern ( ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@148)))
))) (=> (forall (($generated@@149 T@U) ) (!  (=> (and ($generated@@20 $generated@@21 $generated@@149 $generated@@27) ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@149))) (or true (= ($generated@@76 $generated@@149) ($generated@@79 ($generated@@76 $generated@@149)))))
 :pattern ( ($generated@@76 $generated@@149))
 :pattern ( ($generated@@76 $generated@@149))
 :pattern ( ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@149)))
)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@150 T@U) ) (!  (=> (and ($generated@@20 $generated@@21 $generated@@150 $generated@@27) ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@150))) (or (or true (= ($generated@@76 $generated@@150) ($generated@@76 $generated@@150))) (= ($generated@@79 ($generated@@76 $generated@@150)) ($generated@@79 ($generated@@76 $generated@@150)))))
 :pattern ( ($generated@@76 $generated@@150))
 :pattern ( ($generated@@76 $generated@@150))
 :pattern ( ($generated@@62 $generated@@139 ($generated@@57 $generated@@21 $generated@@150)))
))))))))))))))
(let (($generated@@151  (=> (and ($generated@@89 $generated@@138) ($generated@@140 $generated@@138)) (=> (and (and ($generated@@20 $generated@@60 $generated@@139 ($generated@@61 $generated@@27)) ($generated@@26 $generated@@60 $generated@@139 ($generated@@61 $generated@@27) $generated@@138)) (and (= 2 $generated@@75) (= (ControlFlow 0 7) 2))) $generated@@141))))
$generated@@151)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
