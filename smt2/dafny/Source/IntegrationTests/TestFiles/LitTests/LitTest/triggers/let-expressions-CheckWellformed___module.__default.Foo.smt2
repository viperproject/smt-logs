(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (Int) Int)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@33 () Int)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U Int) T@U)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@62 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@66 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T T@T) T@T)
(declare-fun $generated@@69 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@1))
(assert (= ($generated@@21 $generated@@0) $generated@@2))
(assert (= ($generated@@22 $generated@@23) 0))
(assert (forall (($generated@@25 Int) ) (! (= ($generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@24 $generated@@25))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@T) ) (! (= ($generated@@26 $generated@@28 $generated@@27) $generated@@27)
 :pattern ( ($generated@@26 $generated@@28 $generated@@27))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@T) ) (! (= ($generated@@30 $generated@@32 ($generated@@29 $generated@@32 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@29 $generated@@32 $generated@@31))
)))
(assert (= ($generated@@5 $generated@@37) 3))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@40 T@U) ) (!  (=> (or ($generated@@35 $generated@@40) (and (< 0 $generated@@33) ($generated@@36 $generated@@37 $generated@@40 ($generated@@38 $generated@@0)))) (= ($generated@@34 $generated@@40)  (and (and (and (forall (($generated@@41 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@41) (< $generated@@41 ($generated@@22 $generated@@40))) (let (($generated@@42 $generated@@41))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@40 $generated@@42))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@40 $generated@@41)))
)) (forall (($generated@@43 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@43) (< $generated@@43 ($generated@@22 $generated@@40))) (let (($generated@@44 $generated@@43))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@40 $generated@@44))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@40 $generated@@43)))
))) (forall (($generated@@45 Int) ($generated@@46 Int) ) (!  (=> (= $generated@@46 (+ $generated@@45 1)) (=> (and (<= ($generated@@24 0) $generated@@45) (< $generated@@45 (- ($generated@@22 $generated@@40) 1))) (= ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@40 $generated@@45))) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@40 $generated@@46))))))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@40 $generated@@46)) ($generated@@29 $generated@@7 ($generated@@39 $generated@@40 $generated@@45)))
))) (forall (($generated@@47 Int) ($generated@@48 Int) ) (!  (=> (= $generated@@48 (+ $generated@@47 1)) (=> (and (<= ($generated@@24 0) $generated@@47) (< $generated@@47 (- ($generated@@22 $generated@@40) 1))) (= ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@40 $generated@@47))) ($generated@@12 (let (($generated@@49 $generated@@48))
($generated@@29 $generated@@7 ($generated@@39 $generated@@40 $generated@@49)))))))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@40 $generated@@48)) ($generated@@29 $generated@@7 ($generated@@39 $generated@@40 $generated@@47)))
)))))
 :pattern ( ($generated@@34 $generated@@40))
))))
(assert (forall (($generated@@51 T@U) ) (!  (=> ($generated@@50 $generated@@51 $generated@@0) (and (= ($generated@@30 $generated@@7 ($generated@@29 $generated@@7 $generated@@51)) $generated@@51) ($generated@@36 $generated@@7 ($generated@@29 $generated@@7 $generated@@51) $generated@@0)))
 :pattern ( ($generated@@50 $generated@@51 $generated@@0))
)))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@50 $generated@@52 $generated) (and (= ($generated@@30 $generated@@6 ($generated@@29 $generated@@6 $generated@@52)) $generated@@52) ($generated@@36 $generated@@6 ($generated@@29 $generated@@6 $generated@@52) $generated)))
 :pattern ( ($generated@@50 $generated@@52 $generated))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@50 ($generated@@30 $generated@@55 $generated@@53) $generated@@54) ($generated@@36 $generated@@55 $generated@@53 $generated@@54))
 :pattern ( ($generated@@50 ($generated@@30 $generated@@55 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (! (<= 0 ($generated@@22 $generated@@56))
 :pattern ( ($generated@@22 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 ($generated@@38 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@38 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@21 ($generated@@38 $generated@@59)) $generated@@3)
 :pattern ( ($generated@@38 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@29 $generated@@61 ($generated@@30 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@30 $generated@@61 $generated@@60))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@62 $generated@@73 $generated@@74 $generated@@75 ($generated@@69 $generated@@73 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@79 $generated@@76) $generated@@78 $generated@@79) $generated@@76)
 :weight 0
)) (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (or (= $generated@@85 $generated@@87) (= ($generated@@62 $generated@@80 $generated@@81 $generated@@82 ($generated@@69 $generated@@80 $generated@@81 $generated@@82 $generated@@84 $generated@@85 $generated@@86 $generated@@83) $generated@@87 $generated@@88) ($generated@@62 $generated@@80 $generated@@81 $generated@@82 $generated@@84 $generated@@87 $generated@@88)))
 :weight 0
)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (or (= $generated@@95 $generated@@97) (= ($generated@@62 $generated@@89 $generated@@90 $generated@@91 ($generated@@69 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@94 $generated@@95 $generated@@92) $generated@@96 $generated@@97) ($generated@@62 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@96 $generated@@97)))
 :weight 0
)))) (= ($generated@@5 $generated@@63) 4)) (= ($generated@@5 $generated@@64) 5)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@66 $generated@@98 $generated@@99 ($generated@@70 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@100) $generated@@102) $generated@@100)
 :weight 0
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@66 $generated@@103 $generated@@104 ($generated@@70 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@66 $generated@@103 $generated@@104 $generated@@106 $generated@@108)))
 :weight 0
))) (= ($generated@@5 $generated@@67) 6)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (= ($generated@@5 ($generated@@68 $generated@@109 $generated@@110)) 7))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@71 ($generated@@68 $generated@@111 $generated@@112)) $generated@@111)
 :pattern ( ($generated@@68 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@72 ($generated@@68 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@68 $generated@@113 $generated@@114))
))))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 Bool) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@10 ($generated@@62 $generated@@63 $generated@@64 $generated@@6 ($generated@@65 $generated@@115 $generated@@116 $generated@@117 $generated@@118) $generated@@119 $generated@@120))  (=> (and (or (not (= $generated@@119 $generated@@115)) (not true)) ($generated@@10 ($generated@@29 $generated@@6 ($generated@@66 $generated@@64 $generated@@67 ($generated@@66 $generated@@63 ($generated@@68 $generated@@64 $generated@@67) $generated@@116 $generated@@119) $generated@@117)))) $generated@@118))
 :pattern ( ($generated@@62 $generated@@63 $generated@@64 $generated@@6 ($generated@@65 $generated@@115 $generated@@116 $generated@@117 $generated@@118) $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@50 $generated@@121 ($generated@@38 $generated@@122)) (and (= ($generated@@30 $generated@@37 ($generated@@29 $generated@@37 $generated@@121)) $generated@@121) ($generated@@36 $generated@@37 ($generated@@29 $generated@@37 $generated@@121) ($generated@@38 $generated@@122))))
 :pattern ( ($generated@@50 $generated@@121 ($generated@@38 $generated@@122)))
)))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@123 T@U) ) (!  (=> (or ($generated@@35 ($generated@@26 $generated@@37 $generated@@123)) (and (< 0 $generated@@33) ($generated@@36 $generated@@37 $generated@@123 ($generated@@38 $generated@@0)))) (= ($generated@@34 ($generated@@26 $generated@@37 $generated@@123))  (and (and (and (forall (($generated@@124 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@124) (< $generated@@124 ($generated@@22 ($generated@@26 $generated@@37 $generated@@123)))) (let (($generated@@125 $generated@@124))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 ($generated@@26 $generated@@37 $generated@@123) $generated@@125))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@123 $generated@@124)))
)) (forall (($generated@@126 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@126) (< $generated@@126 ($generated@@22 ($generated@@26 $generated@@37 $generated@@123)))) (let (($generated@@127 $generated@@126))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 ($generated@@26 $generated@@37 $generated@@123) $generated@@127))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@123 $generated@@126)))
))) (forall (($generated@@128 Int) ($generated@@129 Int) ) (!  (=> (= $generated@@129 (+ $generated@@128 1)) (=> (and (<= ($generated@@24 0) $generated@@128) (< $generated@@128 (- ($generated@@22 ($generated@@26 $generated@@37 $generated@@123)) 1))) (= ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 ($generated@@26 $generated@@37 $generated@@123) $generated@@128))) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 ($generated@@26 $generated@@37 $generated@@123) $generated@@129))))))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@123 $generated@@129)) ($generated@@29 $generated@@7 ($generated@@39 $generated@@123 $generated@@128)))
))) (forall (($generated@@130 Int) ($generated@@131 Int) ) (!  (=> (= $generated@@131 (+ $generated@@130 1)) (=> (and (<= ($generated@@24 0) $generated@@130) (< $generated@@130 (- ($generated@@22 ($generated@@26 $generated@@37 $generated@@123)) 1))) (= ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 ($generated@@26 $generated@@37 $generated@@123) $generated@@130))) ($generated@@12 (let (($generated@@132 $generated@@131))
($generated@@29 $generated@@7 ($generated@@39 ($generated@@26 $generated@@37 $generated@@123) $generated@@132)))))))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@123 $generated@@131)) ($generated@@29 $generated@@7 ($generated@@39 $generated@@123 $generated@@130)))
)))))
 :weight 3
 :pattern ( ($generated@@34 ($generated@@26 $generated@@37 $generated@@123)))
))))
(assert (forall (($generated@@133 Int) ) (! (= ($generated@@30 $generated@@7 ($generated@@11 ($generated@@24 $generated@@133))) ($generated@@26 $generated@@67 ($generated@@30 $generated@@7 ($generated@@11 $generated@@133))))
 :pattern ( ($generated@@30 $generated@@7 ($generated@@11 ($generated@@24 $generated@@133))))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@30 $generated@@135 ($generated@@26 $generated@@135 $generated@@134)) ($generated@@26 $generated@@67 ($generated@@30 $generated@@135 $generated@@134)))
 :pattern ( ($generated@@30 $generated@@135 ($generated@@26 $generated@@135 $generated@@134)))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= ($generated@@22 $generated@@136) 0) (= $generated@@136 $generated@@23))
 :pattern ( ($generated@@22 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@137 ($generated@@38 $generated@@138)) (forall (($generated@@139 Int) ) (!  (=> (and (<= 0 $generated@@139) (< $generated@@139 ($generated@@22 $generated@@137))) ($generated@@50 ($generated@@39 $generated@@137 $generated@@139) $generated@@138))
 :pattern ( ($generated@@39 $generated@@137 $generated@@139))
)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@137 ($generated@@38 $generated@@138)))
)))
(assert (forall (($generated@@140 T@U) ) (! ($generated@@36 $generated@@7 $generated@@140 $generated@@0)
 :pattern ( ($generated@@36 $generated@@7 $generated@@140 $generated@@0))
)))
(assert (forall (($generated@@141 T@U) ) (! ($generated@@36 $generated@@6 $generated@@141 $generated)
 :pattern ( ($generated@@36 $generated@@6 $generated@@141 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 40) (let (($generated@@160 true))
(let (($generated@@161 true))
(let (($generated@@162 true))
(let (($generated@@163 true))
(let (($generated@@164  (=> (and (not (and (<= ($generated@@24 0) $generated@@142) (< $generated@@142 (- ($generated@@22 $generated@@143) 1)))) (= (ControlFlow 0 9) 3)) $generated@@163)))
(let (($generated@@165  (=> (and (<= ($generated@@24 0) $generated@@142) (< $generated@@142 (- ($generated@@22 $generated@@143) 1))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (and (<= 0 $generated@@142) (< $generated@@142 ($generated@@22 $generated@@143)))) (=> (and (<= 0 $generated@@142) (< $generated@@142 ($generated@@22 $generated@@143))) (=> (= $generated@@144 (+ $generated@@142 1)) (=> (and ($generated@@36 $generated@@7 ($generated@@11 $generated@@144) $generated@@0) (= $generated@@145 $generated@@144)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@22 $generated@@143)))) (=> (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@22 $generated@@143))) (=> (= (ControlFlow 0 6) 3) $generated@@163))))))))))
(let (($generated@@166  (=> (< $generated@@142 ($generated@@24 0)) (and (=> (= (ControlFlow 0 11) 6) $generated@@165) (=> (= (ControlFlow 0 11) 9) $generated@@164)))))
(let (($generated@@167  (=> (<= ($generated@@24 0) $generated@@142) (and (=> (= (ControlFlow 0 10) 6) $generated@@165) (=> (= (ControlFlow 0 10) 9) $generated@@164)))))
(let (($generated@@168  (and (=> (= (ControlFlow 0 12) 10) $generated@@167) (=> (= (ControlFlow 0 12) 11) $generated@@166))))
(let (($generated@@169  (=> (and (and (forall (($generated@@170 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@170) (< $generated@@170 ($generated@@22 $generated@@143))) (let (($generated@@171 $generated@@170))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@171))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@170)))
)) (forall (($generated@@172 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@172) (< $generated@@172 ($generated@@22 $generated@@143))) (let (($generated@@173 $generated@@172))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@173))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@172)))
))) (forall (($generated@@174 Int) ($generated@@175 Int) ) (!  (=> (= $generated@@175 (+ $generated@@174 1)) (=> (and (<= ($generated@@24 0) $generated@@174) (< $generated@@174 (- ($generated@@22 $generated@@143) 1))) (= ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@174))) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@175))))))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@175)) ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@174)))
))) (and (=> (= (ControlFlow 0 13) 12) $generated@@168) (=> (= (ControlFlow 0 13) 5) $generated@@162)))))
(let (($generated@@176  (=> (and (not (and (and (forall (($generated@@177 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@177) (< $generated@@177 ($generated@@22 $generated@@143))) (let (($generated@@178 $generated@@177))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@178))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@177)))
)) (forall (($generated@@179 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@179) (< $generated@@179 ($generated@@22 $generated@@143))) (let (($generated@@180 $generated@@179))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@180))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@179)))
))) (forall (($generated@@181 Int) ($generated@@182 Int) ) (!  (=> (= $generated@@182 (+ $generated@@181 1)) (=> (and (<= ($generated@@24 0) $generated@@181) (< $generated@@181 (- ($generated@@22 $generated@@143) 1))) (= ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@181))) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@182))))))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@182)) ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@181)))
)))) (= (ControlFlow 0 4) 3)) $generated@@163)))
(let (($generated@@183  (=> (not (and (<= ($generated@@24 0) $generated@@146) (< $generated@@146 (- ($generated@@22 $generated@@143) 1)))) (and (=> (= (ControlFlow 0 19) 13) $generated@@169) (=> (= (ControlFlow 0 19) 4) $generated@@176)))))
(let (($generated@@184  (=> (and (<= ($generated@@24 0) $generated@@146) (< $generated@@146 (- ($generated@@22 $generated@@143) 1))) (and (=> (= (ControlFlow 0 16) (- 0 18)) (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@22 $generated@@143)))) (=> (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@22 $generated@@143))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= 0 (+ $generated@@146 1)) (< (+ $generated@@146 1) ($generated@@22 $generated@@143)))) (=> (and (<= 0 (+ $generated@@146 1)) (< (+ $generated@@146 1) ($generated@@22 $generated@@143))) (and (=> (= (ControlFlow 0 16) 13) $generated@@169) (=> (= (ControlFlow 0 16) 4) $generated@@176)))))))))
(let (($generated@@185  (=> (< $generated@@146 ($generated@@24 0)) (and (=> (= (ControlFlow 0 21) 16) $generated@@184) (=> (= (ControlFlow 0 21) 19) $generated@@183)))))
(let (($generated@@186  (=> (<= ($generated@@24 0) $generated@@146) (and (=> (= (ControlFlow 0 20) 16) $generated@@184) (=> (= (ControlFlow 0 20) 19) $generated@@183)))))
(let (($generated@@187  (and (=> (= (ControlFlow 0 22) 20) $generated@@186) (=> (= (ControlFlow 0 22) 21) $generated@@185))))
(let (($generated@@188  (=> (and (forall (($generated@@189 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@189) (< $generated@@189 ($generated@@22 $generated@@143))) (let (($generated@@190 $generated@@189))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@190))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@189)))
)) (forall (($generated@@191 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@191) (< $generated@@191 ($generated@@22 $generated@@143))) (let (($generated@@192 $generated@@191))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@192))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@191)))
))) (and (=> (= (ControlFlow 0 23) 22) $generated@@187) (=> (= (ControlFlow 0 23) 15) $generated@@161)))))
(let (($generated@@193  (=> (not (and (forall (($generated@@194 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@194) (< $generated@@194 ($generated@@22 $generated@@143))) (let (($generated@@195 $generated@@194))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@195))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@194)))
)) (forall (($generated@@196 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@196) (< $generated@@196 ($generated@@22 $generated@@143))) (let (($generated@@197 $generated@@196))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@197))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@196)))
)))) (and (=> (= (ControlFlow 0 14) 13) $generated@@169) (=> (= (ControlFlow 0 14) 4) $generated@@176)))))
(let (($generated@@198  (=> (not (and (<= ($generated@@24 0) $generated@@147) (< $generated@@147 ($generated@@22 $generated@@143)))) (and (=> (= (ControlFlow 0 28) 23) $generated@@188) (=> (= (ControlFlow 0 28) 14) $generated@@193)))))
(let (($generated@@199  (=> (and (and (and (<= ($generated@@24 0) $generated@@147) (< $generated@@147 ($generated@@22 $generated@@143))) (and (= $generated@@148 $generated@@147) ($generated@@36 $generated@@7 ($generated@@11 $generated@@148) $generated@@0))) (and (and (= $generated@@149 $generated@@148) (= $generated@@150 $generated@@147)) (and ($generated@@36 $generated@@7 ($generated@@11 $generated@@150) $generated@@0) (= $generated@@151 $generated@@150)))) (and (=> (= (ControlFlow 0 26) (- 0 27)) (and (<= 0 $generated@@151) (< $generated@@151 ($generated@@22 $generated@@143)))) (=> (and (<= 0 $generated@@151) (< $generated@@151 ($generated@@22 $generated@@143))) (and (=> (= (ControlFlow 0 26) 23) $generated@@188) (=> (= (ControlFlow 0 26) 14) $generated@@193)))))))
(let (($generated@@200  (=> (< $generated@@147 ($generated@@24 0)) (and (=> (= (ControlFlow 0 30) 26) $generated@@199) (=> (= (ControlFlow 0 30) 28) $generated@@198)))))
(let (($generated@@201  (=> (<= ($generated@@24 0) $generated@@147) (and (=> (= (ControlFlow 0 29) 26) $generated@@199) (=> (= (ControlFlow 0 29) 28) $generated@@198)))))
(let (($generated@@202  (and (=> (= (ControlFlow 0 31) 29) $generated@@201) (=> (= (ControlFlow 0 31) 30) $generated@@200))))
(let (($generated@@203  (=> (forall (($generated@@204 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@204) (< $generated@@204 ($generated@@22 $generated@@143))) (let (($generated@@205 $generated@@204))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@205))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@204)))
)) (and (=> (= (ControlFlow 0 32) 31) $generated@@202) (=> (= (ControlFlow 0 32) 25) $generated@@160)))))
(let (($generated@@206  (=> (not (forall (($generated@@207 Int) ) (!  (=> (and (<= ($generated@@24 0) $generated@@207) (< $generated@@207 ($generated@@22 $generated@@143))) (let (($generated@@208 $generated@@207))
(> ($generated@@12 ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@208))) 0)))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@39 $generated@@143 $generated@@207)))
))) (and (=> (= (ControlFlow 0 24) 23) $generated@@188) (=> (= (ControlFlow 0 24) 14) $generated@@193)))))
(let (($generated@@209  (=> (not (and (<= ($generated@@24 0) $generated@@152) (< $generated@@152 ($generated@@22 $generated@@143)))) (and (=> (= (ControlFlow 0 35) 32) $generated@@203) (=> (= (ControlFlow 0 35) 24) $generated@@206)))))
(let (($generated@@210  (=> (and (and (and (<= ($generated@@24 0) $generated@@152) (< $generated@@152 ($generated@@22 $generated@@143))) (= $generated@@153 $generated@@152)) (and ($generated@@36 $generated@@7 ($generated@@11 $generated@@153) $generated@@0) (= $generated@@154 $generated@@153))) (and (=> (= (ControlFlow 0 33) (- 0 34)) (and (<= 0 $generated@@154) (< $generated@@154 ($generated@@22 $generated@@143)))) (=> (and (<= 0 $generated@@154) (< $generated@@154 ($generated@@22 $generated@@143))) (and (=> (= (ControlFlow 0 33) 32) $generated@@203) (=> (= (ControlFlow 0 33) 24) $generated@@206)))))))
(let (($generated@@211  (=> (< $generated@@152 ($generated@@24 0)) (and (=> (= (ControlFlow 0 37) 33) $generated@@210) (=> (= (ControlFlow 0 37) 35) $generated@@209)))))
(let (($generated@@212  (=> (<= ($generated@@24 0) $generated@@152) (and (=> (= (ControlFlow 0 36) 33) $generated@@210) (=> (= (ControlFlow 0 36) 35) $generated@@209)))))
(let (($generated@@213  (and (=> (= (ControlFlow 0 38) 36) $generated@@212) (=> (= (ControlFlow 0 38) 37) $generated@@211))))
(let (($generated@@214 true))
(let (($generated@@215 true))
(let (($generated@@216  (=> (= $generated@@155 ($generated@@65 $generated@@156 $generated@@157 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 39) 1) $generated@@215) (=> (= (ControlFlow 0 39) 38) $generated@@213)) (=> (= (ControlFlow 0 39) 2) $generated@@214)))))
(let (($generated@@217  (=> (and (and (and ($generated@@158 $generated@@157) ($generated@@159 $generated@@157)) ($generated@@36 $generated@@37 $generated@@143 ($generated@@38 $generated@@0))) (and (= 0 $generated@@33) (= (ControlFlow 0 40) 39))) $generated@@216)))
$generated@@217)))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
