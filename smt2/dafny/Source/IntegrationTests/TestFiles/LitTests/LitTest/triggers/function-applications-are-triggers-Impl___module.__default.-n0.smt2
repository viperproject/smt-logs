(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@41 (Int) Int)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 () T@U)
(declare-fun $generated@@124 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 () T@T)
(declare-fun $generated@@127 (T@T T@T) T@T)
(declare-fun $generated@@128 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@163 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@1))
(assert (= ($generated@@26 $generated@@0) $generated@@2))
(assert (forall (($generated@@29 T@U) ) (!  (not ($generated@@27 $generated@@28 $generated@@29))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29))
)))
(assert (= ($generated@@10 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@35 $generated@@36)) (forall (($generated@@39 T@U) ) (!  (=> ($generated@@33 $generated@@39 $generated@@37) ($generated@@33 $generated@@39 $generated@@35))
 :pattern ( ($generated@@33 $generated@@39 $generated@@37))
 :pattern ( ($generated@@33 $generated@@39 $generated@@35))
))) (forall (($generated@@40 T@U) ) (!  (=> ($generated@@33 $generated@@40 $generated@@36) ($generated@@33 $generated@@40 $generated@@38))
 :pattern ( ($generated@@33 $generated@@40 $generated@@36))
 :pattern ( ($generated@@33 $generated@@40 $generated@@38))
))) ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@37 $generated@@38)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@35 $generated@@36)) ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@37 $generated@@38)))
)))
(assert (forall (($generated@@42 Int) ) (! (= ($generated@@41 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 $generated@@44) $generated@@44)
 :pattern ( ($generated@@43 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (and ($generated@@48 $generated@@52) (and ($generated@@33 $generated@@54 $generated@@50) ($generated@@30 $generated@@31 $generated@@53 ($generated@@32 $generated@@50 $generated@@51)))) (= ($generated@@49 ($generated@@46 $generated@@50 $generated@@51 $generated@@47 $generated@@53 $generated@@54) $generated@@28) ($generated@@49 ($generated@@46 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54) $generated@@28)))
 :pattern ( ($generated@@46 $generated@@50 $generated@@51 $generated@@47 $generated@@53 $generated@@54) ($generated@@48 $generated@@52))
 :pattern ( ($generated@@46 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 ($generated@@55 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@55 $generated@@58 $generated@@57))
)))
(assert ($generated@@48 $generated@@47))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@64 $generated@@61) $generated@@62 $generated@@63) ($generated@@60 $generated@@64 $generated@@61 $generated@@62 $generated@@63))
 :pattern ( ($generated@@59 ($generated@@56 $generated@@64 $generated@@61) $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@60 $generated@@31 $generated@@68 ($generated@@65 $generated@@66 $generated@@67) $generated@@69) ($generated@@60 $generated@@31 $generated@@68 ($generated@@32 $generated@@66 $generated@@67) $generated@@69))
 :pattern ( ($generated@@60 $generated@@31 $generated@@68 ($generated@@65 $generated@@66 $generated@@67) $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@60 $generated@@31 $generated@@73 ($generated@@70 $generated@@71 $generated@@72) $generated@@74) ($generated@@60 $generated@@31 $generated@@73 ($generated@@65 $generated@@71 $generated@@72) $generated@@74))
 :pattern ( ($generated@@60 $generated@@31 $generated@@73 ($generated@@70 $generated@@71 $generated@@72) $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and ($generated@@48 $generated@@80) ($generated@@60 $generated@@31 $generated@@77 ($generated@@32 $generated@@78 $generated@@79) $generated@@80)) (forall (($generated@@81 T@U) ) (!  (=> (and ($generated@@59 $generated@@81 $generated@@78 $generated@@80) ($generated@@76 $generated@@78 $generated@@79 $generated@@80 $generated@@77 $generated@@81)) ($generated@@59 ($generated@@75 $generated@@78 $generated@@79 $generated@@80 $generated@@77 $generated@@81) $generated@@79 $generated@@80))
 :pattern ( ($generated@@75 $generated@@78 $generated@@79 $generated@@80 $generated@@77 $generated@@81))
)))
 :pattern ( ($generated@@60 $generated@@31 $generated@@77 ($generated@@32 $generated@@78 $generated@@79) $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@49 $generated@@82 $generated@@83) (= $generated@@82 $generated@@83))
 :pattern ( ($generated@@49 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@84 ($generated@@32 $generated@@85 $generated@@86)) (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (and (and ($generated@@48 $generated@@87) ($generated@@33 $generated@@88 $generated@@85)) ($generated@@76 $generated@@85 $generated@@86 $generated@@87 $generated@@84 $generated@@88)) ($generated@@33 ($generated@@75 $generated@@85 $generated@@86 $generated@@87 $generated@@84 $generated@@88) $generated@@86))
 :pattern ( ($generated@@75 $generated@@85 $generated@@86 $generated@@87 $generated@@84 $generated@@88))
)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@84 ($generated@@32 $generated@@85 $generated@@86)))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@33 $generated@@89 $generated@@0) (and (= ($generated@@56 $generated@@12 ($generated@@55 $generated@@12 $generated@@89)) $generated@@89) ($generated@@30 $generated@@12 ($generated@@55 $generated@@12 $generated@@89) $generated@@0)))
 :pattern ( ($generated@@33 $generated@@89 $generated@@0))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@33 $generated@@90 $generated) (and (= ($generated@@56 $generated@@11 ($generated@@55 $generated@@11 $generated@@90)) $generated@@90) ($generated@@30 $generated@@11 ($generated@@55 $generated@@11 $generated@@90) $generated)))
 :pattern ( ($generated@@33 $generated@@90 $generated))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@33 ($generated@@56 $generated@@93 $generated@@91) $generated@@92) ($generated@@30 $generated@@93 $generated@@91 $generated@@92))
 :pattern ( ($generated@@33 ($generated@@56 $generated@@93 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@94 ($generated@@32 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@32 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@97 ($generated@@32 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@32 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@100 ($generated@@65 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@65 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@103 ($generated@@65 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@65 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@106 ($generated@@70 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@70 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@70 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@70 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@55 $generated@@113 ($generated@@56 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@56 $generated@@113 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@116 ($generated@@70 $generated@@114 $generated@@115))  (and ($generated@@30 $generated@@31 $generated@@116 ($generated@@65 $generated@@114 $generated@@115)) (forall (($generated@@117 T@U) )  (=> ($generated@@33 $generated@@117 $generated@@114) ($generated@@76 $generated@@114 $generated@@115 $generated@@47 $generated@@116 $generated@@117)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@116 ($generated@@70 $generated@@114 $generated@@115)))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@120 ($generated@@65 $generated@@118 $generated@@119))  (and ($generated@@30 $generated@@31 $generated@@120 ($generated@@32 $generated@@118 $generated@@119)) (forall (($generated@@121 T@U) )  (=> ($generated@@33 $generated@@121 $generated@@118) ($generated@@49 ($generated@@46 $generated@@118 $generated@@119 $generated@@47 $generated@@120 $generated@@121) $generated@@28)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@120 ($generated@@65 $generated@@118 $generated@@119)))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@10 $generated@@122) 4) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@124 $generated@@131 $generated@@132 ($generated@@128 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@135) $generated@@133)
 :weight 0
))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@124 $generated@@136 $generated@@137 ($generated@@128 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@124 $generated@@136 $generated@@137 $generated@@139 $generated@@141)))
 :weight 0
))) (= ($generated@@10 $generated@@125) 5)) (= ($generated@@10 $generated@@126) 6)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (= ($generated@@10 ($generated@@127 $generated@@142 $generated@@143)) 7))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@129 ($generated@@127 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@127 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@130 ($generated@@127 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@127 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@48 $generated@@151) (= ($generated@@60 $generated@@31 $generated@@148 ($generated@@32 $generated@@149 $generated@@150) $generated@@151) (forall (($generated@@152 T@U) ) (!  (=> (and (and ($generated@@33 $generated@@152 $generated@@149) ($generated@@59 $generated@@152 $generated@@149 $generated@@151)) ($generated@@76 $generated@@149 $generated@@150 $generated@@151 $generated@@148 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (or (not (= $generated@@153 $generated@@123)) (not true)) ($generated@@27 ($generated@@46 $generated@@149 $generated@@150 $generated@@151 $generated@@148 $generated@@152) ($generated@@56 $generated@@122 $generated@@153))) ($generated@@15 ($generated@@55 $generated@@11 ($generated@@124 $generated@@125 $generated@@126 ($generated@@124 $generated@@122 ($generated@@127 $generated@@125 $generated@@126) $generated@@151 $generated@@153) $generated@@3))))
 :pattern ( ($generated@@27 ($generated@@46 $generated@@149 $generated@@150 $generated@@151 $generated@@148 $generated@@152) ($generated@@56 $generated@@122 $generated@@153)))
)))
 :pattern ( ($generated@@75 $generated@@149 $generated@@150 $generated@@151 $generated@@148 $generated@@152))
 :pattern ( ($generated@@46 $generated@@149 $generated@@150 $generated@@151 $generated@@148 $generated@@152))
))))
 :pattern ( ($generated@@60 $generated@@31 $generated@@148 ($generated@@32 $generated@@149 $generated@@150) $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@33 $generated@@156 ($generated@@32 $generated@@154 $generated@@155)) (and (= ($generated@@56 $generated@@31 ($generated@@55 $generated@@31 $generated@@156)) $generated@@156) ($generated@@30 $generated@@31 ($generated@@55 $generated@@31 $generated@@156) ($generated@@32 $generated@@154 $generated@@155))))
 :pattern ( ($generated@@33 $generated@@156 ($generated@@32 $generated@@154 $generated@@155)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@33 $generated@@159 ($generated@@65 $generated@@157 $generated@@158)) (and (= ($generated@@56 $generated@@31 ($generated@@55 $generated@@31 $generated@@159)) $generated@@159) ($generated@@30 $generated@@31 ($generated@@55 $generated@@31 $generated@@159) ($generated@@65 $generated@@157 $generated@@158))))
 :pattern ( ($generated@@33 $generated@@159 ($generated@@65 $generated@@157 $generated@@158)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@33 $generated@@162 ($generated@@70 $generated@@160 $generated@@161)) (and (= ($generated@@56 $generated@@31 ($generated@@55 $generated@@31 $generated@@162)) $generated@@162) ($generated@@30 $generated@@31 ($generated@@55 $generated@@31 $generated@@162) ($generated@@70 $generated@@160 $generated@@161))))
 :pattern ( ($generated@@33 $generated@@162 ($generated@@70 $generated@@160 $generated@@161)))
)))
(assert  (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@163 $generated@@166 $generated@@167 $generated@@168 ($generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@171 $generated@@172) $generated@@169)
 :weight 0
)) (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@163 $generated@@173 $generated@@174 $generated@@175 ($generated@@165 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@163 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@163 $generated@@182 $generated@@183 $generated@@184 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@163 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 Bool) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@15 ($generated@@163 $generated@@122 $generated@@125 $generated@@11 ($generated@@164 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))  (=> (and (or (not (= $generated@@195 $generated@@191)) (not true)) ($generated@@15 ($generated@@55 $generated@@11 ($generated@@124 $generated@@125 $generated@@126 ($generated@@124 $generated@@122 ($generated@@127 $generated@@125 $generated@@126) $generated@@192 $generated@@195) $generated@@193)))) $generated@@194))
 :pattern ( ($generated@@163 $generated@@122 $generated@@125 $generated@@11 ($generated@@164 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (and (= ($generated@@26 ($generated@@32 $generated@@198 $generated@@199)) $generated@@4) (= ($generated@@197 ($generated@@32 $generated@@198 $generated@@199)) $generated@@7))
 :pattern ( ($generated@@32 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (and (= ($generated@@26 ($generated@@65 $generated@@200 $generated@@201)) $generated@@5) (= ($generated@@197 ($generated@@65 $generated@@200 $generated@@201)) $generated@@8))
 :pattern ( ($generated@@65 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (and (= ($generated@@26 ($generated@@70 $generated@@202 $generated@@203)) $generated@@6) (= ($generated@@197 ($generated@@70 $generated@@202 $generated@@203)) $generated@@9))
 :pattern ( ($generated@@70 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and ($generated@@48 $generated@@206) (and ($generated@@33 $generated@@208 $generated@@204) ($generated@@30 $generated@@31 $generated@@207 ($generated@@32 $generated@@204 $generated@@205)))) ($generated@@49 ($generated@@46 $generated@@204 $generated@@205 $generated@@47 $generated@@207 $generated@@208) $generated@@28)) (= ($generated@@76 $generated@@204 $generated@@205 $generated@@47 $generated@@207 $generated@@208) ($generated@@76 $generated@@204 $generated@@205 $generated@@206 $generated@@207 $generated@@208)))
 :pattern ( ($generated@@76 $generated@@204 $generated@@205 $generated@@47 $generated@@207 $generated@@208) ($generated@@48 $generated@@206))
 :pattern ( ($generated@@76 $generated@@204 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@49 $generated@@209 $generated@@210) (forall (($generated@@211 T@U) ) (! (= ($generated@@27 $generated@@209 $generated@@211) ($generated@@27 $generated@@210 $generated@@211))
 :pattern ( ($generated@@27 $generated@@209 $generated@@211))
 :pattern ( ($generated@@27 $generated@@210 $generated@@211))
)))
 :pattern ( ($generated@@49 $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 Int) ) (! (= ($generated@@56 $generated@@12 ($generated@@16 ($generated@@41 $generated@@212))) ($generated@@43 $generated@@126 ($generated@@56 $generated@@12 ($generated@@16 $generated@@212))))
 :pattern ( ($generated@@56 $generated@@12 ($generated@@16 ($generated@@41 $generated@@212))))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@T) ) (! (= ($generated@@56 $generated@@214 ($generated@@43 $generated@@214 $generated@@213)) ($generated@@43 $generated@@126 ($generated@@56 $generated@@214 $generated@@213)))
 :pattern ( ($generated@@56 $generated@@214 ($generated@@43 $generated@@214 $generated@@213)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! ($generated@@60 $generated@@12 $generated@@216 $generated@@0 $generated@@215)
 :pattern ( ($generated@@60 $generated@@12 $generated@@216 $generated@@0 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! ($generated@@60 $generated@@11 $generated@@218 $generated $generated@@217)
 :pattern ( ($generated@@60 $generated@@11 $generated@@218 $generated $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ) (! ($generated@@30 $generated@@12 $generated@@219 $generated@@0)
 :pattern ( ($generated@@30 $generated@@12 $generated@@219 $generated@@0))
)))
(assert (forall (($generated@@220 T@U) ) (! ($generated@@30 $generated@@11 $generated@@220 $generated)
 :pattern ( ($generated@@30 $generated@@11 $generated@@220 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () Int)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@232 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@233 true))
(let (($generated@@234  (=> (and (forall (($generated@@235 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@235 ($generated@@70 $generated@@0 $generated@@0)) (and (forall (($generated@@236 T@U) ) (!  (and true (=> ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@235 ($generated@@56 $generated@@12 $generated@@236)) true))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 $generated@@236))))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@235 ($generated@@56 $generated@@12 $generated@@236))))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 $generated@@236)))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@235 ($generated@@56 $generated@@12 $generated@@236)))
)) (=> (forall (($generated@@237 Int) ) (!  (=> (and ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@235 ($generated@@56 $generated@@12 ($generated@@16 $generated@@237))) ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 ($generated@@16 $generated@@237)))) (= ($generated@@17 ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@235 ($generated@@56 $generated@@12 ($generated@@16 $generated@@237))))) ($generated@@17 ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 ($generated@@16 $generated@@237)))))))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 ($generated@@16 $generated@@237)))))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@235 ($generated@@56 $generated@@12 ($generated@@16 $generated@@237)))))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 ($generated@@16 $generated@@237))))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@235 ($generated@@56 $generated@@12 ($generated@@16 $generated@@237))))
)) true)))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@235 ($generated@@56 $generated@@12 ($generated@@16 10)))))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@235 ($generated@@56 $generated@@12 ($generated@@16 10))))
)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@238 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@238 ($generated@@70 $generated@@0 $generated@@0)) (=> (forall (($generated@@239 T@U) ) (!  (=> (and ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@238 ($generated@@56 $generated@@12 $generated@@239)) ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 $generated@@239))) (= ($generated@@17 ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@238 ($generated@@56 $generated@@12 $generated@@239)))) ($generated@@17 ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 $generated@@239))))))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 $generated@@239))))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@238 ($generated@@56 $generated@@12 $generated@@239))))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 $generated@@239)))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@238 ($generated@@56 $generated@@12 $generated@@239)))
)) (=> ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@238 ($generated@@56 $generated@@12 ($generated@@16 ($generated@@41 10)))) (= ($generated@@17 ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@238 ($generated@@56 $generated@@12 ($generated@@16 ($generated@@41 10)))))) ($generated@@41 0)))))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@238 ($generated@@56 $generated@@12 ($generated@@16 10)))))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@238 ($generated@@56 $generated@@12 ($generated@@16 10))))
)))))
(let (($generated@@240  (=> (and (not ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 ($generated@@16 ($generated@@41 10))))) (= (ControlFlow 0 7) 2)) $generated@@234)))
(let (($generated@@241  (=> (and ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 ($generated@@16 ($generated@@41 10)))) (= (ControlFlow 0 6) 2)) $generated@@234)))
(let (($generated@@242  (=> (and (and (forall (($generated@@243 T@U) ) (!  (=> (and ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 $generated@@243)) ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 $generated@@243))) (= ($generated@@17 ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 $generated@@243)))) ($generated@@17 ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 $generated@@243))))))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 $generated@@243))))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 $generated@@243))))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 $generated@@243)))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 $generated@@243)))
)) ($generated@@59 ($generated@@56 $generated@@31 $generated@@223) ($generated@@32 $generated@@0 $generated@@0) $generated@@221)) (and (= $generated@@224 ($generated@@41 10)) ($generated@@60 $generated@@12 ($generated@@16 $generated@@224) $generated@@0 $generated@@221))) (and (=> (= (ControlFlow 0 8) 6) $generated@@241) (=> (= (ControlFlow 0 8) 7) $generated@@240)))))
(let (($generated@@244  (=> (and (not (forall (($generated@@245 Int) ) (!  (=> (and ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 ($generated@@16 $generated@@245))) ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 ($generated@@16 $generated@@245)))) (= ($generated@@17 ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 ($generated@@16 $generated@@245))))) ($generated@@17 ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 ($generated@@16 $generated@@245)))))))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 ($generated@@16 $generated@@245)))))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 ($generated@@16 $generated@@245)))))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 ($generated@@16 $generated@@245))))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 ($generated@@16 $generated@@245))))
))) (= (ControlFlow 0 5) 2)) $generated@@234)))
(let (($generated@@246  (=> (not (and ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 ($generated@@16 $generated@@225))) ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 ($generated@@16 $generated@@225))))) (and (=> (= (ControlFlow 0 10) 8) $generated@@242) (=> (= (ControlFlow 0 10) 5) $generated@@244)))))
(let (($generated@@247  (=> (and ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 ($generated@@16 $generated@@225))) ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@222 ($generated@@56 $generated@@12 ($generated@@16 $generated@@225)))) (and (=> (= (ControlFlow 0 9) 8) $generated@@242) (=> (= (ControlFlow 0 9) 5) $generated@@244)))))
(let (($generated@@248  (=> (not ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 ($generated@@16 $generated@@225)))) (and (=> (= (ControlFlow 0 12) 9) $generated@@247) (=> (= (ControlFlow 0 12) 10) $generated@@246)))))
(let (($generated@@249  (=> ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@223 ($generated@@56 $generated@@12 ($generated@@16 $generated@@225))) (=> (and ($generated@@59 ($generated@@56 $generated@@31 $generated@@222) ($generated@@32 $generated@@0 $generated@@0) $generated@@221) ($generated@@60 $generated@@12 ($generated@@16 $generated@@225) $generated@@0 $generated@@221)) (and (=> (= (ControlFlow 0 11) 9) $generated@@247) (=> (= (ControlFlow 0 11) 10) $generated@@246))))))
(let (($generated@@250  (=> (and ($generated@@59 ($generated@@56 $generated@@31 $generated@@223) ($generated@@32 $generated@@0 $generated@@0) $generated@@221) ($generated@@60 $generated@@12 ($generated@@16 $generated@@225) $generated@@0 $generated@@221)) (and (=> (= (ControlFlow 0 13) 11) $generated@@249) (=> (= (ControlFlow 0 13) 12) $generated@@248)))))
(let (($generated@@251  (=> (and ($generated@@30 $generated@@31 $generated@@223 ($generated@@70 $generated@@0 $generated@@0)) ($generated@@60 $generated@@31 $generated@@223 ($generated@@70 $generated@@0 $generated@@0) $generated@@221)) (and (=> (= (ControlFlow 0 14) 13) $generated@@250) (=> (= (ControlFlow 0 14) 4) $generated@@233)))))
(let (($generated@@252  (=> (and (not (and ($generated@@30 $generated@@31 $generated@@223 ($generated@@70 $generated@@0 $generated@@0)) ($generated@@60 $generated@@31 $generated@@223 ($generated@@70 $generated@@0 $generated@@0) $generated@@221))) (= (ControlFlow 0 3) 2)) $generated@@234)))
(let (($generated@@253  (=> (and (forall (($generated@@254 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@254 ($generated@@70 $generated@@0 $generated@@0)) (=> ($generated@@15 ($generated@@55 $generated@@11 ($generated@@75 ($generated@@70 $generated@@0 $generated@@0) $generated $generated@@221 $generated@@226 ($generated@@56 $generated@@31 $generated@@254)))) true))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@254 ($generated@@56 $generated@@12 ($generated@@16 10)))))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@254 ($generated@@56 $generated@@12 ($generated@@16 10))))
 :pattern ( ($generated@@55 $generated@@11 ($generated@@75 ($generated@@70 $generated@@0 $generated@@0) $generated $generated@@221 $generated@@226 ($generated@@56 $generated@@31 $generated@@254))))
)) (forall (($generated@@255 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@255 ($generated@@70 $generated@@0 $generated@@0)) (and (=> ($generated@@15 ($generated@@55 $generated@@11 ($generated@@75 ($generated@@70 $generated@@0 $generated@@0) $generated $generated@@221 $generated@@226 ($generated@@56 $generated@@31 $generated@@255)))) ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@255 ($generated@@56 $generated@@12 ($generated@@16 ($generated@@41 10))))) (=> ($generated@@15 ($generated@@55 $generated@@11 ($generated@@75 ($generated@@70 $generated@@0 $generated@@0) $generated $generated@@221 $generated@@226 ($generated@@56 $generated@@31 $generated@@255)))) (= ($generated@@17 ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@255 ($generated@@56 $generated@@12 ($generated@@16 ($generated@@41 10)))))) ($generated@@41 0)))))
 :pattern ( ($generated@@55 $generated@@12 ($generated@@75 $generated@@0 $generated@@0 $generated@@221 $generated@@255 ($generated@@56 $generated@@12 ($generated@@16 10)))))
 :pattern ( ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@255 ($generated@@56 $generated@@12 ($generated@@16 10))))
 :pattern ( ($generated@@55 $generated@@11 ($generated@@75 ($generated@@70 $generated@@0 $generated@@0) $generated $generated@@221 $generated@@226 ($generated@@56 $generated@@31 $generated@@255))))
))) (and (=> (= (ControlFlow 0 15) 14) $generated@@251) (=> (= (ControlFlow 0 15) 3) $generated@@252)))))
(let (($generated@@256  (=> (and (not ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@227 ($generated@@56 $generated@@12 ($generated@@16 ($generated@@41 10))))) (= (ControlFlow 0 19) 15)) $generated@@253)))
(let (($generated@@257  (=> (and ($generated@@76 $generated@@0 $generated@@0 $generated@@221 $generated@@227 ($generated@@56 $generated@@12 ($generated@@16 ($generated@@41 10)))) (= (ControlFlow 0 18) 15)) $generated@@253)))
(let (($generated@@258  (=> (and (and ($generated@@15 ($generated@@55 $generated@@11 ($generated@@75 ($generated@@70 $generated@@0 $generated@@0) $generated $generated@@221 $generated@@226 ($generated@@56 $generated@@31 $generated@@227)))) ($generated@@59 ($generated@@56 $generated@@31 $generated@@227) ($generated@@32 $generated@@0 $generated@@0) $generated@@221)) (and (= $generated@@228 ($generated@@41 10)) ($generated@@60 $generated@@12 ($generated@@16 $generated@@228) $generated@@0 $generated@@221))) (and (=> (= (ControlFlow 0 20) 18) $generated@@257) (=> (= (ControlFlow 0 20) 19) $generated@@256)))))
(let (($generated@@259  (=> (and (not ($generated@@15 ($generated@@55 $generated@@11 ($generated@@75 ($generated@@70 $generated@@0 $generated@@0) $generated $generated@@221 $generated@@226 ($generated@@56 $generated@@31 $generated@@227))))) (= (ControlFlow 0 17) 15)) $generated@@253)))
(let (($generated@@260  (=> (and ($generated@@30 $generated@@31 $generated@@227 ($generated@@70 $generated@@0 $generated@@0)) ($generated@@60 $generated@@31 $generated@@227 ($generated@@70 $generated@@0 $generated@@0) $generated@@221)) (and (=> (= (ControlFlow 0 21) 20) $generated@@258) (=> (= (ControlFlow 0 21) 17) $generated@@259)))))
(let (($generated@@261  (=> (and (not (and ($generated@@30 $generated@@31 $generated@@227 ($generated@@70 $generated@@0 $generated@@0)) ($generated@@60 $generated@@31 $generated@@227 ($generated@@70 $generated@@0 $generated@@0) $generated@@221))) (= (ControlFlow 0 16) 15)) $generated@@253)))
(let (($generated@@262  (=> (and (forall (($generated@@263 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@263 ($generated@@70 $generated@@0 $generated@@0)) true)
 :pattern ( ($generated@@76 ($generated@@70 $generated@@0 $generated@@0) $generated $generated@@221 $generated@@226 ($generated@@56 $generated@@31 $generated@@263)))
)) (forall (($generated@@264 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@264 ($generated@@70 $generated@@0 $generated@@0)) ($generated@@76 ($generated@@70 $generated@@0 $generated@@0) $generated $generated@@221 $generated@@226 ($generated@@56 $generated@@31 $generated@@264)))
 :pattern ( ($generated@@76 ($generated@@70 $generated@@0 $generated@@0) $generated $generated@@221 $generated@@226 ($generated@@56 $generated@@31 $generated@@264)))
))) (and (=> (= (ControlFlow 0 22) 21) $generated@@260) (=> (= (ControlFlow 0 22) 16) $generated@@261)))))
(let (($generated@@265  (=> (and (not (and ($generated@@30 $generated@@31 $generated@@229 ($generated@@70 $generated@@0 $generated@@0)) ($generated@@60 $generated@@31 $generated@@229 ($generated@@70 $generated@@0 $generated@@0) $generated@@221))) (= (ControlFlow 0 24) 22)) $generated@@262)))
(let (($generated@@266  (=> (and (and (and ($generated@@30 $generated@@31 $generated@@229 ($generated@@70 $generated@@0 $generated@@0)) ($generated@@60 $generated@@31 $generated@@229 ($generated@@70 $generated@@0 $generated@@0) $generated@@221)) ($generated@@59 ($generated@@56 $generated@@31 $generated@@226) ($generated@@32 ($generated@@70 $generated@@0 $generated@@0) $generated) $generated@@221)) (and ($generated@@60 $generated@@31 $generated@@229 ($generated@@70 $generated@@0 $generated@@0) $generated@@221) (= (ControlFlow 0 23) 22))) $generated@@262)))
(let (($generated@@267  (=> (= $generated@@230 ($generated@@164 $generated@@123 $generated@@221 $generated@@3 false)) (and (=> (= (ControlFlow 0 25) 23) $generated@@266) (=> (= (ControlFlow 0 25) 24) $generated@@265)))))
(let (($generated@@268  (=> (and ($generated@@48 $generated@@221) ($generated@@231 $generated@@221)) (=> (and (and (and ($generated@@30 $generated@@31 $generated@@226 ($generated@@70 ($generated@@70 $generated@@0 $generated@@0) $generated)) ($generated@@60 $generated@@31 $generated@@226 ($generated@@70 ($generated@@70 $generated@@0 $generated@@0) $generated) $generated@@221)) (and ($generated@@30 $generated@@31 $generated@@222 ($generated@@70 $generated@@0 $generated@@0)) ($generated@@60 $generated@@31 $generated@@222 ($generated@@70 $generated@@0 $generated@@0) $generated@@221))) (and (and (= 0 $generated@@232) ($generated@@76 ($generated@@70 $generated@@0 $generated@@0) $generated $generated@@221 $generated@@226 ($generated@@56 $generated@@31 $generated@@222))) (and ($generated@@15 ($generated@@55 $generated@@11 ($generated@@75 ($generated@@70 $generated@@0 $generated@@0) $generated $generated@@221 $generated@@226 ($generated@@56 $generated@@31 $generated@@222)))) (= (ControlFlow 0 26) 25)))) $generated@@267))))
$generated@@268))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
