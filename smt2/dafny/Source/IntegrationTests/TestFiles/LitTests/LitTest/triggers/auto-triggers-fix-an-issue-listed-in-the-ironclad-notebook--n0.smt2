(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@53 () Int)
(declare-fun $generated@@54 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U Int) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U) Int)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@164 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@253 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (= ($generated@@8 $generated@@27) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@31 ($generated@@28 $generated@@29 $generated@@30)) ($generated@@25 $generated@@31))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@27 $generated@@31 ($generated@@28 $generated@@29 $generated@@30)))
)))
(assert (= ($generated@@32 $generated@@33) 0))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@34 $generated@@38 $generated@@39) ($generated@@28 $generated@@36 $generated@@37))  (and ($generated@@35 $generated@@38 $generated@@36) ($generated@@35 $generated@@39 $generated@@37)))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@34 $generated@@38 $generated@@39) ($generated@@28 $generated@@36 $generated@@37)))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> ($generated@@44 $generated@@50) (= ($generated@@43 $generated@@27 ($generated@@34 $generated@@48 $generated@@49) ($generated@@28 $generated@@46 $generated@@47) $generated@@50)  (and ($generated@@45 $generated@@48 $generated@@46 $generated@@50) ($generated@@45 $generated@@49 $generated@@47 $generated@@50))))
 :pattern ( ($generated@@43 $generated@@27 ($generated@@34 $generated@@48 $generated@@49) ($generated@@28 $generated@@46 $generated@@47) $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@25 $generated@@52) (= ($generated@@51 $generated@@52) $generated@@5))
 :pattern ( ($generated@@25 $generated@@52))
)))
(assert  (and (= ($generated@@8 $generated@@56) 4) (= ($generated@@8 $generated@@59) 5)))
(assert  (=> (<= 2 $generated@@53) (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or ($generated@@55 $generated@@60 $generated@@61) (and (< 2 $generated@@53) (and ($generated@@26 $generated@@56 $generated@@60 ($generated@@57 ($generated@@58 $generated) ($generated@@58 $generated))) ($generated@@26 $generated@@59 $generated@@61 ($generated@@58 $generated))))) ($generated@@26 $generated@@59 ($generated@@54 $generated@@60 $generated@@61) ($generated@@58 $generated)))
 :pattern ( ($generated@@54 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@62 $generated@@64 $generated@@65)  (and (= ($generated@@32 $generated@@64) ($generated@@32 $generated@@65)) (forall (($generated@@66 Int) ) (!  (=> (and (<= 0 $generated@@66) (< $generated@@66 ($generated@@32 $generated@@64))) (= ($generated@@63 $generated@@64 $generated@@66) ($generated@@63 $generated@@65 $generated@@66)))
 :pattern ( ($generated@@63 $generated@@64 $generated@@66))
 :pattern ( ($generated@@63 $generated@@65 $generated@@66))
))))
 :pattern ( ($generated@@62 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 ($generated@@67 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@67 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@25 $generated@@71) (exists (($generated@@72 T@U) ($generated@@73 T@U) ) (= $generated@@71 ($generated@@34 $generated@@72 $generated@@73))))
 :pattern ( ($generated@@25 $generated@@71))
)))
(assert (= ($generated@@8 $generated@@74) 6))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@26 $generated@@74 $generated@@77 ($generated@@75 $generated@@78)) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@76 $generated@@77 $generated@@79) ($generated@@35 $generated@@79 $generated@@78))
 :pattern ( ($generated@@76 $generated@@77 $generated@@79))
)))
 :pattern ( ($generated@@26 $generated@@74 $generated@@77 ($generated@@75 $generated@@78)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@45 ($generated@@68 $generated@@83 $generated@@80) $generated@@81 $generated@@82) ($generated@@43 $generated@@83 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@45 ($generated@@68 $generated@@83 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@62 $generated@@84 $generated@@85) (= $generated@@84 $generated@@85))
 :pattern ( ($generated@@62 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@35 $generated@@86 $generated) (and (= ($generated@@68 $generated@@10 ($generated@@67 $generated@@10 $generated@@86)) $generated@@86) ($generated@@26 $generated@@10 ($generated@@67 $generated@@10 $generated@@86) $generated)))
 :pattern ( ($generated@@35 $generated@@86 $generated))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@35 ($generated@@68 $generated@@89 $generated@@87) $generated@@88) ($generated@@26 $generated@@89 $generated@@87 $generated@@88))
 :pattern ( ($generated@@35 ($generated@@68 $generated@@89 $generated@@87) $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (<= 0 ($generated@@32 $generated@@90))
 :pattern ( ($generated@@32 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@43 $generated@@74 $generated@@91 ($generated@@75 $generated@@92) $generated@@93) (forall (($generated@@94 T@U) ) (!  (=> ($generated@@76 $generated@@91 $generated@@94) ($generated@@45 $generated@@94 $generated@@92 $generated@@93))
 :pattern ( ($generated@@76 $generated@@91 $generated@@94))
)))
 :pattern ( ($generated@@43 $generated@@74 $generated@@91 ($generated@@75 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@95 ($generated@@57 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@57 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@98 ($generated@@57 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@57 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@24 ($generated@@57 $generated@@101 $generated@@102)) $generated@@3)
 :pattern ( ($generated@@57 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@51 ($generated@@34 $generated@@103 $generated@@104)) $generated@@5)
 :pattern ( ($generated@@34 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@105 ($generated@@28 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@28 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@108 ($generated@@28 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@28 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@111 ($generated@@34 $generated@@112 $generated@@113)) $generated@@112)
 :pattern ( ($generated@@34 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@114 ($generated@@34 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@34 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@43 $generated@@59 $generated@@117 ($generated@@58 $generated@@118) $generated@@119) (forall (($generated@@120 Int) ) (!  (=> (and (<= 0 $generated@@120) (< $generated@@120 ($generated@@32 $generated@@117))) ($generated@@45 ($generated@@63 $generated@@117 $generated@@120) $generated@@118 $generated@@119))
 :pattern ( ($generated@@63 $generated@@117 $generated@@120))
)))
 :pattern ( ($generated@@43 $generated@@59 $generated@@117 ($generated@@58 $generated@@118) $generated@@119))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@75 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@75 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@24 ($generated@@75 $generated@@123)) $generated@@1)
 :pattern ( ($generated@@75 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@58 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@58 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@24 ($generated@@58 $generated@@126)) $generated@@2)
 :pattern ( ($generated@@58 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@67 $generated@@128 ($generated@@68 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@68 $generated@@128 $generated@@127))
)))
(assert  (and (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@134 $generated@@135 ($generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@136) $generated@@138) $generated@@136)
 :weight 0
)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@129 $generated@@139 $generated@@140 ($generated@@133 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@129 $generated@@139 $generated@@140 $generated@@142 $generated@@144)))
 :weight 0
))) (= ($generated@@8 $generated@@130) 7)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@43 $generated@@56 $generated@@145 ($generated@@57 $generated@@146 $generated@@147) $generated@@148) (forall (($generated@@149 T@U) ) (!  (=> ($generated@@76 ($generated@@132 $generated@@145) $generated@@149) (and ($generated@@45 ($generated@@129 $generated@@130 $generated@@130 ($generated@@131 $generated@@145) $generated@@149) $generated@@147 $generated@@148) ($generated@@45 $generated@@149 $generated@@146 $generated@@148)))
 :pattern ( ($generated@@129 $generated@@130 $generated@@130 ($generated@@131 $generated@@145) $generated@@149))
 :pattern ( ($generated@@76 ($generated@@132 $generated@@145) $generated@@149))
)))
 :pattern ( ($generated@@43 $generated@@56 $generated@@145 ($generated@@57 $generated@@146 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (< ($generated@@150 $generated@@152) ($generated@@151 ($generated@@34 $generated@@152 $generated@@153)))
 :pattern ( ($generated@@34 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (< ($generated@@150 $generated@@155) ($generated@@151 ($generated@@34 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@34 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (not ($generated@@76 ($generated@@132 $generated@@156) $generated@@157))
 :pattern ( ($generated@@76 ($generated@@132 $generated@@156) $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@35 $generated@@158 ($generated@@57 $generated@@159 $generated@@160)) (and (= ($generated@@68 $generated@@56 ($generated@@67 $generated@@56 $generated@@158)) $generated@@158) ($generated@@26 $generated@@56 ($generated@@67 $generated@@56 $generated@@158) ($generated@@57 $generated@@159 $generated@@160))))
 :pattern ( ($generated@@35 $generated@@158 ($generated@@57 $generated@@159 $generated@@160)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@35 $generated@@163 ($generated@@28 $generated@@161 $generated@@162)) (and (= ($generated@@68 $generated@@27 ($generated@@67 $generated@@27 $generated@@163)) $generated@@163) ($generated@@26 $generated@@27 ($generated@@67 $generated@@27 $generated@@163) ($generated@@28 $generated@@161 $generated@@162))))
 :pattern ( ($generated@@35 $generated@@163 ($generated@@28 $generated@@161 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@164 $generated@@172 $generated@@173 $generated@@174 ($generated@@169 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@177 $generated@@178) $generated@@175)
 :weight 0
)) (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@164 $generated@@179 $generated@@180 $generated@@181 ($generated@@169 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@164 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@164 $generated@@188 $generated@@189 $generated@@190 ($generated@@169 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)))) (= ($generated@@8 $generated@@165) 8)) (= ($generated@@8 $generated@@166) 9)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@8 ($generated@@168 $generated@@197 $generated@@198)) 10))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@168 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@171 ($generated@@168 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@168 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@13 ($generated@@164 $generated@@165 $generated@@166 $generated@@9 ($generated@@167 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@207 $generated@@208))  (=> (and (or (not (= $generated@@207 $generated@@203)) (not true)) ($generated@@13 ($generated@@67 $generated@@9 ($generated@@129 $generated@@166 $generated@@130 ($generated@@129 $generated@@165 ($generated@@168 $generated@@166 $generated@@130) $generated@@204 $generated@@207) $generated@@205)))) $generated@@206))
 :pattern ( ($generated@@164 $generated@@165 $generated@@166 $generated@@9 ($generated@@167 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (and (= ($generated@@24 ($generated@@28 $generated@@210 $generated@@211)) $generated@@6) (= ($generated@@209 ($generated@@28 $generated@@210 $generated@@211)) $generated@@7))
 :pattern ( ($generated@@28 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ) (!  (or (= $generated@@212 $generated@@156) (exists (($generated@@213 T@U) ) ($generated@@76 ($generated@@132 $generated@@212) $generated@@213)))
 :pattern ( ($generated@@132 $generated@@212))
)))
(assert (forall (($generated@@215 T@U) ) (!  (or (= $generated@@215 $generated@@156) (exists (($generated@@216 T@U) ) ($generated@@76 ($generated@@214 $generated@@215) $generated@@216)))
 :pattern ( ($generated@@214 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@76 ($generated@@217 $generated@@218) $generated@@219)  (and ($generated@@76 ($generated@@132 $generated@@218) ($generated@@111 ($generated@@67 $generated@@27 $generated@@219))) (= ($generated@@129 $generated@@130 $generated@@130 ($generated@@131 $generated@@218) ($generated@@111 ($generated@@67 $generated@@27 $generated@@219))) ($generated@@114 ($generated@@67 $generated@@27 $generated@@219)))))
 :pattern ( ($generated@@76 ($generated@@217 $generated@@218) $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@76 ($generated@@214 $generated@@220) $generated@@221) (exists (($generated@@222 T@U) ) (!  (and ($generated@@76 ($generated@@132 $generated@@220) $generated@@222) (= $generated@@221 ($generated@@129 $generated@@130 $generated@@130 ($generated@@131 $generated@@220) $generated@@222)))
 :pattern ( ($generated@@76 ($generated@@132 $generated@@220) $generated@@222))
 :pattern ( ($generated@@129 $generated@@130 $generated@@130 ($generated@@131 $generated@@220) $generated@@222))
)))
 :pattern ( ($generated@@76 ($generated@@214 $generated@@220) $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@150 ($generated@@68 $generated@@27 $generated@@223)) ($generated@@151 $generated@@223))
 :pattern ( ($generated@@150 ($generated@@68 $generated@@27 $generated@@223)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> ($generated@@35 $generated@@224 ($generated@@75 $generated@@225)) (and (= ($generated@@68 $generated@@74 ($generated@@67 $generated@@74 $generated@@224)) $generated@@224) ($generated@@26 $generated@@74 ($generated@@67 $generated@@74 $generated@@224) ($generated@@75 $generated@@225))))
 :pattern ( ($generated@@35 $generated@@224 ($generated@@75 $generated@@225)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> ($generated@@35 $generated@@226 ($generated@@58 $generated@@227)) (and (= ($generated@@68 $generated@@59 ($generated@@67 $generated@@59 $generated@@226)) $generated@@226) ($generated@@26 $generated@@59 ($generated@@67 $generated@@59 $generated@@226) ($generated@@58 $generated@@227))))
 :pattern ( ($generated@@35 $generated@@226 ($generated@@58 $generated@@227)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@26 $generated@@56 $generated@@228 ($generated@@57 $generated@@229 $generated@@230)) (forall (($generated@@231 T@U) ) (!  (=> ($generated@@76 ($generated@@132 $generated@@228) $generated@@231) (and ($generated@@35 ($generated@@129 $generated@@130 $generated@@130 ($generated@@131 $generated@@228) $generated@@231) $generated@@230) ($generated@@35 $generated@@231 $generated@@229)))
 :pattern ( ($generated@@129 $generated@@130 $generated@@130 ($generated@@131 $generated@@228) $generated@@231))
 :pattern ( ($generated@@76 ($generated@@132 $generated@@228) $generated@@231))
)))
 :pattern ( ($generated@@26 $generated@@56 $generated@@228 ($generated@@57 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and ($generated@@44 $generated@@234) (and ($generated@@25 $generated@@232) (exists (($generated@@235 T@U) ) (! ($generated@@43 $generated@@27 $generated@@232 ($generated@@28 $generated@@233 $generated@@235) $generated@@234)
 :pattern ( ($generated@@43 $generated@@27 $generated@@232 ($generated@@28 $generated@@233 $generated@@235) $generated@@234))
)))) ($generated@@45 ($generated@@111 $generated@@232) $generated@@233 $generated@@234))
 :pattern ( ($generated@@45 ($generated@@111 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and ($generated@@44 $generated@@238) (and ($generated@@25 $generated@@236) (exists (($generated@@239 T@U) ) (! ($generated@@43 $generated@@27 $generated@@236 ($generated@@28 $generated@@239 $generated@@237) $generated@@238)
 :pattern ( ($generated@@43 $generated@@27 $generated@@236 ($generated@@28 $generated@@239 $generated@@237) $generated@@238))
)))) ($generated@@45 ($generated@@114 $generated@@236) $generated@@237 $generated@@238))
 :pattern ( ($generated@@45 ($generated@@114 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= ($generated@@34 ($generated@@40 $generated@@130 $generated@@240) ($generated@@40 $generated@@130 $generated@@241)) ($generated@@40 $generated@@27 ($generated@@34 $generated@@240 $generated@@241)))
 :pattern ( ($generated@@34 ($generated@@40 $generated@@130 $generated@@240) ($generated@@40 $generated@@130 $generated@@241)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@T) ) (! (= ($generated@@68 $generated@@243 ($generated@@40 $generated@@243 $generated@@242)) ($generated@@40 $generated@@130 ($generated@@68 $generated@@243 $generated@@242)))
 :pattern ( ($generated@@68 $generated@@243 ($generated@@40 $generated@@243 $generated@@242)))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= ($generated@@32 $generated@@244) 0) (= $generated@@244 $generated@@33))
 :pattern ( ($generated@@32 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! ($generated@@43 $generated@@10 $generated@@246 $generated $generated@@245)
 :pattern ( ($generated@@43 $generated@@10 $generated@@246 $generated $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= ($generated@@26 $generated@@59 $generated@@247 ($generated@@58 $generated@@248)) (forall (($generated@@249 Int) ) (!  (=> (and (<= 0 $generated@@249) (< $generated@@249 ($generated@@32 $generated@@247))) ($generated@@35 ($generated@@63 $generated@@247 $generated@@249) $generated@@248))
 :pattern ( ($generated@@63 $generated@@247 $generated@@249))
)))
 :pattern ( ($generated@@26 $generated@@59 $generated@@247 ($generated@@58 $generated@@248)))
)))
(assert (forall (($generated@@250 T@U) ) (!  (or (= $generated@@250 $generated@@156) (exists (($generated@@251 T@U) ($generated@@252 T@U) ) ($generated@@76 ($generated@@217 $generated@@250) ($generated@@68 $generated@@27 ($generated@@34 $generated@@251 $generated@@252)))))
 :pattern ( ($generated@@217 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 Int) ) (!  (=> (and (<= 0 $generated@@255) (< $generated@@255 ($generated@@32 $generated@@254))) (< ($generated@@151 ($generated@@67 $generated@@27 ($generated@@63 $generated@@254 $generated@@255))) ($generated@@253 $generated@@254)))
 :pattern ( ($generated@@151 ($generated@@67 $generated@@27 ($generated@@63 $generated@@254 $generated@@255))))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> ($generated@@26 $generated@@56 $generated@@256 ($generated@@57 $generated@@257 $generated@@258)) (and (and ($generated@@26 $generated@@74 ($generated@@132 $generated@@256) ($generated@@75 $generated@@257)) ($generated@@26 $generated@@74 ($generated@@214 $generated@@256) ($generated@@75 $generated@@258))) ($generated@@26 $generated@@74 ($generated@@217 $generated@@256) ($generated@@75 ($generated@@28 $generated@@257 $generated@@258)))))
 :pattern ( ($generated@@26 $generated@@56 $generated@@256 ($generated@@57 $generated@@257 $generated@@258)))
)))
(assert (forall (($generated@@259 T@U) ) (! ($generated@@26 $generated@@10 $generated@@259 $generated)
 :pattern ( ($generated@@26 $generated@@10 $generated@@259 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@267  (=> (= (ControlFlow 0 2) (- 0 1)) (or true (= ($generated@@76 ($generated@@132 $generated@@260) ($generated@@68 $generated@@59 $generated@@261)) ($generated@@76 ($generated@@132 $generated@@262) ($generated@@68 $generated@@59 $generated@@261)))))))
(let (($generated@@268  (=> (and ($generated@@13 ($generated@@40 $generated@@9 ($generated@@12 true))) (= (ControlFlow 0 4) 2)) $generated@@267)))
(let (($generated@@269  (=> (and (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@12 true)))) (= (ControlFlow 0 3) 2)) $generated@@267)))
(let (($generated@@270  (=> (= $generated@@263 ($generated@@167 $generated@@264 $generated@@265 $generated@@4 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@269) (=> (= (ControlFlow 0 5) 4) $generated@@268)))))
(let (($generated@@271  (=> (and ($generated@@44 $generated@@265) ($generated@@266 $generated@@265)) (=> (and (and ($generated@@26 $generated@@56 $generated@@260 ($generated@@57 ($generated@@58 $generated) ($generated@@58 $generated))) ($generated@@43 $generated@@56 $generated@@260 ($generated@@57 ($generated@@58 $generated) ($generated@@58 $generated)) $generated@@265)) (and ($generated@@26 $generated@@56 $generated@@262 ($generated@@57 ($generated@@58 $generated) ($generated@@58 $generated))) ($generated@@43 $generated@@56 $generated@@262 ($generated@@57 ($generated@@58 $generated) ($generated@@58 $generated)) $generated@@265))) (=> (and (and (and ($generated@@26 $generated@@59 $generated@@261 ($generated@@58 $generated)) ($generated@@43 $generated@@59 $generated@@261 ($generated@@58 $generated) $generated@@265)) (= 3 $generated@@53)) (and (forall (($generated@@272 T@U) ) (!  (=> ($generated@@26 $generated@@59 $generated@@272 ($generated@@58 $generated)) ($generated@@62 ($generated@@54 $generated@@260 $generated@@272) ($generated@@54 $generated@@262 $generated@@272)))
 :pattern ( ($generated@@54 $generated@@262 $generated@@272))
 :pattern ( ($generated@@54 $generated@@260 $generated@@272))
)) (= (ControlFlow 0 6) 5))) $generated@@270)))))
$generated@@271))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
