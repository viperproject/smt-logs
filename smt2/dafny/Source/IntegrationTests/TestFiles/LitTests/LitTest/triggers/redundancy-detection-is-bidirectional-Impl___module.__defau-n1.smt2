(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U) T@U)
(declare-fun $generated@@19 (T@T T@U) T@U)
(declare-fun $generated@@22 (T@T T@U) T@U)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@28 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@32 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@T T@T) T@T)
(declare-fun $generated@@35 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@37 (T@T) T@T)
(declare-fun $generated@@38 (T@T) T@T)
(declare-fun $generated@@89 (T@T T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (= ($generated@@18 $generated) $generated@@0))
(assert (forall (($generated@@20 T@U) ($generated@@21 T@T) ) (! (= ($generated@@19 $generated@@21 $generated@@20) $generated@@20)
 :pattern ( ($generated@@19 $generated@@21 $generated@@20))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@T) ) (! (= ($generated@@23 $generated@@25 ($generated@@22 $generated@@25 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@22 $generated@@25 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@T) ) (! (= ($generated@@22 $generated@@27 ($generated@@23 $generated@@27 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@23 $generated@@27 $generated@@26))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@39 T@T) ($generated@@40 T@T) ($generated@@41 T@T) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@28 $generated@@39 $generated@@40 $generated@@41 ($generated@@35 $generated@@39 $generated@@40 $generated@@41 $generated@@43 $generated@@44 $generated@@45 $generated@@42) $generated@@44 $generated@@45) $generated@@42)
 :weight 0
)) (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@51 $generated@@53) (= ($generated@@28 $generated@@46 $generated@@47 $generated@@48 ($generated@@35 $generated@@46 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@52 $generated@@49) $generated@@53 $generated@@54) ($generated@@28 $generated@@46 $generated@@47 $generated@@48 $generated@@50 $generated@@53 $generated@@54)))
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@61 $generated@@63) (= ($generated@@28 $generated@@55 $generated@@56 $generated@@57 ($generated@@35 $generated@@55 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@61 $generated@@58) $generated@@62 $generated@@63) ($generated@@28 $generated@@55 $generated@@56 $generated@@57 $generated@@59 $generated@@62 $generated@@63)))
 :weight 0
)))) (= ($generated@@2 $generated@@29) 3)) (= ($generated@@2 $generated@@30) 4)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@32 $generated@@64 $generated@@65 ($generated@@36 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@68) $generated@@66)
 :weight 0
))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (or (= $generated@@73 $generated@@74) (= ($generated@@32 $generated@@69 $generated@@70 ($generated@@36 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@74) ($generated@@32 $generated@@69 $generated@@70 $generated@@72 $generated@@74)))
 :weight 0
))) (= ($generated@@2 $generated@@33) 5)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@2 ($generated@@34 $generated@@75 $generated@@76)) 6))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@37 ($generated@@34 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@34 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@38 ($generated@@34 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@34 $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 Bool) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@7 ($generated@@28 $generated@@29 $generated@@30 $generated@@3 ($generated@@31 $generated@@81 $generated@@82 $generated@@83 $generated@@84) $generated@@85 $generated@@86))  (=> (and (or (not (= $generated@@85 $generated@@81)) (not true)) ($generated@@7 ($generated@@22 $generated@@3 ($generated@@32 $generated@@30 $generated@@33 ($generated@@32 $generated@@29 ($generated@@34 $generated@@30 $generated@@33) $generated@@82 $generated@@85) $generated@@83)))) $generated@@84))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30 $generated@@3 ($generated@@31 $generated@@81 $generated@@82 $generated@@83 $generated@@84) $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@23 $generated@@88 ($generated@@19 $generated@@88 $generated@@87)) ($generated@@19 $generated@@33 ($generated@@23 $generated@@88 $generated@@87)))
 :pattern ( ($generated@@23 $generated@@88 ($generated@@19 $generated@@88 $generated@@87)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! ($generated@@89 $generated@@4 $generated@@91 $generated $generated@@90)
 :pattern ( ($generated@@89 $generated@@4 $generated@@91 $generated $generated@@90))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@92 (Int Int) Bool)
(declare-fun $generated@@93 (Int Int) Bool)
(declare-fun $generated@@94 (Int Int) Bool)
(declare-fun $generated@@95 (Int Int) Bool)
(declare-fun $generated@@96 (Int Int) Bool)
(declare-fun $generated@@97 (Int Int) Bool)
(declare-fun $generated@@98 (Int Int Int) Bool)
(declare-fun $generated@@99 (Int Int Int) Bool)
(declare-fun $generated@@100 () Int)
(declare-fun $generated@@101 () Int)
(declare-fun $generated@@102 () Int)
(declare-fun $generated@@103 () Int)
(declare-fun $generated@@104 () Int)
(declare-fun $generated@@105 () Int)
(declare-fun $generated@@106 () T@U)
(declare-fun $generated@@107 () Int)
(declare-fun $generated@@108 () Int)
(declare-fun $generated@@109 () Int)
(declare-fun $generated@@110 () Int)
(declare-fun $generated@@111 () Int)
(declare-fun $generated@@112 () Int)
(declare-fun $generated@@113 () Int)
(declare-fun $generated@@114 () Int)
(declare-fun $generated@@115 () Int)
(declare-fun $generated@@116 () Int)
(declare-fun $generated@@117 () Int)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 () Int)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 () Int)
(declare-fun $generated@@123 () Int)
(declare-fun $generated@@124 () Int)
(declare-fun $generated@@125 () T@U)
(declare-fun $generated@@126 () T@U)
(declare-fun $generated@@127 (T@U) Bool)
(declare-fun $generated@@128 (T@U) Bool)
(declare-fun $generated@@129 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 50) (let (($generated@@130  (=> (and (forall (($generated@@131 Int) ($generated@@132 Int) ($generated@@133 Int) ($generated@@134 Int) ($generated@@135 Int) ($generated@@136 Int) ) (!  (=> (not ($generated@@7 ($generated@@19 $generated@@3 ($generated@@6 true)))) (and ($generated@@95 $generated@@131 $generated@@134) (=> (not ($generated@@94 $generated@@131 $generated@@134)) (and ($generated@@96 $generated@@132 $generated@@135) (=> (not ($generated@@93 $generated@@132 $generated@@135)) (and ($generated@@97 $generated@@133 $generated@@136) (=> (not ($generated@@92 $generated@@133 $generated@@136)) ($generated@@98 $generated@@131 $generated@@132 $generated@@133))))))))
 :pattern ( ($generated@@92 $generated@@133 $generated@@136) ($generated@@93 $generated@@132 $generated@@135) ($generated@@94 $generated@@131 $generated@@134))
)) (= (ControlFlow 0 6) (- 0 5))) (forall (($generated@@137 Int) ($generated@@138 Int) ($generated@@139 Int) ($generated@@140 Int) ($generated@@141 Int) ($generated@@142 Int) ) (!  (or (or (or (or true ($generated@@94 $generated@@137 $generated@@140)) ($generated@@93 $generated@@138 $generated@@141)) ($generated@@92 $generated@@139 $generated@@142)) ($generated@@99 $generated@@137 $generated@@138 $generated@@139))
 :pattern ( ($generated@@92 $generated@@139 $generated@@142) ($generated@@93 $generated@@138 $generated@@141) ($generated@@94 $generated@@137 $generated@@140))
)))))
(let (($generated@@143  (=> (and (or (or (or true ($generated@@94 $generated@@100 $generated@@101)) ($generated@@93 $generated@@102 $generated@@103)) ($generated@@92 $generated@@104 $generated@@105)) (= (ControlFlow 0 8) 6)) $generated@@130)))
(let (($generated@@144  (=> (and (not (or (or (or true ($generated@@94 $generated@@100 $generated@@101)) ($generated@@93 $generated@@102 $generated@@103)) ($generated@@92 $generated@@104 $generated@@105))) ($generated@@89 $generated@@4 ($generated@@8 $generated@@100) $generated $generated@@106)) (=> (and (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@102) $generated $generated@@106) ($generated@@89 $generated@@4 ($generated@@8 $generated@@104) $generated $generated@@106)) (and ($generated@@98 $generated@@100 $generated@@102 $generated@@104) (= (ControlFlow 0 7) 6))) $generated@@130))))
(let (($generated@@145  (=> (or (or true ($generated@@94 $generated@@100 $generated@@101)) ($generated@@93 $generated@@102 $generated@@103)) (and (=> (= (ControlFlow 0 10) 7) $generated@@144) (=> (= (ControlFlow 0 10) 8) $generated@@143)))))
(let (($generated@@146  (=> (and (and (not (or (or true ($generated@@94 $generated@@100 $generated@@101)) ($generated@@93 $generated@@102 $generated@@103))) ($generated@@89 $generated@@4 ($generated@@8 $generated@@104) $generated $generated@@106)) (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@105) $generated $generated@@106) ($generated@@97 $generated@@104 $generated@@105))) (and (=> (= (ControlFlow 0 9) 7) $generated@@144) (=> (= (ControlFlow 0 9) 8) $generated@@143)))))
(let (($generated@@147  (=> (or true ($generated@@94 $generated@@100 $generated@@101)) (and (=> (= (ControlFlow 0 12) 9) $generated@@146) (=> (= (ControlFlow 0 12) 10) $generated@@145)))))
(let (($generated@@148  (=> (and (and (not (or true ($generated@@94 $generated@@100 $generated@@101))) ($generated@@89 $generated@@4 ($generated@@8 $generated@@102) $generated $generated@@106)) (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@103) $generated $generated@@106) ($generated@@96 $generated@@102 $generated@@103))) (and (=> (= (ControlFlow 0 11) 9) $generated@@146) (=> (= (ControlFlow 0 11) 10) $generated@@145)))))
(let (($generated@@149  (=> ($generated@@7 ($generated@@19 $generated@@3 ($generated@@6 true))) (and (=> (= (ControlFlow 0 14) 11) $generated@@148) (=> (= (ControlFlow 0 14) 12) $generated@@147)))))
(let (($generated@@150  (=> (and (and (not ($generated@@7 ($generated@@19 $generated@@3 ($generated@@6 true)))) ($generated@@89 $generated@@4 ($generated@@8 $generated@@100) $generated $generated@@106)) (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@101) $generated $generated@@106) ($generated@@95 $generated@@100 $generated@@101))) (and (=> (= (ControlFlow 0 13) 11) $generated@@148) (=> (= (ControlFlow 0 13) 12) $generated@@147)))))
(let (($generated@@151  (and (=> (= (ControlFlow 0 15) 13) $generated@@150) (=> (= (ControlFlow 0 15) 14) $generated@@149))))
(let (($generated@@152 true))
(let (($generated@@153  (=> (forall (($generated@@154 Int) ($generated@@155 Int) ($generated@@156 Int) ($generated@@157 Int) ($generated@@158 Int) ($generated@@159 Int) ) (!  (=> (not ($generated@@7 ($generated@@19 $generated@@3 ($generated@@6 true)))) (and ($generated@@95 $generated@@154 $generated@@157) (=> (not ($generated@@94 $generated@@154 $generated@@157)) (and ($generated@@96 $generated@@155 $generated@@158) (=> (not ($generated@@93 $generated@@155 $generated@@158)) (and ($generated@@98 $generated@@154 $generated@@155 $generated@@156) (=> (not ($generated@@99 $generated@@154 $generated@@155 $generated@@156)) ($generated@@97 $generated@@156 $generated@@159))))))))
 :pattern ( ($generated@@92 $generated@@156 $generated@@159) ($generated@@93 $generated@@155 $generated@@158) ($generated@@94 $generated@@154 $generated@@157))
)) (and (=> (= (ControlFlow 0 16) (- 0 17)) (forall (($generated@@160 Int) ($generated@@161 Int) ($generated@@162 Int) ($generated@@163 Int) ($generated@@164 Int) ($generated@@165 Int) ) (!  (or (or (or (or true ($generated@@94 $generated@@160 $generated@@163)) ($generated@@93 $generated@@161 $generated@@164)) ($generated@@99 $generated@@160 $generated@@161 $generated@@162)) ($generated@@92 $generated@@162 $generated@@165))
 :pattern ( ($generated@@92 $generated@@162 $generated@@165) ($generated@@93 $generated@@161 $generated@@164) ($generated@@94 $generated@@160 $generated@@163))
))) (=> (forall (($generated@@166 Int) ($generated@@167 Int) ($generated@@168 Int) ($generated@@169 Int) ($generated@@170 Int) ($generated@@171 Int) ) (!  (or (or (or (or true ($generated@@94 $generated@@166 $generated@@169)) ($generated@@93 $generated@@167 $generated@@170)) ($generated@@99 $generated@@166 $generated@@167 $generated@@168)) ($generated@@92 $generated@@168 $generated@@171))
 :pattern ( ($generated@@92 $generated@@168 $generated@@171) ($generated@@93 $generated@@167 $generated@@170) ($generated@@94 $generated@@166 $generated@@169))
)) (and (=> (= (ControlFlow 0 16) 15) $generated@@151) (=> (= (ControlFlow 0 16) 4) $generated@@152)))))))
(let (($generated@@172  (=> (and (or (or (or true ($generated@@94 $generated@@107 $generated@@108)) ($generated@@93 $generated@@109 $generated@@110)) ($generated@@99 $generated@@107 $generated@@109 $generated@@111)) (= (ControlFlow 0 19) 16)) $generated@@153)))
(let (($generated@@173  (=> (not (or (or (or true ($generated@@94 $generated@@107 $generated@@108)) ($generated@@93 $generated@@109 $generated@@110)) ($generated@@99 $generated@@107 $generated@@109 $generated@@111))) (=> (and (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@111) $generated $generated@@106) ($generated@@89 $generated@@4 ($generated@@8 $generated@@112) $generated $generated@@106)) (and ($generated@@97 $generated@@111 $generated@@112) (= (ControlFlow 0 18) 16))) $generated@@153))))
(let (($generated@@174  (=> (or (or true ($generated@@94 $generated@@107 $generated@@108)) ($generated@@93 $generated@@109 $generated@@110)) (and (=> (= (ControlFlow 0 21) 18) $generated@@173) (=> (= (ControlFlow 0 21) 19) $generated@@172)))))
(let (($generated@@175  (=> (not (or (or true ($generated@@94 $generated@@107 $generated@@108)) ($generated@@93 $generated@@109 $generated@@110))) (=> (and (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@107) $generated $generated@@106) ($generated@@89 $generated@@4 ($generated@@8 $generated@@109) $generated $generated@@106)) (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@111) $generated $generated@@106) ($generated@@98 $generated@@107 $generated@@109 $generated@@111))) (and (=> (= (ControlFlow 0 20) 18) $generated@@173) (=> (= (ControlFlow 0 20) 19) $generated@@172))))))
(let (($generated@@176  (=> (or true ($generated@@94 $generated@@107 $generated@@108)) (and (=> (= (ControlFlow 0 23) 20) $generated@@175) (=> (= (ControlFlow 0 23) 21) $generated@@174)))))
(let (($generated@@177  (=> (and (and (not (or true ($generated@@94 $generated@@107 $generated@@108))) ($generated@@89 $generated@@4 ($generated@@8 $generated@@109) $generated $generated@@106)) (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@110) $generated $generated@@106) ($generated@@96 $generated@@109 $generated@@110))) (and (=> (= (ControlFlow 0 22) 20) $generated@@175) (=> (= (ControlFlow 0 22) 21) $generated@@174)))))
(let (($generated@@178  (=> ($generated@@7 ($generated@@19 $generated@@3 ($generated@@6 true))) (and (=> (= (ControlFlow 0 25) 22) $generated@@177) (=> (= (ControlFlow 0 25) 23) $generated@@176)))))
(let (($generated@@179  (=> (and (and (not ($generated@@7 ($generated@@19 $generated@@3 ($generated@@6 true)))) ($generated@@89 $generated@@4 ($generated@@8 $generated@@107) $generated $generated@@106)) (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@108) $generated $generated@@106) ($generated@@95 $generated@@107 $generated@@108))) (and (=> (= (ControlFlow 0 24) 22) $generated@@177) (=> (= (ControlFlow 0 24) 23) $generated@@176)))))
(let (($generated@@180  (and (=> (= (ControlFlow 0 26) 24) $generated@@179) (=> (= (ControlFlow 0 26) 25) $generated@@178))))
(let (($generated@@181 true))
(let (($generated@@182  (=> (forall (($generated@@183 Int) ($generated@@184 Int) ($generated@@185 Int) ($generated@@186 Int) ($generated@@187 Int) ($generated@@188 Int) ) (!  (=> (not ($generated@@7 ($generated@@19 $generated@@3 ($generated@@6 true)))) (and ($generated@@95 $generated@@183 $generated@@186) (=> (not ($generated@@94 $generated@@183 $generated@@186)) (and ($generated@@98 $generated@@183 $generated@@184 $generated@@185) (=> (not ($generated@@99 $generated@@183 $generated@@184 $generated@@185)) (and ($generated@@96 $generated@@184 $generated@@187) (=> (not ($generated@@93 $generated@@184 $generated@@187)) ($generated@@97 $generated@@185 $generated@@188))))))))
 :pattern ( ($generated@@92 $generated@@185 $generated@@188) ($generated@@93 $generated@@184 $generated@@187) ($generated@@94 $generated@@183 $generated@@186))
)) (and (=> (= (ControlFlow 0 27) (- 0 28)) (forall (($generated@@189 Int) ($generated@@190 Int) ($generated@@191 Int) ($generated@@192 Int) ($generated@@193 Int) ($generated@@194 Int) ) (!  (or (or (or (or true ($generated@@94 $generated@@189 $generated@@192)) ($generated@@99 $generated@@189 $generated@@190 $generated@@191)) ($generated@@93 $generated@@190 $generated@@193)) ($generated@@92 $generated@@191 $generated@@194))
 :pattern ( ($generated@@92 $generated@@191 $generated@@194) ($generated@@93 $generated@@190 $generated@@193) ($generated@@94 $generated@@189 $generated@@192))
))) (=> (forall (($generated@@195 Int) ($generated@@196 Int) ($generated@@197 Int) ($generated@@198 Int) ($generated@@199 Int) ($generated@@200 Int) ) (!  (or (or (or (or true ($generated@@94 $generated@@195 $generated@@198)) ($generated@@99 $generated@@195 $generated@@196 $generated@@197)) ($generated@@93 $generated@@196 $generated@@199)) ($generated@@92 $generated@@197 $generated@@200))
 :pattern ( ($generated@@92 $generated@@197 $generated@@200) ($generated@@93 $generated@@196 $generated@@199) ($generated@@94 $generated@@195 $generated@@198))
)) (and (=> (= (ControlFlow 0 27) 26) $generated@@180) (=> (= (ControlFlow 0 27) 3) $generated@@181)))))))
(let (($generated@@201  (=> (and (or (or (or true ($generated@@94 $generated@@113 $generated@@114)) ($generated@@99 $generated@@113 $generated@@115 $generated@@116)) ($generated@@93 $generated@@115 $generated@@117)) (= (ControlFlow 0 30) 27)) $generated@@182)))
(let (($generated@@202  (=> (not (or (or (or true ($generated@@94 $generated@@113 $generated@@114)) ($generated@@99 $generated@@113 $generated@@115 $generated@@116)) ($generated@@93 $generated@@115 $generated@@117))) (=> (and (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@116) $generated $generated@@106) ($generated@@89 $generated@@4 ($generated@@8 $generated@@118) $generated $generated@@106)) (and ($generated@@97 $generated@@116 $generated@@118) (= (ControlFlow 0 29) 27))) $generated@@182))))
(let (($generated@@203  (=> (or (or true ($generated@@94 $generated@@113 $generated@@114)) ($generated@@99 $generated@@113 $generated@@115 $generated@@116)) (and (=> (= (ControlFlow 0 32) 29) $generated@@202) (=> (= (ControlFlow 0 32) 30) $generated@@201)))))
(let (($generated@@204  (=> (and (and (not (or (or true ($generated@@94 $generated@@113 $generated@@114)) ($generated@@99 $generated@@113 $generated@@115 $generated@@116))) ($generated@@89 $generated@@4 ($generated@@8 $generated@@115) $generated $generated@@106)) (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@117) $generated $generated@@106) ($generated@@96 $generated@@115 $generated@@117))) (and (=> (= (ControlFlow 0 31) 29) $generated@@202) (=> (= (ControlFlow 0 31) 30) $generated@@201)))))
(let (($generated@@205  (=> (or true ($generated@@94 $generated@@113 $generated@@114)) (and (=> (= (ControlFlow 0 34) 31) $generated@@204) (=> (= (ControlFlow 0 34) 32) $generated@@203)))))
(let (($generated@@206  (=> (not (or true ($generated@@94 $generated@@113 $generated@@114))) (=> (and (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@113) $generated $generated@@106) ($generated@@89 $generated@@4 ($generated@@8 $generated@@115) $generated $generated@@106)) (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@116) $generated $generated@@106) ($generated@@98 $generated@@113 $generated@@115 $generated@@116))) (and (=> (= (ControlFlow 0 33) 31) $generated@@204) (=> (= (ControlFlow 0 33) 32) $generated@@203))))))
(let (($generated@@207  (=> ($generated@@7 ($generated@@19 $generated@@3 ($generated@@6 true))) (and (=> (= (ControlFlow 0 36) 33) $generated@@206) (=> (= (ControlFlow 0 36) 34) $generated@@205)))))
(let (($generated@@208  (=> (and (and (not ($generated@@7 ($generated@@19 $generated@@3 ($generated@@6 true)))) ($generated@@89 $generated@@4 ($generated@@8 $generated@@113) $generated $generated@@106)) (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@114) $generated $generated@@106) ($generated@@95 $generated@@113 $generated@@114))) (and (=> (= (ControlFlow 0 35) 33) $generated@@206) (=> (= (ControlFlow 0 35) 34) $generated@@205)))))
(let (($generated@@209  (and (=> (= (ControlFlow 0 37) 35) $generated@@208) (=> (= (ControlFlow 0 37) 36) $generated@@207))))
(let (($generated@@210 true))
(let (($generated@@211  (=> (forall (($generated@@212 Int) ($generated@@213 Int) ($generated@@214 Int) ($generated@@215 Int) ($generated@@216 Int) ($generated@@217 Int) ) (!  (=> (not ($generated@@7 ($generated@@19 $generated@@3 ($generated@@6 true)))) (and ($generated@@98 $generated@@212 $generated@@213 $generated@@214) (=> (not ($generated@@99 $generated@@212 $generated@@213 $generated@@214)) (and ($generated@@95 $generated@@212 $generated@@215) (=> (not ($generated@@94 $generated@@212 $generated@@215)) (and ($generated@@96 $generated@@213 $generated@@216) (=> (not ($generated@@93 $generated@@213 $generated@@216)) ($generated@@97 $generated@@214 $generated@@217))))))))
 :pattern ( ($generated@@92 $generated@@214 $generated@@217) ($generated@@93 $generated@@213 $generated@@216) ($generated@@94 $generated@@212 $generated@@215))
)) (and (=> (= (ControlFlow 0 38) (- 0 39)) (forall (($generated@@218 Int) ($generated@@219 Int) ($generated@@220 Int) ($generated@@221 Int) ($generated@@222 Int) ($generated@@223 Int) ) (!  (or (or (or (or true ($generated@@99 $generated@@218 $generated@@219 $generated@@220)) ($generated@@94 $generated@@218 $generated@@221)) ($generated@@93 $generated@@219 $generated@@222)) ($generated@@92 $generated@@220 $generated@@223))
 :pattern ( ($generated@@92 $generated@@220 $generated@@223) ($generated@@93 $generated@@219 $generated@@222) ($generated@@94 $generated@@218 $generated@@221))
))) (=> (forall (($generated@@224 Int) ($generated@@225 Int) ($generated@@226 Int) ($generated@@227 Int) ($generated@@228 Int) ($generated@@229 Int) ) (!  (or (or (or (or true ($generated@@99 $generated@@224 $generated@@225 $generated@@226)) ($generated@@94 $generated@@224 $generated@@227)) ($generated@@93 $generated@@225 $generated@@228)) ($generated@@92 $generated@@226 $generated@@229))
 :pattern ( ($generated@@92 $generated@@226 $generated@@229) ($generated@@93 $generated@@225 $generated@@228) ($generated@@94 $generated@@224 $generated@@227))
)) (and (=> (= (ControlFlow 0 38) 37) $generated@@209) (=> (= (ControlFlow 0 38) 2) $generated@@210)))))))
(let (($generated@@230  (=> (and (or (or (or true ($generated@@99 $generated@@119 $generated@@120 $generated@@121)) ($generated@@94 $generated@@119 $generated@@122)) ($generated@@93 $generated@@120 $generated@@123)) (= (ControlFlow 0 41) 38)) $generated@@211)))
(let (($generated@@231  (=> (not (or (or (or true ($generated@@99 $generated@@119 $generated@@120 $generated@@121)) ($generated@@94 $generated@@119 $generated@@122)) ($generated@@93 $generated@@120 $generated@@123))) (=> (and (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@121) $generated $generated@@106) ($generated@@89 $generated@@4 ($generated@@8 $generated@@124) $generated $generated@@106)) (and ($generated@@97 $generated@@121 $generated@@124) (= (ControlFlow 0 40) 38))) $generated@@211))))
(let (($generated@@232  (=> (or (or true ($generated@@99 $generated@@119 $generated@@120 $generated@@121)) ($generated@@94 $generated@@119 $generated@@122)) (and (=> (= (ControlFlow 0 43) 40) $generated@@231) (=> (= (ControlFlow 0 43) 41) $generated@@230)))))
(let (($generated@@233  (=> (and (and (not (or (or true ($generated@@99 $generated@@119 $generated@@120 $generated@@121)) ($generated@@94 $generated@@119 $generated@@122))) ($generated@@89 $generated@@4 ($generated@@8 $generated@@120) $generated $generated@@106)) (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@123) $generated $generated@@106) ($generated@@96 $generated@@120 $generated@@123))) (and (=> (= (ControlFlow 0 42) 40) $generated@@231) (=> (= (ControlFlow 0 42) 41) $generated@@230)))))
(let (($generated@@234  (=> (or true ($generated@@99 $generated@@119 $generated@@120 $generated@@121)) (and (=> (= (ControlFlow 0 45) 42) $generated@@233) (=> (= (ControlFlow 0 45) 43) $generated@@232)))))
(let (($generated@@235  (=> (and (and (not (or true ($generated@@99 $generated@@119 $generated@@120 $generated@@121))) ($generated@@89 $generated@@4 ($generated@@8 $generated@@119) $generated $generated@@106)) (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@122) $generated $generated@@106) ($generated@@95 $generated@@119 $generated@@122))) (and (=> (= (ControlFlow 0 44) 42) $generated@@233) (=> (= (ControlFlow 0 44) 43) $generated@@232)))))
(let (($generated@@236  (=> ($generated@@7 ($generated@@19 $generated@@3 ($generated@@6 true))) (and (=> (= (ControlFlow 0 47) 44) $generated@@235) (=> (= (ControlFlow 0 47) 45) $generated@@234)))))
(let (($generated@@237  (=> (not ($generated@@7 ($generated@@19 $generated@@3 ($generated@@6 true)))) (=> (and (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@119) $generated $generated@@106) ($generated@@89 $generated@@4 ($generated@@8 $generated@@120) $generated $generated@@106)) (and ($generated@@89 $generated@@4 ($generated@@8 $generated@@121) $generated $generated@@106) ($generated@@98 $generated@@119 $generated@@120 $generated@@121))) (and (=> (= (ControlFlow 0 46) 44) $generated@@235) (=> (= (ControlFlow 0 46) 45) $generated@@234))))))
(let (($generated@@238  (and (=> (= (ControlFlow 0 48) 46) $generated@@237) (=> (= (ControlFlow 0 48) 47) $generated@@236))))
(let (($generated@@239 true))
(let (($generated@@240  (=> (= $generated@@125 ($generated@@31 $generated@@126 $generated@@106 $generated@@1 false)) (and (=> (= (ControlFlow 0 49) 48) $generated@@238) (=> (= (ControlFlow 0 49) 1) $generated@@239)))))
(let (($generated@@241  (=> (and (and ($generated@@127 $generated@@106) ($generated@@128 $generated@@106)) (and (= 1 $generated@@129) (= (ControlFlow 0 50) 49))) $generated@@240)))
$generated@@241)))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
