(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U Int) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@91 (T@U) Int)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@97 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@T T@T) T@T)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@103 (T@T) T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@29) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (and (<= 0 $generated@@31) (< $generated@@31 ($generated@@26 $generated@@30))) (< ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@30 $generated@@31))) ($generated@@27 ($generated@@25 $generated@@30))))
 :pattern ( ($generated@@24 $generated@@30 $generated@@31) ($generated@@25 $generated@@30))
)))
(assert (= ($generated@@26 $generated@@32) 0))
(assert (= ($generated@@33 $generated@@34) $generated@@4))
(assert ($generated@@35 $generated@@29 $generated@@34 $generated@@36))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert (= ($generated@@7 $generated@@40) 4))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (and ($generated@@35 $generated@@40 $generated@@44 ($generated@@42 $generated@@46)) ($generated@@43 $generated@@45 $generated@@46)) ($generated@@35 $generated@@40 ($generated@@41 $generated@@44 $generated@@45) ($generated@@42 $generated@@46)))
 :pattern ( ($generated@@35 $generated@@40 ($generated@@41 $generated@@44 $generated@@45) ($generated@@42 $generated@@46)))
)))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@47 $generated@@48) (= ($generated@@33 $generated@@48) $generated@@4))
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@49 $generated@@50) (= ($generated@@33 $generated@@50) $generated@@5))
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 ($generated@@28 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@28 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (!  (=> ($generated@@47 $generated@@54) (= $generated@@54 $generated@@34))
 :pattern ( ($generated@@47 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ) (!  (=> ($generated@@49 $generated@@55) (exists (($generated@@56 T@U) ) (= $generated@@55 ($generated@@25 $generated@@56))))
 :pattern ( ($generated@@49 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@26 ($generated@@41 $generated@@57 $generated@@58)) (+ 1 ($generated@@26 $generated@@57)))
 :pattern ( ($generated@@41 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@59 ($generated@@51 $generated@@64 $generated@@61) $generated@@62 $generated@@63) ($generated@@60 $generated@@64 $generated@@61 $generated@@62 $generated@@63))
 :pattern ( ($generated@@59 ($generated@@51 $generated@@64 $generated@@61) $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@43 $generated@@65 $generated@@36) (and (= ($generated@@51 $generated@@29 ($generated@@28 $generated@@29 $generated@@65)) $generated@@65) ($generated@@35 $generated@@29 ($generated@@28 $generated@@29 $generated@@65) $generated@@36)))
 :pattern ( ($generated@@43 $generated@@65 $generated@@36))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 Int) ($generated@@68 T@U) ) (!  (and (=> (= $generated@@67 ($generated@@26 $generated@@66)) (= ($generated@@24 ($generated@@41 $generated@@66 $generated@@68) $generated@@67) $generated@@68)) (=> (or (not (= $generated@@67 ($generated@@26 $generated@@66))) (not true)) (= ($generated@@24 ($generated@@41 $generated@@66 $generated@@68) $generated@@67) ($generated@@24 $generated@@66 $generated@@67))))
 :pattern ( ($generated@@24 ($generated@@41 $generated@@66 $generated@@68) $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@35 $generated@@29 $generated@@69 $generated@@36) (or ($generated@@47 $generated@@69) ($generated@@49 $generated@@69)))
 :pattern ( ($generated@@49 $generated@@69) ($generated@@35 $generated@@29 $generated@@69 $generated@@36))
 :pattern ( ($generated@@47 $generated@@69) ($generated@@35 $generated@@29 $generated@@69 $generated@@36))
)))
(assert (= ($generated@@7 $generated@@70) 5))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@43 $generated@@71 $generated) (and (= ($generated@@51 $generated@@70 ($generated@@28 $generated@@70 $generated@@71)) $generated@@71) ($generated@@35 $generated@@70 ($generated@@28 $generated@@70 $generated@@71) $generated)))
 :pattern ( ($generated@@43 $generated@@71 $generated))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@43 ($generated@@51 $generated@@74 $generated@@72) $generated@@73) ($generated@@35 $generated@@74 $generated@@72 $generated@@73))
 :pattern ( ($generated@@43 ($generated@@51 $generated@@74 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (<= 0 ($generated@@26 $generated@@75))
 :pattern ( ($generated@@26 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@60 $generated@@40 $generated@@76 ($generated@@42 $generated@@77) $generated@@78) (forall (($generated@@79 Int) ) (!  (=> (and (<= 0 $generated@@79) (< $generated@@79 ($generated@@26 $generated@@76))) ($generated@@59 ($generated@@24 $generated@@76 $generated@@79) $generated@@77 $generated@@78))
 :pattern ( ($generated@@24 $generated@@76 $generated@@79))
)))
 :pattern ( ($generated@@60 $generated@@40 $generated@@76 ($generated@@42 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@80 ($generated@@42 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@42 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@23 ($generated@@42 $generated@@82)) $generated@@1)
 :pattern ( ($generated@@42 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@33 ($generated@@25 $generated@@83)) $generated@@5)
 :pattern ( ($generated@@25 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 ($generated@@25 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@25 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@28 $generated@@87 ($generated@@51 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@51 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@90 Int) ) (!  (=> (or (and (<= 0 $generated@@90) (< $generated@@90 55296)) (and (<= 57344 $generated@@90) (< $generated@@90 1114112))) (= ($generated@@89 ($generated@@88 $generated@@90)) $generated@@90))
 :pattern ( ($generated@@88 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (! (< ($generated@@91 $generated@@92) ($generated@@27 ($generated@@25 $generated@@92)))
 :pattern ( ($generated@@25 $generated@@92))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@93 $generated@@104 $generated@@105 $generated@@106 ($generated@@100 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@109 $generated@@110) $generated@@107)
 :weight 0
)) (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@116 $generated@@118) (= ($generated@@93 $generated@@111 $generated@@112 $generated@@113 ($generated@@100 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@93 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@93 $generated@@120 $generated@@121 $generated@@122 ($generated@@100 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@93 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)))) (= ($generated@@7 $generated@@94) 6)) (= ($generated@@7 $generated@@95) 7)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@97 $generated@@129 $generated@@130 ($generated@@101 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@131) $generated@@133) $generated@@131)
 :weight 0
))) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@97 $generated@@134 $generated@@135 ($generated@@101 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@97 $generated@@134 $generated@@135 $generated@@137 $generated@@139)))
 :weight 0
))) (= ($generated@@7 $generated@@98) 8)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (= ($generated@@7 ($generated@@99 $generated@@140 $generated@@141)) 9))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@102 ($generated@@99 $generated@@142 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@99 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@103 ($generated@@99 $generated@@144 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@99 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@12 ($generated@@93 $generated@@94 $generated@@95 $generated@@8 ($generated@@96 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))  (=> (and (or (not (= $generated@@150 $generated@@146)) (not true)) ($generated@@12 ($generated@@28 $generated@@8 ($generated@@97 $generated@@95 $generated@@98 ($generated@@97 $generated@@94 ($generated@@99 $generated@@95 $generated@@98) $generated@@147 $generated@@150) $generated@@148)))) $generated@@149))
 :pattern ( ($generated@@93 $generated@@94 $generated@@95 $generated@@8 ($generated@@96 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (and (= ($generated@@152 ($generated@@41 $generated@@154 $generated@@155)) $generated@@154) (= ($generated@@153 ($generated@@41 $generated@@154 $generated@@155)) $generated@@155))
 :pattern ( ($generated@@41 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@43 $generated@@156 ($generated@@42 $generated@@157)) (and (= ($generated@@51 $generated@@40 ($generated@@28 $generated@@40 $generated@@156)) $generated@@156) ($generated@@35 $generated@@40 ($generated@@28 $generated@@40 $generated@@156) ($generated@@42 $generated@@157))))
 :pattern ( ($generated@@43 $generated@@156 ($generated@@42 $generated@@157)))
)))
(assert (forall (($generated@@158 T@U) ) (!  (and (= ($generated@@88 ($generated@@89 $generated@@158)) $generated@@158) (or (and (<= 0 ($generated@@89 $generated@@158)) (< ($generated@@89 $generated@@158) 55296)) (and (<= 57344 ($generated@@89 $generated@@158)) (< ($generated@@89 $generated@@158) 1114112))))
 :pattern ( ($generated@@89 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and ($generated@@159 $generated@@161) ($generated@@35 $generated@@29 $generated@@160 $generated@@36)) ($generated@@60 $generated@@29 $generated@@160 $generated@@36 $generated@@161))
 :pattern ( ($generated@@60 $generated@@29 $generated@@160 $generated@@36 $generated@@161))
)))
(assert (= ($generated@@23 $generated@@36) $generated@@3))
(assert (= ($generated@@162 $generated@@36) $generated@@6))
(assert (= $generated@@34 ($generated@@37 $generated@@29 $generated@@34)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@35 $generated@@29 ($generated@@25 $generated@@163) $generated@@36) ($generated@@35 $generated@@40 $generated@@163 ($generated@@42 $generated)))
 :pattern ( ($generated@@35 $generated@@29 ($generated@@25 $generated@@163) $generated@@36))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@159 $generated@@165) (and ($generated@@49 $generated@@164) ($generated@@60 $generated@@29 $generated@@164 $generated@@36 $generated@@165))) ($generated@@60 $generated@@40 ($generated@@84 $generated@@164) ($generated@@42 $generated) $generated@@165))
 :pattern ( ($generated@@60 $generated@@40 ($generated@@84 $generated@@164) ($generated@@42 $generated) $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (! (= ($generated@@25 ($generated@@37 $generated@@40 $generated@@166)) ($generated@@37 $generated@@29 ($generated@@25 $generated@@166)))
 :pattern ( ($generated@@25 ($generated@@37 $generated@@40 $generated@@166)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@51 $generated@@168 ($generated@@37 $generated@@168 $generated@@167)) ($generated@@37 $generated@@98 ($generated@@51 $generated@@168 $generated@@167)))
 :pattern ( ($generated@@51 $generated@@168 ($generated@@37 $generated@@168 $generated@@167)))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= ($generated@@26 $generated@@169) 0) (= $generated@@169 $generated@@32))
 :pattern ( ($generated@@26 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! ($generated@@60 $generated@@70 $generated@@171 $generated $generated@@170)
 :pattern ( ($generated@@60 $generated@@70 $generated@@171 $generated $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@35 $generated@@40 $generated@@172 ($generated@@42 $generated@@173)) (forall (($generated@@174 Int) ) (!  (=> (and (<= 0 $generated@@174) (< $generated@@174 ($generated@@26 $generated@@172))) ($generated@@43 ($generated@@24 $generated@@172 $generated@@174) $generated@@173))
 :pattern ( ($generated@@24 $generated@@172 $generated@@174))
)))
 :pattern ( ($generated@@35 $generated@@40 $generated@@172 ($generated@@42 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ) (!  (=> (and (<= 0 $generated@@176) (< $generated@@176 ($generated@@26 $generated@@175))) (< ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@175 $generated@@176))) ($generated@@91 $generated@@175)))
 :pattern ( ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@175 $generated@@176))))
)))
(assert (forall (($generated@@177 T@U) ) (! ($generated@@35 $generated@@70 $generated@@177 $generated)
 :pattern ( ($generated@@35 $generated@@70 $generated@@177 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Bool)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@188  (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@47 $generated@@178) $generated@@179))))
(let (($generated@@189  (=> (and (and (not $generated@@179) (= $generated@@180 ($generated@@37 $generated@@29 ($generated@@25 ($generated@@37 $generated@@40 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 ($generated@@41 $generated@@32 ($generated@@51 $generated@@70 ($generated@@88 114))) ($generated@@51 $generated@@70 ($generated@@88 101))) ($generated@@51 $generated@@70 ($generated@@88 113))) ($generated@@51 $generated@@70 ($generated@@88 117))) ($generated@@51 $generated@@70 ($generated@@88 105))) ($generated@@51 $generated@@70 ($generated@@88 114))) ($generated@@51 $generated@@70 ($generated@@88 101))) ($generated@@51 $generated@@70 ($generated@@88 109))) ($generated@@51 $generated@@70 ($generated@@88 101))) ($generated@@51 $generated@@70 ($generated@@88 110))) ($generated@@51 $generated@@70 ($generated@@88 116))) ($generated@@51 $generated@@70 ($generated@@88 32))) ($generated@@51 $generated@@70 ($generated@@88 102))) ($generated@@51 $generated@@70 ($generated@@88 97))) ($generated@@51 $generated@@70 ($generated@@88 105))) ($generated@@51 $generated@@70 ($generated@@88 108))) ($generated@@51 $generated@@70 ($generated@@88 101))) ($generated@@51 $generated@@70 ($generated@@88 100)))))))) (and (= $generated@@178 $generated@@180) (= (ControlFlow 0 4) 2))) $generated@@188)))
(let (($generated@@190  (=> (and (and $generated@@179 (= $generated@@181 ($generated@@37 $generated@@29 $generated@@34))) (and (= $generated@@178 $generated@@181) (= (ControlFlow 0 3) 2))) $generated@@188)))
(let (($generated@@191  (=> (= $generated@@182 ($generated@@96 $generated@@183 $generated@@184 $generated@@2 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@190) (=> (= (ControlFlow 0 5) 4) $generated@@189)))))
(let (($generated@@192  (=> (and ($generated@@159 $generated@@184) ($generated@@185 $generated@@184)) (=> (and (and ($generated@@35 $generated@@29 $generated@@186 $generated@@36) ($generated@@60 $generated@@29 $generated@@186 $generated@@36 $generated@@184)) (and (= 1 $generated@@187) (= (ControlFlow 0 6) 5))) $generated@@191))))
$generated@@192))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
