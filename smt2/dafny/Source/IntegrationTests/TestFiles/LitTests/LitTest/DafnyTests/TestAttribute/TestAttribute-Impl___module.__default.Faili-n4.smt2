(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@U Int) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (Int) Int)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () Int)
(declare-fun $generated@@49 (Int Int) T@U)
(declare-fun $generated@@50 (Int Int) Bool)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (Int) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (Int Int) Int)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@123 (T@U) Int)
(declare-fun $generated@@125 (T@U) Int)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 (T@T T@T) T@T)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@196 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (= ($generated@@9 $generated@@35) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 Int) ) (!  (=> (and (<= 0 $generated@@37) (< $generated@@37 ($generated@@32 $generated@@36))) (< ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@36 $generated@@37))) ($generated@@33 ($generated@@31 $generated@@36))))
 :pattern ( ($generated@@30 $generated@@36 $generated@@37) ($generated@@31 $generated@@36))
)))
(assert (forall (($generated@@46 T@U) ) (!  (=> (or ($generated@@40 ($generated@@39 $generated@@35 $generated@@46)) (and ($generated@@41 $generated@@35 $generated@@46 $generated@@42) (not ($generated@@14 ($generated@@39 $generated@@10 ($generated@@13 ($generated@@43 ($generated@@39 $generated@@35 $generated@@46)))))))) (= ($generated@@38 ($generated@@39 $generated@@35 $generated@@46)) ($generated@@44 ($generated@@45 ($generated@@39 $generated@@35 $generated@@46)))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@35 $generated@@46)))
)))
(assert (= ($generated@@32 $generated@@47) 0))
(assert  (=> (<= 1 $generated@@48) (forall (($generated@@51 Int) ($generated@@52 Int) ) (!  (=> (or ($generated@@50 $generated@@51 $generated@@52) (and (< 1 $generated@@48) (and (<= ($generated@@44 0) $generated@@51) (<= ($generated@@44 0) $generated@@52)))) ($generated@@41 $generated@@35 ($generated@@49 $generated@@51 $generated@@52) $generated@@42))
 :pattern ( ($generated@@49 $generated@@51 $generated@@52))
))))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@44 $generated@@53) $generated@@53)
 :pattern ( ($generated@@44 $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@39 $generated@@55 $generated@@54) $generated@@54)
 :pattern ( ($generated@@39 $generated@@55 $generated@@54))
)))
(assert (= ($generated@@9 $generated@@56) 4))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@41 $generated@@56 $generated@@60 ($generated@@58 $generated@@62)) ($generated@@59 $generated@@61 $generated@@62)) ($generated@@41 $generated@@56 ($generated@@57 $generated@@60 $generated@@61) ($generated@@58 $generated@@62)))
 :pattern ( ($generated@@41 $generated@@56 ($generated@@57 $generated@@60 $generated@@61) ($generated@@58 $generated@@62)))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> (or ($generated@@63 ($generated@@39 $generated@@35 $generated@@65)) ($generated@@41 $generated@@35 $generated@@65 $generated@@42)) (= ($generated@@43 ($generated@@39 $generated@@35 $generated@@65)) ($generated@@14 ($generated@@39 $generated@@10 ($generated@@13 ($generated@@64 ($generated@@39 $generated@@35 $generated@@65)))))))
 :weight 3
 :pattern ( ($generated@@43 ($generated@@39 $generated@@35 $generated@@65)))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@66 $generated@@68) (= ($generated@@67 $generated@@68) $generated@@5))
 :pattern ( ($generated@@66 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@64 $generated@@69) (= ($generated@@67 $generated@@69) $generated@@6))
 :pattern ( ($generated@@64 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@34 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@34 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@66 $generated@@74) (exists (($generated@@75 Int) ) (= $generated@@74 ($generated@@73 $generated@@75))))
 :pattern ( ($generated@@66 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@64 $generated@@76) (exists (($generated@@77 T@U) ) (= $generated@@76 ($generated@@31 $generated@@77))))
 :pattern ( ($generated@@64 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@41 $generated@@11 $generated@@78 $generated@@27) (<= ($generated@@44 0) ($generated@@16 $generated@@78)))
 :pattern ( ($generated@@41 $generated@@11 $generated@@78 $generated@@27))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@32 ($generated@@57 $generated@@79 $generated@@80)) (+ 1 ($generated@@32 $generated@@79)))
 :pattern ( ($generated@@57 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@81 ($generated@@70 $generated@@85 $generated@@82) $generated@@83 $generated@@84) ($generated@@26 $generated@@85 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@81 ($generated@@70 $generated@@85 $generated@@82) $generated@@83 $generated@@84))
)))
(assert (= ($generated@@9 $generated@@86) 5))
(assert  (=> (<= 1 $generated@@48) (forall (($generated@@89 Int) ($generated@@90 Int) ) (!  (=> (or ($generated@@50 $generated@@89 $generated@@90) (and (< 1 $generated@@48) (and (<= ($generated@@44 0) $generated@@89) (<= ($generated@@44 0) $generated@@90)))) (= ($generated@@49 $generated@@89 $generated@@90) (ite (= $generated@@90 ($generated@@44 0)) ($generated@@31 ($generated@@39 $generated@@56 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 $generated@@47 ($generated@@70 $generated@@86 ($generated@@87 68))) ($generated@@70 $generated@@86 ($generated@@87 105))) ($generated@@70 $generated@@86 ($generated@@87 118))) ($generated@@70 $generated@@86 ($generated@@87 105))) ($generated@@70 $generated@@86 ($generated@@87 100))) ($generated@@70 $generated@@86 ($generated@@87 101))) ($generated@@70 $generated@@86 ($generated@@87 32))) ($generated@@70 $generated@@86 ($generated@@87 98))) ($generated@@70 $generated@@86 ($generated@@87 121))) ($generated@@70 $generated@@86 ($generated@@87 32))) ($generated@@70 $generated@@86 ($generated@@87 122))) ($generated@@70 $generated@@86 ($generated@@87 101))) ($generated@@70 $generated@@86 ($generated@@87 114))) ($generated@@70 $generated@@86 ($generated@@87 111))))) ($generated@@73 ($generated@@88 $generated@@89 $generated@@90)))))
 :pattern ( ($generated@@49 $generated@@89 $generated@@90))
))))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@59 $generated@@91 $generated@@27) (and (= ($generated@@70 $generated@@11 ($generated@@34 $generated@@11 $generated@@91)) $generated@@91) ($generated@@41 $generated@@11 ($generated@@34 $generated@@11 $generated@@91) $generated@@27)))
 :pattern ( ($generated@@59 $generated@@91 $generated@@27))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@59 $generated@@92 $generated@@42) (and (= ($generated@@70 $generated@@35 ($generated@@34 $generated@@35 $generated@@92)) $generated@@92) ($generated@@41 $generated@@35 ($generated@@34 $generated@@35 $generated@@92) $generated@@42)))
 :pattern ( ($generated@@59 $generated@@92 $generated@@42))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@41 $generated@@35 ($generated@@73 $generated@@93) $generated@@42) ($generated@@41 $generated@@11 ($generated@@15 $generated@@93) $generated@@27))
 :pattern ( ($generated@@41 $generated@@35 ($generated@@73 $generated@@93) $generated@@42))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 Int) ($generated@@96 T@U) ) (!  (and (=> (= $generated@@95 ($generated@@32 $generated@@94)) (= ($generated@@30 ($generated@@57 $generated@@94 $generated@@96) $generated@@95) $generated@@96)) (=> (or (not (= $generated@@95 ($generated@@32 $generated@@94))) (not true)) (= ($generated@@30 ($generated@@57 $generated@@94 $generated@@96) $generated@@95) ($generated@@30 $generated@@94 $generated@@95))))
 :pattern ( ($generated@@30 ($generated@@57 $generated@@94 $generated@@96) $generated@@95))
)))
(assert (forall (($generated@@97 Int) ($generated@@98 Int) ) (! (= ($generated@@88 $generated@@97 $generated@@98) (div $generated@@97 $generated@@98))
 :pattern ( ($generated@@88 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@41 $generated@@35 $generated@@99 $generated@@42) (or ($generated@@66 $generated@@99) ($generated@@64 $generated@@99)))
 :pattern ( ($generated@@64 $generated@@99) ($generated@@41 $generated@@35 $generated@@99 $generated@@42))
 :pattern ( ($generated@@66 $generated@@99) ($generated@@41 $generated@@35 $generated@@99 $generated@@42))
)))
(assert  (=> (<= 1 $generated@@48) (forall (($generated@@100 Int) ($generated@@101 Int) ) (!  (=> (or ($generated@@50 ($generated@@44 $generated@@100) ($generated@@44 $generated@@101)) (and (< 1 $generated@@48) (and (<= ($generated@@44 0) $generated@@100) (<= ($generated@@44 0) $generated@@101)))) (= ($generated@@49 ($generated@@44 $generated@@100) ($generated@@44 $generated@@101)) (ite (= ($generated@@44 $generated@@101) ($generated@@44 0)) ($generated@@31 ($generated@@39 $generated@@56 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 ($generated@@57 $generated@@47 ($generated@@70 $generated@@86 ($generated@@87 68))) ($generated@@70 $generated@@86 ($generated@@87 105))) ($generated@@70 $generated@@86 ($generated@@87 118))) ($generated@@70 $generated@@86 ($generated@@87 105))) ($generated@@70 $generated@@86 ($generated@@87 100))) ($generated@@70 $generated@@86 ($generated@@87 101))) ($generated@@70 $generated@@86 ($generated@@87 32))) ($generated@@70 $generated@@86 ($generated@@87 98))) ($generated@@70 $generated@@86 ($generated@@87 121))) ($generated@@70 $generated@@86 ($generated@@87 32))) ($generated@@70 $generated@@86 ($generated@@87 122))) ($generated@@70 $generated@@86 ($generated@@87 101))) ($generated@@70 $generated@@86 ($generated@@87 114))) ($generated@@70 $generated@@86 ($generated@@87 111))))) ($generated@@73 ($generated@@44 ($generated@@88 $generated@@100 ($generated@@44 $generated@@101)))))))
 :weight 3
 :pattern ( ($generated@@49 ($generated@@44 $generated@@100) ($generated@@44 $generated@@101)))
))))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@59 $generated@@102 $generated) (and (= ($generated@@70 $generated@@86 ($generated@@34 $generated@@86 $generated@@102)) $generated@@102) ($generated@@41 $generated@@86 ($generated@@34 $generated@@86 $generated@@102) $generated)))
 :pattern ( ($generated@@59 $generated@@102 $generated))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> (or ($generated@@40 $generated@@103) (and ($generated@@41 $generated@@35 $generated@@103 $generated@@42) (not ($generated@@43 $generated@@103)))) (= ($generated@@38 $generated@@103) ($generated@@45 $generated@@103)))
 :pattern ( ($generated@@38 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> (or ($generated@@40 $generated@@104) (and ($generated@@41 $generated@@35 $generated@@104 $generated@@42) (not ($generated@@43 $generated@@104)))) (<= ($generated@@44 0) ($generated@@38 $generated@@104)))
 :pattern ( ($generated@@38 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@59 ($generated@@70 $generated@@107 $generated@@105) $generated@@106) ($generated@@41 $generated@@107 $generated@@105 $generated@@106))
 :pattern ( ($generated@@59 ($generated@@70 $generated@@107 $generated@@105) $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (! (<= 0 ($generated@@32 $generated@@108))
 :pattern ( ($generated@@32 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@26 $generated@@56 $generated@@109 ($generated@@58 $generated@@110) $generated@@111) (forall (($generated@@112 Int) ) (!  (=> (and (<= 0 $generated@@112) (< $generated@@112 ($generated@@32 $generated@@109))) ($generated@@81 ($generated@@30 $generated@@109 $generated@@112) $generated@@110 $generated@@111))
 :pattern ( ($generated@@30 $generated@@109 $generated@@112))
)))
 :pattern ( ($generated@@26 $generated@@56 $generated@@109 ($generated@@58 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 ($generated@@58 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@58 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@25 ($generated@@58 $generated@@115)) $generated@@1)
 :pattern ( ($generated@@58 $generated@@115))
)))
(assert (forall (($generated@@116 Int) ) (! (= ($generated@@67 ($generated@@73 $generated@@116)) $generated@@5)
 :pattern ( ($generated@@73 $generated@@116))
)))
(assert (forall (($generated@@117 Int) ) (! (= ($generated@@45 ($generated@@73 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@73 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@67 ($generated@@31 $generated@@118)) $generated@@6)
 :pattern ( ($generated@@31 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@31 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@31 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@34 $generated@@122 ($generated@@70 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@70 $generated@@122 $generated@@121))
)))
(assert (forall (($generated@@124 Int) ) (!  (=> (or (and (<= 0 $generated@@124) (< $generated@@124 55296)) (and (<= 57344 $generated@@124) (< $generated@@124 1114112))) (= ($generated@@123 ($generated@@87 $generated@@124)) $generated@@124))
 :pattern ( ($generated@@87 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (< ($generated@@125 $generated@@126) ($generated@@33 ($generated@@31 $generated@@126)))
 :pattern ( ($generated@@31 $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@127 $generated@@138 $generated@@139 $generated@@140 ($generated@@134 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@143 $generated@@144) $generated@@141)
 :weight 0
)) (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@127 $generated@@145 $generated@@146 $generated@@147 ($generated@@134 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@127 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@127 $generated@@154 $generated@@155 $generated@@156 ($generated@@134 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)))) (= ($generated@@9 $generated@@128) 6)) (= ($generated@@9 $generated@@129) 7)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@131 $generated@@163 $generated@@164 ($generated@@135 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@165) $generated@@167) $generated@@165)
 :weight 0
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@172 $generated@@173) (= ($generated@@131 $generated@@168 $generated@@169 ($generated@@135 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@170) $generated@@173) ($generated@@131 $generated@@168 $generated@@169 $generated@@171 $generated@@173)))
 :weight 0
))) (= ($generated@@9 $generated@@132) 8)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@9 ($generated@@133 $generated@@174 $generated@@175)) 9))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@136 ($generated@@133 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@133 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@137 ($generated@@133 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@133 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@14 ($generated@@127 $generated@@128 $generated@@129 $generated@@10 ($generated@@130 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@14 ($generated@@34 $generated@@10 ($generated@@131 $generated@@129 $generated@@132 ($generated@@131 $generated@@128 ($generated@@133 $generated@@129 $generated@@132) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129 $generated@@10 ($generated@@130 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (and (= ($generated@@186 ($generated@@57 $generated@@188 $generated@@189)) $generated@@188) (= ($generated@@187 ($generated@@57 $generated@@188 $generated@@189)) $generated@@189))
 :pattern ( ($generated@@57 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@59 $generated@@190 ($generated@@58 $generated@@191)) (and (= ($generated@@70 $generated@@56 ($generated@@34 $generated@@56 $generated@@190)) $generated@@190) ($generated@@41 $generated@@56 ($generated@@34 $generated@@56 $generated@@190) ($generated@@58 $generated@@191))))
 :pattern ( ($generated@@59 $generated@@190 ($generated@@58 $generated@@191)))
)))
(assert (forall (($generated@@192 T@U) ) (!  (and (= ($generated@@87 ($generated@@123 $generated@@192)) $generated@@192) (or (and (<= 0 ($generated@@123 $generated@@192)) (< ($generated@@123 $generated@@192) 55296)) (and (<= 57344 ($generated@@123 $generated@@192)) (< ($generated@@123 $generated@@192) 1114112))))
 :pattern ( ($generated@@123 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and ($generated@@193 $generated@@195) ($generated@@41 $generated@@35 $generated@@194 $generated@@42)) ($generated@@26 $generated@@35 $generated@@194 $generated@@42 $generated@@195))
 :pattern ( ($generated@@26 $generated@@35 $generated@@194 $generated@@42 $generated@@195))
)))
(assert (= ($generated@@25 $generated@@27) $generated@@3))
(assert (= ($generated@@196 $generated@@27) $generated@@7))
(assert (= ($generated@@25 $generated@@42) $generated@@4))
(assert (= ($generated@@196 $generated@@42) $generated@@8))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@41 $generated@@35 ($generated@@31 $generated@@197) $generated@@42) ($generated@@41 $generated@@56 $generated@@197 ($generated@@58 $generated)))
 :pattern ( ($generated@@41 $generated@@35 ($generated@@31 $generated@@197) $generated@@42))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@193 $generated@@199) (and ($generated@@64 $generated@@198) ($generated@@26 $generated@@35 $generated@@198 $generated@@42 $generated@@199))) ($generated@@26 $generated@@56 ($generated@@119 $generated@@198) ($generated@@58 $generated) $generated@@199))
 :pattern ( ($generated@@26 $generated@@56 ($generated@@119 $generated@@198) ($generated@@58 $generated) $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@193 $generated@@201) (and ($generated@@66 $generated@@200) ($generated@@26 $generated@@35 $generated@@200 $generated@@42 $generated@@201))) ($generated@@26 $generated@@11 ($generated@@15 ($generated@@45 $generated@@200)) $generated@@27 $generated@@201))
 :pattern ( ($generated@@26 $generated@@11 ($generated@@15 ($generated@@45 $generated@@200)) $generated@@27 $generated@@201))
)))
(assert (forall (($generated@@202 Int) ) (! (= ($generated@@70 $generated@@11 ($generated@@15 ($generated@@44 $generated@@202))) ($generated@@39 $generated@@132 ($generated@@70 $generated@@11 ($generated@@15 $generated@@202))))
 :pattern ( ($generated@@70 $generated@@11 ($generated@@15 ($generated@@44 $generated@@202))))
)))
(assert (forall (($generated@@203 Int) ) (! (= ($generated@@73 ($generated@@44 $generated@@203)) ($generated@@39 $generated@@35 ($generated@@73 $generated@@203)))
 :pattern ( ($generated@@73 ($generated@@44 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ) (! (= ($generated@@31 ($generated@@39 $generated@@56 $generated@@204)) ($generated@@39 $generated@@35 ($generated@@31 $generated@@204)))
 :pattern ( ($generated@@31 ($generated@@39 $generated@@56 $generated@@204)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@T) ) (! (= ($generated@@70 $generated@@206 ($generated@@39 $generated@@206 $generated@@205)) ($generated@@39 $generated@@132 ($generated@@70 $generated@@206 $generated@@205)))
 :pattern ( ($generated@@70 $generated@@206 ($generated@@39 $generated@@206 $generated@@205)))
)))
(assert (forall (($generated@@207 T@U) ) (!  (=> (= ($generated@@32 $generated@@207) 0) (= $generated@@207 $generated@@47))
 :pattern ( ($generated@@32 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ) (!  (=> (or ($generated@@63 $generated@@208) ($generated@@41 $generated@@35 $generated@@208 $generated@@42)) (= ($generated@@43 $generated@@208) ($generated@@64 $generated@@208)))
 :pattern ( ($generated@@43 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! ($generated@@26 $generated@@86 $generated@@210 $generated $generated@@209)
 :pattern ( ($generated@@26 $generated@@86 $generated@@210 $generated $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@41 $generated@@56 $generated@@211 ($generated@@58 $generated@@212)) (forall (($generated@@213 Int) ) (!  (=> (and (<= 0 $generated@@213) (< $generated@@213 ($generated@@32 $generated@@211))) ($generated@@59 ($generated@@30 $generated@@211 $generated@@213) $generated@@212))
 :pattern ( ($generated@@30 $generated@@211 $generated@@213))
)))
 :pattern ( ($generated@@41 $generated@@56 $generated@@211 ($generated@@58 $generated@@212)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 Int) ) (!  (=> (and (<= 0 $generated@@215) (< $generated@@215 ($generated@@32 $generated@@214))) (< ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@214 $generated@@215))) ($generated@@125 $generated@@214)))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@214 $generated@@215))))
)))
(assert (forall (($generated@@216 T@U) ) (! ($generated@@41 $generated@@86 $generated@@216 $generated)
 :pattern ( ($generated@@41 $generated@@86 $generated@@216 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@227  (=> (not ($generated@@43 $generated@@217)) (=> (and ($generated@@81 ($generated@@70 $generated@@35 $generated@@217) $generated@@42 $generated@@218) (= (ControlFlow 0 3) (- 0 2))) (not ($generated@@43 $generated@@217))))))
(let (($generated@@228 true))
(let (($generated@@229  (=> (= $generated@@219 ($generated@@130 $generated@@220 $generated@@218 $generated@@2 false)) (=> (and (and (= $generated@@221 ($generated@@44 5)) (= $generated@@222 ($generated@@44 0))) (and ($generated@@41 $generated@@35 $generated@@223 $generated@@42) ($generated@@26 $generated@@35 $generated@@223 $generated@@42 $generated@@218))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@41 $generated@@11 ($generated@@15 $generated@@221) $generated@@27)) (=> ($generated@@41 $generated@@11 ($generated@@15 $generated@@221) $generated@@27) (=> ($generated@@26 $generated@@11 ($generated@@15 $generated@@221) $generated@@27 $generated@@218) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@41 $generated@@11 ($generated@@15 $generated@@222) $generated@@27)) (=> ($generated@@41 $generated@@11 ($generated@@15 $generated@@222) $generated@@27) (=> ($generated@@26 $generated@@11 ($generated@@15 $generated@@222) $generated@@27 $generated@@218) (=> (and ($generated@@50 $generated@@221 $generated@@222) ($generated@@50 $generated@@221 $generated@@222)) (=> (and (and (= $generated@@217 ($generated@@49 $generated@@221 $generated@@222)) ($generated@@81 ($generated@@70 $generated@@35 $generated@@217) $generated@@42 $generated@@218)) (and ($generated@@63 $generated@@217) ($generated@@63 $generated@@217))) (and (=> (= (ControlFlow 0 4) 1) $generated@@228) (=> (= (ControlFlow 0 4) 3) $generated@@227))))))))))))))
(let (($generated@@230  (=> (and (and ($generated@@193 $generated@@218) ($generated@@224 $generated@@218)) (and (<= ($generated@@44 0) $generated@@225) true)) (=> (and (and (and ($generated@@41 $generated@@35 $generated@@226 $generated@@42) ($generated@@26 $generated@@35 $generated@@226 $generated@@42 $generated@@218)) true) (and (= 2 $generated@@48) (= (ControlFlow 0 7) 4))) $generated@@229))))
$generated@@230)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
