(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U Int) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@36 (Int Int) T@U)
(declare-fun $generated@@37 (Int Int) Bool)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (Int) T@U)
(declare-fun $generated@@63 (Int) T@U)
(declare-fun $generated@@64 (Int Int) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U) Int)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@94 (T@U) Int)
(declare-fun $generated@@96 (T@U) Int)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@102 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@T T@T) T@T)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@9 $generated@@31) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 Int) ) (!  (=> (and (<= 0 $generated@@33) (< $generated@@33 ($generated@@28 $generated@@32))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@32 $generated@@33))) ($generated@@29 ($generated@@27 $generated@@32))))
 :pattern ( ($generated@@26 $generated@@32 $generated@@33) ($generated@@27 $generated@@32))
)))
(assert (= ($generated@@28 $generated@@34) 0))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@41 Int) ($generated@@42 Int) ) (!  (=> (or ($generated@@37 $generated@@41 $generated@@42) (and (< 1 $generated@@35) (and (<= ($generated@@38 0) $generated@@41) (<= ($generated@@38 0) $generated@@42)))) ($generated@@39 $generated@@31 ($generated@@36 $generated@@41 $generated@@42) $generated@@40))
 :pattern ( ($generated@@36 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@43 Int) ) (! (= ($generated@@38 $generated@@43) $generated@@43)
 :pattern ( ($generated@@38 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@46 $generated@@45))
)))
(assert (= ($generated@@9 $generated@@47) 4))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (and ($generated@@39 $generated@@47 $generated@@51 ($generated@@49 $generated@@53)) ($generated@@50 $generated@@52 $generated@@53)) ($generated@@39 $generated@@47 ($generated@@48 $generated@@51 $generated@@52) ($generated@@49 $generated@@53)))
 :pattern ( ($generated@@39 $generated@@47 ($generated@@48 $generated@@51 $generated@@52) ($generated@@49 $generated@@53)))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@30 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@30 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@39 $generated@@11 $generated@@58 $generated@@57) (<= ($generated@@38 0) ($generated@@16 $generated@@58)))
 :pattern ( ($generated@@39 $generated@@11 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@28 ($generated@@48 $generated@@59 $generated@@60)) (+ 1 ($generated@@28 $generated@@59)))
 :pattern ( ($generated@@48 $generated@@59 $generated@@60))
)))
(assert (= ($generated@@9 $generated@@61) 5))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@65 Int) ($generated@@66 Int) ) (!  (=> (or ($generated@@37 $generated@@65 $generated@@66) (and (< 1 $generated@@35) (and (<= ($generated@@38 0) $generated@@65) (<= ($generated@@38 0) $generated@@66)))) (= ($generated@@36 $generated@@65 $generated@@66) (ite (= $generated@@66 ($generated@@38 0)) ($generated@@27 ($generated@@44 $generated@@47 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 $generated@@34 ($generated@@54 $generated@@61 ($generated@@62 68))) ($generated@@54 $generated@@61 ($generated@@62 105))) ($generated@@54 $generated@@61 ($generated@@62 118))) ($generated@@54 $generated@@61 ($generated@@62 105))) ($generated@@54 $generated@@61 ($generated@@62 100))) ($generated@@54 $generated@@61 ($generated@@62 101))) ($generated@@54 $generated@@61 ($generated@@62 32))) ($generated@@54 $generated@@61 ($generated@@62 98))) ($generated@@54 $generated@@61 ($generated@@62 121))) ($generated@@54 $generated@@61 ($generated@@62 32))) ($generated@@54 $generated@@61 ($generated@@62 122))) ($generated@@54 $generated@@61 ($generated@@62 101))) ($generated@@54 $generated@@61 ($generated@@62 114))) ($generated@@54 $generated@@61 ($generated@@62 111))))) ($generated@@63 ($generated@@64 $generated@@65 $generated@@66)))))
 :pattern ( ($generated@@36 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@50 $generated@@67 $generated@@57) (and (= ($generated@@54 $generated@@11 ($generated@@30 $generated@@11 $generated@@67)) $generated@@67) ($generated@@39 $generated@@11 ($generated@@30 $generated@@11 $generated@@67) $generated@@57)))
 :pattern ( ($generated@@50 $generated@@67 $generated@@57))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@50 $generated@@68 $generated@@40) (and (= ($generated@@54 $generated@@31 ($generated@@30 $generated@@31 $generated@@68)) $generated@@68) ($generated@@39 $generated@@31 ($generated@@30 $generated@@31 $generated@@68) $generated@@40)))
 :pattern ( ($generated@@50 $generated@@68 $generated@@40))
)))
(assert (forall (($generated@@69 Int) ) (! (= ($generated@@39 $generated@@31 ($generated@@63 $generated@@69) $generated@@40) ($generated@@39 $generated@@11 ($generated@@15 $generated@@69) $generated@@57))
 :pattern ( ($generated@@39 $generated@@31 ($generated@@63 $generated@@69) $generated@@40))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 Int) ($generated@@72 T@U) ) (!  (and (=> (= $generated@@71 ($generated@@28 $generated@@70)) (= ($generated@@26 ($generated@@48 $generated@@70 $generated@@72) $generated@@71) $generated@@72)) (=> (or (not (= $generated@@71 ($generated@@28 $generated@@70))) (not true)) (= ($generated@@26 ($generated@@48 $generated@@70 $generated@@72) $generated@@71) ($generated@@26 $generated@@70 $generated@@71))))
 :pattern ( ($generated@@26 ($generated@@48 $generated@@70 $generated@@72) $generated@@71))
)))
(assert (forall (($generated@@73 Int) ($generated@@74 Int) ) (! (= ($generated@@64 $generated@@73 $generated@@74) (div $generated@@73 $generated@@74))
 :pattern ( ($generated@@64 $generated@@73 $generated@@74))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@75 Int) ($generated@@76 Int) ) (!  (=> (or ($generated@@37 ($generated@@38 $generated@@75) ($generated@@38 $generated@@76)) (and (< 1 $generated@@35) (and (<= ($generated@@38 0) $generated@@75) (<= ($generated@@38 0) $generated@@76)))) (= ($generated@@36 ($generated@@38 $generated@@75) ($generated@@38 $generated@@76)) (ite (= ($generated@@38 $generated@@76) ($generated@@38 0)) ($generated@@27 ($generated@@44 $generated@@47 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 $generated@@34 ($generated@@54 $generated@@61 ($generated@@62 68))) ($generated@@54 $generated@@61 ($generated@@62 105))) ($generated@@54 $generated@@61 ($generated@@62 118))) ($generated@@54 $generated@@61 ($generated@@62 105))) ($generated@@54 $generated@@61 ($generated@@62 100))) ($generated@@54 $generated@@61 ($generated@@62 101))) ($generated@@54 $generated@@61 ($generated@@62 32))) ($generated@@54 $generated@@61 ($generated@@62 98))) ($generated@@54 $generated@@61 ($generated@@62 121))) ($generated@@54 $generated@@61 ($generated@@62 32))) ($generated@@54 $generated@@61 ($generated@@62 122))) ($generated@@54 $generated@@61 ($generated@@62 101))) ($generated@@54 $generated@@61 ($generated@@62 114))) ($generated@@54 $generated@@61 ($generated@@62 111))))) ($generated@@63 ($generated@@38 ($generated@@64 $generated@@75 ($generated@@38 $generated@@76)))))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@38 $generated@@75) ($generated@@38 $generated@@76)))
))))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@50 $generated@@77 $generated) (and (= ($generated@@54 $generated@@61 ($generated@@30 $generated@@61 $generated@@77)) $generated@@77) ($generated@@39 $generated@@61 ($generated@@30 $generated@@61 $generated@@77) $generated)))
 :pattern ( ($generated@@50 $generated@@77 $generated))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@50 ($generated@@54 $generated@@80 $generated@@78) $generated@@79) ($generated@@39 $generated@@80 $generated@@78 $generated@@79))
 :pattern ( ($generated@@50 ($generated@@54 $generated@@80 $generated@@78) $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (! (<= 0 ($generated@@28 $generated@@81))
 :pattern ( ($generated@@28 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 ($generated@@49 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@49 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@25 ($generated@@49 $generated@@84)) $generated@@1)
 :pattern ( ($generated@@49 $generated@@84))
)))
(assert (forall (($generated@@86 Int) ) (! (= ($generated@@85 ($generated@@63 $generated@@86)) $generated@@5)
 :pattern ( ($generated@@63 $generated@@86))
)))
(assert (forall (($generated@@88 Int) ) (! (= ($generated@@87 ($generated@@63 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@63 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@85 ($generated@@27 $generated@@89)) $generated@@6)
 :pattern ( ($generated@@27 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 ($generated@@27 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@27 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@30 $generated@@93 ($generated@@54 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@54 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@95 Int) ) (!  (=> (or (and (<= 0 $generated@@95) (< $generated@@95 55296)) (and (<= 57344 $generated@@95) (< $generated@@95 1114112))) (= ($generated@@94 ($generated@@62 $generated@@95)) $generated@@95))
 :pattern ( ($generated@@62 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (< ($generated@@96 $generated@@97) ($generated@@29 ($generated@@27 $generated@@97)))
 :pattern ( ($generated@@27 $generated@@97))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@98 $generated@@109 $generated@@110 $generated@@111 ($generated@@105 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@114 $generated@@115) $generated@@112)
 :weight 0
)) (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@98 $generated@@116 $generated@@117 $generated@@118 ($generated@@105 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@98 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@98 $generated@@125 $generated@@126 $generated@@127 ($generated@@105 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)))) (= ($generated@@9 $generated@@99) 6)) (= ($generated@@9 $generated@@100) 7)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@102 $generated@@134 $generated@@135 ($generated@@106 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@136) $generated@@138) $generated@@136)
 :weight 0
))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@102 $generated@@139 $generated@@140 ($generated@@106 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@102 $generated@@139 $generated@@140 $generated@@142 $generated@@144)))
 :weight 0
))) (= ($generated@@9 $generated@@103) 8)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@9 ($generated@@104 $generated@@145 $generated@@146)) 9))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@107 ($generated@@104 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@104 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@108 ($generated@@104 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@104 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@14 ($generated@@98 $generated@@99 $generated@@100 $generated@@10 ($generated@@101 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))  (=> (and (or (not (= $generated@@155 $generated@@151)) (not true)) ($generated@@14 ($generated@@30 $generated@@10 ($generated@@102 $generated@@100 $generated@@103 ($generated@@102 $generated@@99 ($generated@@104 $generated@@100 $generated@@103) $generated@@152 $generated@@155) $generated@@153)))) $generated@@154))
 :pattern ( ($generated@@98 $generated@@99 $generated@@100 $generated@@10 ($generated@@101 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (and (= ($generated@@157 ($generated@@48 $generated@@159 $generated@@160)) $generated@@159) (= ($generated@@158 ($generated@@48 $generated@@159 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@48 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@50 $generated@@161 ($generated@@49 $generated@@162)) (and (= ($generated@@54 $generated@@47 ($generated@@30 $generated@@47 $generated@@161)) $generated@@161) ($generated@@39 $generated@@47 ($generated@@30 $generated@@47 $generated@@161) ($generated@@49 $generated@@162))))
 :pattern ( ($generated@@50 $generated@@161 ($generated@@49 $generated@@162)))
)))
(assert (forall (($generated@@163 T@U) ) (!  (and (= ($generated@@62 ($generated@@94 $generated@@163)) $generated@@163) (or (and (<= 0 ($generated@@94 $generated@@163)) (< ($generated@@94 $generated@@163) 55296)) (and (<= 57344 ($generated@@94 $generated@@163)) (< ($generated@@94 $generated@@163) 1114112))))
 :pattern ( ($generated@@94 $generated@@163))
)))
(assert (= ($generated@@25 $generated@@57) $generated@@3))
(assert (= ($generated@@164 $generated@@57) $generated@@7))
(assert (= ($generated@@25 $generated@@40) $generated@@4))
(assert (= ($generated@@164 $generated@@40) $generated@@8))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@39 $generated@@31 ($generated@@27 $generated@@165) $generated@@40) ($generated@@39 $generated@@47 $generated@@165 ($generated@@49 $generated)))
 :pattern ( ($generated@@39 $generated@@31 ($generated@@27 $generated@@165) $generated@@40))
)))
(assert (forall (($generated@@166 Int) ) (! (= ($generated@@54 $generated@@11 ($generated@@15 ($generated@@38 $generated@@166))) ($generated@@44 $generated@@103 ($generated@@54 $generated@@11 ($generated@@15 $generated@@166))))
 :pattern ( ($generated@@54 $generated@@11 ($generated@@15 ($generated@@38 $generated@@166))))
)))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@63 ($generated@@38 $generated@@167)) ($generated@@44 $generated@@31 ($generated@@63 $generated@@167)))
 :pattern ( ($generated@@63 ($generated@@38 $generated@@167)))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@27 ($generated@@44 $generated@@47 $generated@@168)) ($generated@@44 $generated@@31 ($generated@@27 $generated@@168)))
 :pattern ( ($generated@@27 ($generated@@44 $generated@@47 $generated@@168)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@T) ) (! (= ($generated@@54 $generated@@170 ($generated@@44 $generated@@170 $generated@@169)) ($generated@@44 $generated@@103 ($generated@@54 $generated@@170 $generated@@169)))
 :pattern ( ($generated@@54 $generated@@170 ($generated@@44 $generated@@170 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> (= ($generated@@28 $generated@@171) 0) (= $generated@@171 $generated@@34))
 :pattern ( ($generated@@28 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@39 $generated@@47 $generated@@172 ($generated@@49 $generated@@173)) (forall (($generated@@174 Int) ) (!  (=> (and (<= 0 $generated@@174) (< $generated@@174 ($generated@@28 $generated@@172))) ($generated@@50 ($generated@@26 $generated@@172 $generated@@174) $generated@@173))
 :pattern ( ($generated@@26 $generated@@172 $generated@@174))
)))
 :pattern ( ($generated@@39 $generated@@47 $generated@@172 ($generated@@49 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ) (!  (=> (and (<= 0 $generated@@176) (< $generated@@176 ($generated@@28 $generated@@175))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@175 $generated@@176))) ($generated@@96 $generated@@175)))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@175 $generated@@176))))
)))
(assert (forall (($generated@@177 T@U) ) (! ($generated@@39 $generated@@61 $generated@@177 $generated)
 :pattern ( ($generated@@39 $generated@@61 $generated@@177 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@185  (=> (or (not (= $generated@@178 ($generated@@38 0))) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (not (= $generated@@178 0)) (not true))) (=> (or (not (= $generated@@178 0)) (not true)) (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@39 $generated@@11 ($generated@@15 ($generated@@64 $generated@@179 $generated@@178)) $generated@@57)))))))
(let (($generated@@186 true))
(let (($generated@@187 true))
(let (($generated@@188  (=> (= $generated@@180 ($generated@@101 $generated@@181 $generated@@182 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 6) 1) $generated@@187) (=> (= (ControlFlow 0 6) 2) $generated@@186)) (=> (= (ControlFlow 0 6) 4) $generated@@185)))))
(let (($generated@@189  (=> (and ($generated@@183 $generated@@182) ($generated@@184 $generated@@182)) (=> (and (and (<= ($generated@@38 0) $generated@@179) (<= ($generated@@38 0) $generated@@178)) (and (= 1 $generated@@35) (= (ControlFlow 0 7) 6))) $generated@@188))))
$generated@@189))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
