(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T T@T) T@T)
(declare-fun $generated@@66 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@15 $generated@@32) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37) ($generated@@31 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@41 ($generated@@38 $generated@@40) $generated@@42) ($generated@@31 $generated@@32 $generated@@41 ($generated@@39 $generated@@40) $generated@@42))
 :pattern ( ($generated@@31 $generated@@32 $generated@@41 ($generated@@38 $generated@@40) $generated@@42))
 :pattern ( ($generated@@31 $generated@@32 $generated@@41 ($generated@@39 $generated@@40) $generated@@42))
)))
(assert ($generated@@43 $generated@@44))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@45 $generated@@32 $generated@@48 $generated@@44)  (or (= $generated@@48 $generated@@46) (= ($generated@@47 $generated@@48) $generated@@44)))
 :pattern ( ($generated@@45 $generated@@32 $generated@@48 $generated@@44))
)))
(assert (forall (($generated@@49 T@U) ) ($generated@@43 ($generated@@34 $generated@@49))))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@51 $generated@@50 $generated@@52) ($generated@@31 $generated@@32 $generated@@51 $generated@@44 $generated@@52))
 :pattern ( ($generated@@31 $generated@@32 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@31 $generated@@32 $generated@@51 $generated@@44 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@55 $generated@@53 $generated@@56) ($generated@@31 $generated@@32 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@31 $generated@@32 $generated@@55 $generated@@53 $generated@@56))
 :pattern ( ($generated@@31 $generated@@32 $generated@@55 $generated@@54 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@59 $generated@@57 $generated@@60) ($generated@@31 $generated@@32 $generated@@59 $generated@@58 $generated@@60))
 :pattern ( ($generated@@31 $generated@@32 $generated@@59 $generated@@57 $generated@@60))
 :pattern ( ($generated@@31 $generated@@32 $generated@@59 $generated@@58 $generated@@60))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@62 $generated@@69 $generated@@70 ($generated@@66 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@73) $generated@@71)
 :weight 0
)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (or (= $generated@@78 $generated@@79) (= ($generated@@62 $generated@@74 $generated@@75 ($generated@@66 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@79) ($generated@@62 $generated@@74 $generated@@75 $generated@@77 $generated@@79)))
 :weight 0
))) (= ($generated@@15 $generated@@63) 4)) (= ($generated@@15 $generated@@64) 5)) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@15 ($generated@@65 $generated@@80 $generated@@81)) 6))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@67 ($generated@@65 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@65 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@68 ($generated@@65 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@65 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@87 ($generated@@34 $generated@@86) $generated@@88)  (or (= $generated@@87 $generated@@46) ($generated@@20 ($generated@@61 $generated@@16 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@32 ($generated@@65 $generated@@63 $generated@@64) $generated@@88 $generated@@87) $generated)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@87 ($generated@@34 $generated@@86) $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@90 ($generated@@39 $generated@@89) $generated@@91)  (or (= $generated@@90 $generated@@46) ($generated@@20 ($generated@@61 $generated@@16 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@32 ($generated@@65 $generated@@63 $generated@@64) $generated@@91 $generated@@90) $generated)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@90 ($generated@@39 $generated@@89) $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@92 $generated@@44 $generated@@93)  (or (= $generated@@92 $generated@@46) ($generated@@20 ($generated@@61 $generated@@16 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@32 ($generated@@65 $generated@@63 $generated@@64) $generated@@93 $generated@@92) $generated)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@92 $generated@@44 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@94 $generated@@54 $generated@@95)  (or (= $generated@@94 $generated@@46) ($generated@@20 ($generated@@61 $generated@@16 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@32 ($generated@@65 $generated@@63 $generated@@64) $generated@@95 $generated@@94) $generated)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@94 $generated@@54 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@96 $generated@@58 $generated@@97)  (or (= $generated@@96 $generated@@46) ($generated@@20 ($generated@@61 $generated@@16 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@32 ($generated@@65 $generated@@63 $generated@@64) $generated@@97 $generated@@96) $generated)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@96 $generated@@58 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 ($generated@@61 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@61 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@45 $generated@@32 $generated@@102 ($generated@@33 $generated@@101))  (and ($generated@@45 $generated@@32 $generated@@102 ($generated@@34 $generated@@101)) (or (not (= $generated@@102 $generated@@46)) (not true))))
 :pattern ( ($generated@@45 $generated@@32 $generated@@102 ($generated@@33 $generated@@101)))
 :pattern ( ($generated@@45 $generated@@32 $generated@@102 ($generated@@34 $generated@@101)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@45 $generated@@32 $generated@@104 ($generated@@38 $generated@@103))  (and ($generated@@45 $generated@@32 $generated@@104 ($generated@@39 $generated@@103)) (or (not (= $generated@@104 $generated@@46)) (not true))))
 :pattern ( ($generated@@45 $generated@@32 $generated@@104 ($generated@@38 $generated@@103)))
 :pattern ( ($generated@@45 $generated@@32 $generated@@104 ($generated@@39 $generated@@103)))
)))
(assert (forall (($generated@@107 T@U) ) (!  (and (= ($generated@@105 ($generated@@34 $generated@@107)) $generated@@1) (= ($generated@@106 ($generated@@34 $generated@@107)) $generated@@11))
 :pattern ( ($generated@@34 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (!  (and (= ($generated@@105 ($generated@@33 $generated@@108)) $generated@@3) (= ($generated@@106 ($generated@@33 $generated@@108)) $generated@@11))
 :pattern ( ($generated@@33 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (!  (and (= ($generated@@105 ($generated@@39 $generated@@109)) $generated@@4) (= ($generated@@106 ($generated@@39 $generated@@109)) $generated@@12))
 :pattern ( ($generated@@39 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (!  (and (= ($generated@@105 ($generated@@38 $generated@@110)) $generated@@5) (= ($generated@@106 ($generated@@38 $generated@@110)) $generated@@12))
 :pattern ( ($generated@@38 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@45 $generated@@32 $generated@@112 ($generated@@34 $generated@@111))  (or (= $generated@@112 $generated@@46) (= ($generated@@47 $generated@@112) ($generated@@34 $generated@@111))))
 :pattern ( ($generated@@45 $generated@@32 $generated@@112 ($generated@@34 $generated@@111)))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@45 $generated@@32 $generated@@113 $generated@@50)  (and ($generated@@45 $generated@@32 $generated@@113 $generated@@44) (or (not (= $generated@@113 $generated@@46)) (not true))))
 :pattern ( ($generated@@45 $generated@@32 $generated@@113 $generated@@50))
 :pattern ( ($generated@@45 $generated@@32 $generated@@113 $generated@@44))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@45 $generated@@32 $generated@@114 $generated@@53)  (and ($generated@@45 $generated@@32 $generated@@114 $generated@@54) (or (not (= $generated@@114 $generated@@46)) (not true))))
 :pattern ( ($generated@@45 $generated@@32 $generated@@114 $generated@@53))
 :pattern ( ($generated@@45 $generated@@32 $generated@@114 $generated@@54))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@45 $generated@@32 $generated@@115 $generated@@57)  (and ($generated@@45 $generated@@32 $generated@@115 $generated@@58) (or (not (= $generated@@115 $generated@@46)) (not true))))
 :pattern ( ($generated@@45 $generated@@32 $generated@@115 $generated@@57))
 :pattern ( ($generated@@45 $generated@@32 $generated@@115 $generated@@58))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@117 ($generated@@34 $generated@@116) $generated@@118) ($generated@@31 $generated@@32 $generated@@117 $generated@@54 $generated@@118))
 :pattern ( ($generated@@31 $generated@@32 $generated@@117 ($generated@@34 $generated@@116) $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@120 ($generated@@39 $generated@@119) $generated@@121) ($generated@@31 $generated@@32 $generated@@120 $generated@@58 $generated@@121))
 :pattern ( ($generated@@31 $generated@@32 $generated@@120 ($generated@@39 $generated@@119) $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@122 $generated@@44 $generated@@123) ($generated@@31 $generated@@32 $generated@@122 $generated@@54 $generated@@123))
 :pattern ( ($generated@@31 $generated@@32 $generated@@122 $generated@@44 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@124 $generated@@54 $generated@@125) ($generated@@31 $generated@@32 $generated@@124 $generated@@58 $generated@@125))
 :pattern ( ($generated@@31 $generated@@32 $generated@@124 $generated@@54 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@126 $generated@@54 $generated@@127) ($generated@@31 $generated@@32 $generated@@126 ($generated@@39 $generated@@50) $generated@@127))
 :pattern ( ($generated@@31 $generated@@32 $generated@@126 $generated@@54 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@34 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@34 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@33 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@33 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@39 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@39 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@134 ($generated@@38 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@38 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@61 $generated@@137 ($generated@@98 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@98 $generated@@137 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@45 $generated@@32 $generated@@140 ($generated@@39 $generated@@139))  (or (= $generated@@140 $generated@@46) ($generated@@138 ($generated@@47 $generated@@140) $generated@@139)))
 :pattern ( ($generated@@45 $generated@@32 $generated@@140 ($generated@@39 $generated@@139)))
)))
(assert  (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@141 $generated@@144 $generated@@145 $generated@@146 ($generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@141 $generated@@151 $generated@@152 $generated@@153 ($generated@@143 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@141 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@141 $generated@@160 $generated@@161 $generated@@162 ($generated@@143 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@141 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@20 ($generated@@141 $generated@@32 $generated@@63 $generated@@16 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@20 ($generated@@61 $generated@@16 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@32 ($generated@@65 $generated@@63 $generated@@64) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@141 $generated@@32 $generated@@63 $generated@@16 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@45 $generated@@32 $generated@@176 ($generated@@34 $generated@@175)) ($generated@@45 $generated@@32 $generated@@176 $generated@@54))
 :pattern ( ($generated@@45 $generated@@32 $generated@@176 ($generated@@34 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@45 $generated@@32 $generated@@178 ($generated@@39 $generated@@177)) ($generated@@45 $generated@@32 $generated@@178 $generated@@58))
 :pattern ( ($generated@@45 $generated@@32 $generated@@178 ($generated@@39 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> ($generated@@45 $generated@@32 $generated@@179 $generated@@44) ($generated@@45 $generated@@32 $generated@@179 $generated@@54))
 :pattern ( ($generated@@45 $generated@@32 $generated@@179 $generated@@44))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> ($generated@@45 $generated@@32 $generated@@180 $generated@@54) ($generated@@45 $generated@@32 $generated@@180 $generated@@58))
 :pattern ( ($generated@@45 $generated@@32 $generated@@180 $generated@@54))
)))
(assert (= ($generated@@105 $generated@@44) $generated@@0))
(assert (= ($generated@@106 $generated@@44) $generated@@10))
(assert (= ($generated@@105 $generated@@50) $generated@@2))
(assert (= ($generated@@106 $generated@@50) $generated@@10))
(assert (= ($generated@@105 $generated@@54) $generated@@6))
(assert (= ($generated@@106 $generated@@54) $generated@@13))
(assert (= ($generated@@105 $generated@@53) $generated@@7))
(assert (= ($generated@@106 $generated@@53) $generated@@13))
(assert (= ($generated@@105 $generated@@58) $generated@@8))
(assert (= ($generated@@106 $generated@@58) $generated@@14))
(assert (= ($generated@@105 $generated@@57) $generated@@9))
(assert (= ($generated@@106 $generated@@57) $generated@@14))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@45 $generated@@32 $generated@@181 $generated@@54)  (or (= $generated@@181 $generated@@46) ($generated@@43 ($generated@@47 $generated@@181))))
 :pattern ( ($generated@@45 $generated@@32 $generated@@181 $generated@@54))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@45 $generated@@32 $generated@@183 $generated@@58)  (or (= $generated@@183 $generated@@46) ($generated@@182 ($generated@@47 $generated@@183))))
 :pattern ( ($generated@@45 $generated@@32 $generated@@183 $generated@@58))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> ($generated@@45 $generated@@32 $generated@@184 $generated@@54) ($generated@@45 $generated@@32 $generated@@184 ($generated@@39 $generated@@50)))
 :pattern ( ($generated@@45 $generated@@32 $generated@@184 $generated@@54))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@192  (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@185 ($generated@@142 $generated@@46 $generated@@186 $generated false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ) true)))))
(let (($generated@@195  (=> (and ($generated@@187 $generated@@186) ($generated@@188 $generated@@186)) (=> (and (and (or (not (= $generated@@189 $generated@@46)) (not true)) (and ($generated@@45 $generated@@32 $generated@@189 ($generated@@33 $generated@@190)) ($generated@@31 $generated@@32 $generated@@189 ($generated@@33 $generated@@190) $generated@@186))) (and (= 0 $generated@@191) (= (ControlFlow 0 4) 2))) $generated@@192))))
$generated@@195)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
