(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 (T@T) Int)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 (Bool) T@U)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Real) T@U)
(declare-fun $generated@@25 (T@U) Real)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@41 () Bool)
(declare-fun $generated@@42 () Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U) Bool)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T T@T) T@T)
(declare-fun $generated@@66 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@95 (Bool T@U Int) Bool)
(declare-fun $generated@@96 (T@U Int) Bool)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@98 (T@U) Bool)
(declare-fun $generated@@103 (Int) Int)
(declare-fun $generated@@109 (T@T T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@120 () Bool)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@16 $generated@@17) 0) (= ($generated@@16 $generated@@18) 1)) (= ($generated@@16 $generated@@19) 2)) (forall (($generated@@26 Bool) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Int) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Real) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15)
)
(assert (= ($generated@@32 $generated) $generated@@1))
(assert (= ($generated@@32 $generated@@0) $generated@@2))
(assert (= ($generated@@16 $generated@@34) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@38 ($generated@@35 $generated@@37) $generated@@39) ($generated@@33 $generated@@34 $generated@@38 ($generated@@36 $generated@@37) $generated@@39))
 :pattern ( ($generated@@33 $generated@@34 $generated@@38 ($generated@@35 $generated@@37) $generated@@39))
 :pattern ( ($generated@@33 $generated@@34 $generated@@38 ($generated@@36 $generated@@37) $generated@@39))
)))
(assert  (=> (<= 1 $generated@@40) (=> (or $generated@@41 (< 1 $generated@@40)) (= $generated@@42 ($generated@@21 ($generated@@43 $generated@@17 ($generated@@20 true)))))))
(assert  (=> (<= 1 $generated@@40) (=> (or $generated@@41 (< 1 $generated@@40)) (= $generated@@42 ($generated@@21 ($generated@@43 $generated@@17 ($generated@@20 true)))))))
(assert ($generated@@44 $generated@@45))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@46 $generated@@34 $generated@@49 $generated@@45)  (or (= $generated@@49 $generated@@47) (= ($generated@@48 $generated@@49) $generated@@45)))
 :pattern ( ($generated@@46 $generated@@34 $generated@@49 $generated@@45))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@51 $generated@@50 $generated@@52) ($generated@@33 $generated@@34 $generated@@51 $generated@@45 $generated@@52))
 :pattern ( ($generated@@33 $generated@@34 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@33 $generated@@34 $generated@@51 $generated@@45 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@55 $generated@@53 $generated@@56) ($generated@@33 $generated@@34 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@33 $generated@@34 $generated@@55 $generated@@53 $generated@@56))
 :pattern ( ($generated@@33 $generated@@34 $generated@@55 $generated@@54 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@59 $generated@@57 $generated@@60) ($generated@@33 $generated@@34 $generated@@59 $generated@@58 $generated@@60))
 :pattern ( ($generated@@33 $generated@@34 $generated@@59 $generated@@57 $generated@@60))
 :pattern ( ($generated@@33 $generated@@34 $generated@@59 $generated@@58 $generated@@60))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@62 $generated@@69 $generated@@70 ($generated@@66 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@73) $generated@@71)
 :weight 0
)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (or (= $generated@@78 $generated@@79) (= ($generated@@62 $generated@@74 $generated@@75 ($generated@@66 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@79) ($generated@@62 $generated@@74 $generated@@75 $generated@@77 $generated@@79)))
 :weight 0
))) (= ($generated@@16 $generated@@63) 4)) (= ($generated@@16 $generated@@64) 5)) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@16 ($generated@@65 $generated@@80 $generated@@81)) 6))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@67 ($generated@@65 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@65 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@68 ($generated@@65 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@65 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@87 ($generated@@36 $generated@@86) $generated@@88)  (or (= $generated@@87 $generated@@47) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@34 ($generated@@65 $generated@@63 $generated@@64) $generated@@88 $generated@@87) $generated@@3)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@87 ($generated@@36 $generated@@86) $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@89 $generated@@45 $generated@@90)  (or (= $generated@@89 $generated@@47) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@34 ($generated@@65 $generated@@63 $generated@@64) $generated@@90 $generated@@89) $generated@@3)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@89 $generated@@45 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@91 $generated@@54 $generated@@92)  (or (= $generated@@91 $generated@@47) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@34 ($generated@@65 $generated@@63 $generated@@64) $generated@@92 $generated@@91) $generated@@3)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@91 $generated@@54 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@93 $generated@@58 $generated@@94)  (or (= $generated@@93 $generated@@47) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@34 ($generated@@65 $generated@@63 $generated@@64) $generated@@94 $generated@@93) $generated@@3)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@93 $generated@@58 $generated@@94))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@99 Bool) ($generated@@100 T@U) ($generated@@101 Int) ) (!  (=> (or ($generated@@96 $generated@@100 $generated@@101) (and (< 0 $generated@@40) ($generated@@46 $generated@@34 $generated@@100 $generated@@45))) (forall (($generated@@102 T@U) ) (!  (=> (and (and ($generated@@98 $generated@@102) ($generated@@97 $generated@@102)) ($generated@@95 $generated@@99 $generated@@100 $generated@@101)) ($generated@@33 $generated@@34 $generated@@100 $generated@@45 $generated@@102))
 :pattern ( ($generated@@97 $generated@@102))
)))
 :pattern ( ($generated@@95 $generated@@99 $generated@@100 $generated@@101))
))))
(assert (forall (($generated@@104 Int) ) (! (= ($generated@@103 $generated@@104) $generated@@104)
 :pattern ( ($generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@43 $generated@@106 $generated@@105) $generated@@105)
 :pattern ( ($generated@@43 $generated@@106 $generated@@105))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@107 T@U) ($generated@@108 Int) ) (!  (=> (or ($generated@@96 $generated@@107 $generated@@108) (and (< 0 $generated@@40) ($generated@@46 $generated@@34 $generated@@107 $generated@@45))) (= ($generated@@95 true $generated@@107 $generated@@108) ($generated@@21 ($generated@@43 $generated@@17 ($generated@@20 true)))))
 :pattern ( ($generated@@95 true $generated@@107 $generated@@108))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@109 $generated@@111 ($generated@@61 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@61 $generated@@111 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@46 $generated@@34 $generated@@113 ($generated@@35 $generated@@112))  (and ($generated@@46 $generated@@34 $generated@@113 ($generated@@36 $generated@@112)) (or (not (= $generated@@113 $generated@@47)) (not true))))
 :pattern ( ($generated@@46 $generated@@34 $generated@@113 ($generated@@35 $generated@@112)))
 :pattern ( ($generated@@46 $generated@@34 $generated@@113 ($generated@@36 $generated@@112)))
)))
(assert (forall (($generated@@115 T@U) ) (!  (and (= ($generated@@32 ($generated@@36 $generated@@115)) $generated@@6) (= ($generated@@114 ($generated@@36 $generated@@115)) $generated@@13))
 :pattern ( ($generated@@36 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (!  (and (= ($generated@@32 ($generated@@35 $generated@@116)) $generated@@7) (= ($generated@@114 ($generated@@35 $generated@@116)) $generated@@13))
 :pattern ( ($generated@@35 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@46 $generated@@34 $generated@@117 $generated@@50)  (and ($generated@@46 $generated@@34 $generated@@117 $generated@@45) (or (not (= $generated@@117 $generated@@47)) (not true))))
 :pattern ( ($generated@@46 $generated@@34 $generated@@117 $generated@@50))
 :pattern ( ($generated@@46 $generated@@34 $generated@@117 $generated@@45))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@46 $generated@@34 $generated@@118 $generated@@53)  (and ($generated@@46 $generated@@34 $generated@@118 $generated@@54) (or (not (= $generated@@118 $generated@@47)) (not true))))
 :pattern ( ($generated@@46 $generated@@34 $generated@@118 $generated@@53))
 :pattern ( ($generated@@46 $generated@@34 $generated@@118 $generated@@54))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@46 $generated@@34 $generated@@119 $generated@@57)  (and ($generated@@46 $generated@@34 $generated@@119 $generated@@58) (or (not (= $generated@@119 $generated@@47)) (not true))))
 :pattern ( ($generated@@46 $generated@@34 $generated@@119 $generated@@57))
 :pattern ( ($generated@@46 $generated@@34 $generated@@119 $generated@@58))
)))
(assert  (=> (<= 1 $generated@@40) (=> (or $generated@@41 (< 1 $generated@@40)) (= ($generated@@95 $generated@@120 $generated@@47 ($generated@@103 1)) ($generated@@21 ($generated@@43 $generated@@17 ($generated@@20 true)))))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@122 ($generated@@36 $generated@@121) $generated@@123) ($generated@@33 $generated@@34 $generated@@122 $generated@@58 $generated@@123))
 :pattern ( ($generated@@33 $generated@@34 $generated@@122 ($generated@@36 $generated@@121) $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@124 $generated@@45 $generated@@125) ($generated@@33 $generated@@34 $generated@@124 $generated@@54 $generated@@125))
 :pattern ( ($generated@@33 $generated@@34 $generated@@124 $generated@@45 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@126 $generated@@54 $generated@@127) ($generated@@33 $generated@@34 $generated@@126 $generated@@58 $generated@@127))
 :pattern ( ($generated@@33 $generated@@34 $generated@@126 $generated@@54 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@128 $generated@@54 $generated@@129) ($generated@@33 $generated@@34 $generated@@128 ($generated@@36 $generated@@50) $generated@@129))
 :pattern ( ($generated@@33 $generated@@34 $generated@@128 $generated@@54 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@36 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@36 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@35 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@35 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@61 $generated@@135 ($generated@@109 $generated@@135 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@109 $generated@@135 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@46 $generated@@34 $generated@@138 ($generated@@36 $generated@@137))  (or (= $generated@@138 $generated@@47) ($generated@@136 ($generated@@48 $generated@@138) $generated@@137)))
 :pattern ( ($generated@@46 $generated@@34 $generated@@138 ($generated@@36 $generated@@137)))
)))
(assert  (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@139 $generated@@142 $generated@@143 $generated@@144 ($generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@147 $generated@@148) $generated@@145)
 :weight 0
)) (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@139 $generated@@149 $generated@@150 $generated@@151 ($generated@@141 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@139 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@139 $generated@@158 $generated@@159 $generated@@160 ($generated@@141 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@139 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 Bool) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@21 ($generated@@139 $generated@@34 $generated@@63 $generated@@17 ($generated@@140 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))  (=> (and (or (not (= $generated@@171 $generated@@167)) (not true)) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@34 ($generated@@65 $generated@@63 $generated@@64) $generated@@168 $generated@@171) $generated@@169)))) $generated@@170))
 :pattern ( ($generated@@139 $generated@@34 $generated@@63 $generated@@17 ($generated@@140 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@46 $generated@@34 $generated@@174 ($generated@@36 $generated@@173)) ($generated@@46 $generated@@34 $generated@@174 $generated@@58))
 :pattern ( ($generated@@46 $generated@@34 $generated@@174 ($generated@@36 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> ($generated@@46 $generated@@34 $generated@@175 $generated@@45) ($generated@@46 $generated@@34 $generated@@175 $generated@@54))
 :pattern ( ($generated@@46 $generated@@34 $generated@@175 $generated@@45))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> ($generated@@46 $generated@@34 $generated@@176 $generated@@54) ($generated@@46 $generated@@34 $generated@@176 $generated@@58))
 :pattern ( ($generated@@46 $generated@@34 $generated@@176 $generated@@54))
)))
(assert (= ($generated@@32 $generated@@45) $generated@@4))
(assert (= ($generated@@114 $generated@@45) $generated@@12))
(assert (= ($generated@@32 $generated@@50) $generated@@5))
(assert (= ($generated@@114 $generated@@50) $generated@@12))
(assert (= ($generated@@32 $generated@@54) $generated@@8))
(assert (= ($generated@@114 $generated@@54) $generated@@14))
(assert (= ($generated@@32 $generated@@53) $generated@@9))
(assert (= ($generated@@114 $generated@@53) $generated@@14))
(assert (= ($generated@@32 $generated@@58) $generated@@10))
(assert (= ($generated@@114 $generated@@58) $generated@@15))
(assert (= ($generated@@32 $generated@@57) $generated@@11))
(assert (= ($generated@@114 $generated@@57) $generated@@15))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@46 $generated@@34 $generated@@177 $generated@@54)  (or (= $generated@@177 $generated@@47) ($generated@@44 ($generated@@48 $generated@@177))))
 :pattern ( ($generated@@46 $generated@@34 $generated@@177 $generated@@54))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@46 $generated@@34 $generated@@179 $generated@@58)  (or (= $generated@@179 $generated@@47) ($generated@@178 ($generated@@48 $generated@@179))))
 :pattern ( ($generated@@46 $generated@@34 $generated@@179 $generated@@58))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@180 T@U) ($generated@@181 Int) ) (!  (=> (or ($generated@@96 ($generated@@43 $generated@@34 $generated@@180) ($generated@@103 $generated@@181)) (and (< 0 $generated@@40) ($generated@@46 $generated@@34 $generated@@180 $generated@@45))) (= ($generated@@95 true ($generated@@43 $generated@@34 $generated@@180) ($generated@@103 $generated@@181)) ($generated@@21 ($generated@@43 $generated@@17 ($generated@@20 true)))))
 :weight 3
 :pattern ( ($generated@@95 true ($generated@@43 $generated@@34 $generated@@180) ($generated@@103 $generated@@181)))
))))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@109 $generated@@18 ($generated@@22 ($generated@@103 $generated@@182))) ($generated@@43 $generated@@64 ($generated@@109 $generated@@18 ($generated@@22 $generated@@182))))
 :pattern ( ($generated@@109 $generated@@18 ($generated@@22 ($generated@@103 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@109 $generated@@184 ($generated@@43 $generated@@184 $generated@@183)) ($generated@@43 $generated@@64 ($generated@@109 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@109 $generated@@184 ($generated@@43 $generated@@184 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> ($generated@@46 $generated@@34 $generated@@185 $generated@@54) ($generated@@46 $generated@@34 $generated@@185 ($generated@@36 $generated@@50)))
 :pattern ( ($generated@@46 $generated@@34 $generated@@185 $generated@@54))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! ($generated@@33 $generated@@18 $generated@@187 $generated@@0 $generated@@186)
 :pattern ( ($generated@@33 $generated@@18 $generated@@187 $generated@@0 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! ($generated@@33 $generated@@17 $generated@@189 $generated $generated@@188)
 :pattern ( ($generated@@33 $generated@@17 $generated@@189 $generated $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! ($generated@@46 $generated@@18 $generated@@190 $generated@@0)
 :pattern ( ($generated@@46 $generated@@18 $generated@@190 $generated@@0))
)))
(assert (forall (($generated@@191 T@U) ) (! ($generated@@46 $generated@@17 $generated@@191 $generated)
 :pattern ( ($generated@@46 $generated@@17 $generated@@191 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@195  (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@95 $generated@@120 $generated@@47 ($generated@@103 1)) ($generated@@21 ($generated@@43 $generated@@17 ($generated@@20 true)))))))
(let (($generated@@196  (=> (= $generated@@42 ($generated@@21 ($generated@@43 $generated@@17 ($generated@@20 true)))) (=> (and ($generated@@46 $generated@@17 ($generated@@20 $generated@@42) $generated) (= (ControlFlow 0 4) 3)) $generated@@195))))
(let (($generated@@197 true))
(let (($generated@@198  (=> (= $generated@@192 ($generated@@140 $generated@@47 $generated@@193 $generated@@3 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@197) (=> (= (ControlFlow 0 5) 4) $generated@@196)))))
(let (($generated@@199  (=> (and (and ($generated@@98 $generated@@193) ($generated@@194 $generated@@193)) (and (= 1 $generated@@40) (= (ControlFlow 0 6) 5))) $generated@@198)))
$generated@@199))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
