(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@T T@T) T@T)
(declare-fun $generated@@60 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@89 () Int)
(declare-fun $generated@@90 (Bool T@U Int) Bool)
(declare-fun $generated@@91 (T@U Int) Bool)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@98 (Int) Int)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@131 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (= ($generated@@14 $generated@@32) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37) ($generated@@31 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
)))
(assert ($generated@@38 $generated@@39))
(assert (forall (($generated@@43 T@U) ) (! (= ($generated@@40 $generated@@32 $generated@@43 $generated@@39)  (or (= $generated@@43 $generated@@41) (= ($generated@@42 $generated@@43) $generated@@39)))
 :pattern ( ($generated@@40 $generated@@32 $generated@@43 $generated@@39))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@45 $generated@@44 $generated@@46) ($generated@@31 $generated@@32 $generated@@45 $generated@@39 $generated@@46))
 :pattern ( ($generated@@31 $generated@@32 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@31 $generated@@32 $generated@@45 $generated@@39 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@49 $generated@@47 $generated@@50) ($generated@@31 $generated@@32 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@31 $generated@@32 $generated@@49 $generated@@47 $generated@@50))
 :pattern ( ($generated@@31 $generated@@32 $generated@@49 $generated@@48 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@53 $generated@@51 $generated@@54) ($generated@@31 $generated@@32 $generated@@53 $generated@@52 $generated@@54))
 :pattern ( ($generated@@31 $generated@@32 $generated@@53 $generated@@51 $generated@@54))
 :pattern ( ($generated@@31 $generated@@32 $generated@@53 $generated@@52 $generated@@54))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@56 $generated@@63 $generated@@64 ($generated@@60 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@67) $generated@@65)
 :weight 0
)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (or (= $generated@@72 $generated@@73) (= ($generated@@56 $generated@@68 $generated@@69 ($generated@@60 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@73) ($generated@@56 $generated@@68 $generated@@69 $generated@@71 $generated@@73)))
 :weight 0
))) (= ($generated@@14 $generated@@57) 4)) (= ($generated@@14 $generated@@58) 5)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (= ($generated@@14 ($generated@@59 $generated@@74 $generated@@75)) 6))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@61 ($generated@@59 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@59 $generated@@76 $generated@@77))
))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@62 ($generated@@59 $generated@@78 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@59 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@81 ($generated@@34 $generated@@80) $generated@@82)  (or (= $generated@@81 $generated@@41) ($generated@@19 ($generated@@55 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@32 ($generated@@59 $generated@@57 $generated@@58) $generated@@82 $generated@@81) $generated@@1)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@81 ($generated@@34 $generated@@80) $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@83 $generated@@39 $generated@@84)  (or (= $generated@@83 $generated@@41) ($generated@@19 ($generated@@55 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@32 ($generated@@59 $generated@@57 $generated@@58) $generated@@84 $generated@@83) $generated@@1)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@83 $generated@@39 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@85 $generated@@48 $generated@@86)  (or (= $generated@@85 $generated@@41) ($generated@@19 ($generated@@55 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@32 ($generated@@59 $generated@@57 $generated@@58) $generated@@86 $generated@@85) $generated@@1)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@85 $generated@@48 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@87 $generated@@52 $generated@@88)  (or (= $generated@@87 $generated@@41) ($generated@@19 ($generated@@55 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@32 ($generated@@59 $generated@@57 $generated@@58) $generated@@88 $generated@@87) $generated@@1)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@87 $generated@@52 $generated@@88))
)))
(assert  (=> (<= 0 $generated@@89) (forall (($generated@@94 Bool) ($generated@@95 T@U) ($generated@@96 Int) ) (!  (=> (or ($generated@@91 $generated@@95 $generated@@96) (and (< 0 $generated@@89) ($generated@@40 $generated@@32 $generated@@95 $generated@@39))) (forall (($generated@@97 T@U) ) (!  (=> (and (and ($generated@@93 $generated@@97) ($generated@@92 $generated@@97)) ($generated@@90 $generated@@94 $generated@@95 $generated@@96)) ($generated@@31 $generated@@32 $generated@@95 $generated@@39 $generated@@97))
 :pattern ( ($generated@@92 $generated@@97))
)))
 :pattern ( ($generated@@90 $generated@@94 $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@99 Int) ) (! (= ($generated@@98 $generated@@99) $generated@@99)
 :pattern ( ($generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 $generated@@101) $generated@@101)
 :pattern ( ($generated@@100 $generated@@102 $generated@@101))
)))
(assert  (=> (<= 0 $generated@@89) (forall (($generated@@103 T@U) ($generated@@104 Int) ) (!  (=> (or ($generated@@91 $generated@@103 $generated@@104) (and (< 0 $generated@@89) ($generated@@40 $generated@@32 $generated@@103 $generated@@39))) (= ($generated@@90 true $generated@@103 $generated@@104) ($generated@@19 ($generated@@100 $generated@@15 ($generated@@18 true)))))
 :pattern ( ($generated@@90 true $generated@@103 $generated@@104))
))))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 ($generated@@55 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@55 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@40 $generated@@32 $generated@@109 ($generated@@33 $generated@@108))  (and ($generated@@40 $generated@@32 $generated@@109 ($generated@@34 $generated@@108)) (or (not (= $generated@@109 $generated@@41)) (not true))))
 :pattern ( ($generated@@40 $generated@@32 $generated@@109 ($generated@@33 $generated@@108)))
 :pattern ( ($generated@@40 $generated@@32 $generated@@109 ($generated@@34 $generated@@108)))
)))
(assert (forall (($generated@@111 T@U) ) (!  (and (= ($generated@@30 ($generated@@34 $generated@@111)) $generated@@4) (= ($generated@@110 ($generated@@34 $generated@@111)) $generated@@11))
 :pattern ( ($generated@@34 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (!  (and (= ($generated@@30 ($generated@@33 $generated@@112)) $generated@@5) (= ($generated@@110 ($generated@@33 $generated@@112)) $generated@@11))
 :pattern ( ($generated@@33 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@40 $generated@@32 $generated@@113 $generated@@44)  (and ($generated@@40 $generated@@32 $generated@@113 $generated@@39) (or (not (= $generated@@113 $generated@@41)) (not true))))
 :pattern ( ($generated@@40 $generated@@32 $generated@@113 $generated@@44))
 :pattern ( ($generated@@40 $generated@@32 $generated@@113 $generated@@39))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@40 $generated@@32 $generated@@114 $generated@@47)  (and ($generated@@40 $generated@@32 $generated@@114 $generated@@48) (or (not (= $generated@@114 $generated@@41)) (not true))))
 :pattern ( ($generated@@40 $generated@@32 $generated@@114 $generated@@47))
 :pattern ( ($generated@@40 $generated@@32 $generated@@114 $generated@@48))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@40 $generated@@32 $generated@@115 $generated@@51)  (and ($generated@@40 $generated@@32 $generated@@115 $generated@@52) (or (not (= $generated@@115 $generated@@41)) (not true))))
 :pattern ( ($generated@@40 $generated@@32 $generated@@115 $generated@@51))
 :pattern ( ($generated@@40 $generated@@32 $generated@@115 $generated@@52))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@117 ($generated@@34 $generated@@116) $generated@@118) ($generated@@31 $generated@@32 $generated@@117 $generated@@52 $generated@@118))
 :pattern ( ($generated@@31 $generated@@32 $generated@@117 ($generated@@34 $generated@@116) $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@119 $generated@@39 $generated@@120) ($generated@@31 $generated@@32 $generated@@119 $generated@@48 $generated@@120))
 :pattern ( ($generated@@31 $generated@@32 $generated@@119 $generated@@39 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@121 $generated@@48 $generated@@122) ($generated@@31 $generated@@32 $generated@@121 $generated@@52 $generated@@122))
 :pattern ( ($generated@@31 $generated@@32 $generated@@121 $generated@@48 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@123 $generated@@48 $generated@@124) ($generated@@31 $generated@@32 $generated@@123 ($generated@@34 $generated@@44) $generated@@124))
 :pattern ( ($generated@@31 $generated@@32 $generated@@123 $generated@@48 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@34 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@34 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@33 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@33 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@55 $generated@@130 ($generated@@105 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@105 $generated@@130 $generated@@129))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@40 $generated@@32 $generated@@133 ($generated@@34 $generated@@132))  (or (= $generated@@133 $generated@@41) ($generated@@131 ($generated@@42 $generated@@133) $generated@@132)))
 :pattern ( ($generated@@40 $generated@@32 $generated@@133 ($generated@@34 $generated@@132)))
)))
(assert  (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@134 $generated@@137 $generated@@138 $generated@@139 ($generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@142 $generated@@143) $generated@@140)
 :weight 0
)) (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@134 $generated@@144 $generated@@145 $generated@@146 ($generated@@136 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@134 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@134 $generated@@153 $generated@@154 $generated@@155 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@134 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Bool) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@19 ($generated@@134 $generated@@32 $generated@@57 $generated@@15 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@19 ($generated@@55 $generated@@15 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@32 ($generated@@59 $generated@@57 $generated@@58) $generated@@163 $generated@@166) $generated@@164)))) $generated@@165))
 :pattern ( ($generated@@134 $generated@@32 $generated@@57 $generated@@15 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@40 $generated@@32 $generated@@169 ($generated@@34 $generated@@168)) ($generated@@40 $generated@@32 $generated@@169 $generated@@52))
 :pattern ( ($generated@@40 $generated@@32 $generated@@169 ($generated@@34 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> ($generated@@40 $generated@@32 $generated@@170 $generated@@39) ($generated@@40 $generated@@32 $generated@@170 $generated@@48))
 :pattern ( ($generated@@40 $generated@@32 $generated@@170 $generated@@39))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> ($generated@@40 $generated@@32 $generated@@171 $generated@@48) ($generated@@40 $generated@@32 $generated@@171 $generated@@52))
 :pattern ( ($generated@@40 $generated@@32 $generated@@171 $generated@@48))
)))
(assert (= ($generated@@30 $generated@@39) $generated@@2))
(assert (= ($generated@@110 $generated@@39) $generated@@10))
(assert (= ($generated@@30 $generated@@44) $generated@@3))
(assert (= ($generated@@110 $generated@@44) $generated@@10))
(assert (= ($generated@@30 $generated@@48) $generated@@6))
(assert (= ($generated@@110 $generated@@48) $generated@@12))
(assert (= ($generated@@30 $generated@@47) $generated@@7))
(assert (= ($generated@@110 $generated@@47) $generated@@12))
(assert (= ($generated@@30 $generated@@52) $generated@@8))
(assert (= ($generated@@110 $generated@@52) $generated@@13))
(assert (= ($generated@@30 $generated@@51) $generated@@9))
(assert (= ($generated@@110 $generated@@51) $generated@@13))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@40 $generated@@32 $generated@@172 $generated@@48)  (or (= $generated@@172 $generated@@41) ($generated@@38 ($generated@@42 $generated@@172))))
 :pattern ( ($generated@@40 $generated@@32 $generated@@172 $generated@@48))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@40 $generated@@32 $generated@@174 $generated@@52)  (or (= $generated@@174 $generated@@41) ($generated@@173 ($generated@@42 $generated@@174))))
 :pattern ( ($generated@@40 $generated@@32 $generated@@174 $generated@@52))
)))
(assert  (=> (<= 0 $generated@@89) (forall (($generated@@175 T@U) ($generated@@176 Int) ) (!  (=> (or ($generated@@91 ($generated@@100 $generated@@32 $generated@@175) ($generated@@98 $generated@@176)) (and (< 0 $generated@@89) ($generated@@40 $generated@@32 $generated@@175 $generated@@39))) (= ($generated@@90 true ($generated@@100 $generated@@32 $generated@@175) ($generated@@98 $generated@@176)) ($generated@@19 ($generated@@100 $generated@@15 ($generated@@18 true)))))
 :weight 3
 :pattern ( ($generated@@90 true ($generated@@100 $generated@@32 $generated@@175) ($generated@@98 $generated@@176)))
))))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@105 $generated@@16 ($generated@@20 ($generated@@98 $generated@@177))) ($generated@@100 $generated@@58 ($generated@@105 $generated@@16 ($generated@@20 $generated@@177))))
 :pattern ( ($generated@@105 $generated@@16 ($generated@@20 ($generated@@98 $generated@@177))))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@T) ) (! (= ($generated@@105 $generated@@179 ($generated@@100 $generated@@179 $generated@@178)) ($generated@@100 $generated@@58 ($generated@@105 $generated@@179 $generated@@178)))
 :pattern ( ($generated@@105 $generated@@179 ($generated@@100 $generated@@179 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> ($generated@@40 $generated@@32 $generated@@180 $generated@@48) ($generated@@40 $generated@@32 $generated@@180 ($generated@@34 $generated@@44)))
 :pattern ( ($generated@@40 $generated@@32 $generated@@180 $generated@@48))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! ($generated@@31 $generated@@15 $generated@@182 $generated $generated@@181)
 :pattern ( ($generated@@31 $generated@@15 $generated@@182 $generated $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! ($generated@@40 $generated@@15 $generated@@183 $generated)
 :pattern ( ($generated@@40 $generated@@15 $generated@@183 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@190  (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@191 T@U) ) (!  (=> (and (and ($generated@@93 $generated@@191) ($generated@@92 $generated@@191)) ($generated@@90 $generated@@184 $generated@@185 $generated@@186)) ($generated@@31 $generated@@32 $generated@@185 $generated@@39 $generated@@191))
 :pattern ( ($generated@@92 $generated@@191))
)))))
(let (($generated@@192  (=> (= ($generated@@90 $generated@@184 $generated@@185 $generated@@186) ($generated@@19 ($generated@@100 $generated@@15 ($generated@@18 true)))) (=> (and ($generated@@40 $generated@@15 ($generated@@18 ($generated@@90 $generated@@184 $generated@@185 $generated@@186)) $generated) (= (ControlFlow 0 4) 3)) $generated@@190))))
(let (($generated@@193 true))
(let (($generated@@194  (=> (= $generated@@187 ($generated@@135 $generated@@41 $generated@@188 $generated@@1 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@193) (=> (= (ControlFlow 0 5) 4) $generated@@192)))))
(let (($generated@@195  (=> (and (and (and ($generated@@93 $generated@@188) ($generated@@189 $generated@@188)) ($generated@@40 $generated@@32 $generated@@185 $generated@@39)) (and (= 0 $generated@@89) (= (ControlFlow 0 6) 5))) $generated@@194)))
$generated@@195))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
