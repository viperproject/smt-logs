(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 (T@T) Int)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 (Bool) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (Int) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (Real) T@U)
(declare-fun $generated@@26 (T@U) Real)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@T T@U) T@U)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@187 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@17 $generated@@18) 0) (= ($generated@@17 $generated@@19) 1)) (= ($generated@@17 $generated@@20) 2)) (forall (($generated@@27 Bool) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Int) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 Real) ) (! (= ($generated@@26 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16)
)
(assert (= ($generated@@33 $generated@@1) 0))
(assert (= ($generated@@34 $generated) $generated@@0))
(assert (= ($generated@@35 $generated@@1) $generated@@2))
(assert (= ($generated@@17 $generated@@37) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@41 ($generated@@38 $generated@@40) $generated@@42) ($generated@@36 $generated@@37 $generated@@41 ($generated@@39 $generated@@40) $generated@@42))
 :pattern ( ($generated@@36 $generated@@37 $generated@@41 ($generated@@38 $generated@@40) $generated@@42))
 :pattern ( ($generated@@36 $generated@@37 $generated@@41 ($generated@@39 $generated@@40) $generated@@42))
)))
(assert ($generated@@43 $generated@@44))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@45 $generated@@37 $generated@@48 $generated@@44)  (or (= $generated@@48 $generated@@46) (= ($generated@@47 $generated@@48) $generated@@44)))
 :pattern ( ($generated@@45 $generated@@37 $generated@@48 $generated@@44))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@50 $generated@@49 $generated@@51) ($generated@@36 $generated@@37 $generated@@50 $generated@@44 $generated@@51))
 :pattern ( ($generated@@36 $generated@@37 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@36 $generated@@37 $generated@@50 $generated@@44 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@54 $generated@@52 $generated@@55) ($generated@@36 $generated@@37 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@36 $generated@@37 $generated@@54 $generated@@52 $generated@@55))
 :pattern ( ($generated@@36 $generated@@37 $generated@@54 $generated@@53 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@58 $generated@@56 $generated@@59) ($generated@@36 $generated@@37 $generated@@58 $generated@@57 $generated@@59))
 :pattern ( ($generated@@36 $generated@@37 $generated@@58 $generated@@56 $generated@@59))
 :pattern ( ($generated@@36 $generated@@37 $generated@@58 $generated@@57 $generated@@59))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@61 $generated@@68 $generated@@69 ($generated@@65 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@72) $generated@@70)
 :weight 0
)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@61 $generated@@73 $generated@@74 ($generated@@65 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@61 $generated@@73 $generated@@74 $generated@@76 $generated@@78)))
 :weight 0
))) (= ($generated@@17 $generated@@62) 4)) (= ($generated@@17 $generated@@63) 5)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (= ($generated@@17 ($generated@@64 $generated@@79 $generated@@80)) 6))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@66 ($generated@@64 $generated@@81 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@64 $generated@@81 $generated@@82))
))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@83 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@64 $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@86 ($generated@@39 $generated@@85) $generated@@87)  (or (= $generated@@86 $generated@@46) ($generated@@22 ($generated@@60 $generated@@18 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@87 $generated@@86) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@86 ($generated@@39 $generated@@85) $generated@@87))
)))
(assert (= ($generated@@33 $generated@@88) 0))
(assert (= ($generated@@89 $generated@@5 $generated@@16) $generated@@88))
(assert  (not ($generated@@90 $generated@@88)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@91 $generated@@44 $generated@@92)  (or (= $generated@@91 $generated@@46) ($generated@@22 ($generated@@60 $generated@@18 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@92 $generated@@91) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@91 $generated@@44 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@93 $generated@@53 $generated@@94)  (or (= $generated@@93 $generated@@46) ($generated@@22 ($generated@@60 $generated@@18 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@94 $generated@@93) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@93 $generated@@53 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@95 $generated@@57 $generated@@96)  (or (= $generated@@95 $generated@@46) ($generated@@22 ($generated@@60 $generated@@18 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@96 $generated@@95) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@95 $generated@@57 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@97 $generated@@98 $generated@@99) (forall (($generated@@100 T@U) ) (!  (=> ($generated@@22 ($generated@@60 $generated@@18 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@98 $generated@@100) $generated@@1))) ($generated@@22 ($generated@@60 $generated@@18 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@99 $generated@@100) $generated@@1))))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@99 $generated@@100) $generated@@1))
)))
 :pattern ( ($generated@@97 $generated@@98 $generated@@99))
)))
(assert  (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@101 $generated@@104 $generated@@105 $generated@@106 ($generated@@103 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@109 $generated@@110) $generated@@107)
 :weight 0
)) (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@116 $generated@@118) (= ($generated@@101 $generated@@111 $generated@@112 $generated@@113 ($generated@@103 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@101 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@101 $generated@@120 $generated@@121 $generated@@122 ($generated@@103 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@101 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@22 ($generated@@101 $generated@@37 $generated@@62 $generated@@18 ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))  (=> (and (or (not (= $generated@@135 $generated@@129)) (not true)) ($generated@@22 ($generated@@60 $generated@@18 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@130 $generated@@135) $generated@@131)))) (or (= $generated@@135 $generated@@132) (and (= $generated@@135 $generated@@133) (= $generated@@136 $generated@@134)))))
 :pattern ( ($generated@@101 $generated@@37 $generated@@62 $generated@@18 ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@137 $generated@@139 ($generated@@60 $generated@@139 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@60 $generated@@139 $generated@@138))
)))
(assert ($generated@@90 $generated@@1))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and ($generated@@140 $generated@@141) (and (or (not (= $generated@@142 $generated@@46)) (not true)) (= ($generated@@47 $generated@@142) $generated@@44))) ($generated@@22 ($generated@@60 $generated@@18 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@141 $generated@@142) $generated@@1)))) ($generated@@36 $generated@@19 ($generated@@60 $generated@@19 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@141 $generated@@142) $generated@@88)) $generated $generated@@141))
 :pattern ( ($generated@@60 $generated@@19 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@141 $generated@@142) $generated@@88)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@45 $generated@@37 $generated@@144 ($generated@@38 $generated@@143))  (and ($generated@@45 $generated@@37 $generated@@144 ($generated@@39 $generated@@143)) (or (not (= $generated@@144 $generated@@46)) (not true))))
 :pattern ( ($generated@@45 $generated@@37 $generated@@144 ($generated@@38 $generated@@143)))
 :pattern ( ($generated@@45 $generated@@37 $generated@@144 ($generated@@39 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@T) ) (!  (=> ($generated@@97 $generated@@145 $generated@@146) (=> ($generated@@36 $generated@@149 $generated@@147 $generated@@148 $generated@@145) ($generated@@36 $generated@@149 $generated@@147 $generated@@148 $generated@@146)))
 :pattern ( ($generated@@97 $generated@@145 $generated@@146) ($generated@@36 $generated@@149 $generated@@147 $generated@@148 $generated@@145))
)))
(assert (forall (($generated@@151 T@U) ) (!  (and (= ($generated@@34 ($generated@@39 $generated@@151)) $generated@@6) (= ($generated@@150 ($generated@@39 $generated@@151)) $generated@@13))
 :pattern ( ($generated@@39 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (and (= ($generated@@34 ($generated@@38 $generated@@152)) $generated@@7) (= ($generated@@150 ($generated@@38 $generated@@152)) $generated@@13))
 :pattern ( ($generated@@38 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@45 $generated@@37 $generated@@153 $generated@@49)  (and ($generated@@45 $generated@@37 $generated@@153 $generated@@44) (or (not (= $generated@@153 $generated@@46)) (not true))))
 :pattern ( ($generated@@45 $generated@@37 $generated@@153 $generated@@49))
 :pattern ( ($generated@@45 $generated@@37 $generated@@153 $generated@@44))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@45 $generated@@37 $generated@@154 $generated@@52)  (and ($generated@@45 $generated@@37 $generated@@154 $generated@@53) (or (not (= $generated@@154 $generated@@46)) (not true))))
 :pattern ( ($generated@@45 $generated@@37 $generated@@154 $generated@@52))
 :pattern ( ($generated@@45 $generated@@37 $generated@@154 $generated@@53))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@45 $generated@@37 $generated@@155 $generated@@56)  (and ($generated@@45 $generated@@37 $generated@@155 $generated@@57) (or (not (= $generated@@155 $generated@@46)) (not true))))
 :pattern ( ($generated@@45 $generated@@37 $generated@@155 $generated@@56))
 :pattern ( ($generated@@45 $generated@@37 $generated@@155 $generated@@57))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@157 ($generated@@39 $generated@@156) $generated@@158) ($generated@@36 $generated@@37 $generated@@157 $generated@@57 $generated@@158))
 :pattern ( ($generated@@36 $generated@@37 $generated@@157 ($generated@@39 $generated@@156) $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@159 $generated@@44 $generated@@160) ($generated@@36 $generated@@37 $generated@@159 $generated@@53 $generated@@160))
 :pattern ( ($generated@@36 $generated@@37 $generated@@159 $generated@@44 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@161 $generated@@53 $generated@@162) ($generated@@36 $generated@@37 $generated@@161 $generated@@57 $generated@@162))
 :pattern ( ($generated@@36 $generated@@37 $generated@@161 $generated@@53 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@163 $generated@@53 $generated@@164) ($generated@@36 $generated@@37 $generated@@163 ($generated@@39 $generated@@49) $generated@@164))
 :pattern ( ($generated@@36 $generated@@37 $generated@@163 $generated@@53 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (or (not (= $generated@@165 $generated@@167)) (not true)) (=> (and ($generated@@97 $generated@@165 $generated@@166) ($generated@@97 $generated@@166 $generated@@167)) ($generated@@97 $generated@@165 $generated@@167)))
 :pattern ( ($generated@@97 $generated@@165 $generated@@166) ($generated@@97 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (and (= ($generated@@168 ($generated@@89 $generated@@169 $generated@@170)) $generated@@169) (= ($generated@@35 ($generated@@89 $generated@@169 $generated@@170)) $generated@@170))
 :pattern ( ($generated@@89 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@171 ($generated@@39 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@39 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@173 ($generated@@38 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@38 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@60 $generated@@176 ($generated@@137 $generated@@176 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@137 $generated@@176 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@140 $generated@@177) (and (or (not (= $generated@@178 $generated@@46)) (not true)) (= ($generated@@47 $generated@@178) $generated@@44))) ($generated@@45 $generated@@19 ($generated@@60 $generated@@19 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@177 $generated@@178) $generated@@88)) $generated))
 :pattern ( ($generated@@60 $generated@@19 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@177 $generated@@178) $generated@@88)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@45 $generated@@37 $generated@@181 ($generated@@39 $generated@@180))  (or (= $generated@@181 $generated@@46) ($generated@@179 ($generated@@47 $generated@@181) $generated@@180)))
 :pattern ( ($generated@@45 $generated@@37 $generated@@181 ($generated@@39 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@45 $generated@@37 $generated@@183 ($generated@@39 $generated@@182)) ($generated@@45 $generated@@37 $generated@@183 $generated@@57))
 :pattern ( ($generated@@45 $generated@@37 $generated@@183 ($generated@@39 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> ($generated@@45 $generated@@37 $generated@@184 $generated@@44) ($generated@@45 $generated@@37 $generated@@184 $generated@@53))
 :pattern ( ($generated@@45 $generated@@37 $generated@@184 $generated@@44))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> ($generated@@45 $generated@@37 $generated@@185 $generated@@53) ($generated@@45 $generated@@37 $generated@@185 $generated@@57))
 :pattern ( ($generated@@45 $generated@@37 $generated@@185 $generated@@53))
)))
(assert (= ($generated@@34 $generated@@44) $generated@@3))
(assert (= ($generated@@150 $generated@@44) $generated@@12))
(assert (= ($generated@@34 $generated@@49) $generated@@4))
(assert (= ($generated@@150 $generated@@49) $generated@@12))
(assert (= ($generated@@34 $generated@@53) $generated@@8))
(assert (= ($generated@@150 $generated@@53) $generated@@14))
(assert (= ($generated@@34 $generated@@52) $generated@@9))
(assert (= ($generated@@150 $generated@@52) $generated@@14))
(assert (= ($generated@@34 $generated@@57) $generated@@10))
(assert (= ($generated@@150 $generated@@57) $generated@@15))
(assert (= ($generated@@34 $generated@@56) $generated@@11))
(assert (= ($generated@@150 $generated@@56) $generated@@15))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@45 $generated@@37 $generated@@186 $generated@@53)  (or (= $generated@@186 $generated@@46) ($generated@@43 ($generated@@47 $generated@@186))))
 :pattern ( ($generated@@45 $generated@@37 $generated@@186 $generated@@53))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@45 $generated@@37 $generated@@188 $generated@@57)  (or (= $generated@@188 $generated@@46) ($generated@@187 ($generated@@47 $generated@@188))))
 :pattern ( ($generated@@45 $generated@@37 $generated@@188 $generated@@57))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> ($generated@@45 $generated@@37 $generated@@189 $generated@@53) ($generated@@45 $generated@@37 $generated@@189 ($generated@@39 $generated@@49)))
 :pattern ( ($generated@@45 $generated@@37 $generated@@189 $generated@@53))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! ($generated@@36 $generated@@19 $generated@@191 $generated $generated@@190)
 :pattern ( ($generated@@36 $generated@@19 $generated@@191 $generated $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ) (! ($generated@@45 $generated@@19 $generated@@192 $generated)
 :pattern ( ($generated@@45 $generated@@19 $generated@@192 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@198  (=> (and (= $generated@@193 ($generated@@102 $generated@@46 $generated@@194 $generated@@1 $generated@@195 $generated@@195 $generated@@88)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@195 $generated@@46)) (not true)))))
(let (($generated@@199  (=> (and ($generated@@140 $generated@@194) ($generated@@196 $generated@@194)) (=> (and (and ($generated@@45 $generated@@37 $generated@@195 $generated@@49) ($generated@@36 $generated@@37 $generated@@195 $generated@@49 $generated@@194)) (and (= 1 $generated@@197) (= (ControlFlow 0 3) 2))) $generated@@198))))
$generated@@199)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
