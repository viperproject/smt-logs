(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@T T@T) T@T)
(declare-fun $generated@@31 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@32 (T@T) T@T)
(declare-fun $generated@@33 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 () Int)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@U T@U) Bool)
(declare-fun $generated@@88 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@90 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@125 (T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@20) 3))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! (= ($generated@@19 $generated@@20 $generated@@23 $generated@@21 $generated@@24) ($generated@@19 $generated@@20 $generated@@23 $generated@@22 $generated@@24))
 :pattern ( ($generated@@19 $generated@@20 $generated@@23 $generated@@21 $generated@@24))
 :pattern ( ($generated@@19 $generated@@20 $generated@@23 $generated@@22 $generated@@24))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@34 T@T) ($generated@@35 T@T) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@27 $generated@@34 $generated@@35 ($generated@@31 $generated@@34 $generated@@35 $generated@@37 $generated@@38 $generated@@36) $generated@@38) $generated@@36)
 :weight 0
)) (forall (($generated@@39 T@T) ($generated@@40 T@T) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (or (= $generated@@43 $generated@@44) (= ($generated@@27 $generated@@39 $generated@@40 ($generated@@31 $generated@@39 $generated@@40 $generated@@42 $generated@@43 $generated@@41) $generated@@44) ($generated@@27 $generated@@39 $generated@@40 $generated@@42 $generated@@44)))
 :weight 0
))) (= ($generated@@3 $generated@@28) 4)) (= ($generated@@3 $generated@@29) 5)) (forall (($generated@@45 T@T) ($generated@@46 T@T) ) (= ($generated@@3 ($generated@@30 $generated@@45 $generated@@46)) 6))) (forall (($generated@@47 T@T) ($generated@@48 T@T) ) (! (= ($generated@@32 ($generated@@30 $generated@@47 $generated@@48)) $generated@@47)
 :pattern ( ($generated@@30 $generated@@47 $generated@@48))
))) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (! (= ($generated@@33 ($generated@@30 $generated@@49 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@30 $generated@@49 $generated@@50))
))))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@19 $generated@@20 $generated@@51 $generated@@22 $generated@@52)  (or (= $generated@@51 $generated@@25) ($generated@@8 ($generated@@26 $generated@@4 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@52 $generated@@51) $generated)))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@51 $generated@@22 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> ($generated@@53 $generated@@54 $generated@@55) (forall (($generated@@56 T@U) ) (!  (=> ($generated@@8 ($generated@@26 $generated@@4 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@54 $generated@@56) $generated))) ($generated@@8 ($generated@@26 $generated@@4 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@55 $generated@@56) $generated))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@55 $generated@@56) $generated))
)))
 :pattern ( ($generated@@53 $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (and (or ($generated@@58 $generated@@63) (and (< 2 $generated@@59) (and (and (or (not (= $generated@@63 $generated@@25)) (not true)) ($generated@@19 $generated@@20 $generated@@63 $generated@@21 $generated@@62)) ($generated@@60 $generated@@63)))) ($generated@@61 $generated@@62)) ($generated@@19 $generated@@20 ($generated@@57 $generated@@63) $generated@@21 $generated@@62))
 :pattern ( ($generated@@19 $generated@@20 ($generated@@57 $generated@@63) $generated@@21 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 ($generated@@26 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@26 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@71 $generated@@68) $generated@@69 $generated@@70) ($generated@@19 $generated@@71 $generated@@68 $generated@@69 $generated@@70))
 :pattern ( ($generated@@67 ($generated@@64 $generated@@71 $generated@@68) $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@53 $generated@@72 $generated@@73) (=> ($generated@@67 $generated@@74 $generated@@75 $generated@@72) ($generated@@67 $generated@@74 $generated@@75 $generated@@73)))
 :pattern ( ($generated@@53 $generated@@72 $generated@@73) ($generated@@67 $generated@@74 $generated@@75 $generated@@72))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (!  (=> ($generated@@53 $generated@@76 $generated@@77) (=> ($generated@@19 $generated@@80 $generated@@78 $generated@@79 $generated@@76) ($generated@@19 $generated@@80 $generated@@78 $generated@@79 $generated@@77)))
 :pattern ( ($generated@@53 $generated@@76 $generated@@77) ($generated@@19 $generated@@80 $generated@@78 $generated@@79 $generated@@76))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@81 $generated@@20 $generated@@82 $generated@@21)  (and ($generated@@81 $generated@@20 $generated@@82 $generated@@22) (or (not (= $generated@@82 $generated@@25)) (not true))))
 :pattern ( ($generated@@81 $generated@@20 $generated@@82 $generated@@21))
 :pattern ( ($generated@@81 $generated@@20 $generated@@82 $generated@@22))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or (not (= $generated@@83 $generated@@85)) (not true)) (=> (and ($generated@@53 $generated@@83 $generated@@84) ($generated@@53 $generated@@84 $generated@@85)) ($generated@@53 $generated@@83 $generated@@85)))
 :pattern ( ($generated@@53 $generated@@83 $generated@@84) ($generated@@53 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@26 $generated@@87 ($generated@@64 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@64 $generated@@87 $generated@@86))
)))
(assert  (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@88 $generated@@91 $generated@@92 $generated@@93 ($generated@@90 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@96 $generated@@97 $generated@@94) $generated@@96 $generated@@97) $generated@@94)
 :weight 0
)) (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@103 $generated@@105) (= ($generated@@88 $generated@@98 $generated@@99 $generated@@100 ($generated@@90 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104 $generated@@101) $generated@@105 $generated@@106) ($generated@@88 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@105 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@88 $generated@@107 $generated@@108 $generated@@109 ($generated@@90 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@88 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 Bool) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@8 ($generated@@88 $generated@@20 $generated@@28 $generated@@4 ($generated@@89 $generated@@116 $generated@@117 $generated@@118 $generated@@119) $generated@@120 $generated@@121))  (=> (and (or (not (= $generated@@120 $generated@@116)) (not true)) ($generated@@8 ($generated@@26 $generated@@4 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@117 $generated@@120) $generated@@118)))) $generated@@119))
 :pattern ( ($generated@@88 $generated@@20 $generated@@28 $generated@@4 ($generated@@89 $generated@@116 $generated@@117 $generated@@118 $generated@@119) $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> (or ($generated@@58 $generated@@122) (and (< 2 $generated@@59) (and (and (or (not (= $generated@@122 $generated@@25)) (not true)) ($generated@@81 $generated@@20 $generated@@122 $generated@@21)) ($generated@@60 $generated@@122)))) ($generated@@81 $generated@@20 ($generated@@57 $generated@@122) $generated@@21))
 :pattern ( ($generated@@57 $generated@@122))
)))
(assert (= ($generated@@123 $generated@@21) $generated@@0))
(assert (= ($generated@@124 $generated@@21) $generated@@2))
(assert (= ($generated@@123 $generated@@22) $generated@@1))
(assert (= ($generated@@124 $generated@@22) $generated@@2))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@81 $generated@@20 $generated@@127 $generated@@22)  (or (= $generated@@127 $generated@@25) ($generated@@125 ($generated@@126 $generated@@127))))
 :pattern ( ($generated@@81 $generated@@20 $generated@@127 $generated@@22))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@128 () T@U)
(declare-fun $generated@@129 () T@U)
(declare-fun $generated@@130 () T@U)
(declare-fun $generated@@131 () T@U)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@133 () T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 () Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () Bool)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@158  (=> (not ($generated@@60 $generated@@128)) (=> (and (and ($generated@@81 $generated@@20 $generated@@129 $generated@@21) ($generated@@19 $generated@@20 $generated@@129 $generated@@21 $generated@@130)) (and ($generated@@61 $generated@@131) ($generated@@132 $generated@@131))) (=> (and (and (and ($generated@@81 $generated@@20 $generated@@133 $generated@@21) ($generated@@19 $generated@@20 $generated@@133 $generated@@21 $generated@@131)) (forall (($generated@@159 T@U) ) (!  (=> (and (or (not (= $generated@@159 $generated@@25)) (not true)) ($generated@@8 ($generated@@26 $generated@@4 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@134 $generated@@159) $generated)))) (= ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@131 $generated@@159) ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@134 $generated@@159)))
 :pattern ( ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@131 $generated@@159))
))) (and ($generated@@53 $generated@@134 $generated@@131) (= (ControlFlow 0 17) (- 0 16)))) true)))))
(let (($generated@@160  (=> ($generated@@60 $generated@@128) (and (=> (= (ControlFlow 0 12) (- 0 15)) true) (and (=> (= (ControlFlow 0 12) (- 0 14)) (or (not (= $generated@@128 $generated@@25)) (not true))) (=> (or (not (= $generated@@128 $generated@@25)) (not true)) (=> ($generated@@67 ($generated@@64 $generated@@20 $generated@@128) $generated@@22 $generated@@134) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@60 $generated@@128)) (=> ($generated@@60 $generated@@128) (=> (and (and ($generated@@58 $generated@@128) ($generated@@58 $generated@@128)) (and (= $generated@@135 ($generated@@57 $generated@@128)) (= (ControlFlow 0 12) (- 0 11)))) true))))))))))
(let (($generated@@161  (=> (and (not ($generated@@60 $generated@@136)) (=> $generated@@137 (and ($generated@@81 $generated@@20 $generated@@138 $generated@@21) ($generated@@19 $generated@@20 $generated@@138 $generated@@21 $generated@@139)))) (=> (and (and (and ($generated@@81 $generated@@20 $generated@@140 $generated@@21) ($generated@@19 $generated@@20 $generated@@140 $generated@@21 $generated@@130)) (and ($generated@@61 $generated@@134) ($generated@@132 $generated@@134))) (and (and ($generated@@81 $generated@@20 $generated@@128 $generated@@21) ($generated@@19 $generated@@20 $generated@@128 $generated@@21 $generated@@134)) (and (forall (($generated@@162 T@U) ) (!  (=> (and (or (not (= $generated@@162 $generated@@25)) (not true)) ($generated@@8 ($generated@@26 $generated@@4 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@139 $generated@@162) $generated)))) (= ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@134 $generated@@162) ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@139 $generated@@162)))
 :pattern ( ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@134 $generated@@162))
)) ($generated@@53 $generated@@139 $generated@@134)))) (and (=> (= (ControlFlow 0 18) (- 0 20)) true) (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (not (= $generated@@128 $generated@@25)) (not true))) (=> (or (not (= $generated@@128 $generated@@25)) (not true)) (=> ($generated@@67 ($generated@@64 $generated@@20 $generated@@128) $generated@@22 $generated@@134) (=> (and ($generated@@141 $generated@@128) ($generated@@141 $generated@@128)) (and (=> (= (ControlFlow 0 18) 12) $generated@@160) (=> (= (ControlFlow 0 18) 17) $generated@@158)))))))))))
(let (($generated@@163  (=> ($generated@@60 $generated@@136) (and (=> (= (ControlFlow 0 7) (- 0 10)) true) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (not (= $generated@@136 $generated@@25)) (not true))) (=> (or (not (= $generated@@136 $generated@@25)) (not true)) (=> ($generated@@67 ($generated@@64 $generated@@20 $generated@@136) $generated@@22 $generated@@139) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@60 $generated@@136)) (=> ($generated@@60 $generated@@136) (=> (and (and ($generated@@58 $generated@@136) ($generated@@58 $generated@@136)) (and (= $generated@@142 ($generated@@57 $generated@@136)) (= (ControlFlow 0 7) (- 0 6)))) true))))))))))
(let (($generated@@164  (=> (and (not ($generated@@60 $generated@@143)) (=> $generated@@144 (and ($generated@@81 $generated@@20 $generated@@145 $generated@@21) ($generated@@19 $generated@@20 $generated@@145 $generated@@21 $generated@@146)))) (=> (and (and (and ($generated@@81 $generated@@20 $generated@@147 $generated@@21) ($generated@@19 $generated@@20 $generated@@147 $generated@@21 $generated@@130)) (and ($generated@@61 $generated@@139) ($generated@@132 $generated@@139))) (and (and ($generated@@81 $generated@@20 $generated@@136 $generated@@21) ($generated@@19 $generated@@20 $generated@@136 $generated@@21 $generated@@139)) (and (forall (($generated@@165 T@U) ) (!  (=> (and (or (not (= $generated@@165 $generated@@25)) (not true)) ($generated@@8 ($generated@@26 $generated@@4 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@146 $generated@@165) $generated)))) (= ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@139 $generated@@165) ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@146 $generated@@165)))
 :pattern ( ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@139 $generated@@165))
)) ($generated@@53 $generated@@146 $generated@@139)))) (and (=> (= (ControlFlow 0 21) (- 0 23)) true) (and (=> (= (ControlFlow 0 21) (- 0 22)) (or (not (= $generated@@136 $generated@@25)) (not true))) (=> (or (not (= $generated@@136 $generated@@25)) (not true)) (=> ($generated@@67 ($generated@@64 $generated@@20 $generated@@136) $generated@@22 $generated@@139) (=> (and ($generated@@141 $generated@@136) ($generated@@141 $generated@@136)) (and (=> (= (ControlFlow 0 21) 7) $generated@@163) (=> (= (ControlFlow 0 21) 18) $generated@@161)))))))))))
(let (($generated@@166  (=> ($generated@@60 $generated@@143) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@143 $generated@@25)) (not true))) (=> (or (not (= $generated@@143 $generated@@25)) (not true)) (=> ($generated@@67 ($generated@@64 $generated@@20 $generated@@143) $generated@@22 $generated@@146) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@60 $generated@@143)) (=> ($generated@@60 $generated@@143) (=> (and (and ($generated@@58 $generated@@143) ($generated@@58 $generated@@143)) (and (= $generated@@148 ($generated@@57 $generated@@143)) (= (ControlFlow 0 2) (- 0 1)))) true))))))))))
(let (($generated@@167  (=> (and (= $generated@@149 ($generated@@89 $generated@@25 $generated@@130 $generated false)) (=> $generated@@150 (and ($generated@@81 $generated@@20 $generated@@151 $generated@@21) ($generated@@19 $generated@@20 $generated@@151 $generated@@21 $generated@@130)))) (=> (and (and (and ($generated@@81 $generated@@20 $generated@@152 $generated@@21) ($generated@@19 $generated@@20 $generated@@152 $generated@@21 $generated@@130)) (and ($generated@@61 $generated@@146) ($generated@@132 $generated@@146))) (and (and ($generated@@81 $generated@@20 $generated@@143 $generated@@21) ($generated@@19 $generated@@20 $generated@@143 $generated@@21 $generated@@146)) (and (forall (($generated@@168 T@U) ) (!  (=> (and (or (not (= $generated@@168 $generated@@25)) (not true)) ($generated@@8 ($generated@@26 $generated@@4 ($generated@@27 $generated@@28 $generated@@29 ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@130 $generated@@168) $generated)))) (= ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@146 $generated@@168) ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@130 $generated@@168)))
 :pattern ( ($generated@@27 $generated@@20 ($generated@@30 $generated@@28 $generated@@29) $generated@@146 $generated@@168))
)) ($generated@@53 $generated@@130 $generated@@146)))) (and (=> (= (ControlFlow 0 24) (- 0 26)) true) (and (=> (= (ControlFlow 0 24) (- 0 25)) (or (not (= $generated@@143 $generated@@25)) (not true))) (=> (or (not (= $generated@@143 $generated@@25)) (not true)) (=> ($generated@@67 ($generated@@64 $generated@@20 $generated@@143) $generated@@22 $generated@@146) (=> (and ($generated@@141 $generated@@143) ($generated@@141 $generated@@143)) (and (=> (= (ControlFlow 0 24) 2) $generated@@166) (=> (= (ControlFlow 0 24) 21) $generated@@164)))))))))))
(let (($generated@@169  (=> (and (and ($generated@@61 $generated@@130) ($generated@@132 $generated@@130)) (=> $generated@@153 (and ($generated@@81 $generated@@20 $generated@@154 $generated@@21) ($generated@@19 $generated@@20 $generated@@154 $generated@@21 $generated@@130)))) (=> (and (and (and (=> $generated@@150 (and ($generated@@81 $generated@@20 $generated@@155 $generated@@21) ($generated@@19 $generated@@20 $generated@@155 $generated@@21 $generated@@130))) true) (and (=> $generated@@144 (and ($generated@@81 $generated@@20 $generated@@156 $generated@@21) ($generated@@19 $generated@@20 $generated@@156 $generated@@21 $generated@@130))) true)) (and (and (=> $generated@@137 (and ($generated@@81 $generated@@20 $generated@@157 $generated@@21) ($generated@@19 $generated@@20 $generated@@157 $generated@@21 $generated@@130))) true) (and (= 4 $generated@@59) (= (ControlFlow 0 27) 24)))) $generated@@167))))
$generated@@169)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
