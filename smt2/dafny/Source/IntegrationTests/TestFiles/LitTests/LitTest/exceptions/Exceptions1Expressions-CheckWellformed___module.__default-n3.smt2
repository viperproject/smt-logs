(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@U Int) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@44 (T@U) Int)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@65 (Int) T@U)
(declare-fun $generated@@71 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 () Int)
(declare-fun $generated@@81 (Bool Int T@U T@U) T@U)
(declare-fun $generated@@82 (Bool Int T@U T@U) Bool)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@132 (T@U) Int)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@T T@T) T@T)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (= ($generated@@9 $generated@@35) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 Int) ) (!  (=> (and (<= 0 $generated@@37) (< $generated@@37 ($generated@@32 $generated@@36))) (< ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@36 $generated@@37))) ($generated@@33 ($generated@@31 $generated@@36))))
 :pattern ( ($generated@@30 $generated@@36 $generated@@37) ($generated@@31 $generated@@36))
)))
(assert (forall (($generated@@43 T@U) ) (!  (=> (or ($generated@@39 $generated@@43) (and ($generated@@40 $generated@@35 $generated@@43 $generated@@41) ($generated@@42 $generated@@43))) ($generated@@40 $generated@@35 ($generated@@38 $generated@@43) $generated@@41))
 :pattern ( ($generated@@38 $generated@@43))
)))
(assert (forall (($generated@@49 T@U) ) (!  (=> (or ($generated@@46 ($generated@@45 $generated@@35 $generated@@49)) (and ($generated@@40 $generated@@35 $generated@@49 $generated@@41) (not ($generated@@14 ($generated@@45 $generated@@10 ($generated@@13 ($generated@@42 ($generated@@45 $generated@@35 $generated@@49)))))))) (= ($generated@@44 ($generated@@45 $generated@@35 $generated@@49)) ($generated@@47 ($generated@@48 ($generated@@45 $generated@@35 $generated@@49)))))
 :weight 3
 :pattern ( ($generated@@44 ($generated@@45 $generated@@35 $generated@@49)))
)))
(assert (= ($generated@@32 $generated@@50) 0))
(assert (forall (($generated@@51 Int) ) (! (= ($generated@@47 $generated@@51) $generated@@51)
 :pattern ( ($generated@@47 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@45 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@45 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> (or ($generated@@54 ($generated@@45 $generated@@35 $generated@@56)) ($generated@@40 $generated@@35 $generated@@56 $generated@@41)) (= ($generated@@42 ($generated@@45 $generated@@35 $generated@@56)) ($generated@@14 ($generated@@45 $generated@@10 ($generated@@13 ($generated@@55 ($generated@@45 $generated@@35 $generated@@56)))))))
 :weight 3
 :pattern ( ($generated@@42 ($generated@@45 $generated@@35 $generated@@56)))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@57 $generated@@59) (= ($generated@@58 $generated@@59) $generated@@5))
 :pattern ( ($generated@@57 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@55 $generated@@60) (= ($generated@@58 $generated@@60) $generated@@6))
 :pattern ( ($generated@@55 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 ($generated@@34 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@34 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> (or ($generated@@39 ($generated@@45 $generated@@35 $generated@@64)) (and ($generated@@40 $generated@@35 $generated@@64 $generated@@41) ($generated@@14 ($generated@@45 $generated@@10 ($generated@@13 ($generated@@42 ($generated@@45 $generated@@35 $generated@@64))))))) (= ($generated@@38 ($generated@@45 $generated@@35 $generated@@64)) ($generated@@45 $generated@@35 $generated@@64)))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@45 $generated@@35 $generated@@64)))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@57 $generated@@66) (exists (($generated@@67 Int) ) (= $generated@@66 ($generated@@65 $generated@@67))))
 :pattern ( ($generated@@57 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@55 $generated@@68) (exists (($generated@@69 T@U) ) (= $generated@@68 ($generated@@31 $generated@@69))))
 :pattern ( ($generated@@55 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@40 $generated@@11 $generated@@70 $generated@@27) (<= ($generated@@47 0) ($generated@@16 $generated@@70)))
 :pattern ( ($generated@@40 $generated@@11 $generated@@70 $generated@@27))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@61 $generated@@75 $generated@@72) $generated@@73 $generated@@74) ($generated@@26 $generated@@75 $generated@@72 $generated@@73 $generated@@74))
 :pattern ( ($generated@@71 ($generated@@61 $generated@@75 $generated@@72) $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@76 $generated@@77 $generated@@27) (and (= ($generated@@61 $generated@@11 ($generated@@34 $generated@@11 $generated@@77)) $generated@@77) ($generated@@40 $generated@@11 ($generated@@34 $generated@@11 $generated@@77) $generated@@27)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@27))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@76 $generated@@78 $generated@@41) (and (= ($generated@@61 $generated@@35 ($generated@@34 $generated@@35 $generated@@78)) $generated@@78) ($generated@@40 $generated@@35 ($generated@@34 $generated@@35 $generated@@78) $generated@@41)))
 :pattern ( ($generated@@76 $generated@@78 $generated@@41))
)))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@40 $generated@@35 ($generated@@65 $generated@@79) $generated@@41) ($generated@@40 $generated@@11 ($generated@@15 $generated@@79) $generated@@27))
 :pattern ( ($generated@@40 $generated@@35 ($generated@@65 $generated@@79) $generated@@41))
)))
(assert  (=> (<= 2 $generated@@80) (forall (($generated@@83 Bool) ($generated@@84 Int) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@82 $generated@@83 $generated@@84 $generated@@85 $generated@@86) (and (< 2 $generated@@80) (and (and (<= ($generated@@47 0) $generated@@84) ($generated@@40 $generated@@35 $generated@@85 $generated@@41)) ($generated@@40 $generated@@35 $generated@@86 $generated@@41)))) (and (let (($generated@@87 (let (($generated@@88 (ite $generated@@83 $generated@@85 $generated@@86)))
$generated@@88)))
 (and (and ($generated@@54 $generated@@87) (=> ($generated@@42 $generated@@87) ($generated@@39 $generated@@87))) (=> (not ($generated@@42 $generated@@87)) (and ($generated@@46 $generated@@87) (let (($generated@@89 (let (($generated@@90 (ite $generated@@83 $generated@@85 $generated@@86)))
$generated@@90)))
 (and (and ($generated@@54 $generated@@89) (=> ($generated@@42 $generated@@89) ($generated@@39 $generated@@89))) (=> (not ($generated@@42 $generated@@89)) ($generated@@46 $generated@@89)))))))) (= ($generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@86) (let (($generated@@91 (let (($generated@@92 (ite $generated@@83 $generated@@85 $generated@@86)))
$generated@@92)))
(ite ($generated@@42 $generated@@91) ($generated@@38 $generated@@91) (let (($generated@@93 (let (($generated@@94 (ite $generated@@83 $generated@@85 $generated@@86)))
$generated@@94)))
(ite ($generated@@42 $generated@@93) ($generated@@38 $generated@@93) $generated@@86)))))))
 :pattern ( ($generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@86))
))))
(assert  (=> (<= 2 $generated@@80) (forall (($generated@@95 T@U) ($generated@@96 Int) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or ($generated@@82 ($generated@@14 ($generated@@45 $generated@@10 $generated@@95)) ($generated@@47 $generated@@96) ($generated@@45 $generated@@35 $generated@@97) ($generated@@45 $generated@@35 $generated@@98)) (and (< 2 $generated@@80) (and (and (<= ($generated@@47 0) $generated@@96) ($generated@@40 $generated@@35 $generated@@97 $generated@@41)) ($generated@@40 $generated@@35 $generated@@98 $generated@@41)))) (and (let (($generated@@99 (let (($generated@@100 (ite ($generated@@14 $generated@@95) $generated@@97 $generated@@98)))
$generated@@100)))
 (and (and ($generated@@54 $generated@@99) (=> ($generated@@42 $generated@@99) ($generated@@39 $generated@@99))) (=> (not ($generated@@42 $generated@@99)) (and ($generated@@46 $generated@@99) (let (($generated@@101 (let (($generated@@102 (ite ($generated@@14 $generated@@95) $generated@@97 $generated@@98)))
$generated@@102)))
 (and (and ($generated@@54 $generated@@101) (=> ($generated@@42 $generated@@101) ($generated@@39 $generated@@101))) (=> (not ($generated@@42 $generated@@101)) ($generated@@46 $generated@@101)))))))) (= ($generated@@81 ($generated@@14 ($generated@@45 $generated@@10 $generated@@95)) ($generated@@47 $generated@@96) ($generated@@45 $generated@@35 $generated@@97) ($generated@@45 $generated@@35 $generated@@98)) (let (($generated@@103 (let (($generated@@104 (ite ($generated@@14 $generated@@95) $generated@@97 $generated@@98)))
$generated@@104)))
(ite ($generated@@42 $generated@@103) ($generated@@38 $generated@@103) (let (($generated@@105 (let (($generated@@106 (ite ($generated@@14 $generated@@95) $generated@@97 $generated@@98)))
$generated@@106)))
(ite ($generated@@42 $generated@@105) ($generated@@38 $generated@@105) ($generated@@45 $generated@@35 $generated@@98))))))))
 :weight 3
 :pattern ( ($generated@@81 ($generated@@14 ($generated@@45 $generated@@10 $generated@@95)) ($generated@@47 $generated@@96) ($generated@@45 $generated@@35 $generated@@97) ($generated@@45 $generated@@35 $generated@@98)))
))))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@40 $generated@@35 $generated@@107 $generated@@41) (or ($generated@@57 $generated@@107) ($generated@@55 $generated@@107)))
 :pattern ( ($generated@@55 $generated@@107) ($generated@@40 $generated@@35 $generated@@107 $generated@@41))
 :pattern ( ($generated@@57 $generated@@107) ($generated@@40 $generated@@35 $generated@@107 $generated@@41))
)))
(assert (= ($generated@@9 $generated@@108) 4))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@76 $generated@@109 $generated) (and (= ($generated@@61 $generated@@108 ($generated@@34 $generated@@108 $generated@@109)) $generated@@109) ($generated@@40 $generated@@108 ($generated@@34 $generated@@108 $generated@@109) $generated)))
 :pattern ( ($generated@@76 $generated@@109 $generated))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> (or ($generated@@46 $generated@@110) (and ($generated@@40 $generated@@35 $generated@@110 $generated@@41) (not ($generated@@42 $generated@@110)))) (= ($generated@@44 $generated@@110) ($generated@@48 $generated@@110)))
 :pattern ( ($generated@@44 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> (or ($generated@@46 $generated@@111) (and ($generated@@40 $generated@@35 $generated@@111 $generated@@41) (not ($generated@@42 $generated@@111)))) (<= ($generated@@47 0) ($generated@@44 $generated@@111)))
 :pattern ( ($generated@@44 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@76 ($generated@@61 $generated@@114 $generated@@112) $generated@@113) ($generated@@40 $generated@@114 $generated@@112 $generated@@113))
 :pattern ( ($generated@@76 ($generated@@61 $generated@@114 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (<= 0 ($generated@@32 $generated@@115))
 :pattern ( ($generated@@32 $generated@@115))
)))
(assert (= ($generated@@9 $generated@@116) 5))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@26 $generated@@116 $generated@@118 ($generated@@117 $generated@@119) $generated@@120) (forall (($generated@@121 Int) ) (!  (=> (and (<= 0 $generated@@121) (< $generated@@121 ($generated@@32 $generated@@118))) ($generated@@71 ($generated@@30 $generated@@118 $generated@@121) $generated@@119 $generated@@120))
 :pattern ( ($generated@@30 $generated@@118 $generated@@121))
)))
 :pattern ( ($generated@@26 $generated@@116 $generated@@118 ($generated@@117 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@117 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@117 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@25 ($generated@@117 $generated@@124)) $generated@@1)
 :pattern ( ($generated@@117 $generated@@124))
)))
(assert (forall (($generated@@125 Int) ) (! (= ($generated@@58 ($generated@@65 $generated@@125)) $generated@@5)
 :pattern ( ($generated@@65 $generated@@125))
)))
(assert (forall (($generated@@126 Int) ) (! (= ($generated@@48 ($generated@@65 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@65 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@58 ($generated@@31 $generated@@127)) $generated@@6)
 :pattern ( ($generated@@31 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@31 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@31 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@34 $generated@@131 ($generated@@61 $generated@@131 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@61 $generated@@131 $generated@@130))
)))
(assert (forall (($generated@@133 T@U) ) (! (< ($generated@@132 $generated@@133) ($generated@@33 ($generated@@31 $generated@@133)))
 :pattern ( ($generated@@31 $generated@@133))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@134 $generated@@145 $generated@@146 $generated@@147 ($generated@@141 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@134 $generated@@152 $generated@@153 $generated@@154 ($generated@@141 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@134 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@134 $generated@@161 $generated@@162 $generated@@163 ($generated@@141 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))) (= ($generated@@9 $generated@@135) 6)) (= ($generated@@9 $generated@@136) 7)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@138 $generated@@170 $generated@@171 ($generated@@142 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@174) $generated@@172)
 :weight 0
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@179 $generated@@180) (= ($generated@@138 $generated@@175 $generated@@176 ($generated@@142 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@177) $generated@@180) ($generated@@138 $generated@@175 $generated@@176 $generated@@178 $generated@@180)))
 :weight 0
))) (= ($generated@@9 $generated@@139) 8)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@9 ($generated@@140 $generated@@181 $generated@@182)) 9))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@143 ($generated@@140 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@140 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@144 ($generated@@140 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@140 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@14 ($generated@@134 $generated@@135 $generated@@136 $generated@@10 ($generated@@137 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@14 ($generated@@34 $generated@@10 ($generated@@138 $generated@@136 $generated@@139 ($generated@@138 $generated@@135 ($generated@@140 $generated@@136 $generated@@139) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136 $generated@@10 ($generated@@137 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert  (=> (<= 2 $generated@@80) (forall (($generated@@193 Bool) ($generated@@194 Int) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (or ($generated@@82 $generated@@193 $generated@@194 $generated@@195 $generated@@196) (and (< 2 $generated@@80) (and (and (<= ($generated@@47 0) $generated@@194) ($generated@@40 $generated@@35 $generated@@195 $generated@@41)) ($generated@@40 $generated@@35 $generated@@196 $generated@@41)))) ($generated@@40 $generated@@35 ($generated@@81 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@41))
 :pattern ( ($generated@@81 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@76 $generated@@197 ($generated@@117 $generated@@198)) (and (= ($generated@@61 $generated@@116 ($generated@@34 $generated@@116 $generated@@197)) $generated@@197) ($generated@@40 $generated@@116 ($generated@@34 $generated@@116 $generated@@197) ($generated@@117 $generated@@198))))
 :pattern ( ($generated@@76 $generated@@197 ($generated@@117 $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@199 $generated@@201) ($generated@@40 $generated@@35 $generated@@200 $generated@@41)) ($generated@@26 $generated@@35 $generated@@200 $generated@@41 $generated@@201))
 :pattern ( ($generated@@26 $generated@@35 $generated@@200 $generated@@41 $generated@@201))
)))
(assert (= ($generated@@25 $generated@@27) $generated@@3))
(assert (= ($generated@@202 $generated@@27) $generated@@7))
(assert (= ($generated@@25 $generated@@41) $generated@@4))
(assert (= ($generated@@202 $generated@@41) $generated@@8))
(assert (forall (($generated@@203 T@U) ) (! (= ($generated@@40 $generated@@35 ($generated@@31 $generated@@203) $generated@@41) ($generated@@40 $generated@@116 $generated@@203 ($generated@@117 $generated)))
 :pattern ( ($generated@@40 $generated@@35 ($generated@@31 $generated@@203) $generated@@41))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and ($generated@@199 $generated@@205) (and ($generated@@55 $generated@@204) ($generated@@26 $generated@@35 $generated@@204 $generated@@41 $generated@@205))) ($generated@@26 $generated@@116 ($generated@@128 $generated@@204) ($generated@@117 $generated) $generated@@205))
 :pattern ( ($generated@@26 $generated@@116 ($generated@@128 $generated@@204) ($generated@@117 $generated) $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and ($generated@@199 $generated@@207) (and ($generated@@57 $generated@@206) ($generated@@26 $generated@@35 $generated@@206 $generated@@41 $generated@@207))) ($generated@@26 $generated@@11 ($generated@@15 ($generated@@48 $generated@@206)) $generated@@27 $generated@@207))
 :pattern ( ($generated@@26 $generated@@11 ($generated@@15 ($generated@@48 $generated@@206)) $generated@@27 $generated@@207))
)))
(assert (forall (($generated@@208 Int) ) (! (= ($generated@@61 $generated@@11 ($generated@@15 ($generated@@47 $generated@@208))) ($generated@@45 $generated@@139 ($generated@@61 $generated@@11 ($generated@@15 $generated@@208))))
 :pattern ( ($generated@@61 $generated@@11 ($generated@@15 ($generated@@47 $generated@@208))))
)))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@65 ($generated@@47 $generated@@209)) ($generated@@45 $generated@@35 ($generated@@65 $generated@@209)))
 :pattern ( ($generated@@65 ($generated@@47 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@31 ($generated@@45 $generated@@116 $generated@@210)) ($generated@@45 $generated@@35 ($generated@@31 $generated@@210)))
 :pattern ( ($generated@@31 ($generated@@45 $generated@@116 $generated@@210)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@T) ) (! (= ($generated@@61 $generated@@212 ($generated@@45 $generated@@212 $generated@@211)) ($generated@@45 $generated@@139 ($generated@@61 $generated@@212 $generated@@211)))
 :pattern ( ($generated@@61 $generated@@212 ($generated@@45 $generated@@212 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ) (!  (=> (= ($generated@@32 $generated@@213) 0) (= $generated@@213 $generated@@50))
 :pattern ( ($generated@@32 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ) (!  (=> (or ($generated@@54 $generated@@214) ($generated@@40 $generated@@35 $generated@@214 $generated@@41)) (= ($generated@@42 $generated@@214) ($generated@@55 $generated@@214)))
 :pattern ( ($generated@@42 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! ($generated@@26 $generated@@108 $generated@@216 $generated $generated@@215)
 :pattern ( ($generated@@26 $generated@@108 $generated@@216 $generated $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> (or ($generated@@39 $generated@@217) (and ($generated@@40 $generated@@35 $generated@@217 $generated@@41) ($generated@@42 $generated@@217))) (= ($generated@@38 $generated@@217) $generated@@217))
 :pattern ( ($generated@@38 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@40 $generated@@116 $generated@@218 ($generated@@117 $generated@@219)) (forall (($generated@@220 Int) ) (!  (=> (and (<= 0 $generated@@220) (< $generated@@220 ($generated@@32 $generated@@218))) ($generated@@76 ($generated@@30 $generated@@218 $generated@@220) $generated@@219))
 :pattern ( ($generated@@30 $generated@@218 $generated@@220))
)))
 :pattern ( ($generated@@40 $generated@@116 $generated@@218 ($generated@@117 $generated@@219)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 Int) ) (!  (=> (and (<= 0 $generated@@222) (< $generated@@222 ($generated@@32 $generated@@221))) (< ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@221 $generated@@222))) ($generated@@132 $generated@@221)))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@221 $generated@@222))))
)))
(assert (forall (($generated@@223 T@U) ) (! ($generated@@40 $generated@@108 $generated@@223 $generated)
 :pattern ( ($generated@@40 $generated@@108 $generated@@223 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () Bool)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@244  (=> (not ($generated@@42 $generated@@224)) (=> (and ($generated@@71 ($generated@@61 $generated@@35 $generated@@224) $generated@@41 $generated@@225) (= (ControlFlow 0 7) (- 0 6))) (not ($generated@@42 $generated@@224))))))
(let (($generated@@245  (=> ($generated@@42 $generated@@224) (=> (and (and ($generated@@71 ($generated@@61 $generated@@35 $generated@@224) $generated@@41 $generated@@225) (= (ControlFlow 0 5) (- 0 4))) ($generated@@54 $generated@@224)) (or ($generated@@42 $generated@@224) ($generated@@55 $generated@@224))))))
(let (($generated@@246  (=> (and (= $generated@@226 $generated@@227) (= $generated@@228 $generated@@226)) (=> (and (and ($generated@@40 $generated@@35 $generated@@228 $generated@@41) (= $generated@@224 $generated@@228)) (and ($generated@@71 ($generated@@61 $generated@@35 $generated@@224) $generated@@41 $generated@@225) ($generated@@54 $generated@@224))) (and (=> (= (ControlFlow 0 8) 5) $generated@@245) (=> (= (ControlFlow 0 8) 7) $generated@@244))))))
(let (($generated@@247  (=> (and (and (not $generated@@229) (= $generated@@227 $generated@@230)) (and ($generated@@40 $generated@@35 $generated@@227 $generated@@41) (= (ControlFlow 0 10) 8))) $generated@@246)))
(let (($generated@@248  (=> (and (and $generated@@229 (= $generated@@227 $generated@@231)) (and ($generated@@40 $generated@@35 $generated@@227 $generated@@41) (= (ControlFlow 0 9) 8))) $generated@@246)))
(let (($generated@@249  (=> (and (not ($generated@@42 $generated@@232)) ($generated@@71 ($generated@@61 $generated@@35 $generated@@232) $generated@@41 $generated@@225)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (not ($generated@@42 $generated@@232))) (=> (not ($generated@@42 $generated@@232)) (=> (and (and (and ($generated@@46 $generated@@232) (= $generated@@233 ($generated@@44 $generated@@232))) (and ($generated@@46 $generated@@232) ($generated@@40 $generated@@11 ($generated@@15 $generated@@233) $generated@@27))) (and (and (= $generated@@234 $generated@@233) (= $generated@@235 $generated@@234)) (and ($generated@@40 $generated@@11 ($generated@@15 $generated@@235) $generated@@27) (= $generated@@236 $generated@@235)))) (and (=> (= (ControlFlow 0 11) 9) $generated@@248) (=> (= (ControlFlow 0 11) 10) $generated@@247))))))))
(let (($generated@@250  (=> ($generated@@42 $generated@@232) (=> (and (and ($generated@@71 ($generated@@61 $generated@@35 $generated@@232) $generated@@41 $generated@@225) (= (ControlFlow 0 3) (- 0 2))) ($generated@@54 $generated@@232)) (or ($generated@@42 $generated@@232) ($generated@@55 $generated@@232))))))
(let (($generated@@251  (=> (and (= $generated@@237 $generated@@238) (= $generated@@239 $generated@@237)) (=> (and (and ($generated@@40 $generated@@35 $generated@@239 $generated@@41) (= $generated@@232 $generated@@239)) (and ($generated@@71 ($generated@@61 $generated@@35 $generated@@232) $generated@@41 $generated@@225) ($generated@@54 $generated@@232))) (and (=> (= (ControlFlow 0 13) 3) $generated@@250) (=> (= (ControlFlow 0 13) 11) $generated@@249))))))
(let (($generated@@252  (=> (and (and (not $generated@@229) (= $generated@@238 $generated@@230)) (and ($generated@@40 $generated@@35 $generated@@238 $generated@@41) (= (ControlFlow 0 15) 13))) $generated@@251)))
(let (($generated@@253  (=> (and (and $generated@@229 (= $generated@@238 $generated@@231)) (and ($generated@@40 $generated@@35 $generated@@238 $generated@@41) (= (ControlFlow 0 14) 13))) $generated@@251)))
(let (($generated@@254 true))
(let (($generated@@255  (=> (= $generated@@240 ($generated@@137 $generated@@241 $generated@@225 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 16) 1) $generated@@254) (=> (= (ControlFlow 0 16) 14) $generated@@253)) (=> (= (ControlFlow 0 16) 15) $generated@@252)))))
(let (($generated@@256  (=> (and (and (and ($generated@@199 $generated@@225) ($generated@@242 $generated@@225)) (<= ($generated@@47 0) $generated@@243)) (and (and ($generated@@40 $generated@@35 $generated@@231 $generated@@41) ($generated@@40 $generated@@35 $generated@@230 $generated@@41)) (and (= 2 $generated@@80) (= (ControlFlow 0 17) 16)))) $generated@@255)))
$generated@@256))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
