(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@T T@T) T@T)
(declare-fun $generated@@33 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@34 (T@T) T@T)
(declare-fun $generated@@35 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@59 (Int) Int)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@T T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@86 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@88 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@127 (T@U) Bool)
(declare-fun $generated@@128 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated@@20) 0))
(assert (= ($generated@@3 $generated@@22) 3))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ) (! (= ($generated@@21 $generated@@22 $generated@@25 $generated@@23 $generated@@26) ($generated@@21 $generated@@22 $generated@@25 $generated@@24 $generated@@26))
 :pattern ( ($generated@@21 $generated@@22 $generated@@25 $generated@@23 $generated@@26))
 :pattern ( ($generated@@21 $generated@@22 $generated@@25 $generated@@24 $generated@@26))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@36 T@T) ($generated@@37 T@T) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@37 ($generated@@33 $generated@@36 $generated@@37 $generated@@39 $generated@@40 $generated@@38) $generated@@40) $generated@@38)
 :weight 0
)) (forall (($generated@@41 T@T) ($generated@@42 T@T) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (or (= $generated@@45 $generated@@46) (= ($generated@@29 $generated@@41 $generated@@42 ($generated@@33 $generated@@41 $generated@@42 $generated@@44 $generated@@45 $generated@@43) $generated@@46) ($generated@@29 $generated@@41 $generated@@42 $generated@@44 $generated@@46)))
 :weight 0
))) (= ($generated@@3 $generated@@30) 4)) (= ($generated@@3 $generated@@31) 5)) (forall (($generated@@47 T@T) ($generated@@48 T@T) ) (= ($generated@@3 ($generated@@32 $generated@@47 $generated@@48)) 6))) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (! (= ($generated@@34 ($generated@@32 $generated@@49 $generated@@50)) $generated@@49)
 :pattern ( ($generated@@32 $generated@@49 $generated@@50))
))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (! (= ($generated@@35 ($generated@@32 $generated@@51 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@32 $generated@@51 $generated@@52))
))))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@21 $generated@@22 $generated@@53 $generated@@24 $generated@@54)  (or (= $generated@@53 $generated@@27) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@54 $generated@@53) $generated)))))
 :pattern ( ($generated@@21 $generated@@22 $generated@@53 $generated@@24 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> ($generated@@55 $generated@@56 $generated@@57) (forall (($generated@@58 T@U) ) (!  (=> ($generated@@8 ($generated@@28 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@56 $generated@@58) $generated))) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@57 $generated@@58) $generated))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@57 $generated@@58) $generated))
)))
 :pattern ( ($generated@@55 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@60 Int) ) (! (= ($generated@@59 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 ($generated@@28 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@28 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@19 ($generated@@67 $generated@@68 $generated@@69)) (+ 1 ($generated@@19 $generated@@68)))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (!  (=> ($generated@@55 $generated@@70 $generated@@71) (=> ($generated@@21 $generated@@74 $generated@@72 $generated@@73 $generated@@70) ($generated@@21 $generated@@74 $generated@@72 $generated@@73 $generated@@71)))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71) ($generated@@21 $generated@@74 $generated@@72 $generated@@73 $generated@@70))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@75 $generated@@22 $generated@@76 $generated@@23)  (and ($generated@@75 $generated@@22 $generated@@76 $generated@@24) (or (not (= $generated@@76 $generated@@27)) (not true))))
 :pattern ( ($generated@@75 $generated@@22 $generated@@76 $generated@@23))
 :pattern ( ($generated@@75 $generated@@22 $generated@@76 $generated@@24))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or (not (= $generated@@77 $generated@@79)) (not true)) (=> (and ($generated@@55 $generated@@77 $generated@@78) ($generated@@55 $generated@@78 $generated@@79)) ($generated@@55 $generated@@77 $generated@@79)))
 :pattern ( ($generated@@55 $generated@@77 $generated@@78) ($generated@@55 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ) (! (<= 0 ($generated@@19 $generated@@80))
 :pattern ( ($generated@@19 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@28 $generated@@82 ($generated@@64 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@64 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@85 Int) ) (!  (=> (or (and (<= 0 $generated@@85) (< $generated@@85 55296)) (and (<= 57344 $generated@@85) (< $generated@@85 1114112))) (= ($generated@@84 ($generated@@83 $generated@@85)) $generated@@85))
 :pattern ( ($generated@@83 $generated@@85))
)))
(assert  (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@86 $generated@@89 $generated@@90 $generated@@91 ($generated@@88 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@94 $generated@@95 $generated@@92) $generated@@94 $generated@@95) $generated@@92)
 :weight 0
)) (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (or (= $generated@@101 $generated@@103) (= ($generated@@86 $generated@@96 $generated@@97 $generated@@98 ($generated@@88 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@103 $generated@@104) ($generated@@86 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@103 $generated@@104)))
 :weight 0
)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@111 $generated@@113) (= ($generated@@86 $generated@@105 $generated@@106 $generated@@107 ($generated@@88 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@112 $generated@@113) ($generated@@86 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@112 $generated@@113)))
 :weight 0
)))))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 Bool) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@8 ($generated@@86 $generated@@22 $generated@@30 $generated@@4 ($generated@@87 $generated@@114 $generated@@115 $generated@@116 $generated@@117) $generated@@118 $generated@@119))  (=> (and (or (not (= $generated@@118 $generated@@114)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@115 $generated@@118) $generated@@116)))) $generated@@117))
 :pattern ( ($generated@@86 $generated@@22 $generated@@30 $generated@@4 ($generated@@87 $generated@@114 $generated@@115 $generated@@116 $generated@@117) $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (and (= ($generated@@120 ($generated@@67 $generated@@122 $generated@@123)) $generated@@122) (= ($generated@@121 ($generated@@67 $generated@@122 $generated@@123)) $generated@@123))
 :pattern ( ($generated@@67 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (!  (and (= ($generated@@83 ($generated@@84 $generated@@124)) $generated@@124) (or (and (<= 0 ($generated@@84 $generated@@124)) (< ($generated@@84 $generated@@124) 55296)) (and (<= 57344 ($generated@@84 $generated@@124)) (< ($generated@@84 $generated@@124) 1114112))))
 :pattern ( ($generated@@84 $generated@@124))
)))
(assert (= ($generated@@125 $generated@@23) $generated@@0))
(assert (= ($generated@@126 $generated@@23) $generated@@2))
(assert (= ($generated@@125 $generated@@24) $generated@@1))
(assert (= ($generated@@126 $generated@@24) $generated@@2))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@75 $generated@@22 $generated@@129 $generated@@24)  (or (= $generated@@129 $generated@@27) ($generated@@127 ($generated@@128 $generated@@129))))
 :pattern ( ($generated@@75 $generated@@22 $generated@@129 $generated@@24))
)))
(assert (forall (($generated@@130 Int) ) (! (= ($generated@@64 $generated@@5 ($generated@@9 ($generated@@59 $generated@@130))) ($generated@@61 $generated@@31 ($generated@@64 $generated@@5 ($generated@@9 $generated@@130))))
 :pattern ( ($generated@@64 $generated@@5 ($generated@@9 ($generated@@59 $generated@@130))))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@64 $generated@@132 ($generated@@61 $generated@@132 $generated@@131)) ($generated@@61 $generated@@31 ($generated@@64 $generated@@132 $generated@@131)))
 :pattern ( ($generated@@64 $generated@@132 ($generated@@61 $generated@@132 $generated@@131)))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= ($generated@@19 $generated@@133) 0) (= $generated@@133 $generated@@20))
 :pattern ( ($generated@@19 $generated@@133))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@134 () Bool)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () Int)
(assert  (and (= ($generated@@3 $generated@@136) 7) (= ($generated@@3 $generated@@137) 8)))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@152  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@153  (=> (and (not $generated@@134) (= $generated@@135 ($generated@@61 $generated@@136 ($generated@@67 ($generated@@67 ($generated@@67 ($generated@@67 ($generated@@67 ($generated@@67 ($generated@@67 ($generated@@67 $generated@@20 ($generated@@64 $generated@@137 ($generated@@83 98))) ($generated@@64 $generated@@137 ($generated@@83 97))) ($generated@@64 $generated@@137 ($generated@@83 100))) ($generated@@64 $generated@@137 ($generated@@83 32))) ($generated@@64 $generated@@137 ($generated@@83 108))) ($generated@@64 $generated@@137 ($generated@@83 117))) ($generated@@64 $generated@@137 ($generated@@83 99))) ($generated@@64 $generated@@137 ($generated@@83 107)))))) (=> (and (and ($generated@@75 $generated@@22 $generated@@138 $generated@@23) ($generated@@21 $generated@@22 $generated@@138 $generated@@23 $generated@@139)) (and ($generated@@140 $generated@@141) ($generated@@142 $generated@@141))) (=> (and (and (and ($generated@@75 $generated@@22 $generated@@143 $generated@@23) ($generated@@21 $generated@@22 $generated@@143 $generated@@23 $generated@@141)) (forall (($generated@@154 T@U) ) (!  (=> (and (or (not (= $generated@@154 $generated@@27)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@139 $generated@@154) $generated)))) (= ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@141 $generated@@154) ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@139 $generated@@154)))
 :pattern ( ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@141 $generated@@154))
))) (and ($generated@@55 $generated@@139 $generated@@141) (= (ControlFlow 0 4) 2))) $generated@@152)))))
(let (($generated@@155  (=> $generated@@134 (=> (and (and ($generated@@75 $generated@@22 $generated@@144 $generated@@23) ($generated@@21 $generated@@22 $generated@@144 $generated@@23 $generated@@139)) (and ($generated@@140 $generated@@145) ($generated@@142 $generated@@145))) (=> (and (and (and ($generated@@75 $generated@@22 $generated@@146 $generated@@23) ($generated@@21 $generated@@22 $generated@@146 $generated@@23 $generated@@145)) (forall (($generated@@156 T@U) ) (!  (=> (and (or (not (= $generated@@156 $generated@@27)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@139 $generated@@156) $generated)))) (= ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@145 $generated@@156) ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@139 $generated@@156)))
 :pattern ( ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@145 $generated@@156))
))) (and ($generated@@55 $generated@@139 $generated@@145) (= (ControlFlow 0 3) 2))) $generated@@152)))))
(let (($generated@@157  (=> (= $generated@@147 ($generated@@87 $generated@@27 $generated@@139 $generated false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@155) (=> (= (ControlFlow 0 5) 4) $generated@@153)))))
(let (($generated@@158  (=> (and ($generated@@140 $generated@@139) ($generated@@142 $generated@@139)) (=> (and (and (<= ($generated@@59 0) $generated@@148) (=> $generated@@149 (and ($generated@@75 $generated@@22 $generated@@150 $generated@@23) ($generated@@21 $generated@@22 $generated@@150 $generated@@23 $generated@@139)))) (and (= 3 $generated@@151) (= (ControlFlow 0 6) 5))) $generated@@157))))
$generated@@158))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
