(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@69 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T T@T) T@T)
(declare-fun $generated@@73 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@103 (T@U) Bool)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@120 (T@U T@U) Bool)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@12 $generated@@33) 3))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@41 T@U) ) (!  (=> (or ($generated@@30 $generated@@41) (and (< 2 $generated@@28) (and (and (or (not (= $generated@@41 $generated@@31)) (not true)) ($generated@@32 $generated@@33 $generated@@41 $generated@@34)) (not ($generated@@35 $generated@@41))))) (and ($generated@@36 $generated@@37) (= ($generated@@29 $generated@@41) ($generated@@38 ($generated@@19 ($generated@@39 $generated@@14 ($generated@@40 $generated@@37)))))))
 :pattern ( ($generated@@29 $generated@@41))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! ($generated@@42 $generated@@14 $generated@@43 $generated@@37 $generated@@44)
 :pattern ( ($generated@@42 $generated@@14 $generated@@43 $generated@@37 $generated@@44))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (and (or ($generated@@36 $generated@@49) (and (< 1 $generated@@28) ($generated@@17 ($generated@@46 $generated@@13 ($generated@@16 false))))) ($generated@@47 $generated@@48)) ($generated@@45 ($generated@@40 $generated@@49) $generated@@49 $generated@@48))
 :pattern ( ($generated@@45 ($generated@@40 $generated@@49) $generated@@49 $generated@@48))
))))
(assert ($generated@@50 $generated@@51))
(assert (= ($generated@@52 $generated@@53) $generated@@3))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@55 $generated@@51)  (or (= $generated@@55 $generated@@31) (= ($generated@@54 $generated@@55) $generated@@51)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@55 $generated@@51))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (and ($generated@@45 $generated@@57 $generated@@51 $generated@@58) ($generated@@47 $generated@@58)) ($generated@@45 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@45 $generated@@57 $generated@@51 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@42 $generated@@33 $generated@@60 $generated@@59 $generated@@61) ($generated@@42 $generated@@33 $generated@@60 $generated@@56 $generated@@61))
 :pattern ( ($generated@@42 $generated@@33 $generated@@60 $generated@@59 $generated@@61))
 :pattern ( ($generated@@42 $generated@@33 $generated@@60 $generated@@56 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@42 $generated@@33 $generated@@62 $generated@@34 $generated@@63) ($generated@@42 $generated@@33 $generated@@62 $generated@@51 $generated@@63))
 :pattern ( ($generated@@42 $generated@@33 $generated@@62 $generated@@34 $generated@@63))
 :pattern ( ($generated@@42 $generated@@33 $generated@@62 $generated@@51 $generated@@63))
)))
(assert (= ($generated@@12 $generated@@64) 4))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@47 $generated@@67) ($generated@@42 $generated@@64 $generated@@53 ($generated@@65 $generated@@66) $generated@@67))
 :pattern ( ($generated@@42 $generated@@64 $generated@@53 ($generated@@65 $generated@@66) $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ) (! ($generated@@32 $generated@@64 $generated@@53 ($generated@@65 $generated@@68))
 :pattern ( ($generated@@32 $generated@@64 $generated@@53 ($generated@@65 $generated@@68)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@76 T@T) ($generated@@77 T@T) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@69 $generated@@76 $generated@@77 ($generated@@73 $generated@@76 $generated@@77 $generated@@79 $generated@@80 $generated@@78) $generated@@80) $generated@@78)
 :weight 0
)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or (= $generated@@85 $generated@@86) (= ($generated@@69 $generated@@81 $generated@@82 ($generated@@73 $generated@@81 $generated@@82 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@69 $generated@@81 $generated@@82 $generated@@84 $generated@@86)))
 :weight 0
))) (= ($generated@@12 $generated@@70) 5)) (= ($generated@@12 $generated@@71) 6)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@12 ($generated@@72 $generated@@87 $generated@@88)) 7))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@74 ($generated@@72 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@72 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@75 ($generated@@72 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@72 $generated@@91 $generated@@92))
))))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@42 $generated@@33 $generated@@93 $generated@@56 $generated@@94)  (or (= $generated@@93 $generated@@31) ($generated@@17 ($generated@@39 $generated@@13 ($generated@@69 $generated@@70 $generated@@71 ($generated@@69 $generated@@33 ($generated@@72 $generated@@70 $generated@@71) $generated@@94 $generated@@93) $generated)))))
 :pattern ( ($generated@@42 $generated@@33 $generated@@93 $generated@@56 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@42 $generated@@33 $generated@@95 $generated@@51 $generated@@96)  (or (= $generated@@95 $generated@@31) ($generated@@17 ($generated@@39 $generated@@13 ($generated@@69 $generated@@70 $generated@@71 ($generated@@69 $generated@@33 ($generated@@72 $generated@@70 $generated@@71) $generated@@96 $generated@@95) $generated)))))
 :pattern ( ($generated@@42 $generated@@33 $generated@@95 $generated@@51 $generated@@96))
)))
(assert (forall (($generated@@97 Int) ) (! (= ($generated@@38 $generated@@97) $generated@@97)
 :pattern ( ($generated@@38 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@46 $generated@@99 $generated@@98) $generated@@98)
 :pattern ( ($generated@@46 $generated@@99 $generated@@98))
)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@100 T@U) ) (!  (=> (or ($generated@@30 ($generated@@46 $generated@@33 $generated@@100)) (and (< 2 $generated@@28) (and (and (or (not (= $generated@@100 $generated@@31)) (not true)) ($generated@@32 $generated@@33 $generated@@100 $generated@@34)) (not ($generated@@17 ($generated@@46 $generated@@13 ($generated@@16 ($generated@@35 ($generated@@46 $generated@@33 $generated@@100))))))))) (and ($generated@@36 $generated@@37) (= ($generated@@29 ($generated@@46 $generated@@33 $generated@@100)) ($generated@@38 ($generated@@19 ($generated@@39 $generated@@14 ($generated@@40 $generated@@37)))))))
 :weight 3
 :pattern ( ($generated@@29 ($generated@@46 $generated@@33 $generated@@100)))
))))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@101 $generated@@102) (= ($generated@@52 $generated@@102) $generated@@3))
 :pattern ( ($generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 $generated@@104) (= ($generated@@52 $generated@@104) $generated@@4))
 :pattern ( ($generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 ($generated@@39 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@39 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@101 $generated@@108) (= $generated@@108 $generated@@53))
 :pattern ( ($generated@@101 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@103 $generated@@110) (exists (($generated@@111 T@U) ) (= $generated@@110 ($generated@@109 $generated@@111))))
 :pattern ( ($generated@@103 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@32 $generated@@14 $generated@@112 $generated@@37) (<= ($generated@@38 0) ($generated@@19 $generated@@112)))
 :pattern ( ($generated@@32 $generated@@14 $generated@@112 $generated@@37))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@45 ($generated@@105 $generated@@116 $generated@@113) $generated@@114 $generated@@115) ($generated@@42 $generated@@116 $generated@@113 $generated@@114 $generated@@115))
 :pattern ( ($generated@@45 ($generated@@105 $generated@@116 $generated@@113) $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ) (!  (and (= ($generated@@117 ($generated@@65 $generated@@119)) $generated@@1) (= ($generated@@118 ($generated@@65 $generated@@119)) $generated@@9))
 :pattern ( ($generated@@65 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@120 $generated@@121 $generated@@37) (and (= ($generated@@105 $generated@@14 ($generated@@39 $generated@@14 $generated@@121)) $generated@@121) ($generated@@32 $generated@@14 ($generated@@39 $generated@@14 $generated@@121) $generated@@37)))
 :pattern ( ($generated@@120 $generated@@121 $generated@@37))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@120 $generated@@122 $generated@@59) (and (= ($generated@@105 $generated@@33 ($generated@@39 $generated@@33 $generated@@122)) $generated@@122) ($generated@@32 $generated@@33 ($generated@@39 $generated@@33 $generated@@122) $generated@@59)))
 :pattern ( ($generated@@120 $generated@@122 $generated@@59))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@120 $generated@@123 $generated@@56) (and (= ($generated@@105 $generated@@33 ($generated@@39 $generated@@33 $generated@@123)) $generated@@123) ($generated@@32 $generated@@33 ($generated@@39 $generated@@33 $generated@@123) $generated@@56)))
 :pattern ( ($generated@@120 $generated@@123 $generated@@56))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@120 $generated@@124 $generated@@51) (and (= ($generated@@105 $generated@@33 ($generated@@39 $generated@@33 $generated@@124)) $generated@@124) ($generated@@32 $generated@@33 ($generated@@39 $generated@@33 $generated@@124) $generated@@51)))
 :pattern ( ($generated@@120 $generated@@124 $generated@@51))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@120 $generated@@125 $generated@@34) (and (= ($generated@@105 $generated@@33 ($generated@@39 $generated@@33 $generated@@125)) $generated@@125) ($generated@@32 $generated@@33 ($generated@@39 $generated@@33 $generated@@125) $generated@@34)))
 :pattern ( ($generated@@120 $generated@@125 $generated@@34))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@126 $generated@@59)  (and ($generated@@32 $generated@@33 $generated@@126 $generated@@56) (or (not (= $generated@@126 $generated@@31)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@126 $generated@@59))
 :pattern ( ($generated@@32 $generated@@33 $generated@@126 $generated@@56))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@127 $generated@@34)  (and ($generated@@32 $generated@@33 $generated@@127 $generated@@51) (or (not (= $generated@@127 $generated@@31)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@127 $generated@@34))
 :pattern ( ($generated@@32 $generated@@33 $generated@@127 $generated@@51))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> ($generated@@47 $generated@@130) (= ($generated@@42 $generated@@64 ($generated@@109 $generated@@129) ($generated@@65 $generated@@128) $generated@@130) ($generated@@45 $generated@@129 $generated@@128 $generated@@130)))
 :pattern ( ($generated@@42 $generated@@64 ($generated@@109 $generated@@129) ($generated@@65 $generated@@128) $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> ($generated@@42 $generated@@33 $generated@@131 $generated@@51 $generated@@132) ($generated@@42 $generated@@33 $generated@@131 $generated@@56 $generated@@132))
 :pattern ( ($generated@@42 $generated@@33 $generated@@131 $generated@@51 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> ($generated@@32 $generated@@64 $generated@@134 ($generated@@65 $generated@@133)) (or ($generated@@101 $generated@@134) ($generated@@103 $generated@@134)))
 :pattern ( ($generated@@103 $generated@@134) ($generated@@32 $generated@@64 $generated@@134 ($generated@@65 $generated@@133)))
 :pattern ( ($generated@@101 $generated@@134) ($generated@@32 $generated@@64 $generated@@134 ($generated@@65 $generated@@133)))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@136 T@U) ) (!  (=> (or ($generated@@36 $generated@@136) (and (< 1 $generated@@28) ($generated@@17 ($generated@@46 $generated@@13 ($generated@@16 false))))) (= ($generated@@40 $generated@@136) (let (($generated@@137 ($generated@@46 $generated@@64 $generated@@53)))
($generated@@46 $generated@@71 ($generated@@135 $generated@@137)))))
 :pattern ( ($generated@@40 $generated@@136))
))))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@138 T@U) ) (!  (=> (or ($generated@@36 $generated@@138) (and (< 1 $generated@@28) ($generated@@17 ($generated@@46 $generated@@13 ($generated@@16 false))))) (= ($generated@@40 $generated@@138) (let (($generated@@139 ($generated@@46 $generated@@64 $generated@@53)))
($generated@@46 $generated@@71 ($generated@@135 $generated@@139)))))
 :weight 3
 :pattern ( ($generated@@40 $generated@@138))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@120 ($generated@@105 $generated@@142 $generated@@140) $generated@@141) ($generated@@32 $generated@@142 $generated@@140 $generated@@141))
 :pattern ( ($generated@@120 ($generated@@105 $generated@@142 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@65 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@65 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@52 ($generated@@109 $generated@@145)) $generated@@4)
 :pattern ( ($generated@@109 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@135 ($generated@@109 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@109 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@39 $generated@@148 ($generated@@105 $generated@@148 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@105 $generated@@148 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@32 $generated@@64 ($generated@@109 $generated@@150) ($generated@@65 $generated@@149)) ($generated@@120 $generated@@150 $generated@@149))
 :pattern ( ($generated@@32 $generated@@64 ($generated@@109 $generated@@150) ($generated@@65 $generated@@149)))
)))
(assert (forall (($generated@@153 T@U) ) (! (< ($generated@@151 $generated@@153) ($generated@@152 ($generated@@109 $generated@@153)))
 :pattern ( ($generated@@109 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and ($generated@@47 $generated@@156) (and ($generated@@103 $generated@@154) ($generated@@42 $generated@@64 $generated@@154 ($generated@@65 $generated@@155) $generated@@156))) ($generated@@45 ($generated@@135 $generated@@154) $generated@@155 $generated@@156))
 :pattern ( ($generated@@45 ($generated@@135 $generated@@154) $generated@@155 $generated@@156))
)))
(assert  (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@157 $generated@@160 $generated@@161 $generated@@162 ($generated@@159 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@165 $generated@@166) $generated@@163)
 :weight 0
)) (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@157 $generated@@167 $generated@@168 $generated@@169 ($generated@@159 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@157 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@157 $generated@@176 $generated@@177 $generated@@178 ($generated@@159 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@183 $generated@@184) ($generated@@157 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@183 $generated@@184)))
 :weight 0
)))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 Bool) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@17 ($generated@@157 $generated@@33 $generated@@70 $generated@@13 ($generated@@158 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))  (=> (and (or (not (= $generated@@189 $generated@@185)) (not true)) ($generated@@17 ($generated@@39 $generated@@13 ($generated@@69 $generated@@70 $generated@@71 ($generated@@69 $generated@@33 ($generated@@72 $generated@@70 $generated@@71) $generated@@186 $generated@@189) $generated@@187)))) $generated@@188))
 :pattern ( ($generated@@157 $generated@@33 $generated@@70 $generated@@13 ($generated@@158 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@151 ($generated@@105 $generated@@64 $generated@@191)) ($generated@@152 $generated@@191))
 :pattern ( ($generated@@151 ($generated@@105 $generated@@64 $generated@@191)))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@193 T@U) ) (!  (=> (or ($generated@@192 $generated@@193) (and (< 0 $generated@@28) (and (or (not (= $generated@@193 $generated@@31)) (not true)) ($generated@@32 $generated@@33 $generated@@193 $generated@@34)))) (= ($generated@@35 $generated@@193) ($generated@@17 ($generated@@46 $generated@@13 ($generated@@16 true)))))
 :pattern ( ($generated@@35 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@120 $generated@@195 ($generated@@65 $generated@@194)) (and (= ($generated@@105 $generated@@64 ($generated@@39 $generated@@64 $generated@@195)) $generated@@195) ($generated@@32 $generated@@64 ($generated@@39 $generated@@64 $generated@@195) ($generated@@65 $generated@@194))))
 :pattern ( ($generated@@120 $generated@@195 ($generated@@65 $generated@@194)))
)))
(assert (forall (($generated@@196 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@196 $generated@@51) ($generated@@32 $generated@@33 $generated@@196 $generated@@56))
 :pattern ( ($generated@@32 $generated@@33 $generated@@196 $generated@@51))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> ($generated@@120 $generated@@197 $generated@@51) ($generated@@120 $generated@@197 $generated@@56))
 :pattern ( ($generated@@120 $generated@@197 $generated@@51))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@198 T@U) ) (!  (=> (or ($generated@@36 $generated@@198) (and (< 1 $generated@@28) ($generated@@17 ($generated@@46 $generated@@13 ($generated@@16 false))))) ($generated@@120 ($generated@@40 $generated@@198) $generated@@198))
 :pattern ( ($generated@@40 $generated@@198))
))))
(assert (= ($generated@@117 $generated@@37) $generated@@0))
(assert (= ($generated@@118 $generated@@37) $generated@@8))
(assert (= ($generated@@117 $generated@@59) $generated@@2))
(assert (= ($generated@@118 $generated@@59) $generated@@10))
(assert (= ($generated@@117 $generated@@56) $generated@@5))
(assert (= ($generated@@118 $generated@@56) $generated@@10))
(assert (= ($generated@@117 $generated@@51) $generated@@6))
(assert (= ($generated@@118 $generated@@51) $generated@@11))
(assert (= ($generated@@117 $generated@@34) $generated@@7))
(assert (= ($generated@@118 $generated@@34) $generated@@11))
(assert (= $generated@@53 ($generated@@46 $generated@@64 $generated@@53)))
(assert (forall (($generated@@199 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@199 $generated@@56)  (or (= $generated@@199 $generated@@31) ($generated@@50 ($generated@@54 $generated@@199))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@199 $generated@@56))
)))
(assert (forall (($generated@@200 Int) ) (! (= ($generated@@105 $generated@@14 ($generated@@18 ($generated@@38 $generated@@200))) ($generated@@46 $generated@@71 ($generated@@105 $generated@@14 ($generated@@18 $generated@@200))))
 :pattern ( ($generated@@105 $generated@@14 ($generated@@18 ($generated@@38 $generated@@200))))
)))
(assert (forall (($generated@@201 T@U) ) (! (= ($generated@@109 ($generated@@46 $generated@@71 $generated@@201)) ($generated@@46 $generated@@64 ($generated@@109 $generated@@201)))
 :pattern ( ($generated@@109 ($generated@@46 $generated@@71 $generated@@201)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@T) ) (! (= ($generated@@105 $generated@@203 ($generated@@46 $generated@@203 $generated@@202)) ($generated@@46 $generated@@71 ($generated@@105 $generated@@203 $generated@@202)))
 :pattern ( ($generated@@105 $generated@@203 ($generated@@46 $generated@@203 $generated@@202)))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@204 T@U) ) (!  (=> (or ($generated@@192 ($generated@@46 $generated@@33 $generated@@204)) (and (< 0 $generated@@28) (and (or (not (= $generated@@204 $generated@@31)) (not true)) ($generated@@32 $generated@@33 $generated@@204 $generated@@34)))) (= ($generated@@35 ($generated@@46 $generated@@33 $generated@@204)) ($generated@@17 ($generated@@46 $generated@@13 ($generated@@16 true)))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@46 $generated@@33 $generated@@204)))
))))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@205 T@U) ) (!  (=> (or ($generated@@30 $generated@@205) (and (< 2 $generated@@28) (and (and (or (not (= $generated@@205 $generated@@31)) (not true)) ($generated@@32 $generated@@33 $generated@@205 $generated@@34)) (not ($generated@@35 $generated@@205))))) (<= ($generated@@38 0) ($generated@@29 $generated@@205)))
 :pattern ( ($generated@@29 $generated@@205))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@210  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@17 ($generated@@46 $generated@@13 ($generated@@16 false))))))
(let (($generated@@211 true))
(let (($generated@@212  (=> (and (and (= $generated@@206 ($generated@@158 $generated@@31 $generated@@207 $generated false)) ($generated@@45 ($generated@@105 $generated@@33 $generated@@208) $generated@@51 $generated@@207)) (and ($generated@@192 $generated@@208) (not ($generated@@35 $generated@@208)))) (and (=> (= (ControlFlow 0 4) 1) $generated@@211) (=> (= (ControlFlow 0 4) 3) $generated@@210)))))
(let (($generated@@213  (=> (and ($generated@@47 $generated@@207) ($generated@@209 $generated@@207)) (=> (and (and (or (not (= $generated@@208 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@208 $generated@@34) ($generated@@42 $generated@@33 $generated@@208 $generated@@34 $generated@@207))) (and (= 2 $generated@@28) (= (ControlFlow 0 5) 4))) $generated@@212))))
$generated@@213)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
