(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@T T@T) T@T)
(declare-fun $generated@@33 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@34 (T@T) T@T)
(declare-fun $generated@@35 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@T T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@84 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@86 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@125 (T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated@@20) 0))
(assert (= ($generated@@3 $generated@@22) 3))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ) (! (= ($generated@@21 $generated@@22 $generated@@25 $generated@@23 $generated@@26) ($generated@@21 $generated@@22 $generated@@25 $generated@@24 $generated@@26))
 :pattern ( ($generated@@21 $generated@@22 $generated@@25 $generated@@23 $generated@@26))
 :pattern ( ($generated@@21 $generated@@22 $generated@@25 $generated@@24 $generated@@26))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@36 T@T) ($generated@@37 T@T) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@37 ($generated@@33 $generated@@36 $generated@@37 $generated@@39 $generated@@40 $generated@@38) $generated@@40) $generated@@38)
 :weight 0
)) (forall (($generated@@41 T@T) ($generated@@42 T@T) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (or (= $generated@@45 $generated@@46) (= ($generated@@29 $generated@@41 $generated@@42 ($generated@@33 $generated@@41 $generated@@42 $generated@@44 $generated@@45 $generated@@43) $generated@@46) ($generated@@29 $generated@@41 $generated@@42 $generated@@44 $generated@@46)))
 :weight 0
))) (= ($generated@@3 $generated@@30) 4)) (= ($generated@@3 $generated@@31) 5)) (forall (($generated@@47 T@T) ($generated@@48 T@T) ) (= ($generated@@3 ($generated@@32 $generated@@47 $generated@@48)) 6))) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (! (= ($generated@@34 ($generated@@32 $generated@@49 $generated@@50)) $generated@@49)
 :pattern ( ($generated@@32 $generated@@49 $generated@@50))
))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (! (= ($generated@@35 ($generated@@32 $generated@@51 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@32 $generated@@51 $generated@@52))
))))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@21 $generated@@22 $generated@@53 $generated@@24 $generated@@54)  (or (= $generated@@53 $generated@@27) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@54 $generated@@53) $generated)))))
 :pattern ( ($generated@@21 $generated@@22 $generated@@53 $generated@@24 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> ($generated@@55 $generated@@56 $generated@@57) (forall (($generated@@58 T@U) ) (!  (=> ($generated@@8 ($generated@@28 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@56 $generated@@58) $generated))) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@57 $generated@@58) $generated))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@57 $generated@@58) $generated))
)))
 :pattern ( ($generated@@55 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 ($generated@@28 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@28 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@19 ($generated@@65 $generated@@66 $generated@@67)) (+ 1 ($generated@@19 $generated@@66)))
 :pattern ( ($generated@@65 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (!  (=> ($generated@@55 $generated@@68 $generated@@69) (=> ($generated@@21 $generated@@72 $generated@@70 $generated@@71 $generated@@68) ($generated@@21 $generated@@72 $generated@@70 $generated@@71 $generated@@69)))
 :pattern ( ($generated@@55 $generated@@68 $generated@@69) ($generated@@21 $generated@@72 $generated@@70 $generated@@71 $generated@@68))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@73 $generated@@22 $generated@@74 $generated@@23)  (and ($generated@@73 $generated@@22 $generated@@74 $generated@@24) (or (not (= $generated@@74 $generated@@27)) (not true))))
 :pattern ( ($generated@@73 $generated@@22 $generated@@74 $generated@@23))
 :pattern ( ($generated@@73 $generated@@22 $generated@@74 $generated@@24))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or (not (= $generated@@75 $generated@@77)) (not true)) (=> (and ($generated@@55 $generated@@75 $generated@@76) ($generated@@55 $generated@@76 $generated@@77)) ($generated@@55 $generated@@75 $generated@@77)))
 :pattern ( ($generated@@55 $generated@@75 $generated@@76) ($generated@@55 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (! (<= 0 ($generated@@19 $generated@@78))
 :pattern ( ($generated@@19 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@28 $generated@@80 ($generated@@62 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@62 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@83 Int) ) (!  (=> (or (and (<= 0 $generated@@83) (< $generated@@83 55296)) (and (<= 57344 $generated@@83) (< $generated@@83 1114112))) (= ($generated@@82 ($generated@@81 $generated@@83)) $generated@@83))
 :pattern ( ($generated@@81 $generated@@83))
)))
(assert  (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@84 $generated@@87 $generated@@88 $generated@@89 ($generated@@86 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@93 $generated@@90) $generated@@92 $generated@@93) $generated@@90)
 :weight 0
)) (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@99 $generated@@101) (= ($generated@@84 $generated@@94 $generated@@95 $generated@@96 ($generated@@86 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@99 $generated@@100 $generated@@97) $generated@@101 $generated@@102) ($generated@@84 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@101 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@84 $generated@@103 $generated@@104 $generated@@105 ($generated@@86 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@84 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)))))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 Bool) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@8 ($generated@@84 $generated@@22 $generated@@30 $generated@@4 ($generated@@85 $generated@@112 $generated@@113 $generated@@114 $generated@@115) $generated@@116 $generated@@117))  (=> (and (or (not (= $generated@@116 $generated@@112)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@113 $generated@@116) $generated@@114)))) $generated@@115))
 :pattern ( ($generated@@84 $generated@@22 $generated@@30 $generated@@4 ($generated@@85 $generated@@112 $generated@@113 $generated@@114 $generated@@115) $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (and (= ($generated@@118 ($generated@@65 $generated@@120 $generated@@121)) $generated@@120) (= ($generated@@119 ($generated@@65 $generated@@120 $generated@@121)) $generated@@121))
 :pattern ( ($generated@@65 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (!  (and (= ($generated@@81 ($generated@@82 $generated@@122)) $generated@@122) (or (and (<= 0 ($generated@@82 $generated@@122)) (< ($generated@@82 $generated@@122) 55296)) (and (<= 57344 ($generated@@82 $generated@@122)) (< ($generated@@82 $generated@@122) 1114112))))
 :pattern ( ($generated@@82 $generated@@122))
)))
(assert (= ($generated@@123 $generated@@23) $generated@@0))
(assert (= ($generated@@124 $generated@@23) $generated@@2))
(assert (= ($generated@@123 $generated@@24) $generated@@1))
(assert (= ($generated@@124 $generated@@24) $generated@@2))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@73 $generated@@22 $generated@@127 $generated@@24)  (or (= $generated@@127 $generated@@27) ($generated@@125 ($generated@@126 $generated@@127))))
 :pattern ( ($generated@@73 $generated@@22 $generated@@127 $generated@@24))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@62 $generated@@129 ($generated@@59 $generated@@129 $generated@@128)) ($generated@@59 $generated@@31 ($generated@@62 $generated@@129 $generated@@128)))
 :pattern ( ($generated@@62 $generated@@129 ($generated@@59 $generated@@129 $generated@@128)))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> (= ($generated@@19 $generated@@130) 0) (= $generated@@130 $generated@@20))
 :pattern ( ($generated@@19 $generated@@130))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@131 () Bool)
(declare-fun $generated@@132 () T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () Bool)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () Int)
(assert  (and (= ($generated@@3 $generated@@133) 7) (= ($generated@@3 $generated@@134) 8)))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@148  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@149  (=> (and (not $generated@@131) (= $generated@@132 ($generated@@59 $generated@@133 ($generated@@65 ($generated@@65 ($generated@@65 ($generated@@65 ($generated@@65 ($generated@@65 ($generated@@65 ($generated@@65 ($generated@@65 ($generated@@65 ($generated@@65 ($generated@@65 ($generated@@65 $generated@@20 ($generated@@62 $generated@@134 ($generated@@81 118))) ($generated@@62 $generated@@134 ($generated@@81 111))) ($generated@@62 $generated@@134 ($generated@@81 105))) ($generated@@62 $generated@@134 ($generated@@81 100))) ($generated@@62 $generated@@134 ($generated@@81 32))) ($generated@@62 $generated@@134 ($generated@@81 98))) ($generated@@62 $generated@@134 ($generated@@81 97))) ($generated@@62 $generated@@134 ($generated@@81 100))) ($generated@@62 $generated@@134 ($generated@@81 32))) ($generated@@62 $generated@@134 ($generated@@81 108))) ($generated@@62 $generated@@134 ($generated@@81 117))) ($generated@@62 $generated@@134 ($generated@@81 99))) ($generated@@62 $generated@@134 ($generated@@81 107)))))) (=> (and (and ($generated@@73 $generated@@22 $generated@@135 $generated@@23) ($generated@@21 $generated@@22 $generated@@135 $generated@@23 $generated@@136)) (and ($generated@@137 $generated@@138) ($generated@@139 $generated@@138))) (=> (and (and (and ($generated@@73 $generated@@22 $generated@@140 $generated@@23) ($generated@@21 $generated@@22 $generated@@140 $generated@@23 $generated@@138)) (forall (($generated@@150 T@U) ) (!  (=> (and (or (not (= $generated@@150 $generated@@27)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@136 $generated@@150) $generated)))) (= ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@138 $generated@@150) ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@136 $generated@@150)))
 :pattern ( ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@138 $generated@@150))
))) (and ($generated@@55 $generated@@136 $generated@@138) (= (ControlFlow 0 4) 2))) $generated@@148)))))
(let (($generated@@151  (=> $generated@@131 (=> (and (and ($generated@@73 $generated@@22 $generated@@141 $generated@@23) ($generated@@21 $generated@@22 $generated@@141 $generated@@23 $generated@@136)) (and ($generated@@137 $generated@@142) ($generated@@139 $generated@@142))) (=> (and (and (and ($generated@@73 $generated@@22 $generated@@143 $generated@@23) ($generated@@21 $generated@@22 $generated@@143 $generated@@23 $generated@@142)) (forall (($generated@@152 T@U) ) (!  (=> (and (or (not (= $generated@@152 $generated@@27)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@136 $generated@@152) $generated)))) (= ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@142 $generated@@152) ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@136 $generated@@152)))
 :pattern ( ($generated@@29 $generated@@22 ($generated@@32 $generated@@30 $generated@@31) $generated@@142 $generated@@152))
))) (and ($generated@@55 $generated@@136 $generated@@142) (= (ControlFlow 0 3) 2))) $generated@@148)))))
(let (($generated@@153  (=> (= $generated@@144 ($generated@@85 $generated@@27 $generated@@136 $generated false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@151) (=> (= (ControlFlow 0 5) 4) $generated@@149)))))
(let (($generated@@154  (=> (and (and (and ($generated@@137 $generated@@136) ($generated@@139 $generated@@136)) (=> $generated@@145 (and ($generated@@73 $generated@@22 $generated@@146 $generated@@23) ($generated@@21 $generated@@22 $generated@@146 $generated@@23 $generated@@136)))) (and (= 3 $generated@@147) (= (ControlFlow 0 6) 5))) $generated@@153)))
$generated@@154))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
