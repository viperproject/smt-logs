(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@U Int) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () Int)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@61 (Int) T@U)
(declare-fun $generated@@67 (T@U T@U T@U) Bool)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@102 (T@U) Int)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@T T@T) T@T)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (= ($generated@@9 $generated@@35) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 Int) ) (!  (=> (and (<= 0 $generated@@37) (< $generated@@37 ($generated@@32 $generated@@36))) (< ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@36 $generated@@37))) ($generated@@33 ($generated@@31 $generated@@36))))
 :pattern ( ($generated@@30 $generated@@36 $generated@@37) ($generated@@31 $generated@@36))
)))
(assert (= ($generated@@32 $generated@@38) 0))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@46 T@U) ) (!  (=> (or ($generated@@41 $generated@@46) (and (< 1 $generated@@39) (and ($generated@@42 $generated@@35 $generated@@46 $generated@@43) (not ($generated@@44 $generated@@46))))) (= ($generated@@40 $generated@@46) ($generated@@45 $generated@@46)))
 :pattern ( ($generated@@40 $generated@@46))
))))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@48 T@U) ) (!  (=> (or ($generated@@41 $generated@@48) (and (< 1 $generated@@39) (and ($generated@@42 $generated@@35 $generated@@48 $generated@@43) (not ($generated@@44 $generated@@48))))) (<= ($generated@@47 0) ($generated@@40 $generated@@48)))
 :pattern ( ($generated@@40 $generated@@48))
))))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@47 $generated@@49) $generated@@49)
 :pattern ( ($generated@@47 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@53 $generated@@55) (= ($generated@@54 $generated@@55) $generated@@4))
 :pattern ( ($generated@@53 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@56 $generated@@57) (= ($generated@@54 $generated@@57) $generated@@6))
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 ($generated@@34 $generated@@60 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@34 $generated@@60 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@53 $generated@@62) (exists (($generated@@63 Int) ) (= $generated@@62 ($generated@@61 $generated@@63))))
 :pattern ( ($generated@@53 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@56 $generated@@64) (exists (($generated@@65 T@U) ) (= $generated@@64 ($generated@@31 $generated@@65))))
 :pattern ( ($generated@@56 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@42 $generated@@11 $generated@@66 $generated@@27) (<= ($generated@@47 0) ($generated@@16 $generated@@66)))
 :pattern ( ($generated@@42 $generated@@11 $generated@@66 $generated@@27))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@58 $generated@@71 $generated@@68) $generated@@69 $generated@@70) ($generated@@26 $generated@@71 $generated@@68 $generated@@69 $generated@@70))
 :pattern ( ($generated@@67 ($generated@@58 $generated@@71 $generated@@68) $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@72 $generated@@73 $generated@@27) (and (= ($generated@@58 $generated@@11 ($generated@@34 $generated@@11 $generated@@73)) $generated@@73) ($generated@@42 $generated@@11 ($generated@@34 $generated@@11 $generated@@73) $generated@@27)))
 :pattern ( ($generated@@72 $generated@@73 $generated@@27))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@72 $generated@@74 $generated@@43) (and (= ($generated@@58 $generated@@35 ($generated@@34 $generated@@35 $generated@@74)) $generated@@74) ($generated@@42 $generated@@35 ($generated@@34 $generated@@35 $generated@@74) $generated@@43)))
 :pattern ( ($generated@@72 $generated@@74 $generated@@43))
)))
(assert (forall (($generated@@75 Int) ) (! (= ($generated@@42 $generated@@35 ($generated@@61 $generated@@75) $generated@@43) ($generated@@42 $generated@@11 ($generated@@15 $generated@@75) $generated@@27))
 :pattern ( ($generated@@42 $generated@@35 ($generated@@61 $generated@@75) $generated@@43))
)))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@77 T@U) ) (!  (=> (or ($generated@@76 $generated@@77) (and (< 0 $generated@@39) ($generated@@42 $generated@@35 $generated@@77 $generated@@43))) (= ($generated@@44 $generated@@77) ($generated@@56 $generated@@77)))
 :pattern ( ($generated@@44 $generated@@77))
))))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@42 $generated@@35 $generated@@78 $generated@@43) (or ($generated@@53 $generated@@78) ($generated@@56 $generated@@78)))
 :pattern ( ($generated@@56 $generated@@78) ($generated@@42 $generated@@35 $generated@@78 $generated@@43))
 :pattern ( ($generated@@53 $generated@@78) ($generated@@42 $generated@@35 $generated@@78 $generated@@43))
)))
(assert (= ($generated@@9 $generated@@79) 4))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@72 $generated@@80 $generated) (and (= ($generated@@58 $generated@@79 ($generated@@34 $generated@@79 $generated@@80)) $generated@@80) ($generated@@42 $generated@@79 ($generated@@34 $generated@@79 $generated@@80) $generated)))
 :pattern ( ($generated@@72 $generated@@80 $generated))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@72 ($generated@@58 $generated@@83 $generated@@81) $generated@@82) ($generated@@42 $generated@@83 $generated@@81 $generated@@82))
 :pattern ( ($generated@@72 ($generated@@58 $generated@@83 $generated@@81) $generated@@82))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@84 T@U) ) (!  (=> (or ($generated@@41 ($generated@@50 $generated@@35 $generated@@84)) (and (< 1 $generated@@39) (and ($generated@@42 $generated@@35 $generated@@84 $generated@@43) (not ($generated@@14 ($generated@@50 $generated@@10 ($generated@@13 ($generated@@44 ($generated@@50 $generated@@35 $generated@@84))))))))) (= ($generated@@40 ($generated@@50 $generated@@35 $generated@@84)) ($generated@@47 ($generated@@45 ($generated@@50 $generated@@35 $generated@@84)))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@50 $generated@@35 $generated@@84)))
))))
(assert (forall (($generated@@85 T@U) ) (! (<= 0 ($generated@@32 $generated@@85))
 :pattern ( ($generated@@32 $generated@@85))
)))
(assert (= ($generated@@9 $generated@@86) 5))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@26 $generated@@86 $generated@@88 ($generated@@87 $generated@@89) $generated@@90) (forall (($generated@@91 Int) ) (!  (=> (and (<= 0 $generated@@91) (< $generated@@91 ($generated@@32 $generated@@88))) ($generated@@67 ($generated@@30 $generated@@88 $generated@@91) $generated@@89 $generated@@90))
 :pattern ( ($generated@@30 $generated@@88 $generated@@91))
)))
 :pattern ( ($generated@@26 $generated@@86 $generated@@88 ($generated@@87 $generated@@89) $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@92 ($generated@@87 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@87 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@25 ($generated@@87 $generated@@94)) $generated@@1)
 :pattern ( ($generated@@87 $generated@@94))
)))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@54 ($generated@@61 $generated@@95)) $generated@@4)
 :pattern ( ($generated@@61 $generated@@95))
)))
(assert (forall (($generated@@96 Int) ) (! (= ($generated@@45 ($generated@@61 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@61 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@54 ($generated@@31 $generated@@97)) $generated@@6)
 :pattern ( ($generated@@31 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@98 ($generated@@31 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@31 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@34 $generated@@101 ($generated@@58 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@58 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ) (! (< ($generated@@102 $generated@@103) ($generated@@33 ($generated@@31 $generated@@103)))
 :pattern ( ($generated@@31 $generated@@103))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@104 $generated@@115 $generated@@116 $generated@@117 ($generated@@111 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@104 $generated@@122 $generated@@123 $generated@@124 ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@104 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@104 $generated@@131 $generated@@132 $generated@@133 ($generated@@111 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))) (= ($generated@@9 $generated@@105) 6)) (= ($generated@@9 $generated@@106) 7)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@108 $generated@@140 $generated@@141 ($generated@@112 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@142) $generated@@144) $generated@@142)
 :weight 0
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@108 $generated@@145 $generated@@146 ($generated@@112 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@108 $generated@@145 $generated@@146 $generated@@148 $generated@@150)))
 :weight 0
))) (= ($generated@@9 $generated@@109) 8)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (= ($generated@@9 ($generated@@110 $generated@@151 $generated@@152)) 9))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@113 ($generated@@110 $generated@@153 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@110 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@114 ($generated@@110 $generated@@155 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@110 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@14 ($generated@@104 $generated@@105 $generated@@106 $generated@@10 ($generated@@107 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@14 ($generated@@34 $generated@@10 ($generated@@108 $generated@@106 $generated@@109 ($generated@@108 $generated@@105 ($generated@@110 $generated@@106 $generated@@109) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@104 $generated@@105 $generated@@106 $generated@@10 ($generated@@107 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@72 $generated@@163 ($generated@@87 $generated@@164)) (and (= ($generated@@58 $generated@@86 ($generated@@34 $generated@@86 $generated@@163)) $generated@@163) ($generated@@42 $generated@@86 ($generated@@34 $generated@@86 $generated@@163) ($generated@@87 $generated@@164))))
 :pattern ( ($generated@@72 $generated@@163 ($generated@@87 $generated@@164)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@165 $generated@@167) ($generated@@42 $generated@@35 $generated@@166 $generated@@43)) ($generated@@26 $generated@@35 $generated@@166 $generated@@43 $generated@@167))
 :pattern ( ($generated@@26 $generated@@35 $generated@@166 $generated@@43 $generated@@167))
)))
(assert (= ($generated@@25 $generated@@27) $generated@@3))
(assert (= ($generated@@168 $generated@@27) $generated@@7))
(assert (= ($generated@@25 $generated@@43) $generated@@5))
(assert (= ($generated@@168 $generated@@43) $generated@@8))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@169 T@U) ) (!  (=> (or ($generated@@76 ($generated@@50 $generated@@35 $generated@@169)) (and (< 0 $generated@@39) ($generated@@42 $generated@@35 $generated@@169 $generated@@43))) (= ($generated@@44 ($generated@@50 $generated@@35 $generated@@169)) ($generated@@14 ($generated@@50 $generated@@10 ($generated@@13 ($generated@@56 ($generated@@50 $generated@@35 $generated@@169)))))))
 :weight 3
 :pattern ( ($generated@@44 ($generated@@50 $generated@@35 $generated@@169)))
))))
(assert (forall (($generated@@170 T@U) ) (! (= ($generated@@42 $generated@@35 ($generated@@31 $generated@@170) $generated@@43) ($generated@@42 $generated@@86 $generated@@170 ($generated@@87 $generated)))
 :pattern ( ($generated@@42 $generated@@35 ($generated@@31 $generated@@170) $generated@@43))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and ($generated@@165 $generated@@172) (and ($generated@@56 $generated@@171) ($generated@@26 $generated@@35 $generated@@171 $generated@@43 $generated@@172))) ($generated@@26 $generated@@86 ($generated@@98 $generated@@171) ($generated@@87 $generated) $generated@@172))
 :pattern ( ($generated@@26 $generated@@86 ($generated@@98 $generated@@171) ($generated@@87 $generated) $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and ($generated@@165 $generated@@174) (and ($generated@@53 $generated@@173) ($generated@@26 $generated@@35 $generated@@173 $generated@@43 $generated@@174))) ($generated@@26 $generated@@11 ($generated@@15 ($generated@@45 $generated@@173)) $generated@@27 $generated@@174))
 :pattern ( ($generated@@26 $generated@@11 ($generated@@15 ($generated@@45 $generated@@173)) $generated@@27 $generated@@174))
)))
(assert (forall (($generated@@175 Int) ) (! (= ($generated@@58 $generated@@11 ($generated@@15 ($generated@@47 $generated@@175))) ($generated@@50 $generated@@109 ($generated@@58 $generated@@11 ($generated@@15 $generated@@175))))
 :pattern ( ($generated@@58 $generated@@11 ($generated@@15 ($generated@@47 $generated@@175))))
)))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@61 ($generated@@47 $generated@@176)) ($generated@@50 $generated@@35 ($generated@@61 $generated@@176)))
 :pattern ( ($generated@@61 ($generated@@47 $generated@@176)))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@31 ($generated@@50 $generated@@86 $generated@@177)) ($generated@@50 $generated@@35 ($generated@@31 $generated@@177)))
 :pattern ( ($generated@@31 ($generated@@50 $generated@@86 $generated@@177)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@T) ) (! (= ($generated@@58 $generated@@179 ($generated@@50 $generated@@179 $generated@@178)) ($generated@@50 $generated@@109 ($generated@@58 $generated@@179 $generated@@178)))
 :pattern ( ($generated@@58 $generated@@179 ($generated@@50 $generated@@179 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= ($generated@@32 $generated@@180) 0) (= $generated@@180 $generated@@38))
 :pattern ( ($generated@@32 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! ($generated@@26 $generated@@79 $generated@@182 $generated $generated@@181)
 :pattern ( ($generated@@26 $generated@@79 $generated@@182 $generated $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@42 $generated@@86 $generated@@183 ($generated@@87 $generated@@184)) (forall (($generated@@185 Int) ) (!  (=> (and (<= 0 $generated@@185) (< $generated@@185 ($generated@@32 $generated@@183))) ($generated@@72 ($generated@@30 $generated@@183 $generated@@185) $generated@@184))
 :pattern ( ($generated@@30 $generated@@183 $generated@@185))
)))
 :pattern ( ($generated@@42 $generated@@86 $generated@@183 ($generated@@87 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 Int) ) (!  (=> (and (<= 0 $generated@@187) (< $generated@@187 ($generated@@32 $generated@@186))) (< ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@186 $generated@@187))) ($generated@@102 $generated@@186)))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@186 $generated@@187))))
)))
(assert (forall (($generated@@188 T@U) ) (! ($generated@@42 $generated@@79 $generated@@188 $generated)
 :pattern ( ($generated@@42 $generated@@79 $generated@@188 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@194  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@53 $generated@@189))))
(let (($generated@@195 true))
(let (($generated@@196  (=> (and (and (= $generated@@190 ($generated@@107 $generated@@191 $generated@@192 $generated@@2 false)) ($generated@@67 ($generated@@58 $generated@@35 $generated@@189) $generated@@43 $generated@@192)) (and ($generated@@76 $generated@@189) (not ($generated@@44 $generated@@189)))) (and (=> (= (ControlFlow 0 4) 1) $generated@@195) (=> (= (ControlFlow 0 4) 3) $generated@@194)))))
(let (($generated@@197  (=> (and ($generated@@165 $generated@@192) ($generated@@193 $generated@@192)) (=> (and (and ($generated@@42 $generated@@35 $generated@@189 $generated@@43) ($generated@@26 $generated@@35 $generated@@189 $generated@@43 $generated@@192)) (and (= 1 $generated@@39) (= (ControlFlow 0 5) 4))) $generated@@196))))
$generated@@197)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
