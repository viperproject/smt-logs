(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@T T@T) T@T)
(declare-fun $generated@@36 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@37 (T@T) T@T)
(declare-fun $generated@@38 (T@T) T@T)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@69 () Int)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 (T@T T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24)
 :pattern ( ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24))
)))
(assert (= ($generated@@5 $generated@@25) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@21 $generated@@25 $generated@@28 $generated@@26 $generated@@29) ($generated@@21 $generated@@25 $generated@@28 $generated@@27 $generated@@29))
 :pattern ( ($generated@@21 $generated@@25 $generated@@28 $generated@@26 $generated@@29))
 :pattern ( ($generated@@21 $generated@@25 $generated@@28 $generated@@27 $generated@@29))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@39 T@T) ($generated@@40 T@T) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@32 $generated@@39 $generated@@40 ($generated@@36 $generated@@39 $generated@@40 $generated@@42 $generated@@43 $generated@@41) $generated@@43) $generated@@41)
 :weight 0
)) (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (or (= $generated@@48 $generated@@49) (= ($generated@@32 $generated@@44 $generated@@45 ($generated@@36 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@49) ($generated@@32 $generated@@44 $generated@@45 $generated@@47 $generated@@49)))
 :weight 0
))) (= ($generated@@5 $generated@@33) 4)) (= ($generated@@5 $generated@@34) 5)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ) (= ($generated@@5 ($generated@@35 $generated@@50 $generated@@51)) 6))) (forall (($generated@@52 T@T) ($generated@@53 T@T) ) (! (= ($generated@@37 ($generated@@35 $generated@@52 $generated@@53)) $generated@@52)
 :pattern ( ($generated@@35 $generated@@52 $generated@@53))
))) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (! (= ($generated@@38 ($generated@@35 $generated@@54 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@35 $generated@@54 $generated@@55))
))))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@21 $generated@@25 $generated@@56 $generated@@27 $generated@@57)  (or (= $generated@@56 $generated@@30) ($generated@@10 ($generated@@31 $generated@@6 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@57 $generated@@56) $generated)))))
 :pattern ( ($generated@@21 $generated@@25 $generated@@56 $generated@@27 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> ($generated@@58 $generated@@59 $generated@@60) (forall (($generated@@61 T@U) ) (!  (=> ($generated@@10 ($generated@@31 $generated@@6 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@59 $generated@@61) $generated))) ($generated@@10 ($generated@@31 $generated@@6 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@60 $generated@@61) $generated))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@60 $generated@@61) $generated))
)))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@62 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and (or ($generated@@68 $generated@@73) (and (< 3 $generated@@69) (and (and (or (not (= $generated@@73 $generated@@30)) (not true)) ($generated@@21 $generated@@25 $generated@@73 $generated@@26 $generated@@72)) ($generated@@70 $generated@@73)))) ($generated@@71 $generated@@72)) ($generated@@21 $generated@@25 ($generated@@67 $generated@@73) $generated@@26 $generated@@72))
 :pattern ( ($generated@@21 $generated@@25 ($generated@@67 $generated@@73) $generated@@26 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@31 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@31 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> (or ($generated@@78 $generated@@80) (and (< 3 $generated@@69) (and (and (or (not (= $generated@@80 $generated@@30)) (not true)) ($generated@@79 $generated@@25 $generated@@80 $generated@@26)) (not ($generated@@70 $generated@@80))))) (<= ($generated@@62 0) ($generated@@77 $generated@@80)))
 :pattern ( ($generated@@77 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@79 $generated@@7 $generated@@81 $generated@@22) (<= ($generated@@62 0) ($generated@@12 $generated@@81)))
 :pattern ( ($generated@@79 $generated@@7 $generated@@81 $generated@@22))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@82 ($generated@@74 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@21 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@82 ($generated@@74 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@58 $generated@@87 $generated@@88) (=> ($generated@@82 $generated@@89 $generated@@90 $generated@@87) ($generated@@82 $generated@@89 $generated@@90 $generated@@88)))
 :pattern ( ($generated@@58 $generated@@87 $generated@@88) ($generated@@82 $generated@@89 $generated@@90 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (!  (=> ($generated@@58 $generated@@91 $generated@@92) (=> ($generated@@21 $generated@@95 $generated@@93 $generated@@94 $generated@@91) ($generated@@21 $generated@@95 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@58 $generated@@91 $generated@@92) ($generated@@21 $generated@@95 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@79 $generated@@25 $generated@@96 $generated@@26)  (and ($generated@@79 $generated@@25 $generated@@96 $generated@@27) (or (not (= $generated@@96 $generated@@30)) (not true))))
 :pattern ( ($generated@@79 $generated@@25 $generated@@96 $generated@@26))
 :pattern ( ($generated@@79 $generated@@25 $generated@@96 $generated@@27))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or (not (= $generated@@97 $generated@@99)) (not true)) (=> (and ($generated@@58 $generated@@97 $generated@@98) ($generated@@58 $generated@@98 $generated@@99)) ($generated@@58 $generated@@97 $generated@@99)))
 :pattern ( ($generated@@58 $generated@@97 $generated@@98) ($generated@@58 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@31 $generated@@101 ($generated@@74 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@74 $generated@@101 $generated@@100))
)))
(assert  (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@102 $generated@@105 $generated@@106 $generated@@107 ($generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@102 $generated@@112 $generated@@113 $generated@@114 ($generated@@104 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@102 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@102 $generated@@121 $generated@@122 $generated@@123 ($generated@@104 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@102 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Bool) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@10 ($generated@@102 $generated@@25 $generated@@33 $generated@@6 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@130)) (not true)) ($generated@@10 ($generated@@31 $generated@@6 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@131 $generated@@134) $generated@@132)))) $generated@@133))
 :pattern ( ($generated@@102 $generated@@25 $generated@@33 $generated@@6 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (or ($generated@@68 $generated@@136) (and (< 3 $generated@@69) (and (and (or (not (= $generated@@136 $generated@@30)) (not true)) ($generated@@79 $generated@@25 $generated@@136 $generated@@26)) ($generated@@70 $generated@@136)))) ($generated@@79 $generated@@25 ($generated@@67 $generated@@136) $generated@@26))
 :pattern ( ($generated@@67 $generated@@136))
)))
(assert (= ($generated@@137 $generated@@22) $generated@@0))
(assert (= ($generated@@138 $generated@@22) $generated@@3))
(assert (= ($generated@@137 $generated@@26) $generated@@1))
(assert (= ($generated@@138 $generated@@26) $generated@@4))
(assert (= ($generated@@137 $generated@@27) $generated@@2))
(assert (= ($generated@@138 $generated@@27) $generated@@4))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@79 $generated@@25 $generated@@141 $generated@@27)  (or (= $generated@@141 $generated@@30) ($generated@@139 ($generated@@140 $generated@@141))))
 :pattern ( ($generated@@79 $generated@@25 $generated@@141 $generated@@27))
)))
(assert (forall (($generated@@142 Int) ) (! (= ($generated@@74 $generated@@7 ($generated@@11 ($generated@@62 $generated@@142))) ($generated@@64 $generated@@34 ($generated@@74 $generated@@7 ($generated@@11 $generated@@142))))
 :pattern ( ($generated@@74 $generated@@7 ($generated@@11 ($generated@@62 $generated@@142))))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@74 $generated@@144 ($generated@@64 $generated@@144 $generated@@143)) ($generated@@64 $generated@@34 ($generated@@74 $generated@@144 $generated@@143)))
 :pattern ( ($generated@@74 $generated@@144 ($generated@@64 $generated@@144 $generated@@143)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 () Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@166  (=> (not ($generated@@70 $generated@@145)) (and (=> (= (ControlFlow 0 7) (- 0 10)) true) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (not (= $generated@@145 $generated@@30)) (not true))) (=> (or (not (= $generated@@145 $generated@@30)) (not true)) (=> ($generated@@82 ($generated@@74 $generated@@25 $generated@@145) $generated@@27 $generated@@146) (and (=> (= (ControlFlow 0 7) (- 0 8)) (not ($generated@@70 $generated@@145))) (=> (and (and (and (and (not ($generated@@70 $generated@@145)) ($generated@@78 $generated@@145)) (and ($generated@@78 $generated@@145) (= $generated@@147 ($generated@@77 $generated@@145)))) (and (and ($generated@@79 $generated@@25 $generated@@148 $generated@@26) ($generated@@21 $generated@@25 $generated@@148 $generated@@26 $generated@@149)) (and ($generated@@71 $generated@@150) ($generated@@151 $generated@@150)))) (and (and (and ($generated@@79 $generated@@25 $generated@@152 $generated@@26) ($generated@@21 $generated@@25 $generated@@152 $generated@@26 $generated@@150)) (forall (($generated@@167 T@U) ) (!  (=> (and (or (not (= $generated@@167 $generated@@30)) (not true)) ($generated@@10 ($generated@@31 $generated@@6 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@146 $generated@@167) $generated)))) (= ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@150 $generated@@167) ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@146 $generated@@167)))
 :pattern ( ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@150 $generated@@167))
))) (and ($generated@@58 $generated@@146 $generated@@150) (= (ControlFlow 0 7) (- 0 6))))) true)))))))))
(let (($generated@@168  (=> ($generated@@70 $generated@@145) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@145 $generated@@30)) (not true))) (=> (or (not (= $generated@@145 $generated@@30)) (not true)) (=> ($generated@@82 ($generated@@74 $generated@@25 $generated@@145) $generated@@27 $generated@@146) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@70 $generated@@145)) (=> ($generated@@70 $generated@@145) (=> (and (and ($generated@@68 $generated@@145) ($generated@@68 $generated@@145)) (and (= $generated@@153 ($generated@@67 $generated@@145)) (= (ControlFlow 0 2) (- 0 1)))) true))))))))))
(let (($generated@@169  (=> (and (= $generated@@154 ($generated@@103 $generated@@30 $generated@@149 $generated false)) (=> $generated@@155 (and ($generated@@79 $generated@@25 $generated@@156 $generated@@26) ($generated@@21 $generated@@25 $generated@@156 $generated@@26 $generated@@149)))) (and (=> (= (ControlFlow 0 11) (- 0 15)) (= $generated@@157 $generated@@158)) (=> (= $generated@@157 $generated@@158) (and (=> (= (ControlFlow 0 11) (- 0 14)) ($generated@@79 $generated@@7 ($generated@@11 ($generated@@62 12)) $generated@@22)) (=> ($generated@@79 $generated@@7 ($generated@@11 ($generated@@62 12)) $generated@@22) (=> (= $generated@@159 ($generated@@62 12)) (=> (and (and (and ($generated@@79 $generated@@25 $generated@@160 $generated@@26) ($generated@@21 $generated@@25 $generated@@160 $generated@@26 $generated@@149)) (and ($generated@@71 $generated@@146) ($generated@@151 $generated@@146))) (and (and ($generated@@79 $generated@@25 $generated@@145 $generated@@26) ($generated@@21 $generated@@25 $generated@@145 $generated@@26 $generated@@146)) (and (forall (($generated@@170 T@U) ) (!  (=> (and (or (not (= $generated@@170 $generated@@30)) (not true)) ($generated@@10 ($generated@@31 $generated@@6 ($generated@@32 $generated@@33 $generated@@34 ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@149 $generated@@170) $generated)))) (= ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@146 $generated@@170) ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@149 $generated@@170)))
 :pattern ( ($generated@@32 $generated@@25 ($generated@@35 $generated@@33 $generated@@34) $generated@@146 $generated@@170))
)) ($generated@@58 $generated@@149 $generated@@146)))) (and (=> (= (ControlFlow 0 11) (- 0 13)) true) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (not (= $generated@@145 $generated@@30)) (not true))) (=> (or (not (= $generated@@145 $generated@@30)) (not true)) (=> ($generated@@82 ($generated@@74 $generated@@25 $generated@@145) $generated@@27 $generated@@146) (=> (and ($generated@@161 $generated@@145) ($generated@@161 $generated@@145)) (and (=> (= (ControlFlow 0 11) 2) $generated@@168) (=> (= (ControlFlow 0 11) 7) $generated@@166))))))))))))))))
(let (($generated@@171  (=> (and (and ($generated@@71 $generated@@149) ($generated@@151 $generated@@149)) (and ($generated@@79 $generated@@25 $generated@@157 $generated@@26) ($generated@@21 $generated@@25 $generated@@157 $generated@@26 $generated@@149))) (=> (and (and (and (and ($generated@@79 $generated@@25 $generated@@158 $generated@@26) ($generated@@21 $generated@@25 $generated@@158 $generated@@26 $generated@@149)) (=> $generated@@162 (and ($generated@@79 $generated@@25 $generated@@163 $generated@@26) ($generated@@21 $generated@@25 $generated@@163 $generated@@26 $generated@@149)))) (and (<= ($generated@@62 0) $generated@@164) true)) (and (and (=> $generated@@155 (and ($generated@@79 $generated@@25 $generated@@165 $generated@@26) ($generated@@21 $generated@@25 $generated@@165 $generated@@26 $generated@@149))) true) (and (= 4 $generated@@69) (= (ControlFlow 0 16) 11)))) $generated@@169))))
$generated@@171)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 11) (- 15))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
