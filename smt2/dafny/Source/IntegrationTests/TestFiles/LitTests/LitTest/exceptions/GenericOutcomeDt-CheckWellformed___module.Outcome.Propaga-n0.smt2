(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U Int) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () Int)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@62 (T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@116 (T@U) Int)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@T) T@T)
(declare-fun $generated@@133 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@29) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (and (<= 0 $generated@@31) (< $generated@@31 ($generated@@26 $generated@@30))) (< ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@30 $generated@@31))) ($generated@@27 ($generated@@25 $generated@@30))))
 :pattern ( ($generated@@24 $generated@@30 $generated@@31) ($generated@@25 $generated@@30))
)))
(assert (= ($generated@@26 $generated@@32) 0))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or ($generated@@36 $generated@@40 ($generated@@35 $generated@@29 $generated@@41)) (and (< 0 $generated@@33) ($generated@@37 $generated@@29 $generated@@41 ($generated@@38 $generated@@40)))) (= ($generated@@34 $generated@@40 ($generated@@35 $generated@@29 $generated@@41)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@11 ($generated@@39 ($generated@@35 $generated@@29 $generated@@41)))))))
 :weight 3
 :pattern ( ($generated@@34 $generated@@40 ($generated@@35 $generated@@29 $generated@@41)))
))))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@35 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@35 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@44 $generated@@46) (= ($generated@@45 $generated@@46) $generated@@3))
 :pattern ( ($generated@@44 $generated@@46))
)))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@39 $generated@@47) (= ($generated@@45 $generated@@47) $generated@@5))
 :pattern ( ($generated@@39 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 ($generated@@28 $generated@@50 $generated@@49)) $generated@@49)
 :pattern ( ($generated@@28 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@44 $generated@@52) (exists (($generated@@53 T@U) ) (= $generated@@52 ($generated@@51 $generated@@53))))
 :pattern ( ($generated@@44 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (!  (=> ($generated@@39 $generated@@54) (exists (($generated@@55 T@U) ) (= $generated@@54 ($generated@@25 $generated@@55))))
 :pattern ( ($generated@@39 $generated@@54))
)))
(assert  (=> (<= 1 $generated@@33) (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or ($generated@@57 $generated@@59 $generated@@60 $generated@@61) (and (< 1 $generated@@33) (and ($generated@@37 $generated@@29 $generated@@61 ($generated@@38 $generated@@59)) ($generated@@34 $generated@@59 $generated@@61)))) (= ($generated@@56 $generated@@59 $generated@@60 $generated@@61) ($generated@@25 ($generated@@58 $generated@@61))))
 :pattern ( ($generated@@56 $generated@@59 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@62 ($generated@@48 $generated@@67 $generated@@64) $generated@@65 $generated@@66) ($generated@@63 $generated@@67 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@62 ($generated@@48 $generated@@67 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (and (= ($generated@@23 ($generated@@38 $generated@@69)) $generated@@4) (= ($generated@@68 ($generated@@38 $generated@@69)) $generated@@6))
 :pattern ( ($generated@@38 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@70 $generated@@73) (= ($generated@@63 $generated@@29 ($generated@@51 $generated@@72) ($generated@@38 $generated@@71) $generated@@73) ($generated@@62 $generated@@72 $generated@@71 $generated@@73)))
 :pattern ( ($generated@@63 $generated@@29 ($generated@@51 $generated@@72) ($generated@@38 $generated@@71) $generated@@73))
)))
(assert (= ($generated@@7 $generated@@74) 4))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and ($generated@@70 $generated@@77) (and ($generated@@39 $generated@@76) (exists (($generated@@78 T@U) ) (! ($generated@@63 $generated@@29 $generated@@76 ($generated@@38 $generated@@78) $generated@@77)
 :pattern ( ($generated@@63 $generated@@29 $generated@@76 ($generated@@38 $generated@@78) $generated@@77))
)))) ($generated@@63 $generated@@74 ($generated@@58 $generated@@76) ($generated@@75 $generated) $generated@@77))
 :pattern ( ($generated@@63 $generated@@74 ($generated@@58 $generated@@76) ($generated@@75 $generated) $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> ($generated@@70 $generated@@81) (= ($generated@@63 $generated@@29 ($generated@@25 $generated@@80) ($generated@@38 $generated@@79) $generated@@81) ($generated@@63 $generated@@74 $generated@@80 ($generated@@75 $generated) $generated@@81)))
 :pattern ( ($generated@@63 $generated@@29 ($generated@@25 $generated@@80) ($generated@@38 $generated@@79) $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@37 $generated@@29 $generated@@83 ($generated@@38 $generated@@82)) (or ($generated@@44 $generated@@83) ($generated@@39 $generated@@83)))
 :pattern ( ($generated@@39 $generated@@83) ($generated@@37 $generated@@29 $generated@@83 ($generated@@38 $generated@@82)))
 :pattern ( ($generated@@44 $generated@@83) ($generated@@37 $generated@@29 $generated@@83 ($generated@@38 $generated@@82)))
)))
(assert (= ($generated@@7 $generated@@85) 5))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@84 $generated@@86 $generated) (and (= ($generated@@48 $generated@@85 ($generated@@28 $generated@@85 $generated@@86)) $generated@@86) ($generated@@37 $generated@@85 ($generated@@28 $generated@@85 $generated@@86) $generated)))
 :pattern ( ($generated@@84 $generated@@86 $generated))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@84 ($generated@@48 $generated@@89 $generated@@87) $generated@@88) ($generated@@37 $generated@@89 $generated@@87 $generated@@88))
 :pattern ( ($generated@@84 ($generated@@48 $generated@@89 $generated@@87) $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (<= 0 ($generated@@26 $generated@@90))
 :pattern ( ($generated@@26 $generated@@90))
)))
(assert  (=> (<= 1 $generated@@33) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and (or ($generated@@57 $generated@@92 $generated@@93 $generated@@94) (and (< 1 $generated@@33) (and ($generated@@63 $generated@@29 $generated@@94 ($generated@@38 $generated@@92) $generated@@91) ($generated@@34 $generated@@92 $generated@@94)))) ($generated@@70 $generated@@91)) ($generated@@63 $generated@@29 ($generated@@56 $generated@@92 $generated@@93 $generated@@94) ($generated@@38 $generated@@93) $generated@@91))
 :pattern ( ($generated@@63 $generated@@29 ($generated@@56 $generated@@92 $generated@@93 $generated@@94) ($generated@@38 $generated@@93) $generated@@91))
))))
(assert  (=> (<= 1 $generated@@33) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@57 $generated@@95 $generated@@96 $generated@@97) (and (< 1 $generated@@33) (and ($generated@@37 $generated@@29 $generated@@97 ($generated@@38 $generated@@95)) ($generated@@34 $generated@@95 $generated@@97)))) ($generated@@37 $generated@@29 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) ($generated@@38 $generated@@96)))
 :pattern ( ($generated@@56 $generated@@95 $generated@@96 $generated@@97))
))))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@63 $generated@@74 $generated@@98 ($generated@@75 $generated@@99) $generated@@100) (forall (($generated@@101 Int) ) (!  (=> (and (<= 0 $generated@@101) (< $generated@@101 ($generated@@26 $generated@@98))) ($generated@@62 ($generated@@24 $generated@@98 $generated@@101) $generated@@99 $generated@@100))
 :pattern ( ($generated@@24 $generated@@98 $generated@@101))
)))
 :pattern ( ($generated@@63 $generated@@74 $generated@@98 ($generated@@75 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@102 ($generated@@75 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@75 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@23 ($generated@@75 $generated@@104)) $generated@@1)
 :pattern ( ($generated@@75 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@45 ($generated@@51 $generated@@105)) $generated@@3)
 :pattern ( ($generated@@51 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 ($generated@@38 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@38 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@51 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@51 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@45 ($generated@@25 $generated@@110)) $generated@@5)
 :pattern ( ($generated@@25 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@58 ($generated@@25 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@25 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@28 $generated@@113 ($generated@@48 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@48 $generated@@113 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@37 $generated@@29 ($generated@@51 $generated@@115) ($generated@@38 $generated@@114)) ($generated@@84 $generated@@115 $generated@@114))
 :pattern ( ($generated@@37 $generated@@29 ($generated@@51 $generated@@115) ($generated@@38 $generated@@114)))
)))
(assert (forall (($generated@@117 T@U) ) (! (< ($generated@@116 $generated@@117) ($generated@@27 ($generated@@51 $generated@@117)))
 :pattern ( ($generated@@51 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (< ($generated@@118 $generated@@119) ($generated@@27 ($generated@@25 $generated@@119)))
 :pattern ( ($generated@@25 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@70 $generated@@122) (and ($generated@@44 $generated@@120) ($generated@@63 $generated@@29 $generated@@120 ($generated@@38 $generated@@121) $generated@@122))) ($generated@@62 ($generated@@108 $generated@@120) $generated@@121 $generated@@122))
 :pattern ( ($generated@@62 ($generated@@108 $generated@@120) $generated@@121 $generated@@122))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@123 $generated@@134 $generated@@135 $generated@@136 ($generated@@130 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@123 $generated@@141 $generated@@142 $generated@@143 ($generated@@130 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@123 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@123 $generated@@150 $generated@@151 $generated@@152 ($generated@@130 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))) (= ($generated@@7 $generated@@124) 6)) (= ($generated@@7 $generated@@125) 7)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@127 $generated@@159 $generated@@160 ($generated@@131 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@163) $generated@@161)
 :weight 0
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@168 $generated@@169) (= ($generated@@127 $generated@@164 $generated@@165 ($generated@@131 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@127 $generated@@164 $generated@@165 $generated@@167 $generated@@169)))
 :weight 0
))) (= ($generated@@7 $generated@@128) 8)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@7 ($generated@@129 $generated@@170 $generated@@171)) 9))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@132 ($generated@@129 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@129 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@133 ($generated@@129 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@129 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@12 ($generated@@123 $generated@@124 $generated@@125 $generated@@8 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (or (not (= $generated@@180 $generated@@176)) (not true)) ($generated@@12 ($generated@@28 $generated@@8 ($generated@@127 $generated@@125 $generated@@128 ($generated@@127 $generated@@124 ($generated@@129 $generated@@125 $generated@@128) $generated@@177 $generated@@180) $generated@@178)))) $generated@@179))
 :pattern ( ($generated@@123 $generated@@124 $generated@@125 $generated@@8 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@116 ($generated@@48 $generated@@29 $generated@@182)) ($generated@@27 $generated@@182))
 :pattern ( ($generated@@116 ($generated@@48 $generated@@29 $generated@@182)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@84 $generated@@183 ($generated@@75 $generated@@184)) (and (= ($generated@@48 $generated@@74 ($generated@@28 $generated@@74 $generated@@183)) $generated@@183) ($generated@@37 $generated@@74 ($generated@@28 $generated@@74 $generated@@183) ($generated@@75 $generated@@184))))
 :pattern ( ($generated@@84 $generated@@183 ($generated@@75 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@84 $generated@@186 ($generated@@38 $generated@@185)) (and (= ($generated@@48 $generated@@29 ($generated@@28 $generated@@29 $generated@@186)) $generated@@186) ($generated@@37 $generated@@29 ($generated@@28 $generated@@29 $generated@@186) ($generated@@38 $generated@@185))))
 :pattern ( ($generated@@84 $generated@@186 ($generated@@38 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@37 $generated@@29 ($generated@@25 $generated@@188) ($generated@@38 $generated@@187)) ($generated@@37 $generated@@74 $generated@@188 ($generated@@75 $generated)))
 :pattern ( ($generated@@37 $generated@@29 ($generated@@25 $generated@@188) ($generated@@38 $generated@@187)))
)))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (or ($generated@@36 $generated@@189 $generated@@190) (and (< 0 $generated@@33) ($generated@@37 $generated@@29 $generated@@190 ($generated@@38 $generated@@189)))) (= ($generated@@34 $generated@@189 $generated@@190) ($generated@@39 $generated@@190)))
 :pattern ( ($generated@@34 $generated@@189 $generated@@190))
))))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@51 ($generated@@35 $generated@@128 $generated@@191)) ($generated@@35 $generated@@29 ($generated@@51 $generated@@191)))
 :pattern ( ($generated@@51 ($generated@@35 $generated@@128 $generated@@191)))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@25 ($generated@@35 $generated@@74 $generated@@192)) ($generated@@35 $generated@@29 ($generated@@25 $generated@@192)))
 :pattern ( ($generated@@25 ($generated@@35 $generated@@74 $generated@@192)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@T) ) (! (= ($generated@@48 $generated@@194 ($generated@@35 $generated@@194 $generated@@193)) ($generated@@35 $generated@@128 ($generated@@48 $generated@@194 $generated@@193)))
 :pattern ( ($generated@@48 $generated@@194 ($generated@@35 $generated@@194 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> (= ($generated@@26 $generated@@195) 0) (= $generated@@195 $generated@@32))
 :pattern ( ($generated@@26 $generated@@195))
)))
(assert  (=> (<= 1 $generated@@33) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (or ($generated@@57 $generated@@196 $generated@@197 ($generated@@35 $generated@@29 $generated@@198)) (and (< 1 $generated@@33) (and ($generated@@37 $generated@@29 $generated@@198 ($generated@@38 $generated@@196)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@11 ($generated@@34 $generated@@196 ($generated@@35 $generated@@29 $generated@@198)))))))) (= ($generated@@56 $generated@@196 $generated@@197 ($generated@@35 $generated@@29 $generated@@198)) ($generated@@35 $generated@@29 ($generated@@25 ($generated@@35 $generated@@74 ($generated@@58 ($generated@@35 $generated@@29 $generated@@198)))))))
 :weight 3
 :pattern ( ($generated@@56 $generated@@196 $generated@@197 ($generated@@35 $generated@@29 $generated@@198)))
))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! ($generated@@63 $generated@@85 $generated@@200 $generated $generated@@199)
 :pattern ( ($generated@@63 $generated@@85 $generated@@200 $generated $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@37 $generated@@74 $generated@@201 ($generated@@75 $generated@@202)) (forall (($generated@@203 Int) ) (!  (=> (and (<= 0 $generated@@203) (< $generated@@203 ($generated@@26 $generated@@201))) ($generated@@84 ($generated@@24 $generated@@201 $generated@@203) $generated@@202))
 :pattern ( ($generated@@24 $generated@@201 $generated@@203))
)))
 :pattern ( ($generated@@37 $generated@@74 $generated@@201 ($generated@@75 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 Int) ) (!  (=> (and (<= 0 $generated@@205) (< $generated@@205 ($generated@@26 $generated@@204))) (< ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@204 $generated@@205))) ($generated@@118 $generated@@204)))
 :pattern ( ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@204 $generated@@205))))
)))
(assert (forall (($generated@@206 T@U) ) (! ($generated@@37 $generated@@85 $generated@@206 $generated)
 :pattern ( ($generated@@37 $generated@@85 $generated@@206 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@213  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@39 $generated@@207))))
(let (($generated@@214 true))
(let (($generated@@215  (=> (and (and (= $generated@@208 ($generated@@126 $generated@@209 $generated@@210 $generated@@2 false)) ($generated@@62 ($generated@@48 $generated@@29 $generated@@207) ($generated@@38 $generated@@211) $generated@@210)) (and ($generated@@36 $generated@@211 $generated@@207) ($generated@@34 $generated@@211 $generated@@207))) (and (=> (= (ControlFlow 0 4) 1) $generated@@214) (=> (= (ControlFlow 0 4) 3) $generated@@213)))))
(let (($generated@@216  (=> (and ($generated@@70 $generated@@210) ($generated@@212 $generated@@210)) (=> (and (and ($generated@@37 $generated@@29 $generated@@207 ($generated@@38 $generated@@211)) ($generated@@63 $generated@@29 $generated@@207 ($generated@@38 $generated@@211) $generated@@210)) (and (= 1 $generated@@33) (= (ControlFlow 0 5) 4))) $generated@@215))))
$generated@@216)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
