(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (Int) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@71 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@97 (T@U) Int)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert (= ($generated@@5 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35) ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@37 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@37 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@37 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@5 $generated@@38) 4)) (= ($generated@@5 $generated@@39) 5)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@5 ($generated@@40 $generated@@55 $generated@@56)) 6))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@40 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@40 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@40 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@62 ($generated@@24 $generated@@61) $generated@@63)  (or (= $generated@@62 $generated@@25) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@63 $generated@@62) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@62 ($generated@@24 $generated@@61) $generated@@63))
)))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@64 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 Int) ) (!  (=> (and (and (and ($generated@@70 $generated@@73) (and (or (not (= $generated@@74 $generated@@25)) (not true)) (= ($generated@@26 $generated@@74) ($generated@@24 $generated@@72)))) (and (<= 0 $generated@@75) (< $generated@@75 ($generated@@23 $generated@@74)))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@73 $generated@@74) $generated@@1)))) ($generated@@71 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@73 $generated@@74) ($generated@@69 $generated@@75)) $generated@@72 $generated@@73))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@73 $generated@@74) ($generated@@69 $generated@@75)) ($generated@@24 $generated@@72))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@36 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@36 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@80 ($generated@@32 $generated@@79))  (and ($generated@@27 $generated@@31 $generated@@80 ($generated@@24 $generated@@79)) (or (not (= $generated@@80 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@80 ($generated@@32 $generated@@79)))
 :pattern ( ($generated@@27 $generated@@31 $generated@@80 ($generated@@24 $generated@@79)))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@71 ($generated@@76 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@30 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@71 ($generated@@76 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@86)) $generated@@2) (= ($generated@@85 ($generated@@24 $generated@@86)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (!  (and (= ($generated@@22 ($generated@@32 $generated@@87)) $generated@@3) (= ($generated@@85 ($generated@@32 $generated@@87)) $generated@@4))
 :pattern ( ($generated@@32 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@89 ($generated@@24 $generated@@88))  (or (= $generated@@89 $generated@@25) (= ($generated@@26 $generated@@89) ($generated@@24 $generated@@88))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@89 ($generated@@24 $generated@@88)))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@90 $generated@@91 $generated) (and (= ($generated@@76 $generated@@7 ($generated@@36 $generated@@7 $generated@@91)) $generated@@91) ($generated@@27 $generated@@7 ($generated@@36 $generated@@7 $generated@@91) $generated)))
 :pattern ( ($generated@@90 $generated@@91 $generated))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@90 ($generated@@76 $generated@@94 $generated@@92) $generated@@93) ($generated@@27 $generated@@94 $generated@@92 $generated@@93))
 :pattern ( ($generated@@90 ($generated@@76 $generated@@94 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (<= 0 ($generated@@23 $generated@@95))
 :pattern ( ($generated@@23 $generated@@95))
)))
(assert (forall (($generated@@96 Int) ) (! (= ($generated@@21 ($generated@@69 $generated@@96)) 1)
 :pattern ( ($generated@@69 $generated@@96))
)))
(assert (forall (($generated@@98 Int) ) (! (= ($generated@@97 ($generated@@69 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@69 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@99 ($generated@@24 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@24 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@101 ($generated@@32 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@32 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@36 $generated@@104 ($generated@@76 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@76 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and (and ($generated@@70 $generated@@106) (and (or (not (= $generated@@107 $generated@@25)) (not true)) (= ($generated@@26 $generated@@107) ($generated@@24 $generated@@105)))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@106 $generated@@107) $generated@@1)))) ($generated@@30 $generated@@7 ($generated@@11 ($generated@@23 $generated@@107)) $generated $generated@@106))
 :pattern ( ($generated@@23 $generated@@107) ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@106 $generated@@107) $generated@@1)) ($generated@@24 $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 Int) ) (!  (=> (and (and ($generated@@70 $generated@@109) (and (or (not (= $generated@@110 $generated@@25)) (not true)) (= ($generated@@26 $generated@@110) ($generated@@24 $generated@@108)))) (and (<= 0 $generated@@111) (< $generated@@111 ($generated@@23 $generated@@110)))) ($generated@@90 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@109 $generated@@110) ($generated@@69 $generated@@111)) $generated@@108))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@109 $generated@@110) ($generated@@69 $generated@@111)) ($generated@@24 $generated@@108))
)))
(assert  (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@112 $generated@@115 $generated@@116 $generated@@117 ($generated@@114 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@112 $generated@@122 $generated@@123 $generated@@124 ($generated@@114 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@112 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@112 $generated@@131 $generated@@132 $generated@@133 ($generated@@114 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@112 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 Bool) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@10 ($generated@@112 $generated@@31 $generated@@38 $generated@@6 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))  (=> (and (or (not (= $generated@@144 $generated@@140)) (not true)) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@141 $generated@@144) $generated@@142)))) $generated@@143))
 :pattern ( ($generated@@112 $generated@@31 $generated@@38 $generated@@6 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@90 $generated@@147 ($generated@@24 $generated@@146)) (and (= ($generated@@76 $generated@@31 ($generated@@36 $generated@@31 $generated@@147)) $generated@@147) ($generated@@27 $generated@@31 ($generated@@36 $generated@@31 $generated@@147) ($generated@@24 $generated@@146))))
 :pattern ( ($generated@@90 $generated@@147 ($generated@@24 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@90 $generated@@149 ($generated@@32 $generated@@148)) (and (= ($generated@@76 $generated@@31 ($generated@@36 $generated@@31 $generated@@149)) $generated@@149) ($generated@@27 $generated@@31 ($generated@@36 $generated@@31 $generated@@149) ($generated@@32 $generated@@148))))
 :pattern ( ($generated@@90 $generated@@149 ($generated@@32 $generated@@148)))
)))
(assert (forall (($generated@@150 Int) ) (! (= ($generated@@76 $generated@@7 ($generated@@11 ($generated@@64 $generated@@150))) ($generated@@66 $generated@@39 ($generated@@76 $generated@@7 ($generated@@11 $generated@@150))))
 :pattern ( ($generated@@76 $generated@@7 ($generated@@11 ($generated@@64 $generated@@150))))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@76 $generated@@152 ($generated@@66 $generated@@152 $generated@@151)) ($generated@@66 $generated@@39 ($generated@@76 $generated@@152 $generated@@151)))
 :pattern ( ($generated@@76 $generated@@152 ($generated@@66 $generated@@152 $generated@@151)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! ($generated@@30 $generated@@7 $generated@@154 $generated $generated@@153)
 :pattern ( ($generated@@30 $generated@@7 $generated@@154 $generated $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! ($generated@@27 $generated@@7 $generated@@155 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@155 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@168 true))
(let (($generated@@169  (=> (and (and (<= $generated@@156 $generated@@157) (< $generated@@157 $generated@@158)) (< $generated@@158 $generated@@159)) (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (not (= $generated@@160 $generated@@25)) (not true))) (=> (or (not (= $generated@@160 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (and (<= 0 $generated@@157) (< $generated@@157 ($generated@@23 $generated@@160)))) (=> (and (<= 0 $generated@@157) (< $generated@@157 ($generated@@23 $generated@@160))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (not (= $generated@@160 $generated@@25)) (not true))) (=> (or (not (= $generated@@160 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 $generated@@158) (< $generated@@158 ($generated@@23 $generated@@160)))) (=> (and (<= 0 $generated@@158) (< $generated@@158 ($generated@@23 $generated@@160))) (=> (and (< ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@157)))) ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@158))))) (= (ControlFlow 0 3) 1)) $generated@@168))))))))))))
(let (($generated@@170  (=> (and (not (and (<= $generated@@156 $generated@@157) (< $generated@@157 $generated@@158))) (= (ControlFlow 0 9) 3)) $generated@@169)))
(let (($generated@@171  (=> (and (and (<= $generated@@156 $generated@@157) (< $generated@@157 $generated@@158)) (= (ControlFlow 0 8) 3)) $generated@@169)))
(let (($generated@@172  (=> (< $generated@@157 $generated@@156) (and (=> (= (ControlFlow 0 11) 8) $generated@@171) (=> (= (ControlFlow 0 11) 9) $generated@@170)))))
(let (($generated@@173  (=> (<= $generated@@156 $generated@@157) (and (=> (= (ControlFlow 0 10) 8) $generated@@171) (=> (= (ControlFlow 0 10) 9) $generated@@170)))))
(let (($generated@@174  (=> (and (=> (and (and (<= $generated@@156 $generated@@157) (< $generated@@157 $generated@@158)) (< $generated@@158 $generated@@159)) (< ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@157)))) ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@158)))))) (= (ControlFlow 0 2) 1)) $generated@@168)))
(let (($generated@@175  (=> (forall (($generated@@176 Int) ) (!  (and (=> (and (<= $generated@@156 $generated@@176) (< $generated@@176 $generated@@159)) (<= (- $generated@@162 $generated@@163) ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@176)))))) (=> (and (<= $generated@@156 $generated@@176) (< $generated@@176 $generated@@159)) (< ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@176)))) $generated@@162)))
 :pattern ( ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@176))))
)) (and (and (=> (= (ControlFlow 0 12) 2) $generated@@174) (=> (= (ControlFlow 0 12) 10) $generated@@173)) (=> (= (ControlFlow 0 12) 11) $generated@@172)))))
(let (($generated@@177  (=> (and (and (<= (- $generated@@162 $generated@@163) ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@164))))) (< ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@164)))) $generated@@162)) (= (ControlFlow 0 14) 12)) $generated@@175)))
(let (($generated@@178  (=> (and (< ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@164)))) (- $generated@@162 $generated@@163)) (= (ControlFlow 0 18) 14)) $generated@@177)))
(let (($generated@@179  (=> (<= (- $generated@@162 $generated@@163) ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@164))))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (or (not (= $generated@@160 $generated@@25)) (not true))) (=> (or (not (= $generated@@160 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@23 $generated@@160)))) (=> (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@23 $generated@@160))) (=> (= (ControlFlow 0 15) 14) $generated@@177))))))))
(let (($generated@@180  (=> (and (<= $generated@@156 $generated@@164) (< $generated@@164 $generated@@159)) (and (=> (= (ControlFlow 0 19) (- 0 21)) (or (not (= $generated@@160 $generated@@25)) (not true))) (=> (or (not (= $generated@@160 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 19) (- 0 20)) (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@23 $generated@@160)))) (=> (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@23 $generated@@160))) (and (=> (= (ControlFlow 0 19) 15) $generated@@179) (=> (= (ControlFlow 0 19) 18) $generated@@178)))))))))
(let (($generated@@181  (=> (and (< $generated@@164 $generated@@156) (= (ControlFlow 0 23) 19)) $generated@@180)))
(let (($generated@@182  (=> (and (<= $generated@@156 $generated@@164) (= (ControlFlow 0 22) 19)) $generated@@180)))
(let (($generated@@183  (=> (and (=> (and (<= $generated@@156 $generated@@164) (< $generated@@164 $generated@@159)) (and (<= (- $generated@@162 $generated@@163) ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@164))))) (< ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@161 $generated@@160) ($generated@@69 $generated@@164)))) $generated@@162))) (= (ControlFlow 0 13) 12)) $generated@@175)))
(let (($generated@@184  (=> (and (and (<= ($generated@@64 0) $generated@@156) (<= $generated@@156 $generated@@159)) (<= $generated@@159 ($generated@@23 $generated@@160))) (and (and (=> (= (ControlFlow 0 24) 13) $generated@@183) (=> (= (ControlFlow 0 24) 22) $generated@@182)) (=> (= (ControlFlow 0 24) 23) $generated@@181)))))
(let (($generated@@185  (=> (and (not (and (<= ($generated@@64 0) $generated@@156) (<= $generated@@156 $generated@@159))) (= (ControlFlow 0 27) 24)) $generated@@184)))
(let (($generated@@186  (=> (and (<= ($generated@@64 0) $generated@@156) (<= $generated@@156 $generated@@159)) (and (=> (= (ControlFlow 0 25) (- 0 26)) (or (not (= $generated@@160 $generated@@25)) (not true))) (=> (or (not (= $generated@@160 $generated@@25)) (not true)) (=> (= (ControlFlow 0 25) 24) $generated@@184))))))
(let (($generated@@187  (=> (< $generated@@156 ($generated@@64 0)) (and (=> (= (ControlFlow 0 29) 25) $generated@@186) (=> (= (ControlFlow 0 29) 27) $generated@@185)))))
(let (($generated@@188  (=> (<= ($generated@@64 0) $generated@@156) (and (=> (= (ControlFlow 0 28) 25) $generated@@186) (=> (= (ControlFlow 0 28) 27) $generated@@185)))))
(let (($generated@@189  (=> (= $generated@@165 ($generated@@113 $generated@@25 $generated@@161 $generated@@1 false)) (and (=> (= (ControlFlow 0 30) 28) $generated@@188) (=> (= (ControlFlow 0 30) 29) $generated@@187)))))
(let (($generated@@190  (=> (and ($generated@@70 $generated@@161) ($generated@@166 $generated@@161)) (=> (and (and (and ($generated@@27 $generated@@31 $generated@@160 ($generated@@32 $generated)) ($generated@@30 $generated@@31 $generated@@160 ($generated@@32 $generated) $generated@@161)) (<= ($generated@@64 0) $generated@@163)) (and (= 0 $generated@@167) (= (ControlFlow 0 31) 30))) $generated@@189))))
$generated@@190)))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
