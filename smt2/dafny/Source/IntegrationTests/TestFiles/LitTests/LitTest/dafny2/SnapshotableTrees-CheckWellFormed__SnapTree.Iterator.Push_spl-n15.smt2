(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@44 (T@U) Int)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U T@U T@U) Bool)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U Int) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Int)
(declare-fun $generated@@160 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@213 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated) $generated@@0))
(assert  (and (= ($generated@@14 $generated@@32) 3) (= ($generated@@14 $generated@@35) 4)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@31 $generated@@32 ($generated@@33 $generated@@37 $generated@@38) $generated@@34)  (and ($generated@@31 $generated@@35 $generated@@37 $generated@@36) ($generated@@31 $generated@@32 $generated@@38 $generated@@34)))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@33 $generated@@37 $generated@@38) $generated@@34))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@40 $generated@@43) (= ($generated@@39 $generated@@32 ($generated@@33 $generated@@41 $generated@@42) $generated@@34 $generated@@43)  (and ($generated@@39 $generated@@35 $generated@@41 $generated@@36 $generated@@43) ($generated@@39 $generated@@32 $generated@@42 $generated@@34 $generated@@43))))
 :pattern ( ($generated@@39 $generated@@32 ($generated@@33 $generated@@41 $generated@@42) $generated@@34 $generated@@43))
)))
(assert (= ($generated@@44 $generated@@45) 0))
(assert (= ($generated@@46 $generated@@47) $generated@@6))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@51 $generated@@48)  (or (= $generated@@51 $generated@@49) (= ($generated@@50 $generated@@51) $generated@@48)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@51 $generated@@48))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@39 $generated@@35 $generated@@54 $generated@@52 $generated@@55) ($generated@@39 $generated@@35 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@39 $generated@@35 $generated@@54 $generated@@52 $generated@@55))
 :pattern ( ($generated@@39 $generated@@35 $generated@@54 $generated@@53 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@39 $generated@@35 $generated@@56 $generated@@36 $generated@@57) ($generated@@39 $generated@@35 $generated@@56 $generated@@48 $generated@@57))
 :pattern ( ($generated@@39 $generated@@35 $generated@@56 $generated@@36 $generated@@57))
 :pattern ( ($generated@@39 $generated@@35 $generated@@56 $generated@@48 $generated@@57))
)))
(assert ($generated@@31 $generated@@32 $generated@@47 $generated@@34))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@40 $generated@@58) ($generated@@39 $generated@@32 $generated@@47 $generated@@34 $generated@@58))
 :pattern ( ($generated@@39 $generated@@32 $generated@@47 $generated@@34 $generated@@58))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@60 $generated@@67 $generated@@68 ($generated@@64 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@71) $generated@@69)
 :weight 0
)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@60 $generated@@72 $generated@@73 ($generated@@64 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@60 $generated@@72 $generated@@73 $generated@@75 $generated@@77)))
 :weight 0
))) (= ($generated@@14 $generated@@61) 5)) (= ($generated@@14 $generated@@62) 6)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (= ($generated@@14 ($generated@@63 $generated@@78 $generated@@79)) 7))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@65 ($generated@@63 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@66 ($generated@@63 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@63 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@39 $generated@@35 $generated@@84 $generated@@53 $generated@@85)  (or (= $generated@@84 $generated@@49) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@85 $generated@@84) $generated@@3)))))
 :pattern ( ($generated@@39 $generated@@35 $generated@@84 $generated@@53 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@39 $generated@@35 $generated@@86 $generated@@48 $generated@@87)  (or (= $generated@@86 $generated@@49) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@87 $generated@@86) $generated@@3)))))
 :pattern ( ($generated@@39 $generated@@35 $generated@@86 $generated@@48 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 $generated@@89) $generated@@89)
 :pattern ( ($generated@@88 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@91 $generated@@92) (= ($generated@@46 $generated@@92) $generated@@6))
 :pattern ( ($generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@93 $generated@@94) (= ($generated@@46 $generated@@94) $generated@@8))
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 ($generated@@59 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@59 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@93 $generated@@98) (exists (($generated@@99 T@U) ($generated@@100 T@U) ) (= $generated@@98 ($generated@@33 $generated@@99 $generated@@100))))
 :pattern ( ($generated@@93 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@91 $generated@@101) (= $generated@@101 $generated@@47))
 :pattern ( ($generated@@91 $generated@@101))
)))
(assert (= ($generated@@14 $generated@@102) 8))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@31 $generated@@102 $generated@@106 ($generated@@103 $generated@@107)) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@104 $generated@@106 $generated@@108) ($generated@@105 $generated@@108 $generated@@107))
 :pattern ( ($generated@@104 $generated@@106 $generated@@108))
)))
 :pattern ( ($generated@@31 $generated@@102 $generated@@106 ($generated@@103 $generated@@107)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@109 ($generated@@95 $generated@@113 $generated@@110) $generated@@111 $generated@@112) ($generated@@39 $generated@@113 $generated@@110 $generated@@111 $generated@@112))
 :pattern ( ($generated@@109 ($generated@@95 $generated@@113 $generated@@110) $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@105 $generated@@114 $generated@@53) (and (= ($generated@@95 $generated@@35 ($generated@@59 $generated@@35 $generated@@114)) $generated@@114) ($generated@@31 $generated@@35 ($generated@@59 $generated@@35 $generated@@114) $generated@@53)))
 :pattern ( ($generated@@105 $generated@@114 $generated@@53))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@105 $generated@@115 $generated@@52) (and (= ($generated@@95 $generated@@35 ($generated@@59 $generated@@35 $generated@@115)) $generated@@115) ($generated@@31 $generated@@35 ($generated@@59 $generated@@35 $generated@@115) $generated@@52)))
 :pattern ( ($generated@@105 $generated@@115 $generated@@52))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@105 $generated@@116 $generated@@34) (and (= ($generated@@95 $generated@@32 ($generated@@59 $generated@@32 $generated@@116)) $generated@@116) ($generated@@31 $generated@@32 ($generated@@59 $generated@@32 $generated@@116) $generated@@34)))
 :pattern ( ($generated@@105 $generated@@116 $generated@@34))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@105 $generated@@117 $generated@@36) (and (= ($generated@@95 $generated@@35 ($generated@@59 $generated@@35 $generated@@117)) $generated@@117) ($generated@@31 $generated@@35 ($generated@@59 $generated@@35 $generated@@117) $generated@@36)))
 :pattern ( ($generated@@105 $generated@@117 $generated@@36))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@105 $generated@@118 $generated@@48) (and (= ($generated@@95 $generated@@35 ($generated@@59 $generated@@35 $generated@@118)) $generated@@118) ($generated@@31 $generated@@35 ($generated@@59 $generated@@35 $generated@@118) $generated@@48)))
 :pattern ( ($generated@@105 $generated@@118 $generated@@48))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@119 $generated@@52)  (and ($generated@@31 $generated@@35 $generated@@119 $generated@@53) (or (not (= $generated@@119 $generated@@49)) (not true))))
 :pattern ( ($generated@@31 $generated@@35 $generated@@119 $generated@@52))
 :pattern ( ($generated@@31 $generated@@35 $generated@@119 $generated@@53))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@31 $generated@@35 $generated@@120 $generated@@36)  (and ($generated@@31 $generated@@35 $generated@@120 $generated@@48) (or (not (= $generated@@120 $generated@@49)) (not true))))
 :pattern ( ($generated@@31 $generated@@35 $generated@@120 $generated@@36))
 :pattern ( ($generated@@31 $generated@@35 $generated@@120 $generated@@48))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@121 $generated@@122) (or ($generated@@91 $generated@@122) ($generated@@93 $generated@@122)))
 :pattern ( ($generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@123 $generated@@34) (or ($generated@@91 $generated@@123) ($generated@@93 $generated@@123)))
 :pattern ( ($generated@@93 $generated@@123) ($generated@@31 $generated@@32 $generated@@123 $generated@@34))
 :pattern ( ($generated@@91 $generated@@123) ($generated@@31 $generated@@32 $generated@@123 $generated@@34))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@105 $generated@@124 $generated) (and (= ($generated@@95 $generated@@16 ($generated@@59 $generated@@16 $generated@@124)) $generated@@124) ($generated@@31 $generated@@16 ($generated@@59 $generated@@16 $generated@@124) $generated)))
 :pattern ( ($generated@@105 $generated@@124 $generated))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@105 ($generated@@95 $generated@@127 $generated@@125) $generated@@126) ($generated@@31 $generated@@127 $generated@@125 $generated@@126))
 :pattern ( ($generated@@105 ($generated@@95 $generated@@127 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (<= 0 ($generated@@44 $generated@@128))
 :pattern ( ($generated@@44 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@39 $generated@@102 $generated@@129 ($generated@@103 $generated@@130) $generated@@131) (forall (($generated@@132 T@U) ) (!  (=> ($generated@@104 $generated@@129 $generated@@132) ($generated@@109 $generated@@132 $generated@@130 $generated@@131))
 :pattern ( ($generated@@104 $generated@@129 $generated@@132))
)))
 :pattern ( ($generated@@39 $generated@@102 $generated@@129 ($generated@@103 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@46 ($generated@@33 $generated@@133 $generated@@134)) $generated@@8)
 :pattern ( ($generated@@33 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@135 ($generated@@33 $generated@@136 $generated@@137)) $generated@@136)
 :pattern ( ($generated@@33 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@138 ($generated@@33 $generated@@139 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@33 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! ($generated@@31 $generated@@35 $generated@@141 $generated@@53)
 :pattern ( ($generated@@31 $generated@@35 $generated@@141 $generated@@53))
)))
(assert (= ($generated@@14 $generated@@142) 9))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@39 $generated@@142 $generated@@145 ($generated@@143 $generated@@146) $generated@@147) (forall (($generated@@148 Int) ) (!  (=> (and (<= 0 $generated@@148) (< $generated@@148 ($generated@@44 $generated@@145))) ($generated@@109 ($generated@@144 $generated@@145 $generated@@148) $generated@@146 $generated@@147))
 :pattern ( ($generated@@144 $generated@@145 $generated@@148))
)))
 :pattern ( ($generated@@39 $generated@@142 $generated@@145 ($generated@@143 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@149 ($generated@@103 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@103 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@30 ($generated@@103 $generated@@151)) $generated@@1)
 :pattern ( ($generated@@103 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@143 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@143 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@30 ($generated@@143 $generated@@154)) $generated@@2)
 :pattern ( ($generated@@143 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@59 $generated@@156 ($generated@@95 $generated@@156 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@95 $generated@@156 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (< ($generated@@157 $generated@@159) ($generated@@157 ($generated@@33 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@33 $generated@@158 $generated@@159))
)))
(assert  (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@160 $generated@@163 $generated@@164 $generated@@165 ($generated@@162 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@168 $generated@@169) $generated@@166)
 :weight 0
)) (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@160 $generated@@170 $generated@@171 $generated@@172 ($generated@@162 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@177 $generated@@178) ($generated@@160 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@177 $generated@@178)))
 :weight 0
)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@160 $generated@@179 $generated@@180 $generated@@181 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@160 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@19 ($generated@@160 $generated@@35 $generated@@61 $generated@@15 ($generated@@161 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (or (not (= $generated@@192 $generated@@188)) (not true)) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@189 $generated@@192) $generated@@190)))) $generated@@191))
 :pattern ( ($generated@@160 $generated@@35 $generated@@61 $generated@@15 ($generated@@161 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@105 $generated@@194 ($generated@@103 $generated@@195)) (and (= ($generated@@95 $generated@@102 ($generated@@59 $generated@@102 $generated@@194)) $generated@@194) ($generated@@31 $generated@@102 ($generated@@59 $generated@@102 $generated@@194) ($generated@@103 $generated@@195))))
 :pattern ( ($generated@@105 $generated@@194 ($generated@@103 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@105 $generated@@196 ($generated@@143 $generated@@197)) (and (= ($generated@@95 $generated@@142 ($generated@@59 $generated@@142 $generated@@196)) $generated@@196) ($generated@@31 $generated@@142 ($generated@@59 $generated@@142 $generated@@196) ($generated@@143 $generated@@197))))
 :pattern ( ($generated@@105 $generated@@196 ($generated@@143 $generated@@197)))
)))
(assert (= ($generated@@30 $generated@@53) $generated@@4))
(assert (= ($generated@@198 $generated@@53) $generated@@11))
(assert (= ($generated@@30 $generated@@52) $generated@@5))
(assert (= ($generated@@198 $generated@@52) $generated@@11))
(assert (= ($generated@@30 $generated@@34) $generated@@7))
(assert (= ($generated@@198 $generated@@34) $generated@@12))
(assert (= ($generated@@30 $generated@@36) $generated@@9))
(assert (= ($generated@@198 $generated@@36) $generated@@13))
(assert (= ($generated@@30 $generated@@48) $generated@@10))
(assert (= ($generated@@198 $generated@@48) $generated@@13))
(assert (= $generated@@47 ($generated@@88 $generated@@32 $generated@@47)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and ($generated@@40 $generated@@200) (and ($generated@@93 $generated@@199) ($generated@@39 $generated@@32 $generated@@199 $generated@@34 $generated@@200))) ($generated@@39 $generated@@35 ($generated@@135 $generated@@199) $generated@@36 $generated@@200))
 :pattern ( ($generated@@39 $generated@@35 ($generated@@135 $generated@@199) $generated@@36 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@40 $generated@@202) (and ($generated@@93 $generated@@201) ($generated@@39 $generated@@32 $generated@@201 $generated@@34 $generated@@202))) ($generated@@39 $generated@@32 ($generated@@138 $generated@@201) $generated@@34 $generated@@202))
 :pattern ( ($generated@@39 $generated@@32 ($generated@@138 $generated@@201) $generated@@34 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@33 ($generated@@88 $generated@@35 $generated@@203) ($generated@@88 $generated@@32 $generated@@204)) ($generated@@88 $generated@@32 ($generated@@33 $generated@@203 $generated@@204)))
 :pattern ( ($generated@@33 ($generated@@88 $generated@@35 $generated@@203) ($generated@@88 $generated@@32 $generated@@204)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@T) ) (! (= ($generated@@95 $generated@@206 ($generated@@88 $generated@@206 $generated@@205)) ($generated@@88 $generated@@62 ($generated@@95 $generated@@206 $generated@@205)))
 :pattern ( ($generated@@95 $generated@@206 ($generated@@88 $generated@@206 $generated@@205)))
)))
(assert (forall (($generated@@207 T@U) ) (!  (=> (= ($generated@@44 $generated@@207) 0) (= $generated@@207 $generated@@45))
 :pattern ( ($generated@@44 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! ($generated@@39 $generated@@16 $generated@@209 $generated $generated@@208)
 :pattern ( ($generated@@39 $generated@@16 $generated@@209 $generated $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@31 $generated@@142 $generated@@210 ($generated@@143 $generated@@211)) (forall (($generated@@212 Int) ) (!  (=> (and (<= 0 $generated@@212) (< $generated@@212 ($generated@@44 $generated@@210))) ($generated@@105 ($generated@@144 $generated@@210 $generated@@212) $generated@@211))
 :pattern ( ($generated@@144 $generated@@210 $generated@@212))
)))
 :pattern ( ($generated@@31 $generated@@142 $generated@@210 ($generated@@143 $generated@@211)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 Int) ) (!  (=> (and (<= 0 $generated@@215) (< $generated@@215 ($generated@@44 $generated@@214))) (< ($generated@@157 ($generated@@59 $generated@@32 ($generated@@144 $generated@@214 $generated@@215))) ($generated@@213 $generated@@214)))
 :pattern ( ($generated@@157 ($generated@@59 $generated@@32 ($generated@@144 $generated@@214 $generated@@215))))
)))
(assert (forall (($generated@@216 T@U) ) (! ($generated@@31 $generated@@16 $generated@@216 $generated)
 :pattern ( ($generated@@31 $generated@@16 $generated@@216 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 (T@U) Bool)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () Int)
(declare-fun $generated@@225 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 2) (let (($generated@@226  (=> (and ($generated@@40 $generated@@217) ($generated@@218 $generated@@217)) (=> (and (and (and (and ($generated@@31 $generated@@32 $generated@@219 $generated@@34) ($generated@@39 $generated@@32 $generated@@219 $generated@@34 $generated@@217)) ($generated@@121 $generated@@219)) (and (and ($generated@@31 $generated@@35 $generated@@220 $generated@@36) ($generated@@39 $generated@@35 $generated@@220 $generated@@36 $generated@@217)) (and ($generated@@31 $generated@@142 $generated@@221 ($generated@@143 $generated)) ($generated@@39 $generated@@142 $generated@@221 ($generated@@143 $generated) $generated@@217)))) (and (and (and ($generated@@31 $generated@@102 $generated@@222 ($generated@@103 $generated@@52)) ($generated@@39 $generated@@102 $generated@@222 ($generated@@103 $generated@@52) $generated@@217)) (and ($generated@@31 $generated@@32 $generated@@223 $generated@@34) ($generated@@39 $generated@@32 $generated@@223 $generated@@34 $generated@@217))) (and (and (= 5 $generated@@224) (= $generated@@225 ($generated@@161 $generated@@49 $generated@@217 $generated@@3 false))) (and ($generated@@104 $generated@@222 ($generated@@95 $generated@@35 $generated@@220)) (= (ControlFlow 0 2) (- 0 1)))))) (or (not (= $generated@@220 $generated@@49)) (not true))))))
$generated@@226))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
