(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@U T@U T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@58 () Int)
(declare-fun $generated@@59 (T@U T@U T@U Int) T@U)
(declare-fun $generated@@60 (T@U T@U Int) Bool)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@117 (T@U T@U) Bool)
(declare-fun $generated@@123 (T@U) Int)
(declare-fun $generated@@124 (T@U) Int)
(declare-fun $generated@@132 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@136 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@137 (T@T T@T) T@T)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@8 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@8 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@26 $generated@@28 ($generated@@27 $generated@@29) $generated@@30) ($generated@@26 $generated@@28 $generated@@29 $generated@@30))
 :pattern ( ($generated@@26 $generated@@28 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (= ($generated@@31 $generated@@32) $generated@@2))
(assert (= ($generated@@6 $generated@@33) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@35 $generated@@37) ($generated@@22 $generated@@33 $generated@@32 ($generated@@34 $generated@@36) $generated@@37))
 :pattern ( ($generated@@22 $generated@@33 $generated@@32 ($generated@@34 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ) (! ($generated@@38 $generated@@33 $generated@@32 ($generated@@34 $generated@@39))
 :pattern ( ($generated@@38 $generated@@33 $generated@@32 ($generated@@34 $generated@@39)))
)))
(assert (forall (($generated@@41 Int) ) (! (= ($generated@@40 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@T) ) (! (= ($generated@@42 $generated@@44 $generated@@43) $generated@@43)
 :pattern ( ($generated@@42 $generated@@44 $generated@@43))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@38 $generated@@33 ($generated@@45 $generated@@48 $generated@@49) ($generated@@34 $generated@@47))  (and ($generated@@46 $generated@@48 $generated@@47) ($generated@@38 $generated@@33 $generated@@49 ($generated@@34 $generated@@47))))
 :pattern ( ($generated@@38 $generated@@33 ($generated@@45 $generated@@48 $generated@@49) ($generated@@34 $generated@@47)))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@50 $generated@@51) (= ($generated@@31 $generated@@51) $generated@@2))
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@52 $generated@@53) (= ($generated@@31 $generated@@53) $generated@@3))
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@55 $generated@@57 ($generated@@54 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@54 $generated@@57 $generated@@56))
)))
(assert (= ($generated@@6 $generated@@63) 4))
(assert  (=> (<= 2 $generated@@58) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 Int) ) (!  (=> (or ($generated@@60 $generated@@65 ($generated@@42 $generated@@33 $generated@@67) ($generated@@40 $generated@@68)) (and (< 2 $generated@@58) (and (and ($generated@@38 $generated@@33 $generated@@67 ($generated@@34 $generated@@65)) (<= ($generated@@40 0) $generated@@68)) ($generated@@11 ($generated@@42 $generated@@7 ($generated@@10 (< $generated@@68 ($generated@@26 $generated@@65 ($generated@@27 $generated@@61) ($generated@@42 $generated@@33 $generated@@67))))))))) (and (let (($generated@@69 ($generated@@42 $generated@@33 ($generated@@62 ($generated@@42 $generated@@33 $generated@@67)))))
 (=> (or (not (= ($generated@@40 $generated@@68) ($generated@@40 0))) (not true)) ($generated@@60 $generated@@65 $generated@@69 ($generated@@40 (- $generated@@68 1))))) (= ($generated@@59 $generated@@65 ($generated@@27 $generated@@66) ($generated@@42 $generated@@33 $generated@@67) ($generated@@40 $generated@@68)) (let (($generated@@70 ($generated@@42 $generated@@33 ($generated@@62 ($generated@@42 $generated@@33 $generated@@67)))))
(let (($generated@@71 ($generated@@42 $generated@@63 ($generated@@64 ($generated@@42 $generated@@33 $generated@@67)))))
(ite (= ($generated@@40 $generated@@68) ($generated@@40 0)) $generated@@71 ($generated@@59 $generated@@65 ($generated@@27 $generated@@66) $generated@@70 ($generated@@40 (- $generated@@68 1)))))))))
 :weight 3
 :pattern ( ($generated@@59 $generated@@65 ($generated@@27 $generated@@66) ($generated@@42 $generated@@33 $generated@@67) ($generated@@40 $generated@@68)))
))))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@52 $generated@@72) (exists (($generated@@73 T@U) ($generated@@74 T@U) ) (= $generated@@72 ($generated@@45 $generated@@73 $generated@@74))))
 :pattern ( ($generated@@52 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@50 $generated@@75) (= $generated@@75 $generated@@32))
 :pattern ( ($generated@@50 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@38 $generated@@8 $generated@@76 $generated@@23) (<= ($generated@@40 0) ($generated@@13 $generated@@76)))
 :pattern ( ($generated@@38 $generated@@8 $generated@@76 $generated@@23))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@55 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@22 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@55 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert  (=> (<= 2 $generated@@58) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 Int) ) (!  (=> (or ($generated@@60 $generated@@82 $generated@@84 $generated@@85) (and (< 2 $generated@@58) (and (and ($generated@@38 $generated@@33 $generated@@84 ($generated@@34 $generated@@82)) (<= ($generated@@40 0) $generated@@85)) (< $generated@@85 ($generated@@26 $generated@@82 ($generated@@27 $generated@@61) $generated@@84))))) ($generated@@46 ($generated@@59 $generated@@82 $generated@@83 $generated@@84 $generated@@85) $generated@@82))
 :pattern ( ($generated@@59 $generated@@82 $generated@@83 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@88 T@U) ) (!  (and (= ($generated@@86 ($generated@@34 $generated@@88)) $generated@@1) (= ($generated@@87 ($generated@@34 $generated@@88)) $generated@@5))
 :pattern ( ($generated@@34 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@46 $generated@@89 $generated@@23) (and (= ($generated@@55 $generated@@8 ($generated@@54 $generated@@8 $generated@@89)) $generated@@89) ($generated@@38 $generated@@8 ($generated@@54 $generated@@8 $generated@@89) $generated@@23)))
 :pattern ( ($generated@@46 $generated@@89 $generated@@23))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> ($generated@@38 $generated@@33 $generated@@91 ($generated@@34 $generated@@90)) (or ($generated@@50 $generated@@91) ($generated@@52 $generated@@91)))
 :pattern ( ($generated@@52 $generated@@91) ($generated@@38 $generated@@33 $generated@@91 ($generated@@34 $generated@@90)))
 :pattern ( ($generated@@50 $generated@@91) ($generated@@38 $generated@@33 $generated@@91 ($generated@@34 $generated@@90)))
)))
(assert  (=> (<= 2 $generated@@58) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 Int) ) (!  (=> (and (or ($generated@@60 $generated@@93 $generated@@95 $generated@@96) (and (< 2 $generated@@58) (and (and (and ($generated@@38 $generated@@33 $generated@@95 ($generated@@34 $generated@@93)) ($generated@@22 $generated@@33 $generated@@95 ($generated@@34 $generated@@93) $generated@@92)) (<= ($generated@@40 0) $generated@@96)) (< $generated@@96 ($generated@@26 $generated@@93 ($generated@@27 $generated@@61) $generated@@95))))) ($generated@@35 $generated@@92)) ($generated@@77 ($generated@@59 $generated@@93 $generated@@94 $generated@@95 $generated@@96) $generated@@93 $generated@@92))
 :pattern ( ($generated@@77 ($generated@@59 $generated@@93 $generated@@94 $generated@@95 $generated@@96) $generated@@93 $generated@@92))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@46 ($generated@@55 $generated@@99 $generated@@97) $generated@@98) ($generated@@38 $generated@@99 $generated@@97 $generated@@98))
 :pattern ( ($generated@@46 ($generated@@55 $generated@@99 $generated@@97) $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@31 ($generated@@45 $generated@@100 $generated@@101)) $generated@@3)
 :pattern ( ($generated@@45 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@64 ($generated@@45 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@45 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@62 ($generated@@45 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@45 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 ($generated@@34 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@34 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@54 $generated@@109 ($generated@@55 $generated@@109 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@55 $generated@@109 $generated@@108))
)))
(assert  (=> (<= 2 $generated@@58) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 Int) ) (!  (=> (or ($generated@@60 $generated@@110 $generated@@112 $generated@@113) (and (< 2 $generated@@58) (and (and ($generated@@38 $generated@@33 $generated@@112 ($generated@@34 $generated@@110)) (<= ($generated@@40 0) $generated@@113)) (< $generated@@113 ($generated@@26 $generated@@110 ($generated@@27 $generated@@61) $generated@@112))))) (and (let (($generated@@114 ($generated@@62 $generated@@112)))
 (=> (or (not (= $generated@@113 ($generated@@40 0))) (not true)) ($generated@@60 $generated@@110 $generated@@114 (- $generated@@113 1)))) (= ($generated@@59 $generated@@110 ($generated@@27 $generated@@111) $generated@@112 $generated@@113) (let (($generated@@115 ($generated@@62 $generated@@112)))
(let (($generated@@116 ($generated@@64 $generated@@112)))
(ite (= $generated@@113 ($generated@@40 0)) $generated@@116 ($generated@@59 $generated@@110 $generated@@111 $generated@@115 (- $generated@@113 1))))))))
 :pattern ( ($generated@@59 $generated@@110 ($generated@@27 $generated@@111) $generated@@112 $generated@@113))
))))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (or ($generated@@117 $generated@@118 $generated@@120) (and (< 1 $generated@@58) ($generated@@38 $generated@@33 $generated@@120 ($generated@@34 $generated@@118)))) (and (=> (not ($generated@@50 $generated@@120)) (let (($generated@@121 ($generated@@62 $generated@@120)))
($generated@@117 $generated@@118 $generated@@121))) (= ($generated@@26 $generated@@118 ($generated@@27 $generated@@119) $generated@@120) (ite ($generated@@50 $generated@@120) 0 (let (($generated@@122 ($generated@@62 $generated@@120)))
(+ 1 ($generated@@26 $generated@@118 $generated@@119 $generated@@122)))))))
 :pattern ( ($generated@@26 $generated@@118 ($generated@@27 $generated@@119) $generated@@120))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (< ($generated@@123 $generated@@125) ($generated@@124 ($generated@@45 $generated@@125 $generated@@126)))
 :pattern ( ($generated@@45 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (< ($generated@@124 $generated@@128) ($generated@@124 ($generated@@45 $generated@@127 $generated@@128)))
 :pattern ( ($generated@@45 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and ($generated@@35 $generated@@131) (and ($generated@@52 $generated@@129) ($generated@@22 $generated@@33 $generated@@129 ($generated@@34 $generated@@130) $generated@@131))) ($generated@@77 ($generated@@64 $generated@@129) $generated@@130 $generated@@131))
 :pattern ( ($generated@@77 ($generated@@64 $generated@@129) $generated@@130 $generated@@131))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@132 $generated@@142 $generated@@143 $generated@@144 ($generated@@138 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@147 $generated@@148) $generated@@145)
 :weight 0
)) (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@132 $generated@@149 $generated@@150 $generated@@151 ($generated@@138 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@132 $generated@@158 $generated@@159 $generated@@160 ($generated@@138 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@132 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)))) (= ($generated@@6 $generated@@133) 5)) (= ($generated@@6 $generated@@134) 6)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@136 $generated@@167 $generated@@168 ($generated@@139 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@169) $generated@@171) $generated@@169)
 :weight 0
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@176 $generated@@177) (= ($generated@@136 $generated@@172 $generated@@173 ($generated@@139 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@177) ($generated@@136 $generated@@172 $generated@@173 $generated@@175 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@6 ($generated@@137 $generated@@178 $generated@@179)) 7))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@140 ($generated@@137 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@137 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@141 ($generated@@137 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@137 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@11 ($generated@@132 $generated@@133 $generated@@134 $generated@@7 ($generated@@135 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))  (=> (and (or (not (= $generated@@188 $generated@@184)) (not true)) ($generated@@11 ($generated@@54 $generated@@7 ($generated@@136 $generated@@134 $generated@@63 ($generated@@136 $generated@@133 ($generated@@137 $generated@@134 $generated@@63) $generated@@185 $generated@@188) $generated@@186)))) $generated@@187))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134 $generated@@7 ($generated@@135 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@123 ($generated@@55 $generated@@33 $generated@@190)) ($generated@@124 $generated@@190))
 :pattern ( ($generated@@123 ($generated@@55 $generated@@33 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 Int) ) (! (= ($generated@@59 $generated@@191 ($generated@@27 $generated@@192) $generated@@193 $generated@@194) ($generated@@59 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
 :pattern ( ($generated@@59 $generated@@191 ($generated@@27 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@46 $generated@@196 ($generated@@34 $generated@@195)) (and (= ($generated@@55 $generated@@33 ($generated@@54 $generated@@33 $generated@@196)) $generated@@196) ($generated@@38 $generated@@33 ($generated@@54 $generated@@33 $generated@@196) ($generated@@34 $generated@@195))))
 :pattern ( ($generated@@46 $generated@@196 ($generated@@34 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@35 $generated@@199) (and ($generated@@52 $generated@@197) ($generated@@22 $generated@@33 $generated@@197 ($generated@@34 $generated@@198) $generated@@199))) ($generated@@22 $generated@@33 ($generated@@62 $generated@@197) ($generated@@34 $generated@@198) $generated@@199))
 :pattern ( ($generated@@22 $generated@@33 ($generated@@62 $generated@@197) ($generated@@34 $generated@@198) $generated@@199))
)))
(assert (= ($generated@@86 $generated@@23) $generated@@0))
(assert (= ($generated@@87 $generated@@23) $generated@@4))
(assert (= $generated@@32 ($generated@@42 $generated@@33 $generated@@32)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@45 ($generated@@42 $generated@@63 $generated@@200) ($generated@@42 $generated@@33 $generated@@201)) ($generated@@42 $generated@@33 ($generated@@45 $generated@@200 $generated@@201)))
 :pattern ( ($generated@@45 ($generated@@42 $generated@@63 $generated@@200) ($generated@@42 $generated@@33 $generated@@201)))
)))
(assert (forall (($generated@@202 Int) ) (! (= ($generated@@55 $generated@@8 ($generated@@12 ($generated@@40 $generated@@202))) ($generated@@42 $generated@@63 ($generated@@55 $generated@@8 ($generated@@12 $generated@@202))))
 :pattern ( ($generated@@55 $generated@@8 ($generated@@12 ($generated@@40 $generated@@202))))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@55 $generated@@204 ($generated@@42 $generated@@204 $generated@@203)) ($generated@@42 $generated@@63 ($generated@@55 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@55 $generated@@204 ($generated@@42 $generated@@204 $generated@@203)))
)))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (or ($generated@@117 $generated@@205 $generated@@207) (and (< 1 $generated@@58) ($generated@@38 $generated@@33 $generated@@207 ($generated@@34 $generated@@205)))) (<= ($generated@@40 0) ($generated@@26 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@26 $generated@@205 $generated@@206 $generated@@207))
))))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (or ($generated@@117 $generated@@208 ($generated@@42 $generated@@33 $generated@@210)) (and (< 1 $generated@@58) ($generated@@38 $generated@@33 $generated@@210 ($generated@@34 $generated@@208)))) (and (=> (not ($generated@@11 ($generated@@42 $generated@@7 ($generated@@10 ($generated@@50 ($generated@@42 $generated@@33 $generated@@210)))))) (let (($generated@@211 ($generated@@42 $generated@@33 ($generated@@62 ($generated@@42 $generated@@33 $generated@@210)))))
($generated@@117 $generated@@208 $generated@@211))) (= ($generated@@26 $generated@@208 ($generated@@27 $generated@@209) ($generated@@42 $generated@@33 $generated@@210)) (ite ($generated@@50 ($generated@@42 $generated@@33 $generated@@210)) 0 (let (($generated@@212 ($generated@@42 $generated@@33 ($generated@@62 ($generated@@42 $generated@@33 $generated@@210)))))
($generated@@40 (+ 1 ($generated@@26 $generated@@208 ($generated@@27 $generated@@209) $generated@@212))))))))
 :weight 3
 :pattern ( ($generated@@26 $generated@@208 ($generated@@27 $generated@@209) ($generated@@42 $generated@@33 $generated@@210)))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> ($generated@@35 $generated@@216) (= ($generated@@22 $generated@@33 ($generated@@45 $generated@@214 $generated@@215) ($generated@@34 $generated@@213) $generated@@216)  (and ($generated@@77 $generated@@214 $generated@@213 $generated@@216) ($generated@@22 $generated@@33 $generated@@215 ($generated@@34 $generated@@213) $generated@@216))))
 :pattern ( ($generated@@22 $generated@@33 ($generated@@45 $generated@@214 $generated@@215) ($generated@@34 $generated@@213) $generated@@216))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@231  (=> (and (or (not (= $generated@@217 ($generated@@40 0))) (not true)) ($generated@@22 $generated@@33 $generated@@218 ($generated@@34 $generated@@219) $generated@@220)) (and (=> (= (ControlFlow 0 8) (- 0 11)) ($generated@@38 $generated@@8 ($generated@@12 (- $generated@@217 1)) $generated@@23)) (=> ($generated@@38 $generated@@8 ($generated@@12 (- $generated@@217 1)) $generated@@23) (=> (and (= $generated@@221 (- $generated@@217 1)) ($generated@@22 $generated@@8 ($generated@@12 $generated@@221) $generated@@23 $generated@@220)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (< $generated@@221 ($generated@@26 $generated@@219 ($generated@@27 ($generated@@27 $generated@@61)) $generated@@218))) (=> (< $generated@@221 ($generated@@26 $generated@@219 ($generated@@27 $generated@@61) $generated@@218)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (or (<= 0 $generated@@217) (< ($generated@@124 $generated@@218) ($generated@@124 $generated@@222))) (= $generated@@221 $generated@@217))) (=> (or (or (<= 0 $generated@@217) (< ($generated@@124 $generated@@218) ($generated@@124 $generated@@222))) (= $generated@@221 $generated@@217)) (=> (= (ControlFlow 0 8) (- 0 7)) (or (< ($generated@@124 $generated@@218) ($generated@@124 $generated@@222)) (and (= ($generated@@124 $generated@@218) ($generated@@124 $generated@@222)) (< $generated@@221 $generated@@217))))))))))))))
(let (($generated@@232 true))
(let (($generated@@233  (=> (= $generated@@222 ($generated@@45 $generated@@223 $generated@@224)) (=> (and (and (and ($generated@@46 $generated@@223 $generated@@219) ($generated@@38 $generated@@33 $generated@@224 ($generated@@34 $generated@@219))) (and (= $generated@@225 $generated@@224) ($generated@@38 $generated@@33 $generated@@225 ($generated@@34 $generated@@219)))) (and (and (= $generated@@218 $generated@@225) (= $generated@@226 $generated@@223)) (and ($generated@@46 $generated@@226 $generated@@219) (= $generated@@227 $generated@@226)))) (and (=> (= (ControlFlow 0 12) 6) $generated@@232) (=> (= (ControlFlow 0 12) 8) $generated@@231))))))
(let (($generated@@234 true))
(let (($generated@@235  (=> (and (= $generated@@222 $generated@@32) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@236  (=> (or (not (= $generated@@222 ($generated@@45 $generated@@223 $generated@@224))) (not true)) (and (=> (= (ControlFlow 0 5) 3) $generated@@235) (=> (= (ControlFlow 0 5) 4) $generated@@234)))))
(let (($generated@@237 true))
(let (($generated@@238  (=> (and (and (= $generated@@228 ($generated@@135 $generated@@229 $generated@@220 $generated false)) ($generated@@22 $generated@@33 $generated@@222 ($generated@@34 $generated@@219) $generated@@220)) (and ($generated@@117 $generated@@219 $generated@@222) (< $generated@@217 ($generated@@26 $generated@@219 ($generated@@27 $generated@@61) $generated@@222)))) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@237) (=> (= (ControlFlow 0 13) 12) $generated@@233)) (=> (= (ControlFlow 0 13) 5) $generated@@236)))))
(let (($generated@@239  (=> (and ($generated@@35 $generated@@220) ($generated@@230 $generated@@220)) (=> (and (and ($generated@@38 $generated@@33 $generated@@222 ($generated@@34 $generated@@219)) (<= ($generated@@40 0) $generated@@217)) (and (= 2 $generated@@58) (= (ControlFlow 0 14) 13))) $generated@@238))))
$generated@@239))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
