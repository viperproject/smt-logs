(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U Int) T@U)
(declare-fun $generated@@24 (T@U Int) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U Int) Bool)
(declare-fun $generated@@28 (T@U Int) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@59 (Int) Int)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Int)
(declare-fun $generated@@73 (T@U) Int)
(declare-fun $generated@@76 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@T T@T) T@T)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T) T@T)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@176 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@29 T@U) ($generated@@30 Int) ) (!  (=> (or ($generated@@24 $generated@@29 $generated@@30) (and (< 2 $generated@@22) ($generated@@25 $generated@@29 $generated@@26))) (and ($generated@@27 $generated@@29 $generated@@30) (= ($generated@@23 $generated@@29 $generated@@30) ($generated@@28 $generated@@29 $generated@@30))))
 :pattern ( ($generated@@23 $generated@@29 $generated@@30))
))))
(assert (= ($generated@@5 $generated@@34) 3))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@36 T@U) ) (!  (=> (or ($generated@@32 $generated@@36) (and (< 1 $generated@@22) ($generated@@25 $generated@@36 $generated@@26))) ($generated@@33 $generated@@34 ($generated@@31 $generated@@36) ($generated@@35 $generated)))
 :pattern ( ($generated@@31 $generated@@36))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 Int) ) (!  (=> (and (or ($generated@@24 $generated@@40 $generated@@41) (and (< 2 $generated@@22) (and ($generated@@25 $generated@@40 $generated@@26) ($generated@@37 $generated@@40 $generated@@26 $generated@@39)))) ($generated@@38 $generated@@39)) ($generated@@37 ($generated@@23 $generated@@40 $generated@@41) $generated@@26 $generated@@39))
 :pattern ( ($generated@@37 ($generated@@23 $generated@@40 $generated@@41) $generated@@26 $generated@@39))
))))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 Int) ) (!  (=> (and (or ($generated@@27 $generated@@45 $generated@@46) (and (and ($generated@@25 $generated@@45 $generated@@42) ($generated@@37 $generated@@45 $generated@@42 $generated@@44)) ($generated@@43 $generated@@45))) ($generated@@38 $generated@@44)) ($generated@@37 ($generated@@28 $generated@@45 $generated@@46) $generated@@42 $generated@@44))
 :pattern ( ($generated@@37 ($generated@@28 $generated@@45 $generated@@46) $generated@@42 $generated@@44))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@52 T@U) ($generated@@53 Int) ) (!  (=> (or ($generated@@24 $generated@@52 $generated@@53) (and (< 2 $generated@@22) ($generated@@25 $generated@@52 $generated@@26))) (and ($generated@@47 ($generated@@31 ($generated@@23 $generated@@52 $generated@@53)) ($generated@@48 ($generated@@31 $generated@@52) ($generated@@49 $generated@@50 ($generated@@51 $generated@@7 ($generated@@11 $generated@@53))))) ($generated@@25 ($generated@@23 $generated@@52 $generated@@53) $generated@@26)))
 :pattern ( ($generated@@23 $generated@@52 $generated@@53))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@55 ($generated@@35 $generated@@56)) ($generated@@54 $generated@@55))
 :pattern ( ($generated@@33 $generated@@34 $generated@@55 ($generated@@35 $generated@@56)))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@37 $generated@@57 $generated@@26 $generated@@58) ($generated@@37 $generated@@57 $generated@@42 $generated@@58))
 :pattern ( ($generated@@37 $generated@@57 $generated@@26 $generated@@58))
)))
(assert (forall (($generated@@60 Int) ) (! (= ($generated@@59 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@63 $generated@@62))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@64 T@U) ($generated@@65 Int) ) (!  (=> (or ($generated@@24 $generated@@64 ($generated@@59 $generated@@65)) (and (< 2 $generated@@22) ($generated@@25 $generated@@64 $generated@@26))) (and ($generated@@27 $generated@@64 ($generated@@59 $generated@@65)) (= ($generated@@23 $generated@@64 ($generated@@59 $generated@@65)) ($generated@@28 $generated@@64 ($generated@@59 $generated@@65)))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@64 ($generated@@59 $generated@@65)))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@51 $generated@@68 ($generated@@66 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or (not (= $generated@@71 $generated@@72)) (not true)) (= ($generated@@69 $generated@@70 $generated@@72) ($generated@@69 ($generated@@49 $generated@@70 $generated@@71) $generated@@72)))
 :pattern ( ($generated@@49 $generated@@70 $generated@@71) ($generated@@69 $generated@@70 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@73 ($generated@@49 $generated@@74 $generated@@75)) (+ ($generated@@73 $generated@@74) 1))
 :pattern ( ($generated@@73 ($generated@@49 $generated@@74 $generated@@75)))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@37 ($generated@@51 $generated@@80 $generated@@77) $generated@@78 $generated@@79) ($generated@@76 $generated@@80 $generated@@77 $generated@@78 $generated@@79))
 :pattern ( ($generated@@37 ($generated@@51 $generated@@80 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> (or ($generated@@82 $generated@@83) ($generated@@25 $generated@@83 $generated@@42)) ($generated@@33 $generated@@34 ($generated@@81 $generated@@83) ($generated@@35 $generated)))
 :pattern ( ($generated@@81 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@73 ($generated@@48 $generated@@84 $generated@@85)) (+ ($generated@@73 $generated@@84) ($generated@@73 $generated@@85)))
 :pattern ( ($generated@@73 ($generated@@48 $generated@@84 $generated@@85)))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 Int) ) (!  (=> (or ($generated@@27 $generated@@86 $generated@@87) (and ($generated@@25 $generated@@86 $generated@@42) ($generated@@43 $generated@@86))) (and (let (($generated@@88 ($generated@@28 $generated@@86 $generated@@87)))
 (and ($generated@@43 $generated@@88) ($generated@@47 ($generated@@81 $generated@@88) ($generated@@48 ($generated@@81 $generated@@86) ($generated@@49 $generated@@50 ($generated@@51 $generated@@7 ($generated@@11 $generated@@87))))))) ($generated@@25 ($generated@@28 $generated@@86 $generated@@87) $generated@@42)))
 :pattern ( ($generated@@28 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@47 $generated@@89 $generated@@90) (= $generated@@89 $generated@@90))
 :pattern ( ($generated@@47 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@91 ($generated@@35 $generated@@92)) (forall (($generated@@93 T@U) ) (!  (=> (< 0 ($generated@@69 $generated@@91 $generated@@93)) ($generated@@25 $generated@@93 $generated@@92))
 :pattern ( ($generated@@69 $generated@@91 $generated@@93))
)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@91 ($generated@@35 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@25 $generated@@94 $generated) (and (= ($generated@@51 $generated@@7 ($generated@@66 $generated@@7 $generated@@94)) $generated@@94) ($generated@@33 $generated@@7 ($generated@@66 $generated@@7 $generated@@94) $generated)))
 :pattern ( ($generated@@25 $generated@@94 $generated))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@25 ($generated@@51 $generated@@97 $generated@@95) $generated@@96) ($generated@@33 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@25 ($generated@@51 $generated@@97 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@54 $generated@@98) (forall (($generated@@99 T@U) ) (!  (and (<= 0 ($generated@@69 $generated@@98 $generated@@99)) (<= ($generated@@69 $generated@@98 $generated@@99) ($generated@@73 $generated@@98)))
 :pattern ( ($generated@@69 $generated@@98 $generated@@99))
)))
 :pattern ( ($generated@@54 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (! (<= 0 ($generated@@73 $generated@@100))
 :pattern ( ($generated@@73 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@69 $generated@@50 $generated@@101) 0)
 :pattern ( ($generated@@69 $generated@@50 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@69 ($generated@@49 $generated@@102 $generated@@103) $generated@@103) (+ ($generated@@69 $generated@@102 $generated@@103) 1))
 :pattern ( ($generated@@49 $generated@@102 $generated@@103))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@104 T@U) ) (!  (=> (or ($generated@@32 $generated@@104) (and (< 1 $generated@@22) ($generated@@25 $generated@@104 $generated@@26))) (and ($generated@@82 $generated@@104) (= ($generated@@31 $generated@@104) ($generated@@81 $generated@@104))))
 :pattern ( ($generated@@31 $generated@@104))
))))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 ($generated@@35 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@35 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@21 ($generated@@35 $generated@@107)) $generated@@1)
 :pattern ( ($generated@@35 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@66 $generated@@109 ($generated@@51 $generated@@109 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@51 $generated@@109 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (!  (and (= (= ($generated@@73 $generated@@110) 0) (= $generated@@110 $generated@@50)) (=> (or (not (= ($generated@@73 $generated@@110) 0)) (not true)) (exists (($generated@@111 T@U) ) (! (< 0 ($generated@@69 $generated@@110 $generated@@111))
 :pattern ( ($generated@@69 $generated@@110 $generated@@111))
))))
 :pattern ( ($generated@@73 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@69 ($generated@@48 $generated@@112 $generated@@113) $generated@@114) (+ ($generated@@69 $generated@@112 $generated@@114) ($generated@@69 $generated@@113 $generated@@114)))
 :pattern ( ($generated@@69 ($generated@@48 $generated@@112 $generated@@113) $generated@@114))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@115 $generated@@126 $generated@@127 $generated@@128 ($generated@@122 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@115 $generated@@133 $generated@@134 $generated@@135 ($generated@@122 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@115 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@115 $generated@@142 $generated@@143 $generated@@144 ($generated@@122 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@115 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (= ($generated@@5 $generated@@116) 4)) (= ($generated@@5 $generated@@117) 5)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@119 $generated@@151 $generated@@152 ($generated@@123 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@153) $generated@@155) $generated@@153)
 :weight 0
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@160 $generated@@161) (= ($generated@@119 $generated@@156 $generated@@157 ($generated@@123 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@158) $generated@@161) ($generated@@119 $generated@@156 $generated@@157 $generated@@159 $generated@@161)))
 :weight 0
))) (= ($generated@@5 $generated@@120) 6)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (= ($generated@@5 ($generated@@121 $generated@@162 $generated@@163)) 7))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (! (= ($generated@@124 ($generated@@121 $generated@@164 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@121 $generated@@164 $generated@@165))
))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@125 ($generated@@121 $generated@@166 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@121 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Bool) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@10 ($generated@@115 $generated@@116 $generated@@117 $generated@@6 ($generated@@118 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))  (=> (and (or (not (= $generated@@172 $generated@@168)) (not true)) ($generated@@10 ($generated@@66 $generated@@6 ($generated@@119 $generated@@117 $generated@@120 ($generated@@119 $generated@@116 ($generated@@121 $generated@@117 $generated@@120) $generated@@169 $generated@@172) $generated@@170)))) $generated@@171))
 :pattern ( ($generated@@115 $generated@@116 $generated@@117 $generated@@6 ($generated@@118 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@25 $generated@@174 ($generated@@35 $generated@@175)) (and (= ($generated@@51 $generated@@34 ($generated@@66 $generated@@34 $generated@@174)) $generated@@174) ($generated@@33 $generated@@34 ($generated@@66 $generated@@34 $generated@@174) ($generated@@35 $generated@@175))))
 :pattern ( ($generated@@25 $generated@@174 ($generated@@35 $generated@@175)))
)))
(assert (= ($generated@@21 $generated@@26) $generated@@3))
(assert (= ($generated@@176 $generated@@26) $generated@@4))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@177 T@U) ($generated@@178 Int) ) (!  (=> (or ($generated@@24 ($generated@@61 $generated@@120 $generated@@177) ($generated@@59 $generated@@178)) (and (< 2 $generated@@22) ($generated@@25 $generated@@177 $generated@@26))) (and ($generated@@27 ($generated@@61 $generated@@120 $generated@@177) ($generated@@59 $generated@@178)) (= ($generated@@23 ($generated@@61 $generated@@120 $generated@@177) ($generated@@59 $generated@@178)) ($generated@@28 ($generated@@61 $generated@@120 $generated@@177) ($generated@@59 $generated@@178)))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@61 $generated@@120 $generated@@177) ($generated@@59 $generated@@178)))
))))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@25 $generated@@179 $generated@@26)  (and ($generated@@25 $generated@@179 $generated@@42) ($generated@@43 $generated@@179)))
 :pattern ( ($generated@@25 $generated@@179 $generated@@26))
)))
(assert (forall (($generated@@180 Int) ) (! (= ($generated@@51 $generated@@7 ($generated@@11 ($generated@@59 $generated@@180))) ($generated@@61 $generated@@120 ($generated@@51 $generated@@7 ($generated@@11 $generated@@180))))
 :pattern ( ($generated@@51 $generated@@7 ($generated@@11 ($generated@@59 $generated@@180))))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@51 $generated@@182 ($generated@@61 $generated@@182 $generated@@181)) ($generated@@61 $generated@@120 ($generated@@51 $generated@@182 $generated@@181)))
 :pattern ( ($generated@@51 $generated@@182 ($generated@@61 $generated@@182 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (< 0 ($generated@@69 $generated@@183 $generated@@185)) (< 0 ($generated@@69 ($generated@@49 $generated@@183 $generated@@184) $generated@@185)))
 :pattern ( ($generated@@49 $generated@@183 $generated@@184) ($generated@@69 $generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= (< 0 ($generated@@69 ($generated@@49 $generated@@186 $generated@@187) $generated@@188))  (or (= $generated@@188 $generated@@187) (< 0 ($generated@@69 $generated@@186 $generated@@188))))
 :pattern ( ($generated@@69 ($generated@@49 $generated@@186 $generated@@187) $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@47 $generated@@189 $generated@@190) (forall (($generated@@191 T@U) ) (! (= ($generated@@69 $generated@@189 $generated@@191) ($generated@@69 $generated@@190 $generated@@191))
 :pattern ( ($generated@@69 $generated@@189 $generated@@191))
 :pattern ( ($generated@@69 $generated@@190 $generated@@191))
)))
 :pattern ( ($generated@@47 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@76 $generated@@34 $generated@@192 ($generated@@35 $generated@@193) $generated@@194) (forall (($generated@@195 T@U) ) (!  (=> (< 0 ($generated@@69 $generated@@192 $generated@@195)) ($generated@@37 $generated@@195 $generated@@193 $generated@@194))
 :pattern ( ($generated@@69 $generated@@192 $generated@@195))
)))
 :pattern ( ($generated@@76 $generated@@34 $generated@@192 ($generated@@35 $generated@@193) $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! ($generated@@76 $generated@@7 $generated@@197 $generated $generated@@196)
 :pattern ( ($generated@@76 $generated@@7 $generated@@197 $generated $generated@@196))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@198 T@U) ) (!  (=> (or ($generated@@32 ($generated@@61 $generated@@120 $generated@@198)) (and (< 1 $generated@@22) ($generated@@25 $generated@@198 $generated@@26))) (and ($generated@@82 ($generated@@61 $generated@@120 $generated@@198)) (= ($generated@@31 ($generated@@61 $generated@@120 $generated@@198)) ($generated@@81 ($generated@@61 $generated@@120 $generated@@198)))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@61 $generated@@120 $generated@@198)))
))))
(assert (forall (($generated@@199 T@U) ) (! ($generated@@33 $generated@@7 $generated@@199 $generated)
 :pattern ( ($generated@@33 $generated@@7 $generated@@199 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@206  (=> (= (ControlFlow 0 5) (- 0 4)) ($generated@@47 ($generated@@31 ($generated@@23 $generated@@200 $generated@@201)) ($generated@@48 ($generated@@31 $generated@@200) ($generated@@49 $generated@@50 ($generated@@51 $generated@@7 ($generated@@11 $generated@@201))))))))
(let (($generated@@207  (=> (and ($generated@@37 $generated@@200 $generated@@42 $generated@@202) ($generated@@76 $generated@@7 ($generated@@11 $generated@@201) $generated $generated@@202)) (and (=> (= (ControlFlow 0 6) (- 0 8)) ($generated@@43 $generated@@200)) (=> (and ($generated@@43 $generated@@200) ($generated@@27 $generated@@200 $generated@@201)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@25 ($generated@@28 $generated@@200 $generated@@201) $generated@@26)) (=> ($generated@@25 ($generated@@28 $generated@@200 $generated@@201) $generated@@26) (=> (and (and (= ($generated@@23 $generated@@200 $generated@@201) ($generated@@28 $generated@@200 $generated@@201)) ($generated@@27 $generated@@200 $generated@@201)) (and ($generated@@25 ($generated@@23 $generated@@200 $generated@@201) $generated@@26) (= (ControlFlow 0 6) 5))) $generated@@206))))))))
(let (($generated@@208  (=> ($generated@@25 ($generated@@23 $generated@@200 $generated@@201) $generated@@26) (=> (and ($generated@@37 $generated@@200 $generated@@26 $generated@@202) ($generated@@76 $generated@@7 ($generated@@11 $generated@@201) $generated $generated@@202)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@201) (= $generated@@201 $generated@@201))) (=> (or (<= 0 $generated@@201) (= $generated@@201 $generated@@201)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@200 $generated@@200) (= $generated@@201 $generated@@201)) (< $generated@@201 $generated@@201)))))))))
(let (($generated@@209  (=> (= $generated@@203 ($generated@@118 $generated@@204 $generated@@202 $generated@@2 false)) (and (=> (= (ControlFlow 0 9) 2) $generated@@208) (=> (= (ControlFlow 0 9) 6) $generated@@207)))))
(let (($generated@@210  (=> (and (and (and ($generated@@38 $generated@@202) ($generated@@205 $generated@@202)) ($generated@@25 $generated@@200 $generated@@26)) (and (= 2 $generated@@22) (= (ControlFlow 0 10) 9))) $generated@@209)))
$generated@@210))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
