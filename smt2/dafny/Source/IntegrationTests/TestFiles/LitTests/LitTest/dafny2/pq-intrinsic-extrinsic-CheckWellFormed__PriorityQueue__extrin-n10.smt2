(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Int T@U T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 (Int) Int)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@85 (T@U) Int)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@103 (T@U) Bool)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) Int)
(declare-fun $generated@@117 (T@U) Int)
(declare-fun $generated@@120 (T@U T@U T@U) Bool)
(declare-fun $generated@@121 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@130 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Int)
(declare-fun $generated@@176 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@181 () T@T)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@27 Int) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26)  (and (and ($generated@@23 $generated@@9 ($generated@@13 $generated@@27) $generated) ($generated@@23 $generated@@24 $generated@@28 $generated@@26)) ($generated@@23 $generated@@24 $generated@@29 $generated@@26)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26))
)))
(assert (= ($generated@@7 $generated@@33) 4))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@32 $generated@@36) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@36 $generated@@26))) ($generated@@23 $generated@@33 ($generated@@31 $generated@@35 $generated@@36) ($generated@@34 $generated)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@36))
))))
(assert (= ($generated@@37 $generated) $generated@@0))
(assert (forall (($generated@@39 Int) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@38 ($generated@@25 $generated@@39 $generated@@40 $generated@@41)) $generated@@5)
 :pattern ( ($generated@@25 $generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 Int) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@42 ($generated@@25 $generated@@43 $generated@@44 $generated@@45)) $generated@@43)
 :pattern ( ($generated@@25 $generated@@43 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 Int) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@46 ($generated@@25 $generated@@47 $generated@@48 $generated@@49)) $generated@@48)
 :pattern ( ($generated@@25 $generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 Int) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@50 ($generated@@25 $generated@@51 $generated@@52 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@25 $generated@@51 $generated@@52 $generated@@53))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@57 ($generated@@56 $generated@@24 $generated@@64)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@64 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 ($generated@@58 ($generated@@56 $generated@@24 $generated@@64)))))) (let (($generated@@65 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@64)))))
(let (($generated@@66 ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@64)))))
(let (($generated@@67 ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@64)))))
 (and ($generated@@57 $generated@@66) (=> ($generated@@54 ($generated@@55 $generated@@63) $generated@@66) (and ($generated@@57 $generated@@65) (=> ($generated@@54 ($generated@@55 $generated@@63) $generated@@65) (and ($generated@@60 $generated@@66) (=> (or ($generated@@61 $generated@@66 $generated@@62) (<= $generated@@67 ($generated@@42 $generated@@66))) ($generated@@60 $generated@@65))))))))))) (= ($generated@@54 ($generated@@55 $generated@@63) ($generated@@56 $generated@@24 $generated@@64)) (ite ($generated@@58 ($generated@@56 $generated@@24 $generated@@64)) true (let (($generated@@68 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@64)))))
(let (($generated@@69 ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@64)))))
(let (($generated@@70 ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@64)))))
 (and (and (and ($generated@@54 ($generated@@55 $generated@@63) $generated@@69) ($generated@@54 ($generated@@55 $generated@@63) $generated@@68)) (or ($generated@@61 $generated@@69 $generated@@62) (<= $generated@@70 ($generated@@59 ($generated@@42 $generated@@69))))) (or ($generated@@61 $generated@@68 $generated@@62) (<= $generated@@70 ($generated@@59 ($generated@@42 $generated@@68))))))))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@55 $generated@@63) ($generated@@56 $generated@@24 $generated@@64)))
))))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (or ($generated@@32 ($generated@@56 $generated@@24 $generated@@76)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@76 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 ($generated@@58 ($generated@@56 $generated@@24 $generated@@76)))))) (let (($generated@@77 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@76)))))
(let (($generated@@78 ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@76)))))
 (and ($generated@@32 $generated@@78) ($generated@@32 $generated@@77))))) (= ($generated@@31 ($generated@@55 $generated@@75) ($generated@@56 $generated@@24 $generated@@76)) (ite ($generated@@58 ($generated@@56 $generated@@24 $generated@@76)) $generated@@71 (let (($generated@@79 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@76)))))
(let (($generated@@80 ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@76)))))
(let (($generated@@81 ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@76)))))
($generated@@72 ($generated@@72 ($generated@@73 $generated@@71 ($generated@@74 $generated@@9 ($generated@@13 $generated@@81))) ($generated@@31 ($generated@@55 $generated@@75) $generated@@80)) ($generated@@31 ($generated@@55 $generated@@75) $generated@@79)))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@55 $generated@@75) ($generated@@56 $generated@@24 $generated@@76)))
))))
(assert (= ($generated@@38 $generated@@62) $generated@@4))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@23 $generated@@33 $generated@@83 ($generated@@34 $generated@@84)) ($generated@@82 $generated@@83))
 :pattern ( ($generated@@23 $generated@@33 $generated@@83 ($generated@@34 $generated@@84)))
)))
(assert  (=> (<= 2 $generated@@30) (forall (($generated@@89 T@U) ) (!  (=> (or ($generated@@86 ($generated@@56 $generated@@24 $generated@@89)) (and (< 2 $generated@@30) (and ($generated@@23 $generated@@24 $generated@@89 $generated@@26) (not ($generated@@87 ($generated@@31 ($generated@@55 $generated@@88) ($generated@@56 $generated@@24 $generated@@89)) $generated@@71))))) (= ($generated@@85 ($generated@@56 $generated@@24 $generated@@89)) ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@89)))))
 :weight 3
 :pattern ( ($generated@@85 ($generated@@56 $generated@@24 $generated@@89)))
))))
(assert ($generated@@23 $generated@@24 $generated@@62 $generated@@26))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@61 $generated@@90 $generated@@91) (= $generated@@90 $generated@@91))
 :pattern ( ($generated@@61 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 Int) ) (! (= ($generated@@59 $generated@@92) $generated@@92)
 :pattern ( ($generated@@59 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@56 $generated@@94 $generated@@93) $generated@@93)
 :pattern ( ($generated@@56 $generated@@94 $generated@@93))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or ($generated@@32 $generated@@96) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@96 $generated@@26))) (and (=> (not ($generated@@58 $generated@@96)) (let (($generated@@97 ($generated@@50 $generated@@96)))
(let (($generated@@98 ($generated@@46 $generated@@96)))
 (and ($generated@@32 $generated@@98) ($generated@@32 $generated@@97))))) (= ($generated@@31 ($generated@@55 $generated@@95) $generated@@96) (ite ($generated@@58 $generated@@96) $generated@@71 (let (($generated@@99 ($generated@@50 $generated@@96)))
(let (($generated@@100 ($generated@@46 $generated@@96)))
(let (($generated@@101 ($generated@@42 $generated@@96)))
($generated@@72 ($generated@@72 ($generated@@73 $generated@@71 ($generated@@74 $generated@@9 ($generated@@13 $generated@@101))) ($generated@@31 $generated@@95 $generated@@100)) ($generated@@31 $generated@@95 $generated@@99)))))))))
 :pattern ( ($generated@@31 ($generated@@55 $generated@@95) $generated@@96))
))))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@58 $generated@@102) (= ($generated@@38 $generated@@102) $generated@@4))
 :pattern ( ($generated@@58 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 $generated@@104) (= ($generated@@38 $generated@@104) $generated@@5))
 :pattern ( ($generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@74 $generated@@107 ($generated@@105 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@105 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@103 $generated@@108) (exists (($generated@@109 Int) ($generated@@110 T@U) ($generated@@111 T@U) ) (= $generated@@108 ($generated@@25 $generated@@109 $generated@@110 $generated@@111))))
 :pattern ( ($generated@@103 $generated@@108))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or (not (= $generated@@114 $generated@@115)) (not true)) (= ($generated@@112 $generated@@113 $generated@@115) ($generated@@112 ($generated@@73 $generated@@113 $generated@@114) $generated@@115)))
 :pattern ( ($generated@@73 $generated@@113 $generated@@114) ($generated@@112 $generated@@113 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@58 $generated@@116) (= $generated@@116 $generated@@62))
 :pattern ( ($generated@@58 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@117 ($generated@@73 $generated@@118 $generated@@119)) (+ ($generated@@117 $generated@@118) 1))
 :pattern ( ($generated@@117 ($generated@@73 $generated@@118 $generated@@119)))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@120 ($generated@@74 $generated@@125 $generated@@122) $generated@@123 $generated@@124) ($generated@@121 $generated@@125 $generated@@122 $generated@@123 $generated@@124))
 :pattern ( ($generated@@120 ($generated@@74 $generated@@125 $generated@@122) $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@103 $generated@@126) ($generated@@103 $generated@@127)) (= ($generated@@61 $generated@@126 $generated@@127)  (and (and (= ($generated@@42 $generated@@126) ($generated@@42 $generated@@127)) ($generated@@61 ($generated@@46 $generated@@126) ($generated@@46 $generated@@127))) ($generated@@61 ($generated@@50 $generated@@126) ($generated@@50 $generated@@127)))))
 :pattern ( ($generated@@61 $generated@@126 $generated@@127) ($generated@@103 $generated@@126))
 :pattern ( ($generated@@61 $generated@@126 $generated@@127) ($generated@@103 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@117 ($generated@@72 $generated@@128 $generated@@129)) (+ ($generated@@117 $generated@@128) ($generated@@117 $generated@@129)))
 :pattern ( ($generated@@117 ($generated@@72 $generated@@128 $generated@@129)))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@130 $generated@@131 $generated@@26) (and (= ($generated@@74 $generated@@24 ($generated@@105 $generated@@24 $generated@@131)) $generated@@131) ($generated@@23 $generated@@24 ($generated@@105 $generated@@24 $generated@@131) $generated@@26)))
 :pattern ( ($generated@@130 $generated@@131 $generated@@26))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@60 $generated@@132) (or ($generated@@58 $generated@@132) ($generated@@103 $generated@@132)))
 :pattern ( ($generated@@60 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> ($generated@@87 $generated@@133 $generated@@134) (= $generated@@133 $generated@@134))
 :pattern ( ($generated@@87 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@23 $generated@@33 $generated@@135 ($generated@@34 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (< 0 ($generated@@112 $generated@@135 $generated@@137)) ($generated@@130 $generated@@137 $generated@@136))
 :pattern ( ($generated@@112 $generated@@135 $generated@@137))
)))
 :pattern ( ($generated@@23 $generated@@33 $generated@@135 ($generated@@34 $generated@@136)))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@138 $generated@@26) (or ($generated@@58 $generated@@138) ($generated@@103 $generated@@138)))
 :pattern ( ($generated@@103 $generated@@138) ($generated@@23 $generated@@24 $generated@@138 $generated@@26))
 :pattern ( ($generated@@58 $generated@@138) ($generated@@23 $generated@@24 $generated@@138 $generated@@26))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@130 $generated@@139 $generated) (and (= ($generated@@74 $generated@@9 ($generated@@105 $generated@@9 $generated@@139)) $generated@@139) ($generated@@23 $generated@@9 ($generated@@105 $generated@@9 $generated@@139) $generated)))
 :pattern ( ($generated@@130 $generated@@139 $generated))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@54 ($generated@@55 $generated@@140) $generated@@141) ($generated@@54 $generated@@140 $generated@@141))
 :pattern ( ($generated@@54 ($generated@@55 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@130 ($generated@@74 $generated@@144 $generated@@142) $generated@@143) ($generated@@23 $generated@@144 $generated@@142 $generated@@143))
 :pattern ( ($generated@@130 ($generated@@74 $generated@@144 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@82 $generated@@145) (forall (($generated@@146 T@U) ) (!  (and (<= 0 ($generated@@112 $generated@@145 $generated@@146)) (<= ($generated@@112 $generated@@145 $generated@@146) ($generated@@117 $generated@@145)))
 :pattern ( ($generated@@112 $generated@@145 $generated@@146))
)))
 :pattern ( ($generated@@82 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (<= 0 ($generated@@117 $generated@@147))
 :pattern ( ($generated@@117 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and ($generated@@58 $generated@@148) ($generated@@58 $generated@@149)) ($generated@@61 $generated@@148 $generated@@149))
 :pattern ( ($generated@@61 $generated@@148 $generated@@149) ($generated@@58 $generated@@148))
 :pattern ( ($generated@@61 $generated@@148 $generated@@149) ($generated@@58 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@112 $generated@@71 $generated@@150) 0)
 :pattern ( ($generated@@112 $generated@@71 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@112 ($generated@@73 $generated@@151 $generated@@152) $generated@@152) (+ ($generated@@112 $generated@@151 $generated@@152) 1))
 :pattern ( ($generated@@73 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 Int) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@25 ($generated@@59 $generated@@153) ($generated@@56 $generated@@24 $generated@@154) ($generated@@56 $generated@@24 $generated@@155)) ($generated@@56 $generated@@24 ($generated@@25 $generated@@153 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@153) ($generated@@56 $generated@@24 $generated@@154) ($generated@@56 $generated@@24 $generated@@155)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@156 ($generated@@34 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@34 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@37 ($generated@@34 $generated@@158)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@105 $generated@@160 ($generated@@74 $generated@@160 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@74 $generated@@160 $generated@@159))
)))
(assert (forall (($generated@@162 Int) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (< ($generated@@161 $generated@@163) ($generated@@161 ($generated@@25 $generated@@162 $generated@@163 $generated@@164)))
 :pattern ( ($generated@@25 $generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 Int) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (< ($generated@@161 $generated@@167) ($generated@@161 ($generated@@25 $generated@@165 $generated@@166 $generated@@167)))
 :pattern ( ($generated@@25 $generated@@165 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@31 ($generated@@55 $generated@@168) $generated@@169) ($generated@@31 $generated@@168 $generated@@169))
 :pattern ( ($generated@@31 ($generated@@55 $generated@@168) $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (!  (and (= (= ($generated@@117 $generated@@170) 0) (= $generated@@170 $generated@@71)) (=> (or (not (= ($generated@@117 $generated@@170) 0)) (not true)) (exists (($generated@@171 T@U) ) (! (< 0 ($generated@@112 $generated@@170 $generated@@171))
 :pattern ( ($generated@@112 $generated@@170 $generated@@171))
))))
 :pattern ( ($generated@@117 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@112 ($generated@@72 $generated@@172 $generated@@173) $generated@@174) (+ ($generated@@112 $generated@@172 $generated@@174) ($generated@@112 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@112 ($generated@@72 $generated@@172 $generated@@173) $generated@@174))
)))
(assert  (=> (<= 2 $generated@@30) (forall (($generated@@175 T@U) ) (!  (=> (or ($generated@@86 $generated@@175) (and (< 2 $generated@@30) (and ($generated@@23 $generated@@24 $generated@@175 $generated@@26) (not ($generated@@87 ($generated@@31 ($generated@@55 $generated@@88) $generated@@175) $generated@@71))))) (= ($generated@@85 $generated@@175) ($generated@@42 $generated@@175)))
 :pattern ( ($generated@@85 $generated@@175))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@176 $generated@@187 $generated@@188 $generated@@189 ($generated@@183 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@192 $generated@@193) $generated@@190)
 :weight 0
)) (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@176 $generated@@194 $generated@@195 $generated@@196 ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@176 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@176 $generated@@203 $generated@@204 $generated@@205 ($generated@@183 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@176 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (= ($generated@@7 $generated@@177) 5)) (= ($generated@@7 $generated@@178) 6)) (forall (($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@180 $generated@@212 $generated@@213 ($generated@@184 $generated@@212 $generated@@213 $generated@@215 $generated@@216 $generated@@214) $generated@@216) $generated@@214)
 :weight 0
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@221 $generated@@222) (= ($generated@@180 $generated@@217 $generated@@218 ($generated@@184 $generated@@217 $generated@@218 $generated@@220 $generated@@221 $generated@@219) $generated@@222) ($generated@@180 $generated@@217 $generated@@218 $generated@@220 $generated@@222)))
 :weight 0
))) (= ($generated@@7 $generated@@181) 7)) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (= ($generated@@7 ($generated@@182 $generated@@223 $generated@@224)) 8))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (! (= ($generated@@185 ($generated@@182 $generated@@225 $generated@@226)) $generated@@225)
 :pattern ( ($generated@@182 $generated@@225 $generated@@226))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@186 ($generated@@182 $generated@@227 $generated@@228)) $generated@@228)
 :pattern ( ($generated@@182 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (= ($generated@@12 ($generated@@176 $generated@@177 $generated@@178 $generated@@8 ($generated@@179 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (or (not (= $generated@@233 $generated@@229)) (not true)) ($generated@@12 ($generated@@105 $generated@@8 ($generated@@180 $generated@@178 $generated@@181 ($generated@@180 $generated@@177 ($generated@@182 $generated@@178 $generated@@181) $generated@@230 $generated@@233) $generated@@231)))) $generated@@232))
 :pattern ( ($generated@@176 $generated@@177 $generated@@178 $generated@@8 ($generated@@179 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and ($generated@@235 $generated@@237) (and ($generated@@103 $generated@@236) ($generated@@121 $generated@@24 $generated@@236 $generated@@26 $generated@@237))) ($generated@@121 $generated@@9 ($generated@@13 ($generated@@42 $generated@@236)) $generated $generated@@237))
 :pattern ( ($generated@@121 $generated@@9 ($generated@@13 ($generated@@42 $generated@@236)) $generated $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> ($generated@@130 $generated@@238 ($generated@@34 $generated@@239)) (and (= ($generated@@74 $generated@@33 ($generated@@105 $generated@@33 $generated@@238)) $generated@@238) ($generated@@23 $generated@@33 ($generated@@105 $generated@@33 $generated@@238) ($generated@@34 $generated@@239))))
 :pattern ( ($generated@@130 $generated@@238 ($generated@@34 $generated@@239)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and ($generated@@235 $generated@@241) ($generated@@23 $generated@@24 $generated@@240 $generated@@26)) ($generated@@121 $generated@@24 $generated@@240 $generated@@26 $generated@@241))
 :pattern ( ($generated@@121 $generated@@24 $generated@@240 $generated@@26 $generated@@241))
)))
(assert (= ($generated@@37 $generated@@26) $generated@@3))
(assert (= ($generated@@242 $generated@@26) $generated@@6))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (or ($generated@@57 $generated@@244) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@244 $generated@@26))) (and (=> (not ($generated@@58 $generated@@244)) (let (($generated@@245 ($generated@@50 $generated@@244)))
(let (($generated@@246 ($generated@@46 $generated@@244)))
(let (($generated@@247 ($generated@@42 $generated@@244)))
 (and ($generated@@57 $generated@@246) (=> ($generated@@54 $generated@@243 $generated@@246) (and ($generated@@57 $generated@@245) (=> ($generated@@54 $generated@@243 $generated@@245) (and ($generated@@60 $generated@@246) (=> (or ($generated@@61 $generated@@246 $generated@@62) (<= $generated@@247 ($generated@@42 $generated@@246))) ($generated@@60 $generated@@245))))))))))) (= ($generated@@54 ($generated@@55 $generated@@243) $generated@@244) (ite ($generated@@58 $generated@@244) true (let (($generated@@248 ($generated@@50 $generated@@244)))
(let (($generated@@249 ($generated@@46 $generated@@244)))
(let (($generated@@250 ($generated@@42 $generated@@244)))
 (and (and (and ($generated@@54 $generated@@243 $generated@@249) ($generated@@54 $generated@@243 $generated@@248)) (or ($generated@@61 $generated@@249 $generated@@62) (<= $generated@@250 ($generated@@42 $generated@@249)))) (or ($generated@@61 $generated@@248 $generated@@62) (<= $generated@@250 ($generated@@42 $generated@@248)))))))))))
 :pattern ( ($generated@@54 ($generated@@55 $generated@@243) $generated@@244))
))))
(assert (= $generated@@62 ($generated@@56 $generated@@24 $generated@@62)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and ($generated@@235 $generated@@252) (and ($generated@@103 $generated@@251) ($generated@@121 $generated@@24 $generated@@251 $generated@@26 $generated@@252))) ($generated@@121 $generated@@24 ($generated@@46 $generated@@251) $generated@@26 $generated@@252))
 :pattern ( ($generated@@121 $generated@@24 ($generated@@46 $generated@@251) $generated@@26 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and ($generated@@235 $generated@@254) (and ($generated@@103 $generated@@253) ($generated@@121 $generated@@24 $generated@@253 $generated@@26 $generated@@254))) ($generated@@121 $generated@@24 ($generated@@50 $generated@@253) $generated@@26 $generated@@254))
 :pattern ( ($generated@@121 $generated@@24 ($generated@@50 $generated@@253) $generated@@26 $generated@@254))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@74 $generated@@9 ($generated@@13 ($generated@@59 $generated@@255))) ($generated@@56 $generated@@181 ($generated@@74 $generated@@9 ($generated@@13 $generated@@255))))
 :pattern ( ($generated@@74 $generated@@9 ($generated@@13 ($generated@@59 $generated@@255))))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@T) ) (! (= ($generated@@74 $generated@@257 ($generated@@56 $generated@@257 $generated@@256)) ($generated@@56 $generated@@181 ($generated@@74 $generated@@257 $generated@@256)))
 :pattern ( ($generated@@74 $generated@@257 ($generated@@56 $generated@@257 $generated@@256)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (< 0 ($generated@@112 $generated@@258 $generated@@260)) (< 0 ($generated@@112 ($generated@@73 $generated@@258 $generated@@259) $generated@@260)))
 :pattern ( ($generated@@73 $generated@@258 $generated@@259) ($generated@@112 $generated@@258 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (< 0 ($generated@@112 ($generated@@73 $generated@@261 $generated@@262) $generated@@263))  (or (= $generated@@263 $generated@@262) (< 0 ($generated@@112 $generated@@261 $generated@@263))))
 :pattern ( ($generated@@112 ($generated@@73 $generated@@261 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= ($generated@@87 $generated@@264 $generated@@265) (forall (($generated@@266 T@U) ) (! (= ($generated@@112 $generated@@264 $generated@@266) ($generated@@112 $generated@@265 $generated@@266))
 :pattern ( ($generated@@112 $generated@@264 $generated@@266))
 :pattern ( ($generated@@112 $generated@@265 $generated@@266))
)))
 :pattern ( ($generated@@87 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (! (= ($generated@@121 $generated@@33 $generated@@267 ($generated@@34 $generated@@268) $generated@@269) (forall (($generated@@270 T@U) ) (!  (=> (< 0 ($generated@@112 $generated@@267 $generated@@270)) ($generated@@120 $generated@@270 $generated@@268 $generated@@269))
 :pattern ( ($generated@@112 $generated@@267 $generated@@270))
)))
 :pattern ( ($generated@@121 $generated@@33 $generated@@267 ($generated@@34 $generated@@268) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! ($generated@@121 $generated@@9 $generated@@272 $generated $generated@@271)
 :pattern ( ($generated@@121 $generated@@9 $generated@@272 $generated $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! ($generated@@23 $generated@@9 $generated@@273 $generated)
 :pattern ( ($generated@@23 $generated@@9 $generated@@273 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () Int)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () Int)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@283 true))
(let (($generated@@284 true))
(let (($generated@@285  (=> (and (>= 0 ($generated@@112 ($generated@@31 ($generated@@55 $generated@@88) $generated@@274) ($generated@@74 $generated@@9 ($generated@@13 $generated@@275)))) (= (ControlFlow 0 5) 1)) $generated@@284)))
(let (($generated@@286  (=> (and (> ($generated@@112 ($generated@@31 ($generated@@55 $generated@@88) $generated@@274) ($generated@@74 $generated@@9 ($generated@@13 $generated@@275))) 0) (= (ControlFlow 0 4) 1)) $generated@@284)))
(let (($generated@@287  (=> (and ($generated@@121 $generated@@24 $generated@@274 $generated@@26 $generated@@276) ($generated@@32 $generated@@274)) (and (=> (= (ControlFlow 0 6) 4) $generated@@286) (=> (= (ControlFlow 0 6) 5) $generated@@285)))))
(let (($generated@@288  (=> (> ($generated@@112 ($generated@@31 ($generated@@55 $generated@@88) $generated@@274) ($generated@@74 $generated@@9 ($generated@@13 $generated@@277))) 0) (and (=> (= (ControlFlow 0 7) 6) $generated@@287) (=> (= (ControlFlow 0 7) 3) $generated@@283)))))
(let (($generated@@289  (=> (and (>= 0 ($generated@@112 ($generated@@31 ($generated@@55 $generated@@88) $generated@@274) ($generated@@74 $generated@@9 ($generated@@13 $generated@@277)))) (= (ControlFlow 0 2) 1)) $generated@@284)))
(let (($generated@@290  (=> (= $generated@@278 ($generated@@179 $generated@@279 $generated@@280 $generated@@2 false)) (=> (and ($generated@@121 $generated@@24 $generated@@274 $generated@@26 $generated@@280) ($generated@@57 $generated@@274)) (=> (and (and (and ($generated@@54 ($generated@@55 $generated@@88) $generated@@274) ($generated@@121 $generated@@24 $generated@@274 $generated@@26 $generated@@280)) (and ($generated@@32 $generated@@274) (not ($generated@@87 ($generated@@31 ($generated@@55 $generated@@88) $generated@@274) $generated@@71)))) (and (and ($generated@@235 $generated@@276) ($generated@@281 $generated@@276)) (and (= $generated@@280 $generated@@276) ($generated@@121 $generated@@24 $generated@@274 $generated@@26 $generated@@276)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (not ($generated@@87 ($generated@@31 ($generated@@55 ($generated@@55 $generated@@88)) $generated@@274) $generated@@71))) (=> (and (and (and (not ($generated@@87 ($generated@@31 ($generated@@55 $generated@@88) $generated@@274) $generated@@71)) ($generated@@86 $generated@@274)) (and (= $generated@@282 ($generated@@85 $generated@@274)) ($generated@@86 $generated@@274))) (and (and ($generated@@23 $generated@@9 ($generated@@13 $generated@@282) $generated) (= $generated@@277 $generated@@282)) (and ($generated@@121 $generated@@24 $generated@@274 $generated@@26 $generated@@276) ($generated@@32 $generated@@274)))) (and (=> (= (ControlFlow 0 8) 7) $generated@@288) (=> (= (ControlFlow 0 8) 2) $generated@@289)))))))))
(let (($generated@@291  (=> (and ($generated@@235 $generated@@280) ($generated@@281 $generated@@280)) (=> (and (and (and ($generated@@23 $generated@@24 $generated@@274 $generated@@26) ($generated@@121 $generated@@24 $generated@@274 $generated@@26 $generated@@280)) ($generated@@60 $generated@@274)) (and (= 3 $generated@@30) (= (ControlFlow 0 10) 8))) $generated@@290))))
$generated@@291))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
