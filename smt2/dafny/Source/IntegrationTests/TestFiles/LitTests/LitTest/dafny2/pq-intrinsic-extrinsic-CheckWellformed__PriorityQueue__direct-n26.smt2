(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (Int T@U T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@88 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@106 (T@T T@U) T@U)
(declare-fun $generated@@113 (T@U T@U) Int)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@121 (T@U T@U T@U) Bool)
(declare-fun $generated@@130 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@252 () Bool)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@261 () T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@26) 3))
(assert (forall (($generated@@29 Int) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@27 $generated@@29 $generated@@30 $generated@@31) $generated@@28)  (and (and ($generated@@25 $generated@@11 ($generated@@15 $generated@@29) $generated) ($generated@@25 $generated@@26 $generated@@30 $generated@@28)) ($generated@@25 $generated@@26 $generated@@31 $generated@@28)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@27 $generated@@29 $generated@@30 $generated@@31) $generated@@28))
)))
(assert (= ($generated@@9 $generated@@36) 4))
(assert  (=> (<= 3 $generated@@32) (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@34 $generated@@39) (and (< 3 $generated@@32) ($generated@@25 $generated@@26 $generated@@39 $generated@@35))) ($generated@@25 $generated@@36 ($generated@@33 $generated@@38 $generated@@39) ($generated@@37 $generated)))
 :pattern ( ($generated@@33 $generated@@38 $generated@@39))
))))
(assert (= ($generated@@40 $generated) $generated@@0))
(assert (forall (($generated@@42 Int) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@41 ($generated@@27 $generated@@42 $generated@@43 $generated@@44)) $generated@@6)
 :pattern ( ($generated@@27 $generated@@42 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 Int) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@45 ($generated@@27 $generated@@46 $generated@@47 $generated@@48)) $generated@@46)
 :pattern ( ($generated@@27 $generated@@46 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 Int) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@49 ($generated@@27 $generated@@50 $generated@@51 $generated@@52)) $generated@@51)
 :pattern ( ($generated@@27 $generated@@50 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 Int) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@53 ($generated@@27 $generated@@54 $generated@@55 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@27 $generated@@54 $generated@@55 $generated@@56))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@60 ($generated@@59 $generated@@26 $generated@@67)) (and (< 1 $generated@@32) ($generated@@25 $generated@@26 $generated@@67 $generated@@28))) (and (=> (not ($generated@@14 ($generated@@59 $generated@@10 ($generated@@13 ($generated@@61 ($generated@@59 $generated@@26 $generated@@67)))))) (let (($generated@@68 ($generated@@59 $generated@@26 ($generated@@53 ($generated@@59 $generated@@26 $generated@@67)))))
(let (($generated@@69 ($generated@@59 $generated@@26 ($generated@@49 ($generated@@59 $generated@@26 $generated@@67)))))
(let (($generated@@70 ($generated@@62 ($generated@@45 ($generated@@59 $generated@@26 $generated@@67)))))
 (and ($generated@@60 $generated@@69) (=> ($generated@@57 ($generated@@58 $generated@@66) $generated@@69) (and ($generated@@60 $generated@@68) (=> ($generated@@57 ($generated@@58 $generated@@66) $generated@@68) (and ($generated@@63 $generated@@69) (=> (or ($generated@@64 $generated@@69 $generated@@65) (<= $generated@@70 ($generated@@45 $generated@@69))) ($generated@@63 $generated@@68))))))))))) (= ($generated@@57 ($generated@@58 $generated@@66) ($generated@@59 $generated@@26 $generated@@67)) (ite ($generated@@61 ($generated@@59 $generated@@26 $generated@@67)) true (let (($generated@@71 ($generated@@59 $generated@@26 ($generated@@53 ($generated@@59 $generated@@26 $generated@@67)))))
(let (($generated@@72 ($generated@@59 $generated@@26 ($generated@@49 ($generated@@59 $generated@@26 $generated@@67)))))
(let (($generated@@73 ($generated@@62 ($generated@@45 ($generated@@59 $generated@@26 $generated@@67)))))
 (and (and (and ($generated@@57 ($generated@@58 $generated@@66) $generated@@72) ($generated@@57 ($generated@@58 $generated@@66) $generated@@71)) (or ($generated@@64 $generated@@72 $generated@@65) (<= $generated@@73 ($generated@@62 ($generated@@45 $generated@@72))))) (or ($generated@@64 $generated@@71 $generated@@65) (<= $generated@@73 ($generated@@62 ($generated@@45 $generated@@71))))))))))))
 :weight 3
 :pattern ( ($generated@@57 ($generated@@58 $generated@@66) ($generated@@59 $generated@@26 $generated@@67)))
))))
(assert  (=> (<= 3 $generated@@32) (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@34 ($generated@@59 $generated@@26 $generated@@79)) (and (< 3 $generated@@32) ($generated@@25 $generated@@26 $generated@@79 $generated@@35))) (and (=> (not ($generated@@14 ($generated@@59 $generated@@10 ($generated@@13 ($generated@@61 ($generated@@59 $generated@@26 $generated@@79)))))) (let (($generated@@80 ($generated@@59 $generated@@26 ($generated@@53 ($generated@@59 $generated@@26 $generated@@79)))))
(let (($generated@@81 ($generated@@59 $generated@@26 ($generated@@49 ($generated@@59 $generated@@26 $generated@@79)))))
 (and ($generated@@34 $generated@@81) ($generated@@34 $generated@@80))))) (= ($generated@@33 ($generated@@58 $generated@@78) ($generated@@59 $generated@@26 $generated@@79)) (ite ($generated@@61 ($generated@@59 $generated@@26 $generated@@79)) $generated@@74 (let (($generated@@82 ($generated@@59 $generated@@26 ($generated@@53 ($generated@@59 $generated@@26 $generated@@79)))))
(let (($generated@@83 ($generated@@59 $generated@@26 ($generated@@49 ($generated@@59 $generated@@26 $generated@@79)))))
(let (($generated@@84 ($generated@@62 ($generated@@45 ($generated@@59 $generated@@26 $generated@@79)))))
($generated@@75 ($generated@@75 ($generated@@76 $generated@@74 ($generated@@77 $generated@@11 ($generated@@15 $generated@@84))) ($generated@@33 ($generated@@58 $generated@@78) $generated@@83)) ($generated@@33 ($generated@@58 $generated@@78) $generated@@82)))))))))
 :weight 3
 :pattern ( ($generated@@33 ($generated@@58 $generated@@78) ($generated@@59 $generated@@26 $generated@@79)))
))))
(assert (= ($generated@@41 $generated@@65) $generated@@5))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@25 $generated@@36 $generated@@86 ($generated@@37 $generated@@87)) ($generated@@85 $generated@@86))
 :pattern ( ($generated@@25 $generated@@36 $generated@@86 ($generated@@37 $generated@@87)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 $generated@@26 $generated@@89 $generated@@35 $generated@@90) ($generated@@88 $generated@@26 $generated@@89 $generated@@28 $generated@@90))
 :pattern ( ($generated@@88 $generated@@26 $generated@@89 $generated@@35 $generated@@90))
)))
(assert ($generated@@25 $generated@@26 $generated@@65 $generated@@28))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@64 $generated@@91 $generated@@92) (= $generated@@91 $generated@@92))
 :pattern ( ($generated@@64 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@62 $generated@@93) $generated@@93)
 :pattern ( ($generated@@62 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@59 $generated@@95 $generated@@94) $generated@@94)
 :pattern ( ($generated@@59 $generated@@95 $generated@@94))
)))
(assert  (=> (<= 3 $generated@@32) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@34 $generated@@97) (and (< 3 $generated@@32) ($generated@@25 $generated@@26 $generated@@97 $generated@@35))) (and (=> (not ($generated@@61 $generated@@97)) (let (($generated@@98 ($generated@@53 $generated@@97)))
(let (($generated@@99 ($generated@@49 $generated@@97)))
 (and ($generated@@34 $generated@@99) ($generated@@34 $generated@@98))))) (= ($generated@@33 ($generated@@58 $generated@@96) $generated@@97) (ite ($generated@@61 $generated@@97) $generated@@74 (let (($generated@@100 ($generated@@53 $generated@@97)))
(let (($generated@@101 ($generated@@49 $generated@@97)))
(let (($generated@@102 ($generated@@45 $generated@@97)))
($generated@@75 ($generated@@75 ($generated@@76 $generated@@74 ($generated@@77 $generated@@11 ($generated@@15 $generated@@102))) ($generated@@33 $generated@@96 $generated@@101)) ($generated@@33 $generated@@96 $generated@@100)))))))))
 :pattern ( ($generated@@33 ($generated@@58 $generated@@96) $generated@@97))
))))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@61 $generated@@103) (= ($generated@@41 $generated@@103) $generated@@5))
 :pattern ( ($generated@@61 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@104 $generated@@105) (= ($generated@@41 $generated@@105) $generated@@6))
 :pattern ( ($generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@77 $generated@@108 ($generated@@106 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@106 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@104 $generated@@109) (exists (($generated@@110 Int) ($generated@@111 T@U) ($generated@@112 T@U) ) (= $generated@@109 ($generated@@27 $generated@@110 $generated@@111 $generated@@112))))
 :pattern ( ($generated@@104 $generated@@109))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or (not (= $generated@@115 $generated@@116)) (not true)) (= ($generated@@113 $generated@@114 $generated@@116) ($generated@@113 ($generated@@76 $generated@@114 $generated@@115) $generated@@116)))
 :pattern ( ($generated@@76 $generated@@114 $generated@@115) ($generated@@113 $generated@@114 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@61 $generated@@117) (= $generated@@117 $generated@@65))
 :pattern ( ($generated@@61 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@76 $generated@@119 $generated@@120)) (+ ($generated@@118 $generated@@119) 1))
 :pattern ( ($generated@@118 ($generated@@76 $generated@@119 $generated@@120)))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@121 ($generated@@77 $generated@@125 $generated@@122) $generated@@123 $generated@@124) ($generated@@88 $generated@@125 $generated@@122 $generated@@123 $generated@@124))
 :pattern ( ($generated@@121 ($generated@@77 $generated@@125 $generated@@122) $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@104 $generated@@126) ($generated@@104 $generated@@127)) (= ($generated@@64 $generated@@126 $generated@@127)  (and (and (= ($generated@@45 $generated@@126) ($generated@@45 $generated@@127)) ($generated@@64 ($generated@@49 $generated@@126) ($generated@@49 $generated@@127))) ($generated@@64 ($generated@@53 $generated@@126) ($generated@@53 $generated@@127)))))
 :pattern ( ($generated@@64 $generated@@126 $generated@@127) ($generated@@104 $generated@@126))
 :pattern ( ($generated@@64 $generated@@126 $generated@@127) ($generated@@104 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@118 ($generated@@75 $generated@@128 $generated@@129)) (+ ($generated@@118 $generated@@128) ($generated@@118 $generated@@129)))
 :pattern ( ($generated@@118 ($generated@@75 $generated@@128 $generated@@129)))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@130 $generated@@131 $generated@@28) (and (= ($generated@@77 $generated@@26 ($generated@@106 $generated@@26 $generated@@131)) $generated@@131) ($generated@@25 $generated@@26 ($generated@@106 $generated@@26 $generated@@131) $generated@@28)))
 :pattern ( ($generated@@130 $generated@@131 $generated@@28))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@130 $generated@@132 $generated@@35) (and (= ($generated@@77 $generated@@26 ($generated@@106 $generated@@26 $generated@@132)) $generated@@132) ($generated@@25 $generated@@26 ($generated@@106 $generated@@26 $generated@@132) $generated@@35)))
 :pattern ( ($generated@@130 $generated@@132 $generated@@35))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@63 $generated@@133) (or ($generated@@61 $generated@@133) ($generated@@104 $generated@@133)))
 :pattern ( ($generated@@63 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> ($generated@@134 $generated@@135 $generated@@136) (= $generated@@135 $generated@@136))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@25 $generated@@36 $generated@@137 ($generated@@37 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (< 0 ($generated@@113 $generated@@137 $generated@@139)) ($generated@@130 $generated@@139 $generated@@138))
 :pattern ( ($generated@@113 $generated@@137 $generated@@139))
)))
 :pattern ( ($generated@@25 $generated@@36 $generated@@137 ($generated@@37 $generated@@138)))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@140 $generated@@28) (or ($generated@@61 $generated@@140) ($generated@@104 $generated@@140)))
 :pattern ( ($generated@@104 $generated@@140) ($generated@@25 $generated@@26 $generated@@140 $generated@@28))
 :pattern ( ($generated@@61 $generated@@140) ($generated@@25 $generated@@26 $generated@@140 $generated@@28))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> ($generated@@130 $generated@@141 $generated) (and (= ($generated@@77 $generated@@11 ($generated@@106 $generated@@11 $generated@@141)) $generated@@141) ($generated@@25 $generated@@11 ($generated@@106 $generated@@11 $generated@@141) $generated)))
 :pattern ( ($generated@@130 $generated@@141 $generated))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@57 ($generated@@58 $generated@@142) $generated@@143) ($generated@@57 $generated@@142 $generated@@143))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@130 ($generated@@77 $generated@@146 $generated@@144) $generated@@145) ($generated@@25 $generated@@146 $generated@@144 $generated@@145))
 :pattern ( ($generated@@130 ($generated@@77 $generated@@146 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@85 $generated@@147) (forall (($generated@@148 T@U) ) (!  (and (<= 0 ($generated@@113 $generated@@147 $generated@@148)) (<= ($generated@@113 $generated@@147 $generated@@148) ($generated@@118 $generated@@147)))
 :pattern ( ($generated@@113 $generated@@147 $generated@@148))
)))
 :pattern ( ($generated@@85 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (<= 0 ($generated@@118 $generated@@149))
 :pattern ( ($generated@@118 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@61 $generated@@150) ($generated@@61 $generated@@151)) ($generated@@64 $generated@@150 $generated@@151))
 :pattern ( ($generated@@64 $generated@@150 $generated@@151) ($generated@@61 $generated@@150))
 :pattern ( ($generated@@64 $generated@@150 $generated@@151) ($generated@@61 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@113 $generated@@74 $generated@@152) 0)
 :pattern ( ($generated@@113 $generated@@74 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@113 ($generated@@76 $generated@@153 $generated@@154) $generated@@154) (+ ($generated@@113 $generated@@153 $generated@@154) 1))
 :pattern ( ($generated@@76 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 Int) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@27 ($generated@@62 $generated@@155) ($generated@@59 $generated@@26 $generated@@156) ($generated@@59 $generated@@26 $generated@@157)) ($generated@@59 $generated@@26 ($generated@@27 $generated@@155 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@27 ($generated@@62 $generated@@155) ($generated@@59 $generated@@26 $generated@@156) ($generated@@59 $generated@@26 $generated@@157)))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@37 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@37 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@40 ($generated@@37 $generated@@160)) $generated@@1)
 :pattern ( ($generated@@37 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@106 $generated@@162 ($generated@@77 $generated@@162 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@77 $generated@@162 $generated@@161))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (< ($generated@@163 $generated@@165) ($generated@@163 ($generated@@27 $generated@@164 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@27 $generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 Int) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (< ($generated@@163 $generated@@169) ($generated@@163 ($generated@@27 $generated@@167 $generated@@168 $generated@@169)))
 :pattern ( ($generated@@27 $generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@33 ($generated@@58 $generated@@170) $generated@@171) ($generated@@33 $generated@@170 $generated@@171))
 :pattern ( ($generated@@33 ($generated@@58 $generated@@170) $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (!  (and (= (= ($generated@@118 $generated@@172) 0) (= $generated@@172 $generated@@74)) (=> (or (not (= ($generated@@118 $generated@@172) 0)) (not true)) (exists (($generated@@173 T@U) ) (! (< 0 ($generated@@113 $generated@@172 $generated@@173))
 :pattern ( ($generated@@113 $generated@@172 $generated@@173))
))))
 :pattern ( ($generated@@118 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@113 ($generated@@75 $generated@@174 $generated@@175) $generated@@176) (+ ($generated@@113 $generated@@174 $generated@@176) ($generated@@113 $generated@@175 $generated@@176)))
 :pattern ( ($generated@@113 ($generated@@75 $generated@@174 $generated@@175) $generated@@176))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@177 $generated@@188 $generated@@189 $generated@@190 ($generated@@184 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@193 $generated@@194) $generated@@191)
 :weight 0
)) (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@177 $generated@@195 $generated@@196 $generated@@197 ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@177 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@177 $generated@@204 $generated@@205 $generated@@206 ($generated@@184 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@177 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (= ($generated@@9 $generated@@178) 5)) (= ($generated@@9 $generated@@179) 6)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@181 $generated@@213 $generated@@214 ($generated@@185 $generated@@213 $generated@@214 $generated@@216 $generated@@217 $generated@@215) $generated@@217) $generated@@215)
 :weight 0
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@222 $generated@@223) (= ($generated@@181 $generated@@218 $generated@@219 ($generated@@185 $generated@@218 $generated@@219 $generated@@221 $generated@@222 $generated@@220) $generated@@223) ($generated@@181 $generated@@218 $generated@@219 $generated@@221 $generated@@223)))
 :weight 0
))) (= ($generated@@9 $generated@@182) 7)) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (= ($generated@@9 ($generated@@183 $generated@@224 $generated@@225)) 8))) (forall (($generated@@226 T@T) ($generated@@227 T@T) ) (! (= ($generated@@186 ($generated@@183 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@183 $generated@@226 $generated@@227))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= ($generated@@187 ($generated@@183 $generated@@228 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@183 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (= ($generated@@14 ($generated@@177 $generated@@178 $generated@@179 $generated@@10 ($generated@@180 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (or (not (= $generated@@234 $generated@@230)) (not true)) ($generated@@14 ($generated@@106 $generated@@10 ($generated@@181 $generated@@179 $generated@@182 ($generated@@181 $generated@@178 ($generated@@183 $generated@@179 $generated@@182) $generated@@231 $generated@@234) $generated@@232)))) $generated@@233))
 :pattern ( ($generated@@177 $generated@@178 $generated@@179 $generated@@10 ($generated@@180 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and ($generated@@236 $generated@@238) (and ($generated@@104 $generated@@237) ($generated@@88 $generated@@26 $generated@@237 $generated@@28 $generated@@238))) ($generated@@88 $generated@@11 ($generated@@15 ($generated@@45 $generated@@237)) $generated $generated@@238))
 :pattern ( ($generated@@88 $generated@@11 ($generated@@15 ($generated@@45 $generated@@237)) $generated $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> ($generated@@130 $generated@@239 ($generated@@37 $generated@@240)) (and (= ($generated@@77 $generated@@36 ($generated@@106 $generated@@36 $generated@@239)) $generated@@239) ($generated@@25 $generated@@36 ($generated@@106 $generated@@36 $generated@@239) ($generated@@37 $generated@@240))))
 :pattern ( ($generated@@130 $generated@@239 ($generated@@37 $generated@@240)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and ($generated@@236 $generated@@242) ($generated@@25 $generated@@26 $generated@@241 $generated@@28)) ($generated@@88 $generated@@26 $generated@@241 $generated@@28 $generated@@242))
 :pattern ( ($generated@@88 $generated@@26 $generated@@241 $generated@@28 $generated@@242))
)))
(assert (= ($generated@@40 $generated@@28) $generated@@3))
(assert (= ($generated@@243 $generated@@28) $generated@@7))
(assert (= ($generated@@40 $generated@@35) $generated@@4))
(assert (= ($generated@@243 $generated@@35) $generated@@8))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (or ($generated@@60 $generated@@245) (and (< 1 $generated@@32) ($generated@@25 $generated@@26 $generated@@245 $generated@@28))) (and (=> (not ($generated@@61 $generated@@245)) (let (($generated@@246 ($generated@@53 $generated@@245)))
(let (($generated@@247 ($generated@@49 $generated@@245)))
(let (($generated@@248 ($generated@@45 $generated@@245)))
 (and ($generated@@60 $generated@@247) (=> ($generated@@57 $generated@@244 $generated@@247) (and ($generated@@60 $generated@@246) (=> ($generated@@57 $generated@@244 $generated@@246) (and ($generated@@63 $generated@@247) (=> (or ($generated@@64 $generated@@247 $generated@@65) (<= $generated@@248 ($generated@@45 $generated@@247))) ($generated@@63 $generated@@246))))))))))) (= ($generated@@57 ($generated@@58 $generated@@244) $generated@@245) (ite ($generated@@61 $generated@@245) true (let (($generated@@249 ($generated@@53 $generated@@245)))
(let (($generated@@250 ($generated@@49 $generated@@245)))
(let (($generated@@251 ($generated@@45 $generated@@245)))
 (and (and (and ($generated@@57 $generated@@244 $generated@@250) ($generated@@57 $generated@@244 $generated@@249)) (or ($generated@@64 $generated@@250 $generated@@65) (<= $generated@@251 ($generated@@45 $generated@@250)))) (or ($generated@@64 $generated@@249 $generated@@65) (<= $generated@@251 ($generated@@45 $generated@@249)))))))))))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@244) $generated@@245))
))))
(assert (= $generated@@65 ($generated@@59 $generated@@26 $generated@@65)))
(assert  (=> (<= 4 $generated@@32) (=> (or $generated@@252 (< 4 $generated@@32)) (= $generated@@253 ($generated@@59 $generated@@26 $generated@@65)))))
(assert  (=> (<= 4 $generated@@32) (=> (or $generated@@252 (< 4 $generated@@32)) (= $generated@@253 ($generated@@59 $generated@@26 $generated@@65)))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and ($generated@@236 $generated@@255) (and ($generated@@104 $generated@@254) ($generated@@88 $generated@@26 $generated@@254 $generated@@28 $generated@@255))) ($generated@@88 $generated@@26 ($generated@@49 $generated@@254) $generated@@28 $generated@@255))
 :pattern ( ($generated@@88 $generated@@26 ($generated@@49 $generated@@254) $generated@@28 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and ($generated@@236 $generated@@257) (and ($generated@@104 $generated@@256) ($generated@@88 $generated@@26 $generated@@256 $generated@@28 $generated@@257))) ($generated@@88 $generated@@26 ($generated@@53 $generated@@256) $generated@@28 $generated@@257))
 :pattern ( ($generated@@88 $generated@@26 ($generated@@53 $generated@@256) $generated@@28 $generated@@257))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@77 $generated@@11 ($generated@@15 ($generated@@62 $generated@@258))) ($generated@@59 $generated@@182 ($generated@@77 $generated@@11 ($generated@@15 $generated@@258))))
 :pattern ( ($generated@@77 $generated@@11 ($generated@@15 ($generated@@62 $generated@@258))))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@T) ) (! (= ($generated@@77 $generated@@260 ($generated@@59 $generated@@260 $generated@@259)) ($generated@@59 $generated@@182 ($generated@@77 $generated@@260 $generated@@259)))
 :pattern ( ($generated@@77 $generated@@260 ($generated@@59 $generated@@260 $generated@@259)))
)))
(assert  (=> (<= 4 $generated@@32) (=> (or $generated@@252 (< 4 $generated@@32)) (and ($generated@@134 ($generated@@33 ($generated@@58 $generated@@261) ($generated@@59 $generated@@26 $generated@@253)) $generated@@74) ($generated@@25 $generated@@26 $generated@@253 $generated@@35)))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (< 0 ($generated@@113 $generated@@262 $generated@@264)) (< 0 ($generated@@113 ($generated@@76 $generated@@262 $generated@@263) $generated@@264)))
 :pattern ( ($generated@@76 $generated@@262 $generated@@263) ($generated@@113 $generated@@262 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (< 0 ($generated@@113 ($generated@@76 $generated@@265 $generated@@266) $generated@@267))  (or (= $generated@@267 $generated@@266) (< 0 ($generated@@113 $generated@@265 $generated@@267))))
 :pattern ( ($generated@@113 ($generated@@76 $generated@@265 $generated@@266) $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@268 $generated@@35)  (and ($generated@@25 $generated@@26 $generated@@268 $generated@@28) ($generated@@57 ($generated@@58 $generated@@261) $generated@@268)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@268 $generated@@35))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= ($generated@@134 $generated@@269 $generated@@270) (forall (($generated@@271 T@U) ) (! (= ($generated@@113 $generated@@269 $generated@@271) ($generated@@113 $generated@@270 $generated@@271))
 :pattern ( ($generated@@113 $generated@@269 $generated@@271))
 :pattern ( ($generated@@113 $generated@@270 $generated@@271))
)))
 :pattern ( ($generated@@134 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (! (= ($generated@@88 $generated@@36 $generated@@272 ($generated@@37 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (< 0 ($generated@@113 $generated@@272 $generated@@275)) ($generated@@121 $generated@@275 $generated@@273 $generated@@274))
 :pattern ( ($generated@@113 $generated@@272 $generated@@275))
)))
 :pattern ( ($generated@@88 $generated@@36 $generated@@272 ($generated@@37 $generated@@273) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (! ($generated@@88 $generated@@11 $generated@@277 $generated $generated@@276)
 :pattern ( ($generated@@88 $generated@@11 $generated@@277 $generated $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! ($generated@@25 $generated@@11 $generated@@278 $generated)
 :pattern ( ($generated@@25 $generated@@11 $generated@@278 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@283  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@134 ($generated@@33 ($generated@@58 ($generated@@58 $generated@@261)) ($generated@@59 $generated@@26 $generated@@253)) $generated@@74))))
(let (($generated@@284  (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@25 $generated@@26 ($generated@@59 $generated@@26 $generated@@65) $generated@@35)) (=> ($generated@@25 $generated@@26 ($generated@@59 $generated@@26 $generated@@65) $generated@@35) (=> (= $generated@@253 ($generated@@59 $generated@@26 $generated@@65)) (=> (and ($generated@@25 $generated@@26 $generated@@253 $generated@@35) (= (ControlFlow 0 5) 4)) $generated@@283))))))
(let (($generated@@285  (=> (and ($generated@@25 $generated@@26 $generated@@253 $generated@@35) (= (ControlFlow 0 2) (- 0 1))) ($generated@@14 ($generated@@59 $generated@@10 ($generated@@13 true))))))
(let (($generated@@286  (=> (= $generated@@279 ($generated@@180 $generated@@280 $generated@@281 $generated@@2 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@285) (=> (= (ControlFlow 0 7) 5) $generated@@284)))))
(let (($generated@@287  (=> (and (and ($generated@@236 $generated@@281) ($generated@@282 $generated@@281)) (and (= 4 $generated@@32) (= (ControlFlow 0 8) 7))) $generated@@286)))
$generated@@287))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
