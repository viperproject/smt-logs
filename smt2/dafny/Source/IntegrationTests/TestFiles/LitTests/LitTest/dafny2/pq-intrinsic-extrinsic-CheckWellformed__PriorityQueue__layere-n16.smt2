(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U) T@U)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U T@U) Bool)
(declare-fun $generated@@39 (T@U Int) T@U)
(declare-fun $generated@@40 (T@U Int) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@45 (T@U Int) Bool)
(declare-fun $generated@@46 (T@U T@U Int) T@U)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@50 (T@U T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@78 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 () T@T)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@130 (T@T T@T) T@T)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@T) T@T)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@188 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (= ($generated@@5 $generated@@25) 3))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@33 T@U) ) (!  (=> (or ($generated@@26 ($generated@@24 $generated@@25 $generated@@33)) (and (< 1 $generated@@22) ($generated@@27 $generated@@33 $generated@@28))) (and ($generated@@29 ($generated@@24 $generated@@25 $generated@@33)) (= ($generated@@23 ($generated@@24 $generated@@25 $generated@@33)) ($generated@@30 ($generated@@31 $generated@@32) ($generated@@24 $generated@@25 $generated@@33)))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@24 $generated@@25 $generated@@33)))
))))
(assert (= ($generated@@5 $generated@@35) 4))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@37 T@U) ) (!  (=> (or ($generated@@26 $generated@@37) (and (< 1 $generated@@22) ($generated@@27 $generated@@37 $generated@@28))) ($generated@@34 $generated@@35 ($generated@@23 $generated@@37) ($generated@@36 $generated)))
 :pattern ( ($generated@@23 $generated@@37))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 Int) ) (!  (=> (and (or ($generated@@40 $generated@@43 $generated@@44) (and (< 2 $generated@@22) (and ($generated@@27 $generated@@43 $generated@@28) ($generated@@38 $generated@@43 $generated@@28 $generated@@42)))) ($generated@@41 $generated@@42)) ($generated@@38 ($generated@@39 $generated@@43 $generated@@44) $generated@@28 $generated@@42))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@43 $generated@@44) $generated@@28 $generated@@42))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@47 T@U) ($generated@@48 Int) ) (!  (=> (or ($generated@@40 $generated@@47 $generated@@48) (and (< 2 $generated@@22) ($generated@@27 $generated@@47 $generated@@28))) (and ($generated@@45 $generated@@47 $generated@@48) (= ($generated@@39 $generated@@47 $generated@@48) ($generated@@46 ($generated@@31 $generated@@32) $generated@@47 $generated@@48))))
 :pattern ( ($generated@@39 $generated@@47 $generated@@48))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@54 T@U) ($generated@@55 Int) ) (!  (=> (or ($generated@@40 $generated@@54 $generated@@55) (and (< 2 $generated@@22) ($generated@@27 $generated@@54 $generated@@28))) (and ($generated@@49 ($generated@@23 ($generated@@39 $generated@@54 $generated@@55)) ($generated@@50 ($generated@@23 $generated@@54) ($generated@@51 $generated@@52 ($generated@@53 $generated@@7 ($generated@@11 $generated@@55))))) ($generated@@27 ($generated@@39 $generated@@54 $generated@@55) $generated@@28)))
 :pattern ( ($generated@@39 $generated@@54 $generated@@55))
))))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@57 ($generated@@36 $generated@@58)) ($generated@@56 $generated@@57))
 :pattern ( ($generated@@34 $generated@@35 $generated@@57 ($generated@@36 $generated@@58)))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@38 $generated@@60 $generated@@28 $generated@@61) ($generated@@38 $generated@@60 $generated@@59 $generated@@61))
 :pattern ( ($generated@@38 $generated@@60 $generated@@28 $generated@@61))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@62 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@24 $generated@@65 $generated@@64) $generated@@64)
 :pattern ( ($generated@@24 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@53 $generated@@68 ($generated@@66 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@69 T@U) ($generated@@70 Int) ) (!  (=> (or ($generated@@40 $generated@@69 ($generated@@62 $generated@@70)) (and (< 2 $generated@@22) ($generated@@27 $generated@@69 $generated@@28))) (and ($generated@@45 $generated@@69 ($generated@@62 $generated@@70)) (= ($generated@@39 $generated@@69 ($generated@@62 $generated@@70)) ($generated@@46 ($generated@@31 $generated@@32) $generated@@69 ($generated@@62 $generated@@70)))))
 :weight 3
 :pattern ( ($generated@@39 $generated@@69 ($generated@@62 $generated@@70)))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (or (not (= $generated@@73 $generated@@74)) (not true)) (= ($generated@@71 $generated@@72 $generated@@74) ($generated@@71 ($generated@@51 $generated@@72 $generated@@73) $generated@@74)))
 :pattern ( ($generated@@51 $generated@@72 $generated@@73) ($generated@@71 $generated@@72 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@75 ($generated@@51 $generated@@76 $generated@@77)) (+ ($generated@@75 $generated@@76) 1))
 :pattern ( ($generated@@75 ($generated@@51 $generated@@76 $generated@@77)))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@38 ($generated@@53 $generated@@82 $generated@@79) $generated@@80 $generated@@81) ($generated@@78 $generated@@82 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@38 ($generated@@53 $generated@@82 $generated@@79) $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or ($generated@@29 $generated@@84) ($generated@@27 $generated@@84 $generated@@59)) ($generated@@34 $generated@@35 ($generated@@30 $generated@@83 $generated@@84) ($generated@@36 $generated)))
 :pattern ( ($generated@@30 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@75 ($generated@@50 $generated@@85 $generated@@86)) (+ ($generated@@75 $generated@@85) ($generated@@75 $generated@@86)))
 :pattern ( ($generated@@75 ($generated@@50 $generated@@85 $generated@@86)))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ) (! (= ($generated@@46 ($generated@@31 $generated@@87) $generated@@88 $generated@@89) ($generated@@46 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@46 ($generated@@31 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> ($generated@@49 $generated@@90 $generated@@91) (= $generated@@90 $generated@@91))
 :pattern ( ($generated@@49 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@92 ($generated@@36 $generated@@93)) (forall (($generated@@94 T@U) ) (!  (=> (< 0 ($generated@@71 $generated@@92 $generated@@94)) ($generated@@27 $generated@@94 $generated@@93))
 :pattern ( ($generated@@71 $generated@@92 $generated@@94))
)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@92 ($generated@@36 $generated@@93)))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@27 $generated@@95 $generated) (and (= ($generated@@53 $generated@@7 ($generated@@66 $generated@@7 $generated@@95)) $generated@@95) ($generated@@34 $generated@@7 ($generated@@66 $generated@@7 $generated@@95) $generated)))
 :pattern ( ($generated@@27 $generated@@95 $generated))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@96 ($generated@@31 $generated@@97) $generated@@98) ($generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@96 ($generated@@31 $generated@@97) $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@27 ($generated@@53 $generated@@101 $generated@@99) $generated@@100) ($generated@@34 $generated@@101 $generated@@99 $generated@@100))
 :pattern ( ($generated@@27 ($generated@@53 $generated@@101 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@56 $generated@@102) (forall (($generated@@103 T@U) ) (!  (and (<= 0 ($generated@@71 $generated@@102 $generated@@103)) (<= ($generated@@71 $generated@@102 $generated@@103) ($generated@@75 $generated@@102)))
 :pattern ( ($generated@@71 $generated@@102 $generated@@103))
)))
 :pattern ( ($generated@@56 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (<= 0 ($generated@@75 $generated@@104))
 :pattern ( ($generated@@75 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@71 $generated@@52 $generated@@105) 0)
 :pattern ( ($generated@@71 $generated@@52 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@71 ($generated@@51 $generated@@106 $generated@@107) $generated@@107) (+ ($generated@@71 $generated@@106 $generated@@107) 1))
 :pattern ( ($generated@@51 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@36 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@36 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@21 ($generated@@36 $generated@@110)) $generated@@1)
 :pattern ( ($generated@@36 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@66 $generated@@112 ($generated@@53 $generated@@112 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@53 $generated@@112 $generated@@111))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@113 T@U) ) (!  (=> (or ($generated@@26 $generated@@113) (and (< 1 $generated@@22) ($generated@@27 $generated@@113 $generated@@28))) (and ($generated@@29 $generated@@113) (= ($generated@@23 $generated@@113) ($generated@@30 ($generated@@31 $generated@@32) $generated@@113))))
 :pattern ( ($generated@@23 $generated@@113))
))))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@30 ($generated@@31 $generated@@114) $generated@@115) ($generated@@30 $generated@@114 $generated@@115))
 :pattern ( ($generated@@30 ($generated@@31 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (!  (and (= (= ($generated@@75 $generated@@116) 0) (= $generated@@116 $generated@@52)) (=> (or (not (= ($generated@@75 $generated@@116) 0)) (not true)) (exists (($generated@@117 T@U) ) (! (< 0 ($generated@@71 $generated@@116 $generated@@117))
 :pattern ( ($generated@@71 $generated@@116 $generated@@117))
))))
 :pattern ( ($generated@@75 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@71 ($generated@@50 $generated@@118 $generated@@119) $generated@@120) (+ ($generated@@71 $generated@@118 $generated@@120) ($generated@@71 $generated@@119 $generated@@120)))
 :pattern ( ($generated@@71 ($generated@@50 $generated@@118 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 Int) ) (!  (=> (and (or ($generated@@45 $generated@@123 $generated@@124) (and ($generated@@27 $generated@@123 $generated@@59) ($generated@@38 $generated@@123 $generated@@59 $generated@@121))) ($generated@@41 $generated@@121)) ($generated@@38 ($generated@@46 $generated@@122 $generated@@123 $generated@@124) $generated@@59 $generated@@121))
 :pattern ( ($generated@@38 ($generated@@46 $generated@@122 $generated@@123 $generated@@124) $generated@@59 $generated@@121))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@125 $generated@@135 $generated@@136 $generated@@137 ($generated@@131 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@140 $generated@@141) $generated@@138)
 :weight 0
)) (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@125 $generated@@142 $generated@@143 $generated@@144 ($generated@@131 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@125 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@125 $generated@@151 $generated@@152 $generated@@153 ($generated@@131 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@125 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)))) (= ($generated@@5 $generated@@126) 5)) (= ($generated@@5 $generated@@127) 6)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@129 $generated@@160 $generated@@161 ($generated@@132 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@162) $generated@@164) $generated@@162)
 :weight 0
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@169 $generated@@170) (= ($generated@@129 $generated@@165 $generated@@166 ($generated@@132 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@167) $generated@@170) ($generated@@129 $generated@@165 $generated@@166 $generated@@168 $generated@@170)))
 :weight 0
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@5 ($generated@@130 $generated@@171 $generated@@172)) 7))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@133 ($generated@@130 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@130 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@134 ($generated@@130 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@130 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Bool) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@10 ($generated@@125 $generated@@126 $generated@@127 $generated@@6 ($generated@@128 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@181 $generated@@182))  (=> (and (or (not (= $generated@@181 $generated@@177)) (not true)) ($generated@@10 ($generated@@66 $generated@@6 ($generated@@129 $generated@@127 $generated@@25 ($generated@@129 $generated@@126 ($generated@@130 $generated@@127 $generated@@25) $generated@@178 $generated@@181) $generated@@179)))) $generated@@180))
 :pattern ( ($generated@@125 $generated@@126 $generated@@127 $generated@@6 ($generated@@128 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Int) ) (!  (=> (or ($generated@@45 $generated@@184 $generated@@185) ($generated@@27 $generated@@184 $generated@@59)) ($generated@@27 ($generated@@46 $generated@@183 $generated@@184 $generated@@185) $generated@@59))
 :pattern ( ($generated@@46 $generated@@183 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@27 $generated@@186 ($generated@@36 $generated@@187)) (and (= ($generated@@53 $generated@@35 ($generated@@66 $generated@@35 $generated@@186)) $generated@@186) ($generated@@34 $generated@@35 ($generated@@66 $generated@@35 $generated@@186) ($generated@@36 $generated@@187))))
 :pattern ( ($generated@@27 $generated@@186 ($generated@@36 $generated@@187)))
)))
(assert (= ($generated@@21 $generated@@28) $generated@@3))
(assert (= ($generated@@188 $generated@@28) $generated@@4))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@189 T@U) ($generated@@190 Int) ) (!  (=> (or ($generated@@40 ($generated@@24 $generated@@25 $generated@@189) ($generated@@62 $generated@@190)) (and (< 2 $generated@@22) ($generated@@27 $generated@@189 $generated@@28))) (and ($generated@@45 ($generated@@24 $generated@@25 $generated@@189) ($generated@@62 $generated@@190)) (= ($generated@@39 ($generated@@24 $generated@@25 $generated@@189) ($generated@@62 $generated@@190)) ($generated@@46 ($generated@@31 $generated@@32) ($generated@@24 $generated@@25 $generated@@189) ($generated@@62 $generated@@190)))))
 :weight 3
 :pattern ( ($generated@@39 ($generated@@24 $generated@@25 $generated@@189) ($generated@@62 $generated@@190)))
))))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@53 $generated@@7 ($generated@@11 ($generated@@62 $generated@@191))) ($generated@@24 $generated@@25 ($generated@@53 $generated@@7 ($generated@@11 $generated@@191))))
 :pattern ( ($generated@@53 $generated@@7 ($generated@@11 ($generated@@62 $generated@@191))))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@53 $generated@@193 ($generated@@24 $generated@@193 $generated@@192)) ($generated@@24 $generated@@25 ($generated@@53 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@53 $generated@@193 ($generated@@24 $generated@@193 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (< 0 ($generated@@71 $generated@@194 $generated@@196)) (< 0 ($generated@@71 ($generated@@51 $generated@@194 $generated@@195) $generated@@196)))
 :pattern ( ($generated@@51 $generated@@194 $generated@@195) ($generated@@71 $generated@@194 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (= (< 0 ($generated@@71 ($generated@@51 $generated@@197 $generated@@198) $generated@@199))  (or (= $generated@@199 $generated@@198) (< 0 ($generated@@71 $generated@@197 $generated@@199))))
 :pattern ( ($generated@@71 ($generated@@51 $generated@@197 $generated@@198) $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@27 $generated@@200 $generated@@28)  (and ($generated@@27 $generated@@200 $generated@@59) ($generated@@96 ($generated@@31 $generated@@32) $generated@@200)))
 :pattern ( ($generated@@27 $generated@@200 $generated@@28))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@49 $generated@@201 $generated@@202) (forall (($generated@@203 T@U) ) (! (= ($generated@@71 $generated@@201 $generated@@203) ($generated@@71 $generated@@202 $generated@@203))
 :pattern ( ($generated@@71 $generated@@201 $generated@@203))
 :pattern ( ($generated@@71 $generated@@202 $generated@@203))
)))
 :pattern ( ($generated@@49 $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@78 $generated@@35 $generated@@204 ($generated@@36 $generated@@205) $generated@@206) (forall (($generated@@207 T@U) ) (!  (=> (< 0 ($generated@@71 $generated@@204 $generated@@207)) ($generated@@38 $generated@@207 $generated@@205 $generated@@206))
 :pattern ( ($generated@@71 $generated@@204 $generated@@207))
)))
 :pattern ( ($generated@@78 $generated@@35 $generated@@204 ($generated@@36 $generated@@205) $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! ($generated@@78 $generated@@7 $generated@@209 $generated $generated@@208)
 :pattern ( ($generated@@78 $generated@@7 $generated@@209 $generated $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ) (! ($generated@@34 $generated@@7 $generated@@210 $generated)
 :pattern ( ($generated@@34 $generated@@7 $generated@@210 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@219  (=> (= (ControlFlow 0 5) (- 0 4)) ($generated@@49 ($generated@@23 ($generated@@39 $generated@@211 $generated@@212)) ($generated@@50 ($generated@@23 $generated@@211) ($generated@@51 $generated@@52 ($generated@@53 $generated@@7 ($generated@@11 $generated@@212))))))))
(let (($generated@@220  (and (=> (= (ControlFlow 0 6) (- 0 8)) ($generated@@96 ($generated@@31 ($generated@@31 $generated@@32)) $generated@@211)) (=> ($generated@@96 ($generated@@31 ($generated@@31 $generated@@32)) $generated@@211) (=> (and ($generated@@41 $generated@@213) ($generated@@214 $generated@@213)) (=> (and (and (and ($generated@@45 $generated@@211 $generated@@212) (let (($generated@@221 ($generated@@46 ($generated@@31 $generated@@32) $generated@@211 $generated@@212)))
 (and ($generated@@215 $generated@@221) (=> ($generated@@96 ($generated@@31 $generated@@32) $generated@@221) (and ($generated@@29 $generated@@221) ($generated@@29 $generated@@211)))))) (and (let (($generated@@222 ($generated@@46 ($generated@@31 ($generated@@31 $generated@@32)) $generated@@211 $generated@@212)))
($generated@@96 ($generated@@31 ($generated@@31 $generated@@32)) $generated@@222)) (let (($generated@@223 ($generated@@46 ($generated@@31 ($generated@@31 $generated@@32)) $generated@@211 $generated@@212)))
($generated@@49 ($generated@@30 ($generated@@31 ($generated@@31 $generated@@32)) $generated@@223) ($generated@@50 ($generated@@30 ($generated@@31 ($generated@@31 $generated@@32)) $generated@@211) ($generated@@51 $generated@@52 ($generated@@53 $generated@@7 ($generated@@11 $generated@@212)))))))) (and (and (= $generated@@216 $generated@@213) ($generated@@38 $generated@@211 $generated@@59 $generated@@213)) (and ($generated@@78 $generated@@7 ($generated@@11 $generated@@212) $generated $generated@@213) ($generated@@45 $generated@@211 $generated@@212)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@27 ($generated@@46 ($generated@@31 $generated@@32) $generated@@211 $generated@@212) $generated@@28)) (=> ($generated@@27 ($generated@@46 ($generated@@31 $generated@@32) $generated@@211 $generated@@212) $generated@@28) (=> (and (and (= ($generated@@39 $generated@@211 $generated@@212) ($generated@@46 ($generated@@31 $generated@@32) $generated@@211 $generated@@212)) ($generated@@45 $generated@@211 $generated@@212)) (and ($generated@@27 ($generated@@39 $generated@@211 $generated@@212) $generated@@28) (= (ControlFlow 0 6) 5))) $generated@@219)))))))))
(let (($generated@@224  (=> ($generated@@27 ($generated@@39 $generated@@211 $generated@@212) $generated@@28) (=> (and ($generated@@38 $generated@@211 $generated@@28 $generated@@216) ($generated@@78 $generated@@7 ($generated@@11 $generated@@212) $generated $generated@@216)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@212) (= $generated@@212 $generated@@212))) (=> (or (<= 0 $generated@@212) (= $generated@@212 $generated@@212)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@211 $generated@@211) (= $generated@@212 $generated@@212)) (< $generated@@212 $generated@@212)))))))))
(let (($generated@@225  (=> (= $generated@@217 ($generated@@128 $generated@@218 $generated@@216 $generated@@2 false)) (and (=> (= (ControlFlow 0 9) 2) $generated@@224) (=> (= (ControlFlow 0 9) 6) $generated@@220)))))
(let (($generated@@226  (=> (and (and (and ($generated@@41 $generated@@216) ($generated@@214 $generated@@216)) ($generated@@27 $generated@@211 $generated@@28)) (and (= 2 $generated@@22) (= (ControlFlow 0 10) 9))) $generated@@225)))
$generated@@226))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
