(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@66 () Int)
(declare-fun $generated@@67 (T@U T@U Int Int) Bool)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@69 (T@U T@U Int Int) Bool)
(declare-fun $generated@@70 (Int) Int)
(declare-fun $generated@@71 (Int) T@U)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U T@U Int) Bool)
(declare-fun $generated@@143 (T@U T@U Int) Bool)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@3) 0))
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@27)) (not true)) (= ($generated@@28 $generated@@31) ($generated@@26 $generated@@30))) ($generated@@29 $generated@@9 ($generated@@13 ($generated@@25 $generated@@31)) $generated@@0))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@30))
)))
(assert (= ($generated@@7 $generated@@33) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35) $generated@@37) ($generated@@32 $generated@@33 $generated@@36 ($generated@@26 $generated@@35) $generated@@37))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 ($generated@@26 $generated@@35) $generated@@37))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@39 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@39 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@39 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@7 $generated@@40) 4)) (= ($generated@@7 $generated@@41) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@7 ($generated@@42 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@42 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@42 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@42 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@64 ($generated@@26 $generated@@63) $generated@@65)  (or (= $generated@@64 $generated@@27) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@65 $generated@@64) $generated@@3)))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@64 ($generated@@26 $generated@@63) $generated@@65))
)))
(assert  (=> (<= 0 $generated@@66) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 Int) ($generated@@75 Int) ) (!  (=> (or ($generated@@69 $generated@@72 $generated@@73 $generated@@74 $generated@@75) (and (< 0 $generated@@66) (and (and ($generated@@68 $generated@@72) ($generated@@29 $generated@@33 $generated@@73 ($generated@@34 $generated@@0))) (and (<= ($generated@@70 0) $generated@@74) (<= $generated@@74 ($generated@@25 $generated@@73)))))) (= ($generated@@67 $generated@@72 $generated@@73 $generated@@74 $generated@@75) (exists (($generated@@76 Int) ($generated@@77 Int) ) (!  (and (and (and (<= ($generated@@70 0) $generated@@76) (< $generated@@76 $generated@@77)) (< $generated@@77 $generated@@74)) (and (= ($generated@@14 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@72 $generated@@73) ($generated@@71 $generated@@76)))) ($generated@@14 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@72 $generated@@73) ($generated@@71 $generated@@77))))) (= ($generated@@14 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@72 $generated@@73) ($generated@@71 $generated@@77)))) $generated@@75)))
 :pattern ( ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@72 $generated@@73) ($generated@@71 $generated@@77))) ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@72 $generated@@73) ($generated@@71 $generated@@76))))
))))
 :pattern ( ($generated@@67 $generated@@72 $generated@@73 $generated@@74 $generated@@75) ($generated@@68 $generated@@72))
))))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@70 $generated@@78) $generated@@78)
 :pattern ( ($generated@@70 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 Int) ) (!  (=> (and (and (and ($generated@@68 $generated@@84) (and (or (not (= $generated@@85 $generated@@27)) (not true)) (= ($generated@@28 $generated@@85) ($generated@@26 $generated@@83)))) (and (<= 0 $generated@@86) (< $generated@@86 ($generated@@25 $generated@@85)))) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@84 $generated@@85) $generated@@3)))) ($generated@@82 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@84 $generated@@85) ($generated@@71 $generated@@86)) $generated@@83 $generated@@84))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@84 $generated@@85) ($generated@@71 $generated@@86)) ($generated@@26 $generated@@83))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@38 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@38 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@29 $generated@@33 $generated@@91 ($generated@@34 $generated@@90))  (and ($generated@@29 $generated@@33 $generated@@91 ($generated@@26 $generated@@90)) (or (not (= $generated@@91 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@33 $generated@@91 ($generated@@34 $generated@@90)))
 :pattern ( ($generated@@29 $generated@@33 $generated@@91 ($generated@@26 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@82 ($generated@@87 $generated@@95 $generated@@92) $generated@@93 $generated@@94) ($generated@@32 $generated@@95 $generated@@92 $generated@@93 $generated@@94))
 :pattern ( ($generated@@82 ($generated@@87 $generated@@95 $generated@@92) $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ) (!  (and (= ($generated@@24 ($generated@@26 $generated@@97)) $generated@@4) (= ($generated@@96 ($generated@@26 $generated@@97)) $generated@@6))
 :pattern ( ($generated@@26 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ) (!  (and (= ($generated@@24 ($generated@@34 $generated@@98)) $generated@@5) (= ($generated@@96 ($generated@@34 $generated@@98)) $generated@@6))
 :pattern ( ($generated@@34 $generated@@98))
)))
(assert  (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@99 $generated@@102 $generated@@103 $generated@@104 ($generated@@101 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@107 $generated@@108) $generated@@105)
 :weight 0
)) (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@99 $generated@@109 $generated@@110 $generated@@111 ($generated@@101 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@99 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@99 $generated@@118 $generated@@119 $generated@@120 ($generated@@101 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@99 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@12 ($generated@@99 $generated@@33 $generated@@40 $generated@@8 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@127)) (not true)) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@128 $generated@@131) $generated@@129)))) (= $generated@@131 $generated@@130)))
 :pattern ( ($generated@@99 $generated@@33 $generated@@40 $generated@@8 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@29 $generated@@33 $generated@@134 ($generated@@26 $generated@@133))  (or (= $generated@@134 $generated@@27) (= ($generated@@28 $generated@@134) ($generated@@26 $generated@@133))))
 :pattern ( ($generated@@29 $generated@@33 $generated@@134 ($generated@@26 $generated@@133)))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@135 $generated@@136 $generated@@0) (and (= ($generated@@87 $generated@@9 ($generated@@38 $generated@@9 $generated@@136)) $generated@@136) ($generated@@29 $generated@@9 ($generated@@38 $generated@@9 $generated@@136) $generated@@0)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@0))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@135 $generated@@137 $generated) (and (= ($generated@@87 $generated@@8 ($generated@@38 $generated@@8 $generated@@137)) $generated@@137) ($generated@@29 $generated@@8 ($generated@@38 $generated@@8 $generated@@137) $generated)))
 :pattern ( ($generated@@135 $generated@@137 $generated))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@135 ($generated@@87 $generated@@140 $generated@@138) $generated@@139) ($generated@@29 $generated@@140 $generated@@138 $generated@@139))
 :pattern ( ($generated@@135 ($generated@@87 $generated@@140 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! (<= 0 ($generated@@25 $generated@@141))
 :pattern ( ($generated@@25 $generated@@141))
)))
(assert  (=> (<= 1 $generated@@66) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Int) ) (!  (=> (or ($generated@@143 $generated@@144 $generated@@145 $generated@@146) (and (< 1 $generated@@66) (and ($generated@@68 $generated@@144) ($generated@@29 $generated@@33 $generated@@145 ($generated@@34 $generated@@0))))) (and ($generated@@69 $generated@@144 $generated@@145 ($generated@@25 $generated@@145) $generated@@146) (= ($generated@@142 $generated@@144 $generated@@145 $generated@@146) ($generated@@67 $generated@@144 $generated@@145 ($generated@@25 $generated@@145) $generated@@146))))
 :pattern ( ($generated@@142 $generated@@144 $generated@@145 $generated@@146) ($generated@@68 $generated@@144))
))))
(assert (forall (($generated@@147 Int) ) (! (= ($generated@@23 ($generated@@71 $generated@@147)) 1)
 :pattern ( ($generated@@71 $generated@@147))
)))
(assert (forall (($generated@@149 Int) ) (! (= ($generated@@148 ($generated@@71 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@71 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@150 ($generated@@26 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@26 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@34 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@34 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@38 $generated@@155 ($generated@@87 $generated@@155 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@87 $generated@@155 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and ($generated@@68 $generated@@157) (and (or (not (= $generated@@158 $generated@@27)) (not true)) (= ($generated@@28 $generated@@158) ($generated@@26 $generated@@156)))) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@158) $generated@@3)))) ($generated@@32 $generated@@9 ($generated@@13 ($generated@@25 $generated@@158)) $generated@@0 $generated@@157))
 :pattern ( ($generated@@25 $generated@@158) ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@157 $generated@@158) $generated@@3)) ($generated@@26 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Int) ) (!  (=> (and (and ($generated@@68 $generated@@160) (and (or (not (= $generated@@161 $generated@@27)) (not true)) (= ($generated@@28 $generated@@161) ($generated@@26 $generated@@159)))) (and (<= 0 $generated@@162) (< $generated@@162 ($generated@@25 $generated@@161)))) ($generated@@135 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@160 $generated@@161) ($generated@@71 $generated@@162)) $generated@@159))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@160 $generated@@161) ($generated@@71 $generated@@162)) ($generated@@26 $generated@@159))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@135 $generated@@164 ($generated@@26 $generated@@163)) (and (= ($generated@@87 $generated@@33 ($generated@@38 $generated@@33 $generated@@164)) $generated@@164) ($generated@@29 $generated@@33 ($generated@@38 $generated@@33 $generated@@164) ($generated@@26 $generated@@163))))
 :pattern ( ($generated@@135 $generated@@164 ($generated@@26 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@135 $generated@@166 ($generated@@34 $generated@@165)) (and (= ($generated@@87 $generated@@33 ($generated@@38 $generated@@33 $generated@@166)) $generated@@166) ($generated@@29 $generated@@33 ($generated@@38 $generated@@33 $generated@@166) ($generated@@34 $generated@@165))))
 :pattern ( ($generated@@135 $generated@@166 ($generated@@34 $generated@@165)))
)))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@87 $generated@@9 ($generated@@13 ($generated@@70 $generated@@167))) ($generated@@79 $generated@@41 ($generated@@87 $generated@@9 ($generated@@13 $generated@@167))))
 :pattern ( ($generated@@87 $generated@@9 ($generated@@13 ($generated@@70 $generated@@167))))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@87 $generated@@169 ($generated@@79 $generated@@169 $generated@@168)) ($generated@@79 $generated@@41 ($generated@@87 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@87 $generated@@169 ($generated@@79 $generated@@169 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! ($generated@@32 $generated@@9 $generated@@171 $generated@@0 $generated@@170)
 :pattern ( ($generated@@32 $generated@@9 $generated@@171 $generated@@0 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! ($generated@@32 $generated@@8 $generated@@173 $generated $generated@@172)
 :pattern ( ($generated@@32 $generated@@8 $generated@@173 $generated $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! ($generated@@29 $generated@@9 $generated@@174 $generated@@0)
 :pattern ( ($generated@@29 $generated@@9 $generated@@174 $generated@@0))
)))
(assert (forall (($generated@@175 T@U) ) (! ($generated@@29 $generated@@8 $generated@@175 $generated)
 :pattern ( ($generated@@29 $generated@@8 $generated@@175 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@183  (=> ($generated@@32 $generated@@33 $generated@@176 ($generated@@34 $generated@@0) $generated@@177) (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (not (= $generated@@176 $generated@@27)) (not true))) (=> (or (not (= $generated@@176 $generated@@27)) (not true)) (=> (= $generated@@178 ($generated@@25 $generated@@176)) (=> (and ($generated@@32 $generated@@9 ($generated@@13 $generated@@178) $generated@@0 $generated@@177) ($generated@@32 $generated@@9 ($generated@@13 $generated@@179) $generated@@0 $generated@@177)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@70 0) $generated@@178)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= $generated@@178 ($generated@@25 $generated@@176))) (=> (and (and (and (<= ($generated@@70 0) $generated@@178) (<= $generated@@178 ($generated@@25 $generated@@176))) (and (= $generated@@180 (forall (($generated@@184 T@U) ($generated@@185 T@U) )  (=> (and (and (or (not (= $generated@@184 $generated@@27)) (not true)) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@177 $generated@@184) $generated@@3)))) (= $generated@@184 $generated@@176)) ($generated@@12 ($generated@@99 $generated@@33 $generated@@40 $generated@@8 $generated@@181 $generated@@184 $generated@@185))))) ($generated@@69 $generated@@177 $generated@@176 ($generated@@25 $generated@@176) $generated@@179))) (and (and (= ($generated@@142 $generated@@177 $generated@@176 $generated@@179) ($generated@@67 $generated@@177 $generated@@176 ($generated@@25 $generated@@176) $generated@@179)) ($generated@@69 $generated@@177 $generated@@176 ($generated@@25 $generated@@176) $generated@@179)) (and ($generated@@29 $generated@@8 ($generated@@11 ($generated@@142 $generated@@177 $generated@@176 $generated@@179)) $generated) (= (ControlFlow 0 3) (- 0 2))))) $generated@@180))))))))))
(let (($generated@@186 true))
(let (($generated@@187  (=> (= $generated@@181 ($generated@@100 $generated@@27 $generated@@177 $generated@@3 $generated@@176)) (and (=> (= (ControlFlow 0 7) 1) $generated@@186) (=> (= (ControlFlow 0 7) 3) $generated@@183)))))
(let (($generated@@188  (=> (and (and (and ($generated@@68 $generated@@177) ($generated@@182 $generated@@177)) ($generated@@29 $generated@@33 $generated@@176 ($generated@@34 $generated@@0))) (and (= 1 $generated@@66) (= (ControlFlow 0 8) 7))) $generated@@187)))
$generated@@188)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
