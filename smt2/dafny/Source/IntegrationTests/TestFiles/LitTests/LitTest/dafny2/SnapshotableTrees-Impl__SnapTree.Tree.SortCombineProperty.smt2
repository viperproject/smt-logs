(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (Bool T@U) Bool)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 (T@U Int) T@U)
(declare-fun $generated@@28 (Int) Int)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (Int T@U) Bool)
(declare-fun $generated@@35 (Int T@U) Bool)
(declare-fun $generated@@39 (T@U Int T@U) Bool)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@U Int T@U) Bool)
(declare-fun $generated@@42 () Bool)
(declare-fun $generated@@43 (T@U Int) Bool)
(declare-fun $generated@@44 (T@U Int) Bool)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@3 $generated@@24) 3))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@30 T@U) ) (!  (=> (or ($generated@@22 $generated@@30) (and (< 0 $generated@@20) ($generated@@23 $generated@@24 $generated@@30 ($generated@@25 $generated)))) (= ($generated@@21 true $generated@@30) (forall (($generated@@31 Int) ($generated@@32 Int) ) (!  (=> (and (and (<= ($generated@@28 0) $generated@@31) (< $generated@@31 $generated@@32)) (< $generated@@32 ($generated@@29 $generated@@30))) (< ($generated@@10 ($generated@@26 $generated@@5 ($generated@@27 $generated@@30 $generated@@31))) ($generated@@10 ($generated@@26 $generated@@5 ($generated@@27 $generated@@30 $generated@@32)))))
 :pattern ( ($generated@@26 $generated@@5 ($generated@@27 $generated@@30 $generated@@32)) ($generated@@26 $generated@@5 ($generated@@27 $generated@@30 $generated@@31)))
))))
 :pattern ( ($generated@@21 true $generated@@30))
))))
(assert (= ($generated@@29 $generated@@33) 0))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@36 Int) ($generated@@37 T@U) ) (!  (=> (or ($generated@@35 $generated@@36 $generated@@37) (and (< 0 $generated@@20) ($generated@@23 $generated@@24 $generated@@37 ($generated@@25 $generated)))) (= ($generated@@34 $generated@@36 $generated@@37) (forall (($generated@@38 Int) ) (!  (=> (and (<= ($generated@@28 0) $generated@@38) (< $generated@@38 ($generated@@29 $generated@@37))) (< $generated@@36 ($generated@@10 ($generated@@26 $generated@@5 ($generated@@27 $generated@@37 $generated@@38)))))
 :pattern ( ($generated@@26 $generated@@5 ($generated@@27 $generated@@37 $generated@@38)))
))))
 :pattern ( ($generated@@34 $generated@@36 $generated@@37))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@45 T@U) ($generated@@46 Int) ($generated@@47 T@U) ) (!  (=> (or ($generated@@41 ($generated@@40 $generated@@24 $generated@@45) ($generated@@28 $generated@@46) ($generated@@40 $generated@@24 $generated@@47)) (and (< 1 $generated@@20) (and ($generated@@23 $generated@@24 $generated@@45 ($generated@@25 $generated)) ($generated@@23 $generated@@24 $generated@@47 ($generated@@25 $generated))))) (and (and ($generated@@22 ($generated@@40 $generated@@24 $generated@@45)) (=> ($generated@@21 $generated@@42 ($generated@@40 $generated@@24 $generated@@45)) (and ($generated@@22 ($generated@@40 $generated@@24 $generated@@47)) (=> ($generated@@21 $generated@@42 ($generated@@40 $generated@@24 $generated@@47)) (and ($generated@@43 ($generated@@40 $generated@@24 $generated@@45) ($generated@@28 $generated@@46)) (=> ($generated@@8 ($generated@@40 $generated@@4 ($generated@@7 ($generated@@44 ($generated@@40 $generated@@24 $generated@@45) ($generated@@28 $generated@@46))))) ($generated@@35 ($generated@@28 $generated@@46) ($generated@@40 $generated@@24 $generated@@47)))))))) (= ($generated@@39 ($generated@@40 $generated@@24 $generated@@45) ($generated@@28 $generated@@46) ($generated@@40 $generated@@24 $generated@@47))  (and (and (and ($generated@@21 $generated@@42 ($generated@@40 $generated@@24 $generated@@45)) ($generated@@21 $generated@@42 ($generated@@40 $generated@@24 $generated@@47))) ($generated@@44 ($generated@@40 $generated@@24 $generated@@45) ($generated@@28 $generated@@46))) ($generated@@34 ($generated@@28 $generated@@46) ($generated@@40 $generated@@24 $generated@@47))))))
 :weight 3
 :pattern ( ($generated@@39 ($generated@@40 $generated@@24 $generated@@45) ($generated@@28 $generated@@46) ($generated@@40 $generated@@24 $generated@@47)))
))))
(assert (forall (($generated@@48 Int) ) (! (= ($generated@@28 $generated@@48) $generated@@48)
 :pattern ( ($generated@@28 $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@40 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@40 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@53 ($generated@@25 $generated@@55)) ($generated@@52 $generated@@54 $generated@@55)) ($generated@@23 $generated@@24 ($generated@@51 $generated@@53 $generated@@54) ($generated@@25 $generated@@55)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@51 $generated@@53 $generated@@54) ($generated@@25 $generated@@55)))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 ($generated@@26 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@26 $generated@@58 $generated@@57))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@59 T@U) ) (!  (=> (or ($generated@@22 ($generated@@40 $generated@@24 $generated@@59)) (and (< 0 $generated@@20) ($generated@@23 $generated@@24 $generated@@59 ($generated@@25 $generated)))) (= ($generated@@21 true ($generated@@40 $generated@@24 $generated@@59)) (forall (($generated@@60 Int) ($generated@@61 Int) ) (!  (=> (and (and (<= ($generated@@28 0) $generated@@60) (< $generated@@60 $generated@@61)) (< $generated@@61 ($generated@@29 ($generated@@40 $generated@@24 $generated@@59)))) (< ($generated@@10 ($generated@@26 $generated@@5 ($generated@@27 ($generated@@40 $generated@@24 $generated@@59) $generated@@60))) ($generated@@10 ($generated@@26 $generated@@5 ($generated@@27 ($generated@@40 $generated@@24 $generated@@59) $generated@@61)))))
 :pattern ( ($generated@@26 $generated@@5 ($generated@@27 $generated@@59 $generated@@61)) ($generated@@26 $generated@@5 ($generated@@27 $generated@@59 $generated@@60)))
))))
 :weight 3
 :pattern ( ($generated@@21 true ($generated@@40 $generated@@24 $generated@@59)))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@29 ($generated@@51 $generated@@62 $generated@@63)) (+ 1 ($generated@@29 $generated@@62)))
 :pattern ( ($generated@@51 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@64 ($generated@@56 $generated@@69 $generated@@66) $generated@@67 $generated@@68) ($generated@@65 $generated@@69 $generated@@66 $generated@@67 $generated@@68))
 :pattern ( ($generated@@64 ($generated@@56 $generated@@69 $generated@@66) $generated@@67 $generated@@68))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@70 T@U) ($generated@@71 Int) ) (!  (=> (or ($generated@@43 ($generated@@40 $generated@@24 $generated@@70) ($generated@@28 $generated@@71)) (and (< 0 $generated@@20) ($generated@@23 $generated@@24 $generated@@70 ($generated@@25 $generated)))) (= ($generated@@44 ($generated@@40 $generated@@24 $generated@@70) ($generated@@28 $generated@@71)) (forall (($generated@@72 Int) ) (!  (=> (and (<= ($generated@@28 0) $generated@@72) (< $generated@@72 ($generated@@29 ($generated@@40 $generated@@24 $generated@@70)))) (< ($generated@@10 ($generated@@26 $generated@@5 ($generated@@27 ($generated@@40 $generated@@24 $generated@@70) $generated@@72))) $generated@@71))
 :pattern ( ($generated@@26 $generated@@5 ($generated@@27 $generated@@70 $generated@@72)))
))))
 :weight 3
 :pattern ( ($generated@@44 ($generated@@40 $generated@@24 $generated@@70) ($generated@@28 $generated@@71)))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@29 ($generated@@73 $generated@@74 $generated@@75)) (+ ($generated@@29 $generated@@74) ($generated@@29 $generated@@75)))
 :pattern ( ($generated@@29 ($generated@@73 $generated@@74 $generated@@75)))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 Int) ($generated@@78 T@U) ) (!  (and (=> (= $generated@@77 ($generated@@29 $generated@@76)) (= ($generated@@27 ($generated@@51 $generated@@76 $generated@@78) $generated@@77) $generated@@78)) (=> (or (not (= $generated@@77 ($generated@@29 $generated@@76))) (not true)) (= ($generated@@27 ($generated@@51 $generated@@76 $generated@@78) $generated@@77) ($generated@@27 $generated@@76 $generated@@77))))
 :pattern ( ($generated@@27 ($generated@@51 $generated@@76 $generated@@78) $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@52 $generated@@79 $generated) (and (= ($generated@@56 $generated@@5 ($generated@@26 $generated@@5 $generated@@79)) $generated@@79) ($generated@@23 $generated@@5 ($generated@@26 $generated@@5 $generated@@79) $generated)))
 :pattern ( ($generated@@52 $generated@@79 $generated))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@52 ($generated@@56 $generated@@82 $generated@@80) $generated@@81) ($generated@@23 $generated@@82 $generated@@80 $generated@@81))
 :pattern ( ($generated@@52 ($generated@@56 $generated@@82 $generated@@80) $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (<= 0 ($generated@@29 $generated@@83))
 :pattern ( ($generated@@29 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@65 $generated@@24 $generated@@84 ($generated@@25 $generated@@85) $generated@@86) (forall (($generated@@87 Int) ) (!  (=> (and (<= 0 $generated@@87) (< $generated@@87 ($generated@@29 $generated@@84))) ($generated@@64 ($generated@@27 $generated@@84 $generated@@87) $generated@@85 $generated@@86))
 :pattern ( ($generated@@27 $generated@@84 $generated@@87))
)))
 :pattern ( ($generated@@65 $generated@@24 $generated@@84 ($generated@@25 $generated@@85) $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 ($generated@@25 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@25 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@19 ($generated@@25 $generated@@90)) $generated@@1)
 :pattern ( ($generated@@25 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@26 $generated@@92 ($generated@@56 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@56 $generated@@92 $generated@@91))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@93 T@U) ($generated@@94 Int) ) (!  (=> (or ($generated@@43 $generated@@93 $generated@@94) (and (< 0 $generated@@20) ($generated@@23 $generated@@24 $generated@@93 ($generated@@25 $generated)))) (= ($generated@@44 $generated@@93 $generated@@94) (forall (($generated@@95 Int) ) (!  (=> (and (<= ($generated@@28 0) $generated@@95) (< $generated@@95 ($generated@@29 $generated@@93))) (< ($generated@@10 ($generated@@26 $generated@@5 ($generated@@27 $generated@@93 $generated@@95))) $generated@@94))
 :pattern ( ($generated@@26 $generated@@5 ($generated@@27 $generated@@93 $generated@@95)))
))))
 :pattern ( ($generated@@44 $generated@@93 $generated@@94))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@96 $generated@@107 $generated@@108 $generated@@109 ($generated@@103 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@112 $generated@@113) $generated@@110)
 :weight 0
)) (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@96 $generated@@114 $generated@@115 $generated@@116 ($generated@@103 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@96 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@96 $generated@@123 $generated@@124 $generated@@125 ($generated@@103 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)))) (= ($generated@@3 $generated@@97) 4)) (= ($generated@@3 $generated@@98) 5)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@100 $generated@@132 $generated@@133 ($generated@@104 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@134) $generated@@136) $generated@@134)
 :weight 0
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@100 $generated@@137 $generated@@138 ($generated@@104 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@100 $generated@@137 $generated@@138 $generated@@140 $generated@@142)))
 :weight 0
))) (= ($generated@@3 $generated@@101) 6)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (= ($generated@@3 ($generated@@102 $generated@@143 $generated@@144)) 7))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@102 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@102 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Bool) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@8 ($generated@@96 $generated@@97 $generated@@98 $generated@@4 ($generated@@99 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))  (=> (and (or (not (= $generated@@153 $generated@@149)) (not true)) ($generated@@8 ($generated@@26 $generated@@4 ($generated@@100 $generated@@98 $generated@@101 ($generated@@100 $generated@@97 ($generated@@102 $generated@@98 $generated@@101) $generated@@150 $generated@@153) $generated@@151)))) $generated@@152))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98 $generated@@4 ($generated@@99 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@155 T@U) ($generated@@156 Int) ($generated@@157 T@U) ) (!  (=> (or ($generated@@41 $generated@@155 $generated@@156 $generated@@157) (and (< 1 $generated@@20) (and ($generated@@23 $generated@@24 $generated@@155 ($generated@@25 $generated)) ($generated@@23 $generated@@24 $generated@@157 ($generated@@25 $generated))))) (and (and ($generated@@22 $generated@@155) (=> ($generated@@21 $generated@@42 $generated@@155) (and ($generated@@22 $generated@@157) (=> ($generated@@21 $generated@@42 $generated@@157) (and ($generated@@43 $generated@@155 $generated@@156) (=> ($generated@@44 $generated@@155 $generated@@156) ($generated@@35 $generated@@156 $generated@@157))))))) (= ($generated@@39 $generated@@155 $generated@@156 $generated@@157)  (and (and (and ($generated@@21 $generated@@42 $generated@@155) ($generated@@21 $generated@@42 $generated@@157)) ($generated@@44 $generated@@155 $generated@@156)) ($generated@@34 $generated@@156 $generated@@157)))))
 :pattern ( ($generated@@39 $generated@@155 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (and (= ($generated@@158 ($generated@@51 $generated@@160 $generated@@161)) $generated@@160) (= ($generated@@159 ($generated@@51 $generated@@160 $generated@@161)) $generated@@161))
 :pattern ( ($generated@@51 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@52 $generated@@162 ($generated@@25 $generated@@163)) (and (= ($generated@@56 $generated@@24 ($generated@@26 $generated@@24 $generated@@162)) $generated@@162) ($generated@@23 $generated@@24 ($generated@@26 $generated@@24 $generated@@162) ($generated@@25 $generated@@163))))
 :pattern ( ($generated@@52 $generated@@162 ($generated@@25 $generated@@163)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 Int) ) (!  (and (=> (< $generated@@166 ($generated@@29 $generated@@164)) (= ($generated@@27 ($generated@@73 $generated@@164 $generated@@165) $generated@@166) ($generated@@27 $generated@@164 $generated@@166))) (=> (<= ($generated@@29 $generated@@164) $generated@@166) (= ($generated@@27 ($generated@@73 $generated@@164 $generated@@165) $generated@@166) ($generated@@27 $generated@@165 (- $generated@@166 ($generated@@29 $generated@@164))))))
 :pattern ( ($generated@@27 ($generated@@73 $generated@@164 $generated@@165) $generated@@166))
)))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@56 $generated@@5 ($generated@@9 ($generated@@28 $generated@@167))) ($generated@@40 $generated@@101 ($generated@@56 $generated@@5 ($generated@@9 $generated@@167))))
 :pattern ( ($generated@@56 $generated@@5 ($generated@@9 ($generated@@28 $generated@@167))))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@56 $generated@@169 ($generated@@40 $generated@@169 $generated@@168)) ($generated@@40 $generated@@101 ($generated@@56 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@56 $generated@@169 ($generated@@40 $generated@@169 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= ($generated@@29 $generated@@170) 0) (= $generated@@170 $generated@@33))
 :pattern ( ($generated@@29 $generated@@170))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@171 Int) ($generated@@172 T@U) ) (!  (=> (or ($generated@@35 ($generated@@28 $generated@@171) ($generated@@40 $generated@@24 $generated@@172)) (and (< 0 $generated@@20) ($generated@@23 $generated@@24 $generated@@172 ($generated@@25 $generated)))) (= ($generated@@34 ($generated@@28 $generated@@171) ($generated@@40 $generated@@24 $generated@@172)) (forall (($generated@@173 Int) ) (!  (=> (and (<= ($generated@@28 0) $generated@@173) (< $generated@@173 ($generated@@29 ($generated@@40 $generated@@24 $generated@@172)))) (< $generated@@171 ($generated@@10 ($generated@@26 $generated@@5 ($generated@@27 ($generated@@40 $generated@@24 $generated@@172) $generated@@173)))))
 :pattern ( ($generated@@26 $generated@@5 ($generated@@27 $generated@@172 $generated@@173)))
))))
 :weight 3
 :pattern ( ($generated@@34 ($generated@@28 $generated@@171) ($generated@@40 $generated@@24 $generated@@172)))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! ($generated@@65 $generated@@5 $generated@@175 $generated $generated@@174)
 :pattern ( ($generated@@65 $generated@@5 $generated@@175 $generated $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@176 ($generated@@25 $generated@@177)) (forall (($generated@@178 Int) ) (!  (=> (and (<= 0 $generated@@178) (< $generated@@178 ($generated@@29 $generated@@176))) ($generated@@52 ($generated@@27 $generated@@176 $generated@@178) $generated@@177))
 :pattern ( ($generated@@27 $generated@@176 $generated@@178))
)))
 :pattern ( ($generated@@23 $generated@@24 $generated@@176 ($generated@@25 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! ($generated@@23 $generated@@5 $generated@@179 $generated)
 :pattern ( ($generated@@23 $generated@@5 $generated@@179 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@189  (=> (= $generated@@180 ($generated@@99 $generated@@181 $generated@@182 $generated@@2 false)) (=> (and (and (and ($generated@@183 $generated@@184) ($generated@@185 $generated@@184)) (= $generated@@182 $generated@@184)) (and $generated@@42 (= (ControlFlow 0 2) (- 0 1)))) ($generated@@21 $generated@@42 ($generated@@73 ($generated@@73 $generated@@186 ($generated@@51 $generated@@33 ($generated@@56 $generated@@5 ($generated@@9 $generated@@187)))) $generated@@188))))))
(let (($generated@@190  (=> (and (and ($generated@@183 $generated@@182) ($generated@@185 $generated@@182)) (and ($generated@@23 $generated@@24 $generated@@186 ($generated@@25 $generated)) ($generated@@65 $generated@@24 $generated@@186 ($generated@@25 $generated) $generated@@182))) (=> (and (and (and ($generated@@23 $generated@@24 $generated@@188 ($generated@@25 $generated)) ($generated@@65 $generated@@24 $generated@@188 ($generated@@25 $generated) $generated@@182)) (= 2 $generated@@20)) (and (and ($generated@@41 $generated@@186 $generated@@187 $generated@@188) (and ($generated@@39 $generated@@186 $generated@@187 $generated@@188) (and (and (and ($generated@@21 $generated@@42 $generated@@186) ($generated@@21 $generated@@42 $generated@@188)) ($generated@@44 $generated@@186 $generated@@187)) ($generated@@34 $generated@@187 $generated@@188)))) (= (ControlFlow 0 3) 2))) $generated@@189))))
$generated@@190)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
