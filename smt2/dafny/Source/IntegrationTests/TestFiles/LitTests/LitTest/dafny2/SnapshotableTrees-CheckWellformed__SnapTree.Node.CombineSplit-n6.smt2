(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@96 (T@U Int) T@U)
(declare-fun $generated@@100 () Int)
(declare-fun $generated@@101 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@102 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@2) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@2) $generated@@3))
(assert (= ($generated@@28 $generated@@29) 0))
(assert (= ($generated@@9 $generated@@31) 3))
(assert (forall (($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@35 $generated@@32)  (or (= $generated@@35 $generated@@33) (= ($generated@@34 $generated@@35) $generated@@32)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@35 $generated@@32))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@36 $generated@@31 $generated@@38 $generated@@37 $generated@@39) ($generated@@36 $generated@@31 $generated@@38 $generated@@32 $generated@@39))
 :pattern ( ($generated@@36 $generated@@31 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@36 $generated@@31 $generated@@38 $generated@@32 $generated@@39))
)))
(assert (= ($generated@@25 $generated@@40) 0))
(assert (= ($generated@@41 $generated@@6 $generated@@8) $generated@@40))
(assert ($generated@@42 $generated@@40))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@9 $generated@@45) 4)) (= ($generated@@9 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@9 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@36 $generated@@31 $generated@@68 $generated@@32 $generated@@69)  (or (= $generated@@68 $generated@@33) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@68) $generated@@2)))))
 :pattern ( ($generated@@36 $generated@@31 $generated@@68 $generated@@32 $generated@@69))
)))
(assert (= ($generated@@9 $generated@@70) 7))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (and ($generated@@30 $generated@@70 $generated@@74 ($generated@@72 $generated@@76)) ($generated@@73 $generated@@75 $generated@@76)) ($generated@@30 $generated@@70 ($generated@@71 $generated@@74 $generated@@75) ($generated@@72 $generated@@76)))
 :pattern ( ($generated@@30 $generated@@70 ($generated@@71 $generated@@74 $generated@@75) ($generated@@72 $generated@@76)))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@43 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@43 $generated@@79 $generated@@78))
)))
(assert ($generated@@42 $generated@@2))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@28 ($generated@@71 $generated@@80 $generated@@81)) (+ 1 ($generated@@28 $generated@@80)))
 :pattern ( ($generated@@71 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@82 ($generated@@77 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@36 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@82 ($generated@@77 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@28 ($generated@@87 $generated@@88 $generated@@89)) (+ ($generated@@28 $generated@@88) ($generated@@28 $generated@@89)))
 :pattern ( ($generated@@28 ($generated@@87 $generated@@88 $generated@@89)))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and (and ($generated@@90 $generated@@91) (and (or (not (= $generated@@92 $generated@@33)) (not true)) (= ($generated@@34 $generated@@92) $generated@@32))) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@91 $generated@@92) $generated@@2)))) ($generated@@36 $generated@@70 ($generated@@43 $generated@@70 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@91 $generated@@92) $generated@@40)) ($generated@@72 $generated) $generated@@91))
 :pattern ( ($generated@@43 $generated@@70 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@91 $generated@@92) $generated@@40)))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@73 $generated@@93 $generated@@37) (and (= ($generated@@77 $generated@@31 ($generated@@43 $generated@@31 $generated@@93)) $generated@@93) ($generated@@30 $generated@@31 ($generated@@43 $generated@@31 $generated@@93) $generated@@37)))
 :pattern ( ($generated@@73 $generated@@93 $generated@@37))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@73 $generated@@94 $generated@@32) (and (= ($generated@@77 $generated@@31 ($generated@@43 $generated@@31 $generated@@94)) $generated@@94) ($generated@@30 $generated@@31 ($generated@@43 $generated@@31 $generated@@94) $generated@@32)))
 :pattern ( ($generated@@73 $generated@@94 $generated@@32))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@95 $generated@@37)  (and ($generated@@30 $generated@@31 $generated@@95 $generated@@32) (or (not (= $generated@@95 $generated@@33)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@95 $generated@@37))
 :pattern ( ($generated@@30 $generated@@31 $generated@@95 $generated@@32))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (and (=> (= $generated@@98 ($generated@@28 $generated@@97)) (= ($generated@@96 ($generated@@71 $generated@@97 $generated@@99) $generated@@98) $generated@@99)) (=> (or (not (= $generated@@98 ($generated@@28 $generated@@97))) (not true)) (= ($generated@@96 ($generated@@71 $generated@@97 $generated@@99) $generated@@98) ($generated@@96 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@96 ($generated@@71 $generated@@97 $generated@@99) $generated@@98))
)))
(assert  (=> (<= 0 $generated@@100) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 Int) ($generated@@106 T@U) ) (!  (=> (or ($generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@106) (and (< 0 $generated@@100) (and (and ($generated@@90 $generated@@103) ($generated@@30 $generated@@31 $generated@@104 $generated@@32)) ($generated@@30 $generated@@31 $generated@@106 $generated@@32)))) (= ($generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@106) (ite  (and (= $generated@@104 $generated@@33) (= $generated@@106 $generated@@33)) ($generated@@71 $generated@@29 ($generated@@77 $generated@@11 ($generated@@15 $generated@@105))) (ite  (and (or (not (= $generated@@104 $generated@@33)) (not true)) (= $generated@@106 $generated@@33)) ($generated@@87 ($generated@@43 $generated@@70 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@103 $generated@@104) $generated@@40)) ($generated@@71 $generated@@29 ($generated@@77 $generated@@11 ($generated@@15 $generated@@105)))) (ite  (and (= $generated@@104 $generated@@33) (or (not (= $generated@@106 $generated@@33)) (not true))) ($generated@@87 ($generated@@71 $generated@@29 ($generated@@77 $generated@@11 ($generated@@15 $generated@@105))) ($generated@@43 $generated@@70 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@103 $generated@@106) $generated@@40))) ($generated@@87 ($generated@@87 ($generated@@43 $generated@@70 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@103 $generated@@104) $generated@@40)) ($generated@@71 $generated@@29 ($generated@@77 $generated@@11 ($generated@@15 $generated@@105)))) ($generated@@43 $generated@@70 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@103 $generated@@106) $generated@@40))))))))
 :pattern ( ($generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@106) ($generated@@90 $generated@@103))
))))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (and (= ($generated@@107 ($generated@@41 $generated@@108 $generated@@109)) $generated@@108) (= ($generated@@27 ($generated@@41 $generated@@108 $generated@@109)) $generated@@109))
 :pattern ( ($generated@@41 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@73 $generated@@110 $generated) (and (= ($generated@@77 $generated@@11 ($generated@@43 $generated@@11 $generated@@110)) $generated@@110) ($generated@@30 $generated@@11 ($generated@@43 $generated@@11 $generated@@110) $generated)))
 :pattern ( ($generated@@73 $generated@@110 $generated))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@73 ($generated@@77 $generated@@113 $generated@@111) $generated@@112) ($generated@@30 $generated@@113 $generated@@111 $generated@@112))
 :pattern ( ($generated@@73 ($generated@@77 $generated@@113 $generated@@111) $generated@@112))
)))
(assert  (=> (<= 0 $generated@@100) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 Int) ($generated@@117 T@U) ) (!  (=> (or ($generated@@102 $generated@@114 $generated@@115 $generated@@116 $generated@@117) (and (< 0 $generated@@100) (and (and ($generated@@90 $generated@@114) (and ($generated@@30 $generated@@31 $generated@@115 $generated@@32) ($generated@@36 $generated@@31 $generated@@115 $generated@@32 $generated@@114))) (and ($generated@@30 $generated@@31 $generated@@117 $generated@@32) ($generated@@36 $generated@@31 $generated@@117 $generated@@32 $generated@@114))))) ($generated@@30 $generated@@70 ($generated@@101 $generated@@114 $generated@@115 $generated@@116 $generated@@117) ($generated@@72 $generated)))
 :pattern ( ($generated@@101 $generated@@114 $generated@@115 $generated@@116 $generated@@117))
))))
(assert (forall (($generated@@118 T@U) ) (! (<= 0 ($generated@@28 $generated@@118))
 :pattern ( ($generated@@28 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@36 $generated@@70 $generated@@119 ($generated@@72 $generated@@120) $generated@@121) (forall (($generated@@122 Int) ) (!  (=> (and (<= 0 $generated@@122) (< $generated@@122 ($generated@@28 $generated@@119))) ($generated@@82 ($generated@@96 $generated@@119 $generated@@122) $generated@@120 $generated@@121))
 :pattern ( ($generated@@96 $generated@@119 $generated@@122))
)))
 :pattern ( ($generated@@36 $generated@@70 $generated@@119 ($generated@@72 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@72 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@72 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@26 ($generated@@72 $generated@@125)) $generated@@1)
 :pattern ( ($generated@@72 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@43 $generated@@127 ($generated@@77 $generated@@127 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@77 $generated@@127 $generated@@126))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (and (= ($generated@@128 ($generated@@71 $generated@@130 $generated@@131)) $generated@@130) (= ($generated@@129 ($generated@@71 $generated@@130 $generated@@131)) $generated@@131))
 :pattern ( ($generated@@71 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@73 $generated@@132 ($generated@@72 $generated@@133)) (and (= ($generated@@77 $generated@@70 ($generated@@43 $generated@@70 $generated@@132)) $generated@@132) ($generated@@30 $generated@@70 ($generated@@43 $generated@@70 $generated@@132) ($generated@@72 $generated@@133))))
 :pattern ( ($generated@@73 $generated@@132 ($generated@@72 $generated@@133)))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and ($generated@@90 $generated@@134) (and (or (not (= $generated@@135 $generated@@33)) (not true)) (= ($generated@@34 $generated@@135) $generated@@32))) ($generated@@30 $generated@@70 ($generated@@43 $generated@@70 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@134 $generated@@135) $generated@@40)) ($generated@@72 $generated)))
 :pattern ( ($generated@@43 $generated@@70 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@134 $generated@@135) $generated@@40)))
)))
(assert (= ($generated@@26 $generated@@37) $generated@@4))
(assert (= ($generated@@136 $generated@@37) $generated@@7))
(assert (= ($generated@@26 $generated@@32) $generated@@5))
(assert (= ($generated@@136 $generated@@32) $generated@@7))
(assert  (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@137 $generated@@140 $generated@@141 $generated@@142 ($generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@145 $generated@@146) $generated@@143)
 :weight 0
)) (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@137 $generated@@147 $generated@@148 $generated@@149 ($generated@@139 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@137 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@137 $generated@@156 $generated@@157 $generated@@158 ($generated@@139 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@137 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@14 ($generated@@137 $generated@@31 $generated@@45 $generated@@10 ($generated@@138 $generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))  (=> (and (or (not (= $generated@@170 $generated@@165)) (not true)) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@166 $generated@@170) $generated@@167)))) (or (= $generated@@170 $generated@@168) (= $generated@@170 $generated@@169))))
 :pattern ( ($generated@@137 $generated@@31 $generated@@45 $generated@@10 ($generated@@138 $generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Int) ) (!  (and (=> (< $generated@@174 ($generated@@28 $generated@@172)) (= ($generated@@96 ($generated@@87 $generated@@172 $generated@@173) $generated@@174) ($generated@@96 $generated@@172 $generated@@174))) (=> (<= ($generated@@28 $generated@@172) $generated@@174) (= ($generated@@96 ($generated@@87 $generated@@172 $generated@@173) $generated@@174) ($generated@@96 $generated@@173 (- $generated@@174 ($generated@@28 $generated@@172))))))
 :pattern ( ($generated@@96 ($generated@@87 $generated@@172 $generated@@173) $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= ($generated@@28 $generated@@175) 0) (= $generated@@175 $generated@@29))
 :pattern ( ($generated@@28 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! ($generated@@36 $generated@@11 $generated@@177 $generated $generated@@176)
 :pattern ( ($generated@@36 $generated@@11 $generated@@177 $generated $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@30 $generated@@70 $generated@@178 ($generated@@72 $generated@@179)) (forall (($generated@@180 Int) ) (!  (=> (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@28 $generated@@178))) ($generated@@73 ($generated@@96 $generated@@178 $generated@@180) $generated@@179))
 :pattern ( ($generated@@96 $generated@@178 $generated@@180))
)))
 :pattern ( ($generated@@30 $generated@@70 $generated@@178 ($generated@@72 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ) (! ($generated@@30 $generated@@11 $generated@@181 $generated)
 :pattern ( ($generated@@30 $generated@@11 $generated@@181 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@192  (=> (not (and (= $generated@@182 $generated@@33) (or (not (= $generated@@183 $generated@@33)) (not true)))) (and (=> (= (ControlFlow 0 11) (- 0 16)) (or (not (= $generated@@182 $generated@@33)) (not true))) (=> (or (not (= $generated@@182 $generated@@33)) (not true)) (=> (= $generated@@184 ($generated@@14 ($generated@@137 $generated@@31 $generated@@45 $generated@@10 $generated@@185 $generated@@182 $generated@@40))) (and (=> (= (ControlFlow 0 11) (- 0 15)) (or (not (= $generated@@183 $generated@@33)) (not true))) (=> (or (not (= $generated@@183 $generated@@33)) (not true)) (=> (= $generated@@186 ($generated@@14 ($generated@@137 $generated@@31 $generated@@45 $generated@@10 $generated@@185 $generated@@183 $generated@@40))) (=> (and (= ($generated@@101 $generated@@187 $generated@@182 $generated@@188 $generated@@183) ($generated@@87 ($generated@@87 ($generated@@43 $generated@@70 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@187 $generated@@182) $generated@@40)) ($generated@@71 $generated@@29 ($generated@@77 $generated@@11 ($generated@@15 $generated@@188)))) ($generated@@43 $generated@@70 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@187 $generated@@183) $generated@@40)))) ($generated@@30 $generated@@70 ($generated@@101 $generated@@187 $generated@@182 $generated@@188 $generated@@183) ($generated@@72 $generated))) (and (=> (= (ControlFlow 0 11) (- 0 14)) true) (and (=> (= (ControlFlow 0 11) (- 0 13)) true) (and (=> (= (ControlFlow 0 11) (- 0 12)) $generated@@184) (=> $generated@@184 (=> (= (ControlFlow 0 11) (- 0 10)) $generated@@186)))))))))))))))
(let (($generated@@193  (=> (and (= $generated@@182 $generated@@33) (or (not (= $generated@@183 $generated@@33)) (not true))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (not (= $generated@@183 $generated@@33)) (not true))) (=> (or (not (= $generated@@183 $generated@@33)) (not true)) (=> (= $generated@@189 ($generated@@14 ($generated@@137 $generated@@31 $generated@@45 $generated@@10 $generated@@185 $generated@@183 $generated@@40))) (=> (and (= ($generated@@101 $generated@@187 $generated@@182 $generated@@188 $generated@@183) ($generated@@87 ($generated@@71 $generated@@29 ($generated@@77 $generated@@11 ($generated@@15 $generated@@188))) ($generated@@43 $generated@@70 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@187 $generated@@183) $generated@@40)))) ($generated@@30 $generated@@70 ($generated@@101 $generated@@187 $generated@@182 $generated@@188 $generated@@183) ($generated@@72 $generated))) (and (=> (= (ControlFlow 0 7) (- 0 8)) true) (=> (= (ControlFlow 0 7) (- 0 6)) $generated@@189)))))))))
(let (($generated@@194  (=> (or (not (= $generated@@182 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 18) 7) $generated@@193) (=> (= (ControlFlow 0 18) 11) $generated@@192)))))
(let (($generated@@195  (=> (= $generated@@182 $generated@@33) (and (=> (= (ControlFlow 0 17) 7) $generated@@193) (=> (= (ControlFlow 0 17) 11) $generated@@192)))))
(let (($generated@@196  (=> (not (and (or (not (= $generated@@182 $generated@@33)) (not true)) (= $generated@@183 $generated@@33))) (and (=> (= (ControlFlow 0 19) 17) $generated@@195) (=> (= (ControlFlow 0 19) 18) $generated@@194)))))
(let (($generated@@197  (=> (and (or (not (= $generated@@182 $generated@@33)) (not true)) (= $generated@@183 $generated@@33)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (not (= $generated@@182 $generated@@33)) (not true))) (=> (or (not (= $generated@@182 $generated@@33)) (not true)) (=> (and (and (= $generated@@190 ($generated@@14 ($generated@@137 $generated@@31 $generated@@45 $generated@@10 $generated@@185 $generated@@182 $generated@@40))) (= ($generated@@101 $generated@@187 $generated@@182 $generated@@188 $generated@@183) ($generated@@87 ($generated@@43 $generated@@70 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@187 $generated@@182) $generated@@40)) ($generated@@71 $generated@@29 ($generated@@77 $generated@@11 ($generated@@15 $generated@@188)))))) (and ($generated@@30 $generated@@70 ($generated@@101 $generated@@187 $generated@@182 $generated@@188 $generated@@183) ($generated@@72 $generated)) (= (ControlFlow 0 4) (- 0 3)))) $generated@@190))))))
(let (($generated@@198  (=> (= $generated@@182 $generated@@33) (and (=> (= (ControlFlow 0 21) 4) $generated@@197) (=> (= (ControlFlow 0 21) 19) $generated@@196)))))
(let (($generated@@199  (=> (or (not (= $generated@@182 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 20) 4) $generated@@197) (=> (= (ControlFlow 0 20) 19) $generated@@196)))))
(let (($generated@@200  (=> (not (and (= $generated@@182 $generated@@33) (= $generated@@183 $generated@@33))) (and (=> (= (ControlFlow 0 22) 20) $generated@@199) (=> (= (ControlFlow 0 22) 21) $generated@@198)))))
(let (($generated@@201 true))
(let (($generated@@202  (=> (or (not (= $generated@@182 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 24) 2) $generated@@201) (=> (= (ControlFlow 0 24) 22) $generated@@200)))))
(let (($generated@@203  (=> (= $generated@@182 $generated@@33) (and (=> (= (ControlFlow 0 23) 2) $generated@@201) (=> (= (ControlFlow 0 23) 22) $generated@@200)))))
(let (($generated@@204 true))
(let (($generated@@205  (=> (= $generated@@185 ($generated@@138 $generated@@33 $generated@@187 $generated@@2 $generated@@182 $generated@@183)) (and (and (=> (= (ControlFlow 0 25) 1) $generated@@204) (=> (= (ControlFlow 0 25) 23) $generated@@203)) (=> (= (ControlFlow 0 25) 24) $generated@@202)))))
(let (($generated@@206  (=> (and ($generated@@90 $generated@@187) ($generated@@191 $generated@@187)) (=> (and (and ($generated@@30 $generated@@31 $generated@@182 $generated@@32) ($generated@@30 $generated@@31 $generated@@183 $generated@@32)) (and (= 0 $generated@@100) (= (ControlFlow 0 26) 25))) $generated@@205))))
$generated@@206))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
