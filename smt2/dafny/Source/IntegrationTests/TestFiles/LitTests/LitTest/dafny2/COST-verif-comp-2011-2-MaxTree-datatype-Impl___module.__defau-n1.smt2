(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U Int T@U) T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 () Int)
(declare-fun $generated@@83 (T@U T@U Int) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 (T@U Int) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@110 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@116 (T@U) Bool)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@25 T@U) ($generated@@26 Int) ($generated@@27 T@U) ) (! (= ($generated@@24 ($generated@@23 $generated@@25 $generated@@26 $generated@@27)) $generated@@4)
 :pattern ( ($generated@@23 $generated@@25 $generated@@26 $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 Int) ($generated@@31 T@U) ) (! (= ($generated@@28 ($generated@@23 $generated@@29 $generated@@30 $generated@@31)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29 $generated@@30 $generated@@31))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 Int) ($generated@@35 T@U) ) (! (= ($generated@@32 ($generated@@23 $generated@@33 $generated@@34 $generated@@35)) $generated@@34)
 :pattern ( ($generated@@23 $generated@@33 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 Int) ($generated@@39 T@U) ) (! (= ($generated@@36 ($generated@@23 $generated@@37 $generated@@38 $generated@@39)) $generated@@39)
 :pattern ( ($generated@@23 $generated@@37 $generated@@38 $generated@@39))
)))
(assert (= ($generated@@24 $generated@@40) $generated@@3))
(assert (= ($generated@@6 $generated@@42) 3))
(assert ($generated@@41 $generated@@42 $generated@@40 $generated@@43))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@46) (= $generated@@45 $generated@@46))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@48 $generated@@57 $generated@@58 ($generated@@54 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@61) $generated@@59)
 :weight 0
)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (or (= $generated@@66 $generated@@67) (= ($generated@@48 $generated@@62 $generated@@63 ($generated@@54 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@67) ($generated@@48 $generated@@62 $generated@@63 $generated@@65 $generated@@67)))
 :weight 0
))) (= ($generated@@6 $generated@@49) 4)) (= ($generated@@6 $generated@@50) 5)) (= ($generated@@6 $generated@@51) 6)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@6 ($generated@@52 $generated@@68 $generated@@69)) 7))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@52 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@56 ($generated@@52 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@52 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@47 $generated@@74 $generated@@75) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@11 ($generated@@53 $generated@@7 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@51 ($generated@@52 $generated@@49 $generated@@50) $generated@@74 $generated@@76) $generated@@1))) ($generated@@11 ($generated@@53 $generated@@7 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@51 ($generated@@52 $generated@@49 $generated@@50) $generated@@75 $generated@@76) $generated@@1))))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@51 ($generated@@52 $generated@@49 $generated@@50) $generated@@75 $generated@@76) $generated@@1))
)))
 :pattern ( ($generated@@47 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert  (=> (<= 1 $generated@@82) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ) (!  (=> (or ($generated@@85 ($generated@@79 $generated@@42 $generated@@88) ($generated@@77 $generated@@89)) (and (< 1 $generated@@82) ($generated@@41 $generated@@42 $generated@@88 $generated@@43))) (and (=> (not ($generated@@11 ($generated@@79 $generated@@7 ($generated@@10 ($generated@@86 ($generated@@79 $generated@@42 $generated@@88)))))) (let (($generated@@90 ($generated@@79 $generated@@42 ($generated@@36 ($generated@@79 $generated@@42 $generated@@88)))))
(let (($generated@@91 ($generated@@77 ($generated@@32 ($generated@@79 $generated@@42 $generated@@88)))))
(let (($generated@@92 ($generated@@79 $generated@@42 ($generated@@28 ($generated@@79 $generated@@42 $generated@@88)))))
 (=> (or (not (= $generated@@91 ($generated@@77 $generated@@89))) (not true)) (and ($generated@@85 $generated@@92 ($generated@@77 $generated@@89)) (=> (not ($generated@@83 ($generated@@84 $generated@@87) $generated@@92 ($generated@@77 $generated@@89))) ($generated@@85 $generated@@90 ($generated@@77 $generated@@89))))))))) (= ($generated@@83 ($generated@@84 $generated@@87) ($generated@@79 $generated@@42 $generated@@88) ($generated@@77 $generated@@89)) (ite ($generated@@86 ($generated@@79 $generated@@42 $generated@@88)) false (let (($generated@@93 ($generated@@79 $generated@@42 ($generated@@36 ($generated@@79 $generated@@42 $generated@@88)))))
(let (($generated@@94 ($generated@@77 ($generated@@32 ($generated@@79 $generated@@42 $generated@@88)))))
(let (($generated@@95 ($generated@@79 $generated@@42 ($generated@@28 ($generated@@79 $generated@@42 $generated@@88)))))
 (or (or (= $generated@@94 ($generated@@77 $generated@@89)) ($generated@@83 ($generated@@84 $generated@@87) $generated@@95 ($generated@@77 $generated@@89))) ($generated@@83 ($generated@@84 $generated@@87) $generated@@93 ($generated@@77 $generated@@89))))))))))
 :weight 3
 :pattern ( ($generated@@83 ($generated@@84 $generated@@87) ($generated@@79 $generated@@42 $generated@@88) ($generated@@77 $generated@@89)))
))))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@86 $generated@@96) (= ($generated@@24 $generated@@96) $generated@@3))
 :pattern ( ($generated@@86 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 $generated@@98) (= ($generated@@24 $generated@@98) $generated@@4))
 :pattern ( ($generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@99 $generated@@101 ($generated@@53 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@53 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@97 $generated@@102) (exists (($generated@@103 T@U) ($generated@@104 Int) ($generated@@105 T@U) ) (= $generated@@102 ($generated@@23 $generated@@103 $generated@@104 $generated@@105))))
 :pattern ( ($generated@@97 $generated@@102))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@86 $generated@@106) (= $generated@@106 $generated@@40))
 :pattern ( ($generated@@86 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 Int) ) (! (= ($generated@@83 ($generated@@84 $generated@@107) $generated@@108 $generated@@109) ($generated@@83 $generated@@107 $generated@@108 $generated@@109))
 :pattern ( ($generated@@83 ($generated@@84 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (!  (=> ($generated@@47 $generated@@111 $generated@@112) (=> ($generated@@110 $generated@@115 $generated@@113 $generated@@114 $generated@@111) ($generated@@110 $generated@@115 $generated@@113 $generated@@114 $generated@@112)))
 :pattern ( ($generated@@47 $generated@@111 $generated@@112) ($generated@@110 $generated@@115 $generated@@113 $generated@@114 $generated@@111))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@116 $generated@@117) (or ($generated@@86 $generated@@117) ($generated@@97 $generated@@117)))
 :pattern ( ($generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@118 $generated@@43) (or ($generated@@86 $generated@@118) ($generated@@97 $generated@@118)))
 :pattern ( ($generated@@97 $generated@@118) ($generated@@41 $generated@@42 $generated@@118 $generated@@43))
 :pattern ( ($generated@@86 $generated@@118) ($generated@@41 $generated@@42 $generated@@118 $generated@@43))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or (not (= $generated@@119 $generated@@121)) (not true)) (=> (and ($generated@@47 $generated@@119 $generated@@120) ($generated@@47 $generated@@120 $generated@@121)) ($generated@@47 $generated@@119 $generated@@121)))
 :pattern ( ($generated@@47 $generated@@119 $generated@@120) ($generated@@47 $generated@@120 $generated@@121))
)))
(assert  (=> (<= 1 $generated@@82) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 Int) ) (!  (=> (or ($generated@@85 $generated@@123 $generated@@124) (and (< 1 $generated@@82) ($generated@@41 $generated@@42 $generated@@123 $generated@@43))) (and (=> (not ($generated@@86 $generated@@123)) (let (($generated@@125 ($generated@@36 $generated@@123)))
(let (($generated@@126 ($generated@@32 $generated@@123)))
(let (($generated@@127 ($generated@@28 $generated@@123)))
 (=> (or (not (= $generated@@126 $generated@@124)) (not true)) (and ($generated@@85 $generated@@127 $generated@@124) (=> (not ($generated@@83 $generated@@122 $generated@@127 $generated@@124)) ($generated@@85 $generated@@125 $generated@@124)))))))) (= ($generated@@83 ($generated@@84 $generated@@122) $generated@@123 $generated@@124) (ite ($generated@@86 $generated@@123) false (let (($generated@@128 ($generated@@36 $generated@@123)))
(let (($generated@@129 ($generated@@32 $generated@@123)))
(let (($generated@@130 ($generated@@28 $generated@@123)))
 (or (or (= $generated@@129 $generated@@124) ($generated@@83 $generated@@122 $generated@@130 $generated@@124)) ($generated@@83 $generated@@122 $generated@@128 $generated@@124)))))))))
 :pattern ( ($generated@@83 ($generated@@84 $generated@@122) $generated@@123 $generated@@124))
))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@86 $generated@@131) ($generated@@86 $generated@@132)) ($generated@@44 $generated@@131 $generated@@132))
 :pattern ( ($generated@@44 $generated@@131 $generated@@132) ($generated@@86 $generated@@131))
 :pattern ( ($generated@@44 $generated@@131 $generated@@132) ($generated@@86 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 Int) ($generated@@135 T@U) ) (! (= ($generated@@23 ($generated@@79 $generated@@42 $generated@@133) ($generated@@77 $generated@@134) ($generated@@79 $generated@@42 $generated@@135)) ($generated@@79 $generated@@42 ($generated@@23 $generated@@133 $generated@@134 $generated@@135)))
 :pattern ( ($generated@@23 ($generated@@79 $generated@@42 $generated@@133) ($generated@@77 $generated@@134) ($generated@@79 $generated@@42 $generated@@135)))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@53 $generated@@137 ($generated@@99 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@99 $generated@@137 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 T@U) ) (! (< ($generated@@138 $generated@@139) ($generated@@138 ($generated@@23 $generated@@139 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@23 $generated@@139 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 Int) ($generated@@144 T@U) ) (! (< ($generated@@138 $generated@@144) ($generated@@138 ($generated@@23 $generated@@142 $generated@@143 $generated@@144)))
 :pattern ( ($generated@@23 $generated@@142 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and ($generated@@97 $generated@@145) ($generated@@97 $generated@@146)) (= ($generated@@44 $generated@@145 $generated@@146)  (and (and ($generated@@44 ($generated@@28 $generated@@145) ($generated@@28 $generated@@146)) (= ($generated@@32 $generated@@145) ($generated@@32 $generated@@146))) ($generated@@44 ($generated@@36 $generated@@145) ($generated@@36 $generated@@146)))))
 :pattern ( ($generated@@44 $generated@@145 $generated@@146) ($generated@@97 $generated@@145))
 :pattern ( ($generated@@44 $generated@@145 $generated@@146) ($generated@@97 $generated@@146))
)))
(assert  (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@147 $generated@@150 $generated@@151 $generated@@152 ($generated@@149 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@155 $generated@@156) $generated@@153)
 :weight 0
)) (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@147 $generated@@157 $generated@@158 $generated@@159 ($generated@@149 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@147 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@147 $generated@@166 $generated@@167 $generated@@168 ($generated@@149 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@147 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@11 ($generated@@147 $generated@@51 $generated@@49 $generated@@7 ($generated@@148 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))  (=> (and (or (not (= $generated@@179 $generated@@175)) (not true)) ($generated@@11 ($generated@@53 $generated@@7 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@51 ($generated@@52 $generated@@49 $generated@@50) $generated@@176 $generated@@179) $generated@@177)))) $generated@@178))
 :pattern ( ($generated@@147 $generated@@51 $generated@@49 $generated@@7 ($generated@@148 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@181 $generated@@183) (and ($generated@@97 $generated@@182) ($generated@@110 $generated@@42 $generated@@182 $generated@@43 $generated@@183))) ($generated@@110 $generated@@8 ($generated@@12 ($generated@@32 $generated@@182)) $generated $generated@@183))
 :pattern ( ($generated@@110 $generated@@8 ($generated@@12 ($generated@@32 $generated@@182)) $generated $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and ($generated@@181 $generated@@185) ($generated@@41 $generated@@42 $generated@@184 $generated@@43)) ($generated@@110 $generated@@42 $generated@@184 $generated@@43 $generated@@185))
 :pattern ( ($generated@@110 $generated@@42 $generated@@184 $generated@@43 $generated@@185))
)))
(assert (= ($generated@@22 $generated@@43) $generated@@2))
(assert (= ($generated@@186 $generated@@43) $generated@@5))
(assert (= $generated@@40 ($generated@@79 $generated@@42 $generated@@40)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@181 $generated@@188) (and ($generated@@97 $generated@@187) ($generated@@110 $generated@@42 $generated@@187 $generated@@43 $generated@@188))) ($generated@@110 $generated@@42 ($generated@@28 $generated@@187) $generated@@43 $generated@@188))
 :pattern ( ($generated@@110 $generated@@42 ($generated@@28 $generated@@187) $generated@@43 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and ($generated@@181 $generated@@190) (and ($generated@@97 $generated@@189) ($generated@@110 $generated@@42 $generated@@189 $generated@@43 $generated@@190))) ($generated@@110 $generated@@42 ($generated@@36 $generated@@189) $generated@@43 $generated@@190))
 :pattern ( ($generated@@110 $generated@@42 ($generated@@36 $generated@@189) $generated@@43 $generated@@190))
)))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@99 $generated@@8 ($generated@@12 ($generated@@77 $generated@@191))) ($generated@@79 $generated@@50 ($generated@@99 $generated@@8 ($generated@@12 $generated@@191))))
 :pattern ( ($generated@@99 $generated@@8 ($generated@@12 ($generated@@77 $generated@@191))))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@99 $generated@@193 ($generated@@79 $generated@@193 $generated@@192)) ($generated@@79 $generated@@50 ($generated@@99 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@99 $generated@@193 ($generated@@79 $generated@@193 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! ($generated@@110 $generated@@8 $generated@@195 $generated $generated@@194)
 :pattern ( ($generated@@110 $generated@@8 $generated@@195 $generated $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 Int) ($generated@@198 T@U) ) (! (= ($generated@@41 $generated@@42 ($generated@@23 $generated@@196 $generated@@197 $generated@@198) $generated@@43)  (and (and ($generated@@41 $generated@@42 $generated@@196 $generated@@43) ($generated@@41 $generated@@8 ($generated@@12 $generated@@197) $generated)) ($generated@@41 $generated@@42 $generated@@198 $generated@@43)))
 :pattern ( ($generated@@41 $generated@@42 ($generated@@23 $generated@@196 $generated@@197 $generated@@198) $generated@@43))
)))
(assert (forall (($generated@@199 T@U) ) (! ($generated@@41 $generated@@8 $generated@@199 $generated)
 :pattern ( ($generated@@41 $generated@@8 $generated@@199 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@220  (and (=> (= (ControlFlow 0 6) (- 0 8)) (=> ($generated@@85 $generated@@200 $generated@@201) (or ($generated@@83 ($generated@@84 $generated@@202) $generated@@200 $generated@@201) (=> ($generated@@86 $generated@@200) ($generated@@11 ($generated@@79 $generated@@7 ($generated@@10 false))))))) (=> (=> ($generated@@85 $generated@@200 $generated@@201) (or ($generated@@83 ($generated@@84 $generated@@202) $generated@@200 $generated@@201) (=> ($generated@@86 $generated@@200) ($generated@@11 ($generated@@79 $generated@@7 ($generated@@10 false)))))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> ($generated@@85 $generated@@200 $generated@@201) (or ($generated@@83 ($generated@@84 $generated@@202) $generated@@200 $generated@@201) (=> (not ($generated@@86 $generated@@200)) (let (($generated@@221 ($generated@@36 $generated@@200)))
(let (($generated@@222 ($generated@@32 $generated@@200)))
(let (($generated@@223 ($generated@@28 $generated@@200)))
 (or (or (= $generated@@222 $generated@@201) ($generated@@83 ($generated@@84 ($generated@@84 $generated@@202)) $generated@@223 $generated@@201)) ($generated@@83 ($generated@@84 ($generated@@84 $generated@@202)) $generated@@221 $generated@@201))))))))) (=> (=> ($generated@@85 $generated@@200 $generated@@201) (or ($generated@@83 ($generated@@84 $generated@@202) $generated@@200 $generated@@201) (=> (not ($generated@@86 $generated@@200)) (let (($generated@@224 ($generated@@36 $generated@@200)))
(let (($generated@@225 ($generated@@32 $generated@@200)))
(let (($generated@@226 ($generated@@28 $generated@@200)))
 (or (or (= $generated@@225 $generated@@201) ($generated@@83 ($generated@@84 ($generated@@84 $generated@@202)) $generated@@226 $generated@@201)) ($generated@@83 ($generated@@84 ($generated@@84 $generated@@202)) $generated@@224 $generated@@201)))))))) (=> (= (ControlFlow 0 6) (- 0 5)) (forall (($generated@@227 Int) ) (!  (=> ($generated@@83 ($generated@@84 ($generated@@84 $generated@@202)) $generated@@200 $generated@@227) (<= $generated@@227 $generated@@201))
 :pattern ( ($generated@@83 ($generated@@84 ($generated@@84 $generated@@202)) $generated@@200 $generated@@227))
)))))))))
(let (($generated@@228  (=> (= $generated@@200 ($generated@@23 $generated@@203 $generated@@204 $generated@@205)) (=> (and (and ($generated@@41 $generated@@42 $generated@@203 $generated@@43) ($generated@@110 $generated@@42 $generated@@203 $generated@@43 $generated@@206)) (and ($generated@@41 $generated@@42 $generated@@205 $generated@@43) ($generated@@110 $generated@@42 $generated@@205 $generated@@43 $generated@@206))) (=> (and (and (and ($generated@@41 $generated@@42 $generated@@207 $generated@@43) ($generated@@110 $generated@@42 $generated@@207 $generated@@43 $generated@@206)) (and (= $generated@@208 $generated@@205) ($generated@@41 $generated@@42 $generated@@208 $generated@@43))) (and (and (= $generated@@207 $generated@@208) (= $generated@@209 $generated@@204)) (and ($generated@@41 $generated@@8 ($generated@@12 $generated@@209) $generated) (= $generated@@210 $generated@@209)))) (=> (and (and (and (and (and ($generated@@41 $generated@@42 $generated@@211 $generated@@43) ($generated@@110 $generated@@42 $generated@@211 $generated@@43 $generated@@206)) (= $generated@@212 $generated@@203)) (and ($generated@@41 $generated@@42 $generated@@212 $generated@@43) (= $generated@@211 $generated@@212))) (and (and (and ($generated@@181 $generated@@213) ($generated@@214 $generated@@213)) (=> (or (not (= $generated@@215 $generated@@210)) (not true)) ($generated@@85 $generated@@207 $generated@@215))) (and (or (= $generated@@215 $generated@@210) ($generated@@83 ($generated@@84 ($generated@@84 $generated@@202)) $generated@@207 $generated@@215)) (=> (<= $generated@@210 $generated@@215) (forall (($generated@@229 Int) ) (! ($generated@@85 $generated@@207 $generated@@229)
 :pattern ( ($generated@@83 ($generated@@84 $generated@@202) $generated@@207 $generated@@229))
)))))) (and (and (and (and (<= $generated@@210 $generated@@215) (forall (($generated@@230 Int) ) (!  (=> ($generated@@83 ($generated@@84 $generated@@202) $generated@@207 $generated@@230) (<= $generated@@230 $generated@@215))
 :pattern ( ($generated@@83 ($generated@@84 $generated@@202) $generated@@207 $generated@@230))
))) (and (forall (($generated@@231 T@U) ) (!  (=> (and (or (not (= $generated@@231 $generated@@216)) (not true)) ($generated@@11 ($generated@@53 $generated@@7 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@51 ($generated@@52 $generated@@49 $generated@@50) $generated@@206 $generated@@231) $generated@@1)))) (= ($generated@@48 $generated@@51 ($generated@@52 $generated@@49 $generated@@50) $generated@@213 $generated@@231) ($generated@@48 $generated@@51 ($generated@@52 $generated@@49 $generated@@50) $generated@@206 $generated@@231)))
 :pattern ( ($generated@@48 $generated@@51 ($generated@@52 $generated@@49 $generated@@50) $generated@@213 $generated@@231))
)) ($generated@@47 $generated@@206 $generated@@213))) (and (and ($generated@@181 $generated@@217) ($generated@@214 $generated@@217)) (=> (or (not (= $generated@@218 $generated@@215)) (not true)) ($generated@@85 $generated@@211 $generated@@218)))) (and (and (and (or (= $generated@@218 $generated@@215) ($generated@@83 ($generated@@84 ($generated@@84 $generated@@202)) $generated@@211 $generated@@218)) (=> (<= $generated@@215 $generated@@218) (forall (($generated@@232 Int) ) (! ($generated@@85 $generated@@211 $generated@@232)
 :pattern ( ($generated@@83 ($generated@@84 $generated@@202) $generated@@211 $generated@@232))
)))) (and (<= $generated@@215 $generated@@218) (forall (($generated@@233 Int) ) (!  (=> ($generated@@83 ($generated@@84 $generated@@202) $generated@@211 $generated@@233) (<= $generated@@233 $generated@@218))
 :pattern ( ($generated@@83 ($generated@@84 $generated@@202) $generated@@211 $generated@@233))
)))) (and (and (forall (($generated@@234 T@U) ) (!  (=> (and (or (not (= $generated@@234 $generated@@216)) (not true)) ($generated@@11 ($generated@@53 $generated@@7 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@51 ($generated@@52 $generated@@49 $generated@@50) $generated@@213 $generated@@234) $generated@@1)))) (= ($generated@@48 $generated@@51 ($generated@@52 $generated@@49 $generated@@50) $generated@@217 $generated@@234) ($generated@@48 $generated@@51 ($generated@@52 $generated@@49 $generated@@50) $generated@@213 $generated@@234)))
 :pattern ( ($generated@@48 $generated@@51 ($generated@@52 $generated@@49 $generated@@50) $generated@@217 $generated@@234))
)) ($generated@@47 $generated@@213 $generated@@217)) (and (= $generated@@201 $generated@@218) (= (ControlFlow 0 9) 6)))))) $generated@@220))))))
(let (($generated@@235 true))
(let (($generated@@236  (=> (and (= $generated@@200 $generated@@40) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@237  (=> (or (not (= $generated@@200 ($generated@@23 $generated@@203 $generated@@204 $generated@@205))) (not true)) (and (=> (= (ControlFlow 0 4) 2) $generated@@236) (=> (= (ControlFlow 0 4) 3) $generated@@235)))))
(let (($generated@@238  (=> (= $generated@@219 ($generated@@148 $generated@@216 $generated@@206 $generated@@1 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@228) (=> (= (ControlFlow 0 10) 4) $generated@@237)))))
(let (($generated@@239  (=> (and ($generated@@181 $generated@@206) ($generated@@214 $generated@@206)) (=> (and (and (and (and ($generated@@41 $generated@@42 $generated@@200 $generated@@43) ($generated@@110 $generated@@42 $generated@@200 $generated@@43 $generated@@206)) ($generated@@116 $generated@@200)) (= 3 $generated@@82)) (and (not ($generated@@44 $generated@@200 $generated@@40)) (= (ControlFlow 0 11) 10))) $generated@@238))))
$generated@@239))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
