(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Int T@U T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 (Int) Int)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@97 (T@U T@U Int) T@U)
(declare-fun $generated@@98 (T@U Int) Bool)
(declare-fun $generated@@103 (T@U) Bool)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) Int)
(declare-fun $generated@@117 (T@U) Int)
(declare-fun $generated@@123 (T@U T@U T@U) Bool)
(declare-fun $generated@@124 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@185 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@187 () T@T)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@190 () T@T)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@27 Int) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26)  (and (and ($generated@@23 $generated@@9 ($generated@@13 $generated@@27) $generated) ($generated@@23 $generated@@24 $generated@@28 $generated@@26)) ($generated@@23 $generated@@24 $generated@@29 $generated@@26)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26))
)))
(assert (= ($generated@@7 $generated@@33) 4))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@32 $generated@@36) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@36 $generated@@26))) ($generated@@23 $generated@@33 ($generated@@31 $generated@@35 $generated@@36) ($generated@@34 $generated)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@36))
))))
(assert (= ($generated@@37 $generated) $generated@@0))
(assert (forall (($generated@@39 Int) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@38 ($generated@@25 $generated@@39 $generated@@40 $generated@@41)) $generated@@5)
 :pattern ( ($generated@@25 $generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 Int) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@42 ($generated@@25 $generated@@43 $generated@@44 $generated@@45)) $generated@@43)
 :pattern ( ($generated@@25 $generated@@43 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 Int) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@46 ($generated@@25 $generated@@47 $generated@@48 $generated@@49)) $generated@@48)
 :pattern ( ($generated@@25 $generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 Int) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@50 ($generated@@25 $generated@@51 $generated@@52 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@25 $generated@@51 $generated@@52 $generated@@53))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@57 ($generated@@56 $generated@@24 $generated@@64)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@64 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 ($generated@@58 ($generated@@56 $generated@@24 $generated@@64)))))) (let (($generated@@65 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@64)))))
(let (($generated@@66 ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@64)))))
(let (($generated@@67 ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@64)))))
 (and ($generated@@57 $generated@@66) (=> ($generated@@54 ($generated@@55 $generated@@63) $generated@@66) (and ($generated@@57 $generated@@65) (=> ($generated@@54 ($generated@@55 $generated@@63) $generated@@65) (and ($generated@@60 $generated@@66) (=> (or ($generated@@61 $generated@@66 $generated@@62) (<= $generated@@67 ($generated@@42 $generated@@66))) ($generated@@60 $generated@@65))))))))))) (= ($generated@@54 ($generated@@55 $generated@@63) ($generated@@56 $generated@@24 $generated@@64)) (ite ($generated@@58 ($generated@@56 $generated@@24 $generated@@64)) true (let (($generated@@68 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@64)))))
(let (($generated@@69 ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@64)))))
(let (($generated@@70 ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@64)))))
 (and (and (and ($generated@@54 ($generated@@55 $generated@@63) $generated@@69) ($generated@@54 ($generated@@55 $generated@@63) $generated@@68)) (or ($generated@@61 $generated@@69 $generated@@62) (<= $generated@@70 ($generated@@59 ($generated@@42 $generated@@69))))) (or ($generated@@61 $generated@@68 $generated@@62) (<= $generated@@70 ($generated@@59 ($generated@@42 $generated@@68))))))))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@55 $generated@@63) ($generated@@56 $generated@@24 $generated@@64)))
))))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (or ($generated@@32 ($generated@@56 $generated@@24 $generated@@76)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@76 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 ($generated@@58 ($generated@@56 $generated@@24 $generated@@76)))))) (let (($generated@@77 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@76)))))
(let (($generated@@78 ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@76)))))
 (and ($generated@@32 $generated@@78) ($generated@@32 $generated@@77))))) (= ($generated@@31 ($generated@@55 $generated@@75) ($generated@@56 $generated@@24 $generated@@76)) (ite ($generated@@58 ($generated@@56 $generated@@24 $generated@@76)) $generated@@71 (let (($generated@@79 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@76)))))
(let (($generated@@80 ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@76)))))
(let (($generated@@81 ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@76)))))
($generated@@72 ($generated@@72 ($generated@@73 $generated@@71 ($generated@@74 $generated@@9 ($generated@@13 $generated@@81))) ($generated@@31 ($generated@@55 $generated@@75) $generated@@80)) ($generated@@31 ($generated@@55 $generated@@75) $generated@@79)))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@55 $generated@@75) ($generated@@56 $generated@@24 $generated@@76)))
))))
(assert (= ($generated@@38 $generated@@62) $generated@@4))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@23 $generated@@33 $generated@@83 ($generated@@34 $generated@@84)) ($generated@@82 $generated@@83))
 :pattern ( ($generated@@23 $generated@@33 $generated@@83 ($generated@@34 $generated@@84)))
)))
(assert ($generated@@23 $generated@@24 $generated@@62 $generated@@26))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@61 $generated@@85 $generated@@86) (= $generated@@85 $generated@@86))
 :pattern ( ($generated@@61 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 Int) ) (! (= ($generated@@59 $generated@@87) $generated@@87)
 :pattern ( ($generated@@59 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@56 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@56 $generated@@89 $generated@@88))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@32 $generated@@91) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@91 $generated@@26))) (and (=> (not ($generated@@58 $generated@@91)) (let (($generated@@92 ($generated@@50 $generated@@91)))
(let (($generated@@93 ($generated@@46 $generated@@91)))
 (and ($generated@@32 $generated@@93) ($generated@@32 $generated@@92))))) (= ($generated@@31 ($generated@@55 $generated@@90) $generated@@91) (ite ($generated@@58 $generated@@91) $generated@@71 (let (($generated@@94 ($generated@@50 $generated@@91)))
(let (($generated@@95 ($generated@@46 $generated@@91)))
(let (($generated@@96 ($generated@@42 $generated@@91)))
($generated@@72 ($generated@@72 ($generated@@73 $generated@@71 ($generated@@74 $generated@@9 ($generated@@13 $generated@@96))) ($generated@@31 $generated@@90 $generated@@95)) ($generated@@31 $generated@@90 $generated@@94)))))))))
 :pattern ( ($generated@@31 ($generated@@55 $generated@@90) $generated@@91))
))))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 Int) ) (!  (=> (or ($generated@@98 ($generated@@56 $generated@@24 $generated@@100) ($generated@@59 $generated@@101)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@100 $generated@@26))) (and (and ($generated@@60 ($generated@@56 $generated@@24 $generated@@100)) (=> (not ($generated@@61 $generated@@100 $generated@@62)) (and (=> ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 (< $generated@@101 ($generated@@42 ($generated@@56 $generated@@24 $generated@@100)))))) ($generated@@98 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@100))) ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@100))))) (=> (not ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 (< $generated@@101 ($generated@@42 ($generated@@56 $generated@@24 $generated@@100))))))) ($generated@@98 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@100))) ($generated@@59 $generated@@101)))))) (= ($generated@@97 ($generated@@55 $generated@@99) ($generated@@56 $generated@@24 $generated@@100) ($generated@@59 $generated@@101)) (ite ($generated@@61 $generated@@100 $generated@@62) ($generated@@25 ($generated@@59 $generated@@101) ($generated@@56 $generated@@24 $generated@@62) ($generated@@56 $generated@@24 $generated@@62)) (ite (< $generated@@101 ($generated@@42 ($generated@@56 $generated@@24 $generated@@100))) ($generated@@25 ($generated@@59 $generated@@101) ($generated@@56 $generated@@24 ($generated@@97 ($generated@@55 $generated@@99) ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@100))) ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@100))))) ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@100)))) ($generated@@25 ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@100))) ($generated@@56 $generated@@24 ($generated@@97 ($generated@@55 $generated@@99) ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@100))) ($generated@@59 $generated@@101))) ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@100)))))))))
 :weight 3
 :pattern ( ($generated@@97 ($generated@@55 $generated@@99) ($generated@@56 $generated@@24 $generated@@100) ($generated@@59 $generated@@101)))
))))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@58 $generated@@102) (= ($generated@@38 $generated@@102) $generated@@4))
 :pattern ( ($generated@@58 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 $generated@@104) (= ($generated@@38 $generated@@104) $generated@@5))
 :pattern ( ($generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@74 $generated@@107 ($generated@@105 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@105 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@103 $generated@@108) (exists (($generated@@109 Int) ($generated@@110 T@U) ($generated@@111 T@U) ) (= $generated@@108 ($generated@@25 $generated@@109 $generated@@110 $generated@@111))))
 :pattern ( ($generated@@103 $generated@@108))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or (not (= $generated@@114 $generated@@115)) (not true)) (= ($generated@@112 $generated@@113 $generated@@115) ($generated@@112 ($generated@@73 $generated@@113 $generated@@114) $generated@@115)))
 :pattern ( ($generated@@73 $generated@@113 $generated@@114) ($generated@@112 $generated@@113 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@58 $generated@@116) (= $generated@@116 $generated@@62))
 :pattern ( ($generated@@58 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@117 ($generated@@73 $generated@@118 $generated@@119)) (+ ($generated@@117 $generated@@118) 1))
 :pattern ( ($generated@@117 ($generated@@73 $generated@@118 $generated@@119)))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 Int) ) (!  (=> (or ($generated@@98 $generated@@121 $generated@@122) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@121 $generated@@26))) ($generated@@23 $generated@@24 ($generated@@97 $generated@@120 $generated@@121 $generated@@122) $generated@@26))
 :pattern ( ($generated@@97 $generated@@120 $generated@@121 $generated@@122))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@123 ($generated@@74 $generated@@128 $generated@@125) $generated@@126 $generated@@127) ($generated@@124 $generated@@128 $generated@@125 $generated@@126 $generated@@127))
 :pattern ( ($generated@@123 ($generated@@74 $generated@@128 $generated@@125) $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and ($generated@@103 $generated@@129) ($generated@@103 $generated@@130)) (= ($generated@@61 $generated@@129 $generated@@130)  (and (and (= ($generated@@42 $generated@@129) ($generated@@42 $generated@@130)) ($generated@@61 ($generated@@46 $generated@@129) ($generated@@46 $generated@@130))) ($generated@@61 ($generated@@50 $generated@@129) ($generated@@50 $generated@@130)))))
 :pattern ( ($generated@@61 $generated@@129 $generated@@130) ($generated@@103 $generated@@129))
 :pattern ( ($generated@@61 $generated@@129 $generated@@130) ($generated@@103 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@117 ($generated@@72 $generated@@131 $generated@@132)) (+ ($generated@@117 $generated@@131) ($generated@@117 $generated@@132)))
 :pattern ( ($generated@@117 ($generated@@72 $generated@@131 $generated@@132)))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@133 $generated@@134 $generated@@26) (and (= ($generated@@74 $generated@@24 ($generated@@105 $generated@@24 $generated@@134)) $generated@@134) ($generated@@23 $generated@@24 ($generated@@105 $generated@@24 $generated@@134) $generated@@26)))
 :pattern ( ($generated@@133 $generated@@134 $generated@@26))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Int) ) (! (= ($generated@@97 ($generated@@55 $generated@@135) $generated@@136 $generated@@137) ($generated@@97 $generated@@135 $generated@@136 $generated@@137))
 :pattern ( ($generated@@97 ($generated@@55 $generated@@135) $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@60 $generated@@138) (or ($generated@@58 $generated@@138) ($generated@@103 $generated@@138)))
 :pattern ( ($generated@@60 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@139 $generated@@140 $generated@@141) (= $generated@@140 $generated@@141))
 :pattern ( ($generated@@139 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@23 $generated@@33 $generated@@142 ($generated@@34 $generated@@143)) (forall (($generated@@144 T@U) ) (!  (=> (< 0 ($generated@@112 $generated@@142 $generated@@144)) ($generated@@133 $generated@@144 $generated@@143))
 :pattern ( ($generated@@112 $generated@@142 $generated@@144))
)))
 :pattern ( ($generated@@23 $generated@@33 $generated@@142 ($generated@@34 $generated@@143)))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Int) ) (!  (=> (or ($generated@@98 $generated@@146 $generated@@147) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@146 $generated@@26))) (and (and ($generated@@60 $generated@@146) (=> (not ($generated@@61 $generated@@146 $generated@@62)) (and (=> (< $generated@@147 ($generated@@42 $generated@@146)) ($generated@@98 ($generated@@50 $generated@@146) ($generated@@42 $generated@@146))) (=> (<= ($generated@@42 $generated@@146) $generated@@147) ($generated@@98 ($generated@@50 $generated@@146) $generated@@147))))) (= ($generated@@97 ($generated@@55 $generated@@145) $generated@@146 $generated@@147) (ite ($generated@@61 $generated@@146 $generated@@62) ($generated@@25 $generated@@147 ($generated@@56 $generated@@24 $generated@@62) ($generated@@56 $generated@@24 $generated@@62)) (ite (< $generated@@147 ($generated@@42 $generated@@146)) ($generated@@25 $generated@@147 ($generated@@97 $generated@@145 ($generated@@50 $generated@@146) ($generated@@42 $generated@@146)) ($generated@@46 $generated@@146)) ($generated@@25 ($generated@@42 $generated@@146) ($generated@@97 $generated@@145 ($generated@@50 $generated@@146) $generated@@147) ($generated@@46 $generated@@146)))))))
 :pattern ( ($generated@@97 ($generated@@55 $generated@@145) $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@148 $generated@@26) (or ($generated@@58 $generated@@148) ($generated@@103 $generated@@148)))
 :pattern ( ($generated@@103 $generated@@148) ($generated@@23 $generated@@24 $generated@@148 $generated@@26))
 :pattern ( ($generated@@58 $generated@@148) ($generated@@23 $generated@@24 $generated@@148 $generated@@26))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@133 $generated@@149 $generated) (and (= ($generated@@74 $generated@@9 ($generated@@105 $generated@@9 $generated@@149)) $generated@@149) ($generated@@23 $generated@@9 ($generated@@105 $generated@@9 $generated@@149) $generated)))
 :pattern ( ($generated@@133 $generated@@149 $generated))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@54 ($generated@@55 $generated@@150) $generated@@151) ($generated@@54 $generated@@150 $generated@@151))
 :pattern ( ($generated@@54 ($generated@@55 $generated@@150) $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@133 ($generated@@74 $generated@@154 $generated@@152) $generated@@153) ($generated@@23 $generated@@154 $generated@@152 $generated@@153))
 :pattern ( ($generated@@133 ($generated@@74 $generated@@154 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@82 $generated@@155) (forall (($generated@@156 T@U) ) (!  (and (<= 0 ($generated@@112 $generated@@155 $generated@@156)) (<= ($generated@@112 $generated@@155 $generated@@156) ($generated@@117 $generated@@155)))
 :pattern ( ($generated@@112 $generated@@155 $generated@@156))
)))
 :pattern ( ($generated@@82 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! (<= 0 ($generated@@117 $generated@@157))
 :pattern ( ($generated@@117 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and ($generated@@58 $generated@@158) ($generated@@58 $generated@@159)) ($generated@@61 $generated@@158 $generated@@159))
 :pattern ( ($generated@@61 $generated@@158 $generated@@159) ($generated@@58 $generated@@158))
 :pattern ( ($generated@@61 $generated@@158 $generated@@159) ($generated@@58 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@112 $generated@@71 $generated@@160) 0)
 :pattern ( ($generated@@112 $generated@@71 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@112 ($generated@@73 $generated@@161 $generated@@162) $generated@@162) (+ ($generated@@112 $generated@@161 $generated@@162) 1))
 :pattern ( ($generated@@73 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 Int) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@25 ($generated@@59 $generated@@163) ($generated@@56 $generated@@24 $generated@@164) ($generated@@56 $generated@@24 $generated@@165)) ($generated@@56 $generated@@24 ($generated@@25 $generated@@163 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@163) ($generated@@56 $generated@@24 $generated@@164) ($generated@@56 $generated@@24 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@166 ($generated@@34 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@34 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@37 ($generated@@34 $generated@@168)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@T) ) (! (= ($generated@@105 $generated@@170 ($generated@@74 $generated@@170 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@74 $generated@@170 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (< ($generated@@171 $generated@@173) ($generated@@171 ($generated@@25 $generated@@172 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@25 $generated@@172 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 Int) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (< ($generated@@171 $generated@@177) ($generated@@171 ($generated@@25 $generated@@175 $generated@@176 $generated@@177)))
 :pattern ( ($generated@@25 $generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@31 ($generated@@55 $generated@@178) $generated@@179) ($generated@@31 $generated@@178 $generated@@179))
 :pattern ( ($generated@@31 ($generated@@55 $generated@@178) $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (and (= (= ($generated@@117 $generated@@180) 0) (= $generated@@180 $generated@@71)) (=> (or (not (= ($generated@@117 $generated@@180) 0)) (not true)) (exists (($generated@@181 T@U) ) (! (< 0 ($generated@@112 $generated@@180 $generated@@181))
 :pattern ( ($generated@@112 $generated@@180 $generated@@181))
))))
 :pattern ( ($generated@@117 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@112 ($generated@@72 $generated@@182 $generated@@183) $generated@@184) (+ ($generated@@112 $generated@@182 $generated@@184) ($generated@@112 $generated@@183 $generated@@184)))
 :pattern ( ($generated@@112 ($generated@@72 $generated@@182 $generated@@183) $generated@@184))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@185 $generated@@196 $generated@@197 $generated@@198 ($generated@@192 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@201 $generated@@202) $generated@@199)
 :weight 0
)) (and (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@185 $generated@@203 $generated@@204 $generated@@205 ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@185 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@185 $generated@@212 $generated@@213 $generated@@214 ($generated@@192 $generated@@212 $generated@@213 $generated@@214 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@185 $generated@@212 $generated@@213 $generated@@214 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (= ($generated@@7 $generated@@186) 5)) (= ($generated@@7 $generated@@187) 6)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@189 $generated@@221 $generated@@222 ($generated@@193 $generated@@221 $generated@@222 $generated@@224 $generated@@225 $generated@@223) $generated@@225) $generated@@223)
 :weight 0
))) (forall (($generated@@226 T@T) ($generated@@227 T@T) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@230 $generated@@231) (= ($generated@@189 $generated@@226 $generated@@227 ($generated@@193 $generated@@226 $generated@@227 $generated@@229 $generated@@230 $generated@@228) $generated@@231) ($generated@@189 $generated@@226 $generated@@227 $generated@@229 $generated@@231)))
 :weight 0
))) (= ($generated@@7 $generated@@190) 7)) (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (= ($generated@@7 ($generated@@191 $generated@@232 $generated@@233)) 8))) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@194 ($generated@@191 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@191 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@195 ($generated@@191 $generated@@236 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@191 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (= ($generated@@12 ($generated@@185 $generated@@186 $generated@@187 $generated@@8 ($generated@@188 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (or (not (= $generated@@242 $generated@@238)) (not true)) ($generated@@12 ($generated@@105 $generated@@8 ($generated@@189 $generated@@187 $generated@@190 ($generated@@189 $generated@@186 ($generated@@191 $generated@@187 $generated@@190) $generated@@239 $generated@@242) $generated@@240)))) $generated@@241))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187 $generated@@8 ($generated@@188 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and ($generated@@244 $generated@@246) (and ($generated@@103 $generated@@245) ($generated@@124 $generated@@24 $generated@@245 $generated@@26 $generated@@246))) ($generated@@124 $generated@@9 ($generated@@13 ($generated@@42 $generated@@245)) $generated $generated@@246))
 :pattern ( ($generated@@124 $generated@@9 ($generated@@13 ($generated@@42 $generated@@245)) $generated $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> ($generated@@133 $generated@@247 ($generated@@34 $generated@@248)) (and (= ($generated@@74 $generated@@33 ($generated@@105 $generated@@33 $generated@@247)) $generated@@247) ($generated@@23 $generated@@33 ($generated@@105 $generated@@33 $generated@@247) ($generated@@34 $generated@@248))))
 :pattern ( ($generated@@133 $generated@@247 ($generated@@34 $generated@@248)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and ($generated@@244 $generated@@250) ($generated@@23 $generated@@24 $generated@@249 $generated@@26)) ($generated@@124 $generated@@24 $generated@@249 $generated@@26 $generated@@250))
 :pattern ( ($generated@@124 $generated@@24 $generated@@249 $generated@@26 $generated@@250))
)))
(assert (= ($generated@@37 $generated@@26) $generated@@3))
(assert (= ($generated@@251 $generated@@26) $generated@@6))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (or ($generated@@57 $generated@@253) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@253 $generated@@26))) (and (=> (not ($generated@@58 $generated@@253)) (let (($generated@@254 ($generated@@50 $generated@@253)))
(let (($generated@@255 ($generated@@46 $generated@@253)))
(let (($generated@@256 ($generated@@42 $generated@@253)))
 (and ($generated@@57 $generated@@255) (=> ($generated@@54 $generated@@252 $generated@@255) (and ($generated@@57 $generated@@254) (=> ($generated@@54 $generated@@252 $generated@@254) (and ($generated@@60 $generated@@255) (=> (or ($generated@@61 $generated@@255 $generated@@62) (<= $generated@@256 ($generated@@42 $generated@@255))) ($generated@@60 $generated@@254))))))))))) (= ($generated@@54 ($generated@@55 $generated@@252) $generated@@253) (ite ($generated@@58 $generated@@253) true (let (($generated@@257 ($generated@@50 $generated@@253)))
(let (($generated@@258 ($generated@@46 $generated@@253)))
(let (($generated@@259 ($generated@@42 $generated@@253)))
 (and (and (and ($generated@@54 $generated@@252 $generated@@258) ($generated@@54 $generated@@252 $generated@@257)) (or ($generated@@61 $generated@@258 $generated@@62) (<= $generated@@259 ($generated@@42 $generated@@258)))) (or ($generated@@61 $generated@@257 $generated@@62) (<= $generated@@259 ($generated@@42 $generated@@257)))))))))))
 :pattern ( ($generated@@54 ($generated@@55 $generated@@252) $generated@@253))
))))
(assert (= $generated@@62 ($generated@@56 $generated@@24 $generated@@62)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and ($generated@@244 $generated@@261) (and ($generated@@103 $generated@@260) ($generated@@124 $generated@@24 $generated@@260 $generated@@26 $generated@@261))) ($generated@@124 $generated@@24 ($generated@@46 $generated@@260) $generated@@26 $generated@@261))
 :pattern ( ($generated@@124 $generated@@24 ($generated@@46 $generated@@260) $generated@@26 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and ($generated@@244 $generated@@263) (and ($generated@@103 $generated@@262) ($generated@@124 $generated@@24 $generated@@262 $generated@@26 $generated@@263))) ($generated@@124 $generated@@24 ($generated@@50 $generated@@262) $generated@@26 $generated@@263))
 :pattern ( ($generated@@124 $generated@@24 ($generated@@50 $generated@@262) $generated@@26 $generated@@263))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@74 $generated@@9 ($generated@@13 ($generated@@59 $generated@@264))) ($generated@@56 $generated@@190 ($generated@@74 $generated@@9 ($generated@@13 $generated@@264))))
 :pattern ( ($generated@@74 $generated@@9 ($generated@@13 ($generated@@59 $generated@@264))))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@T) ) (! (= ($generated@@74 $generated@@266 ($generated@@56 $generated@@266 $generated@@265)) ($generated@@56 $generated@@190 ($generated@@74 $generated@@266 $generated@@265)))
 :pattern ( ($generated@@74 $generated@@266 ($generated@@56 $generated@@266 $generated@@265)))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (< 0 ($generated@@112 $generated@@267 $generated@@269)) (< 0 ($generated@@112 ($generated@@73 $generated@@267 $generated@@268) $generated@@269)))
 :pattern ( ($generated@@73 $generated@@267 $generated@@268) ($generated@@112 $generated@@267 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (= (< 0 ($generated@@112 ($generated@@73 $generated@@270 $generated@@271) $generated@@272))  (or (= $generated@@272 $generated@@271) (< 0 ($generated@@112 $generated@@270 $generated@@272))))
 :pattern ( ($generated@@112 ($generated@@73 $generated@@270 $generated@@271) $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (= ($generated@@139 $generated@@273 $generated@@274) (forall (($generated@@275 T@U) ) (! (= ($generated@@112 $generated@@273 $generated@@275) ($generated@@112 $generated@@274 $generated@@275))
 :pattern ( ($generated@@112 $generated@@273 $generated@@275))
 :pattern ( ($generated@@112 $generated@@274 $generated@@275))
)))
 :pattern ( ($generated@@139 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (! (= ($generated@@124 $generated@@33 $generated@@276 ($generated@@34 $generated@@277) $generated@@278) (forall (($generated@@279 T@U) ) (!  (=> (< 0 ($generated@@112 $generated@@276 $generated@@279)) ($generated@@123 $generated@@279 $generated@@277 $generated@@278))
 :pattern ( ($generated@@112 $generated@@276 $generated@@279))
)))
 :pattern ( ($generated@@124 $generated@@33 $generated@@276 ($generated@@34 $generated@@277) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! ($generated@@124 $generated@@9 $generated@@281 $generated $generated@@280)
 :pattern ( ($generated@@124 $generated@@9 $generated@@281 $generated $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! ($generated@@23 $generated@@9 $generated@@282 $generated)
 :pattern ( ($generated@@23 $generated@@9 $generated@@282 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 () Int)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 () Int)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 () T@U)
(declare-fun $generated@@293 () T@U)
(declare-fun $generated@@294 (T@U) Bool)
(declare-fun $generated@@295 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 70000000)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@296  (=> ($generated@@124 $generated@@24 $generated@@283 $generated@@26 $generated@@284) (=> (and ($generated@@57 $generated@@283) ($generated@@57 $generated@@283)) (and (=> (= (ControlFlow 0 10) (- 0 14)) (=> ($generated@@57 $generated@@283) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@283) (=> ($generated@@58 $generated@@283) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (=> ($generated@@57 $generated@@283) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@283) (=> (not ($generated@@58 $generated@@283)) (let (($generated@@297 ($generated@@46 $generated@@283)))
($generated@@54 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@297)))))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (=> ($generated@@57 $generated@@283) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@283) (=> (not ($generated@@58 $generated@@283)) (let (($generated@@298 ($generated@@50 $generated@@283)))
($generated@@54 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@298)))))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (=> ($generated@@57 $generated@@283) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@283) (=> (not ($generated@@58 $generated@@283)) (let (($generated@@299 ($generated@@46 $generated@@283)))
(let (($generated@@300 ($generated@@42 $generated@@283)))
 (or ($generated@@61 $generated@@299 $generated@@62) (<= $generated@@300 ($generated@@42 $generated@@299))))))))) (=> (= (ControlFlow 0 10) (- 0 9)) (=> ($generated@@57 $generated@@283) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@283) (=> (not ($generated@@58 $generated@@283)) (let (($generated@@301 ($generated@@50 $generated@@283)))
(let (($generated@@302 ($generated@@42 $generated@@283)))
 (or ($generated@@61 $generated@@301 $generated@@62) (<= $generated@@302 ($generated@@42 $generated@@301)))))))))))))))))
(let (($generated@@303  (=> (<= ($generated@@42 $generated@@286) $generated@@287) (and (=> (= (ControlFlow 0 22) (- 0 26)) ($generated@@103 $generated@@286)) (=> ($generated@@103 $generated@@286) (and (=> (= (ControlFlow 0 22) (- 0 25)) ($generated@@103 $generated@@286)) (=> ($generated@@103 $generated@@286) (=> (and (and (= $generated@@288 ($generated@@50 $generated@@286)) ($generated@@124 $generated@@24 $generated@@288 $generated@@26 $generated@@284)) (and ($generated@@124 $generated@@9 ($generated@@13 $generated@@287) $generated $generated@@284) ($generated@@98 ($generated@@50 $generated@@286) $generated@@287))) (and (=> (= (ControlFlow 0 22) (- 0 24)) ($generated@@103 $generated@@286)) (=> ($generated@@103 $generated@@286) (=> (and ($generated@@60 $generated@@283) ($generated@@98 ($generated@@50 $generated@@286) $generated@@287)) (and (=> (= (ControlFlow 0 22) (- 0 23)) ($generated@@61 $generated@@283 ($generated@@25 ($generated@@42 $generated@@286) ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) ($generated@@50 $generated@@286) $generated@@287) ($generated@@46 $generated@@286)))) (=> (and ($generated@@61 $generated@@283 ($generated@@25 ($generated@@42 $generated@@286) ($generated@@97 ($generated@@55 $generated@@285) ($generated@@50 $generated@@286) $generated@@287) ($generated@@46 $generated@@286))) (= (ControlFlow 0 22) 10)) $generated@@296)))))))))))))
(let (($generated@@304  (=> (< $generated@@287 ($generated@@42 $generated@@286)) (and (=> (= (ControlFlow 0 17) (- 0 21)) ($generated@@103 $generated@@286)) (=> ($generated@@103 $generated@@286) (=> (and (= $generated@@289 ($generated@@50 $generated@@286)) ($generated@@124 $generated@@24 $generated@@289 $generated@@26 $generated@@284)) (and (=> (= (ControlFlow 0 17) (- 0 20)) ($generated@@103 $generated@@286)) (=> ($generated@@103 $generated@@286) (=> (= $generated@@290 ($generated@@42 $generated@@286)) (=> (and ($generated@@124 $generated@@9 ($generated@@13 $generated@@290) $generated $generated@@284) ($generated@@98 ($generated@@50 $generated@@286) ($generated@@42 $generated@@286))) (and (=> (= (ControlFlow 0 17) (- 0 19)) ($generated@@103 $generated@@286)) (=> ($generated@@103 $generated@@286) (=> (and ($generated@@60 $generated@@283) ($generated@@98 ($generated@@50 $generated@@286) ($generated@@42 $generated@@286))) (and (=> (= (ControlFlow 0 17) (- 0 18)) ($generated@@61 $generated@@283 ($generated@@25 $generated@@287 ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) ($generated@@50 $generated@@286) ($generated@@42 $generated@@286)) ($generated@@46 $generated@@286)))) (=> (and ($generated@@61 $generated@@283 ($generated@@25 $generated@@287 ($generated@@97 ($generated@@55 $generated@@285) ($generated@@50 $generated@@286) ($generated@@42 $generated@@286)) ($generated@@46 $generated@@286))) (= (ControlFlow 0 17) 10)) $generated@@296)))))))))))))))
(let (($generated@@305  (=> (not ($generated@@61 $generated@@286 $generated@@62)) (and (=> (= (ControlFlow 0 27) (- 0 28)) ($generated@@103 $generated@@286)) (=> ($generated@@103 $generated@@286) (and (=> (= (ControlFlow 0 27) 17) $generated@@304) (=> (= (ControlFlow 0 27) 22) $generated@@303)))))))
(let (($generated@@306  (=> (and ($generated@@61 $generated@@286 $generated@@62) ($generated@@60 $generated@@283)) (and (=> (= (ControlFlow 0 15) (- 0 16)) ($generated@@61 $generated@@283 ($generated@@25 $generated@@287 ($generated@@56 $generated@@24 $generated@@62) ($generated@@56 $generated@@24 $generated@@62)))) (=> ($generated@@61 $generated@@283 ($generated@@25 $generated@@287 ($generated@@56 $generated@@24 $generated@@62) ($generated@@56 $generated@@24 $generated@@62))) (=> (= (ControlFlow 0 15) 10) $generated@@296))))))
(let (($generated@@307  (=> ($generated@@60 $generated@@286) (and (=> (= (ControlFlow 0 29) 15) $generated@@306) (=> (= (ControlFlow 0 29) 27) $generated@@305)))))
(let (($generated@@308  (and (=> (= (ControlFlow 0 2) (- 0 7)) (let (($generated@@309 ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@286 $generated@@287)))
 (=> ($generated@@57 $generated@@309) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@309) (=> ($generated@@58 $generated@@309) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 true)))))))) (=> (let (($generated@@310 ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@286 $generated@@287)))
 (=> ($generated@@57 $generated@@310) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@310) (=> ($generated@@58 $generated@@310) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (let (($generated@@311 ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@286 $generated@@287)))
 (=> ($generated@@57 $generated@@311) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@311) (=> (not ($generated@@58 $generated@@311)) (let (($generated@@312 ($generated@@46 $generated@@311)))
($generated@@54 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@312))))))) (=> (let (($generated@@313 ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@286 $generated@@287)))
 (=> ($generated@@57 $generated@@313) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@313) (=> (not ($generated@@58 $generated@@313)) (let (($generated@@314 ($generated@@46 $generated@@313)))
($generated@@54 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@314)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (let (($generated@@315 ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@286 $generated@@287)))
 (=> ($generated@@57 $generated@@315) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@315) (=> (not ($generated@@58 $generated@@315)) (let (($generated@@316 ($generated@@50 $generated@@315)))
($generated@@54 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@316))))))) (=> (let (($generated@@317 ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@286 $generated@@287)))
 (=> ($generated@@57 $generated@@317) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@317) (=> (not ($generated@@58 $generated@@317)) (let (($generated@@318 ($generated@@50 $generated@@317)))
($generated@@54 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@318)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (let (($generated@@319 ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@286 $generated@@287)))
 (=> ($generated@@57 $generated@@319) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@319) (=> (not ($generated@@58 $generated@@319)) (let (($generated@@320 ($generated@@46 $generated@@319)))
(let (($generated@@321 ($generated@@42 $generated@@319)))
 (or ($generated@@61 $generated@@320 $generated@@62) (<= $generated@@321 ($generated@@42 $generated@@320)))))))))) (=> (let (($generated@@322 ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@286 $generated@@287)))
 (=> ($generated@@57 $generated@@322) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@322) (=> (not ($generated@@58 $generated@@322)) (let (($generated@@323 ($generated@@46 $generated@@322)))
(let (($generated@@324 ($generated@@42 $generated@@322)))
 (or ($generated@@61 $generated@@323 $generated@@62) (<= $generated@@324 ($generated@@42 $generated@@323))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@325 ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@286 $generated@@287)))
 (=> ($generated@@57 $generated@@325) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@325) (=> (not ($generated@@58 $generated@@325)) (let (($generated@@326 ($generated@@50 $generated@@325)))
(let (($generated@@327 ($generated@@42 $generated@@325)))
 (or ($generated@@61 $generated@@326 $generated@@62) (<= $generated@@327 ($generated@@42 $generated@@326)))))))))) (=> (let (($generated@@328 ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@286 $generated@@287)))
 (=> ($generated@@57 $generated@@328) (or ($generated@@54 ($generated@@55 $generated@@285) $generated@@328) (=> (not ($generated@@58 $generated@@328)) (let (($generated@@329 ($generated@@50 $generated@@328)))
(let (($generated@@330 ($generated@@42 $generated@@328)))
 (or ($generated@@61 $generated@@329 $generated@@62) (<= $generated@@330 ($generated@@42 $generated@@329))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@331 ($generated@@97 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@286 $generated@@287)))
($generated@@139 ($generated@@31 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@331) ($generated@@72 ($generated@@31 ($generated@@55 ($generated@@55 $generated@@285)) $generated@@286) ($generated@@73 $generated@@71 ($generated@@74 $generated@@9 ($generated@@13 $generated@@287)))))))))))))))))))
(let (($generated@@332  (=> ($generated@@124 $generated@@24 $generated@@283 $generated@@26 $generated@@284) (=> (and (and ($generated@@57 $generated@@283) ($generated@@57 $generated@@283)) (and ($generated@@54 ($generated@@55 $generated@@285) $generated@@283) (= (ControlFlow 0 8) 2))) $generated@@308))))
(let (($generated@@333  (=> (and (= $generated@@291 ($generated@@188 $generated@@292 $generated@@293 $generated@@2 false)) ($generated@@60 $generated@@286)) (=> (and (and (and (and ($generated@@244 $generated@@284) ($generated@@294 $generated@@284)) (= $generated@@293 $generated@@284)) (and (forall (($generated@@334 T@U) ($generated@@335 Int) ) (!  (=> (and (and ($generated@@23 $generated@@24 $generated@@334 $generated@@26) ($generated@@54 ($generated@@55 $generated@@285) $generated@@334)) (or (< ($generated@@171 $generated@@334) ($generated@@171 $generated@@286)) (and (= ($generated@@171 $generated@@334) ($generated@@171 $generated@@286)) (and (<= 0 $generated@@335) (< $generated@@335 $generated@@287))))) (let (($generated@@336 ($generated@@97 ($generated@@55 $generated@@285) $generated@@334 $generated@@335)))
 (and ($generated@@54 ($generated@@55 $generated@@285) $generated@@336) ($generated@@139 ($generated@@31 ($generated@@55 $generated@@285) $generated@@336) ($generated@@72 ($generated@@31 ($generated@@55 $generated@@285) $generated@@334) ($generated@@73 $generated@@71 ($generated@@74 $generated@@9 ($generated@@13 $generated@@335))))))))
 :pattern ( ($generated@@72 ($generated@@31 ($generated@@55 $generated@@285) $generated@@334) ($generated@@73 $generated@@71 ($generated@@74 $generated@@9 ($generated@@13 $generated@@335)))))
 :pattern ( ($generated@@97 ($generated@@55 $generated@@285) $generated@@334 $generated@@335))
)) ($generated@@124 $generated@@24 $generated@@286 $generated@@26 $generated@@284))) (and (and ($generated@@124 $generated@@9 ($generated@@13 $generated@@287) $generated $generated@@284) ($generated@@98 $generated@@286 $generated@@287)) (and ($generated@@98 $generated@@286 $generated@@287) (= $generated@@283 ($generated@@97 ($generated@@55 $generated@@285) $generated@@286 $generated@@287))))) (and (=> (= (ControlFlow 0 30) 29) $generated@@307) (=> (= (ControlFlow 0 30) 8) $generated@@332))))))
(let (($generated@@337  (=> (and ($generated@@244 $generated@@293) ($generated@@294 $generated@@293)) (=> (and (and ($generated@@23 $generated@@24 $generated@@286 $generated@@26) ($generated@@124 $generated@@24 $generated@@286 $generated@@26 $generated@@293)) ($generated@@60 $generated@@286)) (=> (and (and (and (and ($generated@@23 $generated@@24 $generated@@295 $generated@@26) ($generated@@124 $generated@@24 $generated@@295 $generated@@26 $generated@@293)) true) (= 2 $generated@@30)) (and (and ($generated@@57 $generated@@286) (and ($generated@@54 ($generated@@55 $generated@@285) $generated@@286) (ite ($generated@@58 $generated@@286) true (let (($generated@@338 ($generated@@50 $generated@@286)))
(let (($generated@@339 ($generated@@46 $generated@@286)))
(let (($generated@@340 ($generated@@42 $generated@@286)))
 (and (and (and ($generated@@54 ($generated@@55 $generated@@285) $generated@@339) ($generated@@54 ($generated@@55 $generated@@285) $generated@@338)) (or ($generated@@61 $generated@@339 $generated@@62) (<= $generated@@340 ($generated@@42 $generated@@339)))) (or ($generated@@61 $generated@@338 $generated@@62) (<= $generated@@340 ($generated@@42 $generated@@338)))))))))) (= (ControlFlow 0 31) 30))) $generated@@333)))))
$generated@@337)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
