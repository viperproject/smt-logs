(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U T@U T@U) Bool)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@53 () Int)
(declare-fun $generated@@54 (T@U T@U T@U) Int)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@U T@U) Bool)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@73 (T@U T@U T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@105 (T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) Bool)
(declare-fun $generated@@110 (T@U T@U) Bool)
(declare-fun $generated@@111 () T@U)
(declare-fun $generated@@121 (T@T T@U) T@U)
(declare-fun $generated@@122 (T@T T@U) T@U)
(declare-fun $generated@@125 (T@U T@U) Bool)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@151 (T@U T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (Int Int) Int)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Int)
(declare-fun $generated@@199 (T@U) Int)
(declare-fun $generated@@212 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@213 () T@T)
(declare-fun $generated@@214 () T@T)
(declare-fun $generated@@215 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@216 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@217 (T@T T@T) T@T)
(declare-fun $generated@@218 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27) ($generated@@23 $generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (! ($generated@@29 ($generated@@28 $generated@@30 $generated@@31) $generated@@31)
 :pattern ( ($generated@@28 $generated@@30 $generated@@31))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@29 $generated@@32 $generated@@34) ($generated@@29 ($generated@@28 $generated@@32 $generated@@33) $generated@@34))
 :pattern ( ($generated@@28 $generated@@32 $generated@@33) ($generated@@29 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@29 $generated@@36 $generated@@38) ($generated@@29 ($generated@@35 $generated@@36 $generated@@37) $generated@@38))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37) ($generated@@29 $generated@@36 $generated@@38))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@29 $generated@@40 $generated@@41) ($generated@@29 ($generated@@35 $generated@@39 $generated@@40) $generated@@41))
 :pattern ( ($generated@@35 $generated@@39 $generated@@40) ($generated@@29 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! ($generated@@42 $generated@@9 $generated@@44 $generated@@43 $generated@@45)
 :pattern ( ($generated@@42 $generated@@9 $generated@@44 $generated@@43 $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@29 ($generated@@28 $generated@@46 $generated@@47) $generated@@48)  (or (= $generated@@48 $generated@@47) ($generated@@29 $generated@@46 $generated@@48)))
 :pattern ( ($generated@@29 ($generated@@28 $generated@@46 $generated@@47) $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@29 $generated@@51 $generated@@52) (not ($generated@@29 ($generated@@49 $generated@@50 $generated@@51) $generated@@52)))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51) ($generated@@29 $generated@@51 $generated@@52))
)))
(assert (= ($generated@@7 $generated@@56) 3))
(assert  (=> (<= 1 $generated@@53) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (or ($generated@@57 $generated@@63 ($generated@@55 $generated@@56 $generated@@65)) (and (< 1 $generated@@53) ($generated@@58 $generated@@56 $generated@@65 ($generated@@59 $generated@@63)))) (and (=> (not ($generated@@12 ($generated@@55 $generated@@8 ($generated@@11 ($generated@@60 ($generated@@55 $generated@@56 $generated@@65)))))) (let (($generated@@66 ($generated@@55 $generated@@56 ($generated@@61 ($generated@@55 $generated@@56 $generated@@65)))))
($generated@@57 $generated@@63 $generated@@66))) (= ($generated@@54 $generated@@63 ($generated@@24 $generated@@64) ($generated@@55 $generated@@56 $generated@@65)) (ite ($generated@@60 ($generated@@55 $generated@@56 $generated@@65)) 0 (let (($generated@@67 ($generated@@55 $generated@@56 ($generated@@61 ($generated@@55 $generated@@56 $generated@@65)))))
($generated@@62 (+ 1 ($generated@@54 $generated@@63 ($generated@@24 $generated@@64) $generated@@67))))))))
 :weight 3
 :pattern ( ($generated@@54 $generated@@63 ($generated@@24 $generated@@64) ($generated@@55 $generated@@56 $generated@@65)))
))))
(assert (forall (($generated@@69 T@U) ) (!  (not ($generated@@29 $generated@@68 $generated@@69))
 :pattern ( ($generated@@29 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@54 $generated@@70 ($generated@@24 $generated@@71) $generated@@72) ($generated@@54 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@54 $generated@@70 ($generated@@24 $generated@@71) $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@73 $generated@@74 ($generated@@24 $generated@@75) $generated@@76) ($generated@@73 $generated@@74 $generated@@75 $generated@@76))
 :pattern ( ($generated@@73 $generated@@74 ($generated@@24 $generated@@75) $generated@@76))
)))
(assert (= ($generated@@77 $generated@@78) $generated@@3))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@35 ($generated@@35 $generated@@79 $generated@@80) $generated@@80) ($generated@@35 $generated@@79 $generated@@80))
 :pattern ( ($generated@@35 ($generated@@35 $generated@@79 $generated@@80) $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@29 ($generated@@49 $generated@@81 $generated@@82) $generated@@83)  (and ($generated@@29 $generated@@81 $generated@@83) (not ($generated@@29 $generated@@82 $generated@@83))))
 :pattern ( ($generated@@29 ($generated@@49 $generated@@81 $generated@@82) $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> ($generated@@84 $generated@@86) ($generated@@42 $generated@@56 $generated@@78 ($generated@@59 $generated@@85) $generated@@86))
 :pattern ( ($generated@@42 $generated@@56 $generated@@78 ($generated@@59 $generated@@85) $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (! ($generated@@58 $generated@@56 $generated@@78 ($generated@@59 $generated@@87))
 :pattern ( ($generated@@58 $generated@@56 $generated@@78 ($generated@@59 $generated@@87)))
)))
(assert  (=> (<= 1 $generated@@53) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or ($generated@@88 $generated@@90 $generated@@92) (and (< 1 $generated@@53) ($generated@@58 $generated@@56 $generated@@92 ($generated@@59 $generated@@90)))) (and (=> (not ($generated@@60 $generated@@92)) (let (($generated@@93 ($generated@@61 $generated@@92)))
($generated@@88 $generated@@90 $generated@@93))) (= ($generated@@73 $generated@@90 ($generated@@24 $generated@@91) $generated@@92) (ite ($generated@@60 $generated@@92) $generated@@68 (let (($generated@@94 ($generated@@61 $generated@@92)))
(let (($generated@@95 ($generated@@89 $generated@@92)))
($generated@@35 ($generated@@28 $generated@@68 $generated@@95) ($generated@@73 $generated@@90 $generated@@91 $generated@@94))))))))
 :pattern ( ($generated@@73 $generated@@90 ($generated@@24 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@96 $generated@@97 $generated@@98) (= $generated@@97 $generated@@98))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (and ($generated@@99 $generated@@100) ($generated@@99 $generated@@101)) (= ($generated@@96 $generated@@100 $generated@@101)  (and (= ($generated@@89 $generated@@100) ($generated@@89 $generated@@101)) ($generated@@96 ($generated@@61 $generated@@100) ($generated@@61 $generated@@101)))))
 :pattern ( ($generated@@96 $generated@@100 $generated@@101) ($generated@@99 $generated@@100))
 :pattern ( ($generated@@96 $generated@@100 $generated@@101) ($generated@@99 $generated@@101))
)))
(assert (forall (($generated@@102 Int) ) (! (= ($generated@@62 $generated@@102) $generated@@102)
 :pattern ( ($generated@@62 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@55 $generated@@104 $generated@@103) $generated@@103)
 :pattern ( ($generated@@55 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@58 $generated@@56 ($generated@@105 $generated@@108 $generated@@109) ($generated@@59 $generated@@107))  (and ($generated@@106 $generated@@108 $generated@@107) ($generated@@58 $generated@@56 $generated@@109 ($generated@@59 $generated@@107))))
 :pattern ( ($generated@@58 $generated@@56 ($generated@@105 $generated@@108 $generated@@109) ($generated@@59 $generated@@107)))
)))
(assert  (=> (<= 2 $generated@@53) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or ($generated@@110 $generated@@112 $generated@@114) (and (< 2 $generated@@53) ($generated@@58 $generated@@56 $generated@@114 ($generated@@59 $generated@@112)))) (and (=> (not ($generated@@60 $generated@@114)) (let (($generated@@115 ($generated@@61 $generated@@114)))
(let (($generated@@116 ($generated@@89 $generated@@114)))
 (and ($generated@@88 $generated@@112 $generated@@115) (=> (not ($generated@@29 ($generated@@73 $generated@@112 ($generated@@24 $generated@@111) $generated@@115) $generated@@116)) ($generated@@110 $generated@@112 $generated@@115)))))) (= ($generated@@23 $generated@@112 ($generated@@24 $generated@@113) $generated@@114) (ite ($generated@@60 $generated@@114) true (let (($generated@@117 ($generated@@61 $generated@@114)))
(let (($generated@@118 ($generated@@89 $generated@@114)))
 (and (not ($generated@@29 ($generated@@73 $generated@@112 ($generated@@24 $generated@@111) $generated@@117) $generated@@118)) ($generated@@23 $generated@@112 $generated@@113 $generated@@117))))))))
 :pattern ( ($generated@@23 $generated@@112 ($generated@@24 $generated@@113) $generated@@114))
))))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@60 $generated@@119) (= ($generated@@77 $generated@@119) $generated@@3))
 :pattern ( ($generated@@60 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@99 $generated@@120) (= ($generated@@77 $generated@@120) $generated@@4))
 :pattern ( ($generated@@99 $generated@@120))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@122 $generated@@124 ($generated@@121 $generated@@124 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@121 $generated@@124 $generated@@123))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@125 $generated@@126 $generated@@127) (forall (($generated@@128 T@U) ) (!  (or (not ($generated@@29 $generated@@126 $generated@@128)) (not ($generated@@29 $generated@@127 $generated@@128)))
 :pattern ( ($generated@@29 $generated@@126 $generated@@128))
 :pattern ( ($generated@@29 $generated@@127 $generated@@128))
)))
 :pattern ( ($generated@@125 $generated@@126 $generated@@127))
)))
(assert (= ($generated@@7 $generated@@129) 4))
(assert  (=> (<= 1 $generated@@53) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or ($generated@@88 $generated@@130 ($generated@@55 $generated@@56 $generated@@132)) (and (< 1 $generated@@53) ($generated@@58 $generated@@56 $generated@@132 ($generated@@59 $generated@@130)))) (and (=> (not ($generated@@12 ($generated@@55 $generated@@8 ($generated@@11 ($generated@@60 ($generated@@55 $generated@@56 $generated@@132)))))) (let (($generated@@133 ($generated@@55 $generated@@56 ($generated@@61 ($generated@@55 $generated@@56 $generated@@132)))))
($generated@@88 $generated@@130 $generated@@133))) (= ($generated@@73 $generated@@130 ($generated@@24 $generated@@131) ($generated@@55 $generated@@56 $generated@@132)) (ite ($generated@@60 ($generated@@55 $generated@@56 $generated@@132)) $generated@@68 (let (($generated@@134 ($generated@@55 $generated@@56 ($generated@@61 ($generated@@55 $generated@@56 $generated@@132)))))
(let (($generated@@135 ($generated@@55 $generated@@129 ($generated@@89 ($generated@@55 $generated@@56 $generated@@132)))))
($generated@@35 ($generated@@28 $generated@@68 $generated@@135) ($generated@@73 $generated@@130 ($generated@@24 $generated@@131) $generated@@134))))))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@130 ($generated@@24 $generated@@131) ($generated@@55 $generated@@56 $generated@@132)))
))))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@99 $generated@@136) (exists (($generated@@137 T@U) ($generated@@138 T@U) ) (= $generated@@136 ($generated@@105 $generated@@137 $generated@@138))))
 :pattern ( ($generated@@99 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@60 $generated@@139) (= $generated@@139 $generated@@78))
 :pattern ( ($generated@@60 $generated@@139))
)))
(assert (= ($generated@@7 $generated@@140) 5))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@58 $generated@@140 $generated@@142 ($generated@@141 $generated@@143)) (forall (($generated@@144 T@U) ) (!  (=> ($generated@@29 $generated@@142 $generated@@144) ($generated@@106 $generated@@144 $generated@@143))
 :pattern ( ($generated@@29 $generated@@142 $generated@@144))
)))
 :pattern ( ($generated@@58 $generated@@140 $generated@@142 ($generated@@141 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@58 $generated@@9 $generated@@145 $generated@@43) (<= ($generated@@62 0) ($generated@@14 $generated@@145)))
 :pattern ( ($generated@@58 $generated@@9 $generated@@145 $generated@@43))
)))
(assert  (=> (<= 1 $generated@@53) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (or ($generated@@57 $generated@@146 $generated@@148) (and (< 1 $generated@@53) ($generated@@58 $generated@@56 $generated@@148 ($generated@@59 $generated@@146)))) (and (=> (not ($generated@@60 $generated@@148)) (let (($generated@@149 ($generated@@61 $generated@@148)))
($generated@@57 $generated@@146 $generated@@149))) (= ($generated@@54 $generated@@146 ($generated@@24 $generated@@147) $generated@@148) (ite ($generated@@60 $generated@@148) 0 (let (($generated@@150 ($generated@@61 $generated@@148)))
(+ 1 ($generated@@54 $generated@@146 $generated@@147 $generated@@150)))))))
 :pattern ( ($generated@@54 $generated@@146 ($generated@@24 $generated@@147) $generated@@148))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@151 ($generated@@122 $generated@@155 $generated@@152) $generated@@153 $generated@@154) ($generated@@42 $generated@@155 $generated@@152 $generated@@153 $generated@@154))
 :pattern ( ($generated@@151 ($generated@@122 $generated@@155 $generated@@152) $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@158 T@U) ) (!  (and (= ($generated@@156 ($generated@@59 $generated@@158)) $generated@@2) (= ($generated@@157 ($generated@@59 $generated@@158)) $generated@@6))
 :pattern ( ($generated@@59 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> ($generated@@106 $generated@@159 $generated@@43) (and (= ($generated@@122 $generated@@9 ($generated@@121 $generated@@9 $generated@@159)) $generated@@159) ($generated@@58 $generated@@9 ($generated@@121 $generated@@9 $generated@@159) $generated@@43)))
 :pattern ( ($generated@@106 $generated@@159 $generated@@43))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@29 ($generated@@35 $generated@@160 $generated@@161) $generated@@162)  (or ($generated@@29 $generated@@160 $generated@@162) ($generated@@29 $generated@@161 $generated@@162)))
 :pattern ( ($generated@@29 ($generated@@35 $generated@@160 $generated@@161) $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@125 $generated@@163 $generated@@164) (and (= ($generated@@49 ($generated@@35 $generated@@163 $generated@@164) $generated@@163) $generated@@164) (= ($generated@@49 ($generated@@35 $generated@@163 $generated@@164) $generated@@164) $generated@@163)))
 :pattern ( ($generated@@35 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> ($generated@@165 $generated@@166) (or ($generated@@60 $generated@@166) ($generated@@99 $generated@@166)))
 :pattern ( ($generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@58 $generated@@56 $generated@@168 ($generated@@59 $generated@@167)) (or ($generated@@60 $generated@@168) ($generated@@99 $generated@@168)))
 :pattern ( ($generated@@99 $generated@@168) ($generated@@58 $generated@@56 $generated@@168 ($generated@@59 $generated@@167)))
 :pattern ( ($generated@@60 $generated@@168) ($generated@@58 $generated@@56 $generated@@168 ($generated@@59 $generated@@167)))
)))
(assert (forall (($generated@@170 Int) ($generated@@171 Int) ) (! (= ($generated@@169 $generated@@170 $generated@@171) (div $generated@@170 $generated@@171))
 :pattern ( ($generated@@169 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@106 ($generated@@122 $generated@@174 $generated@@172) $generated@@173) ($generated@@58 $generated@@174 $generated@@172 $generated@@173))
 :pattern ( ($generated@@106 ($generated@@122 $generated@@174 $generated@@172) $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and ($generated@@60 $generated@@175) ($generated@@60 $generated@@176)) ($generated@@96 $generated@@175 $generated@@176))
 :pattern ( ($generated@@96 $generated@@175 $generated@@176) ($generated@@60 $generated@@175))
 :pattern ( ($generated@@96 $generated@@175 $generated@@176) ($generated@@60 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@42 $generated@@140 $generated@@177 ($generated@@141 $generated@@178) $generated@@179) (forall (($generated@@180 T@U) ) (!  (=> ($generated@@29 $generated@@177 $generated@@180) ($generated@@151 $generated@@180 $generated@@178 $generated@@179))
 :pattern ( ($generated@@29 $generated@@177 $generated@@180))
)))
 :pattern ( ($generated@@42 $generated@@140 $generated@@177 ($generated@@141 $generated@@178) $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@77 ($generated@@105 $generated@@181 $generated@@182)) $generated@@4)
 :pattern ( ($generated@@105 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@89 ($generated@@105 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@105 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@61 ($generated@@105 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@105 $generated@@185 $generated@@186))
)))
(assert  (=> (<= 1 $generated@@53) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (or ($generated@@88 $generated@@188 $generated@@190) (and (< 1 $generated@@53) (and ($generated@@58 $generated@@56 $generated@@190 ($generated@@59 $generated@@188)) ($generated@@42 $generated@@56 $generated@@190 ($generated@@59 $generated@@188) $generated@@187)))) ($generated@@84 $generated@@187)) ($generated@@42 $generated@@140 ($generated@@73 $generated@@188 $generated@@189 $generated@@190) ($generated@@141 $generated@@188) $generated@@187))
 :pattern ( ($generated@@42 $generated@@140 ($generated@@73 $generated@@188 $generated@@189 $generated@@190) ($generated@@141 $generated@@188) $generated@@187))
))))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@191 ($generated@@141 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@141 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ) (! (= ($generated@@156 ($generated@@141 $generated@@193)) $generated)
 :pattern ( ($generated@@141 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@194 ($generated@@59 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@59 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@T) ) (! (= ($generated@@121 $generated@@197 ($generated@@122 $generated@@197 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@122 $generated@@197 $generated@@196))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (< ($generated@@198 $generated@@200) ($generated@@199 ($generated@@105 $generated@@200 $generated@@201)))
 :pattern ( ($generated@@105 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (< ($generated@@199 $generated@@203) ($generated@@199 ($generated@@105 $generated@@202 $generated@@203)))
 :pattern ( ($generated@@105 $generated@@202 $generated@@203))
)))
(assert  (=> (<= 1 $generated@@53) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (or ($generated@@88 $generated@@204 $generated@@206) (and (< 1 $generated@@53) ($generated@@58 $generated@@56 $generated@@206 ($generated@@59 $generated@@204)))) ($generated@@58 $generated@@140 ($generated@@73 $generated@@204 $generated@@205 $generated@@206) ($generated@@141 $generated@@204)))
 :pattern ( ($generated@@73 $generated@@204 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@35 $generated@@207 ($generated@@35 $generated@@207 $generated@@208)) ($generated@@35 $generated@@207 $generated@@208))
 :pattern ( ($generated@@35 $generated@@207 ($generated@@35 $generated@@207 $generated@@208)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@84 $generated@@211) (and ($generated@@99 $generated@@209) ($generated@@42 $generated@@56 $generated@@209 ($generated@@59 $generated@@210) $generated@@211))) ($generated@@151 ($generated@@89 $generated@@209) $generated@@210 $generated@@211))
 :pattern ( ($generated@@151 ($generated@@89 $generated@@209) $generated@@210 $generated@@211))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@222 T@T) ($generated@@223 T@T) ($generated@@224 T@T) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@212 $generated@@222 $generated@@223 $generated@@224 ($generated@@218 $generated@@222 $generated@@223 $generated@@224 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@227 $generated@@228) $generated@@225)
 :weight 0
)) (and (forall (($generated@@229 T@T) ($generated@@230 T@T) ($generated@@231 T@T) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@212 $generated@@229 $generated@@230 $generated@@231 ($generated@@218 $generated@@229 $generated@@230 $generated@@231 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@212 $generated@@229 $generated@@230 $generated@@231 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@T) ($generated@@239 T@T) ($generated@@240 T@T) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (or (= $generated@@244 $generated@@246) (= ($generated@@212 $generated@@238 $generated@@239 $generated@@240 ($generated@@218 $generated@@238 $generated@@239 $generated@@240 $generated@@242 $generated@@243 $generated@@244 $generated@@241) $generated@@245 $generated@@246) ($generated@@212 $generated@@238 $generated@@239 $generated@@240 $generated@@242 $generated@@245 $generated@@246)))
 :weight 0
)))) (= ($generated@@7 $generated@@213) 6)) (= ($generated@@7 $generated@@214) 7)) (forall (($generated@@247 T@T) ($generated@@248 T@T) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (= ($generated@@216 $generated@@247 $generated@@248 ($generated@@219 $generated@@247 $generated@@248 $generated@@250 $generated@@251 $generated@@249) $generated@@251) $generated@@249)
 :weight 0
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or (= $generated@@256 $generated@@257) (= ($generated@@216 $generated@@252 $generated@@253 ($generated@@219 $generated@@252 $generated@@253 $generated@@255 $generated@@256 $generated@@254) $generated@@257) ($generated@@216 $generated@@252 $generated@@253 $generated@@255 $generated@@257)))
 :weight 0
))) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (= ($generated@@7 ($generated@@217 $generated@@258 $generated@@259)) 8))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= ($generated@@220 ($generated@@217 $generated@@260 $generated@@261)) $generated@@260)
 :pattern ( ($generated@@217 $generated@@260 $generated@@261))
))) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@221 ($generated@@217 $generated@@262 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@217 $generated@@262 $generated@@263))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Bool) ($generated@@268 T@U) ($generated@@269 T@U) ) (! (= ($generated@@12 ($generated@@212 $generated@@213 $generated@@214 $generated@@8 ($generated@@215 $generated@@264 $generated@@265 $generated@@266 $generated@@267) $generated@@268 $generated@@269))  (=> (and (or (not (= $generated@@268 $generated@@264)) (not true)) ($generated@@12 ($generated@@121 $generated@@8 ($generated@@216 $generated@@214 $generated@@129 ($generated@@216 $generated@@213 ($generated@@217 $generated@@214 $generated@@129) $generated@@265 $generated@@268) $generated@@266)))) $generated@@267))
 :pattern ( ($generated@@212 $generated@@213 $generated@@214 $generated@@8 ($generated@@215 $generated@@264 $generated@@265 $generated@@266 $generated@@267) $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@198 ($generated@@122 $generated@@56 $generated@@270)) ($generated@@199 $generated@@270))
 :pattern ( ($generated@@198 ($generated@@122 $generated@@56 $generated@@270)))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> ($generated@@106 $generated@@271 ($generated@@141 $generated@@272)) (and (= ($generated@@122 $generated@@140 ($generated@@121 $generated@@140 $generated@@271)) $generated@@271) ($generated@@58 $generated@@140 ($generated@@121 $generated@@140 $generated@@271) ($generated@@141 $generated@@272))))
 :pattern ( ($generated@@106 $generated@@271 ($generated@@141 $generated@@272)))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> ($generated@@106 $generated@@274 ($generated@@59 $generated@@273)) (and (= ($generated@@122 $generated@@56 ($generated@@121 $generated@@56 $generated@@274)) $generated@@274) ($generated@@58 $generated@@56 ($generated@@121 $generated@@56 $generated@@274) ($generated@@59 $generated@@273))))
 :pattern ( ($generated@@106 $generated@@274 ($generated@@59 $generated@@273)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and ($generated@@84 $generated@@277) (and ($generated@@99 $generated@@275) ($generated@@42 $generated@@56 $generated@@275 ($generated@@59 $generated@@276) $generated@@277))) ($generated@@42 $generated@@56 ($generated@@61 $generated@@275) ($generated@@59 $generated@@276) $generated@@277))
 :pattern ( ($generated@@42 $generated@@56 ($generated@@61 $generated@@275) ($generated@@59 $generated@@276) $generated@@277))
)))
(assert (= ($generated@@156 $generated@@43) $generated@@1))
(assert (= ($generated@@157 $generated@@43) $generated@@5))
(assert (= $generated@@78 ($generated@@55 $generated@@56 $generated@@78)))
(assert  (=> (<= 2 $generated@@53) (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (or ($generated@@110 $generated@@278 ($generated@@55 $generated@@56 $generated@@280)) (and (< 2 $generated@@53) ($generated@@58 $generated@@56 $generated@@280 ($generated@@59 $generated@@278)))) (and (=> (not ($generated@@12 ($generated@@55 $generated@@8 ($generated@@11 ($generated@@60 ($generated@@55 $generated@@56 $generated@@280)))))) (let (($generated@@281 ($generated@@55 $generated@@56 ($generated@@61 ($generated@@55 $generated@@56 $generated@@280)))))
(let (($generated@@282 ($generated@@55 $generated@@129 ($generated@@89 ($generated@@55 $generated@@56 $generated@@280)))))
 (and ($generated@@88 $generated@@278 $generated@@281) (=> (not ($generated@@29 ($generated@@73 $generated@@278 ($generated@@24 $generated@@111) $generated@@281) $generated@@282)) ($generated@@110 $generated@@278 $generated@@281)))))) (= ($generated@@23 $generated@@278 ($generated@@24 $generated@@279) ($generated@@55 $generated@@56 $generated@@280)) (ite ($generated@@60 ($generated@@55 $generated@@56 $generated@@280)) true (let (($generated@@283 ($generated@@55 $generated@@56 ($generated@@61 ($generated@@55 $generated@@56 $generated@@280)))))
(let (($generated@@284 ($generated@@55 $generated@@129 ($generated@@89 ($generated@@55 $generated@@56 $generated@@280)))))
 (and (not ($generated@@29 ($generated@@55 $generated@@140 ($generated@@73 $generated@@278 ($generated@@24 $generated@@111) $generated@@283)) $generated@@284)) ($generated@@23 $generated@@278 ($generated@@24 $generated@@279) $generated@@283))))))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@278 ($generated@@24 $generated@@279) ($generated@@55 $generated@@56 $generated@@280)))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= ($generated@@105 ($generated@@55 $generated@@129 $generated@@285) ($generated@@55 $generated@@56 $generated@@286)) ($generated@@55 $generated@@56 ($generated@@105 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@105 ($generated@@55 $generated@@129 $generated@@285) ($generated@@55 $generated@@56 $generated@@286)))
)))
(assert (forall (($generated@@287 Int) ) (! (= ($generated@@122 $generated@@9 ($generated@@13 ($generated@@62 $generated@@287))) ($generated@@55 $generated@@129 ($generated@@122 $generated@@9 ($generated@@13 $generated@@287))))
 :pattern ( ($generated@@122 $generated@@9 ($generated@@13 ($generated@@62 $generated@@287))))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@T) ) (! (= ($generated@@122 $generated@@289 ($generated@@55 $generated@@289 $generated@@288)) ($generated@@55 $generated@@129 ($generated@@122 $generated@@289 $generated@@288)))
 :pattern ( ($generated@@122 $generated@@289 ($generated@@55 $generated@@289 $generated@@288)))
)))
(assert  (=> (<= 1 $generated@@53) (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (or ($generated@@57 $generated@@290 $generated@@292) (and (< 1 $generated@@53) ($generated@@58 $generated@@56 $generated@@292 ($generated@@59 $generated@@290)))) (<= ($generated@@62 0) ($generated@@54 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@54 $generated@@290 $generated@@291 $generated@@292))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> ($generated@@84 $generated@@296) (= ($generated@@42 $generated@@56 ($generated@@105 $generated@@294 $generated@@295) ($generated@@59 $generated@@293) $generated@@296)  (and ($generated@@151 $generated@@294 $generated@@293 $generated@@296) ($generated@@42 $generated@@56 $generated@@295 ($generated@@59 $generated@@293) $generated@@296))))
 :pattern ( ($generated@@42 $generated@@56 ($generated@@105 $generated@@294 $generated@@295) ($generated@@59 $generated@@293) $generated@@296))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@297 () T@U)
(declare-fun $generated@@298 (T@U) Bool)
(declare-fun $generated@@299 () T@U)
(declare-fun $generated@@300 () Int)
(declare-fun $generated@@301 () Int)
(declare-fun $generated@@302 () T@U)
(declare-fun $generated@@303 () T@U)
(declare-fun $generated@@304 () T@U)
(declare-fun $generated@@305 () Int)
(declare-fun $generated@@306 () T@U)
(declare-fun $generated@@307 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 2) (let (($generated@@308  (=> (and ($generated@@84 $generated@@297) ($generated@@298 $generated@@297)) (=> (and (and (and (and (and ($generated@@58 $generated@@56 $generated@@299 ($generated@@59 $generated@@43)) ($generated@@42 $generated@@56 $generated@@299 ($generated@@59 $generated@@43) $generated@@297)) ($generated@@165 $generated@@299)) (and (<= ($generated@@62 0) $generated@@300) (<= ($generated@@62 0) $generated@@301))) (and (and (and ($generated@@58 $generated@@140 $generated@@302 ($generated@@141 $generated@@43)) ($generated@@42 $generated@@140 $generated@@302 ($generated@@141 $generated@@43) $generated@@297)) true) (= 4 $generated@@53))) (and (and (and (and ($generated@@110 $generated@@43 $generated@@299) (and ($generated@@23 $generated@@43 ($generated@@24 $generated@@111) $generated@@299) (ite ($generated@@60 $generated@@299) true (let (($generated@@309 ($generated@@61 $generated@@299)))
(let (($generated@@310 ($generated@@14 ($generated@@121 $generated@@9 ($generated@@89 $generated@@299)))))
 (and (not ($generated@@29 ($generated@@73 $generated@@43 ($generated@@24 $generated@@111) $generated@@309) ($generated@@122 $generated@@9 ($generated@@13 $generated@@310)))) ($generated@@23 $generated@@43 ($generated@@24 $generated@@111) $generated@@309))))))) (forall (($generated@@311 T@U) ) (!  (=> ($generated@@29 ($generated@@73 $generated@@43 ($generated@@24 $generated@@111) $generated@@299) ($generated@@122 $generated@@9 $generated@@311)) (<= $generated@@300 ($generated@@14 $generated@@311)))
 :pattern ( ($generated@@29 ($generated@@73 $generated@@43 ($generated@@24 $generated@@111) $generated@@299) ($generated@@122 $generated@@9 $generated@@311)))
))) (and (and (= $generated@@301 ($generated@@54 $generated@@43 ($generated@@24 ($generated@@24 $generated@@111)) $generated@@299)) (= $generated@@303 ($generated@@215 $generated@@304 $generated@@297 $generated@@0 false))) (and ($generated@@165 $generated@@299) (not ($generated@@96 $generated@@299 $generated@@78))))) (and (and (and (or (not (= ($generated@@62 2) 0)) (not true)) (= $generated@@305 (+ ($generated@@169 $generated@@301 ($generated@@62 2)) 1))) (and ($generated@@58 $generated@@56 $generated@@306 ($generated@@59 $generated@@43)) ($generated@@42 $generated@@56 $generated@@306 ($generated@@59 $generated@@43) $generated@@297))) (and (and ($generated@@58 $generated@@56 $generated@@307 ($generated@@59 $generated@@43)) ($generated@@42 $generated@@56 $generated@@307 ($generated@@59 $generated@@43) $generated@@297)) (and ($generated@@42 $generated@@56 $generated@@299 ($generated@@59 $generated@@43) $generated@@297) (= (ControlFlow 0 2) (- 0 1))))))) ($generated@@58 $generated@@9 ($generated@@13 (+ $generated@@300 $generated@@305)) $generated@@43)))))
$generated@@308))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
