(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@T T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (Int T@U T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@46 () Int)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U) Int)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@105 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@T T@T) T@T)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@T) T@T)
(declare-fun $generated@@160 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@6 $generated@@23) 3))
(assert (forall (($generated@@26 Int) ($generated@@27 T@U) ($generated@@28 T@U) ) (! (= ($generated@@22 $generated@@23 ($generated@@24 $generated@@26 $generated@@27 $generated@@28) $generated@@25)  (and (and ($generated@@22 $generated@@8 ($generated@@12 $generated@@26) $generated) ($generated@@22 $generated@@23 $generated@@27 $generated@@25)) ($generated@@22 $generated@@23 $generated@@28 $generated@@25)))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@24 $generated@@26 $generated@@27 $generated@@28) $generated@@25))
)))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (forall (($generated@@31 Int) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@30 ($generated@@24 $generated@@31 $generated@@32 $generated@@33)) $generated@@4)
 :pattern ( ($generated@@24 $generated@@31 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 Int) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@34 ($generated@@24 $generated@@35 $generated@@36 $generated@@37)) $generated@@35)
 :pattern ( ($generated@@24 $generated@@35 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@39 Int) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@38 ($generated@@24 $generated@@39 $generated@@40 $generated@@41)) $generated@@40)
 :pattern ( ($generated@@24 $generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 Int) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@42 ($generated@@24 $generated@@43 $generated@@44 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@24 $generated@@43 $generated@@44 $generated@@45))
)))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (or ($generated@@50 ($generated@@49 $generated@@23 $generated@@57)) (and (< 1 $generated@@46) ($generated@@22 $generated@@23 $generated@@57 $generated@@25))) (and (=> (not ($generated@@11 ($generated@@49 $generated@@7 ($generated@@10 ($generated@@51 ($generated@@49 $generated@@23 $generated@@57)))))) (let (($generated@@58 ($generated@@49 $generated@@23 ($generated@@42 ($generated@@49 $generated@@23 $generated@@57)))))
(let (($generated@@59 ($generated@@49 $generated@@23 ($generated@@38 ($generated@@49 $generated@@23 $generated@@57)))))
(let (($generated@@60 ($generated@@52 ($generated@@34 ($generated@@49 $generated@@23 $generated@@57)))))
 (and ($generated@@50 $generated@@59) (=> ($generated@@47 ($generated@@48 $generated@@56) $generated@@59) (and ($generated@@50 $generated@@58) (=> ($generated@@47 ($generated@@48 $generated@@56) $generated@@58) (and ($generated@@53 $generated@@59) (=> (or ($generated@@54 $generated@@59 $generated@@55) (<= $generated@@60 ($generated@@34 $generated@@59))) ($generated@@53 $generated@@58))))))))))) (= ($generated@@47 ($generated@@48 $generated@@56) ($generated@@49 $generated@@23 $generated@@57)) (ite ($generated@@51 ($generated@@49 $generated@@23 $generated@@57)) true (let (($generated@@61 ($generated@@49 $generated@@23 ($generated@@42 ($generated@@49 $generated@@23 $generated@@57)))))
(let (($generated@@62 ($generated@@49 $generated@@23 ($generated@@38 ($generated@@49 $generated@@23 $generated@@57)))))
(let (($generated@@63 ($generated@@52 ($generated@@34 ($generated@@49 $generated@@23 $generated@@57)))))
 (and (and (and ($generated@@47 ($generated@@48 $generated@@56) $generated@@62) ($generated@@47 ($generated@@48 $generated@@56) $generated@@61)) (or ($generated@@54 $generated@@62 $generated@@55) (<= $generated@@63 ($generated@@52 ($generated@@34 $generated@@62))))) (or ($generated@@54 $generated@@61 $generated@@55) (<= $generated@@63 ($generated@@52 ($generated@@34 $generated@@61))))))))))))
 :weight 3
 :pattern ( ($generated@@47 ($generated@@48 $generated@@56) ($generated@@49 $generated@@23 $generated@@57)))
))))
(assert (= ($generated@@30 $generated@@55) $generated@@3))
(assert ($generated@@22 $generated@@23 $generated@@55 $generated@@25))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@54 $generated@@64 $generated@@65) (= $generated@@64 $generated@@65))
 :pattern ( ($generated@@54 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@52 $generated@@66) $generated@@66)
 :pattern ( ($generated@@52 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@49 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@49 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@51 $generated@@69) (= ($generated@@30 $generated@@69) $generated@@3))
 :pattern ( ($generated@@51 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@70 $generated@@71) (= ($generated@@30 $generated@@71) $generated@@4))
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@72 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@72 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@70 $generated@@76) (exists (($generated@@77 Int) ($generated@@78 T@U) ($generated@@79 T@U) ) (= $generated@@76 ($generated@@24 $generated@@77 $generated@@78 $generated@@79))))
 :pattern ( ($generated@@70 $generated@@76))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@51 $generated@@80) (= $generated@@80 $generated@@55))
 :pattern ( ($generated@@51 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (and ($generated@@70 $generated@@81) ($generated@@70 $generated@@82)) (= ($generated@@54 $generated@@81 $generated@@82)  (and (and (= ($generated@@34 $generated@@81) ($generated@@34 $generated@@82)) ($generated@@54 ($generated@@38 $generated@@81) ($generated@@38 $generated@@82))) ($generated@@54 ($generated@@42 $generated@@81) ($generated@@42 $generated@@82)))))
 :pattern ( ($generated@@54 $generated@@81 $generated@@82) ($generated@@70 $generated@@81))
 :pattern ( ($generated@@54 $generated@@81 $generated@@82) ($generated@@70 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@53 $generated@@83) (or ($generated@@51 $generated@@83) ($generated@@70 $generated@@83)))
 :pattern ( ($generated@@53 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@22 $generated@@23 $generated@@84 $generated@@25) (or ($generated@@51 $generated@@84) ($generated@@70 $generated@@84)))
 :pattern ( ($generated@@70 $generated@@84) ($generated@@22 $generated@@23 $generated@@84 $generated@@25))
 :pattern ( ($generated@@51 $generated@@84) ($generated@@22 $generated@@23 $generated@@84 $generated@@25))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@47 ($generated@@48 $generated@@85) $generated@@86) ($generated@@47 $generated@@85 $generated@@86))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@85) $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (and ($generated@@51 $generated@@87) ($generated@@51 $generated@@88)) ($generated@@54 $generated@@87 $generated@@88))
 :pattern ( ($generated@@54 $generated@@87 $generated@@88) ($generated@@51 $generated@@87))
 :pattern ( ($generated@@54 $generated@@87 $generated@@88) ($generated@@51 $generated@@88))
)))
(assert (forall (($generated@@89 Int) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@24 ($generated@@52 $generated@@89) ($generated@@49 $generated@@23 $generated@@90) ($generated@@49 $generated@@23 $generated@@91)) ($generated@@49 $generated@@23 ($generated@@24 $generated@@89 $generated@@90 $generated@@91)))
 :pattern ( ($generated@@24 ($generated@@52 $generated@@89) ($generated@@49 $generated@@23 $generated@@90) ($generated@@49 $generated@@23 $generated@@91)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@72 $generated@@93 ($generated@@73 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@73 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@95 Int) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (< ($generated@@94 $generated@@96) ($generated@@94 ($generated@@24 $generated@@95 $generated@@96 $generated@@97)))
 :pattern ( ($generated@@24 $generated@@95 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 Int) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (< ($generated@@94 $generated@@100) ($generated@@94 ($generated@@24 $generated@@98 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@24 $generated@@98 $generated@@99 $generated@@100))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@101 $generated@@112 $generated@@113 $generated@@114 ($generated@@108 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@117 $generated@@118) $generated@@115)
 :weight 0
)) (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@101 $generated@@119 $generated@@120 $generated@@121 ($generated@@108 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@101 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@101 $generated@@128 $generated@@129 $generated@@130 ($generated@@108 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)))) (= ($generated@@6 $generated@@102) 4)) (= ($generated@@6 $generated@@103) 5)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@105 $generated@@137 $generated@@138 ($generated@@109 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@139) $generated@@141) $generated@@139)
 :weight 0
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@146 $generated@@147) (= ($generated@@105 $generated@@142 $generated@@143 ($generated@@109 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@105 $generated@@142 $generated@@143 $generated@@145 $generated@@147)))
 :weight 0
))) (= ($generated@@6 $generated@@106) 6)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (= ($generated@@6 ($generated@@107 $generated@@148 $generated@@149)) 7))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@110 ($generated@@107 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@107 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@111 ($generated@@107 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@107 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Bool) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@11 ($generated@@101 $generated@@102 $generated@@103 $generated@@7 ($generated@@104 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))  (=> (and (or (not (= $generated@@158 $generated@@154)) (not true)) ($generated@@11 ($generated@@72 $generated@@7 ($generated@@105 $generated@@103 $generated@@106 ($generated@@105 $generated@@102 ($generated@@107 $generated@@103 $generated@@106) $generated@@155 $generated@@158) $generated@@156)))) $generated@@157))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103 $generated@@7 ($generated@@104 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@161 $generated@@163) (and ($generated@@70 $generated@@162) ($generated@@160 $generated@@23 $generated@@162 $generated@@25 $generated@@163))) ($generated@@160 $generated@@8 ($generated@@12 ($generated@@34 $generated@@162)) $generated $generated@@163))
 :pattern ( ($generated@@160 $generated@@8 ($generated@@12 ($generated@@34 $generated@@162)) $generated $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@161 $generated@@165) ($generated@@22 $generated@@23 $generated@@164 $generated@@25)) ($generated@@160 $generated@@23 $generated@@164 $generated@@25 $generated@@165))
 :pattern ( ($generated@@160 $generated@@23 $generated@@164 $generated@@25 $generated@@165))
)))
(assert (= ($generated@@29 $generated@@25) $generated@@2))
(assert (= ($generated@@166 $generated@@25) $generated@@5))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (or ($generated@@50 $generated@@168) (and (< 1 $generated@@46) ($generated@@22 $generated@@23 $generated@@168 $generated@@25))) (and (=> (not ($generated@@51 $generated@@168)) (let (($generated@@169 ($generated@@42 $generated@@168)))
(let (($generated@@170 ($generated@@38 $generated@@168)))
(let (($generated@@171 ($generated@@34 $generated@@168)))
 (and ($generated@@50 $generated@@170) (=> ($generated@@47 $generated@@167 $generated@@170) (and ($generated@@50 $generated@@169) (=> ($generated@@47 $generated@@167 $generated@@169) (and ($generated@@53 $generated@@170) (=> (or ($generated@@54 $generated@@170 $generated@@55) (<= $generated@@171 ($generated@@34 $generated@@170))) ($generated@@53 $generated@@169))))))))))) (= ($generated@@47 ($generated@@48 $generated@@167) $generated@@168) (ite ($generated@@51 $generated@@168) true (let (($generated@@172 ($generated@@42 $generated@@168)))
(let (($generated@@173 ($generated@@38 $generated@@168)))
(let (($generated@@174 ($generated@@34 $generated@@168)))
 (and (and (and ($generated@@47 $generated@@167 $generated@@173) ($generated@@47 $generated@@167 $generated@@172)) (or ($generated@@54 $generated@@173 $generated@@55) (<= $generated@@174 ($generated@@34 $generated@@173)))) (or ($generated@@54 $generated@@172 $generated@@55) (<= $generated@@174 ($generated@@34 $generated@@172)))))))))))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@167) $generated@@168))
))))
(assert (= $generated@@55 ($generated@@49 $generated@@23 $generated@@55)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and ($generated@@161 $generated@@176) (and ($generated@@70 $generated@@175) ($generated@@160 $generated@@23 $generated@@175 $generated@@25 $generated@@176))) ($generated@@160 $generated@@23 ($generated@@38 $generated@@175) $generated@@25 $generated@@176))
 :pattern ( ($generated@@160 $generated@@23 ($generated@@38 $generated@@175) $generated@@25 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@161 $generated@@178) (and ($generated@@70 $generated@@177) ($generated@@160 $generated@@23 $generated@@177 $generated@@25 $generated@@178))) ($generated@@160 $generated@@23 ($generated@@42 $generated@@177) $generated@@25 $generated@@178))
 :pattern ( ($generated@@160 $generated@@23 ($generated@@42 $generated@@177) $generated@@25 $generated@@178))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@73 $generated@@8 ($generated@@12 ($generated@@52 $generated@@179))) ($generated@@49 $generated@@106 ($generated@@73 $generated@@8 ($generated@@12 $generated@@179))))
 :pattern ( ($generated@@73 $generated@@8 ($generated@@12 ($generated@@52 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@73 $generated@@181 ($generated@@49 $generated@@181 $generated@@180)) ($generated@@49 $generated@@106 ($generated@@73 $generated@@181 $generated@@180)))
 :pattern ( ($generated@@73 $generated@@181 ($generated@@49 $generated@@181 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! ($generated@@160 $generated@@8 $generated@@183 $generated $generated@@182)
 :pattern ( ($generated@@160 $generated@@8 $generated@@183 $generated $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@22 $generated@@8 $generated@@184 $generated)
 :pattern ( ($generated@@22 $generated@@8 $generated@@184 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@190  (=> ($generated@@50 ($generated@@49 $generated@@23 $generated@@55)) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> ($generated@@50 ($generated@@49 $generated@@23 $generated@@55)) (or ($generated@@11 ($generated@@49 $generated@@7 ($generated@@10 ($generated@@47 ($generated@@48 $generated@@185) ($generated@@49 $generated@@23 $generated@@55))))) (=> ($generated@@11 ($generated@@49 $generated@@7 ($generated@@10 ($generated@@51 ($generated@@49 $generated@@23 $generated@@55))))) ($generated@@11 ($generated@@49 $generated@@7 ($generated@@10 true))))))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@50 ($generated@@49 $generated@@23 $generated@@55)) (or ($generated@@11 ($generated@@49 $generated@@7 ($generated@@10 ($generated@@47 ($generated@@48 $generated@@185) ($generated@@49 $generated@@23 $generated@@55))))) (=> (not ($generated@@11 ($generated@@49 $generated@@7 ($generated@@10 ($generated@@51 ($generated@@49 $generated@@23 $generated@@55)))))) (let (($generated@@191 ($generated@@49 $generated@@23 ($generated@@38 ($generated@@49 $generated@@23 $generated@@55)))))
($generated@@47 ($generated@@48 ($generated@@48 $generated@@185)) $generated@@191)))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@50 ($generated@@49 $generated@@23 $generated@@55)) (or ($generated@@11 ($generated@@49 $generated@@7 ($generated@@10 ($generated@@47 ($generated@@48 $generated@@185) ($generated@@49 $generated@@23 $generated@@55))))) (=> (not ($generated@@11 ($generated@@49 $generated@@7 ($generated@@10 ($generated@@51 ($generated@@49 $generated@@23 $generated@@55)))))) (let (($generated@@192 ($generated@@49 $generated@@23 ($generated@@42 ($generated@@49 $generated@@23 $generated@@55)))))
($generated@@47 ($generated@@48 ($generated@@48 $generated@@185)) $generated@@192)))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@50 ($generated@@49 $generated@@23 $generated@@55)) (or ($generated@@11 ($generated@@49 $generated@@7 ($generated@@10 ($generated@@47 ($generated@@48 $generated@@185) ($generated@@49 $generated@@23 $generated@@55))))) (=> (not ($generated@@11 ($generated@@49 $generated@@7 ($generated@@10 ($generated@@51 ($generated@@49 $generated@@23 $generated@@55)))))) (let (($generated@@193 ($generated@@49 $generated@@23 ($generated@@38 ($generated@@49 $generated@@23 $generated@@55)))))
(let (($generated@@194 ($generated@@52 ($generated@@34 ($generated@@49 $generated@@23 $generated@@55)))))
 (or ($generated@@54 $generated@@193 $generated@@55) (<= $generated@@194 ($generated@@34 $generated@@193))))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@50 ($generated@@49 $generated@@23 $generated@@55)) (or ($generated@@11 ($generated@@49 $generated@@7 ($generated@@10 ($generated@@47 ($generated@@48 $generated@@185) ($generated@@49 $generated@@23 $generated@@55))))) (=> (not ($generated@@11 ($generated@@49 $generated@@7 ($generated@@10 ($generated@@51 ($generated@@49 $generated@@23 $generated@@55)))))) (let (($generated@@195 ($generated@@49 $generated@@23 ($generated@@42 ($generated@@49 $generated@@23 $generated@@55)))))
(let (($generated@@196 ($generated@@52 ($generated@@34 ($generated@@49 $generated@@23 $generated@@55)))))
 (or ($generated@@54 $generated@@195 $generated@@55) (<= $generated@@196 ($generated@@34 $generated@@195))))))))))))))))
(let (($generated@@197 true))
(let (($generated@@198  (=> (= $generated@@186 ($generated@@104 $generated@@187 $generated@@188 $generated@@1 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@197) (=> (= (ControlFlow 0 8) 3) $generated@@190)))))
(let (($generated@@199  (=> (and (and ($generated@@161 $generated@@188) ($generated@@189 $generated@@188)) (and (= 2 $generated@@46) (= (ControlFlow 0 9) 8))) $generated@@198)))
$generated@@199)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
