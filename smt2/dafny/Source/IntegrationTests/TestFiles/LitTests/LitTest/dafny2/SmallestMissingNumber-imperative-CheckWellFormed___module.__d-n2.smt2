(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 () Int)
(declare-fun $generated@@89 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@128 (T@U) Int)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@1) 0))
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@27)) (not true)) (= ($generated@@28 $generated@@31) ($generated@@26 $generated@@30))) ($generated@@29 $generated@@9 ($generated@@13 ($generated@@25 $generated@@31)) $generated))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! ($generated@@32 $generated@@9 $generated@@34 $generated@@33 $generated@@35)
 :pattern ( ($generated@@32 $generated@@9 $generated@@34 $generated@@33 $generated@@35))
)))
(assert (= ($generated@@7 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40) ($generated@@32 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
 :pattern ( ($generated@@32 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
 :pattern ( ($generated@@32 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@42 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@42 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@42 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@7 $generated@@43) 4)) (= ($generated@@7 $generated@@44) 5)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@7 ($generated@@45 $generated@@60 $generated@@61)) 6))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@45 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@67 ($generated@@26 $generated@@66) $generated@@68)  (or (= $generated@@67 $generated@@27) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@68 $generated@@67) $generated@@1)))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@67 ($generated@@26 $generated@@66) $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@69 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@70 $generated@@72) $generated@@1))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@71 $generated@@72) $generated@@1))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@71 $generated@@72) $generated@@1))
)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 Int) ) (! (= ($generated@@73 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 Int) ) (!  (=> (and (and (and ($generated@@79 $generated@@82) (and (or (not (= $generated@@83 $generated@@27)) (not true)) (= ($generated@@28 $generated@@83) ($generated@@26 $generated@@81)))) (and (<= 0 $generated@@84) (< $generated@@84 ($generated@@25 $generated@@83)))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@83) $generated@@1)))) ($generated@@80 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@83) ($generated@@78 $generated@@84)) $generated@@81 $generated@@82))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@83) ($generated@@78 $generated@@84)) ($generated@@26 $generated@@81))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@41 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@41 $generated@@87 $generated@@86))
)))
(assert  (=> (<= 0 $generated@@88) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or ($generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@95) (and (< 0 $generated@@88) (and (and ($generated@@79 $generated@@93) ($generated@@29 $generated@@36 $generated@@94 ($generated@@37 $generated@@92))) ($generated@@91 $generated@@95 $generated@@92)))) (= ($generated@@89 $generated@@92 $generated@@93 $generated@@94 $generated@@95) (exists (($generated@@96 Int) ) (!  (and (and (<= ($generated@@73 0) $generated@@96) (< $generated@@96 ($generated@@25 $generated@@94))) (= ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@93 $generated@@94) ($generated@@78 $generated@@96)) $generated@@95))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@93 $generated@@94) ($generated@@78 $generated@@96)))
))))
 :pattern ( ($generated@@89 $generated@@92 $generated@@93 $generated@@94 $generated@@95) ($generated@@79 $generated@@93))
))))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@29 $generated@@9 $generated@@97 $generated@@33) (<= ($generated@@73 0) ($generated@@14 $generated@@97)))
 :pattern ( ($generated@@29 $generated@@9 $generated@@97 $generated@@33))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@99 ($generated@@37 $generated@@98))  (and ($generated@@29 $generated@@36 $generated@@99 ($generated@@26 $generated@@98)) (or (not (= $generated@@99 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@99 ($generated@@37 $generated@@98)))
 :pattern ( ($generated@@29 $generated@@36 $generated@@99 ($generated@@26 $generated@@98)))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@80 ($generated@@85 $generated@@103 $generated@@100) $generated@@101 $generated@@102) ($generated@@32 $generated@@103 $generated@@100 $generated@@101 $generated@@102))
 :pattern ( ($generated@@80 ($generated@@85 $generated@@103 $generated@@100) $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@69 $generated@@104 $generated@@105) (=> ($generated@@80 $generated@@106 $generated@@107 $generated@@104) ($generated@@80 $generated@@106 $generated@@107 $generated@@105)))
 :pattern ( ($generated@@69 $generated@@104 $generated@@105) ($generated@@80 $generated@@106 $generated@@107 $generated@@104))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (!  (=> ($generated@@69 $generated@@108 $generated@@109) (=> ($generated@@32 $generated@@112 $generated@@110 $generated@@111 $generated@@108) ($generated@@32 $generated@@112 $generated@@110 $generated@@111 $generated@@109)))
 :pattern ( ($generated@@69 $generated@@108 $generated@@109) ($generated@@32 $generated@@112 $generated@@110 $generated@@111 $generated@@108))
)))
(assert (forall (($generated@@114 T@U) ) (!  (and (= ($generated@@24 ($generated@@26 $generated@@114)) $generated@@3) (= ($generated@@113 ($generated@@26 $generated@@114)) $generated@@6))
 :pattern ( ($generated@@26 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (!  (and (= ($generated@@24 ($generated@@37 $generated@@115)) $generated@@4) (= ($generated@@113 ($generated@@37 $generated@@115)) $generated@@6))
 :pattern ( ($generated@@37 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@91 $generated@@116 $generated@@33) (and (= ($generated@@85 $generated@@9 ($generated@@41 $generated@@9 $generated@@116)) $generated@@116) ($generated@@29 $generated@@9 ($generated@@41 $generated@@9 $generated@@116) $generated@@33)))
 :pattern ( ($generated@@91 $generated@@116 $generated@@33))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@118 ($generated@@26 $generated@@117))  (or (= $generated@@118 $generated@@27) (= ($generated@@28 $generated@@118) ($generated@@26 $generated@@117))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@118 ($generated@@26 $generated@@117)))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or (not (= $generated@@119 $generated@@121)) (not true)) (=> (and ($generated@@69 $generated@@119 $generated@@120) ($generated@@69 $generated@@120 $generated@@121)) ($generated@@69 $generated@@119 $generated@@121)))
 :pattern ( ($generated@@69 $generated@@119 $generated@@120) ($generated@@69 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@91 $generated@@122 $generated) (and (= ($generated@@85 $generated@@9 ($generated@@41 $generated@@9 $generated@@122)) $generated@@122) ($generated@@29 $generated@@9 ($generated@@41 $generated@@9 $generated@@122) $generated)))
 :pattern ( ($generated@@91 $generated@@122 $generated))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@91 ($generated@@85 $generated@@125 $generated@@123) $generated@@124) ($generated@@29 $generated@@125 $generated@@123 $generated@@124))
 :pattern ( ($generated@@91 ($generated@@85 $generated@@125 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (<= 0 ($generated@@25 $generated@@126))
 :pattern ( ($generated@@25 $generated@@126))
)))
(assert (forall (($generated@@127 Int) ) (! (= ($generated@@23 ($generated@@78 $generated@@127)) 1)
 :pattern ( ($generated@@78 $generated@@127))
)))
(assert (forall (($generated@@129 Int) ) (! (= ($generated@@128 ($generated@@78 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@78 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@26 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@26 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@37 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@37 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@41 $generated@@135 ($generated@@85 $generated@@135 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@85 $generated@@135 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and ($generated@@79 $generated@@137) (and (or (not (= $generated@@138 $generated@@27)) (not true)) (= ($generated@@28 $generated@@138) ($generated@@26 $generated@@136)))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@137 $generated@@138) $generated@@1)))) ($generated@@32 $generated@@9 ($generated@@13 ($generated@@25 $generated@@138)) $generated $generated@@137))
 :pattern ( ($generated@@25 $generated@@138) ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@137 $generated@@138) $generated@@1)) ($generated@@26 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 Int) ) (!  (=> (and (and ($generated@@79 $generated@@140) (and (or (not (= $generated@@141 $generated@@27)) (not true)) (= ($generated@@28 $generated@@141) ($generated@@26 $generated@@139)))) (and (<= 0 $generated@@142) (< $generated@@142 ($generated@@25 $generated@@141)))) ($generated@@91 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@140 $generated@@141) ($generated@@78 $generated@@142)) $generated@@139))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@140 $generated@@141) ($generated@@78 $generated@@142)) ($generated@@26 $generated@@139))
)))
(assert  (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@143 $generated@@146 $generated@@147 $generated@@148 ($generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@143 $generated@@153 $generated@@154 $generated@@155 ($generated@@145 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@143 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@143 $generated@@162 $generated@@163 $generated@@164 ($generated@@145 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@143 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@12 ($generated@@143 $generated@@36 $generated@@43 $generated@@8 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@143 $generated@@36 $generated@@43 $generated@@8 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and ($generated@@79 $generated@@179) ($generated@@79 $generated@@180)) (or ($generated@@90 $generated@@178 $generated@@179 $generated@@181 $generated@@182) (and ($generated@@29 $generated@@36 $generated@@181 ($generated@@37 $generated@@178)) ($generated@@91 $generated@@182 $generated@@178)))) (and ($generated@@177 $generated@@179) ($generated@@69 $generated@@179 $generated@@180))) (=> (forall (($generated@@183 T@U) ($generated@@184 T@U) )  (=> (and (or (not (= $generated@@183 $generated@@27)) (not true)) (= $generated@@183 $generated@@181)) (= ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@179 $generated@@183) $generated@@184) ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@180 $generated@@183) $generated@@184)))) (= ($generated@@89 $generated@@178 $generated@@179 $generated@@181 $generated@@182) ($generated@@89 $generated@@178 $generated@@180 $generated@@181 $generated@@182))))
 :pattern ( ($generated@@177 $generated@@179) ($generated@@69 $generated@@179 $generated@@180) ($generated@@89 $generated@@178 $generated@@180 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@91 $generated@@186 ($generated@@26 $generated@@185)) (and (= ($generated@@85 $generated@@36 ($generated@@41 $generated@@36 $generated@@186)) $generated@@186) ($generated@@29 $generated@@36 ($generated@@41 $generated@@36 $generated@@186) ($generated@@26 $generated@@185))))
 :pattern ( ($generated@@91 $generated@@186 ($generated@@26 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@91 $generated@@188 ($generated@@37 $generated@@187)) (and (= ($generated@@85 $generated@@36 ($generated@@41 $generated@@36 $generated@@188)) $generated@@188) ($generated@@29 $generated@@36 ($generated@@41 $generated@@36 $generated@@188) ($generated@@37 $generated@@187))))
 :pattern ( ($generated@@91 $generated@@188 ($generated@@37 $generated@@187)))
)))
(assert (= ($generated@@24 $generated@@33) $generated@@2))
(assert (= ($generated@@113 $generated@@33) $generated@@5))
(assert (forall (($generated@@189 Int) ) (! (= ($generated@@85 $generated@@9 ($generated@@13 ($generated@@73 $generated@@189))) ($generated@@75 $generated@@44 ($generated@@85 $generated@@9 ($generated@@13 $generated@@189))))
 :pattern ( ($generated@@85 $generated@@9 ($generated@@13 ($generated@@73 $generated@@189))))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@T) ) (! (= ($generated@@85 $generated@@191 ($generated@@75 $generated@@191 $generated@@190)) ($generated@@75 $generated@@44 ($generated@@85 $generated@@191 $generated@@190)))
 :pattern ( ($generated@@85 $generated@@191 ($generated@@75 $generated@@191 $generated@@190)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! ($generated@@32 $generated@@9 $generated@@193 $generated $generated@@192)
 :pattern ( ($generated@@32 $generated@@9 $generated@@193 $generated $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! ($generated@@29 $generated@@9 $generated@@194 $generated)
 :pattern ( ($generated@@29 $generated@@9 $generated@@194 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@203 true))
(let (($generated@@204  (=> (and (and (<= ($generated@@73 0) $generated@@195) (< $generated@@195 $generated@@196)) ($generated@@32 $generated@@36 $generated@@197 ($generated@@37 $generated@@33) $generated@@198)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@29 $generated@@9 ($generated@@13 $generated@@195) $generated@@33)) (=> ($generated@@29 $generated@@9 ($generated@@13 $generated@@195) $generated@@33) (=> (and (and ($generated@@32 $generated@@9 ($generated@@13 $generated@@195) $generated@@33 $generated@@198) ($generated@@90 $generated@@33 $generated@@198 $generated@@197 ($generated@@85 $generated@@9 ($generated@@13 $generated@@195)))) (and ($generated@@89 $generated@@33 $generated@@198 $generated@@197 ($generated@@85 $generated@@9 ($generated@@13 $generated@@195))) (= (ControlFlow 0 3) 1))) $generated@@203))))))
(let (($generated@@205  (=> (and (< $generated@@195 ($generated@@73 0)) (= (ControlFlow 0 6) 3)) $generated@@204)))
(let (($generated@@206  (=> (and (<= ($generated@@73 0) $generated@@195) (= (ControlFlow 0 5) 3)) $generated@@204)))
(let (($generated@@207  (=> (and (=> (and (<= ($generated@@73 0) $generated@@195) (< $generated@@195 $generated@@196)) ($generated@@89 $generated@@33 $generated@@198 $generated@@197 ($generated@@85 $generated@@9 ($generated@@13 $generated@@195)))) (= (ControlFlow 0 2) 1)) $generated@@203)))
(let (($generated@@208  (=> (forall (($generated@@209 Int) ) (!  (=> (and (<= ($generated@@73 0) $generated@@209) (< $generated@@209 ($generated@@25 $generated@@197))) (or (not (= ($generated@@14 ($generated@@41 $generated@@9 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@198 $generated@@197) ($generated@@78 $generated@@209)))) $generated@@196)) (not true)))
 :pattern ( ($generated@@41 $generated@@9 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@198 $generated@@197) ($generated@@78 $generated@@209))))
)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@207) (=> (= (ControlFlow 0 7) 5) $generated@@206)) (=> (= (ControlFlow 0 7) 6) $generated@@205)))))
(let (($generated@@210  (=> (and (<= ($generated@@73 0) $generated@@199) (< $generated@@199 ($generated@@25 $generated@@197))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (or (not (= $generated@@197 $generated@@27)) (not true))) (=> (or (not (= $generated@@197 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@25 $generated@@197)))) (=> (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@25 $generated@@197))) (=> (and (or (not (= ($generated@@14 ($generated@@41 $generated@@9 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@198 $generated@@197) ($generated@@78 $generated@@199)))) $generated@@196)) (not true)) (= (ControlFlow 0 9) 7)) $generated@@208))))))))
(let (($generated@@211  (=> (and (< $generated@@199 ($generated@@73 0)) (= (ControlFlow 0 14) 9)) $generated@@210)))
(let (($generated@@212  (=> (<= ($generated@@73 0) $generated@@199) (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (not (= $generated@@197 $generated@@27)) (not true))) (=> (or (not (= $generated@@197 $generated@@27)) (not true)) (=> (= (ControlFlow 0 12) 9) $generated@@210))))))
(let (($generated@@213  (=> (and (=> (and (<= ($generated@@73 0) $generated@@199) (< $generated@@199 ($generated@@25 $generated@@197))) (or (not (= ($generated@@14 ($generated@@41 $generated@@9 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@198 $generated@@197) ($generated@@78 $generated@@199)))) $generated@@196)) (not true))) (= (ControlFlow 0 8) 7)) $generated@@208)))
(let (($generated@@214  (=> (= $generated@@200 ($generated@@144 $generated@@27 $generated@@201 $generated@@1 false)) (=> (and (and (and ($generated@@79 $generated@@198) ($generated@@177 $generated@@198)) (forall (($generated@@215 T@U) ) (!  (=> (and (or (not (= $generated@@215 $generated@@27)) (not true)) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@201 $generated@@215) $generated@@1)))) (= ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@198 $generated@@215) ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@201 $generated@@215)))
 :pattern ( ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@198 $generated@@215))
))) (and ($generated@@69 $generated@@201 $generated@@198) (<= ($generated@@73 0) $generated@@196))) (and (and (=> (= (ControlFlow 0 15) 8) $generated@@213) (=> (= (ControlFlow 0 15) 12) $generated@@212)) (=> (= (ControlFlow 0 15) 14) $generated@@211))))))
(let (($generated@@216  (=> (and ($generated@@79 $generated@@201) ($generated@@177 $generated@@201)) (=> (and (and (and ($generated@@29 $generated@@36 $generated@@197 ($generated@@37 $generated@@33)) ($generated@@32 $generated@@36 $generated@@197 ($generated@@37 $generated@@33) $generated@@201)) (<= ($generated@@73 0) $generated@@202)) (and (= 2 $generated@@88) (= (ControlFlow 0 16) 15))) $generated@@214))))
$generated@@216)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
