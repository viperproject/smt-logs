(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 () Int)
(declare-fun $generated@@39 (T@U T@U Int Int Int) Bool)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U Int Int Int) Bool)
(declare-fun $generated@@42 (Int) Int)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (Int) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@3) 0))
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@27)) (not true)) (= ($generated@@28 $generated@@31) ($generated@@26 $generated@@30))) ($generated@@29 $generated@@9 ($generated@@13 ($generated@@25 $generated@@31)) $generated@@0))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@30))
)))
(assert (= ($generated@@7 $generated@@33) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35) $generated@@37) ($generated@@32 $generated@@33 $generated@@36 ($generated@@26 $generated@@35) $generated@@37))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 ($generated@@26 $generated@@35) $generated@@37))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@44 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@44 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@44 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@7 $generated@@45) 4)) (= ($generated@@7 $generated@@46) 5)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@7 ($generated@@47 $generated@@63 $generated@@64)) 6))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@47 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@47 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@47 $generated@@67 $generated@@68))
))))
(assert  (=> (<= 0 $generated@@38) (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 Int) ($generated@@72 Int) ($generated@@73 Int) ) (!  (=> (or ($generated@@41 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73) (and (< 0 $generated@@38) (and (and ($generated@@40 $generated@@69) ($generated@@29 $generated@@33 $generated@@70 ($generated@@34 $generated@@0))) (and (and (and (<= ($generated@@42 0) $generated@@71) (<= $generated@@71 $generated@@72)) (< $generated@@72 $generated@@73)) (<= $generated@@73 ($generated@@25 $generated@@70)))))) (= ($generated@@39 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73)  (and (forall (($generated@@74 Int) ) (!  (=> (and (<= $generated@@71 $generated@@74) (< $generated@@74 $generated@@72)) (<= ($generated@@14 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@70) ($generated@@48 $generated@@74)))) ($generated@@14 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@70) ($generated@@48 $generated@@72))))))
 :pattern ( ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@70) ($generated@@48 $generated@@74))))
)) (forall (($generated@@75 Int) ) (!  (=> (and (< $generated@@72 $generated@@75) (< $generated@@75 $generated@@73)) (< ($generated@@14 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@70) ($generated@@48 $generated@@75)))) ($generated@@14 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@70) ($generated@@48 $generated@@72))))))
 :pattern ( ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@70) ($generated@@48 $generated@@75))))
)))))
 :pattern ( ($generated@@39 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73) ($generated@@40 $generated@@69))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@77 ($generated@@26 $generated@@76) $generated@@78)  (or (= $generated@@77 $generated@@27) ($generated@@12 ($generated@@43 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@78 $generated@@77) $generated@@3)))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@77 ($generated@@26 $generated@@76) $generated@@78))
)))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@42 $generated@@79) $generated@@79)
 :pattern ( ($generated@@42 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 Int) ) (!  (=> (and (and (and ($generated@@40 $generated@@85) (and (or (not (= $generated@@86 $generated@@27)) (not true)) (= ($generated@@28 $generated@@86) ($generated@@26 $generated@@84)))) (and (<= 0 $generated@@87) (< $generated@@87 ($generated@@25 $generated@@86)))) ($generated@@12 ($generated@@43 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@85 $generated@@86) $generated@@3)))) ($generated@@83 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@85 $generated@@86) ($generated@@48 $generated@@87)) $generated@@84 $generated@@85))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@85 $generated@@86) ($generated@@48 $generated@@87)) ($generated@@26 $generated@@84))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@43 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@43 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@29 $generated@@33 $generated@@92 ($generated@@34 $generated@@91))  (and ($generated@@29 $generated@@33 $generated@@92 ($generated@@26 $generated@@91)) (or (not (= $generated@@92 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@33 $generated@@92 ($generated@@34 $generated@@91)))
 :pattern ( ($generated@@29 $generated@@33 $generated@@92 ($generated@@26 $generated@@91)))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@83 ($generated@@88 $generated@@96 $generated@@93) $generated@@94 $generated@@95) ($generated@@32 $generated@@96 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@83 ($generated@@88 $generated@@96 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ) (!  (and (= ($generated@@24 ($generated@@26 $generated@@98)) $generated@@4) (= ($generated@@97 ($generated@@26 $generated@@98)) $generated@@6))
 :pattern ( ($generated@@26 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@24 ($generated@@34 $generated@@99)) $generated@@5) (= ($generated@@97 ($generated@@34 $generated@@99)) $generated@@6))
 :pattern ( ($generated@@34 $generated@@99))
)))
(assert  (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@100 $generated@@103 $generated@@104 $generated@@105 ($generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@100 $generated@@110 $generated@@111 $generated@@112 ($generated@@102 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@100 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@100 $generated@@119 $generated@@120 $generated@@121 ($generated@@102 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@100 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@12 ($generated@@100 $generated@@33 $generated@@45 $generated@@8 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))  (=> (and (or (not (= $generated@@132 $generated@@128)) (not true)) ($generated@@12 ($generated@@43 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@129 $generated@@132) $generated@@130)))) (= $generated@@132 $generated@@131)))
 :pattern ( ($generated@@100 $generated@@33 $generated@@45 $generated@@8 ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@29 $generated@@33 $generated@@135 ($generated@@26 $generated@@134))  (or (= $generated@@135 $generated@@27) (= ($generated@@28 $generated@@135) ($generated@@26 $generated@@134))))
 :pattern ( ($generated@@29 $generated@@33 $generated@@135 ($generated@@26 $generated@@134)))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@136 $generated@@137 $generated@@0) (and (= ($generated@@88 $generated@@9 ($generated@@43 $generated@@9 $generated@@137)) $generated@@137) ($generated@@29 $generated@@9 ($generated@@43 $generated@@9 $generated@@137) $generated@@0)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@0))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@136 $generated@@138 $generated) (and (= ($generated@@88 $generated@@8 ($generated@@43 $generated@@8 $generated@@138)) $generated@@138) ($generated@@29 $generated@@8 ($generated@@43 $generated@@8 $generated@@138) $generated)))
 :pattern ( ($generated@@136 $generated@@138 $generated))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@136 ($generated@@88 $generated@@141 $generated@@139) $generated@@140) ($generated@@29 $generated@@141 $generated@@139 $generated@@140))
 :pattern ( ($generated@@136 ($generated@@88 $generated@@141 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! (<= 0 ($generated@@25 $generated@@142))
 :pattern ( ($generated@@25 $generated@@142))
)))
(assert (forall (($generated@@143 Int) ) (! (= ($generated@@23 ($generated@@48 $generated@@143)) 1)
 :pattern ( ($generated@@48 $generated@@143))
)))
(assert (forall (($generated@@145 Int) ) (! (= ($generated@@144 ($generated@@48 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@48 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@26 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@26 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@34 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@34 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@43 $generated@@151 ($generated@@88 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@88 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@153) (and (or (not (= $generated@@154 $generated@@27)) (not true)) (= ($generated@@28 $generated@@154) ($generated@@26 $generated@@152)))) ($generated@@12 ($generated@@43 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@153 $generated@@154) $generated@@3)))) ($generated@@32 $generated@@9 ($generated@@13 ($generated@@25 $generated@@154)) $generated@@0 $generated@@153))
 :pattern ( ($generated@@25 $generated@@154) ($generated@@43 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@153 $generated@@154) $generated@@3)) ($generated@@26 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (and (and ($generated@@40 $generated@@156) (and (or (not (= $generated@@157 $generated@@27)) (not true)) (= ($generated@@28 $generated@@157) ($generated@@26 $generated@@155)))) (and (<= 0 $generated@@158) (< $generated@@158 ($generated@@25 $generated@@157)))) ($generated@@136 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@156 $generated@@157) ($generated@@48 $generated@@158)) $generated@@155))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@156 $generated@@157) ($generated@@48 $generated@@158)) ($generated@@26 $generated@@155))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@136 $generated@@160 ($generated@@26 $generated@@159)) (and (= ($generated@@88 $generated@@33 ($generated@@43 $generated@@33 $generated@@160)) $generated@@160) ($generated@@29 $generated@@33 ($generated@@43 $generated@@33 $generated@@160) ($generated@@26 $generated@@159))))
 :pattern ( ($generated@@136 $generated@@160 ($generated@@26 $generated@@159)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@136 $generated@@162 ($generated@@34 $generated@@161)) (and (= ($generated@@88 $generated@@33 ($generated@@43 $generated@@33 $generated@@162)) $generated@@162) ($generated@@29 $generated@@33 ($generated@@43 $generated@@33 $generated@@162) ($generated@@34 $generated@@161))))
 :pattern ( ($generated@@136 $generated@@162 ($generated@@34 $generated@@161)))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@88 $generated@@9 ($generated@@13 ($generated@@42 $generated@@163))) ($generated@@80 $generated@@46 ($generated@@88 $generated@@9 ($generated@@13 $generated@@163))))
 :pattern ( ($generated@@88 $generated@@9 ($generated@@13 ($generated@@42 $generated@@163))))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@88 $generated@@165 ($generated@@80 $generated@@165 $generated@@164)) ($generated@@80 $generated@@46 ($generated@@88 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@88 $generated@@165 ($generated@@80 $generated@@165 $generated@@164)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! ($generated@@32 $generated@@9 $generated@@167 $generated@@0 $generated@@166)
 :pattern ( ($generated@@32 $generated@@9 $generated@@167 $generated@@0 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! ($generated@@32 $generated@@8 $generated@@169 $generated $generated@@168)
 :pattern ( ($generated@@32 $generated@@8 $generated@@169 $generated $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@29 $generated@@9 $generated@@170 $generated@@0)
 :pattern ( ($generated@@29 $generated@@9 $generated@@170 $generated@@0))
)))
(assert (forall (($generated@@171 T@U) ) (! ($generated@@29 $generated@@8 $generated@@171 $generated)
 :pattern ( ($generated@@29 $generated@@8 $generated@@171 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Bool)
(declare-fun $generated@@178 () Bool)
(declare-fun $generated@@179 () Bool)
(declare-fun $generated@@180 () Bool)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 () Bool)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 39) (let (($generated@@191 true))
(let (($generated@@192  (=> (and (= ($generated@@39 $generated@@172 $generated@@173 $generated@@174 $generated@@175 $generated@@176)  (and (forall (($generated@@193 Int) ) (!  (=> (and (<= $generated@@174 $generated@@193) (< $generated@@193 $generated@@175)) (<= ($generated@@14 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) ($generated@@48 $generated@@193)))) ($generated@@14 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) ($generated@@48 $generated@@175))))))
 :pattern ( ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) ($generated@@48 $generated@@193))))
)) (forall (($generated@@194 Int) ) (!  (=> (and (< $generated@@175 $generated@@194) (< $generated@@194 $generated@@176)) (< ($generated@@14 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) ($generated@@48 $generated@@194)))) ($generated@@14 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) ($generated@@48 $generated@@175))))))
 :pattern ( ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) ($generated@@48 $generated@@194))))
)))) ($generated@@29 $generated@@8 ($generated@@11 ($generated@@39 $generated@@172 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) $generated)) (and (=> (= (ControlFlow 0 4) (- 0 7)) $generated@@177) (=> $generated@@177 (and (=> (= (ControlFlow 0 4) (- 0 6)) $generated@@178) (=> $generated@@178 (and (=> (= (ControlFlow 0 4) (- 0 5)) $generated@@179) (=> $generated@@179 (=> (= (ControlFlow 0 4) (- 0 3)) $generated@@180))))))))))
(let (($generated@@195  (=> (= $generated@@180 $generated@@181) (=> (and (= $generated@@179 $generated@@182) (= (ControlFlow 0 10) 4)) $generated@@192))))
(let (($generated@@196  (=> (and (and (not (and (< $generated@@175 $generated@@183) (< $generated@@183 $generated@@176))) (= $generated@@182 true)) (and (= $generated@@181 true) (= (ControlFlow 0 16) 10))) $generated@@195)))
(let (($generated@@197  (=> (and (< $generated@@175 $generated@@183) (< $generated@@183 $generated@@176)) (and (=> (= (ControlFlow 0 11) (- 0 15)) (or (not (= $generated@@173 $generated@@27)) (not true))) (=> (or (not (= $generated@@173 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 11) (- 0 14)) (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@25 $generated@@173)))) (=> (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@25 $generated@@173))) (=> (= $generated@@184 ($generated@@12 ($generated@@100 $generated@@33 $generated@@45 $generated@@8 $generated@@185 $generated@@173 ($generated@@48 $generated@@183)))) (and (=> (= (ControlFlow 0 11) (- 0 13)) (or (not (= $generated@@173 $generated@@27)) (not true))) (=> (or (not (= $generated@@173 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 $generated@@175) (< $generated@@175 ($generated@@25 $generated@@173)))) (=> (and (<= 0 $generated@@175) (< $generated@@175 ($generated@@25 $generated@@173))) (=> (and (and (= $generated@@186 ($generated@@12 ($generated@@100 $generated@@33 $generated@@45 $generated@@8 $generated@@185 $generated@@173 ($generated@@48 $generated@@175)))) (= $generated@@182 $generated@@184)) (and (= $generated@@181 $generated@@186) (= (ControlFlow 0 11) 10))) $generated@@195)))))))))))))
(let (($generated@@198  (=> (<= $generated@@183 $generated@@175) (and (=> (= (ControlFlow 0 18) 11) $generated@@197) (=> (= (ControlFlow 0 18) 16) $generated@@196)))))
(let (($generated@@199  (=> (< $generated@@175 $generated@@183) (and (=> (= (ControlFlow 0 17) 11) $generated@@197) (=> (= (ControlFlow 0 17) 16) $generated@@196)))))
(let (($generated@@200  (and (=> (= (ControlFlow 0 19) 17) $generated@@199) (=> (= (ControlFlow 0 19) 18) $generated@@198))))
(let (($generated@@201  (=> (forall (($generated@@202 Int) ) (!  (=> (and (<= $generated@@174 $generated@@202) (< $generated@@202 $generated@@175)) (<= ($generated@@14 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) ($generated@@48 $generated@@202)))) ($generated@@14 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) ($generated@@48 $generated@@175))))))
 :pattern ( ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) ($generated@@48 $generated@@202))))
)) (and (=> (= (ControlFlow 0 20) 19) $generated@@200) (=> (= (ControlFlow 0 20) 9) $generated@@191)))))
(let (($generated@@203  (=> (and (and (not (forall (($generated@@204 Int) ) (!  (=> (and (<= $generated@@174 $generated@@204) (< $generated@@204 $generated@@175)) (<= ($generated@@14 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) ($generated@@48 $generated@@204)))) ($generated@@14 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) ($generated@@48 $generated@@175))))))
 :pattern ( ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@33 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) ($generated@@48 $generated@@204))))
))) (= $generated@@180 true)) (and (= $generated@@179 true) (= (ControlFlow 0 8) 4))) $generated@@192)))
(let (($generated@@205  (=> (not (and (<= $generated@@174 $generated@@187) (< $generated@@187 $generated@@175))) (=> (and (= $generated@@177 true) (= $generated@@178 true)) (and (=> (= (ControlFlow 0 26) 20) $generated@@201) (=> (= (ControlFlow 0 26) 8) $generated@@203))))))
(let (($generated@@206  (=> (and (<= $generated@@174 $generated@@187) (< $generated@@187 $generated@@175)) (and (=> (= (ControlFlow 0 21) (- 0 25)) (or (not (= $generated@@173 $generated@@27)) (not true))) (=> (or (not (= $generated@@173 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 21) (- 0 24)) (and (<= 0 $generated@@187) (< $generated@@187 ($generated@@25 $generated@@173)))) (=> (and (<= 0 $generated@@187) (< $generated@@187 ($generated@@25 $generated@@173))) (=> (= $generated@@188 ($generated@@12 ($generated@@100 $generated@@33 $generated@@45 $generated@@8 $generated@@185 $generated@@173 ($generated@@48 $generated@@187)))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (or (not (= $generated@@173 $generated@@27)) (not true))) (=> (or (not (= $generated@@173 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (and (<= 0 $generated@@175) (< $generated@@175 ($generated@@25 $generated@@173)))) (=> (and (<= 0 $generated@@175) (< $generated@@175 ($generated@@25 $generated@@173))) (=> (= $generated@@189 ($generated@@12 ($generated@@100 $generated@@33 $generated@@45 $generated@@8 $generated@@185 $generated@@173 ($generated@@48 $generated@@175)))) (=> (and (= $generated@@177 $generated@@188) (= $generated@@178 $generated@@189)) (and (=> (= (ControlFlow 0 21) 20) $generated@@201) (=> (= (ControlFlow 0 21) 8) $generated@@203))))))))))))))))
(let (($generated@@207  (=> (< $generated@@187 $generated@@174) (and (=> (= (ControlFlow 0 28) 21) $generated@@206) (=> (= (ControlFlow 0 28) 26) $generated@@205)))))
(let (($generated@@208  (=> (<= $generated@@174 $generated@@187) (and (=> (= (ControlFlow 0 27) 21) $generated@@206) (=> (= (ControlFlow 0 27) 26) $generated@@205)))))
(let (($generated@@209  (and (=> (= (ControlFlow 0 29) 27) $generated@@208) (=> (= (ControlFlow 0 29) 28) $generated@@207))))
(let (($generated@@210 true))
(let (($generated@@211 true))
(let (($generated@@212  (=> (and (and (and (<= ($generated@@42 0) $generated@@174) (<= $generated@@174 $generated@@175)) (< $generated@@175 $generated@@176)) (<= $generated@@176 ($generated@@25 $generated@@173))) (and (and (=> (= (ControlFlow 0 30) 1) $generated@@211) (=> (= (ControlFlow 0 30) 29) $generated@@209)) (=> (= (ControlFlow 0 30) 2) $generated@@210)))))
(let (($generated@@213  (=> (and (not (and (and (<= ($generated@@42 0) $generated@@174) (<= $generated@@174 $generated@@175)) (< $generated@@175 $generated@@176))) (= (ControlFlow 0 33) 30)) $generated@@212)))
(let (($generated@@214  (=> (and (and (<= ($generated@@42 0) $generated@@174) (<= $generated@@174 $generated@@175)) (< $generated@@175 $generated@@176)) (and (=> (= (ControlFlow 0 31) (- 0 32)) (or (not (= $generated@@173 $generated@@27)) (not true))) (=> (or (not (= $generated@@173 $generated@@27)) (not true)) (=> (= (ControlFlow 0 31) 30) $generated@@212))))))
(let (($generated@@215  (=> (not (and (<= ($generated@@42 0) $generated@@174) (<= $generated@@174 $generated@@175))) (and (=> (= (ControlFlow 0 35) 31) $generated@@214) (=> (= (ControlFlow 0 35) 33) $generated@@213)))))
(let (($generated@@216  (=> (and (<= ($generated@@42 0) $generated@@174) (<= $generated@@174 $generated@@175)) (and (=> (= (ControlFlow 0 34) 31) $generated@@214) (=> (= (ControlFlow 0 34) 33) $generated@@213)))))
(let (($generated@@217  (=> (< $generated@@174 ($generated@@42 0)) (and (=> (= (ControlFlow 0 37) 34) $generated@@216) (=> (= (ControlFlow 0 37) 35) $generated@@215)))))
(let (($generated@@218  (=> (<= ($generated@@42 0) $generated@@174) (and (=> (= (ControlFlow 0 36) 34) $generated@@216) (=> (= (ControlFlow 0 36) 35) $generated@@215)))))
(let (($generated@@219  (=> (= $generated@@185 ($generated@@101 $generated@@27 $generated@@172 $generated@@3 $generated@@173)) (and (=> (= (ControlFlow 0 38) 36) $generated@@218) (=> (= (ControlFlow 0 38) 37) $generated@@217)))))
(let (($generated@@220  (=> (and (and (and ($generated@@40 $generated@@172) ($generated@@190 $generated@@172)) ($generated@@29 $generated@@33 $generated@@173 ($generated@@34 $generated@@0))) (and (= 0 $generated@@38) (= (ControlFlow 0 39) 38))) $generated@@219)))
$generated@@220)))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
