(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U T@U) Int)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@51 (Int) Int)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) Bool)
(declare-fun $generated@@112 (T@U) Int)
(declare-fun $generated@@113 (T@U) Int)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@125 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@126 (T@T T@T) T@T)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (and (= ($generated@@4 $generated@@24) 3) (= ($generated@@4 $generated@@30) 4)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@25 $generated@@33 ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@35 ($generated@@27 $generated@@33)) ($generated@@26 $generated@@24 $generated@@36 ($generated@@27 $generated@@33))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)))))) (let (($generated@@37 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@25 $generated@@33 $generated@@37 ($generated@@23 $generated@@24 $generated@@36)))) (= ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)) $generated@@36 (let (($generated@@38 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
(let (($generated@@39 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@23 $generated@@24 ($generated@@32 $generated@@39 ($generated@@23 $generated@@24 ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) $generated@@38 ($generated@@23 $generated@@24 $generated@@36)))))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)))
))))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 $generated@@41 ($generated@@22 $generated@@42) $generated@@43) ($generated@@40 $generated@@41 $generated@@42 $generated@@43))
 :pattern ( ($generated@@40 $generated@@41 ($generated@@22 $generated@@42) $generated@@43))
)))
(assert (= ($generated@@44 $generated@@45) $generated@@1))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> ($generated@@47 $generated@@49) ($generated@@46 $generated@@24 $generated@@45 ($generated@@27 $generated@@48) $generated@@49))
 :pattern ( ($generated@@46 $generated@@24 $generated@@45 ($generated@@27 $generated@@48) $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ) (! ($generated@@26 $generated@@24 $generated@@45 ($generated@@27 $generated@@50))
 :pattern ( ($generated@@26 $generated@@24 $generated@@45 ($generated@@27 $generated@@50)))
)))
(assert (forall (($generated@@52 Int) ) (! (= ($generated@@51 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@23 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@23 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@26 $generated@@24 ($generated@@32 $generated@@57 $generated@@58) ($generated@@27 $generated@@56))  (and ($generated@@55 $generated@@57 $generated@@56) ($generated@@26 $generated@@24 $generated@@58 ($generated@@27 $generated@@56))))
 :pattern ( ($generated@@26 $generated@@24 ($generated@@32 $generated@@57 $generated@@58) ($generated@@27 $generated@@56)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (or ($generated@@25 $generated@@59 $generated@@61 $generated@@62) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@61 ($generated@@27 $generated@@59)) ($generated@@26 $generated@@24 $generated@@62 ($generated@@27 $generated@@59))))) (and (=> (not ($generated@@28 $generated@@61)) (let (($generated@@63 ($generated@@29 $generated@@61)))
($generated@@25 $generated@@59 $generated@@63 $generated@@62))) (= ($generated@@21 $generated@@59 ($generated@@22 $generated@@60) $generated@@61 $generated@@62) (ite ($generated@@28 $generated@@61) $generated@@62 (let (($generated@@64 ($generated@@29 $generated@@61)))
(let (($generated@@65 ($generated@@31 $generated@@61)))
($generated@@32 $generated@@65 ($generated@@21 $generated@@59 $generated@@60 $generated@@64 $generated@@62))))))))
 :pattern ( ($generated@@21 $generated@@59 ($generated@@22 $generated@@60) $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@28 $generated@@66) (= ($generated@@44 $generated@@66) $generated@@1))
 :pattern ( ($generated@@28 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@44 $generated@@68) $generated@@2))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@69 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@69 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@67 $generated@@73) (exists (($generated@@74 T@U) ($generated@@75 T@U) ) (= $generated@@73 ($generated@@32 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@67 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@28 $generated@@76) (= $generated@@76 $generated@@45))
 :pattern ( ($generated@@28 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@70 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@46 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@70 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@84 T@U) ) (!  (and (= ($generated@@82 ($generated@@27 $generated@@84)) $generated@@0) (= ($generated@@83 ($generated@@27 $generated@@84)) $generated@@3))
 :pattern ( ($generated@@27 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@85 $generated@@86) (or ($generated@@28 $generated@@86) ($generated@@67 $generated@@86)))
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@26 $generated@@24 $generated@@88 ($generated@@27 $generated@@87)) (or ($generated@@28 $generated@@88) ($generated@@67 $generated@@88)))
 :pattern ( ($generated@@67 $generated@@88) ($generated@@26 $generated@@24 $generated@@88 ($generated@@27 $generated@@87)))
 :pattern ( ($generated@@28 $generated@@88) ($generated@@26 $generated@@24 $generated@@88 ($generated@@27 $generated@@87)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@55 ($generated@@70 $generated@@91 $generated@@89) $generated@@90) ($generated@@26 $generated@@91 $generated@@89 $generated@@90))
 :pattern ( ($generated@@55 ($generated@@70 $generated@@91 $generated@@89) $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@44 ($generated@@32 $generated@@92 $generated@@93)) $generated@@2)
 :pattern ( ($generated@@32 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@31 ($generated@@32 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@32 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@29 ($generated@@32 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@32 $generated@@96 $generated@@97))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@25 $generated@@98 $generated@@100 $generated@@101) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@100 ($generated@@27 $generated@@98)) ($generated@@26 $generated@@24 $generated@@101 ($generated@@27 $generated@@98))))) ($generated@@26 $generated@@24 ($generated@@21 $generated@@98 $generated@@99 $generated@@100 $generated@@101) ($generated@@27 $generated@@98)))
 :pattern ( ($generated@@21 $generated@@98 $generated@@99 $generated@@100 $generated@@101))
))))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@102 ($generated@@27 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@27 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@69 $generated@@105 ($generated@@70 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@70 $generated@@105 $generated@@104))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (or ($generated@@106 $generated@@107 $generated@@109) (and (< 1 $generated@@20) ($generated@@26 $generated@@24 $generated@@109 ($generated@@27 $generated@@107)))) (and (=> (not ($generated@@28 $generated@@109)) (let (($generated@@110 ($generated@@29 $generated@@109)))
($generated@@106 $generated@@107 $generated@@110))) (= ($generated@@40 $generated@@107 ($generated@@22 $generated@@108) $generated@@109) (ite ($generated@@28 $generated@@109) 0 (let (($generated@@111 ($generated@@29 $generated@@109)))
(+ 1 ($generated@@40 $generated@@107 $generated@@108 $generated@@111)))))))
 :pattern ( ($generated@@40 $generated@@107 ($generated@@22 $generated@@108) $generated@@109))
))))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (< ($generated@@112 $generated@@114) ($generated@@113 ($generated@@32 $generated@@114 $generated@@115)))
 :pattern ( ($generated@@32 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (< ($generated@@113 $generated@@117) ($generated@@113 ($generated@@32 $generated@@116 $generated@@117)))
 :pattern ( ($generated@@32 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and ($generated@@47 $generated@@120) (and ($generated@@67 $generated@@118) ($generated@@46 $generated@@24 $generated@@118 ($generated@@27 $generated@@119) $generated@@120))) ($generated@@77 ($generated@@31 $generated@@118) $generated@@119 $generated@@120))
 :pattern ( ($generated@@77 ($generated@@31 $generated@@118) $generated@@119 $generated@@120))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@121 $generated@@131 $generated@@132 $generated@@133 ($generated@@127 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@121 $generated@@138 $generated@@139 $generated@@140 ($generated@@127 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@121 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@121 $generated@@147 $generated@@148 $generated@@149 ($generated@@127 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@121 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))) (= ($generated@@4 $generated@@122) 5)) (= ($generated@@4 $generated@@123) 6)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@125 $generated@@156 $generated@@157 ($generated@@128 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@158) $generated@@160) $generated@@158)
 :weight 0
))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@165 $generated@@166) (= ($generated@@125 $generated@@161 $generated@@162 ($generated@@128 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@163) $generated@@166) ($generated@@125 $generated@@161 $generated@@162 $generated@@164 $generated@@166)))
 :weight 0
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@4 ($generated@@126 $generated@@167 $generated@@168)) 7))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@129 ($generated@@126 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@126 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@130 ($generated@@126 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@126 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Bool) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@9 ($generated@@121 $generated@@122 $generated@@123 $generated@@5 ($generated@@124 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))  (=> (and (or (not (= $generated@@177 $generated@@173)) (not true)) ($generated@@9 ($generated@@69 $generated@@5 ($generated@@125 $generated@@123 $generated@@30 ($generated@@125 $generated@@122 ($generated@@126 $generated@@123 $generated@@30) $generated@@174 $generated@@177) $generated@@175)))) $generated@@176))
 :pattern ( ($generated@@121 $generated@@122 $generated@@123 $generated@@5 ($generated@@124 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@180 $generated@@182 $generated@@183) (and (< 1 $generated@@20) (and (and ($generated@@26 $generated@@24 $generated@@182 ($generated@@27 $generated@@180)) ($generated@@46 $generated@@24 $generated@@182 ($generated@@27 $generated@@180) $generated@@179)) (and ($generated@@26 $generated@@24 $generated@@183 ($generated@@27 $generated@@180)) ($generated@@46 $generated@@24 $generated@@183 ($generated@@27 $generated@@180) $generated@@179))))) ($generated@@47 $generated@@179)) ($generated@@46 $generated@@24 ($generated@@21 $generated@@180 $generated@@181 $generated@@182 $generated@@183) ($generated@@27 $generated@@180) $generated@@179))
 :pattern ( ($generated@@46 $generated@@24 ($generated@@21 $generated@@180 $generated@@181 $generated@@182 $generated@@183) ($generated@@27 $generated@@180) $generated@@179))
))))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@112 ($generated@@70 $generated@@24 $generated@@184)) ($generated@@113 $generated@@184))
 :pattern ( ($generated@@112 ($generated@@70 $generated@@24 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@21 $generated@@185 ($generated@@22 $generated@@186) $generated@@187 $generated@@188) ($generated@@21 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
 :pattern ( ($generated@@21 $generated@@185 ($generated@@22 $generated@@186) $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@55 $generated@@190 ($generated@@27 $generated@@189)) (and (= ($generated@@70 $generated@@24 ($generated@@69 $generated@@24 $generated@@190)) $generated@@190) ($generated@@26 $generated@@24 ($generated@@69 $generated@@24 $generated@@190) ($generated@@27 $generated@@189))))
 :pattern ( ($generated@@55 $generated@@190 ($generated@@27 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and ($generated@@47 $generated@@193) (and ($generated@@67 $generated@@191) ($generated@@46 $generated@@24 $generated@@191 ($generated@@27 $generated@@192) $generated@@193))) ($generated@@46 $generated@@24 ($generated@@29 $generated@@191) ($generated@@27 $generated@@192) $generated@@193))
 :pattern ( ($generated@@46 $generated@@24 ($generated@@29 $generated@@191) ($generated@@27 $generated@@192) $generated@@193))
)))
(assert (= $generated@@45 ($generated@@23 $generated@@24 $generated@@45)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@32 ($generated@@23 $generated@@30 $generated@@194) ($generated@@23 $generated@@24 $generated@@195)) ($generated@@23 $generated@@24 ($generated@@32 $generated@@194 $generated@@195)))
 :pattern ( ($generated@@32 ($generated@@23 $generated@@30 $generated@@194) ($generated@@23 $generated@@24 $generated@@195)))
)))
(assert (forall (($generated@@196 Int) ) (! (= ($generated@@70 $generated@@6 ($generated@@10 ($generated@@51 $generated@@196))) ($generated@@23 $generated@@30 ($generated@@70 $generated@@6 ($generated@@10 $generated@@196))))
 :pattern ( ($generated@@70 $generated@@6 ($generated@@10 ($generated@@51 $generated@@196))))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@T) ) (! (= ($generated@@70 $generated@@198 ($generated@@23 $generated@@198 $generated@@197)) ($generated@@23 $generated@@30 ($generated@@70 $generated@@198 $generated@@197)))
 :pattern ( ($generated@@70 $generated@@198 ($generated@@23 $generated@@198 $generated@@197)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (or ($generated@@106 $generated@@199 $generated@@201) (and (< 1 $generated@@20) ($generated@@26 $generated@@24 $generated@@201 ($generated@@27 $generated@@199)))) (<= ($generated@@51 0) ($generated@@40 $generated@@199 $generated@@200 $generated@@201)))
 :pattern ( ($generated@@40 $generated@@199 $generated@@200 $generated@@201))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (or ($generated@@106 $generated@@202 ($generated@@23 $generated@@24 $generated@@204)) (and (< 1 $generated@@20) ($generated@@26 $generated@@24 $generated@@204 ($generated@@27 $generated@@202)))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@204)))))) (let (($generated@@205 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@204)))))
($generated@@106 $generated@@202 $generated@@205))) (= ($generated@@40 $generated@@202 ($generated@@22 $generated@@203) ($generated@@23 $generated@@24 $generated@@204)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@204)) 0 (let (($generated@@206 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@204)))))
($generated@@51 (+ 1 ($generated@@40 $generated@@202 ($generated@@22 $generated@@203) $generated@@206))))))))
 :weight 3
 :pattern ( ($generated@@40 $generated@@202 ($generated@@22 $generated@@203) ($generated@@23 $generated@@24 $generated@@204)))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@47 $generated@@210) (= ($generated@@46 $generated@@24 ($generated@@32 $generated@@208 $generated@@209) ($generated@@27 $generated@@207) $generated@@210)  (and ($generated@@77 $generated@@208 $generated@@207 $generated@@210) ($generated@@46 $generated@@24 $generated@@209 ($generated@@27 $generated@@207) $generated@@210))))
 :pattern ( ($generated@@46 $generated@@24 ($generated@@32 $generated@@208 $generated@@209) ($generated@@27 $generated@@207) $generated@@210))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@220  (=> (= $generated@@211 ($generated@@124 $generated@@212 $generated@@213 $generated false)) (=> (and ($generated@@85 $generated@@214) ($generated@@85 $generated@@215)) (=> (and (and (and ($generated@@47 $generated@@216) ($generated@@217 $generated@@216)) (= $generated@@213 $generated@@216)) (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and ($generated@@26 $generated@@24 $generated@@221 ($generated@@27 $generated@@218)) ($generated@@26 $generated@@24 $generated@@222 ($generated@@27 $generated@@218))) ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 true)))) (or (< ($generated@@113 $generated@@221) ($generated@@113 $generated@@214)) (and (= ($generated@@113 $generated@@221) ($generated@@113 $generated@@214)) (< ($generated@@113 $generated@@222) ($generated@@113 $generated@@215))))) (= ($generated@@40 $generated@@218 ($generated@@22 $generated@@219) ($generated@@21 $generated@@218 ($generated@@22 $generated@@219) $generated@@221 $generated@@222)) (+ ($generated@@40 $generated@@218 ($generated@@22 $generated@@219) $generated@@221) ($generated@@40 $generated@@218 ($generated@@22 $generated@@219) $generated@@222))))
 :pattern ( ($generated@@21 $generated@@218 ($generated@@22 $generated@@219) $generated@@221 $generated@@222))
)) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@40 $generated@@218 ($generated@@22 ($generated@@22 $generated@@219)) ($generated@@21 $generated@@218 ($generated@@22 ($generated@@22 $generated@@219)) $generated@@214 $generated@@215)) (+ ($generated@@40 $generated@@218 ($generated@@22 ($generated@@22 $generated@@219)) $generated@@214) ($generated@@40 $generated@@218 ($generated@@22 ($generated@@22 $generated@@219)) $generated@@215))))))))
(let (($generated@@223  (=> (and ($generated@@47 $generated@@213) ($generated@@217 $generated@@213)) (=> (and (and ($generated@@26 $generated@@24 $generated@@214 ($generated@@27 $generated@@218)) ($generated@@46 $generated@@24 $generated@@214 ($generated@@27 $generated@@218) $generated@@213)) ($generated@@85 $generated@@214)) (=> (and (and (and ($generated@@26 $generated@@24 $generated@@215 ($generated@@27 $generated@@218)) ($generated@@46 $generated@@24 $generated@@215 ($generated@@27 $generated@@218) $generated@@213)) ($generated@@85 $generated@@215)) (and (= 2 $generated@@20) (= (ControlFlow 0 3) 2))) $generated@@220)))))
$generated@@223)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
