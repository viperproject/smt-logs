(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U) T@U)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U T@U) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () Bool)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) Int)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@97 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T) T@T)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@153 () Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@3 $generated@@23) 3))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@31 T@U) ) (!  (=> (or ($generated@@24 ($generated@@22 $generated@@23 $generated@@31)) (and (< 1 $generated@@20) ($generated@@25 $generated@@31 $generated@@26))) (and ($generated@@27 ($generated@@22 $generated@@23 $generated@@31)) (= ($generated@@21 ($generated@@22 $generated@@23 $generated@@31)) ($generated@@28 ($generated@@29 $generated@@30) ($generated@@22 $generated@@23 $generated@@31)))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@22 $generated@@23 $generated@@31)))
))))
(assert (= ($generated@@3 $generated@@33) 4))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@35 T@U) ) (!  (=> (or ($generated@@24 $generated@@35) (and (< 1 $generated@@20) ($generated@@25 $generated@@35 $generated@@26))) ($generated@@32 $generated@@33 ($generated@@21 $generated@@35) ($generated@@34 $generated)))
 :pattern ( ($generated@@21 $generated@@35))
))))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@37 ($generated@@34 $generated@@38)) ($generated@@36 $generated@@37))
 :pattern ( ($generated@@32 $generated@@33 $generated@@37 ($generated@@34 $generated@@38)))
)))
(assert ($generated@@25 $generated@@39 $generated@@26))
(assert (forall (($generated@@42 T@U) ) (!  (=> ($generated@@41 $generated@@42) ($generated@@40 $generated@@39 $generated@@26 $generated@@42))
 :pattern ( ($generated@@40 $generated@@39 $generated@@26 $generated@@42))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@T) ) (! (= ($generated@@22 $generated@@44 $generated@@43) $generated@@43)
 :pattern ( ($generated@@22 $generated@@44 $generated@@43))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 ($generated@@45 $generated@@48 $generated@@47)) $generated@@47)
 :pattern ( ($generated@@45 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@40 ($generated@@46 $generated@@53 $generated@@50) $generated@@51 $generated@@52) ($generated@@49 $generated@@53 $generated@@50 $generated@@51 $generated@@52))
 :pattern ( ($generated@@40 ($generated@@46 $generated@@53 $generated@@50) $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (or ($generated@@27 $generated@@55) ($generated@@25 $generated@@55 $generated@@26)) ($generated@@32 $generated@@33 ($generated@@28 $generated@@54 $generated@@55) ($generated@@34 $generated)))
 :pattern ( ($generated@@28 $generated@@54 $generated@@55))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@58 T@U) ) (!  (=> (and (or $generated@@57 (< 2 $generated@@20)) ($generated@@41 $generated@@58)) ($generated@@40 $generated@@56 $generated@@26 $generated@@58))
 :pattern ( ($generated@@40 $generated@@56 $generated@@26 $generated@@58))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@59 $generated@@60 $generated@@61) (= $generated@@60 $generated@@61))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@63 ($generated@@34 $generated@@64)) (forall (($generated@@65 T@U) ) (!  (=> (< 0 ($generated@@62 $generated@@63 $generated@@65)) ($generated@@25 $generated@@65 $generated@@64))
 :pattern ( ($generated@@62 $generated@@63 $generated@@65))
)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@63 ($generated@@34 $generated@@64)))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@25 $generated@@66 $generated) (and (= ($generated@@46 $generated@@5 ($generated@@45 $generated@@5 $generated@@66)) $generated@@66) ($generated@@32 $generated@@5 ($generated@@45 $generated@@5 $generated@@66) $generated)))
 :pattern ( ($generated@@25 $generated@@66 $generated))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@71 T@U) ) (!  (=> (or ($generated@@68 $generated@@71) (and (< 1 $generated@@20) ($generated@@25 $generated@@71 $generated@@26))) (and ($generated@@69 $generated@@71) (= ($generated@@67 $generated@@71) ($generated@@70 ($generated@@29 $generated@@30) $generated@@71))))
 :pattern ( ($generated@@67 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@70 ($generated@@29 $generated@@72) $generated@@73) ($generated@@70 $generated@@72 $generated@@73))
 :pattern ( ($generated@@70 ($generated@@29 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@25 ($generated@@46 $generated@@76 $generated@@74) $generated@@75) ($generated@@32 $generated@@76 $generated@@74 $generated@@75))
 :pattern ( ($generated@@25 ($generated@@46 $generated@@76 $generated@@74) $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@36 $generated@@78) (forall (($generated@@79 T@U) ) (!  (and (<= 0 ($generated@@62 $generated@@78 $generated@@79)) (<= ($generated@@62 $generated@@78 $generated@@79) ($generated@@77 $generated@@78)))
 :pattern ( ($generated@@62 $generated@@78 $generated@@79))
)))
 :pattern ( ($generated@@36 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (! (<= 0 ($generated@@77 $generated@@80))
 :pattern ( ($generated@@77 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@62 $generated@@81 $generated@@82) 0)
 :pattern ( ($generated@@62 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@83 ($generated@@34 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@34 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@19 ($generated@@34 $generated@@85)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@45 $generated@@87 ($generated@@46 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@46 $generated@@87 $generated@@86))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@88 T@U) ) (!  (=> (or ($generated@@24 $generated@@88) (and (< 1 $generated@@20) ($generated@@25 $generated@@88 $generated@@26))) (and ($generated@@27 $generated@@88) (= ($generated@@21 $generated@@88) ($generated@@28 ($generated@@29 $generated@@30) $generated@@88))))
 :pattern ( ($generated@@21 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@28 ($generated@@29 $generated@@89) $generated@@90) ($generated@@28 $generated@@89 $generated@@90))
 :pattern ( ($generated@@28 ($generated@@29 $generated@@89) $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (!  (and (= (= ($generated@@77 $generated@@91) 0) (= $generated@@91 $generated@@81)) (=> (or (not (= ($generated@@77 $generated@@91) 0)) (not true)) (exists (($generated@@92 T@U) ) (! (< 0 ($generated@@62 $generated@@91 $generated@@92))
 :pattern ( ($generated@@62 $generated@@91 $generated@@92))
))))
 :pattern ( ($generated@@77 $generated@@91))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@93 $generated@@103 $generated@@104 $generated@@105 ($generated@@99 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@93 $generated@@110 $generated@@111 $generated@@112 ($generated@@99 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@93 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@93 $generated@@119 $generated@@120 $generated@@121 ($generated@@99 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@93 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))) (= ($generated@@3 $generated@@94) 5)) (= ($generated@@3 $generated@@95) 6)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@97 $generated@@128 $generated@@129 ($generated@@100 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@130) $generated@@132) $generated@@130)
 :weight 0
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 $generated@@133 $generated@@134 ($generated@@100 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@133 $generated@@134 $generated@@136 $generated@@138)))
 :weight 0
))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (= ($generated@@3 ($generated@@98 $generated@@139 $generated@@140)) 7))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@101 ($generated@@98 $generated@@141 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@98 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@102 ($generated@@98 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@98 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Bool) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@8 ($generated@@93 $generated@@94 $generated@@95 $generated@@4 ($generated@@96 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))  (=> (and (or (not (= $generated@@149 $generated@@145)) (not true)) ($generated@@8 ($generated@@45 $generated@@4 ($generated@@97 $generated@@95 $generated@@23 ($generated@@97 $generated@@94 ($generated@@98 $generated@@95 $generated@@23) $generated@@146 $generated@@149) $generated@@147)))) $generated@@148))
 :pattern ( ($generated@@93 $generated@@94 $generated@@95 $generated@@4 ($generated@@96 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@25 $generated@@151 ($generated@@34 $generated@@152)) (and (= ($generated@@46 $generated@@33 ($generated@@45 $generated@@33 $generated@@151)) $generated@@151) ($generated@@32 $generated@@33 ($generated@@45 $generated@@33 $generated@@151) ($generated@@34 $generated@@152))))
 :pattern ( ($generated@@25 $generated@@151 ($generated@@34 $generated@@152)))
)))
(assert  (=> (<= 2 $generated@@20) (=> (or $generated@@57 (< 2 $generated@@20)) (and $generated@@153 (= $generated@@56 $generated@@39)))))
(assert  (=> (<= 2 $generated@@20) (=> (or $generated@@57 (< 2 $generated@@20)) (and $generated@@153 (= $generated@@56 $generated@@39)))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@46 $generated@@155 ($generated@@22 $generated@@155 $generated@@154)) ($generated@@22 $generated@@23 ($generated@@46 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@46 $generated@@155 ($generated@@22 $generated@@155 $generated@@154)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@156 T@U) ) (!  (=> (or ($generated@@68 ($generated@@22 $generated@@23 $generated@@156)) (and (< 1 $generated@@20) ($generated@@25 $generated@@156 $generated@@26))) (and ($generated@@69 ($generated@@22 $generated@@23 $generated@@156)) (= ($generated@@67 ($generated@@22 $generated@@23 $generated@@156)) ($generated@@70 ($generated@@29 $generated@@30) ($generated@@22 $generated@@23 $generated@@156)))))
 :weight 3
 :pattern ( ($generated@@67 ($generated@@22 $generated@@23 $generated@@156)))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@59 $generated@@157 $generated@@158) (forall (($generated@@159 T@U) ) (! (= ($generated@@62 $generated@@157 $generated@@159) ($generated@@62 $generated@@158 $generated@@159))
 :pattern ( ($generated@@62 $generated@@157 $generated@@159))
 :pattern ( ($generated@@62 $generated@@158 $generated@@159))
)))
 :pattern ( ($generated@@59 $generated@@157 $generated@@158))
)))
(assert  (=> (<= 2 $generated@@20) (=> (or $generated@@57 (< 2 $generated@@20)) (and (let (($generated@@160 ($generated@@22 $generated@@23 $generated@@56)))
 (and ($generated@@67 $generated@@160) ($generated@@59 ($generated@@21 $generated@@160) $generated@@81))) ($generated@@25 $generated@@56 $generated@@26)))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@49 $generated@@33 $generated@@161 ($generated@@34 $generated@@162) $generated@@163) (forall (($generated@@164 T@U) ) (!  (=> (< 0 ($generated@@62 $generated@@161 $generated@@164)) ($generated@@40 $generated@@164 $generated@@162 $generated@@163))
 :pattern ( ($generated@@62 $generated@@161 $generated@@164))
)))
 :pattern ( ($generated@@49 $generated@@33 $generated@@161 ($generated@@34 $generated@@162) $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! ($generated@@49 $generated@@5 $generated@@166 $generated $generated@@165)
 :pattern ( ($generated@@49 $generated@@5 $generated@@166 $generated $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! ($generated@@32 $generated@@5 $generated@@167 $generated)
 :pattern ( ($generated@@32 $generated@@5 $generated@@167 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@175 true))
(let (($generated@@176  (=> (and (not ($generated@@67 $generated@@168)) (= (ControlFlow 0 7) 5)) $generated@@175)))
(let (($generated@@177  (=> (and (and ($generated@@67 $generated@@168) ($generated@@40 $generated@@168 $generated@@26 $generated@@169)) (and ($generated@@24 $generated@@168) (= (ControlFlow 0 6) 5))) $generated@@175)))
(let (($generated@@178  (=> ($generated@@25 $generated@@56 $generated@@26) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@8 ($generated@@22 $generated@@4 ($generated@@7 true)))) (=> ($generated@@8 ($generated@@22 $generated@@4 ($generated@@7 true))) (=> (or ($generated@@8 ($generated@@22 $generated@@4 ($generated@@7 true))) $generated@@57) (=> (and (= $generated@@170 ($generated@@22 $generated@@23 $generated@@56)) $generated@@57) (=> (and (and ($generated@@25 $generated@@170 $generated@@26) (= $generated@@168 $generated@@170)) (and ($generated@@40 $generated@@168 $generated@@26 $generated@@169) ($generated@@68 $generated@@168))) (and (=> (= (ControlFlow 0 8) 6) $generated@@177) (=> (= (ControlFlow 0 8) 7) $generated@@176))))))))))
(let (($generated@@179  (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@180 ($generated@@22 $generated@@23 $generated@@56)))
 (=> ($generated@@68 $generated@@180) (or ($generated@@67 $generated@@180) ($generated@@70 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@180))))) (=> (let (($generated@@181 ($generated@@22 $generated@@23 $generated@@56)))
 (=> ($generated@@68 $generated@@181) (or ($generated@@67 $generated@@181) ($generated@@70 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@181)))) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@182 ($generated@@22 $generated@@23 $generated@@56)))
($generated@@59 ($generated@@21 $generated@@182) $generated@@81)))))))
(let (($generated@@183  (=> (and (and ($generated@@41 $generated@@171) ($generated@@172 $generated@@171)) (and $generated@@153 (let (($generated@@184 $generated@@39))
 (and ($generated@@69 $generated@@184) (=> ($generated@@70 ($generated@@29 $generated@@30) $generated@@184) ($generated@@27 $generated@@184)))))) (=> (and (and (and (let (($generated@@185 $generated@@39))
($generated@@70 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@185)) (let (($generated@@186 $generated@@39))
($generated@@59 ($generated@@28 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@186) $generated@@81))) (and (= $generated@@169 $generated@@171) $generated@@153)) (and (and (= $generated@@56 $generated@@39) $generated@@153) (and ($generated@@25 $generated@@56 $generated@@26) (= (ControlFlow 0 4) 2)))) $generated@@179))))
(let (($generated@@187  (=> (= $generated@@173 ($generated@@96 $generated@@174 $generated@@169 $generated@@2 false)) (and (=> (= (ControlFlow 0 10) 8) $generated@@178) (=> (= (ControlFlow 0 10) 4) $generated@@183)))))
(let (($generated@@188  (=> (and (and ($generated@@41 $generated@@169) ($generated@@172 $generated@@169)) (and (= 2 $generated@@20) (= (ControlFlow 0 11) 10))) $generated@@187)))
$generated@@188)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
