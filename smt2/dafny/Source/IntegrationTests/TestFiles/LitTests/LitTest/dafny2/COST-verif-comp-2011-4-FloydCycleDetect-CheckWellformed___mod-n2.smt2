(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 () Int)
(declare-fun $generated@@28 (T@U T@U T@U Int T@U) T@U)
(declare-fun $generated@@29 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U T@U T@U) Bool)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T T@T) T@T)
(declare-fun $generated@@69 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@U T@U T@U) Bool)
(declare-fun $generated@@112 (T@U T@U T@U) Bool)
(declare-fun $generated@@122 (T@U T@U) Bool)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@134 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@174 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert  (and (= ($generated@@11 $generated@@33) 3) (= ($generated@@11 $generated@@36) 4)))
(assert  (=> (<= 1 $generated@@27) (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 Int) ($generated@@47 T@U) ) (!  (=> (or ($generated@@29 $generated@@44 $generated@@45 $generated@@46 $generated@@47) (and (< 1 $generated@@27) (and (and (and ($generated@@30 $generated@@44) (and (or (not (= $generated@@45 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@45 $generated@@34) ($generated@@35 $generated@@33 $generated@@45 $generated@@34 $generated@@44)))) (and ($generated@@32 $generated@@36 $generated@@47 ($generated@@37 $generated@@38)) ($generated@@35 $generated@@36 $generated@@47 ($generated@@37 $generated@@38) $generated@@44))) (and ($generated@@39 $generated@@44 $generated@@45 $generated@@47) (<= ($generated@@40 0) $generated@@46))))) (and ($generated@@41 $generated@@47 ($generated@@42 $generated@@33 ($generated@@28 $generated@@43 $generated@@44 $generated@@45 $generated@@46 $generated@@47))) ($generated@@32 $generated@@33 ($generated@@28 $generated@@43 $generated@@44 $generated@@45 $generated@@46 $generated@@47) $generated@@38)))
 :pattern ( ($generated@@28 $generated@@43 $generated@@44 $generated@@45 $generated@@46 $generated@@47))
))))
(assert (= ($generated@@48 $generated@@4) 0))
(assert (= ($generated@@49 $generated) $generated@@1))
(assert (= ($generated@@49 $generated@@0) $generated@@2))
(assert (= ($generated@@50 $generated@@4) $generated@@5))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 Int) ($generated@@56 T@U) ) (! (= ($generated@@28 ($generated@@51 $generated@@52) $generated@@53 $generated@@54 $generated@@55 $generated@@56) ($generated@@28 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56))
 :pattern ( ($generated@@28 ($generated@@51 $generated@@52) $generated@@53 $generated@@54 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@58 $generated@@38)  (or (= $generated@@58 $generated@@31) (= ($generated@@57 $generated@@58) $generated@@38)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@58 $generated@@38))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@35 $generated@@33 $generated@@59 $generated@@34 $generated@@60) ($generated@@35 $generated@@33 $generated@@59 $generated@@38 $generated@@60))
 :pattern ( ($generated@@35 $generated@@33 $generated@@59 $generated@@34 $generated@@60))
 :pattern ( ($generated@@35 $generated@@33 $generated@@59 $generated@@38 $generated@@60))
)))
(assert (= ($generated@@48 $generated@@61) 0))
(assert (= ($generated@@62 $generated@@6 $generated@@10) $generated@@61))
(assert  (not ($generated@@63 $generated@@61)))
(assert  (and (and (and (and (and (and (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@65 $generated@@72 $generated@@73 ($generated@@69 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@76) $generated@@74)
 :weight 0
)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@65 $generated@@77 $generated@@78 ($generated@@69 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@65 $generated@@77 $generated@@78 $generated@@80 $generated@@82)))
 :weight 0
))) (= ($generated@@11 $generated@@66) 5)) (= ($generated@@11 $generated@@67) 6)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (= ($generated@@11 ($generated@@68 $generated@@83 $generated@@84)) 7))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@70 ($generated@@68 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@68 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@71 ($generated@@68 $generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@68 $generated@@87 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@35 $generated@@33 $generated@@89 $generated@@38 $generated@@90)  (or (= $generated@@89 $generated@@31) ($generated@@16 ($generated@@64 $generated@@12 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@90 $generated@@89) $generated@@4)))))
 :pattern ( ($generated@@35 $generated@@33 $generated@@89 $generated@@38 $generated@@90))
)))
(assert (forall (($generated@@91 Int) ) (! (= ($generated@@40 $generated@@91) $generated@@91)
 :pattern ( ($generated@@40 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@95 $generated@@96 $generated@@97) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@41 $generated@@96 $generated@@98) ($generated@@41 $generated@@97 $generated@@98))
 :pattern ( ($generated@@41 $generated@@96 $generated@@98))
 :pattern ( ($generated@@41 $generated@@97 $generated@@98))
)))
 :pattern ( ($generated@@95 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@42 $generated@@100 ($generated@@64 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@64 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@102 ($generated@@37 $generated@@103)) (forall (($generated@@104 T@U) ) (!  (=> ($generated@@41 $generated@@102 $generated@@104) ($generated@@101 $generated@@104 $generated@@103))
 :pattern ( ($generated@@41 $generated@@102 $generated@@104))
)))
 :pattern ( ($generated@@32 $generated@@36 $generated@@102 ($generated@@37 $generated@@103)))
)))
(assert ($generated@@63 $generated@@4))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@105 ($generated@@42 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@35 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@105 ($generated@@42 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and ($generated@@30 $generated@@110) (and (or (not (= $generated@@111 $generated@@31)) (not true)) (= ($generated@@57 $generated@@111) $generated@@38))) ($generated@@32 $generated@@33 ($generated@@64 $generated@@33 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@110 $generated@@111) $generated@@61)) $generated@@38))
 :pattern ( ($generated@@64 $generated@@33 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@110 $generated@@111) $generated@@61)))
)))
(assert  (=> (<= 0 $generated@@27) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or ($generated@@112 $generated@@113 $generated@@114 $generated@@115) (and (< 0 $generated@@27) (and (and ($generated@@30 $generated@@113) (and (or (not (= $generated@@114 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@114 $generated@@34) ($generated@@35 $generated@@33 $generated@@114 $generated@@34 $generated@@113)))) ($generated@@32 $generated@@36 $generated@@115 ($generated@@37 $generated@@38))))) (= ($generated@@39 $generated@@113 $generated@@114 $generated@@115)  (and (and ($generated@@41 $generated@@115 ($generated@@42 $generated@@33 $generated@@114)) ($generated@@41 $generated@@115 ($generated@@42 $generated@@33 $generated@@31))) (forall (($generated@@116 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@116 $generated@@38) (=> (and (and ($generated@@41 $generated@@115 ($generated@@42 $generated@@33 $generated@@116)) (or (not (= $generated@@116 $generated@@31)) (not true))) (or (not (= ($generated@@64 $generated@@33 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@113 $generated@@116) $generated@@61)) $generated@@31)) (not true))) ($generated@@41 $generated@@115 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@113 $generated@@116) $generated@@61))))
 :pattern ( ($generated@@64 $generated@@33 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@113 $generated@@116) $generated@@61)))
)))))
 :pattern ( ($generated@@39 $generated@@113 $generated@@114 $generated@@115) ($generated@@30 $generated@@113))
))))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@101 $generated@@117 $generated@@38) (and (= ($generated@@42 $generated@@33 ($generated@@64 $generated@@33 $generated@@117)) $generated@@117) ($generated@@32 $generated@@33 ($generated@@64 $generated@@33 $generated@@117) $generated@@38)))
 :pattern ( ($generated@@101 $generated@@117 $generated@@38))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@101 $generated@@118 $generated@@34) (and (= ($generated@@42 $generated@@33 ($generated@@64 $generated@@33 $generated@@118)) $generated@@118) ($generated@@32 $generated@@33 ($generated@@64 $generated@@33 $generated@@118) $generated@@34)))
 :pattern ( ($generated@@101 $generated@@118 $generated@@34))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@119 $generated@@34)  (and ($generated@@32 $generated@@33 $generated@@119 $generated@@38) (or (not (= $generated@@119 $generated@@31)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@119 $generated@@34))
 :pattern ( ($generated@@32 $generated@@33 $generated@@119 $generated@@38))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@120) (and (or (not (= $generated@@121 $generated@@31)) (not true)) (= ($generated@@57 $generated@@121) $generated@@38))) ($generated@@16 ($generated@@64 $generated@@12 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@120 $generated@@121) $generated@@4)))) ($generated@@35 $generated@@33 ($generated@@64 $generated@@33 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@120 $generated@@121) $generated@@61)) $generated@@38 $generated@@120))
 :pattern ( ($generated@@64 $generated@@33 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@120 $generated@@121) $generated@@61)))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@122 $generated@@123 $generated@@124) (= $generated@@123 $generated@@124))
 :pattern ( ($generated@@122 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (and (= ($generated@@125 ($generated@@62 $generated@@126 $generated@@127)) $generated@@126) (= ($generated@@50 ($generated@@62 $generated@@126 $generated@@127)) $generated@@127))
 :pattern ( ($generated@@62 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@101 $generated@@128 $generated@@0) (and (= ($generated@@42 $generated@@13 ($generated@@64 $generated@@13 $generated@@128)) $generated@@128) ($generated@@32 $generated@@13 ($generated@@64 $generated@@13 $generated@@128) $generated@@0)))
 :pattern ( ($generated@@101 $generated@@128 $generated@@0))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@101 $generated@@129 $generated) (and (= ($generated@@42 $generated@@12 ($generated@@64 $generated@@12 $generated@@129)) $generated@@129) ($generated@@32 $generated@@12 ($generated@@64 $generated@@12 $generated@@129) $generated)))
 :pattern ( ($generated@@101 $generated@@129 $generated))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@101 ($generated@@42 $generated@@132 $generated@@130) $generated@@131) ($generated@@32 $generated@@132 $generated@@130 $generated@@131))
 :pattern ( ($generated@@101 ($generated@@42 $generated@@132 $generated@@130) $generated@@131))
)))
(assert  (=> (<= 2 $generated@@27) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (or ($generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@139) (and (< 2 $generated@@27) (and (and (and (and ($generated@@30 $generated@@136) (and (or (not (= $generated@@137 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@137 $generated@@34) ($generated@@35 $generated@@33 $generated@@137 $generated@@34 $generated@@136)))) ($generated@@32 $generated@@33 $generated@@138 $generated@@34)) ($generated@@32 $generated@@36 $generated@@139 ($generated@@37 $generated@@38))) ($generated@@39 $generated@@136 $generated@@137 $generated@@139)))) (and (forall (($generated@@140 Int) ) (!  (=> (<= ($generated@@40 0) $generated@@140) ($generated@@29 $generated@@136 $generated@@137 $generated@@140 $generated@@139))
 :pattern ( ($generated@@28 ($generated@@51 $generated@@135) $generated@@136 $generated@@137 $generated@@140 $generated@@139))
)) (= ($generated@@133 $generated@@136 $generated@@137 $generated@@138 $generated@@139) (exists (($generated@@141 Int) ) (!  (and (<= ($generated@@40 0) $generated@@141) (= ($generated@@28 ($generated@@51 $generated@@135) $generated@@136 $generated@@137 $generated@@141 $generated@@139) $generated@@138))
 :pattern ( ($generated@@28 ($generated@@51 $generated@@135) $generated@@136 $generated@@137 $generated@@141 $generated@@139))
)))))
 :pattern ( ($generated@@133 $generated@@136 $generated@@137 $generated@@138 $generated@@139) ($generated@@30 $generated@@136))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@142 ($generated@@37 $generated@@143) $generated@@144) (forall (($generated@@145 T@U) ) (!  (=> ($generated@@41 $generated@@142 $generated@@145) ($generated@@105 $generated@@145 $generated@@143 $generated@@144))
 :pattern ( ($generated@@41 $generated@@142 $generated@@145))
)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@142 ($generated@@37 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@37 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@37 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@49 ($generated@@37 $generated@@148)) $generated@@3)
 :pattern ( ($generated@@37 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@64 $generated@@150 ($generated@@42 $generated@@150 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@42 $generated@@150 $generated@@149))
)))
(assert  (=> (<= 1 $generated@@27) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Int) ($generated@@155 T@U) ) (!  (=> (or ($generated@@29 $generated@@152 $generated@@153 $generated@@154 $generated@@155) (and (< 1 $generated@@27) (and (and (and (and ($generated@@30 $generated@@152) (or (not (= $generated@@153 $generated@@31)) (not true))) ($generated@@35 $generated@@33 $generated@@153 $generated@@34 $generated@@152)) (and ($generated@@32 $generated@@36 $generated@@155 ($generated@@37 $generated@@38)) ($generated@@35 $generated@@36 $generated@@155 ($generated@@37 $generated@@38) $generated@@152))) (and ($generated@@39 $generated@@152 $generated@@153 $generated@@155) (<= ($generated@@40 0) $generated@@154))))) ($generated@@35 $generated@@33 ($generated@@28 $generated@@151 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@38 $generated@@152))
 :pattern ( ($generated@@35 $generated@@33 ($generated@@28 $generated@@151 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@38 $generated@@152))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@101 $generated@@156 ($generated@@37 $generated@@157)) (and (= ($generated@@42 $generated@@36 ($generated@@64 $generated@@36 $generated@@156)) $generated@@156) ($generated@@32 $generated@@36 ($generated@@64 $generated@@36 $generated@@156) ($generated@@37 $generated@@157))))
 :pattern ( ($generated@@101 $generated@@156 ($generated@@37 $generated@@157)))
)))
(assert (= ($generated@@49 $generated@@38) $generated@@7))
(assert (= ($generated@@158 $generated@@38) $generated@@9))
(assert (= ($generated@@49 $generated@@34) $generated@@8))
(assert (= ($generated@@158 $generated@@34) $generated@@9))
(assert  (=> (<= 2 $generated@@27) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (or ($generated@@134 $generated@@159 $generated@@160 $generated@@161 $generated@@162) (and (< 2 $generated@@27) (and (and (and (and ($generated@@30 $generated@@159) (and (or (not (= $generated@@160 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@160 $generated@@34) ($generated@@35 $generated@@33 $generated@@160 $generated@@34 $generated@@159)))) (and ($generated@@32 $generated@@33 $generated@@161 $generated@@34) ($generated@@35 $generated@@33 $generated@@161 $generated@@34 $generated@@159))) (and ($generated@@32 $generated@@36 $generated@@162 ($generated@@37 $generated@@38)) ($generated@@35 $generated@@36 $generated@@162 ($generated@@37 $generated@@38) $generated@@159))) ($generated@@39 $generated@@159 $generated@@160 $generated@@162)))) (=> ($generated@@133 $generated@@159 $generated@@160 $generated@@161 $generated@@162) ($generated@@41 $generated@@162 ($generated@@42 $generated@@33 $generated@@161))))
 :pattern ( ($generated@@133 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
))))
(assert  (=> (<= 1 $generated@@27) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 Int) ($generated@@167 T@U) ) (!  (=> (or ($generated@@29 $generated@@164 $generated@@165 $generated@@166 $generated@@167) (and (< 1 $generated@@27) (and (and (and ($generated@@30 $generated@@164) (and (or (not (= $generated@@165 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@165 $generated@@34) ($generated@@35 $generated@@33 $generated@@165 $generated@@34 $generated@@164)))) ($generated@@32 $generated@@36 $generated@@167 ($generated@@37 $generated@@38))) (and ($generated@@39 $generated@@164 $generated@@165 $generated@@167) (<= ($generated@@40 0) $generated@@166))))) (and (=> (or (not (= $generated@@166 ($generated@@40 0))) (not true)) (and ($generated@@29 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167) (=> (or (not (= ($generated@@28 $generated@@163 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167) $generated@@31)) (not true)) ($generated@@29 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167)))) (= ($generated@@28 ($generated@@51 $generated@@163) $generated@@164 $generated@@165 $generated@@166 $generated@@167) (ite (= $generated@@166 ($generated@@40 0)) $generated@@165 (ite (= ($generated@@28 $generated@@163 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167) $generated@@31) $generated@@31 ($generated@@64 $generated@@33 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@164 ($generated@@28 $generated@@163 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167)) $generated@@61)))))))
 :pattern ( ($generated@@28 ($generated@@51 $generated@@163) $generated@@164 $generated@@165 $generated@@166 $generated@@167) ($generated@@30 $generated@@164))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@122 $generated@@168 $generated@@169) (forall (($generated@@170 T@U) ) (! (= ($generated@@41 $generated@@168 $generated@@170) ($generated@@41 $generated@@169 $generated@@170))
 :pattern ( ($generated@@41 $generated@@168 $generated@@170))
 :pattern ( ($generated@@41 $generated@@169 $generated@@170))
)))
 :pattern ( ($generated@@122 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@42 $generated@@13 ($generated@@17 ($generated@@40 $generated@@171))) ($generated@@92 $generated@@67 ($generated@@42 $generated@@13 ($generated@@17 $generated@@171))))
 :pattern ( ($generated@@42 $generated@@13 ($generated@@17 ($generated@@40 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@42 $generated@@173 ($generated@@92 $generated@@173 $generated@@172)) ($generated@@92 $generated@@67 ($generated@@42 $generated@@173 $generated@@172)))
 :pattern ( ($generated@@42 $generated@@173 ($generated@@92 $generated@@173 $generated@@172)))
)))
(assert  (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@174 $generated@@177 $generated@@178 $generated@@179 ($generated@@176 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@182 $generated@@183) $generated@@180)
 :weight 0
)) (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@174 $generated@@184 $generated@@185 $generated@@186 ($generated@@176 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@174 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@174 $generated@@193 $generated@@194 $generated@@195 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@174 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@16 ($generated@@174 $generated@@33 $generated@@66 $generated@@12 ($generated@@175 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (or (not (= $generated@@206 $generated@@202)) (not true)) ($generated@@16 ($generated@@64 $generated@@12 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@203 $generated@@206) $generated@@204)))) ($generated@@41 $generated@@205 ($generated@@42 $generated@@33 $generated@@206))))
 :pattern ( ($generated@@174 $generated@@33 $generated@@66 $generated@@12 ($generated@@175 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! ($generated@@35 $generated@@13 $generated@@209 $generated@@0 $generated@@208)
 :pattern ( ($generated@@35 $generated@@13 $generated@@209 $generated@@0 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! ($generated@@35 $generated@@12 $generated@@211 $generated $generated@@210)
 :pattern ( ($generated@@35 $generated@@12 $generated@@211 $generated $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! ($generated@@32 $generated@@13 $generated@@212 $generated@@0)
 :pattern ( ($generated@@32 $generated@@13 $generated@@212 $generated@@0))
)))
(assert (forall (($generated@@213 T@U) ) (! ($generated@@32 $generated@@12 $generated@@213 $generated)
 :pattern ( ($generated@@32 $generated@@12 $generated@@213 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Bool)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () Bool)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () Bool)
(declare-fun $generated@@223 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@224  (=> (= (ControlFlow 0 10) (- 0 9)) (=> ($generated@@133 $generated@@214 $generated@@215 $generated@@216 $generated@@217) ($generated@@41 $generated@@217 ($generated@@42 $generated@@33 $generated@@216))))))
(let (($generated@@225  (=> (= ($generated@@133 $generated@@214 $generated@@215 $generated@@216 $generated@@217) (exists (($generated@@226 Int) ) (!  (and (<= ($generated@@40 0) $generated@@226) (= ($generated@@28 ($generated@@51 $generated@@135) $generated@@214 $generated@@215 $generated@@226 $generated@@217) $generated@@216))
 :pattern ( ($generated@@28 ($generated@@51 $generated@@135) $generated@@214 $generated@@215 $generated@@226 $generated@@217))
))) (=> (and (forall (($generated@@227 Int) ) (!  (=> (<= ($generated@@40 0) $generated@@227) ($generated@@29 $generated@@214 $generated@@215 $generated@@227 $generated@@217))
 :pattern ( ($generated@@28 ($generated@@51 $generated@@135) $generated@@214 $generated@@215 $generated@@227 $generated@@217))
)) ($generated@@32 $generated@@12 ($generated@@15 ($generated@@133 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) $generated)) (and (=> (= (ControlFlow 0 11) (- 0 12)) $generated@@218) (=> $generated@@218 (=> (= (ControlFlow 0 11) 10) $generated@@224)))))))
(let (($generated@@228  (=> (< $generated@@219 ($generated@@40 0)) (=> (and (= $generated@@218 true) (= (ControlFlow 0 18) 11)) $generated@@225))))
(let (($generated@@229  (=> (and (and (<= ($generated@@40 0) $generated@@219) ($generated@@105 ($generated@@42 $generated@@33 $generated@@215) $generated@@38 $generated@@214)) (and ($generated@@35 $generated@@13 ($generated@@17 $generated@@219) $generated@@0 $generated@@214) ($generated@@35 $generated@@36 $generated@@217 ($generated@@37 $generated@@38) $generated@@214))) (and (=> (= (ControlFlow 0 13) (- 0 17)) (=> ($generated@@112 $generated@@214 $generated@@215 $generated@@217) (or ($generated@@39 $generated@@214 $generated@@215 $generated@@217) ($generated@@41 $generated@@217 ($generated@@42 $generated@@33 $generated@@215))))) (and (=> (= (ControlFlow 0 13) (- 0 16)) (=> ($generated@@112 $generated@@214 $generated@@215 $generated@@217) (or ($generated@@39 $generated@@214 $generated@@215 $generated@@217) ($generated@@41 $generated@@217 ($generated@@42 $generated@@33 $generated@@31))))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (=> ($generated@@112 $generated@@214 $generated@@215 $generated@@217) (or ($generated@@39 $generated@@214 $generated@@215 $generated@@217) (forall (($generated@@230 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@230 $generated@@38) (=> (and (and ($generated@@41 $generated@@217 ($generated@@42 $generated@@33 $generated@@230)) (or (not (= $generated@@230 $generated@@31)) (not true))) (or (not (= ($generated@@64 $generated@@33 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@214 $generated@@230) $generated@@61)) $generated@@31)) (not true))) ($generated@@41 $generated@@217 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@214 $generated@@230) $generated@@61))))
 :pattern ( ($generated@@64 $generated@@33 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@214 $generated@@230) $generated@@61)))
))))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (<= ($generated@@40 0) $generated@@219)) (=> (and ($generated@@39 $generated@@214 $generated@@215 $generated@@217) (<= ($generated@@40 0) $generated@@219)) (=> (and (and (= $generated@@220 (forall (($generated@@231 T@U) ($generated@@232 T@U) )  (=> (and (and (or (not (= $generated@@231 $generated@@31)) (not true)) ($generated@@16 ($generated@@64 $generated@@12 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@214 $generated@@231) $generated@@4)))) ($generated@@41 $generated@@217 ($generated@@42 $generated@@33 $generated@@231))) ($generated@@16 ($generated@@174 $generated@@33 $generated@@66 $generated@@12 $generated@@221 $generated@@231 $generated@@232))))) ($generated@@29 $generated@@214 $generated@@215 $generated@@219 $generated@@217)) (and (= $generated@@218 $generated@@220) (= (ControlFlow 0 13) 11))) $generated@@225)))))))))
(let (($generated@@233  (and (=> (= (ControlFlow 0 19) 13) $generated@@229) (=> (= (ControlFlow 0 19) 18) $generated@@228))))
(let (($generated@@234 true))
(let (($generated@@235  (=> (and (=> ($generated@@133 $generated@@214 $generated@@215 $generated@@216 $generated@@217) ($generated@@41 $generated@@217 ($generated@@42 $generated@@33 $generated@@216))) (= (ControlFlow 0 8) 2)) $generated@@234)))
(let (($generated@@236  (=> ($generated@@105 ($generated@@42 $generated@@33 $generated@@215) $generated@@38 $generated@@214) (=> (and ($generated@@35 $generated@@33 $generated@@216 $generated@@34 $generated@@214) ($generated@@35 $generated@@36 $generated@@217 ($generated@@37 $generated@@38) $generated@@214)) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> ($generated@@112 $generated@@214 $generated@@215 $generated@@217) (or ($generated@@39 $generated@@214 $generated@@215 $generated@@217) ($generated@@41 $generated@@217 ($generated@@42 $generated@@33 $generated@@215))))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@112 $generated@@214 $generated@@215 $generated@@217) (or ($generated@@39 $generated@@214 $generated@@215 $generated@@217) ($generated@@41 $generated@@217 ($generated@@42 $generated@@33 $generated@@31))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@112 $generated@@214 $generated@@215 $generated@@217) (or ($generated@@39 $generated@@214 $generated@@215 $generated@@217) (forall (($generated@@237 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@237 $generated@@38) (=> (and (and ($generated@@41 $generated@@217 ($generated@@42 $generated@@33 $generated@@237)) (or (not (= $generated@@237 $generated@@31)) (not true))) (or (not (= ($generated@@64 $generated@@33 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@214 $generated@@237) $generated@@61)) $generated@@31)) (not true))) ($generated@@41 $generated@@217 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@214 $generated@@237) $generated@@61))))
 :pattern ( ($generated@@64 $generated@@33 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@214 $generated@@237) $generated@@61)))
))))) (=> ($generated@@39 $generated@@214 $generated@@215 $generated@@217) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (and (and (= $generated@@215 $generated@@215) (= $generated@@216 $generated@@216)) ($generated@@122 $generated@@217 $generated@@217)) (or (and ($generated@@95 $generated@@217 $generated@@217) (not ($generated@@95 $generated@@217 $generated@@217))) (and ($generated@@122 $generated@@217 $generated@@217) (or (and (= $generated@@216 $generated@@31) (or (not (= $generated@@216 $generated@@31)) (not true))) (and (=  (or (not (= $generated@@216 $generated@@31)) (not true))  (or (not (= $generated@@216 $generated@@31)) (not true))) (and ($generated@@95 $generated@@217 $generated@@217) (not ($generated@@95 $generated@@217 $generated@@217))))))))) (=> (or (and (and (= $generated@@215 $generated@@215) (= $generated@@216 $generated@@216)) ($generated@@122 $generated@@217 $generated@@217)) (or (and ($generated@@95 $generated@@217 $generated@@217) (not ($generated@@95 $generated@@217 $generated@@217))) (and ($generated@@122 $generated@@217 $generated@@217) (or (and (= $generated@@216 $generated@@31) (or (not (= $generated@@216 $generated@@31)) (not true))) (and (=  (or (not (= $generated@@216 $generated@@31)) (not true))  (or (not (= $generated@@216 $generated@@31)) (not true))) (and ($generated@@95 $generated@@217 $generated@@217) (not ($generated@@95 $generated@@217 $generated@@217)))))))) (=> (and (and (or (and (and (= $generated@@215 $generated@@215) (= $generated@@216 $generated@@216)) ($generated@@122 $generated@@217 $generated@@217)) ($generated@@134 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@133 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) (and ($generated@@41 $generated@@217 ($generated@@42 $generated@@33 $generated@@216)) (= (ControlFlow 0 3) 2))) $generated@@234)))))))))))
(let (($generated@@238 true))
(let (($generated@@239  (=> (and (= $generated@@221 ($generated@@175 $generated@@31 $generated@@214 $generated@@4 $generated@@217)) ($generated@@105 ($generated@@42 $generated@@33 $generated@@215) $generated@@38 $generated@@214)) (=> (and (and ($generated@@35 $generated@@36 $generated@@217 ($generated@@37 $generated@@38) $generated@@214) (= $generated@@222 (forall (($generated@@240 T@U) ($generated@@241 T@U) )  (=> (and (and (or (not (= $generated@@240 $generated@@31)) (not true)) ($generated@@16 ($generated@@64 $generated@@12 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@33 ($generated@@68 $generated@@66 $generated@@67) $generated@@214 $generated@@240) $generated@@4)))) ($generated@@41 $generated@@217 ($generated@@42 $generated@@33 $generated@@240))) ($generated@@16 ($generated@@174 $generated@@33 $generated@@66 $generated@@12 $generated@@221 $generated@@240 $generated@@241)))))) (and ($generated@@112 $generated@@214 $generated@@215 $generated@@217) ($generated@@39 $generated@@214 $generated@@215 $generated@@217))) (and (=> (= (ControlFlow 0 20) (- 0 21)) $generated@@222) (=> $generated@@222 (and (and (and (=> (= (ControlFlow 0 20) 19) $generated@@233) (=> (= (ControlFlow 0 20) 1) $generated@@238)) (=> (= (ControlFlow 0 20) 3) $generated@@236)) (=> (= (ControlFlow 0 20) 8) $generated@@235))))))))
(let (($generated@@242  (=> (and (and (and ($generated@@30 $generated@@214) ($generated@@223 $generated@@214)) (and (or (not (= $generated@@215 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@215 $generated@@34) ($generated@@35 $generated@@33 $generated@@215 $generated@@34 $generated@@214)))) (and (and ($generated@@32 $generated@@33 $generated@@216 $generated@@34) ($generated@@32 $generated@@36 $generated@@217 ($generated@@37 $generated@@38))) (and (= 2 $generated@@27) (= (ControlFlow 0 22) 20)))) $generated@@239)))
$generated@@242))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
