(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@36 () Int)
(declare-fun $generated@@37 (T@U T@U T@U) Int)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (Int) Int)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@58 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@112 (T@U Bool T@U Int) T@U)
(declare-fun $generated@@113 (T@U Int) Bool)
(declare-fun $generated@@114 () Bool)
(declare-fun $generated@@115 () T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Int)
(declare-fun $generated@@170 (T@U) Int)
(declare-fun $generated@@189 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@190 () T@T)
(declare-fun $generated@@191 () T@T)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@194 () T@T)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! ($generated@@25 $generated@@11 $generated@@27 $generated@@26 $generated@@28)
 :pattern ( ($generated@@25 $generated@@11 $generated@@27 $generated@@26 $generated@@28))
)))
(assert (= ($generated@@9 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@33 $generated@@34)) ($generated@@29 $generated@@35))
 :pattern ( ($generated@@29 $generated@@35) ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@33 $generated@@34)))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (or ($generated@@40 $generated@@45 ($generated@@39 $generated@@31 $generated@@47)) (and (< 1 $generated@@36) ($generated@@30 $generated@@31 $generated@@47 ($generated@@41 $generated@@45)))) (and (=> (not ($generated@@14 ($generated@@39 $generated@@10 ($generated@@13 ($generated@@42 ($generated@@39 $generated@@31 $generated@@47)))))) (let (($generated@@48 ($generated@@39 $generated@@31 ($generated@@43 ($generated@@39 $generated@@31 $generated@@47)))))
($generated@@40 $generated@@45 $generated@@48))) (= ($generated@@37 $generated@@45 ($generated@@38 $generated@@46) ($generated@@39 $generated@@31 $generated@@47)) (ite ($generated@@42 ($generated@@39 $generated@@31 $generated@@47)) 0 (let (($generated@@49 ($generated@@39 $generated@@31 ($generated@@43 ($generated@@39 $generated@@31 $generated@@47)))))
($generated@@44 (+ 1 ($generated@@37 $generated@@45 ($generated@@38 $generated@@46) $generated@@49))))))))
 :weight 3
 :pattern ( ($generated@@37 $generated@@45 ($generated@@38 $generated@@46) ($generated@@39 $generated@@31 $generated@@47)))
))))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@37 $generated@@50 ($generated@@38 $generated@@51) $generated@@52) ($generated@@37 $generated@@50 $generated@@51 $generated@@52))
 :pattern ( ($generated@@37 $generated@@50 ($generated@@38 $generated@@51) $generated@@52))
)))
(assert (= ($generated@@53 $generated@@54) $generated@@4))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> ($generated@@55 $generated@@57) ($generated@@25 $generated@@31 $generated@@54 ($generated@@41 $generated@@56) $generated@@57))
 :pattern ( ($generated@@25 $generated@@31 $generated@@54 ($generated@@41 $generated@@56) $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@58 $generated@@62 $generated@@63) ($generated@@32 $generated@@60 $generated@@61))  (and ($generated@@59 $generated@@62 $generated@@60) ($generated@@59 $generated@@63 $generated@@61)))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@58 $generated@@62 $generated@@63) ($generated@@32 $generated@@60 $generated@@61)))
)))
(assert (forall (($generated@@64 T@U) ) (! ($generated@@30 $generated@@31 $generated@@54 ($generated@@41 $generated@@64))
 :pattern ( ($generated@@30 $generated@@31 $generated@@54 ($generated@@41 $generated@@64)))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@65 $generated@@66 $generated@@67) (= $generated@@66 $generated@@67))
 :pattern ( ($generated@@65 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (and ($generated@@68 $generated@@70) ($generated@@68 $generated@@71)) (= ($generated@@65 $generated@@70 $generated@@71)  (and (= ($generated@@69 $generated@@70) ($generated@@69 $generated@@71)) ($generated@@65 ($generated@@43 $generated@@70) ($generated@@43 $generated@@71)))))
 :pattern ( ($generated@@65 $generated@@70 $generated@@71) ($generated@@68 $generated@@70))
 :pattern ( ($generated@@65 $generated@@70 $generated@@71) ($generated@@68 $generated@@71))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@44 $generated@@72) $generated@@72)
 :pattern ( ($generated@@44 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@39 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@39 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@75 $generated@@77 $generated@@78) ($generated@@41 $generated@@76))  (and ($generated@@59 $generated@@77 $generated@@76) ($generated@@30 $generated@@31 $generated@@78 ($generated@@41 $generated@@76))))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@75 $generated@@77 $generated@@78) ($generated@@41 $generated@@76)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@55 $generated@@84) (= ($generated@@25 $generated@@31 ($generated@@58 $generated@@82 $generated@@83) ($generated@@32 $generated@@80 $generated@@81) $generated@@84)  (and ($generated@@79 $generated@@82 $generated@@80 $generated@@84) ($generated@@79 $generated@@83 $generated@@81 $generated@@84))))
 :pattern ( ($generated@@25 $generated@@31 ($generated@@58 $generated@@82 $generated@@83) ($generated@@32 $generated@@80 $generated@@81) $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@29 $generated@@85) (= ($generated@@53 $generated@@85) $generated@@1))
 :pattern ( ($generated@@29 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@42 $generated@@86) (= ($generated@@53 $generated@@86) $generated@@4))
 :pattern ( ($generated@@42 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@68 $generated@@87) (= ($generated@@53 $generated@@87) $generated@@5))
 :pattern ( ($generated@@68 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@88 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@88 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@29 $generated@@92) (exists (($generated@@93 T@U) ($generated@@94 T@U) ) (= $generated@@92 ($generated@@58 $generated@@93 $generated@@94))))
 :pattern ( ($generated@@29 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@68 $generated@@95) (exists (($generated@@96 T@U) ($generated@@97 T@U) ) (= $generated@@95 ($generated@@75 $generated@@96 $generated@@97))))
 :pattern ( ($generated@@68 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@42 $generated@@98) (= $generated@@98 $generated@@54))
 :pattern ( ($generated@@42 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@30 $generated@@11 $generated@@99 $generated@@26) (<= ($generated@@44 0) ($generated@@16 $generated@@99)))
 :pattern ( ($generated@@30 $generated@@11 $generated@@99 $generated@@26))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@40 $generated@@100 $generated@@102) (and (< 1 $generated@@36) ($generated@@30 $generated@@31 $generated@@102 ($generated@@41 $generated@@100)))) (and (=> (not ($generated@@42 $generated@@102)) (let (($generated@@103 ($generated@@43 $generated@@102)))
($generated@@40 $generated@@100 $generated@@103))) (= ($generated@@37 $generated@@100 ($generated@@38 $generated@@101) $generated@@102) (ite ($generated@@42 $generated@@102) 0 (let (($generated@@104 ($generated@@43 $generated@@102)))
(+ 1 ($generated@@37 $generated@@100 $generated@@101 $generated@@104)))))))
 :pattern ( ($generated@@37 $generated@@100 ($generated@@38 $generated@@101) $generated@@102))
))))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@79 ($generated@@89 $generated@@108 $generated@@105) $generated@@106 $generated@@107) ($generated@@25 $generated@@108 $generated@@105 $generated@@106 $generated@@107))
 :pattern ( ($generated@@79 ($generated@@89 $generated@@108 $generated@@105) $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@111 T@U) ) (!  (and (= ($generated@@109 ($generated@@41 $generated@@111)) $generated@@3) (= ($generated@@110 ($generated@@41 $generated@@111)) $generated@@8))
 :pattern ( ($generated@@41 $generated@@111))
)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@118 T@U) ($generated@@119 Bool) ($generated@@120 T@U) ($generated@@121 Int) ) (!  (=> (or ($generated@@113 $generated@@120 $generated@@121) (and (< 2 $generated@@36) (and ($generated@@30 $generated@@31 $generated@@120 ($generated@@41 $generated@@26)) (<= ($generated@@44 0) $generated@@121)))) (and (let (($generated@@122 ($generated@@112 $generated@@118 $generated@@114 $generated@@120 $generated@@121)))
(= ($generated@@37 $generated@@26 ($generated@@38 $generated@@115) $generated@@120) (+ ($generated@@37 $generated@@26 ($generated@@38 $generated@@115) ($generated@@88 $generated@@31 ($generated@@116 $generated@@122))) ($generated@@37 $generated@@26 ($generated@@38 $generated@@115) ($generated@@88 $generated@@31 ($generated@@117 $generated@@122)))))) ($generated@@30 $generated@@31 ($generated@@112 $generated@@118 $generated@@119 $generated@@120 $generated@@121) ($generated@@32 ($generated@@41 $generated@@26) ($generated@@41 $generated@@26)))))
 :pattern ( ($generated@@112 $generated@@118 $generated@@119 $generated@@120 $generated@@121))
))))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@59 $generated@@123 $generated@@26) (and (= ($generated@@89 $generated@@11 ($generated@@88 $generated@@11 $generated@@123)) $generated@@123) ($generated@@30 $generated@@11 ($generated@@88 $generated@@11 $generated@@123) $generated@@26)))
 :pattern ( ($generated@@59 $generated@@123 $generated@@26))
)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 Int) ) (!  (=> (or ($generated@@113 ($generated@@39 $generated@@31 $generated@@125) ($generated@@44 $generated@@126)) (and (< 2 $generated@@36) (and ($generated@@30 $generated@@31 $generated@@125 ($generated@@41 $generated@@26)) (<= ($generated@@44 0) $generated@@126)))) (and (=> (not ($generated@@14 ($generated@@39 $generated@@10 ($generated@@13 ($generated@@42 ($generated@@39 $generated@@31 $generated@@125)))))) (let (($generated@@127 ($generated@@39 $generated@@31 ($generated@@43 ($generated@@39 $generated@@31 $generated@@125)))))
($generated@@113 $generated@@127 ($generated@@44 $generated@@126)))) (= ($generated@@112 ($generated@@38 $generated@@124) true ($generated@@39 $generated@@31 $generated@@125) ($generated@@44 $generated@@126)) (ite ($generated@@42 ($generated@@39 $generated@@31 $generated@@125)) ($generated@@58 ($generated@@89 $generated@@31 ($generated@@39 $generated@@31 $generated@@54)) ($generated@@89 $generated@@31 ($generated@@39 $generated@@31 $generated@@54))) (let (($generated@@128 ($generated@@39 $generated@@31 ($generated@@43 ($generated@@39 $generated@@31 $generated@@125)))))
(let (($generated@@129 ($generated@@44 ($generated@@16 ($generated@@88 $generated@@11 ($generated@@69 ($generated@@39 $generated@@31 $generated@@125)))))))
(let (($generated@@130 ($generated@@88 $generated@@31 ($generated@@117 ($generated@@112 ($generated@@38 $generated@@124) $generated@@114 $generated@@128 ($generated@@44 $generated@@126))))))
(let (($generated@@131 ($generated@@88 $generated@@31 ($generated@@116 ($generated@@112 ($generated@@38 $generated@@124) $generated@@114 $generated@@128 ($generated@@44 $generated@@126))))))
(ite (< $generated@@129 $generated@@126) ($generated@@58 ($generated@@89 $generated@@31 ($generated@@75 ($generated@@89 $generated@@11 ($generated@@15 $generated@@129)) $generated@@131)) ($generated@@89 $generated@@31 $generated@@130)) ($generated@@58 ($generated@@89 $generated@@31 $generated@@131) ($generated@@89 $generated@@31 ($generated@@75 ($generated@@89 $generated@@11 ($generated@@15 $generated@@129)) $generated@@130))))))))))))
 :weight 3
 :pattern ( ($generated@@112 ($generated@@38 $generated@@124) true ($generated@@39 $generated@@31 $generated@@125) ($generated@@44 $generated@@126)))
))))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 Int) ) (!  (=> (or ($generated@@113 $generated@@133 $generated@@134) (and (< 2 $generated@@36) (and ($generated@@30 $generated@@31 $generated@@133 ($generated@@41 $generated@@26)) (<= ($generated@@44 0) $generated@@134)))) (and (=> (not ($generated@@42 $generated@@133)) (let (($generated@@135 ($generated@@43 $generated@@133)))
($generated@@113 $generated@@135 $generated@@134))) (= ($generated@@112 ($generated@@38 $generated@@132) true $generated@@133 $generated@@134) (ite ($generated@@42 $generated@@133) ($generated@@58 ($generated@@89 $generated@@31 ($generated@@39 $generated@@31 $generated@@54)) ($generated@@89 $generated@@31 ($generated@@39 $generated@@31 $generated@@54))) (let (($generated@@136 ($generated@@43 $generated@@133)))
(let (($generated@@137 ($generated@@16 ($generated@@88 $generated@@11 ($generated@@69 $generated@@133)))))
(let (($generated@@138 ($generated@@88 $generated@@31 ($generated@@117 ($generated@@112 $generated@@132 $generated@@114 $generated@@136 $generated@@134)))))
(let (($generated@@139 ($generated@@88 $generated@@31 ($generated@@116 ($generated@@112 $generated@@132 $generated@@114 $generated@@136 $generated@@134)))))
(ite (< $generated@@137 $generated@@134) ($generated@@58 ($generated@@89 $generated@@31 ($generated@@75 ($generated@@89 $generated@@11 ($generated@@15 $generated@@137)) $generated@@139)) ($generated@@89 $generated@@31 $generated@@138)) ($generated@@58 ($generated@@89 $generated@@31 $generated@@139) ($generated@@89 $generated@@31 ($generated@@75 ($generated@@89 $generated@@11 ($generated@@15 $generated@@137)) $generated@@138))))))))))))
 :pattern ( ($generated@@112 ($generated@@38 $generated@@132) true $generated@@133 $generated@@134))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@141 ($generated@@41 $generated@@140)) (or ($generated@@42 $generated@@141) ($generated@@68 $generated@@141)))
 :pattern ( ($generated@@68 $generated@@141) ($generated@@30 $generated@@31 $generated@@141 ($generated@@41 $generated@@140)))
 :pattern ( ($generated@@42 $generated@@141) ($generated@@30 $generated@@31 $generated@@141 ($generated@@41 $generated@@140)))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@59 ($generated@@89 $generated@@144 $generated@@142) $generated@@143) ($generated@@30 $generated@@144 $generated@@142 $generated@@143))
 :pattern ( ($generated@@59 ($generated@@89 $generated@@144 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and ($generated@@42 $generated@@145) ($generated@@42 $generated@@146)) ($generated@@65 $generated@@145 $generated@@146))
 :pattern ( ($generated@@65 $generated@@145 $generated@@146) ($generated@@42 $generated@@145))
 :pattern ( ($generated@@65 $generated@@145 $generated@@146) ($generated@@42 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@53 ($generated@@58 $generated@@147 $generated@@148)) $generated@@1)
 :pattern ( ($generated@@58 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@149 ($generated@@32 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@32 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@152 ($generated@@32 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@32 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@116 ($generated@@58 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@58 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@117 ($generated@@58 $generated@@157 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@58 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@53 ($generated@@75 $generated@@159 $generated@@160)) $generated@@5)
 :pattern ( ($generated@@75 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@69 ($generated@@75 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@75 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@43 ($generated@@75 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@75 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (! (= ($generated@@165 ($generated@@41 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@41 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@88 $generated@@168 ($generated@@89 $generated@@168 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@89 $generated@@168 $generated@@167))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (< ($generated@@169 $generated@@171) ($generated@@170 ($generated@@58 $generated@@171 $generated@@172)))
 :pattern ( ($generated@@58 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (< ($generated@@169 $generated@@174) ($generated@@170 ($generated@@58 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@58 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (< ($generated@@169 $generated@@175) ($generated@@170 ($generated@@75 $generated@@175 $generated@@176)))
 :pattern ( ($generated@@75 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (< ($generated@@170 $generated@@178) ($generated@@170 ($generated@@75 $generated@@177 $generated@@178)))
 :pattern ( ($generated@@75 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Bool) ($generated@@181 T@U) ($generated@@182 Int) ) (! (= ($generated@@112 ($generated@@38 $generated@@179) $generated@@180 $generated@@181 $generated@@182) ($generated@@112 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
 :pattern ( ($generated@@112 ($generated@@38 $generated@@179) $generated@@180 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@59 $generated@@185 ($generated@@32 $generated@@183 $generated@@184)) (and (= ($generated@@89 $generated@@31 ($generated@@88 $generated@@31 $generated@@185)) $generated@@185) ($generated@@30 $generated@@31 ($generated@@88 $generated@@31 $generated@@185) ($generated@@32 $generated@@183 $generated@@184))))
 :pattern ( ($generated@@59 $generated@@185 ($generated@@32 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@55 $generated@@188) (and ($generated@@68 $generated@@186) ($generated@@25 $generated@@31 $generated@@186 ($generated@@41 $generated@@187) $generated@@188))) ($generated@@79 ($generated@@69 $generated@@186) $generated@@187 $generated@@188))
 :pattern ( ($generated@@79 ($generated@@69 $generated@@186) $generated@@187 $generated@@188))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@189 $generated@@200 $generated@@201 $generated@@202 ($generated@@196 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@205 $generated@@206) $generated@@203)
 :weight 0
)) (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ($generated@@209 T@T) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@189 $generated@@207 $generated@@208 $generated@@209 ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@189 $generated@@207 $generated@@208 $generated@@209 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@T) ($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@189 $generated@@216 $generated@@217 $generated@@218 ($generated@@196 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@189 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (= ($generated@@9 $generated@@190) 4)) (= ($generated@@9 $generated@@191) 5)) (forall (($generated@@225 T@T) ($generated@@226 T@T) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (= ($generated@@193 $generated@@225 $generated@@226 ($generated@@197 $generated@@225 $generated@@226 $generated@@228 $generated@@229 $generated@@227) $generated@@229) $generated@@227)
 :weight 0
))) (forall (($generated@@230 T@T) ($generated@@231 T@T) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@234 $generated@@235) (= ($generated@@193 $generated@@230 $generated@@231 ($generated@@197 $generated@@230 $generated@@231 $generated@@233 $generated@@234 $generated@@232) $generated@@235) ($generated@@193 $generated@@230 $generated@@231 $generated@@233 $generated@@235)))
 :weight 0
))) (= ($generated@@9 $generated@@194) 6)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (= ($generated@@9 ($generated@@195 $generated@@236 $generated@@237)) 7))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@198 ($generated@@195 $generated@@238 $generated@@239)) $generated@@238)
 :pattern ( ($generated@@195 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@199 ($generated@@195 $generated@@240 $generated@@241)) $generated@@241)
 :pattern ( ($generated@@195 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (= ($generated@@14 ($generated@@189 $generated@@190 $generated@@191 $generated@@10 ($generated@@192 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (or (not (= $generated@@246 $generated@@242)) (not true)) ($generated@@14 ($generated@@88 $generated@@10 ($generated@@193 $generated@@191 $generated@@194 ($generated@@193 $generated@@190 ($generated@@195 $generated@@191 $generated@@194) $generated@@243 $generated@@246) $generated@@244)))) $generated@@245))
 :pattern ( ($generated@@189 $generated@@190 $generated@@191 $generated@@10 ($generated@@192 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (= ($generated@@109 ($generated@@32 $generated@@248 $generated@@249)) $generated@@2) (= ($generated@@110 ($generated@@32 $generated@@248 $generated@@249)) $generated@@7))
 :pattern ( ($generated@@32 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@169 ($generated@@89 $generated@@31 $generated@@250)) ($generated@@170 $generated@@250))
 :pattern ( ($generated@@169 ($generated@@89 $generated@@31 $generated@@250)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> ($generated@@59 $generated@@252 ($generated@@41 $generated@@251)) (and (= ($generated@@89 $generated@@31 ($generated@@88 $generated@@31 $generated@@252)) $generated@@252) ($generated@@30 $generated@@31 ($generated@@88 $generated@@31 $generated@@252) ($generated@@41 $generated@@251))))
 :pattern ( ($generated@@59 $generated@@252 ($generated@@41 $generated@@251)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and ($generated@@55 $generated@@255) (and ($generated@@68 $generated@@253) ($generated@@25 $generated@@31 $generated@@253 ($generated@@41 $generated@@254) $generated@@255))) ($generated@@25 $generated@@31 ($generated@@43 $generated@@253) ($generated@@41 $generated@@254) $generated@@255))
 :pattern ( ($generated@@25 $generated@@31 ($generated@@43 $generated@@253) ($generated@@41 $generated@@254) $generated@@255))
)))
(assert (= ($generated@@109 $generated@@26) $generated@@0))
(assert (= ($generated@@110 $generated@@26) $generated@@6))
(assert (= $generated@@54 ($generated@@39 $generated@@31 $generated@@54)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and ($generated@@55 $generated@@258) (and ($generated@@29 $generated@@256) (exists (($generated@@259 T@U) ) (! ($generated@@25 $generated@@31 $generated@@256 ($generated@@32 $generated@@257 $generated@@259) $generated@@258)
 :pattern ( ($generated@@25 $generated@@31 $generated@@256 ($generated@@32 $generated@@257 $generated@@259) $generated@@258))
)))) ($generated@@79 ($generated@@116 $generated@@256) $generated@@257 $generated@@258))
 :pattern ( ($generated@@79 ($generated@@116 $generated@@256) $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and ($generated@@55 $generated@@262) (and ($generated@@29 $generated@@260) (exists (($generated@@263 T@U) ) (! ($generated@@25 $generated@@31 $generated@@260 ($generated@@32 $generated@@263 $generated@@261) $generated@@262)
 :pattern ( ($generated@@25 $generated@@31 $generated@@260 ($generated@@32 $generated@@263 $generated@@261) $generated@@262))
)))) ($generated@@79 ($generated@@117 $generated@@260) $generated@@261 $generated@@262))
 :pattern ( ($generated@@79 ($generated@@117 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= ($generated@@58 ($generated@@39 $generated@@194 $generated@@264) ($generated@@39 $generated@@194 $generated@@265)) ($generated@@39 $generated@@31 ($generated@@58 $generated@@264 $generated@@265)))
 :pattern ( ($generated@@58 ($generated@@39 $generated@@194 $generated@@264) ($generated@@39 $generated@@194 $generated@@265)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= ($generated@@75 ($generated@@39 $generated@@194 $generated@@266) ($generated@@39 $generated@@31 $generated@@267)) ($generated@@39 $generated@@31 ($generated@@75 $generated@@266 $generated@@267)))
 :pattern ( ($generated@@75 ($generated@@39 $generated@@194 $generated@@266) ($generated@@39 $generated@@31 $generated@@267)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@89 $generated@@11 ($generated@@15 ($generated@@44 $generated@@268))) ($generated@@39 $generated@@194 ($generated@@89 $generated@@11 ($generated@@15 $generated@@268))))
 :pattern ( ($generated@@89 $generated@@11 ($generated@@15 ($generated@@44 $generated@@268))))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (= ($generated@@89 $generated@@270 ($generated@@39 $generated@@270 $generated@@269)) ($generated@@39 $generated@@194 ($generated@@89 $generated@@270 $generated@@269)))
 :pattern ( ($generated@@89 $generated@@270 ($generated@@39 $generated@@270 $generated@@269)))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (or ($generated@@40 $generated@@271 $generated@@273) (and (< 1 $generated@@36) ($generated@@30 $generated@@31 $generated@@273 ($generated@@41 $generated@@271)))) (<= ($generated@@44 0) ($generated@@37 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@37 $generated@@271 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> ($generated@@55 $generated@@277) (= ($generated@@25 $generated@@31 ($generated@@75 $generated@@275 $generated@@276) ($generated@@41 $generated@@274) $generated@@277)  (and ($generated@@79 $generated@@275 $generated@@274 $generated@@277) ($generated@@25 $generated@@31 $generated@@276 ($generated@@41 $generated@@274) $generated@@277))))
 :pattern ( ($generated@@25 $generated@@31 ($generated@@75 $generated@@275 $generated@@276) ($generated@@41 $generated@@274) $generated@@277))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () Int)
(declare-fun $generated@@280 () Int)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 () Int)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 () Int)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 () T@U)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@293  (=> (= (ControlFlow 0 6) (- 0 5)) (let (($generated@@294 ($generated@@112 ($generated@@38 ($generated@@38 $generated@@115)) $generated@@114 $generated@@278 $generated@@279)))
(= ($generated@@37 $generated@@26 ($generated@@38 ($generated@@38 $generated@@115)) $generated@@278) (+ ($generated@@37 $generated@@26 ($generated@@38 ($generated@@38 $generated@@115)) ($generated@@88 $generated@@31 ($generated@@116 $generated@@294))) ($generated@@37 $generated@@26 ($generated@@38 ($generated@@38 $generated@@115)) ($generated@@88 $generated@@31 ($generated@@117 $generated@@294)))))))))
(let (($generated@@295  (=> (and (and (<= $generated@@279 $generated@@280) (= ($generated@@112 ($generated@@38 $generated@@115) $generated@@114 $generated@@278 $generated@@279) ($generated@@58 ($generated@@89 $generated@@31 $generated@@281) ($generated@@89 $generated@@31 ($generated@@75 ($generated@@89 $generated@@11 ($generated@@15 $generated@@280)) $generated@@282))))) (and ($generated@@30 $generated@@31 ($generated@@112 ($generated@@38 $generated@@115) $generated@@114 $generated@@278 $generated@@279) ($generated@@32 ($generated@@41 $generated@@26) ($generated@@41 $generated@@26))) (= (ControlFlow 0 9) 6))) $generated@@293)))
(let (($generated@@296  (=> (and (and (< $generated@@280 $generated@@279) (= ($generated@@112 ($generated@@38 $generated@@115) $generated@@114 $generated@@278 $generated@@279) ($generated@@58 ($generated@@89 $generated@@31 ($generated@@75 ($generated@@89 $generated@@11 ($generated@@15 $generated@@280)) $generated@@281)) ($generated@@89 $generated@@31 $generated@@282)))) (and ($generated@@30 $generated@@31 ($generated@@112 ($generated@@38 $generated@@115) $generated@@114 $generated@@278 $generated@@279) ($generated@@32 ($generated@@41 $generated@@26) ($generated@@41 $generated@@26))) (= (ControlFlow 0 8) 6))) $generated@@293)))
(let (($generated@@297  (=> (= $generated@@278 ($generated@@75 ($generated@@89 $generated@@11 ($generated@@15 $generated@@283)) $generated@@284)) (=> (and (<= ($generated@@44 0) $generated@@283) ($generated@@30 $generated@@31 $generated@@284 ($generated@@41 $generated@@26))) (=> (and (and (and (= $generated@@285 $generated@@284) ($generated@@30 $generated@@31 $generated@@285 ($generated@@41 $generated@@26))) (and (= $generated@@286 $generated@@285) (= $generated@@287 $generated@@283))) (and (and ($generated@@30 $generated@@11 ($generated@@15 $generated@@287) $generated@@26) (= $generated@@280 $generated@@287)) (and ($generated@@25 $generated@@31 $generated@@286 ($generated@@41 $generated@@26) $generated@@288) ($generated@@25 $generated@@11 ($generated@@15 $generated@@279) $generated@@26 $generated@@288)))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (or (<= 0 $generated@@279) (< ($generated@@170 $generated@@286) ($generated@@170 $generated@@278))) (= $generated@@279 $generated@@279))) (=> (or (or (<= 0 $generated@@279) (< ($generated@@170 $generated@@286) ($generated@@170 $generated@@278))) (= $generated@@279 $generated@@279)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (< ($generated@@170 $generated@@286) ($generated@@170 $generated@@278)) (and (= ($generated@@170 $generated@@286) ($generated@@170 $generated@@278)) (< $generated@@279 $generated@@279)))) (=> (or (< ($generated@@170 $generated@@286) ($generated@@170 $generated@@278)) (and (= ($generated@@170 $generated@@286) ($generated@@170 $generated@@278)) (< $generated@@279 $generated@@279))) (=> ($generated@@113 $generated@@286 $generated@@279) (=> (and ($generated@@29 ($generated@@112 ($generated@@38 $generated@@115) $generated@@114 $generated@@286 $generated@@279)) (= $generated@@289 ($generated@@112 ($generated@@38 $generated@@115) $generated@@114 $generated@@286 $generated@@279))) (=> (and (and ($generated@@113 $generated@@286 $generated@@279) ($generated@@30 $generated@@31 $generated@@289 ($generated@@32 ($generated@@41 $generated@@26) ($generated@@41 $generated@@26)))) (and ($generated@@29 $generated@@289) (= ($generated@@58 ($generated@@89 $generated@@31 $generated@@281) ($generated@@89 $generated@@31 $generated@@282)) $generated@@289))) (and (=> (= (ControlFlow 0 10) 8) $generated@@296) (=> (= (ControlFlow 0 10) 9) $generated@@295))))))))))))))
(let (($generated@@298  (=> (and (and (= $generated@@278 $generated@@54) (= ($generated@@112 ($generated@@38 $generated@@115) $generated@@114 $generated@@278 $generated@@279) ($generated@@39 $generated@@31 ($generated@@58 ($generated@@89 $generated@@31 ($generated@@39 $generated@@31 $generated@@54)) ($generated@@89 $generated@@31 ($generated@@39 $generated@@31 $generated@@54)))))) (and ($generated@@30 $generated@@31 ($generated@@112 ($generated@@38 $generated@@115) $generated@@114 $generated@@278 $generated@@279) ($generated@@32 ($generated@@41 $generated@@26) ($generated@@41 $generated@@26))) (= (ControlFlow 0 7) 6))) $generated@@293)))
(let (($generated@@299 true))
(let (($generated@@300  (=> (or (not (= $generated@@278 $generated@@54)) (not true)) (and (=> (= (ControlFlow 0 13) 10) $generated@@297) (=> (= (ControlFlow 0 13) 4) $generated@@299)))))
(let (($generated@@301  (=> ($generated@@30 $generated@@31 ($generated@@112 ($generated@@38 $generated@@115) $generated@@114 $generated@@278 $generated@@279) ($generated@@32 ($generated@@41 $generated@@26) ($generated@@41 $generated@@26))) (=> (and ($generated@@25 $generated@@31 $generated@@278 ($generated@@41 $generated@@26) $generated@@288) ($generated@@25 $generated@@11 ($generated@@15 $generated@@279) $generated@@26 $generated@@288)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@279) (< ($generated@@170 $generated@@278) ($generated@@170 $generated@@278))) (= $generated@@279 $generated@@279))) (=> (or (or (<= 0 $generated@@279) (< ($generated@@170 $generated@@278) ($generated@@170 $generated@@278))) (= $generated@@279 $generated@@279)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and ($generated@@65 $generated@@278 $generated@@278) (= $generated@@279 $generated@@279)) (or (< ($generated@@170 $generated@@278) ($generated@@170 $generated@@278)) (and (= ($generated@@170 $generated@@278) ($generated@@170 $generated@@278)) (< $generated@@279 $generated@@279)))))))))))
(let (($generated@@302  (=> (= $generated@@290 ($generated@@192 $generated@@291 $generated@@288 $generated false)) (and (and (=> (= (ControlFlow 0 14) 2) $generated@@301) (=> (= (ControlFlow 0 14) 7) $generated@@298)) (=> (= (ControlFlow 0 14) 13) $generated@@300)))))
(let (($generated@@303  (=> (and ($generated@@55 $generated@@288) ($generated@@292 $generated@@288)) (=> (and (and ($generated@@30 $generated@@31 $generated@@278 ($generated@@41 $generated@@26)) (<= ($generated@@44 0) $generated@@279)) (and (= 2 $generated@@36) (= (ControlFlow 0 15) 14))) $generated@@302))))
$generated@@303)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
