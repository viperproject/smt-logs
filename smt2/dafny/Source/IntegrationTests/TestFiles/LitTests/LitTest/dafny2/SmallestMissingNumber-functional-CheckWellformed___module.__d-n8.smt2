(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@56 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U T@U) Bool)
(declare-fun $generated@@64 () Int)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) Bool)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@150 (T@U) Int)
(declare-fun $generated@@163 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@22 ($generated@@21 $generated@@23 $generated@@24) $generated@@24)
 :pattern ( ($generated@@21 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@22 $generated@@25 $generated@@27) ($generated@@22 ($generated@@21 $generated@@25 $generated@@26) $generated@@27))
 :pattern ( ($generated@@21 $generated@@25 $generated@@26) ($generated@@22 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@22 $generated@@29 $generated@@31) ($generated@@22 ($generated@@28 $generated@@29 $generated@@30) $generated@@31))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30) ($generated@@22 $generated@@29 $generated@@31))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@22 $generated@@33 $generated@@34) ($generated@@22 ($generated@@28 $generated@@32 $generated@@33) $generated@@34))
 :pattern ( ($generated@@28 $generated@@32 $generated@@33) ($generated@@22 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@22 ($generated@@21 $generated@@35 $generated@@36) $generated@@37)  (or (= $generated@@37 $generated@@36) ($generated@@22 $generated@@35 $generated@@37)))
 :pattern ( ($generated@@22 ($generated@@21 $generated@@35 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@22 $generated@@40 $generated@@41) (not ($generated@@22 ($generated@@38 $generated@@39 $generated@@40) $generated@@41)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40) ($generated@@22 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ) (!  (not ($generated@@22 $generated@@42 $generated@@43))
 :pattern ( ($generated@@22 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@44 $generated@@46 ($generated@@45 $generated@@47) $generated@@48) ($generated@@44 $generated@@46 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 ($generated@@45 $generated@@47) $generated@@48))
)))
(assert (= ($generated@@49 $generated@@50) $generated@@2))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@28 ($generated@@28 $generated@@51 $generated@@52) $generated@@52) ($generated@@28 $generated@@51 $generated@@52))
 :pattern ( ($generated@@28 ($generated@@28 $generated@@51 $generated@@52) $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@22 ($generated@@38 $generated@@53 $generated@@54) $generated@@55)  (and ($generated@@22 $generated@@53 $generated@@55) (not ($generated@@22 $generated@@54 $generated@@55))))
 :pattern ( ($generated@@22 ($generated@@38 $generated@@53 $generated@@54) $generated@@55))
)))
(assert (= ($generated@@5 $generated@@57) 3))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@59 $generated@@61) ($generated@@56 $generated@@57 $generated@@50 ($generated@@58 $generated@@60) $generated@@61))
 :pattern ( ($generated@@56 $generated@@57 $generated@@50 ($generated@@58 $generated@@60) $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! ($generated@@62 $generated@@57 $generated@@50 ($generated@@58 $generated@@63))
 :pattern ( ($generated@@62 $generated@@57 $generated@@50 ($generated@@58 $generated@@63)))
)))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (or ($generated@@65 $generated@@69 $generated@@71) (and (< 1 $generated@@64) ($generated@@62 $generated@@57 $generated@@71 ($generated@@58 $generated@@69)))) (and (=> (not ($generated@@66 $generated@@71)) (let (($generated@@72 ($generated@@67 $generated@@71)))
($generated@@65 $generated@@69 $generated@@72))) (= ($generated@@44 $generated@@69 ($generated@@45 $generated@@70) $generated@@71) (ite ($generated@@66 $generated@@71) $generated@@42 (let (($generated@@73 ($generated@@67 $generated@@71)))
(let (($generated@@74 ($generated@@68 $generated@@71)))
($generated@@28 ($generated@@21 $generated@@42 $generated@@74) ($generated@@44 $generated@@69 $generated@@70 $generated@@73))))))))
 :pattern ( ($generated@@44 $generated@@69 ($generated@@45 $generated@@70) $generated@@71))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@62 $generated@@57 ($generated@@78 $generated@@81 $generated@@82) ($generated@@58 $generated@@80))  (and ($generated@@79 $generated@@81 $generated@@80) ($generated@@62 $generated@@57 $generated@@82 ($generated@@58 $generated@@80))))
 :pattern ( ($generated@@62 $generated@@57 ($generated@@78 $generated@@81 $generated@@82) ($generated@@58 $generated@@80)))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@66 $generated@@83) (= ($generated@@49 $generated@@83) $generated@@2))
 :pattern ( ($generated@@66 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 $generated@@85) (= ($generated@@49 $generated@@85) $generated@@3))
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@86 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@86 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@90 $generated@@91 $generated@@92) (forall (($generated@@93 T@U) ) (!  (or (not ($generated@@22 $generated@@91 $generated@@93)) (not ($generated@@22 $generated@@92 $generated@@93)))
 :pattern ( ($generated@@22 $generated@@91 $generated@@93))
 :pattern ( ($generated@@22 $generated@@92 $generated@@93))
)))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92))
)))
(assert (= ($generated@@5 $generated@@94) 4))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@65 $generated@@95 ($generated@@75 $generated@@57 $generated@@97)) (and (< 1 $generated@@64) ($generated@@62 $generated@@57 $generated@@97 ($generated@@58 $generated@@95)))) (and (=> (not ($generated@@10 ($generated@@75 $generated@@6 ($generated@@9 ($generated@@66 ($generated@@75 $generated@@57 $generated@@97)))))) (let (($generated@@98 ($generated@@75 $generated@@57 ($generated@@67 ($generated@@75 $generated@@57 $generated@@97)))))
($generated@@65 $generated@@95 $generated@@98))) (= ($generated@@44 $generated@@95 ($generated@@45 $generated@@96) ($generated@@75 $generated@@57 $generated@@97)) (ite ($generated@@66 ($generated@@75 $generated@@57 $generated@@97)) $generated@@42 (let (($generated@@99 ($generated@@75 $generated@@57 ($generated@@67 ($generated@@75 $generated@@57 $generated@@97)))))
(let (($generated@@100 ($generated@@75 $generated@@94 ($generated@@68 ($generated@@75 $generated@@57 $generated@@97)))))
($generated@@28 ($generated@@21 $generated@@42 $generated@@100) ($generated@@44 $generated@@95 ($generated@@45 $generated@@96) $generated@@99))))))))
 :weight 3
 :pattern ( ($generated@@44 $generated@@95 ($generated@@45 $generated@@96) ($generated@@75 $generated@@57 $generated@@97)))
))))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@84 $generated@@101) (exists (($generated@@102 T@U) ($generated@@103 T@U) ) (= $generated@@101 ($generated@@78 $generated@@102 $generated@@103))))
 :pattern ( ($generated@@84 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@66 $generated@@104) (= $generated@@104 $generated@@50))
 :pattern ( ($generated@@66 $generated@@104))
)))
(assert (= ($generated@@5 $generated@@105) 5))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@62 $generated@@105 $generated@@107 ($generated@@106 $generated@@108)) (forall (($generated@@109 T@U) ) (!  (=> ($generated@@22 $generated@@107 $generated@@109) ($generated@@79 $generated@@109 $generated@@108))
 :pattern ( ($generated@@22 $generated@@107 $generated@@109))
)))
 :pattern ( ($generated@@62 $generated@@105 $generated@@107 ($generated@@106 $generated@@108)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@110 ($generated@@87 $generated@@114 $generated@@111) $generated@@112 $generated@@113) ($generated@@56 $generated@@114 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@110 ($generated@@87 $generated@@114 $generated@@111) $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@117 T@U) ) (!  (and (= ($generated@@115 ($generated@@58 $generated@@117)) $generated@@1) (= ($generated@@116 ($generated@@58 $generated@@117)) $generated@@4))
 :pattern ( ($generated@@58 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@22 ($generated@@28 $generated@@118 $generated@@119) $generated@@120)  (or ($generated@@22 $generated@@118 $generated@@120) ($generated@@22 $generated@@119 $generated@@120)))
 :pattern ( ($generated@@22 ($generated@@28 $generated@@118 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@90 $generated@@121 $generated@@122) (and (= ($generated@@38 ($generated@@28 $generated@@121 $generated@@122) $generated@@121) $generated@@122) (= ($generated@@38 ($generated@@28 $generated@@121 $generated@@122) $generated@@122) $generated@@121)))
 :pattern ( ($generated@@28 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@62 $generated@@57 $generated@@124 ($generated@@58 $generated@@123)) (or ($generated@@66 $generated@@124) ($generated@@84 $generated@@124)))
 :pattern ( ($generated@@84 $generated@@124) ($generated@@62 $generated@@57 $generated@@124 ($generated@@58 $generated@@123)))
 :pattern ( ($generated@@66 $generated@@124) ($generated@@62 $generated@@57 $generated@@124 ($generated@@58 $generated@@123)))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@79 ($generated@@87 $generated@@127 $generated@@125) $generated@@126) ($generated@@62 $generated@@127 $generated@@125 $generated@@126))
 :pattern ( ($generated@@79 ($generated@@87 $generated@@127 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@56 $generated@@105 $generated@@128 ($generated@@106 $generated@@129) $generated@@130) (forall (($generated@@131 T@U) ) (!  (=> ($generated@@22 $generated@@128 $generated@@131) ($generated@@110 $generated@@131 $generated@@129 $generated@@130))
 :pattern ( ($generated@@22 $generated@@128 $generated@@131))
)))
 :pattern ( ($generated@@56 $generated@@105 $generated@@128 ($generated@@106 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@49 ($generated@@78 $generated@@132 $generated@@133)) $generated@@3)
 :pattern ( ($generated@@78 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@68 ($generated@@78 $generated@@134 $generated@@135)) $generated@@134)
 :pattern ( ($generated@@78 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@67 ($generated@@78 $generated@@136 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@78 $generated@@136 $generated@@137))
)))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (or ($generated@@65 $generated@@139 $generated@@141) (and (< 1 $generated@@64) (and ($generated@@62 $generated@@57 $generated@@141 ($generated@@58 $generated@@139)) ($generated@@56 $generated@@57 $generated@@141 ($generated@@58 $generated@@139) $generated@@138)))) ($generated@@59 $generated@@138)) ($generated@@56 $generated@@105 ($generated@@44 $generated@@139 $generated@@140 $generated@@141) ($generated@@106 $generated@@139) $generated@@138))
 :pattern ( ($generated@@56 $generated@@105 ($generated@@44 $generated@@139 $generated@@140 $generated@@141) ($generated@@106 $generated@@139) $generated@@138))
))))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@106 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@106 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@115 ($generated@@106 $generated@@144)) $generated)
 :pattern ( ($generated@@106 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@58 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@58 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@86 $generated@@148 ($generated@@87 $generated@@148 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@87 $generated@@148 $generated@@147))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (< ($generated@@149 $generated@@151) ($generated@@150 ($generated@@78 $generated@@151 $generated@@152)))
 :pattern ( ($generated@@78 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (< ($generated@@150 $generated@@154) ($generated@@150 ($generated@@78 $generated@@153 $generated@@154)))
 :pattern ( ($generated@@78 $generated@@153 $generated@@154))
)))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (or ($generated@@65 $generated@@155 $generated@@157) (and (< 1 $generated@@64) ($generated@@62 $generated@@57 $generated@@157 ($generated@@58 $generated@@155)))) ($generated@@62 $generated@@105 ($generated@@44 $generated@@155 $generated@@156 $generated@@157) ($generated@@106 $generated@@155)))
 :pattern ( ($generated@@44 $generated@@155 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@28 $generated@@158 ($generated@@28 $generated@@158 $generated@@159)) ($generated@@28 $generated@@158 $generated@@159))
 :pattern ( ($generated@@28 $generated@@158 ($generated@@28 $generated@@158 $generated@@159)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@59 $generated@@162) (and ($generated@@84 $generated@@160) ($generated@@56 $generated@@57 $generated@@160 ($generated@@58 $generated@@161) $generated@@162))) ($generated@@110 ($generated@@68 $generated@@160) $generated@@161 $generated@@162))
 :pattern ( ($generated@@110 ($generated@@68 $generated@@160) $generated@@161 $generated@@162))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@163 $generated@@173 $generated@@174 $generated@@175 ($generated@@169 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@178 $generated@@179) $generated@@176)
 :weight 0
)) (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@163 $generated@@180 $generated@@181 $generated@@182 ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@163 $generated@@189 $generated@@190 $generated@@191 ($generated@@169 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@163 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (= ($generated@@5 $generated@@164) 6)) (= ($generated@@5 $generated@@165) 7)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@167 $generated@@198 $generated@@199 ($generated@@170 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@200) $generated@@202) $generated@@200)
 :weight 0
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@207 $generated@@208) (= ($generated@@167 $generated@@203 $generated@@204 ($generated@@170 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@205) $generated@@208) ($generated@@167 $generated@@203 $generated@@204 $generated@@206 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@5 ($generated@@168 $generated@@209 $generated@@210)) 8))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@171 ($generated@@168 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@168 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@172 ($generated@@168 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@168 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (= ($generated@@10 ($generated@@163 $generated@@164 $generated@@165 $generated@@6 ($generated@@166 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (or (not (= $generated@@219 $generated@@215)) (not true)) ($generated@@10 ($generated@@86 $generated@@6 ($generated@@167 $generated@@165 $generated@@94 ($generated@@167 $generated@@164 ($generated@@168 $generated@@165 $generated@@94) $generated@@216 $generated@@219) $generated@@217)))) $generated@@218))
 :pattern ( ($generated@@163 $generated@@164 $generated@@165 $generated@@6 ($generated@@166 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (! (= ($generated@@149 ($generated@@87 $generated@@57 $generated@@221)) ($generated@@150 $generated@@221))
 :pattern ( ($generated@@149 ($generated@@87 $generated@@57 $generated@@221)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> ($generated@@79 $generated@@222 ($generated@@106 $generated@@223)) (and (= ($generated@@87 $generated@@105 ($generated@@86 $generated@@105 $generated@@222)) $generated@@222) ($generated@@62 $generated@@105 ($generated@@86 $generated@@105 $generated@@222) ($generated@@106 $generated@@223))))
 :pattern ( ($generated@@79 $generated@@222 ($generated@@106 $generated@@223)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> ($generated@@79 $generated@@225 ($generated@@58 $generated@@224)) (and (= ($generated@@87 $generated@@57 ($generated@@86 $generated@@57 $generated@@225)) $generated@@225) ($generated@@62 $generated@@57 ($generated@@86 $generated@@57 $generated@@225) ($generated@@58 $generated@@224))))
 :pattern ( ($generated@@79 $generated@@225 ($generated@@58 $generated@@224)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and ($generated@@59 $generated@@228) (and ($generated@@84 $generated@@226) ($generated@@56 $generated@@57 $generated@@226 ($generated@@58 $generated@@227) $generated@@228))) ($generated@@56 $generated@@57 ($generated@@67 $generated@@226) ($generated@@58 $generated@@227) $generated@@228))
 :pattern ( ($generated@@56 $generated@@57 ($generated@@67 $generated@@226) ($generated@@58 $generated@@227) $generated@@228))
)))
(assert (= $generated@@50 ($generated@@75 $generated@@57 $generated@@50)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@78 ($generated@@75 $generated@@94 $generated@@229) ($generated@@75 $generated@@57 $generated@@230)) ($generated@@75 $generated@@57 ($generated@@78 $generated@@229 $generated@@230)))
 :pattern ( ($generated@@78 ($generated@@75 $generated@@94 $generated@@229) ($generated@@75 $generated@@57 $generated@@230)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@T) ) (! (= ($generated@@87 $generated@@232 ($generated@@75 $generated@@232 $generated@@231)) ($generated@@75 $generated@@94 ($generated@@87 $generated@@232 $generated@@231)))
 :pattern ( ($generated@@87 $generated@@232 ($generated@@75 $generated@@232 $generated@@231)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> ($generated@@59 $generated@@236) (= ($generated@@56 $generated@@57 ($generated@@78 $generated@@234 $generated@@235) ($generated@@58 $generated@@233) $generated@@236)  (and ($generated@@110 $generated@@234 $generated@@233 $generated@@236) ($generated@@56 $generated@@57 $generated@@235 ($generated@@58 $generated@@233) $generated@@236))))
 :pattern ( ($generated@@56 $generated@@57 ($generated@@78 $generated@@234 $generated@@235) ($generated@@58 $generated@@233) $generated@@236))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@249 true))
(let (($generated@@250  (=> (= $generated@@237 ($generated@@78 $generated@@238 $generated@@239)) (=> (and ($generated@@79 $generated@@238 $generated@@240) ($generated@@62 $generated@@57 $generated@@239 ($generated@@58 $generated@@240))) (=> (and (and (and (= $generated@@241 $generated@@239) ($generated@@62 $generated@@57 $generated@@241 ($generated@@58 $generated@@240))) (and (= $generated@@242 $generated@@241) (= $generated@@243 $generated@@238))) (and (and ($generated@@79 $generated@@243 $generated@@240) (= $generated@@244 $generated@@243)) (and ($generated@@56 $generated@@57 $generated@@242 ($generated@@58 $generated@@240) $generated@@245) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@150 $generated@@242) ($generated@@150 $generated@@237)))))))
(let (($generated@@251  (=> (or (not (= $generated@@237 $generated@@50)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@250) (=> (= (ControlFlow 0 6) 5) $generated@@249)))))
(let (($generated@@252 true))
(let (($generated@@253 true))
(let (($generated@@254  (=> (= $generated@@246 ($generated@@166 $generated@@247 $generated@@245 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@253) (=> (= (ControlFlow 0 7) 2) $generated@@252)) (=> (= (ControlFlow 0 7) 6) $generated@@251)))))
(let (($generated@@255  (=> (and (and (and ($generated@@59 $generated@@245) ($generated@@248 $generated@@245)) ($generated@@62 $generated@@57 $generated@@237 ($generated@@58 $generated@@240))) (and (= 1 $generated@@64) (= (ControlFlow 0 8) 7))) $generated@@254)))
$generated@@255))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
