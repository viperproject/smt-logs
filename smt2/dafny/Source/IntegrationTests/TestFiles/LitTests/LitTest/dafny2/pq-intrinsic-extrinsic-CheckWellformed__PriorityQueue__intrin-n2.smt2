(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U) T@U)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@36 (T@U Int) T@U)
(declare-fun $generated@@37 (Int) Int)
(declare-fun $generated@@38 (T@U Int) Bool)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@U Int) Bool)
(declare-fun $generated@@41 (T@U T@U Int) T@U)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@60 (T@U T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@U T@U) Int)
(declare-fun $generated@@74 (T@U) Int)
(declare-fun $generated@@77 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@132 (T@T T@T) T@T)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@3 $generated@@23) 3))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@31 T@U) ) (!  (=> (or ($generated@@24 ($generated@@22 $generated@@23 $generated@@31)) (and (< 1 $generated@@20) ($generated@@25 $generated@@31 $generated@@26))) (and ($generated@@27 ($generated@@22 $generated@@23 $generated@@31)) (= ($generated@@21 ($generated@@22 $generated@@23 $generated@@31)) ($generated@@28 ($generated@@29 $generated@@30) ($generated@@22 $generated@@23 $generated@@31)))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@22 $generated@@23 $generated@@31)))
))))
(assert (= ($generated@@3 $generated@@33) 4))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@35 T@U) ) (!  (=> (or ($generated@@24 $generated@@35) (and (< 1 $generated@@20) ($generated@@25 $generated@@35 $generated@@26))) ($generated@@32 $generated@@33 ($generated@@21 $generated@@35) ($generated@@34 $generated)))
 :pattern ( ($generated@@21 $generated@@35))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@42 T@U) ($generated@@43 Int) ) (!  (=> (or ($generated@@38 ($generated@@22 $generated@@23 $generated@@42) ($generated@@37 $generated@@43)) (and (< 2 $generated@@20) (and ($generated@@25 $generated@@42 $generated@@26) ($generated@@8 ($generated@@22 $generated@@4 ($generated@@7 ($generated@@39 ($generated@@22 $generated@@23 $generated@@42)))))))) (and ($generated@@40 ($generated@@22 $generated@@23 $generated@@42) ($generated@@37 $generated@@43)) (= ($generated@@36 ($generated@@22 $generated@@23 $generated@@42) ($generated@@37 $generated@@43)) ($generated@@41 ($generated@@29 $generated@@30) ($generated@@22 $generated@@23 $generated@@42) ($generated@@37 $generated@@43)))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@22 $generated@@23 $generated@@42) ($generated@@37 $generated@@43)))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@44 T@U) ($generated@@45 Int) ) (!  (=> (or ($generated@@38 $generated@@44 $generated@@45) (and (< 2 $generated@@20) (and ($generated@@25 $generated@@44 $generated@@26) ($generated@@39 $generated@@44)))) (and ($generated@@40 $generated@@44 $generated@@45) (= ($generated@@36 $generated@@44 $generated@@45) ($generated@@41 ($generated@@29 $generated@@30) $generated@@44 $generated@@45))))
 :pattern ( ($generated@@36 $generated@@44 $generated@@45))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@51 T@U) ($generated@@52 Int) ) (!  (=> (or ($generated@@38 $generated@@51 $generated@@52) (and (< 2 $generated@@20) (and ($generated@@25 $generated@@51 $generated@@26) ($generated@@39 $generated@@51)))) (and (let (($generated@@53 ($generated@@36 $generated@@51 $generated@@52)))
 (and ($generated@@39 $generated@@53) ($generated@@46 ($generated@@21 $generated@@53) ($generated@@47 ($generated@@21 $generated@@51) ($generated@@48 $generated@@49 ($generated@@50 $generated@@5 ($generated@@9 $generated@@52))))))) ($generated@@25 ($generated@@36 $generated@@51 $generated@@52) $generated@@26)))
 :pattern ( ($generated@@36 $generated@@51 $generated@@52))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@55 ($generated@@34 $generated@@56)) ($generated@@54 $generated@@55))
 :pattern ( ($generated@@32 $generated@@33 $generated@@55 ($generated@@34 $generated@@56)))
)))
(assert (forall (($generated@@57 Int) ) (! (= ($generated@@37 $generated@@57) $generated@@57)
 :pattern ( ($generated@@37 $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@22 $generated@@59 $generated@@58) $generated@@58)
 :pattern ( ($generated@@22 $generated@@59 $generated@@58))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 Int) ) (!  (=> (and (or ($generated@@38 $generated@@63 $generated@@64) (and (< 2 $generated@@20) (and (and ($generated@@25 $generated@@63 $generated@@26) ($generated@@60 $generated@@63 $generated@@26 $generated@@62)) ($generated@@39 $generated@@63)))) ($generated@@61 $generated@@62)) ($generated@@60 ($generated@@36 $generated@@63 $generated@@64) $generated@@26 $generated@@62))
 :pattern ( ($generated@@60 ($generated@@36 $generated@@63 $generated@@64) $generated@@26 $generated@@62))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@50 $generated@@67 ($generated@@65 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@65 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (or (not (= $generated@@70 $generated@@71)) (not true)) (= ($generated@@68 $generated@@69 $generated@@71) ($generated@@68 ($generated@@48 $generated@@69 $generated@@70) $generated@@71)))
 :pattern ( ($generated@@48 $generated@@69 $generated@@70) ($generated@@68 $generated@@69 $generated@@71))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@72 T@U) ($generated@@73 Int) ) (!  (=> (or ($generated@@38 $generated@@72 ($generated@@37 $generated@@73)) (and (< 2 $generated@@20) (and ($generated@@25 $generated@@72 $generated@@26) ($generated@@39 $generated@@72)))) (and ($generated@@40 $generated@@72 ($generated@@37 $generated@@73)) (= ($generated@@36 $generated@@72 ($generated@@37 $generated@@73)) ($generated@@41 ($generated@@29 $generated@@30) $generated@@72 ($generated@@37 $generated@@73)))))
 :weight 3
 :pattern ( ($generated@@36 $generated@@72 ($generated@@37 $generated@@73)))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@74 ($generated@@48 $generated@@75 $generated@@76)) (+ ($generated@@74 $generated@@75) 1))
 :pattern ( ($generated@@74 ($generated@@48 $generated@@75 $generated@@76)))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@60 ($generated@@50 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@77 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@60 ($generated@@50 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@27 $generated@@83) ($generated@@25 $generated@@83 $generated@@26)) ($generated@@32 $generated@@33 ($generated@@28 $generated@@82 $generated@@83) ($generated@@34 $generated)))
 :pattern ( ($generated@@28 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@74 ($generated@@47 $generated@@84 $generated@@85)) (+ ($generated@@74 $generated@@84) ($generated@@74 $generated@@85)))
 :pattern ( ($generated@@74 ($generated@@47 $generated@@84 $generated@@85)))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 Int) ) (! (= ($generated@@41 ($generated@@29 $generated@@86) $generated@@87 $generated@@88) ($generated@@41 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@41 ($generated@@29 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@46 $generated@@89 $generated@@90) (= $generated@@89 $generated@@90))
 :pattern ( ($generated@@46 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@91 ($generated@@34 $generated@@92)) (forall (($generated@@93 T@U) ) (!  (=> (< 0 ($generated@@68 $generated@@91 $generated@@93)) ($generated@@25 $generated@@93 $generated@@92))
 :pattern ( ($generated@@68 $generated@@91 $generated@@93))
)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@91 ($generated@@34 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@25 $generated@@94 $generated) (and (= ($generated@@50 $generated@@5 ($generated@@65 $generated@@5 $generated@@94)) $generated@@94) ($generated@@32 $generated@@5 ($generated@@65 $generated@@5 $generated@@94) $generated)))
 :pattern ( ($generated@@25 $generated@@94 $generated))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@98 T@U) ) (!  (=> (or ($generated@@95 $generated@@98) (and (< 1 $generated@@20) ($generated@@25 $generated@@98 $generated@@26))) (and ($generated@@96 $generated@@98) (= ($generated@@39 $generated@@98) ($generated@@97 ($generated@@29 $generated@@30) $generated@@98))))
 :pattern ( ($generated@@39 $generated@@98))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@97 ($generated@@29 $generated@@99) $generated@@100) ($generated@@97 $generated@@99 $generated@@100))
 :pattern ( ($generated@@97 ($generated@@29 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@25 ($generated@@50 $generated@@103 $generated@@101) $generated@@102) ($generated@@32 $generated@@103 $generated@@101 $generated@@102))
 :pattern ( ($generated@@25 ($generated@@50 $generated@@103 $generated@@101) $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@54 $generated@@104) (forall (($generated@@105 T@U) ) (!  (and (<= 0 ($generated@@68 $generated@@104 $generated@@105)) (<= ($generated@@68 $generated@@104 $generated@@105) ($generated@@74 $generated@@104)))
 :pattern ( ($generated@@68 $generated@@104 $generated@@105))
)))
 :pattern ( ($generated@@54 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (<= 0 ($generated@@74 $generated@@106))
 :pattern ( ($generated@@74 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@68 $generated@@49 $generated@@107) 0)
 :pattern ( ($generated@@68 $generated@@49 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@68 ($generated@@48 $generated@@108 $generated@@109) $generated@@109) (+ ($generated@@68 $generated@@108 $generated@@109) 1))
 :pattern ( ($generated@@48 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@110 ($generated@@34 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@34 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@19 ($generated@@34 $generated@@112)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@65 $generated@@114 ($generated@@50 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@50 $generated@@114 $generated@@113))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@115 T@U) ) (!  (=> (or ($generated@@24 $generated@@115) (and (< 1 $generated@@20) ($generated@@25 $generated@@115 $generated@@26))) (and ($generated@@27 $generated@@115) (= ($generated@@21 $generated@@115) ($generated@@28 ($generated@@29 $generated@@30) $generated@@115))))
 :pattern ( ($generated@@21 $generated@@115))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@28 ($generated@@29 $generated@@116) $generated@@117) ($generated@@28 $generated@@116 $generated@@117))
 :pattern ( ($generated@@28 ($generated@@29 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (!  (and (= (= ($generated@@74 $generated@@118) 0) (= $generated@@118 $generated@@49)) (=> (or (not (= ($generated@@74 $generated@@118) 0)) (not true)) (exists (($generated@@119 T@U) ) (! (< 0 ($generated@@68 $generated@@118 $generated@@119))
 :pattern ( ($generated@@68 $generated@@118 $generated@@119))
))))
 :pattern ( ($generated@@74 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@68 ($generated@@47 $generated@@120 $generated@@121) $generated@@122) (+ ($generated@@68 $generated@@120 $generated@@122) ($generated@@68 $generated@@121 $generated@@122)))
 :pattern ( ($generated@@68 ($generated@@47 $generated@@120 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 Int) ) (!  (=> (and (or ($generated@@40 $generated@@125 $generated@@126) (and ($generated@@25 $generated@@125 $generated@@26) ($generated@@60 $generated@@125 $generated@@26 $generated@@123))) ($generated@@61 $generated@@123)) ($generated@@60 ($generated@@41 $generated@@124 $generated@@125 $generated@@126) $generated@@26 $generated@@123))
 :pattern ( ($generated@@60 ($generated@@41 $generated@@124 $generated@@125 $generated@@126) $generated@@26 $generated@@123))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@127 $generated@@137 $generated@@138 $generated@@139 ($generated@@133 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@142 $generated@@143) $generated@@140)
 :weight 0
)) (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@127 $generated@@144 $generated@@145 $generated@@146 ($generated@@133 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@127 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@127 $generated@@153 $generated@@154 $generated@@155 ($generated@@133 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@127 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)))) (= ($generated@@3 $generated@@128) 5)) (= ($generated@@3 $generated@@129) 6)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@131 $generated@@162 $generated@@163 ($generated@@134 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@164) $generated@@166) $generated@@164)
 :weight 0
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@171 $generated@@172) (= ($generated@@131 $generated@@167 $generated@@168 ($generated@@134 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@169) $generated@@172) ($generated@@131 $generated@@167 $generated@@168 $generated@@170 $generated@@172)))
 :weight 0
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@3 ($generated@@132 $generated@@173 $generated@@174)) 7))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@135 ($generated@@132 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@132 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@136 ($generated@@132 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@132 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 Bool) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@8 ($generated@@127 $generated@@128 $generated@@129 $generated@@4 ($generated@@130 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))  (=> (and (or (not (= $generated@@183 $generated@@179)) (not true)) ($generated@@8 ($generated@@65 $generated@@4 ($generated@@131 $generated@@129 $generated@@23 ($generated@@131 $generated@@128 ($generated@@132 $generated@@129 $generated@@23) $generated@@180 $generated@@183) $generated@@181)))) $generated@@182))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129 $generated@@4 ($generated@@130 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Int) ) (!  (=> (or ($generated@@40 $generated@@186 $generated@@187) ($generated@@25 $generated@@186 $generated@@26)) ($generated@@25 ($generated@@41 $generated@@185 $generated@@186 $generated@@187) $generated@@26))
 :pattern ( ($generated@@41 $generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@25 $generated@@188 ($generated@@34 $generated@@189)) (and (= ($generated@@50 $generated@@33 ($generated@@65 $generated@@33 $generated@@188)) $generated@@188) ($generated@@32 $generated@@33 ($generated@@65 $generated@@33 $generated@@188) ($generated@@34 $generated@@189))))
 :pattern ( ($generated@@25 $generated@@188 ($generated@@34 $generated@@189)))
)))
(assert (forall (($generated@@190 Int) ) (! (= ($generated@@50 $generated@@5 ($generated@@9 ($generated@@37 $generated@@190))) ($generated@@22 $generated@@23 ($generated@@50 $generated@@5 ($generated@@9 $generated@@190))))
 :pattern ( ($generated@@50 $generated@@5 ($generated@@9 ($generated@@37 $generated@@190))))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@T) ) (! (= ($generated@@50 $generated@@192 ($generated@@22 $generated@@192 $generated@@191)) ($generated@@22 $generated@@23 ($generated@@50 $generated@@192 $generated@@191)))
 :pattern ( ($generated@@50 $generated@@192 ($generated@@22 $generated@@192 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (< 0 ($generated@@68 $generated@@193 $generated@@195)) (< 0 ($generated@@68 ($generated@@48 $generated@@193 $generated@@194) $generated@@195)))
 :pattern ( ($generated@@48 $generated@@193 $generated@@194) ($generated@@68 $generated@@193 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (= (< 0 ($generated@@68 ($generated@@48 $generated@@196 $generated@@197) $generated@@198))  (or (= $generated@@198 $generated@@197) (< 0 ($generated@@68 $generated@@196 $generated@@198))))
 :pattern ( ($generated@@68 ($generated@@48 $generated@@196 $generated@@197) $generated@@198))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@199 T@U) ) (!  (=> (or ($generated@@95 ($generated@@22 $generated@@23 $generated@@199)) (and (< 1 $generated@@20) ($generated@@25 $generated@@199 $generated@@26))) (and ($generated@@96 ($generated@@22 $generated@@23 $generated@@199)) (= ($generated@@39 ($generated@@22 $generated@@23 $generated@@199)) ($generated@@97 ($generated@@29 $generated@@30) ($generated@@22 $generated@@23 $generated@@199)))))
 :weight 3
 :pattern ( ($generated@@39 ($generated@@22 $generated@@23 $generated@@199)))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@46 $generated@@200 $generated@@201) (forall (($generated@@202 T@U) ) (! (= ($generated@@68 $generated@@200 $generated@@202) ($generated@@68 $generated@@201 $generated@@202))
 :pattern ( ($generated@@68 $generated@@200 $generated@@202))
 :pattern ( ($generated@@68 $generated@@201 $generated@@202))
)))
 :pattern ( ($generated@@46 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@77 $generated@@33 $generated@@203 ($generated@@34 $generated@@204) $generated@@205) (forall (($generated@@206 T@U) ) (!  (=> (< 0 ($generated@@68 $generated@@203 $generated@@206)) ($generated@@60 $generated@@206 $generated@@204 $generated@@205))
 :pattern ( ($generated@@68 $generated@@203 $generated@@206))
)))
 :pattern ( ($generated@@77 $generated@@33 $generated@@203 ($generated@@34 $generated@@204) $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! ($generated@@77 $generated@@5 $generated@@208 $generated $generated@@207)
 :pattern ( ($generated@@77 $generated@@5 $generated@@208 $generated $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ) (! ($generated@@32 $generated@@5 $generated@@209 $generated)
 :pattern ( ($generated@@32 $generated@@5 $generated@@209 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@219 true))
(let (($generated@@220  (=> (and (not ($generated@@39 $generated@@210)) (= (ControlFlow 0 8) 6)) $generated@@219)))
(let (($generated@@221  (=> (and ($generated@@39 $generated@@210) ($generated@@60 $generated@@210 $generated@@26 $generated@@211)) (=> (and (and ($generated@@24 $generated@@210) ($generated@@60 $generated@@212 $generated@@26 $generated@@211)) (and ($generated@@24 $generated@@212) (= (ControlFlow 0 7) 6))) $generated@@219))))
(let (($generated@@222  (=> ($generated@@25 ($generated@@36 $generated@@212 $generated@@213) $generated@@26) (=> (and ($generated@@60 $generated@@212 $generated@@26 $generated@@211) ($generated@@77 $generated@@5 ($generated@@9 $generated@@213) $generated $generated@@211)) (and (=> (= (ControlFlow 0 9) (- 0 12)) (=> ($generated@@95 $generated@@212) (or ($generated@@39 $generated@@212) ($generated@@97 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@212)))) (=> ($generated@@39 $generated@@212) (and (=> (= (ControlFlow 0 9) (- 0 11)) (or (<= 0 $generated@@213) (= $generated@@213 $generated@@213))) (=> (or (<= 0 $generated@@213) (= $generated@@213 $generated@@213)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (and (= $generated@@212 $generated@@212) (= $generated@@213 $generated@@213)) (< $generated@@213 $generated@@213))) (=> (or (and (= $generated@@212 $generated@@212) (= $generated@@213 $generated@@213)) (< $generated@@213 $generated@@213)) (=> (or (and (= $generated@@212 $generated@@212) (= $generated@@213 $generated@@213)) ($generated@@38 $generated@@212 $generated@@213)) (=> (and (= $generated@@214 ($generated@@36 $generated@@212 $generated@@213)) ($generated@@38 $generated@@212 $generated@@213)) (=> (and (and ($generated@@25 $generated@@214 $generated@@26) (= $generated@@210 $generated@@214)) (and ($generated@@60 $generated@@210 $generated@@26 $generated@@211) ($generated@@95 $generated@@210))) (and (=> (= (ControlFlow 0 9) 7) $generated@@221) (=> (= (ControlFlow 0 9) 8) $generated@@220)))))))))))))))
(let (($generated@@223  (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@224 ($generated@@36 $generated@@212 $generated@@213)))
 (=> ($generated@@95 $generated@@224) (or ($generated@@39 $generated@@224) ($generated@@97 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@224))))) (=> (let (($generated@@225 ($generated@@36 $generated@@212 $generated@@213)))
 (=> ($generated@@95 $generated@@225) (or ($generated@@39 $generated@@225) ($generated@@97 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@225)))) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@226 ($generated@@36 $generated@@212 $generated@@213)))
($generated@@46 ($generated@@21 $generated@@226) ($generated@@47 ($generated@@21 $generated@@212) ($generated@@48 $generated@@49 ($generated@@50 $generated@@5 ($generated@@9 $generated@@213)))))))))))
(let (($generated@@227  (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@97 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@212)) (=> ($generated@@97 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@212) (=> (and ($generated@@61 $generated@@215) ($generated@@216 $generated@@215)) (=> (and (and ($generated@@40 $generated@@212 $generated@@213) (let (($generated@@228 ($generated@@41 ($generated@@29 $generated@@30) $generated@@212 $generated@@213)))
 (and ($generated@@96 $generated@@228) (=> ($generated@@97 ($generated@@29 $generated@@30) $generated@@228) (and ($generated@@27 $generated@@228) ($generated@@27 $generated@@212)))))) (and (let (($generated@@229 ($generated@@41 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@212 $generated@@213)))
($generated@@97 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@229)) (let (($generated@@230 ($generated@@41 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@212 $generated@@213)))
($generated@@46 ($generated@@28 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@230) ($generated@@47 ($generated@@28 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@212) ($generated@@48 $generated@@49 ($generated@@50 $generated@@5 ($generated@@9 $generated@@213)))))))) (=> (and (and (and (= $generated@@211 $generated@@215) ($generated@@60 $generated@@212 $generated@@26 $generated@@215)) (and ($generated@@77 $generated@@5 ($generated@@9 $generated@@213) $generated $generated@@215) ($generated@@40 $generated@@212 $generated@@213))) (and (and (= ($generated@@36 $generated@@212 $generated@@213) ($generated@@41 ($generated@@29 $generated@@30) $generated@@212 $generated@@213)) ($generated@@40 $generated@@212 $generated@@213)) (and ($generated@@25 ($generated@@36 $generated@@212 $generated@@213) $generated@@26) (= (ControlFlow 0 4) 2)))) $generated@@223)))))))
(let (($generated@@231  (=> (and (and (= $generated@@217 ($generated@@130 $generated@@218 $generated@@211 $generated@@2 false)) ($generated@@60 $generated@@212 $generated@@26 $generated@@211)) (and ($generated@@95 $generated@@212) ($generated@@39 $generated@@212))) (and (=> (= (ControlFlow 0 13) 9) $generated@@222) (=> (= (ControlFlow 0 13) 4) $generated@@227)))))
(let (($generated@@232  (=> (and (and (and ($generated@@61 $generated@@211) ($generated@@216 $generated@@211)) ($generated@@25 $generated@@212 $generated@@26)) (and (= 2 $generated@@20) (= (ControlFlow 0 14) 13))) $generated@@231)))
$generated@@232)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
