(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@51 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@T T@T) T@T)
(declare-fun $generated@@68 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@96 (Int) Int)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@101 () Int)
(declare-fun $generated@@102 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@117 (Int) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) Bool)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@130 (T@T T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@224 (T@U) Int)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@248 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@1) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and (or (not (= $generated@@33 $generated@@29)) (not true)) (= ($generated@@30 $generated@@33) ($generated@@28 $generated@@32))) ($generated@@31 $generated@@11 ($generated@@15 ($generated@@27 $generated@@33)) $generated))
 :pattern ( ($generated@@27 $generated@@33) ($generated@@28 $generated@@32))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@35 ($generated@@34 $generated@@36 $generated@@37 $generated@@38)) $generated@@6)
 :pattern ( ($generated@@34 $generated@@36 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@39 ($generated@@34 $generated@@40 $generated@@41 $generated@@42)) $generated@@40)
 :pattern ( ($generated@@34 $generated@@40 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@43 ($generated@@34 $generated@@44 $generated@@45 $generated@@46)) $generated@@45)
 :pattern ( ($generated@@34 $generated@@44 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@47 ($generated@@34 $generated@@48 $generated@@49 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@34 $generated@@48 $generated@@49 $generated@@50))
)))
(assert (= ($generated@@9 $generated@@52) 3))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@55 ($generated@@53 $generated@@54) $generated@@56) ($generated@@51 $generated@@52 $generated@@55 ($generated@@28 $generated@@54) $generated@@56))
 :pattern ( ($generated@@51 $generated@@52 $generated@@55 ($generated@@53 $generated@@54) $generated@@56))
 :pattern ( ($generated@@51 $generated@@52 $generated@@55 ($generated@@28 $generated@@54) $generated@@56))
)))
(assert (= ($generated@@35 $generated@@57) $generated@@5))
(assert (= ($generated@@9 $generated@@58) 4))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> ($generated@@60 $generated@@62) ($generated@@51 $generated@@58 $generated@@57 ($generated@@59 $generated@@61) $generated@@62))
 :pattern ( ($generated@@51 $generated@@58 $generated@@57 ($generated@@59 $generated@@61) $generated@@62))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@64 $generated@@71 $generated@@72 ($generated@@68 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@75) $generated@@73)
 :weight 0
)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (or (= $generated@@80 $generated@@81) (= ($generated@@64 $generated@@76 $generated@@77 ($generated@@68 $generated@@76 $generated@@77 $generated@@79 $generated@@80 $generated@@78) $generated@@81) ($generated@@64 $generated@@76 $generated@@77 $generated@@79 $generated@@81)))
 :weight 0
))) (= ($generated@@9 $generated@@65) 5)) (= ($generated@@9 $generated@@66) 6)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (= ($generated@@9 ($generated@@67 $generated@@82 $generated@@83)) 7))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@69 ($generated@@67 $generated@@84 $generated@@85)) $generated@@84)
 :pattern ( ($generated@@67 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@70 ($generated@@67 $generated@@86 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@67 $generated@@86 $generated@@87))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@89 ($generated@@28 $generated@@88) $generated@@90)  (or (= $generated@@89 $generated@@29) ($generated@@14 ($generated@@63 $generated@@10 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@90 $generated@@89) $generated@@1)))))
 :pattern ( ($generated@@51 $generated@@52 $generated@@89 ($generated@@28 $generated@@88) $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (! ($generated@@31 $generated@@58 $generated@@57 ($generated@@59 $generated@@91))
 :pattern ( ($generated@@31 $generated@@58 $generated@@57 ($generated@@59 $generated@@91)))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@92 $generated@@93 $generated@@94) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@14 ($generated@@63 $generated@@10 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@93 $generated@@95) $generated@@1))) ($generated@@14 ($generated@@63 $generated@@10 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@94 $generated@@95) $generated@@1))))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@94 $generated@@95) $generated@@1))
)))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@97 Int) ) (! (= ($generated@@96 $generated@@97) $generated@@97)
 :pattern ( ($generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 $generated@@99) $generated@@99)
 :pattern ( ($generated@@98 $generated@@100 $generated@@99))
)))
(assert  (=> (<= 1 $generated@@101) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@104 $generated@@107 ($generated@@98 $generated@@58 $generated@@109) ($generated@@98 $generated@@66 $generated@@110)) (and (< 1 $generated@@101) (and ($generated@@31 $generated@@58 $generated@@109 ($generated@@59 $generated@@107)) ($generated@@105 $generated@@110 $generated@@107)))) (and (=> (not ($generated@@14 ($generated@@98 $generated@@10 ($generated@@13 ($generated@@106 ($generated@@98 $generated@@58 $generated@@109)))))) (let (($generated@@111 ($generated@@98 $generated@@58 ($generated@@47 ($generated@@98 $generated@@58 $generated@@109)))))
(let (($generated@@112 ($generated@@98 $generated@@66 ($generated@@43 ($generated@@98 $generated@@58 $generated@@109)))))
(let (($generated@@113 ($generated@@98 $generated@@58 ($generated@@39 ($generated@@98 $generated@@58 $generated@@109)))))
 (=> (or (not (= $generated@@112 ($generated@@98 $generated@@66 $generated@@110))) (not true)) (and ($generated@@104 $generated@@107 $generated@@113 ($generated@@98 $generated@@66 $generated@@110)) (=> (not ($generated@@102 $generated@@107 ($generated@@103 $generated@@108) $generated@@113 ($generated@@98 $generated@@66 $generated@@110))) ($generated@@104 $generated@@107 $generated@@111 ($generated@@98 $generated@@66 $generated@@110))))))))) (= ($generated@@102 $generated@@107 ($generated@@103 $generated@@108) ($generated@@98 $generated@@58 $generated@@109) ($generated@@98 $generated@@66 $generated@@110)) (ite ($generated@@106 ($generated@@98 $generated@@58 $generated@@109)) false (let (($generated@@114 ($generated@@98 $generated@@58 ($generated@@47 ($generated@@98 $generated@@58 $generated@@109)))))
(let (($generated@@115 ($generated@@98 $generated@@66 ($generated@@43 ($generated@@98 $generated@@58 $generated@@109)))))
(let (($generated@@116 ($generated@@98 $generated@@58 ($generated@@39 ($generated@@98 $generated@@58 $generated@@109)))))
 (or (or (= $generated@@115 ($generated@@98 $generated@@66 $generated@@110)) ($generated@@102 $generated@@107 ($generated@@103 $generated@@108) $generated@@116 ($generated@@98 $generated@@66 $generated@@110))) ($generated@@102 $generated@@107 ($generated@@103 $generated@@108) $generated@@114 ($generated@@98 $generated@@66 $generated@@110))))))))))
 :weight 3
 :pattern ( ($generated@@102 $generated@@107 ($generated@@103 $generated@@108) ($generated@@98 $generated@@58 $generated@@109) ($generated@@98 $generated@@66 $generated@@110)))
))))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 Int) ) (!  (=> (and (and (and ($generated@@60 $generated@@120) (and (or (not (= $generated@@121 $generated@@29)) (not true)) (= ($generated@@30 $generated@@121) ($generated@@28 $generated@@119)))) (and (<= 0 $generated@@122) (< $generated@@122 ($generated@@27 $generated@@121)))) ($generated@@14 ($generated@@63 $generated@@10 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@120 $generated@@121) $generated@@1)))) ($generated@@118 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@120 $generated@@121) ($generated@@117 $generated@@122)) $generated@@119 $generated@@120))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@120 $generated@@121) ($generated@@117 $generated@@122)) ($generated@@28 $generated@@119))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@106 $generated@@123) (= ($generated@@35 $generated@@123) $generated@@5))
 :pattern ( ($generated@@106 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 $generated@@125) (= ($generated@@35 $generated@@125) $generated@@6))
 :pattern ( ($generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@31 $generated@@58 ($generated@@34 $generated@@127 $generated@@128 $generated@@129) ($generated@@59 $generated@@126))  (and (and ($generated@@31 $generated@@58 $generated@@127 ($generated@@59 $generated@@126)) ($generated@@105 $generated@@128 $generated@@126)) ($generated@@31 $generated@@58 $generated@@129 ($generated@@59 $generated@@126))))
 :pattern ( ($generated@@31 $generated@@58 ($generated@@34 $generated@@127 $generated@@128 $generated@@129) ($generated@@59 $generated@@126)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@130 $generated@@132 ($generated@@63 $generated@@132 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@63 $generated@@132 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@124 $generated@@133) (exists (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (= $generated@@133 ($generated@@34 $generated@@134 $generated@@135 $generated@@136))))
 :pattern ( ($generated@@124 $generated@@133))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@106 $generated@@137) (= $generated@@137 $generated@@57))
 :pattern ( ($generated@@106 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@31 $generated@@52 $generated@@139 ($generated@@53 $generated@@138))  (and ($generated@@31 $generated@@52 $generated@@139 ($generated@@28 $generated@@138)) (or (not (= $generated@@139 $generated@@29)) (not true))))
 :pattern ( ($generated@@31 $generated@@52 $generated@@139 ($generated@@53 $generated@@138)))
 :pattern ( ($generated@@31 $generated@@52 $generated@@139 ($generated@@28 $generated@@138)))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@118 ($generated@@130 $generated@@143 $generated@@140) $generated@@141 $generated@@142) ($generated@@51 $generated@@143 $generated@@140 $generated@@141 $generated@@142))
 :pattern ( ($generated@@118 ($generated@@130 $generated@@143 $generated@@140) $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@92 $generated@@144 $generated@@145) (=> ($generated@@118 $generated@@146 $generated@@147 $generated@@144) ($generated@@118 $generated@@146 $generated@@147 $generated@@145)))
 :pattern ( ($generated@@92 $generated@@144 $generated@@145) ($generated@@118 $generated@@146 $generated@@147 $generated@@144))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@T) ) (!  (=> ($generated@@92 $generated@@148 $generated@@149) (=> ($generated@@51 $generated@@152 $generated@@150 $generated@@151 $generated@@148) ($generated@@51 $generated@@152 $generated@@150 $generated@@151 $generated@@149)))
 :pattern ( ($generated@@92 $generated@@148 $generated@@149) ($generated@@51 $generated@@152 $generated@@150 $generated@@151 $generated@@148))
)))
(assert (forall (($generated@@154 T@U) ) (!  (and (= ($generated@@26 ($generated@@28 $generated@@154)) $generated@@2) (= ($generated@@153 ($generated@@28 $generated@@154)) $generated@@7))
 :pattern ( ($generated@@28 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (!  (and (= ($generated@@26 ($generated@@53 $generated@@155)) $generated@@3) (= ($generated@@153 ($generated@@53 $generated@@155)) $generated@@7))
 :pattern ( ($generated@@53 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (and (= ($generated@@26 ($generated@@59 $generated@@156)) $generated@@4) (= ($generated@@153 ($generated@@59 $generated@@156)) $generated@@8))
 :pattern ( ($generated@@59 $generated@@156))
)))
(assert  (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@157 $generated@@160 $generated@@161 $generated@@162 ($generated@@159 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@165 $generated@@166) $generated@@163)
 :weight 0
)) (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@157 $generated@@167 $generated@@168 $generated@@169 ($generated@@159 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@157 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@157 $generated@@176 $generated@@177 $generated@@178 ($generated@@159 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@183 $generated@@184) ($generated@@157 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@183 $generated@@184)))
 :weight 0
)))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@14 ($generated@@157 $generated@@52 $generated@@65 $generated@@10 ($generated@@158 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))  (=> (and (or (not (= $generated@@189 $generated@@185)) (not true)) ($generated@@14 ($generated@@63 $generated@@10 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@186 $generated@@189) $generated@@187)))) (= $generated@@189 $generated@@188)))
 :pattern ( ($generated@@157 $generated@@52 $generated@@65 $generated@@10 ($generated@@158 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@31 $generated@@52 $generated@@192 ($generated@@28 $generated@@191))  (or (= $generated@@192 $generated@@29) (= ($generated@@30 $generated@@192) ($generated@@28 $generated@@191))))
 :pattern ( ($generated@@31 $generated@@52 $generated@@192 ($generated@@28 $generated@@191)))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> ($generated@@193 $generated@@194) (or ($generated@@106 $generated@@194) ($generated@@124 $generated@@194)))
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@60 $generated@@199) (= ($generated@@51 $generated@@58 ($generated@@34 $generated@@196 $generated@@197 $generated@@198) ($generated@@59 $generated@@195) $generated@@199)  (and (and ($generated@@51 $generated@@58 $generated@@196 ($generated@@59 $generated@@195) $generated@@199) ($generated@@118 $generated@@197 $generated@@195 $generated@@199)) ($generated@@51 $generated@@58 $generated@@198 ($generated@@59 $generated@@195) $generated@@199))))
 :pattern ( ($generated@@51 $generated@@58 ($generated@@34 $generated@@196 $generated@@197 $generated@@198) ($generated@@59 $generated@@195) $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> ($generated@@31 $generated@@58 $generated@@201 ($generated@@59 $generated@@200)) (or ($generated@@106 $generated@@201) ($generated@@124 $generated@@201)))
 :pattern ( ($generated@@124 $generated@@201) ($generated@@31 $generated@@58 $generated@@201 ($generated@@59 $generated@@200)))
 :pattern ( ($generated@@106 $generated@@201) ($generated@@31 $generated@@58 $generated@@201 ($generated@@59 $generated@@200)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (or (not (= $generated@@202 $generated@@204)) (not true)) (=> (and ($generated@@92 $generated@@202 $generated@@203) ($generated@@92 $generated@@203 $generated@@204)) ($generated@@92 $generated@@202 $generated@@204)))
 :pattern ( ($generated@@92 $generated@@202 $generated@@203) ($generated@@92 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ) (!  (=> ($generated@@105 $generated@@205 $generated) (and (= ($generated@@130 $generated@@11 ($generated@@63 $generated@@11 $generated@@205)) $generated@@205) ($generated@@31 $generated@@11 ($generated@@63 $generated@@11 $generated@@205) $generated)))
 :pattern ( ($generated@@105 $generated@@205 $generated))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@T) ) (! (= ($generated@@105 ($generated@@130 $generated@@208 $generated@@206) $generated@@207) ($generated@@31 $generated@@208 $generated@@206 $generated@@207))
 :pattern ( ($generated@@105 ($generated@@130 $generated@@208 $generated@@206) $generated@@207))
)))
(assert  (=> (<= 1 $generated@@101) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (or ($generated@@104 $generated@@209 $generated@@211 $generated@@212) (and (< 1 $generated@@101) (and ($generated@@31 $generated@@58 $generated@@211 ($generated@@59 $generated@@209)) ($generated@@105 $generated@@212 $generated@@209)))) (and (=> (not ($generated@@106 $generated@@211)) (let (($generated@@213 ($generated@@47 $generated@@211)))
(let (($generated@@214 ($generated@@43 $generated@@211)))
(let (($generated@@215 ($generated@@39 $generated@@211)))
 (=> (or (not (= $generated@@214 $generated@@212)) (not true)) (and ($generated@@104 $generated@@209 $generated@@215 $generated@@212) (=> (not ($generated@@102 $generated@@209 $generated@@210 $generated@@215 $generated@@212)) ($generated@@104 $generated@@209 $generated@@213 $generated@@212)))))))) (= ($generated@@102 $generated@@209 ($generated@@103 $generated@@210) $generated@@211 $generated@@212) (ite ($generated@@106 $generated@@211) false (let (($generated@@216 ($generated@@47 $generated@@211)))
(let (($generated@@217 ($generated@@43 $generated@@211)))
(let (($generated@@218 ($generated@@39 $generated@@211)))
 (or (or (= $generated@@217 $generated@@212) ($generated@@102 $generated@@209 $generated@@210 $generated@@218 $generated@@212)) ($generated@@102 $generated@@209 $generated@@210 $generated@@216 $generated@@212)))))))))
 :pattern ( ($generated@@102 $generated@@209 ($generated@@103 $generated@@210) $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@219 T@U) ) (! (<= 0 ($generated@@27 $generated@@219))
 :pattern ( ($generated@@27 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@34 ($generated@@98 $generated@@58 $generated@@220) ($generated@@98 $generated@@66 $generated@@221) ($generated@@98 $generated@@58 $generated@@222)) ($generated@@98 $generated@@58 ($generated@@34 $generated@@220 $generated@@221 $generated@@222)))
 :pattern ( ($generated@@34 ($generated@@98 $generated@@58 $generated@@220) ($generated@@98 $generated@@66 $generated@@221) ($generated@@98 $generated@@58 $generated@@222)))
)))
(assert (forall (($generated@@223 Int) ) (! (= ($generated@@25 ($generated@@117 $generated@@223)) 1)
 :pattern ( ($generated@@117 $generated@@223))
)))
(assert (forall (($generated@@225 Int) ) (! (= ($generated@@224 ($generated@@117 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@117 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= ($generated@@226 ($generated@@28 $generated@@227)) $generated@@227)
 :pattern ( ($generated@@28 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= ($generated@@228 ($generated@@53 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@53 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= ($generated@@230 ($generated@@59 $generated@@231)) $generated@@231)
 :pattern ( ($generated@@59 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@T) ) (! (= ($generated@@63 $generated@@233 ($generated@@130 $generated@@233 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@130 $generated@@233 $generated@@232))
)))
(assert  (=> (<= 1 $generated@@101) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (or ($generated@@104 $generated@@234 ($generated@@98 $generated@@58 $generated@@236) $generated@@237) (and (< 1 $generated@@101) (and ($generated@@31 $generated@@58 $generated@@236 ($generated@@59 $generated@@234)) ($generated@@105 $generated@@237 $generated@@234)))) (and (=> (not ($generated@@14 ($generated@@98 $generated@@10 ($generated@@13 ($generated@@106 ($generated@@98 $generated@@58 $generated@@236)))))) (let (($generated@@238 ($generated@@98 $generated@@58 ($generated@@47 ($generated@@98 $generated@@58 $generated@@236)))))
(let (($generated@@239 ($generated@@98 $generated@@66 ($generated@@43 ($generated@@98 $generated@@58 $generated@@236)))))
(let (($generated@@240 ($generated@@98 $generated@@58 ($generated@@39 ($generated@@98 $generated@@58 $generated@@236)))))
 (=> (or (not (= $generated@@239 $generated@@237)) (not true)) (and ($generated@@104 $generated@@234 $generated@@240 $generated@@237) (=> (not ($generated@@102 $generated@@234 ($generated@@103 $generated@@235) $generated@@240 $generated@@237)) ($generated@@104 $generated@@234 $generated@@238 $generated@@237)))))))) (= ($generated@@102 $generated@@234 ($generated@@103 $generated@@235) ($generated@@98 $generated@@58 $generated@@236) $generated@@237) (ite ($generated@@106 ($generated@@98 $generated@@58 $generated@@236)) false (let (($generated@@241 ($generated@@98 $generated@@58 ($generated@@47 ($generated@@98 $generated@@58 $generated@@236)))))
(let (($generated@@242 ($generated@@98 $generated@@66 ($generated@@43 ($generated@@98 $generated@@58 $generated@@236)))))
(let (($generated@@243 ($generated@@98 $generated@@58 ($generated@@39 ($generated@@98 $generated@@58 $generated@@236)))))
 (or (or (= $generated@@242 $generated@@237) ($generated@@102 $generated@@234 ($generated@@103 $generated@@235) $generated@@243 $generated@@237)) ($generated@@102 $generated@@234 ($generated@@103 $generated@@235) $generated@@241 $generated@@237)))))))))
 :weight 3
 :pattern ( ($generated@@102 $generated@@234 ($generated@@103 $generated@@235) ($generated@@98 $generated@@58 $generated@@236) $generated@@237))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (< ($generated@@244 $generated@@245) ($generated@@244 ($generated@@34 $generated@@245 $generated@@246 $generated@@247)))
 :pattern ( ($generated@@34 $generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (< ($generated@@248 $generated@@250) ($generated@@244 ($generated@@34 $generated@@249 $generated@@250 $generated@@251)))
 :pattern ( ($generated@@34 $generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (< ($generated@@244 $generated@@254) ($generated@@244 ($generated@@34 $generated@@252 $generated@@253 $generated@@254)))
 :pattern ( ($generated@@34 $generated@@252 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and ($generated@@60 $generated@@256) (and (or (not (= $generated@@257 $generated@@29)) (not true)) (= ($generated@@30 $generated@@257) ($generated@@28 $generated@@255)))) ($generated@@14 ($generated@@63 $generated@@10 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@256 $generated@@257) $generated@@1)))) ($generated@@51 $generated@@11 ($generated@@15 ($generated@@27 $generated@@257)) $generated $generated@@256))
 :pattern ( ($generated@@27 $generated@@257) ($generated@@63 $generated@@10 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@256 $generated@@257) $generated@@1)) ($generated@@28 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Int) ) (!  (=> (and (and ($generated@@60 $generated@@259) (and (or (not (= $generated@@260 $generated@@29)) (not true)) (= ($generated@@30 $generated@@260) ($generated@@28 $generated@@258)))) (and (<= 0 $generated@@261) (< $generated@@261 ($generated@@27 $generated@@260)))) ($generated@@105 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@259 $generated@@260) ($generated@@117 $generated@@261)) $generated@@258))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@259 $generated@@260) ($generated@@117 $generated@@261)) ($generated@@28 $generated@@258))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (! (= ($generated@@102 $generated@@262 ($generated@@103 $generated@@263) $generated@@264 $generated@@265) ($generated@@102 $generated@@262 $generated@@263 $generated@@264 $generated@@265))
 :pattern ( ($generated@@102 $generated@@262 ($generated@@103 $generated@@263) $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and ($generated@@60 $generated@@268) (and ($generated@@124 $generated@@266) ($generated@@51 $generated@@58 $generated@@266 ($generated@@59 $generated@@267) $generated@@268))) ($generated@@118 ($generated@@43 $generated@@266) $generated@@267 $generated@@268))
 :pattern ( ($generated@@118 ($generated@@43 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@248 ($generated@@130 $generated@@58 $generated@@269)) ($generated@@244 $generated@@269))
 :pattern ( ($generated@@248 ($generated@@130 $generated@@58 $generated@@269)))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> ($generated@@105 $generated@@271 ($generated@@28 $generated@@270)) (and (= ($generated@@130 $generated@@52 ($generated@@63 $generated@@52 $generated@@271)) $generated@@271) ($generated@@31 $generated@@52 ($generated@@63 $generated@@52 $generated@@271) ($generated@@28 $generated@@270))))
 :pattern ( ($generated@@105 $generated@@271 ($generated@@28 $generated@@270)))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> ($generated@@105 $generated@@273 ($generated@@53 $generated@@272)) (and (= ($generated@@130 $generated@@52 ($generated@@63 $generated@@52 $generated@@273)) $generated@@273) ($generated@@31 $generated@@52 ($generated@@63 $generated@@52 $generated@@273) ($generated@@53 $generated@@272))))
 :pattern ( ($generated@@105 $generated@@273 ($generated@@53 $generated@@272)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> ($generated@@105 $generated@@275 ($generated@@59 $generated@@274)) (and (= ($generated@@130 $generated@@58 ($generated@@63 $generated@@58 $generated@@275)) $generated@@275) ($generated@@31 $generated@@58 ($generated@@63 $generated@@58 $generated@@275) ($generated@@59 $generated@@274))))
 :pattern ( ($generated@@105 $generated@@275 ($generated@@59 $generated@@274)))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and ($generated@@60 $generated@@278) (and ($generated@@124 $generated@@276) ($generated@@51 $generated@@58 $generated@@276 ($generated@@59 $generated@@277) $generated@@278))) ($generated@@51 $generated@@58 ($generated@@39 $generated@@276) ($generated@@59 $generated@@277) $generated@@278))
 :pattern ( ($generated@@51 $generated@@58 ($generated@@39 $generated@@276) ($generated@@59 $generated@@277) $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and ($generated@@60 $generated@@281) (and ($generated@@124 $generated@@279) ($generated@@51 $generated@@58 $generated@@279 ($generated@@59 $generated@@280) $generated@@281))) ($generated@@51 $generated@@58 ($generated@@47 $generated@@279) ($generated@@59 $generated@@280) $generated@@281))
 :pattern ( ($generated@@51 $generated@@58 ($generated@@47 $generated@@279) ($generated@@59 $generated@@280) $generated@@281))
)))
(assert (= $generated@@57 ($generated@@98 $generated@@58 $generated@@57)))
(assert (forall (($generated@@282 Int) ) (! (= ($generated@@130 $generated@@11 ($generated@@15 ($generated@@96 $generated@@282))) ($generated@@98 $generated@@66 ($generated@@130 $generated@@11 ($generated@@15 $generated@@282))))
 :pattern ( ($generated@@130 $generated@@11 ($generated@@15 ($generated@@96 $generated@@282))))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@T) ) (! (= ($generated@@130 $generated@@284 ($generated@@98 $generated@@284 $generated@@283)) ($generated@@98 $generated@@66 ($generated@@130 $generated@@284 $generated@@283)))
 :pattern ( ($generated@@130 $generated@@284 ($generated@@98 $generated@@284 $generated@@283)))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! ($generated@@51 $generated@@11 $generated@@286 $generated $generated@@285)
 :pattern ( ($generated@@51 $generated@@11 $generated@@286 $generated $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! ($generated@@31 $generated@@11 $generated@@287 $generated)
 :pattern ( ($generated@@31 $generated@@11 $generated@@287 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@288 () Int)
(declare-fun $generated@@289 () Int)
(declare-fun $generated@@290 () Int)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 () T@U)
(declare-fun $generated@@293 () T@U)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@295 () T@U)
(declare-fun $generated@@296 () T@U)
(declare-fun $generated@@297 () T@U)
(declare-fun $generated@@298 () Int)
(declare-fun $generated@@299 (T@U) Bool)
(declare-fun $generated@@300 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@301 true))
(let (($generated@@302  (=> (and (and (<= $generated@@288 $generated@@289) (< $generated@@289 $generated@@290)) ($generated@@51 $generated@@58 $generated@@291 ($generated@@59 $generated@@292) $generated@@293)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (not (= $generated@@294 $generated@@29)) (not true))) (=> (or (not (= $generated@@294 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 $generated@@289) (< $generated@@289 ($generated@@27 $generated@@294)))) (=> (and (<= 0 $generated@@289) (< $generated@@289 ($generated@@27 $generated@@294))) (=> (= $generated@@295 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@293 $generated@@294) ($generated@@117 $generated@@289))) (=> (and (and ($generated@@118 $generated@@295 $generated@@292 $generated@@293) ($generated@@104 $generated@@292 $generated@@291 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@293 $generated@@294) ($generated@@117 $generated@@289)))) (and ($generated@@102 $generated@@292 ($generated@@103 $generated@@296) $generated@@291 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@293 $generated@@294) ($generated@@117 $generated@@289))) (= (ControlFlow 0 3) 1))) $generated@@301)))))))))
(let (($generated@@303  (=> (and (< $generated@@289 $generated@@288) (= (ControlFlow 0 7) 3)) $generated@@302)))
(let (($generated@@304  (=> (and (<= $generated@@288 $generated@@289) (= (ControlFlow 0 6) 3)) $generated@@302)))
(let (($generated@@305  (=> (and (=> (and (<= $generated@@288 $generated@@289) (< $generated@@289 $generated@@290)) ($generated@@102 $generated@@292 ($generated@@103 $generated@@296) $generated@@291 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@293 $generated@@294) ($generated@@117 $generated@@289)))) (= (ControlFlow 0 2) 1)) $generated@@301)))
(let (($generated@@306  (=> (forall (($generated@@307 Int) ) (!  (=> (and (<= ($generated@@96 0) $generated@@307) (< $generated@@307 $generated@@288)) (= ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@293 $generated@@294) ($generated@@117 $generated@@307)) ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@297 $generated@@294) ($generated@@117 $generated@@307))))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@297 $generated@@294) ($generated@@117 $generated@@307)))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@293 $generated@@294) ($generated@@117 $generated@@307)))
)) (and (and (=> (= (ControlFlow 0 8) 2) $generated@@305) (=> (= (ControlFlow 0 8) 6) $generated@@304)) (=> (= (ControlFlow 0 8) 7) $generated@@303)))))
(let (($generated@@308  (=> (and (<= ($generated@@96 0) $generated@@298) (< $generated@@298 $generated@@288)) (and (=> (= (ControlFlow 0 10) (- 0 15)) (or (not (= $generated@@294 $generated@@29)) (not true))) (=> (or (not (= $generated@@294 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 14)) (and (<= 0 $generated@@298) (< $generated@@298 ($generated@@27 $generated@@294)))) (=> (and (<= 0 $generated@@298) (< $generated@@298 ($generated@@27 $generated@@294))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (or (not (= $generated@@294 $generated@@29)) (not true))) (=> (or (not (= $generated@@294 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@51 $generated@@52 $generated@@294 ($generated@@28 $generated@@292) $generated@@297)) (=> ($generated@@51 $generated@@52 $generated@@294 ($generated@@28 $generated@@292) $generated@@297) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 $generated@@298) (< $generated@@298 ($generated@@27 $generated@@294)))) (=> (and (<= 0 $generated@@298) (< $generated@@298 ($generated@@27 $generated@@294))) (=> (and (= ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@293 $generated@@294) ($generated@@117 $generated@@298)) ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@297 $generated@@294) ($generated@@117 $generated@@298))) (= (ControlFlow 0 10) 8)) $generated@@306))))))))))))))
(let (($generated@@309  (=> (and (< $generated@@298 ($generated@@96 0)) (= (ControlFlow 0 17) 10)) $generated@@308)))
(let (($generated@@310  (=> (and (<= ($generated@@96 0) $generated@@298) (= (ControlFlow 0 16) 10)) $generated@@308)))
(let (($generated@@311  (=> (and (=> (and (<= ($generated@@96 0) $generated@@298) (< $generated@@298 $generated@@288)) (= ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@293 $generated@@294) ($generated@@117 $generated@@298)) ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@297 $generated@@294) ($generated@@117 $generated@@298)))) (= (ControlFlow 0 9) 8)) $generated@@306)))
(let (($generated@@312  (=> (and (<= $generated@@288 $generated@@290) (<= $generated@@290 ($generated@@27 $generated@@294))) (and (and (=> (= (ControlFlow 0 18) 9) $generated@@311) (=> (= (ControlFlow 0 18) 16) $generated@@310)) (=> (= (ControlFlow 0 18) 17) $generated@@309)))))
(let (($generated@@313  (=> (and (< $generated@@290 $generated@@288) (= (ControlFlow 0 21) 18)) $generated@@312)))
(let (($generated@@314  (=> (<= $generated@@288 $generated@@290) (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (not (= $generated@@294 $generated@@29)) (not true))) (=> (or (not (= $generated@@294 $generated@@29)) (not true)) (=> (= (ControlFlow 0 19) 18) $generated@@312))))))
(let (($generated@@315  (=> (and (<= ($generated@@96 0) $generated@@288) (<= $generated@@288 ($generated@@27 $generated@@294))) (=> (and (and ($generated@@60 $generated@@293) ($generated@@299 $generated@@293)) (and (forall (($generated@@316 T@U) ) (!  (=> (and (or (not (= $generated@@316 $generated@@29)) (not true)) ($generated@@14 ($generated@@63 $generated@@10 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@297 $generated@@316) $generated@@1)))) (or (= ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@293 $generated@@316) ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@297 $generated@@316)) (= $generated@@316 $generated@@294)))
 :pattern ( ($generated@@64 $generated@@52 ($generated@@67 $generated@@65 $generated@@66) $generated@@293 $generated@@316))
)) ($generated@@92 $generated@@297 $generated@@293))) (and (=> (= (ControlFlow 0 22) 19) $generated@@314) (=> (= (ControlFlow 0 22) 21) $generated@@313))))))
(let (($generated@@317  (=> (and (< $generated@@288 ($generated@@96 0)) (= (ControlFlow 0 25) 22)) $generated@@315)))
(let (($generated@@318  (=> (<= ($generated@@96 0) $generated@@288) (and (=> (= (ControlFlow 0 23) (- 0 24)) (or (not (= $generated@@294 $generated@@29)) (not true))) (=> (or (not (= $generated@@294 $generated@@29)) (not true)) (=> (= (ControlFlow 0 23) 22) $generated@@315))))))
(let (($generated@@319  (=> (= $generated@@300 ($generated@@158 $generated@@29 $generated@@297 $generated@@1 $generated@@294)) (and (=> (= (ControlFlow 0 26) 23) $generated@@318) (=> (= (ControlFlow 0 26) 25) $generated@@317)))))
(let (($generated@@320  (=> (and ($generated@@60 $generated@@297) ($generated@@299 $generated@@297)) (=> (and (and (and ($generated@@31 $generated@@58 $generated@@291 ($generated@@59 $generated@@292)) ($generated@@51 $generated@@58 $generated@@291 ($generated@@59 $generated@@292) $generated@@297)) ($generated@@193 $generated@@291)) (and (and ($generated@@31 $generated@@52 $generated@@294 ($generated@@53 $generated@@292)) ($generated@@51 $generated@@52 $generated@@294 ($generated@@53 $generated@@292) $generated@@297)) (and (= 2 $generated@@101) (= (ControlFlow 0 27) 26)))) $generated@@319))))
$generated@@320)))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
