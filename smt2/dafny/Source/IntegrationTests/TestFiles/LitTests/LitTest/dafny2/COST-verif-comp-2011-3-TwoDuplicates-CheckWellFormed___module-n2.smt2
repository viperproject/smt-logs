(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@68 () Int)
(declare-fun $generated@@69 (T@U T@U Int Int) Bool)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@71 (T@U T@U Int Int) Bool)
(declare-fun $generated@@72 (Int) Int)
(declare-fun $generated@@73 (Int) T@U)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@123 (T@U T@U) Bool)
(declare-fun $generated@@128 (T@U T@U Int) Bool)
(declare-fun $generated@@129 (T@U T@U Int) Bool)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@156 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@158 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert (= ($generated@@5 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35) ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@37 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@37 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@37 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@5 $generated@@38) 4)) (= ($generated@@5 $generated@@39) 5)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@5 ($generated@@40 $generated@@55 $generated@@56)) 6))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@40 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@40 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@40 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@62 ($generated@@24 $generated@@61) $generated@@63)  (or (= $generated@@62 $generated@@25) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@63 $generated@@62) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@62 ($generated@@24 $generated@@61) $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@64 $generated@@65 $generated@@66) (forall (($generated@@67 T@U) ) (!  (=> ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@65 $generated@@67) $generated@@1))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@66 $generated@@67) $generated@@1))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@66 $generated@@67) $generated@@1))
)))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66))
)))
(assert  (=> (<= 0 $generated@@68) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 Int) ($generated@@77 Int) ) (!  (=> (or ($generated@@71 $generated@@74 $generated@@75 $generated@@76 $generated@@77) (and (< 0 $generated@@68) (and (and ($generated@@70 $generated@@74) ($generated@@27 $generated@@31 $generated@@75 ($generated@@32 $generated))) (and (<= ($generated@@72 0) $generated@@76) (<= $generated@@76 ($generated@@23 $generated@@75)))))) (= ($generated@@69 $generated@@74 $generated@@75 $generated@@76 $generated@@77) (exists (($generated@@78 Int) ($generated@@79 Int) ) (!  (and (and (and (<= ($generated@@72 0) $generated@@78) (< $generated@@78 $generated@@79)) (< $generated@@79 $generated@@76)) (and (= ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@74 $generated@@75) ($generated@@73 $generated@@78)))) ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@74 $generated@@75) ($generated@@73 $generated@@79))))) (= ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@74 $generated@@75) ($generated@@73 $generated@@79)))) $generated@@77)))
 :pattern ( ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@74 $generated@@75) ($generated@@73 $generated@@79))) ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@74 $generated@@75) ($generated@@73 $generated@@78))))
))))
 :pattern ( ($generated@@69 $generated@@74 $generated@@75 $generated@@76 $generated@@77) ($generated@@70 $generated@@74))
))))
(assert (forall (($generated@@80 Int) ) (! (= ($generated@@72 $generated@@80) $generated@@80)
 :pattern ( ($generated@@72 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 Int) ) (!  (=> (and (and (and ($generated@@70 $generated@@86) (and (or (not (= $generated@@87 $generated@@25)) (not true)) (= ($generated@@26 $generated@@87) ($generated@@24 $generated@@85)))) (and (<= 0 $generated@@88) (< $generated@@88 ($generated@@23 $generated@@87)))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@86 $generated@@87) $generated@@1)))) ($generated@@84 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@86 $generated@@87) ($generated@@73 $generated@@88)) $generated@@85 $generated@@86))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@86 $generated@@87) ($generated@@73 $generated@@88)) ($generated@@24 $generated@@85))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 Int) ($generated@@94 Int) ) (!  (=> (and (and (and ($generated@@70 $generated@@90) ($generated@@70 $generated@@91)) (or ($generated@@71 $generated@@90 $generated@@92 $generated@@93 $generated@@94) ($generated@@27 $generated@@31 $generated@@92 ($generated@@32 $generated)))) (and ($generated@@89 $generated@@90) ($generated@@64 $generated@@90 $generated@@91))) (=> (forall (($generated@@95 T@U) ($generated@@96 T@U) )  (=> (and (or (not (= $generated@@95 $generated@@25)) (not true)) (= $generated@@95 $generated@@92)) (= ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@90 $generated@@95) $generated@@96) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@91 $generated@@95) $generated@@96)))) (= ($generated@@69 $generated@@90 $generated@@92 $generated@@93 $generated@@94) ($generated@@69 $generated@@91 $generated@@92 $generated@@93 $generated@@94))))
 :pattern ( ($generated@@89 $generated@@90) ($generated@@64 $generated@@90 $generated@@91) ($generated@@69 $generated@@91 $generated@@92 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 ($generated@@36 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@36 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@101 ($generated@@32 $generated@@100))  (and ($generated@@27 $generated@@31 $generated@@101 ($generated@@24 $generated@@100)) (or (not (= $generated@@101 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@101 ($generated@@32 $generated@@100)))
 :pattern ( ($generated@@27 $generated@@31 $generated@@101 ($generated@@24 $generated@@100)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@84 ($generated@@97 $generated@@105 $generated@@102) $generated@@103 $generated@@104) ($generated@@30 $generated@@105 $generated@@102 $generated@@103 $generated@@104))
 :pattern ( ($generated@@84 ($generated@@97 $generated@@105 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> ($generated@@64 $generated@@106 $generated@@107) (=> ($generated@@84 $generated@@108 $generated@@109 $generated@@106) ($generated@@84 $generated@@108 $generated@@109 $generated@@107)))
 :pattern ( ($generated@@64 $generated@@106 $generated@@107) ($generated@@84 $generated@@108 $generated@@109 $generated@@106))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (!  (=> ($generated@@64 $generated@@110 $generated@@111) (=> ($generated@@30 $generated@@114 $generated@@112 $generated@@113 $generated@@110) ($generated@@30 $generated@@114 $generated@@112 $generated@@113 $generated@@111)))
 :pattern ( ($generated@@64 $generated@@110 $generated@@111) ($generated@@30 $generated@@114 $generated@@112 $generated@@113 $generated@@110))
)))
(assert (forall (($generated@@116 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@116)) $generated@@2) (= ($generated@@115 ($generated@@24 $generated@@116)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (!  (and (= ($generated@@22 ($generated@@32 $generated@@117)) $generated@@3) (= ($generated@@115 ($generated@@32 $generated@@117)) $generated@@4))
 :pattern ( ($generated@@32 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@119 ($generated@@24 $generated@@118))  (or (= $generated@@119 $generated@@25) (= ($generated@@26 $generated@@119) ($generated@@24 $generated@@118))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@119 ($generated@@24 $generated@@118)))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or (not (= $generated@@120 $generated@@122)) (not true)) (=> (and ($generated@@64 $generated@@120 $generated@@121) ($generated@@64 $generated@@121 $generated@@122)) ($generated@@64 $generated@@120 $generated@@122)))
 :pattern ( ($generated@@64 $generated@@120 $generated@@121) ($generated@@64 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@123 $generated@@124 $generated) (and (= ($generated@@97 $generated@@7 ($generated@@36 $generated@@7 $generated@@124)) $generated@@124) ($generated@@27 $generated@@7 ($generated@@36 $generated@@7 $generated@@124) $generated)))
 :pattern ( ($generated@@123 $generated@@124 $generated))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@123 ($generated@@97 $generated@@127 $generated@@125) $generated@@126) ($generated@@27 $generated@@127 $generated@@125 $generated@@126))
 :pattern ( ($generated@@123 ($generated@@97 $generated@@127 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Int) ) (!  (=> (and (and (and ($generated@@70 $generated@@130) ($generated@@70 $generated@@131)) (or ($generated@@129 $generated@@130 $generated@@132 $generated@@133) ($generated@@27 $generated@@31 $generated@@132 ($generated@@32 $generated)))) (and ($generated@@89 $generated@@130) ($generated@@64 $generated@@130 $generated@@131))) (=> (forall (($generated@@134 T@U) ($generated@@135 T@U) )  (=> (and (or (not (= $generated@@134 $generated@@25)) (not true)) (= $generated@@134 $generated@@132)) (= ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@130 $generated@@134) $generated@@135) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@131 $generated@@134) $generated@@135)))) (= ($generated@@128 $generated@@130 $generated@@132 $generated@@133) ($generated@@128 $generated@@131 $generated@@132 $generated@@133))))
 :pattern ( ($generated@@89 $generated@@130) ($generated@@64 $generated@@130 $generated@@131) ($generated@@128 $generated@@131 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@136 T@U) ) (! (<= 0 ($generated@@23 $generated@@136))
 :pattern ( ($generated@@23 $generated@@136))
)))
(assert  (=> (<= 1 $generated@@68) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 Int) ) (!  (=> (or ($generated@@129 $generated@@137 $generated@@138 $generated@@139) (and (< 1 $generated@@68) (and ($generated@@70 $generated@@137) ($generated@@27 $generated@@31 $generated@@138 ($generated@@32 $generated))))) (and ($generated@@71 $generated@@137 $generated@@138 ($generated@@23 $generated@@138) $generated@@139) (= ($generated@@128 $generated@@137 $generated@@138 $generated@@139) ($generated@@69 $generated@@137 $generated@@138 ($generated@@23 $generated@@138) $generated@@139))))
 :pattern ( ($generated@@128 $generated@@137 $generated@@138 $generated@@139) ($generated@@70 $generated@@137))
))))
(assert (forall (($generated@@140 Int) ) (! (= ($generated@@21 ($generated@@73 $generated@@140)) 1)
 :pattern ( ($generated@@73 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= ($generated@@141 ($generated@@73 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@73 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@24 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@24 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@32 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@32 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@36 $generated@@148 ($generated@@97 $generated@@148 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@97 $generated@@148 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and ($generated@@70 $generated@@150) (and (or (not (= $generated@@151 $generated@@25)) (not true)) (= ($generated@@26 $generated@@151) ($generated@@24 $generated@@149)))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@150 $generated@@151) $generated@@1)))) ($generated@@30 $generated@@7 ($generated@@11 ($generated@@23 $generated@@151)) $generated $generated@@150))
 :pattern ( ($generated@@23 $generated@@151) ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@150 $generated@@151) $generated@@1)) ($generated@@24 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 Int) ) (!  (=> (and (and ($generated@@70 $generated@@153) (and (or (not (= $generated@@154 $generated@@25)) (not true)) (= ($generated@@26 $generated@@154) ($generated@@24 $generated@@152)))) (and (<= 0 $generated@@155) (< $generated@@155 ($generated@@23 $generated@@154)))) ($generated@@123 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@153 $generated@@154) ($generated@@73 $generated@@155)) $generated@@152))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@153 $generated@@154) ($generated@@73 $generated@@155)) ($generated@@24 $generated@@152))
)))
(assert  (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@156 $generated@@159 $generated@@160 $generated@@161 ($generated@@158 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@164 $generated@@165) $generated@@162)
 :weight 0
)) (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@156 $generated@@166 $generated@@167 $generated@@168 ($generated@@158 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@156 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or (= $generated@@181 $generated@@183) (= ($generated@@156 $generated@@175 $generated@@176 $generated@@177 ($generated@@158 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@156 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@10 ($generated@@156 $generated@@31 $generated@@38 $generated@@6 ($generated@@157 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))  (=> (and (or (not (= $generated@@188 $generated@@184)) (not true)) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@185 $generated@@188) $generated@@186)))) $generated@@187))
 :pattern ( ($generated@@156 $generated@@31 $generated@@38 $generated@@6 ($generated@@157 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@123 $generated@@191 ($generated@@24 $generated@@190)) (and (= ($generated@@97 $generated@@31 ($generated@@36 $generated@@31 $generated@@191)) $generated@@191) ($generated@@27 $generated@@31 ($generated@@36 $generated@@31 $generated@@191) ($generated@@24 $generated@@190))))
 :pattern ( ($generated@@123 $generated@@191 ($generated@@24 $generated@@190)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> ($generated@@123 $generated@@193 ($generated@@32 $generated@@192)) (and (= ($generated@@97 $generated@@31 ($generated@@36 $generated@@31 $generated@@193)) $generated@@193) ($generated@@27 $generated@@31 ($generated@@36 $generated@@31 $generated@@193) ($generated@@32 $generated@@192))))
 :pattern ( ($generated@@123 $generated@@193 ($generated@@32 $generated@@192)))
)))
(assert (forall (($generated@@194 Int) ) (! (= ($generated@@97 $generated@@7 ($generated@@11 ($generated@@72 $generated@@194))) ($generated@@81 $generated@@39 ($generated@@97 $generated@@7 ($generated@@11 $generated@@194))))
 :pattern ( ($generated@@97 $generated@@7 ($generated@@11 ($generated@@72 $generated@@194))))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@T) ) (! (= ($generated@@97 $generated@@196 ($generated@@81 $generated@@196 $generated@@195)) ($generated@@81 $generated@@39 ($generated@@97 $generated@@196 $generated@@195)))
 :pattern ( ($generated@@97 $generated@@196 ($generated@@81 $generated@@196 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! ($generated@@30 $generated@@7 $generated@@198 $generated $generated@@197)
 :pattern ( ($generated@@30 $generated@@7 $generated@@198 $generated $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ) (! ($generated@@27 $generated@@7 $generated@@199 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@199 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@206 true))
(let (($generated@@207  (=> (and (and (<= ($generated@@72 0) ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@200 $generated@@201) ($generated@@73 $generated@@202))))) (< ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@200 $generated@@201) ($generated@@73 $generated@@202)))) (- ($generated@@23 $generated@@201) 2))) (= (ControlFlow 0 3) 1)) $generated@@206)))
(let (($generated@@208  (=> (and (< ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@200 $generated@@201) ($generated@@73 $generated@@202)))) ($generated@@72 0)) (= (ControlFlow 0 8) 3)) $generated@@207)))
(let (($generated@@209  (=> (<= ($generated@@72 0) ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@200 $generated@@201) ($generated@@73 $generated@@202))))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (not (= $generated@@201 $generated@@25)) (not true))) (=> (or (not (= $generated@@201 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@23 $generated@@201)))) (=> (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@23 $generated@@201))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (not (= $generated@@201 $generated@@25)) (not true))) (=> (or (not (= $generated@@201 $generated@@25)) (not true)) (=> (= (ControlFlow 0 4) 3) $generated@@207))))))))))
(let (($generated@@210  (=> (and (<= ($generated@@72 0) $generated@@202) (< $generated@@202 ($generated@@23 $generated@@201))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (or (not (= $generated@@201 $generated@@25)) (not true))) (=> (or (not (= $generated@@201 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@23 $generated@@201)))) (=> (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@23 $generated@@201))) (and (=> (= (ControlFlow 0 9) 4) $generated@@209) (=> (= (ControlFlow 0 9) 8) $generated@@208)))))))))
(let (($generated@@211  (=> (and (< $generated@@202 ($generated@@72 0)) (= (ControlFlow 0 14) 9)) $generated@@210)))
(let (($generated@@212  (=> (<= ($generated@@72 0) $generated@@202) (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (not (= $generated@@201 $generated@@25)) (not true))) (=> (or (not (= $generated@@201 $generated@@25)) (not true)) (=> (= (ControlFlow 0 12) 9) $generated@@210))))))
(let (($generated@@213  (=> (and (=> (and (<= ($generated@@72 0) $generated@@202) (< $generated@@202 ($generated@@23 $generated@@201))) (and (<= ($generated@@72 0) ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@200 $generated@@201) ($generated@@73 $generated@@202))))) (< ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@200 $generated@@201) ($generated@@73 $generated@@202)))) (- ($generated@@23 $generated@@201) 2)))) (= (ControlFlow 0 2) 1)) $generated@@206)))
(let (($generated@@214  (=> (= $generated@@203 ($generated@@157 $generated@@25 $generated@@200 $generated@@1 false)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (not (= $generated@@201 $generated@@25)) (not true))) (=> (or (not (= $generated@@201 $generated@@25)) (not true)) (=> (and (<= ($generated@@72 4) ($generated@@23 $generated@@201)) (or (not (= $generated@@204 $generated@@205)) (not true))) (=> (and (and (and ($generated@@30 $generated@@31 $generated@@201 ($generated@@32 $generated) $generated@@200) ($generated@@30 $generated@@7 ($generated@@11 $generated@@204) $generated $generated@@200)) (and ($generated@@129 $generated@@200 $generated@@201 $generated@@204) ($generated@@128 $generated@@200 $generated@@201 $generated@@204))) (and (and ($generated@@30 $generated@@31 $generated@@201 ($generated@@32 $generated) $generated@@200) ($generated@@30 $generated@@7 ($generated@@11 $generated@@205) $generated $generated@@200)) (and ($generated@@129 $generated@@200 $generated@@201 $generated@@205) ($generated@@128 $generated@@200 $generated@@201 $generated@@205)))) (and (and (=> (= (ControlFlow 0 15) 2) $generated@@213) (=> (= (ControlFlow 0 15) 12) $generated@@212)) (=> (= (ControlFlow 0 15) 14) $generated@@211)))))))))
(let (($generated@@215  (=> (and ($generated@@70 $generated@@200) ($generated@@89 $generated@@200)) (=> (and (and ($generated@@27 $generated@@31 $generated@@201 ($generated@@32 $generated)) ($generated@@30 $generated@@31 $generated@@201 ($generated@@32 $generated) $generated@@200)) (and (= 2 $generated@@68) (= (ControlFlow 0 17) 15))) $generated@@214))))
$generated@@215)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
