(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (Int T@U T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@88 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@106 (T@T T@U) T@U)
(declare-fun $generated@@113 (T@U T@U) Int)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@121 (T@U T@U T@U) Bool)
(declare-fun $generated@@130 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Int)
(declare-fun $generated@@174 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@262 () T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@26) 3))
(assert (forall (($generated@@29 Int) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@27 $generated@@29 $generated@@30 $generated@@31) $generated@@28)  (and (and ($generated@@25 $generated@@11 ($generated@@15 $generated@@29) $generated) ($generated@@25 $generated@@26 $generated@@30 $generated@@28)) ($generated@@25 $generated@@26 $generated@@31 $generated@@28)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@27 $generated@@29 $generated@@30 $generated@@31) $generated@@28))
)))
(assert (= ($generated@@9 $generated@@36) 4))
(assert  (=> (<= 3 $generated@@32) (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@34 $generated@@39) (and (< 3 $generated@@32) ($generated@@25 $generated@@26 $generated@@39 $generated@@35))) ($generated@@25 $generated@@36 ($generated@@33 $generated@@38 $generated@@39) ($generated@@37 $generated)))
 :pattern ( ($generated@@33 $generated@@38 $generated@@39))
))))
(assert (= ($generated@@40 $generated) $generated@@0))
(assert (forall (($generated@@42 Int) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@41 ($generated@@27 $generated@@42 $generated@@43 $generated@@44)) $generated@@6)
 :pattern ( ($generated@@27 $generated@@42 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 Int) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@45 ($generated@@27 $generated@@46 $generated@@47 $generated@@48)) $generated@@46)
 :pattern ( ($generated@@27 $generated@@46 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 Int) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@49 ($generated@@27 $generated@@50 $generated@@51 $generated@@52)) $generated@@51)
 :pattern ( ($generated@@27 $generated@@50 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 Int) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@53 ($generated@@27 $generated@@54 $generated@@55 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@27 $generated@@54 $generated@@55 $generated@@56))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@60 ($generated@@59 $generated@@26 $generated@@67)) (and (< 1 $generated@@32) ($generated@@25 $generated@@26 $generated@@67 $generated@@28))) (and (=> (not ($generated@@14 ($generated@@59 $generated@@10 ($generated@@13 ($generated@@61 ($generated@@59 $generated@@26 $generated@@67)))))) (let (($generated@@68 ($generated@@59 $generated@@26 ($generated@@53 ($generated@@59 $generated@@26 $generated@@67)))))
(let (($generated@@69 ($generated@@59 $generated@@26 ($generated@@49 ($generated@@59 $generated@@26 $generated@@67)))))
(let (($generated@@70 ($generated@@62 ($generated@@45 ($generated@@59 $generated@@26 $generated@@67)))))
 (and ($generated@@60 $generated@@69) (=> ($generated@@57 ($generated@@58 $generated@@66) $generated@@69) (and ($generated@@60 $generated@@68) (=> ($generated@@57 ($generated@@58 $generated@@66) $generated@@68) (and ($generated@@63 $generated@@69) (=> (or ($generated@@64 $generated@@69 $generated@@65) (<= $generated@@70 ($generated@@45 $generated@@69))) ($generated@@63 $generated@@68))))))))))) (= ($generated@@57 ($generated@@58 $generated@@66) ($generated@@59 $generated@@26 $generated@@67)) (ite ($generated@@61 ($generated@@59 $generated@@26 $generated@@67)) true (let (($generated@@71 ($generated@@59 $generated@@26 ($generated@@53 ($generated@@59 $generated@@26 $generated@@67)))))
(let (($generated@@72 ($generated@@59 $generated@@26 ($generated@@49 ($generated@@59 $generated@@26 $generated@@67)))))
(let (($generated@@73 ($generated@@62 ($generated@@45 ($generated@@59 $generated@@26 $generated@@67)))))
 (and (and (and ($generated@@57 ($generated@@58 $generated@@66) $generated@@72) ($generated@@57 ($generated@@58 $generated@@66) $generated@@71)) (or ($generated@@64 $generated@@72 $generated@@65) (<= $generated@@73 ($generated@@62 ($generated@@45 $generated@@72))))) (or ($generated@@64 $generated@@71 $generated@@65) (<= $generated@@73 ($generated@@62 ($generated@@45 $generated@@71))))))))))))
 :weight 3
 :pattern ( ($generated@@57 ($generated@@58 $generated@@66) ($generated@@59 $generated@@26 $generated@@67)))
))))
(assert  (=> (<= 3 $generated@@32) (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@34 ($generated@@59 $generated@@26 $generated@@79)) (and (< 3 $generated@@32) ($generated@@25 $generated@@26 $generated@@79 $generated@@35))) (and (=> (not ($generated@@14 ($generated@@59 $generated@@10 ($generated@@13 ($generated@@61 ($generated@@59 $generated@@26 $generated@@79)))))) (let (($generated@@80 ($generated@@59 $generated@@26 ($generated@@53 ($generated@@59 $generated@@26 $generated@@79)))))
(let (($generated@@81 ($generated@@59 $generated@@26 ($generated@@49 ($generated@@59 $generated@@26 $generated@@79)))))
 (and ($generated@@34 $generated@@81) ($generated@@34 $generated@@80))))) (= ($generated@@33 ($generated@@58 $generated@@78) ($generated@@59 $generated@@26 $generated@@79)) (ite ($generated@@61 ($generated@@59 $generated@@26 $generated@@79)) $generated@@74 (let (($generated@@82 ($generated@@59 $generated@@26 ($generated@@53 ($generated@@59 $generated@@26 $generated@@79)))))
(let (($generated@@83 ($generated@@59 $generated@@26 ($generated@@49 ($generated@@59 $generated@@26 $generated@@79)))))
(let (($generated@@84 ($generated@@62 ($generated@@45 ($generated@@59 $generated@@26 $generated@@79)))))
($generated@@75 ($generated@@75 ($generated@@76 $generated@@74 ($generated@@77 $generated@@11 ($generated@@15 $generated@@84))) ($generated@@33 ($generated@@58 $generated@@78) $generated@@83)) ($generated@@33 ($generated@@58 $generated@@78) $generated@@82)))))))))
 :weight 3
 :pattern ( ($generated@@33 ($generated@@58 $generated@@78) ($generated@@59 $generated@@26 $generated@@79)))
))))
(assert (= ($generated@@41 $generated@@65) $generated@@5))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@25 $generated@@36 $generated@@86 ($generated@@37 $generated@@87)) ($generated@@85 $generated@@86))
 :pattern ( ($generated@@25 $generated@@36 $generated@@86 ($generated@@37 $generated@@87)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 $generated@@26 $generated@@89 $generated@@35 $generated@@90) ($generated@@88 $generated@@26 $generated@@89 $generated@@28 $generated@@90))
 :pattern ( ($generated@@88 $generated@@26 $generated@@89 $generated@@35 $generated@@90))
)))
(assert ($generated@@25 $generated@@26 $generated@@65 $generated@@28))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@64 $generated@@91 $generated@@92) (= $generated@@91 $generated@@92))
 :pattern ( ($generated@@64 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@62 $generated@@93) $generated@@93)
 :pattern ( ($generated@@62 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@59 $generated@@95 $generated@@94) $generated@@94)
 :pattern ( ($generated@@59 $generated@@95 $generated@@94))
)))
(assert  (=> (<= 3 $generated@@32) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@34 $generated@@97) (and (< 3 $generated@@32) ($generated@@25 $generated@@26 $generated@@97 $generated@@35))) (and (=> (not ($generated@@61 $generated@@97)) (let (($generated@@98 ($generated@@53 $generated@@97)))
(let (($generated@@99 ($generated@@49 $generated@@97)))
 (and ($generated@@34 $generated@@99) ($generated@@34 $generated@@98))))) (= ($generated@@33 ($generated@@58 $generated@@96) $generated@@97) (ite ($generated@@61 $generated@@97) $generated@@74 (let (($generated@@100 ($generated@@53 $generated@@97)))
(let (($generated@@101 ($generated@@49 $generated@@97)))
(let (($generated@@102 ($generated@@45 $generated@@97)))
($generated@@75 ($generated@@75 ($generated@@76 $generated@@74 ($generated@@77 $generated@@11 ($generated@@15 $generated@@102))) ($generated@@33 $generated@@96 $generated@@101)) ($generated@@33 $generated@@96 $generated@@100)))))))))
 :pattern ( ($generated@@33 ($generated@@58 $generated@@96) $generated@@97))
))))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@61 $generated@@103) (= ($generated@@41 $generated@@103) $generated@@5))
 :pattern ( ($generated@@61 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@104 $generated@@105) (= ($generated@@41 $generated@@105) $generated@@6))
 :pattern ( ($generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@77 $generated@@108 ($generated@@106 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@106 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@104 $generated@@109) (exists (($generated@@110 Int) ($generated@@111 T@U) ($generated@@112 T@U) ) (= $generated@@109 ($generated@@27 $generated@@110 $generated@@111 $generated@@112))))
 :pattern ( ($generated@@104 $generated@@109))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or (not (= $generated@@115 $generated@@116)) (not true)) (= ($generated@@113 $generated@@114 $generated@@116) ($generated@@113 ($generated@@76 $generated@@114 $generated@@115) $generated@@116)))
 :pattern ( ($generated@@76 $generated@@114 $generated@@115) ($generated@@113 $generated@@114 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@61 $generated@@117) (= $generated@@117 $generated@@65))
 :pattern ( ($generated@@61 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@76 $generated@@119 $generated@@120)) (+ ($generated@@118 $generated@@119) 1))
 :pattern ( ($generated@@118 ($generated@@76 $generated@@119 $generated@@120)))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@121 ($generated@@77 $generated@@125 $generated@@122) $generated@@123 $generated@@124) ($generated@@88 $generated@@125 $generated@@122 $generated@@123 $generated@@124))
 :pattern ( ($generated@@121 ($generated@@77 $generated@@125 $generated@@122) $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@104 $generated@@126) ($generated@@104 $generated@@127)) (= ($generated@@64 $generated@@126 $generated@@127)  (and (and (= ($generated@@45 $generated@@126) ($generated@@45 $generated@@127)) ($generated@@64 ($generated@@49 $generated@@126) ($generated@@49 $generated@@127))) ($generated@@64 ($generated@@53 $generated@@126) ($generated@@53 $generated@@127)))))
 :pattern ( ($generated@@64 $generated@@126 $generated@@127) ($generated@@104 $generated@@126))
 :pattern ( ($generated@@64 $generated@@126 $generated@@127) ($generated@@104 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@118 ($generated@@75 $generated@@128 $generated@@129)) (+ ($generated@@118 $generated@@128) ($generated@@118 $generated@@129)))
 :pattern ( ($generated@@118 ($generated@@75 $generated@@128 $generated@@129)))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@130 $generated@@131 $generated@@28) (and (= ($generated@@77 $generated@@26 ($generated@@106 $generated@@26 $generated@@131)) $generated@@131) ($generated@@25 $generated@@26 ($generated@@106 $generated@@26 $generated@@131) $generated@@28)))
 :pattern ( ($generated@@130 $generated@@131 $generated@@28))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@130 $generated@@132 $generated@@35) (and (= ($generated@@77 $generated@@26 ($generated@@106 $generated@@26 $generated@@132)) $generated@@132) ($generated@@25 $generated@@26 ($generated@@106 $generated@@26 $generated@@132) $generated@@35)))
 :pattern ( ($generated@@130 $generated@@132 $generated@@35))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@63 $generated@@133) (or ($generated@@61 $generated@@133) ($generated@@104 $generated@@133)))
 :pattern ( ($generated@@63 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@25 $generated@@36 $generated@@134 ($generated@@37 $generated@@135)) (forall (($generated@@136 T@U) ) (!  (=> (< 0 ($generated@@113 $generated@@134 $generated@@136)) ($generated@@130 $generated@@136 $generated@@135))
 :pattern ( ($generated@@113 $generated@@134 $generated@@136))
)))
 :pattern ( ($generated@@25 $generated@@36 $generated@@134 ($generated@@37 $generated@@135)))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@137 $generated@@28) (or ($generated@@61 $generated@@137) ($generated@@104 $generated@@137)))
 :pattern ( ($generated@@104 $generated@@137) ($generated@@25 $generated@@26 $generated@@137 $generated@@28))
 :pattern ( ($generated@@61 $generated@@137) ($generated@@25 $generated@@26 $generated@@137 $generated@@28))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@130 $generated@@138 $generated) (and (= ($generated@@77 $generated@@11 ($generated@@106 $generated@@11 $generated@@138)) $generated@@138) ($generated@@25 $generated@@11 ($generated@@106 $generated@@11 $generated@@138) $generated)))
 :pattern ( ($generated@@130 $generated@@138 $generated))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@57 ($generated@@58 $generated@@139) $generated@@140) ($generated@@57 $generated@@139 $generated@@140))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@130 ($generated@@77 $generated@@143 $generated@@141) $generated@@142) ($generated@@25 $generated@@143 $generated@@141 $generated@@142))
 :pattern ( ($generated@@130 ($generated@@77 $generated@@143 $generated@@141) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@85 $generated@@144) (forall (($generated@@145 T@U) ) (!  (and (<= 0 ($generated@@113 $generated@@144 $generated@@145)) (<= ($generated@@113 $generated@@144 $generated@@145) ($generated@@118 $generated@@144)))
 :pattern ( ($generated@@113 $generated@@144 $generated@@145))
)))
 :pattern ( ($generated@@85 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (<= 0 ($generated@@118 $generated@@146))
 :pattern ( ($generated@@118 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and ($generated@@61 $generated@@147) ($generated@@61 $generated@@148)) ($generated@@64 $generated@@147 $generated@@148))
 :pattern ( ($generated@@64 $generated@@147 $generated@@148) ($generated@@61 $generated@@147))
 :pattern ( ($generated@@64 $generated@@147 $generated@@148) ($generated@@61 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@113 $generated@@74 $generated@@149) 0)
 :pattern ( ($generated@@113 $generated@@74 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@113 ($generated@@76 $generated@@150 $generated@@151) $generated@@151) (+ ($generated@@113 $generated@@150 $generated@@151) 1))
 :pattern ( ($generated@@76 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 Int) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@27 ($generated@@62 $generated@@152) ($generated@@59 $generated@@26 $generated@@153) ($generated@@59 $generated@@26 $generated@@154)) ($generated@@59 $generated@@26 ($generated@@27 $generated@@152 $generated@@153 $generated@@154)))
 :pattern ( ($generated@@27 ($generated@@62 $generated@@152) ($generated@@59 $generated@@26 $generated@@153) ($generated@@59 $generated@@26 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@37 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@37 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@40 ($generated@@37 $generated@@157)) $generated@@1)
 :pattern ( ($generated@@37 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@T) ) (! (= ($generated@@106 $generated@@159 ($generated@@77 $generated@@159 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@77 $generated@@159 $generated@@158))
)))
(assert (forall (($generated@@161 Int) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (< ($generated@@160 $generated@@162) ($generated@@160 ($generated@@27 $generated@@161 $generated@@162 $generated@@163)))
 :pattern ( ($generated@@27 $generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (< ($generated@@160 $generated@@166) ($generated@@160 ($generated@@27 $generated@@164 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@27 $generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@33 ($generated@@58 $generated@@167) $generated@@168) ($generated@@33 $generated@@167 $generated@@168))
 :pattern ( ($generated@@33 ($generated@@58 $generated@@167) $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ) (!  (and (= (= ($generated@@118 $generated@@169) 0) (= $generated@@169 $generated@@74)) (=> (or (not (= ($generated@@118 $generated@@169) 0)) (not true)) (exists (($generated@@170 T@U) ) (! (< 0 ($generated@@113 $generated@@169 $generated@@170))
 :pattern ( ($generated@@113 $generated@@169 $generated@@170))
))))
 :pattern ( ($generated@@118 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@113 ($generated@@75 $generated@@171 $generated@@172) $generated@@173) (+ ($generated@@113 $generated@@171 $generated@@173) ($generated@@113 $generated@@172 $generated@@173)))
 :pattern ( ($generated@@113 ($generated@@75 $generated@@171 $generated@@172) $generated@@173))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@174 $generated@@185 $generated@@186 $generated@@187 ($generated@@181 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@190 $generated@@191) $generated@@188)
 :weight 0
)) (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@174 $generated@@192 $generated@@193 $generated@@194 ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@174 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@174 $generated@@201 $generated@@202 $generated@@203 ($generated@@181 $generated@@201 $generated@@202 $generated@@203 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@174 $generated@@201 $generated@@202 $generated@@203 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (= ($generated@@9 $generated@@175) 5)) (= ($generated@@9 $generated@@176) 6)) (forall (($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@178 $generated@@210 $generated@@211 ($generated@@182 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@212) $generated@@214) $generated@@212)
 :weight 0
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@219 $generated@@220) (= ($generated@@178 $generated@@215 $generated@@216 ($generated@@182 $generated@@215 $generated@@216 $generated@@218 $generated@@219 $generated@@217) $generated@@220) ($generated@@178 $generated@@215 $generated@@216 $generated@@218 $generated@@220)))
 :weight 0
))) (= ($generated@@9 $generated@@179) 7)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (= ($generated@@9 ($generated@@180 $generated@@221 $generated@@222)) 8))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@183 ($generated@@180 $generated@@223 $generated@@224)) $generated@@223)
 :pattern ( ($generated@@180 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (! (= ($generated@@184 ($generated@@180 $generated@@225 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@180 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (= ($generated@@14 ($generated@@174 $generated@@175 $generated@@176 $generated@@10 ($generated@@177 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (or (not (= $generated@@231 $generated@@227)) (not true)) ($generated@@14 ($generated@@106 $generated@@10 ($generated@@178 $generated@@176 $generated@@179 ($generated@@178 $generated@@175 ($generated@@180 $generated@@176 $generated@@179) $generated@@228 $generated@@231) $generated@@229)))) $generated@@230))
 :pattern ( ($generated@@174 $generated@@175 $generated@@176 $generated@@10 ($generated@@177 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and ($generated@@233 $generated@@235) (and ($generated@@104 $generated@@234) ($generated@@88 $generated@@26 $generated@@234 $generated@@28 $generated@@235))) ($generated@@88 $generated@@11 ($generated@@15 ($generated@@45 $generated@@234)) $generated $generated@@235))
 :pattern ( ($generated@@88 $generated@@11 ($generated@@15 ($generated@@45 $generated@@234)) $generated $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> ($generated@@130 $generated@@236 ($generated@@37 $generated@@237)) (and (= ($generated@@77 $generated@@36 ($generated@@106 $generated@@36 $generated@@236)) $generated@@236) ($generated@@25 $generated@@36 ($generated@@106 $generated@@36 $generated@@236) ($generated@@37 $generated@@237))))
 :pattern ( ($generated@@130 $generated@@236 ($generated@@37 $generated@@237)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and ($generated@@233 $generated@@239) ($generated@@25 $generated@@26 $generated@@238 $generated@@28)) ($generated@@88 $generated@@26 $generated@@238 $generated@@28 $generated@@239))
 :pattern ( ($generated@@88 $generated@@26 $generated@@238 $generated@@28 $generated@@239))
)))
(assert (= ($generated@@40 $generated@@28) $generated@@3))
(assert (= ($generated@@240 $generated@@28) $generated@@7))
(assert (= ($generated@@40 $generated@@35) $generated@@4))
(assert (= ($generated@@240 $generated@@35) $generated@@8))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (or ($generated@@60 $generated@@242) (and (< 1 $generated@@32) ($generated@@25 $generated@@26 $generated@@242 $generated@@28))) (and (=> (not ($generated@@61 $generated@@242)) (let (($generated@@243 ($generated@@53 $generated@@242)))
(let (($generated@@244 ($generated@@49 $generated@@242)))
(let (($generated@@245 ($generated@@45 $generated@@242)))
 (and ($generated@@60 $generated@@244) (=> ($generated@@57 $generated@@241 $generated@@244) (and ($generated@@60 $generated@@243) (=> ($generated@@57 $generated@@241 $generated@@243) (and ($generated@@63 $generated@@244) (=> (or ($generated@@64 $generated@@244 $generated@@65) (<= $generated@@245 ($generated@@45 $generated@@244))) ($generated@@63 $generated@@243))))))))))) (= ($generated@@57 ($generated@@58 $generated@@241) $generated@@242) (ite ($generated@@61 $generated@@242) true (let (($generated@@246 ($generated@@53 $generated@@242)))
(let (($generated@@247 ($generated@@49 $generated@@242)))
(let (($generated@@248 ($generated@@45 $generated@@242)))
 (and (and (and ($generated@@57 $generated@@241 $generated@@247) ($generated@@57 $generated@@241 $generated@@246)) (or ($generated@@64 $generated@@247 $generated@@65) (<= $generated@@248 ($generated@@45 $generated@@247)))) (or ($generated@@64 $generated@@246 $generated@@65) (<= $generated@@248 ($generated@@45 $generated@@246)))))))))))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@241) $generated@@242))
))))
(assert (= $generated@@65 ($generated@@59 $generated@@26 $generated@@65)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and ($generated@@233 $generated@@250) (and ($generated@@104 $generated@@249) ($generated@@88 $generated@@26 $generated@@249 $generated@@28 $generated@@250))) ($generated@@88 $generated@@26 ($generated@@49 $generated@@249) $generated@@28 $generated@@250))
 :pattern ( ($generated@@88 $generated@@26 ($generated@@49 $generated@@249) $generated@@28 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and ($generated@@233 $generated@@252) (and ($generated@@104 $generated@@251) ($generated@@88 $generated@@26 $generated@@251 $generated@@28 $generated@@252))) ($generated@@88 $generated@@26 ($generated@@53 $generated@@251) $generated@@28 $generated@@252))
 :pattern ( ($generated@@88 $generated@@26 ($generated@@53 $generated@@251) $generated@@28 $generated@@252))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@77 $generated@@11 ($generated@@15 ($generated@@62 $generated@@253))) ($generated@@59 $generated@@179 ($generated@@77 $generated@@11 ($generated@@15 $generated@@253))))
 :pattern ( ($generated@@77 $generated@@11 ($generated@@15 ($generated@@62 $generated@@253))))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@T) ) (! (= ($generated@@77 $generated@@255 ($generated@@59 $generated@@255 $generated@@254)) ($generated@@59 $generated@@179 ($generated@@77 $generated@@255 $generated@@254)))
 :pattern ( ($generated@@77 $generated@@255 ($generated@@59 $generated@@255 $generated@@254)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (< 0 ($generated@@113 $generated@@256 $generated@@258)) (< 0 ($generated@@113 ($generated@@76 $generated@@256 $generated@@257) $generated@@258)))
 :pattern ( ($generated@@76 $generated@@256 $generated@@257) ($generated@@113 $generated@@256 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (< 0 ($generated@@113 ($generated@@76 $generated@@259 $generated@@260) $generated@@261))  (or (= $generated@@261 $generated@@260) (< 0 ($generated@@113 $generated@@259 $generated@@261))))
 :pattern ( ($generated@@113 ($generated@@76 $generated@@259 $generated@@260) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@263 $generated@@35)  (and ($generated@@25 $generated@@26 $generated@@263 $generated@@28) ($generated@@57 ($generated@@58 $generated@@262) $generated@@263)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@263 $generated@@35))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (! (= ($generated@@88 $generated@@36 $generated@@264 ($generated@@37 $generated@@265) $generated@@266) (forall (($generated@@267 T@U) ) (!  (=> (< 0 ($generated@@113 $generated@@264 $generated@@267)) ($generated@@121 $generated@@267 $generated@@265 $generated@@266))
 :pattern ( ($generated@@113 $generated@@264 $generated@@267))
)))
 :pattern ( ($generated@@88 $generated@@36 $generated@@264 ($generated@@37 $generated@@265) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! ($generated@@88 $generated@@11 $generated@@269 $generated $generated@@268)
 :pattern ( ($generated@@88 $generated@@11 $generated@@269 $generated $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! ($generated@@25 $generated@@11 $generated@@270 $generated)
 :pattern ( ($generated@@25 $generated@@11 $generated@@270 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () Int)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@278 true))
(let (($generated@@279  (=> (and (=> (> ($generated@@113 ($generated@@33 ($generated@@58 $generated@@262) $generated@@271) ($generated@@77 $generated@@11 ($generated@@15 $generated@@272))) 0) (<= ($generated@@45 $generated@@271) $generated@@272)) (= (ControlFlow 0 4) 1)) $generated@@278)))
(let (($generated@@280  (=> ($generated@@88 $generated@@26 $generated@@271 $generated@@35 $generated@@273) (=> (and ($generated@@34 $generated@@271) (> ($generated@@113 ($generated@@33 ($generated@@58 $generated@@262) $generated@@271) ($generated@@77 $generated@@11 ($generated@@15 $generated@@272))) 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@104 $generated@@271)) (=> ($generated@@104 $generated@@271) (=> (and (<= ($generated@@45 $generated@@271) $generated@@272) (= (ControlFlow 0 2) 1)) $generated@@278)))))))
(let (($generated@@281  (=> (and (= $generated@@274 ($generated@@177 $generated@@275 $generated@@276 $generated@@2 false)) (not ($generated@@64 $generated@@271 $generated@@65))) (=> (and (and ($generated@@233 $generated@@273) ($generated@@277 $generated@@273)) (= $generated@@276 $generated@@273)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@104 $generated@@271)) (=> ($generated@@104 $generated@@271) (=> ($generated@@88 $generated@@26 $generated@@271 $generated@@35 $generated@@273) (=> (and ($generated@@34 $generated@@271) (> ($generated@@113 ($generated@@33 ($generated@@58 $generated@@262) $generated@@271) ($generated@@77 $generated@@11 ($generated@@15 ($generated@@45 $generated@@271)))) 0)) (and (=> (= (ControlFlow 0 5) 2) $generated@@280) (=> (= (ControlFlow 0 5) 4) $generated@@279))))))))))
(let (($generated@@282  (=> (and ($generated@@233 $generated@@276) ($generated@@277 $generated@@276)) (=> (and (and (and ($generated@@25 $generated@@26 $generated@@271 $generated@@35) ($generated@@88 $generated@@26 $generated@@271 $generated@@35 $generated@@276)) ($generated@@63 $generated@@271)) (and (= 4 $generated@@32) (= (ControlFlow 0 7) 5))) $generated@@281))))
$generated@@282))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
