(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (Int) Int)
(declare-fun $generated@@30 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@35 (T@U Int) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Int)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@163 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@203 (Int Int) Int)
(declare-fun $generated@@221 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@28) 3))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 Int) ($generated@@40 Int) ($generated@@41 T@U) ) (!  (=> (or ($generated@@30 $generated@@36 ($generated@@27 $generated@@28 $generated@@38) ($generated@@29 $generated@@39) ($generated@@29 $generated@@40) $generated@@41) (and (< 0 $generated@@24) (and (and ($generated@@31 $generated@@28 $generated@@38 ($generated@@32 $generated@@36)) ($generated@@33 $generated@@41 $generated@@36)) (and (and (<= ($generated@@29 0) ($generated@@29 $generated@@39)) (<= ($generated@@29 $generated@@39) ($generated@@29 $generated@@40))) (<= ($generated@@29 $generated@@40) ($generated@@34 ($generated@@27 $generated@@28 $generated@@38))))))) (and (=> (or (not (= ($generated@@29 $generated@@39) ($generated@@29 $generated@@40))) (not true)) ($generated@@30 $generated@@36 ($generated@@27 $generated@@28 $generated@@38) ($generated@@29 $generated@@39) ($generated@@29 (- $generated@@40 1)) $generated@@41)) (= ($generated@@25 $generated@@36 ($generated@@26 $generated@@37) ($generated@@27 $generated@@28 $generated@@38) ($generated@@29 $generated@@39) ($generated@@29 $generated@@40) $generated@@41) (ite (= ($generated@@29 $generated@@39) ($generated@@29 $generated@@40)) 0 (+ ($generated@@25 $generated@@36 ($generated@@26 $generated@@37) ($generated@@27 $generated@@28 $generated@@38) ($generated@@29 $generated@@39) ($generated@@29 (- $generated@@40 1)) $generated@@41) (ite (= ($generated@@35 ($generated@@27 $generated@@28 $generated@@38) ($generated@@29 (- $generated@@40 1))) $generated@@41) 1 0))))))
 :weight 3
 :pattern ( ($generated@@25 $generated@@36 ($generated@@26 $generated@@37) ($generated@@27 $generated@@28 $generated@@38) ($generated@@29 $generated@@39) ($generated@@29 $generated@@40) $generated@@41))
))))
(assert (= ($generated@@34 $generated@@42) 0))
(assert (= ($generated@@43 $generated@@44) $generated@@4))
(assert (= ($generated@@7 $generated@@46) 4))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> ($generated@@48 $generated@@50) ($generated@@45 $generated@@46 $generated@@44 ($generated@@47 $generated@@49) $generated@@50))
 :pattern ( ($generated@@45 $generated@@46 $generated@@44 ($generated@@47 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ) (! ($generated@@31 $generated@@46 $generated@@44 ($generated@@47 $generated@@51))
 :pattern ( ($generated@@31 $generated@@46 $generated@@44 ($generated@@47 $generated@@51)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@53 $generated@@62 $generated@@63 ($generated@@59 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@66) $generated@@64)
 :weight 0
)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (= $generated@@71 $generated@@72) (= ($generated@@53 $generated@@67 $generated@@68 ($generated@@59 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@72) ($generated@@53 $generated@@67 $generated@@68 $generated@@70 $generated@@72)))
 :weight 0
))) (= ($generated@@7 $generated@@54) 5)) (= ($generated@@7 $generated@@55) 6)) (= ($generated@@7 $generated@@56) 7)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (= ($generated@@7 ($generated@@57 $generated@@73 $generated@@74)) 8))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@60 ($generated@@57 $generated@@75 $generated@@76)) $generated@@75)
 :pattern ( ($generated@@57 $generated@@75 $generated@@76))
))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@61 ($generated@@57 $generated@@77 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@57 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> ($generated@@52 $generated@@79 $generated@@80) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@12 ($generated@@58 $generated@@8 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@56 ($generated@@57 $generated@@54 $generated@@55) $generated@@79 $generated@@81) $generated@@2))) ($generated@@12 ($generated@@58 $generated@@8 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@56 ($generated@@57 $generated@@54 $generated@@55) $generated@@80 $generated@@81) $generated@@2))))
 :pattern ( ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@56 ($generated@@57 $generated@@54 $generated@@55) $generated@@80 $generated@@81) $generated@@2))
)))
 :pattern ( ($generated@@52 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@29 $generated@@82) $generated@@82)
 :pattern ( ($generated@@29 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@27 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@27 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@85 $generated@@86) (= ($generated@@43 $generated@@86) $generated@@4))
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 $generated@@88) (= ($generated@@43 $generated@@88) $generated@@5))
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@58 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@58 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@85 $generated@@92) (= $generated@@92 $generated@@44))
 :pattern ( ($generated@@85 $generated@@92))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 Int) ($generated@@97 Int) ($generated@@98 T@U) ) (!  (=> (or ($generated@@30 $generated@@93 ($generated@@27 $generated@@28 $generated@@95) ($generated@@29 $generated@@96) ($generated@@29 $generated@@97) ($generated@@27 $generated@@55 $generated@@98)) (and (< 0 $generated@@24) (and (and ($generated@@31 $generated@@28 $generated@@95 ($generated@@32 $generated@@93)) ($generated@@33 $generated@@98 $generated@@93)) (and (and (<= ($generated@@29 0) ($generated@@29 $generated@@96)) (<= ($generated@@29 $generated@@96) ($generated@@29 $generated@@97))) (<= ($generated@@29 $generated@@97) ($generated@@34 ($generated@@27 $generated@@28 $generated@@95))))))) (and (=> (or (not (= ($generated@@29 $generated@@96) ($generated@@29 $generated@@97))) (not true)) ($generated@@30 $generated@@93 ($generated@@27 $generated@@28 $generated@@95) ($generated@@29 $generated@@96) ($generated@@29 (- $generated@@97 1)) ($generated@@27 $generated@@55 $generated@@98))) (= ($generated@@25 $generated@@93 ($generated@@26 $generated@@94) ($generated@@27 $generated@@28 $generated@@95) ($generated@@29 $generated@@96) ($generated@@29 $generated@@97) ($generated@@27 $generated@@55 $generated@@98)) (ite (= ($generated@@29 $generated@@96) ($generated@@29 $generated@@97)) 0 (+ ($generated@@25 $generated@@93 ($generated@@26 $generated@@94) ($generated@@27 $generated@@28 $generated@@95) ($generated@@29 $generated@@96) ($generated@@29 (- $generated@@97 1)) ($generated@@27 $generated@@55 $generated@@98)) (ite (= ($generated@@35 ($generated@@27 $generated@@28 $generated@@95) ($generated@@29 (- $generated@@97 1))) ($generated@@27 $generated@@55 $generated@@98)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@25 $generated@@93 ($generated@@26 $generated@@94) ($generated@@27 $generated@@28 $generated@@95) ($generated@@29 $generated@@96) ($generated@@29 $generated@@97) ($generated@@27 $generated@@55 $generated@@98)))
))))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@87 $generated@@100) (exists (($generated@@101 T@U) ) (= $generated@@100 ($generated@@99 $generated@@101))))
 :pattern ( ($generated@@87 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@102 ($generated@@89 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@45 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@102 ($generated@@89 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> ($generated@@52 $generated@@107 $generated@@108) (=> ($generated@@102 $generated@@109 $generated@@110 $generated@@107) ($generated@@102 $generated@@109 $generated@@110 $generated@@108)))
 :pattern ( ($generated@@52 $generated@@107 $generated@@108) ($generated@@102 $generated@@109 $generated@@110 $generated@@107))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (!  (=> ($generated@@52 $generated@@111 $generated@@112) (=> ($generated@@45 $generated@@115 $generated@@113 $generated@@114 $generated@@111) ($generated@@45 $generated@@115 $generated@@113 $generated@@114 $generated@@112)))
 :pattern ( ($generated@@52 $generated@@111 $generated@@112) ($generated@@45 $generated@@115 $generated@@113 $generated@@114 $generated@@111))
)))
(assert (forall (($generated@@117 T@U) ) (!  (and (= ($generated@@23 ($generated@@47 $generated@@117)) $generated@@3) (= ($generated@@116 ($generated@@47 $generated@@117)) $generated@@6))
 :pattern ( ($generated@@47 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@48 $generated@@120) (= ($generated@@45 $generated@@46 ($generated@@99 $generated@@119) ($generated@@47 $generated@@118) $generated@@120) ($generated@@102 $generated@@119 $generated@@118 $generated@@120)))
 :pattern ( ($generated@@45 $generated@@46 ($generated@@99 $generated@@119) ($generated@@47 $generated@@118) $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@31 $generated@@46 $generated@@122 ($generated@@47 $generated@@121)) (or ($generated@@85 $generated@@122) ($generated@@87 $generated@@122)))
 :pattern ( ($generated@@87 $generated@@122) ($generated@@31 $generated@@46 $generated@@122 ($generated@@47 $generated@@121)))
 :pattern ( ($generated@@85 $generated@@122) ($generated@@31 $generated@@46 $generated@@122 ($generated@@47 $generated@@121)))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 Int) ($generated@@127 Int) ($generated@@128 T@U) ) (! (= ($generated@@25 $generated@@123 ($generated@@26 $generated@@124) $generated@@125 $generated@@126 $generated@@127 $generated@@128) ($generated@@25 $generated@@123 $generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@128))
 :pattern ( ($generated@@25 $generated@@123 ($generated@@26 $generated@@124) $generated@@125 $generated@@126 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or (not (= $generated@@129 $generated@@131)) (not true)) (=> (and ($generated@@52 $generated@@129 $generated@@130) ($generated@@52 $generated@@130 $generated@@131)) ($generated@@52 $generated@@129 $generated@@131)))
 :pattern ( ($generated@@52 $generated@@129 $generated@@130) ($generated@@52 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@33 $generated@@132 $generated) (and (= ($generated@@89 $generated@@9 ($generated@@58 $generated@@9 $generated@@132)) $generated@@132) ($generated@@31 $generated@@9 ($generated@@58 $generated@@9 $generated@@132) $generated)))
 :pattern ( ($generated@@33 $generated@@132 $generated))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@33 ($generated@@89 $generated@@135 $generated@@133) $generated@@134) ($generated@@31 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@33 ($generated@@89 $generated@@135 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (<= 0 ($generated@@34 $generated@@136))
 :pattern ( ($generated@@34 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@137 $generated@@138) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> ($generated@@33 $generated@@140 $generated@@138) ($generated@@102 $generated@@140 $generated@@138 $generated@@139))
 :pattern ( ($generated@@102 $generated@@140 $generated@@138 $generated@@139))
)))
 :pattern ( ($generated@@137 $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@45 $generated@@28 $generated@@141 ($generated@@32 $generated@@142) $generated@@143) (forall (($generated@@144 Int) ) (!  (=> (and (<= 0 $generated@@144) (< $generated@@144 ($generated@@34 $generated@@141))) ($generated@@102 ($generated@@35 $generated@@141 $generated@@144) $generated@@142 $generated@@143))
 :pattern ( ($generated@@35 $generated@@141 $generated@@144))
)))
 :pattern ( ($generated@@45 $generated@@28 $generated@@141 ($generated@@32 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@32 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@32 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@23 ($generated@@32 $generated@@147)) $generated@@1)
 :pattern ( ($generated@@32 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@47 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@47 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@43 ($generated@@99 $generated@@150)) $generated@@5)
 :pattern ( ($generated@@99 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@151 ($generated@@99 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@99 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@58 $generated@@154 ($generated@@89 $generated@@154 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@89 $generated@@154 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@31 $generated@@46 ($generated@@99 $generated@@156) ($generated@@47 $generated@@155)) ($generated@@33 $generated@@156 $generated@@155))
 :pattern ( ($generated@@31 $generated@@46 ($generated@@99 $generated@@156) ($generated@@47 $generated@@155)))
)))
(assert (forall (($generated@@159 T@U) ) (! (< ($generated@@157 $generated@@159) ($generated@@158 ($generated@@99 $generated@@159)))
 :pattern ( ($generated@@99 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@48 $generated@@162) (and ($generated@@87 $generated@@160) ($generated@@45 $generated@@46 $generated@@160 ($generated@@47 $generated@@161) $generated@@162))) ($generated@@102 ($generated@@151 $generated@@160) $generated@@161 $generated@@162))
 :pattern ( ($generated@@102 ($generated@@151 $generated@@160) $generated@@161 $generated@@162))
)))
(assert  (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@163 $generated@@166 $generated@@167 $generated@@168 ($generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@171 $generated@@172) $generated@@169)
 :weight 0
)) (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@163 $generated@@173 $generated@@174 $generated@@175 ($generated@@165 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@163 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@163 $generated@@182 $generated@@183 $generated@@184 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@163 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 Bool) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@12 ($generated@@163 $generated@@56 $generated@@54 $generated@@8 ($generated@@164 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))  (=> (and (or (not (= $generated@@195 $generated@@191)) (not true)) ($generated@@12 ($generated@@58 $generated@@8 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@56 ($generated@@57 $generated@@54 $generated@@55) $generated@@192 $generated@@195) $generated@@193)))) $generated@@194))
 :pattern ( ($generated@@163 $generated@@56 $generated@@54 $generated@@8 ($generated@@164 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 Int) ($generated@@201 Int) ($generated@@202 T@U) ) (!  (=> (or ($generated@@30 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@202) (and (< 0 $generated@@24) (and (and ($generated@@31 $generated@@28 $generated@@199 ($generated@@32 $generated@@197)) ($generated@@33 $generated@@202 $generated@@197)) (and (and (<= ($generated@@29 0) $generated@@200) (<= $generated@@200 $generated@@201)) (<= $generated@@201 ($generated@@34 $generated@@199)))))) (and (=> (or (not (= $generated@@200 $generated@@201)) (not true)) ($generated@@30 $generated@@197 $generated@@199 $generated@@200 (- $generated@@201 1) $generated@@202)) (= ($generated@@25 $generated@@197 ($generated@@26 $generated@@198) $generated@@199 $generated@@200 $generated@@201 $generated@@202) (ite (= $generated@@200 $generated@@201) 0 (+ ($generated@@25 $generated@@197 $generated@@198 $generated@@199 $generated@@200 (- $generated@@201 1) $generated@@202) (ite (= ($generated@@35 $generated@@199 (- $generated@@201 1)) $generated@@202) 1 0))))))
 :pattern ( ($generated@@25 $generated@@197 ($generated@@26 $generated@@198) $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@204 Int) ($generated@@205 Int) ) (! (= ($generated@@203 $generated@@204 $generated@@205) (* $generated@@204 $generated@@205))
 :pattern ( ($generated@@203 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@157 ($generated@@89 $generated@@46 $generated@@206)) ($generated@@158 $generated@@206))
 :pattern ( ($generated@@157 ($generated@@89 $generated@@46 $generated@@206)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@33 $generated@@207 ($generated@@32 $generated@@208)) (and (= ($generated@@89 $generated@@28 ($generated@@58 $generated@@28 $generated@@207)) $generated@@207) ($generated@@31 $generated@@28 ($generated@@58 $generated@@28 $generated@@207) ($generated@@32 $generated@@208))))
 :pattern ( ($generated@@33 $generated@@207 ($generated@@32 $generated@@208)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@33 $generated@@210 ($generated@@47 $generated@@209)) (and (= ($generated@@89 $generated@@46 ($generated@@58 $generated@@46 $generated@@210)) $generated@@210) ($generated@@31 $generated@@46 ($generated@@58 $generated@@46 $generated@@210) ($generated@@47 $generated@@209))))
 :pattern ( ($generated@@33 $generated@@210 ($generated@@47 $generated@@209)))
)))
(assert (= $generated@@44 ($generated@@27 $generated@@46 $generated@@44)))
(assert (forall (($generated@@211 Int) ) (! (= ($generated@@89 $generated@@9 ($generated@@13 ($generated@@29 $generated@@211))) ($generated@@27 $generated@@55 ($generated@@89 $generated@@9 ($generated@@13 $generated@@211))))
 :pattern ( ($generated@@89 $generated@@9 ($generated@@13 ($generated@@29 $generated@@211))))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@99 ($generated@@27 $generated@@55 $generated@@212)) ($generated@@27 $generated@@46 ($generated@@99 $generated@@212)))
 :pattern ( ($generated@@99 ($generated@@27 $generated@@55 $generated@@212)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@T) ) (! (= ($generated@@89 $generated@@214 ($generated@@27 $generated@@214 $generated@@213)) ($generated@@27 $generated@@55 ($generated@@89 $generated@@214 $generated@@213)))
 :pattern ( ($generated@@89 $generated@@214 ($generated@@27 $generated@@214 $generated@@213)))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (= ($generated@@34 $generated@@215) 0) (= $generated@@215 $generated@@42))
 :pattern ( ($generated@@34 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! ($generated@@45 $generated@@9 $generated@@217 $generated $generated@@216)
 :pattern ( ($generated@@45 $generated@@9 $generated@@217 $generated $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@31 $generated@@28 $generated@@218 ($generated@@32 $generated@@219)) (forall (($generated@@220 Int) ) (!  (=> (and (<= 0 $generated@@220) (< $generated@@220 ($generated@@34 $generated@@218))) ($generated@@33 ($generated@@35 $generated@@218 $generated@@220) $generated@@219))
 :pattern ( ($generated@@35 $generated@@218 $generated@@220))
)))
 :pattern ( ($generated@@31 $generated@@28 $generated@@218 ($generated@@32 $generated@@219)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 Int) ) (!  (=> (and (<= 0 $generated@@223) (< $generated@@223 ($generated@@34 $generated@@222))) (< ($generated@@158 ($generated@@58 $generated@@46 ($generated@@35 $generated@@222 $generated@@223))) ($generated@@221 $generated@@222)))
 :pattern ( ($generated@@158 ($generated@@58 $generated@@46 ($generated@@35 $generated@@222 $generated@@223))))
)))
(assert (forall (($generated@@224 T@U) ) (! ($generated@@31 $generated@@9 $generated@@224 $generated)
 :pattern ( ($generated@@31 $generated@@9 $generated@@224 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 () Int)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@240 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@241 true))
(let (($generated@@242  (=> ($generated@@85 $generated@@225) (=> (and (and (and ($generated@@33 $generated@@226 $generated@@227) ($generated@@102 $generated@@226 $generated@@227 $generated@@228)) (and ($generated@@45 $generated@@28 $generated@@229 ($generated@@32 $generated@@227) $generated@@228) (= $generated@@230 ($generated@@29 0)))) (and (and ($generated@@45 $generated@@9 ($generated@@13 $generated@@230) $generated $generated@@228) (= $generated@@231 ($generated@@34 $generated@@229))) (and ($generated@@45 $generated@@9 ($generated@@13 $generated@@231) $generated $generated@@228) ($generated@@102 $generated@@226 $generated@@227 $generated@@228)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@29 0) $generated@@230)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@230 $generated@@231)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@231 ($generated@@34 $generated@@229)))))))))
(let (($generated@@243  (=> (=> ($generated@@87 $generated@@225) (> ($generated@@203 ($generated@@29 2) ($generated@@25 $generated@@227 ($generated@@26 $generated@@232) $generated@@229 ($generated@@29 0) ($generated@@34 $generated@@229) ($generated@@151 $generated@@225))) ($generated@@34 $generated@@229))) (and (=> (= (ControlFlow 0 11) 2) $generated@@242) (=> (= (ControlFlow 0 11) 5) $generated@@241)))))
(let (($generated@@244  (=> (and ($generated@@87 $generated@@225) ($generated@@45 $generated@@28 $generated@@229 ($generated@@32 $generated@@227) $generated@@228)) (=> (and (and (= $generated@@233 ($generated@@29 0)) ($generated@@45 $generated@@9 ($generated@@13 $generated@@233) $generated $generated@@228)) (and (= $generated@@234 ($generated@@34 $generated@@229)) ($generated@@45 $generated@@9 ($generated@@13 $generated@@234) $generated $generated@@228))) (and (=> (= (ControlFlow 0 6) (- 0 10)) ($generated@@87 $generated@@225)) (=> ($generated@@87 $generated@@225) (=> (and (= $generated@@235 ($generated@@151 $generated@@225)) ($generated@@102 $generated@@235 $generated@@227 $generated@@228)) (and (=> (= (ControlFlow 0 6) (- 0 9)) (<= ($generated@@29 0) $generated@@233)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (<= $generated@@233 $generated@@234)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (<= $generated@@234 ($generated@@34 $generated@@229))) (=> (and (and (and (<= ($generated@@29 0) $generated@@233) (<= $generated@@233 $generated@@234)) (<= $generated@@234 ($generated@@34 $generated@@229))) (and ($generated@@30 $generated@@227 $generated@@229 ($generated@@29 0) ($generated@@34 $generated@@229) ($generated@@151 $generated@@225)) (> ($generated@@203 ($generated@@29 2) ($generated@@25 $generated@@227 ($generated@@26 $generated@@232) $generated@@229 ($generated@@29 0) ($generated@@34 $generated@@229) ($generated@@151 $generated@@225))) ($generated@@34 $generated@@229)))) (and (=> (= (ControlFlow 0 6) 2) $generated@@242) (=> (= (ControlFlow 0 6) 5) $generated@@241)))))))))))))
(let (($generated@@245  (=> (= $generated@@236 ($generated@@164 $generated@@237 $generated@@238 $generated@@2 false)) (=> (and ($generated@@48 $generated@@228) ($generated@@239 $generated@@228)) (=> (and (and (forall (($generated@@246 T@U) ) (!  (=> (and (or (not (= $generated@@246 $generated@@237)) (not true)) ($generated@@12 ($generated@@58 $generated@@8 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@56 ($generated@@57 $generated@@54 $generated@@55) $generated@@238 $generated@@246) $generated@@2)))) (= ($generated@@53 $generated@@56 ($generated@@57 $generated@@54 $generated@@55) $generated@@228 $generated@@246) ($generated@@53 $generated@@56 ($generated@@57 $generated@@54 $generated@@55) $generated@@238 $generated@@246)))
 :pattern ( ($generated@@53 $generated@@56 ($generated@@57 $generated@@54 $generated@@55) $generated@@228 $generated@@246))
)) ($generated@@52 $generated@@238 $generated@@228)) (and ($generated@@31 $generated@@46 $generated@@225 ($generated@@47 $generated@@227)) ($generated@@45 $generated@@46 $generated@@225 ($generated@@47 $generated@@227) $generated@@228))) (and (=> (= (ControlFlow 0 12) 6) $generated@@244) (=> (= (ControlFlow 0 12) 11) $generated@@243)))))))
(let (($generated@@247  (=> (and (and (and (and ($generated@@48 $generated@@238) ($generated@@239 $generated@@238)) ($generated@@137 $generated@@227)) (and ($generated@@31 $generated@@28 $generated@@229 ($generated@@32 $generated@@227)) ($generated@@45 $generated@@28 $generated@@229 ($generated@@32 $generated@@227) $generated@@238))) (and (and ($generated@@31 $generated@@46 $generated@@240 ($generated@@47 $generated@@227)) ($generated@@45 $generated@@46 $generated@@240 ($generated@@47 $generated@@227) $generated@@238)) (and (= 3 $generated@@24) (= (ControlFlow 0 13) 12)))) $generated@@245)))
$generated@@247)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
