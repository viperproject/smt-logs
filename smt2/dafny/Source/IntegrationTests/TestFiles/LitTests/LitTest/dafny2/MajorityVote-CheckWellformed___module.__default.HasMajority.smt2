(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (Int) Int)
(declare-fun $generated@@28 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@40 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@43 (Int Int) Int)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@105 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@1))
(assert (= ($generated@@21 $generated@@0) $generated@@2))
(assert (= ($generated@@5 $generated@@26) 3))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 Int) ($generated@@38 Int) ($generated@@39 T@U) ) (!  (=> (or ($generated@@28 $generated@@34 ($generated@@25 $generated@@26 $generated@@36) ($generated@@27 $generated@@37) ($generated@@27 $generated@@38) $generated@@39) (and (< 0 $generated@@22) (and (and ($generated@@29 $generated@@26 $generated@@36 ($generated@@30 $generated@@34)) ($generated@@31 $generated@@39 $generated@@34)) (and (and (<= ($generated@@27 0) ($generated@@27 $generated@@37)) (<= ($generated@@27 $generated@@37) ($generated@@27 $generated@@38))) (<= ($generated@@27 $generated@@38) ($generated@@32 ($generated@@25 $generated@@26 $generated@@36))))))) (and (=> (or (not (= ($generated@@27 $generated@@37) ($generated@@27 $generated@@38))) (not true)) ($generated@@28 $generated@@34 ($generated@@25 $generated@@26 $generated@@36) ($generated@@27 $generated@@37) ($generated@@27 (- $generated@@38 1)) $generated@@39)) (= ($generated@@23 $generated@@34 ($generated@@24 $generated@@35) ($generated@@25 $generated@@26 $generated@@36) ($generated@@27 $generated@@37) ($generated@@27 $generated@@38) $generated@@39) (ite (= ($generated@@27 $generated@@37) ($generated@@27 $generated@@38)) 0 (+ ($generated@@23 $generated@@34 ($generated@@24 $generated@@35) ($generated@@25 $generated@@26 $generated@@36) ($generated@@27 $generated@@37) ($generated@@27 (- $generated@@38 1)) $generated@@39) (ite (= ($generated@@33 ($generated@@25 $generated@@26 $generated@@36) ($generated@@27 (- $generated@@38 1))) $generated@@39) 1 0))))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@34 ($generated@@24 $generated@@35) ($generated@@25 $generated@@26 $generated@@36) ($generated@@27 $generated@@37) ($generated@@27 $generated@@38) $generated@@39))
))))
(assert (= ($generated@@5 $generated@@41) 4))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 Int) ($generated@@48 Int) ($generated@@49 T@U) ) (!  (=> (or ($generated@@42 $generated@@45 ($generated@@25 $generated@@26 $generated@@46) ($generated@@27 $generated@@47) ($generated@@27 $generated@@48) ($generated@@25 $generated@@41 $generated@@49)) (and (< 1 $generated@@22) (and (and ($generated@@29 $generated@@26 $generated@@46 ($generated@@30 $generated@@45)) ($generated@@31 $generated@@49 $generated@@45)) (and (and (<= ($generated@@27 0) ($generated@@27 $generated@@47)) (<= ($generated@@27 $generated@@47) ($generated@@27 $generated@@48))) (<= ($generated@@27 $generated@@48) ($generated@@32 ($generated@@25 $generated@@26 $generated@@46))))))) (and ($generated@@28 $generated@@45 ($generated@@25 $generated@@26 $generated@@46) ($generated@@27 $generated@@47) ($generated@@27 $generated@@48) ($generated@@25 $generated@@41 $generated@@49)) (= ($generated@@40 $generated@@45 ($generated@@25 $generated@@26 $generated@@46) ($generated@@27 $generated@@47) ($generated@@27 $generated@@48) ($generated@@25 $generated@@41 $generated@@49)) ($generated@@10 ($generated@@25 $generated@@6 ($generated@@9 (> ($generated@@43 ($generated@@27 2) ($generated@@27 ($generated@@23 $generated@@45 ($generated@@24 $generated@@44) ($generated@@25 $generated@@26 $generated@@46) ($generated@@27 $generated@@47) ($generated@@27 $generated@@48) ($generated@@25 $generated@@41 $generated@@49)))) (- $generated@@48 $generated@@47))))))))
 :weight 3
 :pattern ( ($generated@@40 $generated@@45 ($generated@@25 $generated@@26 $generated@@46) ($generated@@27 $generated@@47) ($generated@@27 $generated@@48) ($generated@@25 $generated@@41 $generated@@49)))
))))
(assert (= ($generated@@32 $generated@@50) 0))
(assert (forall (($generated@@51 Int) ) (! (= ($generated@@27 $generated@@51) $generated@@51)
 :pattern ( ($generated@@27 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@25 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@25 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@55 $generated@@57 ($generated@@54 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@54 $generated@@57 $generated@@56))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 Int) ($generated@@62 Int) ($generated@@63 T@U) ) (!  (=> (or ($generated@@28 $generated@@58 ($generated@@25 $generated@@26 $generated@@60) ($generated@@27 $generated@@61) ($generated@@27 $generated@@62) ($generated@@25 $generated@@41 $generated@@63)) (and (< 0 $generated@@22) (and (and ($generated@@29 $generated@@26 $generated@@60 ($generated@@30 $generated@@58)) ($generated@@31 $generated@@63 $generated@@58)) (and (and (<= ($generated@@27 0) ($generated@@27 $generated@@61)) (<= ($generated@@27 $generated@@61) ($generated@@27 $generated@@62))) (<= ($generated@@27 $generated@@62) ($generated@@32 ($generated@@25 $generated@@26 $generated@@60))))))) (and (=> (or (not (= ($generated@@27 $generated@@61) ($generated@@27 $generated@@62))) (not true)) ($generated@@28 $generated@@58 ($generated@@25 $generated@@26 $generated@@60) ($generated@@27 $generated@@61) ($generated@@27 (- $generated@@62 1)) ($generated@@25 $generated@@41 $generated@@63))) (= ($generated@@23 $generated@@58 ($generated@@24 $generated@@59) ($generated@@25 $generated@@26 $generated@@60) ($generated@@27 $generated@@61) ($generated@@27 $generated@@62) ($generated@@25 $generated@@41 $generated@@63)) (ite (= ($generated@@27 $generated@@61) ($generated@@27 $generated@@62)) 0 (+ ($generated@@23 $generated@@58 ($generated@@24 $generated@@59) ($generated@@25 $generated@@26 $generated@@60) ($generated@@27 $generated@@61) ($generated@@27 (- $generated@@62 1)) ($generated@@25 $generated@@41 $generated@@63)) (ite (= ($generated@@33 ($generated@@25 $generated@@26 $generated@@60) ($generated@@27 (- $generated@@62 1))) ($generated@@25 $generated@@41 $generated@@63)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@58 ($generated@@24 $generated@@59) ($generated@@25 $generated@@26 $generated@@60) ($generated@@27 $generated@@61) ($generated@@27 $generated@@62) ($generated@@25 $generated@@41 $generated@@63)))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@64 ($generated@@55 $generated@@69 $generated@@66) $generated@@67 $generated@@68) ($generated@@65 $generated@@69 $generated@@66 $generated@@67 $generated@@68))
 :pattern ( ($generated@@64 ($generated@@55 $generated@@69 $generated@@66) $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 Int) ($generated@@74 Int) ($generated@@75 T@U) ) (! (= ($generated@@23 $generated@@70 ($generated@@24 $generated@@71) $generated@@72 $generated@@73 $generated@@74 $generated@@75) ($generated@@23 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75))
 :pattern ( ($generated@@23 $generated@@70 ($generated@@24 $generated@@71) $generated@@72 $generated@@73 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@31 $generated@@76 $generated@@0) (and (= ($generated@@55 $generated@@7 ($generated@@54 $generated@@7 $generated@@76)) $generated@@76) ($generated@@29 $generated@@7 ($generated@@54 $generated@@7 $generated@@76) $generated@@0)))
 :pattern ( ($generated@@31 $generated@@76 $generated@@0))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@31 $generated@@77 $generated) (and (= ($generated@@55 $generated@@6 ($generated@@54 $generated@@6 $generated@@77)) $generated@@77) ($generated@@29 $generated@@6 ($generated@@54 $generated@@6 $generated@@77) $generated)))
 :pattern ( ($generated@@31 $generated@@77 $generated))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@31 ($generated@@55 $generated@@80 $generated@@78) $generated@@79) ($generated@@29 $generated@@80 $generated@@78 $generated@@79))
 :pattern ( ($generated@@31 ($generated@@55 $generated@@80 $generated@@78) $generated@@79))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 Int) ($generated@@84 Int) ($generated@@85 T@U) ) (!  (=> (or ($generated@@42 $generated@@81 ($generated@@25 $generated@@26 $generated@@82) ($generated@@27 $generated@@83) ($generated@@27 $generated@@84) $generated@@85) (and (< 1 $generated@@22) (and (and ($generated@@29 $generated@@26 $generated@@82 ($generated@@30 $generated@@81)) ($generated@@31 $generated@@85 $generated@@81)) (and (and (<= ($generated@@27 0) ($generated@@27 $generated@@83)) (<= ($generated@@27 $generated@@83) ($generated@@27 $generated@@84))) (<= ($generated@@27 $generated@@84) ($generated@@32 ($generated@@25 $generated@@26 $generated@@82))))))) (and ($generated@@28 $generated@@81 ($generated@@25 $generated@@26 $generated@@82) ($generated@@27 $generated@@83) ($generated@@27 $generated@@84) $generated@@85) (= ($generated@@40 $generated@@81 ($generated@@25 $generated@@26 $generated@@82) ($generated@@27 $generated@@83) ($generated@@27 $generated@@84) $generated@@85) (> ($generated@@43 ($generated@@27 2) ($generated@@23 $generated@@81 ($generated@@24 $generated@@44) ($generated@@25 $generated@@26 $generated@@82) ($generated@@27 $generated@@83) ($generated@@27 $generated@@84) $generated@@85)) (- $generated@@84 $generated@@83)))))
 :weight 3
 :pattern ( ($generated@@40 $generated@@81 ($generated@@25 $generated@@26 $generated@@82) ($generated@@27 $generated@@83) ($generated@@27 $generated@@84) $generated@@85))
))))
(assert (forall (($generated@@86 T@U) ) (! (<= 0 ($generated@@32 $generated@@86))
 :pattern ( ($generated@@32 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@65 $generated@@26 $generated@@87 ($generated@@30 $generated@@88) $generated@@89) (forall (($generated@@90 Int) ) (!  (=> (and (<= 0 $generated@@90) (< $generated@@90 ($generated@@32 $generated@@87))) ($generated@@64 ($generated@@33 $generated@@87 $generated@@90) $generated@@88 $generated@@89))
 :pattern ( ($generated@@33 $generated@@87 $generated@@90))
)))
 :pattern ( ($generated@@65 $generated@@26 $generated@@87 ($generated@@30 $generated@@88) $generated@@89))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 Int) ($generated@@94 Int) ($generated@@95 T@U) ) (!  (=> (or ($generated@@42 $generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@95) (and (< 1 $generated@@22) (and (and ($generated@@29 $generated@@26 $generated@@92 ($generated@@30 $generated@@91)) ($generated@@31 $generated@@95 $generated@@91)) (and (and (<= ($generated@@27 0) $generated@@93) (<= $generated@@93 $generated@@94)) (<= $generated@@94 ($generated@@32 $generated@@92)))))) (and ($generated@@28 $generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@95) (= ($generated@@40 $generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@95) (> ($generated@@43 ($generated@@27 2) ($generated@@23 $generated@@91 ($generated@@24 $generated@@44) $generated@@92 $generated@@93 $generated@@94 $generated@@95)) (- $generated@@94 $generated@@93)))))
 :pattern ( ($generated@@40 $generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@95))
))))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@30 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@30 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@21 ($generated@@30 $generated@@98)) $generated@@3)
 :pattern ( ($generated@@30 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@54 $generated@@100 ($generated@@55 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@55 $generated@@100 $generated@@99))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@101 $generated@@111 $generated@@112 $generated@@113 ($generated@@107 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@101 $generated@@118 $generated@@119 $generated@@120 ($generated@@107 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@101 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@101 $generated@@127 $generated@@128 $generated@@129 ($generated@@107 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@101 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))) (= ($generated@@5 $generated@@102) 5)) (= ($generated@@5 $generated@@103) 6)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@105 $generated@@136 $generated@@137 ($generated@@108 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@138) $generated@@140) $generated@@138)
 :weight 0
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@145 $generated@@146) (= ($generated@@105 $generated@@141 $generated@@142 ($generated@@108 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@105 $generated@@141 $generated@@142 $generated@@144 $generated@@146)))
 :weight 0
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (= ($generated@@5 ($generated@@106 $generated@@147 $generated@@148)) 7))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@106 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@110 ($generated@@106 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@106 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Bool) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@10 ($generated@@101 $generated@@102 $generated@@103 $generated@@6 ($generated@@104 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))  (=> (and (or (not (= $generated@@157 $generated@@153)) (not true)) ($generated@@10 ($generated@@54 $generated@@6 ($generated@@105 $generated@@103 $generated@@41 ($generated@@105 $generated@@102 ($generated@@106 $generated@@103 $generated@@41) $generated@@154 $generated@@157) $generated@@155)))) $generated@@156))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103 $generated@@6 ($generated@@104 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Int) ($generated@@163 Int) ($generated@@164 T@U) ) (!  (=> (or ($generated@@28 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@164) (and (< 0 $generated@@22) (and (and ($generated@@29 $generated@@26 $generated@@161 ($generated@@30 $generated@@159)) ($generated@@31 $generated@@164 $generated@@159)) (and (and (<= ($generated@@27 0) $generated@@162) (<= $generated@@162 $generated@@163)) (<= $generated@@163 ($generated@@32 $generated@@161)))))) (and (=> (or (not (= $generated@@162 $generated@@163)) (not true)) ($generated@@28 $generated@@159 $generated@@161 $generated@@162 (- $generated@@163 1) $generated@@164)) (= ($generated@@23 $generated@@159 ($generated@@24 $generated@@160) $generated@@161 $generated@@162 $generated@@163 $generated@@164) (ite (= $generated@@162 $generated@@163) 0 (+ ($generated@@23 $generated@@159 $generated@@160 $generated@@161 $generated@@162 (- $generated@@163 1) $generated@@164) (ite (= ($generated@@33 $generated@@161 (- $generated@@163 1)) $generated@@164) 1 0))))))
 :pattern ( ($generated@@23 $generated@@159 ($generated@@24 $generated@@160) $generated@@161 $generated@@162 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 Int) ($generated@@166 Int) ) (! (= ($generated@@43 $generated@@165 $generated@@166) (* $generated@@165 $generated@@166))
 :pattern ( ($generated@@43 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@31 $generated@@167 ($generated@@30 $generated@@168)) (and (= ($generated@@55 $generated@@26 ($generated@@54 $generated@@26 $generated@@167)) $generated@@167) ($generated@@29 $generated@@26 ($generated@@54 $generated@@26 $generated@@167) ($generated@@30 $generated@@168))))
 :pattern ( ($generated@@31 $generated@@167 ($generated@@30 $generated@@168)))
)))
(assert (forall (($generated@@169 Int) ) (! (= ($generated@@55 $generated@@7 ($generated@@11 ($generated@@27 $generated@@169))) ($generated@@25 $generated@@41 ($generated@@55 $generated@@7 ($generated@@11 $generated@@169))))
 :pattern ( ($generated@@55 $generated@@7 ($generated@@11 ($generated@@27 $generated@@169))))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@55 $generated@@171 ($generated@@25 $generated@@171 $generated@@170)) ($generated@@25 $generated@@41 ($generated@@55 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@55 $generated@@171 ($generated@@25 $generated@@171 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= ($generated@@32 $generated@@172) 0) (= $generated@@172 $generated@@50))
 :pattern ( ($generated@@32 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! ($generated@@65 $generated@@7 $generated@@174 $generated@@0 $generated@@173)
 :pattern ( ($generated@@65 $generated@@7 $generated@@174 $generated@@0 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! ($generated@@65 $generated@@6 $generated@@176 $generated $generated@@175)
 :pattern ( ($generated@@65 $generated@@6 $generated@@176 $generated $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@29 $generated@@26 $generated@@177 ($generated@@30 $generated@@178)) (forall (($generated@@179 Int) ) (!  (=> (and (<= 0 $generated@@179) (< $generated@@179 ($generated@@32 $generated@@177))) ($generated@@31 ($generated@@33 $generated@@177 $generated@@179) $generated@@178))
 :pattern ( ($generated@@33 $generated@@177 $generated@@179))
)))
 :pattern ( ($generated@@29 $generated@@26 $generated@@177 ($generated@@30 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (! ($generated@@29 $generated@@7 $generated@@180 $generated@@0)
 :pattern ( ($generated@@29 $generated@@7 $generated@@180 $generated@@0))
)))
(assert (forall (($generated@@181 T@U) ) (! ($generated@@29 $generated@@6 $generated@@181 $generated)
 :pattern ( ($generated@@29 $generated@@6 $generated@@181 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@192  (=> (and (and ($generated@@65 $generated@@26 $generated@@182 ($generated@@30 $generated@@183) $generated@@184) ($generated@@65 $generated@@7 ($generated@@11 $generated@@185) $generated@@0 $generated@@184)) (and ($generated@@65 $generated@@7 ($generated@@11 $generated@@186) $generated@@0 $generated@@184) ($generated@@64 $generated@@187 $generated@@183 $generated@@184))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@27 0) $generated@@185)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= $generated@@185 $generated@@186)) (=> (= (ControlFlow 0 3) (- 0 2)) (<= $generated@@186 ($generated@@32 $generated@@182))))))))
(let (($generated@@193 true))
(let (($generated@@194  (=> (and (and (<= ($generated@@27 0) $generated@@185) (<= $generated@@185 $generated@@186)) (<= $generated@@186 ($generated@@32 $generated@@182))) (and (=> (= (ControlFlow 0 6) 1) $generated@@193) (=> (= (ControlFlow 0 6) 3) $generated@@192)))))
(let (($generated@@195  (=> (and (not (and (<= ($generated@@27 0) $generated@@185) (<= $generated@@185 $generated@@186))) (= (ControlFlow 0 8) 6)) $generated@@194)))
(let (($generated@@196  (=> (and (and (<= ($generated@@27 0) $generated@@185) (<= $generated@@185 $generated@@186)) (= (ControlFlow 0 7) 6)) $generated@@194)))
(let (($generated@@197  (=> (< $generated@@185 ($generated@@27 0)) (and (=> (= (ControlFlow 0 10) 7) $generated@@196) (=> (= (ControlFlow 0 10) 8) $generated@@195)))))
(let (($generated@@198  (=> (<= ($generated@@27 0) $generated@@185) (and (=> (= (ControlFlow 0 9) 7) $generated@@196) (=> (= (ControlFlow 0 9) 8) $generated@@195)))))
(let (($generated@@199  (=> (= $generated@@188 ($generated@@104 $generated@@189 $generated@@184 $generated@@4 false)) (and (=> (= (ControlFlow 0 11) 9) $generated@@198) (=> (= (ControlFlow 0 11) 10) $generated@@197)))))
(let (($generated@@200  (=> (and ($generated@@190 $generated@@184) ($generated@@191 $generated@@184)) (=> (and (and ($generated@@29 $generated@@26 $generated@@182 ($generated@@30 $generated@@183)) ($generated@@31 $generated@@187 $generated@@183)) (and (= 1 $generated@@22) (= (ControlFlow 0 12) 11))) $generated@@199))))
$generated@@200))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
