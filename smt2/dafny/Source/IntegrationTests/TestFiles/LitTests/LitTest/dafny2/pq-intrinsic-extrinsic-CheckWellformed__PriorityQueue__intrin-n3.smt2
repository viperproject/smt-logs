(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U) T@U)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U T@U T@U) Bool)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@U T@U) Int)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@101 (T@T T@T) T@T)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T) T@T)
(declare-fun $generated@@105 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@3 $generated@@23) 3))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@31 T@U) ) (!  (=> (or ($generated@@24 ($generated@@22 $generated@@23 $generated@@31)) (and (< 1 $generated@@20) ($generated@@25 $generated@@31 $generated@@26))) (and ($generated@@27 ($generated@@22 $generated@@23 $generated@@31)) (= ($generated@@21 ($generated@@22 $generated@@23 $generated@@31)) ($generated@@28 ($generated@@29 $generated@@30) ($generated@@22 $generated@@23 $generated@@31)))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@22 $generated@@23 $generated@@31)))
))))
(assert (= ($generated@@3 $generated@@33) 4))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@35 T@U) ) (!  (=> (or ($generated@@24 $generated@@35) (and (< 1 $generated@@20) ($generated@@25 $generated@@35 $generated@@26))) ($generated@@32 $generated@@33 ($generated@@21 $generated@@35) ($generated@@34 $generated)))
 :pattern ( ($generated@@21 $generated@@35))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@43 T@U) ) (!  (=> (or ($generated@@37 ($generated@@22 $generated@@23 $generated@@43)) (and (< 2 $generated@@20) (and ($generated@@25 $generated@@43 $generated@@26) (and ($generated@@38 ($generated@@22 $generated@@23 $generated@@43)) (not ($generated@@39 ($generated@@21 ($generated@@22 $generated@@23 $generated@@43)) $generated@@40)))))) (and ($generated@@41 ($generated@@22 $generated@@23 $generated@@43)) (= ($generated@@36 ($generated@@22 $generated@@23 $generated@@43)) ($generated@@42 ($generated@@22 $generated@@23 $generated@@43)))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@22 $generated@@23 $generated@@43)))
))))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@45 ($generated@@34 $generated@@46)) ($generated@@44 $generated@@45))
 :pattern ( ($generated@@32 $generated@@33 $generated@@45 ($generated@@34 $generated@@46)))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@22 $generated@@48 $generated@@47) $generated@@47)
 :pattern ( ($generated@@22 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 ($generated@@49 $generated@@52 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@49 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@58 $generated@@55) $generated@@56 $generated@@57) ($generated@@54 $generated@@58 $generated@@55 $generated@@56 $generated@@57))
 :pattern ( ($generated@@53 ($generated@@50 $generated@@58 $generated@@55) $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (or ($generated@@27 $generated@@60) ($generated@@25 $generated@@60 $generated@@26)) ($generated@@32 $generated@@33 ($generated@@28 $generated@@59 $generated@@60) ($generated@@34 $generated)))
 :pattern ( ($generated@@28 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> ($generated@@39 $generated@@61 $generated@@62) (= $generated@@61 $generated@@62))
 :pattern ( ($generated@@39 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@64 ($generated@@34 $generated@@65)) (forall (($generated@@66 T@U) ) (!  (=> (< 0 ($generated@@63 $generated@@64 $generated@@66)) ($generated@@25 $generated@@66 $generated@@65))
 :pattern ( ($generated@@63 $generated@@64 $generated@@66))
)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@64 ($generated@@34 $generated@@65)))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@25 $generated@@67 $generated) (and (= ($generated@@50 $generated@@5 ($generated@@49 $generated@@5 $generated@@67)) $generated@@67) ($generated@@32 $generated@@5 ($generated@@49 $generated@@5 $generated@@67) $generated)))
 :pattern ( ($generated@@25 $generated@@67 $generated))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@71 T@U) ) (!  (=> (or ($generated@@68 $generated@@71) (and (< 1 $generated@@20) ($generated@@25 $generated@@71 $generated@@26))) (and ($generated@@69 $generated@@71) (= ($generated@@38 $generated@@71) ($generated@@70 ($generated@@29 $generated@@30) $generated@@71))))
 :pattern ( ($generated@@38 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@70 ($generated@@29 $generated@@72) $generated@@73) ($generated@@70 $generated@@72 $generated@@73))
 :pattern ( ($generated@@70 ($generated@@29 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@25 ($generated@@50 $generated@@76 $generated@@74) $generated@@75) ($generated@@32 $generated@@76 $generated@@74 $generated@@75))
 :pattern ( ($generated@@25 ($generated@@50 $generated@@76 $generated@@74) $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@44 $generated@@78) (forall (($generated@@79 T@U) ) (!  (and (<= 0 ($generated@@63 $generated@@78 $generated@@79)) (<= ($generated@@63 $generated@@78 $generated@@79) ($generated@@77 $generated@@78)))
 :pattern ( ($generated@@63 $generated@@78 $generated@@79))
)))
 :pattern ( ($generated@@44 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (! (<= 0 ($generated@@77 $generated@@80))
 :pattern ( ($generated@@77 $generated@@80))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@81 T@U) ) (!  (=> (or ($generated@@37 $generated@@81) (and (< 2 $generated@@20) (and ($generated@@25 $generated@@81 $generated@@26) (and ($generated@@38 $generated@@81) (not ($generated@@39 ($generated@@21 $generated@@81) $generated@@40)))))) (and ($generated@@41 $generated@@81) (= ($generated@@36 $generated@@81) ($generated@@42 $generated@@81))))
 :pattern ( ($generated@@36 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@63 $generated@@40 $generated@@82) 0)
 :pattern ( ($generated@@63 $generated@@40 $generated@@82))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@83 T@U) ) (!  (=> (or ($generated@@37 $generated@@83) (and (< 2 $generated@@20) (and ($generated@@25 $generated@@83 $generated@@26) (and ($generated@@38 $generated@@83) (not ($generated@@39 ($generated@@21 $generated@@83) $generated@@40)))))) (let (($generated@@84 ($generated@@36 $generated@@83)))
 (and (> ($generated@@63 ($generated@@21 $generated@@83) ($generated@@50 $generated@@5 ($generated@@9 $generated@@84))) 0) (forall (($generated@@85 T@U) ) (!  (=> (> ($generated@@63 ($generated@@21 $generated@@83) ($generated@@50 $generated@@5 $generated@@85)) 0) (<= $generated@@84 ($generated@@10 $generated@@85)))
 :pattern ( ($generated@@63 ($generated@@21 $generated@@83) ($generated@@50 $generated@@5 $generated@@85)))
)))))
 :pattern ( ($generated@@36 $generated@@83))
))))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 ($generated@@34 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@34 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@19 ($generated@@34 $generated@@88)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@49 $generated@@90 ($generated@@50 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@50 $generated@@90 $generated@@89))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@91 T@U) ) (!  (=> (or ($generated@@24 $generated@@91) (and (< 1 $generated@@20) ($generated@@25 $generated@@91 $generated@@26))) (and ($generated@@27 $generated@@91) (= ($generated@@21 $generated@@91) ($generated@@28 ($generated@@29 $generated@@30) $generated@@91))))
 :pattern ( ($generated@@21 $generated@@91))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@28 ($generated@@29 $generated@@92) $generated@@93) ($generated@@28 $generated@@92 $generated@@93))
 :pattern ( ($generated@@28 ($generated@@29 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= (= ($generated@@77 $generated@@94) 0) (= $generated@@94 $generated@@40)) (=> (or (not (= ($generated@@77 $generated@@94) 0)) (not true)) (exists (($generated@@95 T@U) ) (! (< 0 ($generated@@63 $generated@@94 $generated@@95))
 :pattern ( ($generated@@63 $generated@@94 $generated@@95))
))))
 :pattern ( ($generated@@77 $generated@@94))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@96 $generated@@106 $generated@@107 $generated@@108 ($generated@@102 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@111 $generated@@112) $generated@@109)
 :weight 0
)) (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@96 $generated@@113 $generated@@114 $generated@@115 ($generated@@102 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@96 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@96 $generated@@122 $generated@@123 $generated@@124 ($generated@@102 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@96 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)))) (= ($generated@@3 $generated@@97) 5)) (= ($generated@@3 $generated@@98) 6)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@100 $generated@@131 $generated@@132 ($generated@@103 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@135) $generated@@133)
 :weight 0
))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 $generated@@136 $generated@@137 ($generated@@103 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@136 $generated@@137 $generated@@139 $generated@@141)))
 :weight 0
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (= ($generated@@3 ($generated@@101 $generated@@142 $generated@@143)) 7))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@104 ($generated@@101 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@101 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@105 ($generated@@101 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@101 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Bool) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@8 ($generated@@96 $generated@@97 $generated@@98 $generated@@4 ($generated@@99 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))  (=> (and (or (not (= $generated@@152 $generated@@148)) (not true)) ($generated@@8 ($generated@@49 $generated@@4 ($generated@@100 $generated@@98 $generated@@23 ($generated@@100 $generated@@97 ($generated@@101 $generated@@98 $generated@@23) $generated@@149 $generated@@152) $generated@@150)))) $generated@@151))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98 $generated@@4 ($generated@@99 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@25 $generated@@154 ($generated@@34 $generated@@155)) (and (= ($generated@@50 $generated@@33 ($generated@@49 $generated@@33 $generated@@154)) $generated@@154) ($generated@@32 $generated@@33 ($generated@@49 $generated@@33 $generated@@154) ($generated@@34 $generated@@155))))
 :pattern ( ($generated@@25 $generated@@154 ($generated@@34 $generated@@155)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@50 $generated@@157 ($generated@@22 $generated@@157 $generated@@156)) ($generated@@22 $generated@@23 ($generated@@50 $generated@@157 $generated@@156)))
 :pattern ( ($generated@@50 $generated@@157 ($generated@@22 $generated@@157 $generated@@156)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@158 T@U) ) (!  (=> (or ($generated@@68 ($generated@@22 $generated@@23 $generated@@158)) (and (< 1 $generated@@20) ($generated@@25 $generated@@158 $generated@@26))) (and ($generated@@69 ($generated@@22 $generated@@23 $generated@@158)) (= ($generated@@38 ($generated@@22 $generated@@23 $generated@@158)) ($generated@@70 ($generated@@29 $generated@@30) ($generated@@22 $generated@@23 $generated@@158)))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@22 $generated@@23 $generated@@158)))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@39 $generated@@159 $generated@@160) (forall (($generated@@161 T@U) ) (! (= ($generated@@63 $generated@@159 $generated@@161) ($generated@@63 $generated@@160 $generated@@161))
 :pattern ( ($generated@@63 $generated@@159 $generated@@161))
 :pattern ( ($generated@@63 $generated@@160 $generated@@161))
)))
 :pattern ( ($generated@@39 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@54 $generated@@33 $generated@@162 ($generated@@34 $generated@@163) $generated@@164) (forall (($generated@@165 T@U) ) (!  (=> (< 0 ($generated@@63 $generated@@162 $generated@@165)) ($generated@@53 $generated@@165 $generated@@163 $generated@@164))
 :pattern ( ($generated@@63 $generated@@162 $generated@@165))
)))
 :pattern ( ($generated@@54 $generated@@33 $generated@@162 ($generated@@34 $generated@@163) $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! ($generated@@54 $generated@@5 $generated@@167 $generated $generated@@166)
 :pattern ( ($generated@@54 $generated@@5 $generated@@167 $generated $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! ($generated@@32 $generated@@5 $generated@@168 $generated)
 :pattern ( ($generated@@32 $generated@@5 $generated@@168 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@179 true))
(let (($generated@@180 true))
(let (($generated@@181  (=> (and (>= 0 ($generated@@63 ($generated@@21 $generated@@169) ($generated@@50 $generated@@5 ($generated@@9 $generated@@170)))) (= (ControlFlow 0 12) 8)) $generated@@180)))
(let (($generated@@182  (=> (and (> ($generated@@63 ($generated@@21 $generated@@169) ($generated@@50 $generated@@5 ($generated@@9 $generated@@170))) 0) (= (ControlFlow 0 11) 8)) $generated@@180)))
(let (($generated@@183  (=> (and ($generated@@53 $generated@@169 $generated@@26 $generated@@171) ($generated@@24 $generated@@169)) (and (=> (= (ControlFlow 0 13) 11) $generated@@182) (=> (= (ControlFlow 0 13) 12) $generated@@181)))))
(let (($generated@@184  (=> (> ($generated@@63 ($generated@@21 $generated@@169) ($generated@@50 $generated@@5 ($generated@@9 $generated@@172))) 0) (and (=> (= (ControlFlow 0 14) 13) $generated@@183) (=> (= (ControlFlow 0 14) 10) $generated@@179)))))
(let (($generated@@185  (=> (and (>= 0 ($generated@@63 ($generated@@21 $generated@@169) ($generated@@50 $generated@@5 ($generated@@9 $generated@@172)))) (= (ControlFlow 0 9) 8)) $generated@@180)))
(let (($generated@@186  (=> ($generated@@53 $generated@@169 $generated@@26 $generated@@171) (and (=> (= (ControlFlow 0 15) (- 0 18)) (=> ($generated@@68 $generated@@169) (or ($generated@@38 $generated@@169) ($generated@@70 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@169)))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (not ($generated@@39 ($generated@@21 $generated@@169) $generated@@40))) (=> (and ($generated@@38 $generated@@169) (not ($generated@@39 ($generated@@21 $generated@@169) $generated@@40))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (= $generated@@169 $generated@@169)) (=> (= $generated@@169 $generated@@169) (=> (or (= $generated@@169 $generated@@169) ($generated@@37 $generated@@169)) (=> (and (= $generated@@173 ($generated@@36 $generated@@169)) ($generated@@37 $generated@@169)) (=> (and (and ($generated@@32 $generated@@5 ($generated@@9 $generated@@173) $generated) (= $generated@@172 $generated@@173)) (and ($generated@@53 $generated@@169 $generated@@26 $generated@@171) ($generated@@24 $generated@@169))) (and (=> (= (ControlFlow 0 15) 14) $generated@@184) (=> (= (ControlFlow 0 15) 9) $generated@@185)))))))))))))
(let (($generated@@187  (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@188 ($generated@@36 $generated@@169)))
(> ($generated@@63 ($generated@@21 $generated@@169) ($generated@@50 $generated@@5 ($generated@@9 $generated@@188))) 0))) (=> (let (($generated@@189 ($generated@@36 $generated@@169)))
(> ($generated@@63 ($generated@@21 $generated@@169) ($generated@@50 $generated@@5 ($generated@@9 $generated@@189))) 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@190 ($generated@@36 $generated@@169)))
(forall (($generated@@191 Int) ) (!  (=> (> ($generated@@63 ($generated@@21 $generated@@169) ($generated@@50 $generated@@5 ($generated@@9 $generated@@191))) 0) (<= $generated@@190 $generated@@191))
 :pattern ( ($generated@@63 ($generated@@21 $generated@@169) ($generated@@50 $generated@@5 ($generated@@9 $generated@@191))))
))))))))
(let (($generated@@192  (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@70 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@169)) (=> ($generated@@70 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@169) (and (=> (= (ControlFlow 0 4) (- 0 6)) (not ($generated@@39 ($generated@@28 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@169) $generated@@40))) (=> (not ($generated@@39 ($generated@@28 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@169) $generated@@40)) (=> (and (and (and ($generated@@174 $generated@@175) ($generated@@176 $generated@@175)) (and ($generated@@41 $generated@@169) (let (($generated@@193 ($generated@@42 $generated@@169)))
 (and ($generated@@27 $generated@@169) (=> (> ($generated@@63 ($generated@@28 ($generated@@29 $generated@@30) $generated@@169) ($generated@@50 $generated@@5 ($generated@@9 $generated@@193))) 0) ($generated@@27 $generated@@169)))))) (and (and (let (($generated@@194 ($generated@@42 $generated@@169)))
(> ($generated@@63 ($generated@@28 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@169) ($generated@@50 $generated@@5 ($generated@@9 $generated@@194))) 0)) (let (($generated@@195 ($generated@@42 $generated@@169)))
(forall (($generated@@196 T@U) ) (!  (=> (> ($generated@@63 ($generated@@28 ($generated@@29 $generated@@30) $generated@@169) ($generated@@50 $generated@@5 $generated@@196)) 0) (<= $generated@@195 ($generated@@10 $generated@@196)))
 :pattern ( ($generated@@63 ($generated@@28 ($generated@@29 $generated@@30) $generated@@169) ($generated@@50 $generated@@5 $generated@@196)))
)))) (and (= $generated@@171 $generated@@175) ($generated@@53 $generated@@169 $generated@@26 $generated@@175)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not ($generated@@39 ($generated@@28 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@169) $generated@@40))) (=> (and (not ($generated@@39 ($generated@@28 ($generated@@29 $generated@@30) $generated@@169) $generated@@40)) ($generated@@41 $generated@@169)) (=> (and (and (= ($generated@@36 $generated@@169) ($generated@@42 $generated@@169)) ($generated@@41 $generated@@169)) (and ($generated@@32 $generated@@5 ($generated@@9 ($generated@@36 $generated@@169)) $generated) (= (ControlFlow 0 4) 2))) $generated@@187))))))))))
(let (($generated@@197  (=> (= $generated@@177 ($generated@@99 $generated@@178 $generated@@171 $generated@@2 false)) (=> (and ($generated@@53 $generated@@169 $generated@@26 $generated@@171) ($generated@@68 $generated@@169)) (=> (and (and ($generated@@38 $generated@@169) ($generated@@53 $generated@@169 $generated@@26 $generated@@171)) (and ($generated@@24 $generated@@169) (not ($generated@@39 ($generated@@21 $generated@@169) $generated@@40)))) (and (=> (= (ControlFlow 0 19) 15) $generated@@186) (=> (= (ControlFlow 0 19) 4) $generated@@192)))))))
(let (($generated@@198  (=> (and (and (and ($generated@@174 $generated@@171) ($generated@@176 $generated@@171)) ($generated@@25 $generated@@169 $generated@@26)) (and (= 2 $generated@@20) (= (ControlFlow 0 20) 19))) $generated@@197)))
$generated@@198)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
