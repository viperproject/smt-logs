(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@T T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (Int T@U T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@50 (Int) Int)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@55 () Int)
(declare-fun $generated@@56 (T@U T@U Int) T@U)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 (T@U Int) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@U) Int)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@107 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T T@T) T@T)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@162 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@6 $generated@@23) 3))
(assert (forall (($generated@@26 Int) ($generated@@27 T@U) ($generated@@28 T@U) ) (! (= ($generated@@22 $generated@@23 ($generated@@24 $generated@@26 $generated@@27 $generated@@28) $generated@@25)  (and (and ($generated@@22 $generated@@8 ($generated@@12 $generated@@26) $generated) ($generated@@22 $generated@@23 $generated@@27 $generated@@25)) ($generated@@22 $generated@@23 $generated@@28 $generated@@25)))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@24 $generated@@26 $generated@@27 $generated@@28) $generated@@25))
)))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (forall (($generated@@31 Int) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@30 ($generated@@24 $generated@@31 $generated@@32 $generated@@33)) $generated@@4)
 :pattern ( ($generated@@24 $generated@@31 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 Int) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@34 ($generated@@24 $generated@@35 $generated@@36 $generated@@37)) $generated@@35)
 :pattern ( ($generated@@24 $generated@@35 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@39 Int) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@38 ($generated@@24 $generated@@39 $generated@@40 $generated@@41)) $generated@@40)
 :pattern ( ($generated@@24 $generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 Int) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@42 ($generated@@24 $generated@@43 $generated@@44 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@24 $generated@@43 $generated@@44 $generated@@45))
)))
(assert (= ($generated@@30 $generated@@46) $generated@@3))
(assert ($generated@@22 $generated@@23 $generated@@46 $generated@@25))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@49) (= $generated@@48 $generated@@49))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 Int) ) (! (= ($generated@@50 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@52 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@54 $generated@@53))
)))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 Int) ) (!  (=> (or ($generated@@58 ($generated@@52 $generated@@23 $generated@@61) ($generated@@50 $generated@@62)) (and (< 1 $generated@@55) ($generated@@22 $generated@@23 $generated@@61 $generated@@25))) (and (and ($generated@@59 ($generated@@52 $generated@@23 $generated@@61)) (=> (not ($generated@@47 $generated@@61 $generated@@46)) (and (=> ($generated@@11 ($generated@@52 $generated@@7 ($generated@@10 (< $generated@@62 ($generated@@34 ($generated@@52 $generated@@23 $generated@@61)))))) ($generated@@58 ($generated@@52 $generated@@23 ($generated@@42 ($generated@@52 $generated@@23 $generated@@61))) ($generated@@50 ($generated@@34 ($generated@@52 $generated@@23 $generated@@61))))) (=> (not ($generated@@11 ($generated@@52 $generated@@7 ($generated@@10 (< $generated@@62 ($generated@@34 ($generated@@52 $generated@@23 $generated@@61))))))) ($generated@@58 ($generated@@52 $generated@@23 ($generated@@42 ($generated@@52 $generated@@23 $generated@@61))) ($generated@@50 $generated@@62)))))) (= ($generated@@56 ($generated@@57 $generated@@60) ($generated@@52 $generated@@23 $generated@@61) ($generated@@50 $generated@@62)) (ite ($generated@@47 $generated@@61 $generated@@46) ($generated@@24 ($generated@@50 $generated@@62) ($generated@@52 $generated@@23 $generated@@46) ($generated@@52 $generated@@23 $generated@@46)) (ite (< $generated@@62 ($generated@@34 ($generated@@52 $generated@@23 $generated@@61))) ($generated@@24 ($generated@@50 $generated@@62) ($generated@@52 $generated@@23 ($generated@@56 ($generated@@57 $generated@@60) ($generated@@52 $generated@@23 ($generated@@42 ($generated@@52 $generated@@23 $generated@@61))) ($generated@@50 ($generated@@34 ($generated@@52 $generated@@23 $generated@@61))))) ($generated@@52 $generated@@23 ($generated@@38 ($generated@@52 $generated@@23 $generated@@61)))) ($generated@@24 ($generated@@50 ($generated@@34 ($generated@@52 $generated@@23 $generated@@61))) ($generated@@52 $generated@@23 ($generated@@56 ($generated@@57 $generated@@60) ($generated@@52 $generated@@23 ($generated@@42 ($generated@@52 $generated@@23 $generated@@61))) ($generated@@50 $generated@@62))) ($generated@@52 $generated@@23 ($generated@@38 ($generated@@52 $generated@@23 $generated@@61)))))))))
 :weight 3
 :pattern ( ($generated@@56 ($generated@@57 $generated@@60) ($generated@@52 $generated@@23 $generated@@61) ($generated@@50 $generated@@62)))
))))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@30 $generated@@64) $generated@@3))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@30 $generated@@66) $generated@@4))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 ($generated@@67 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@67 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@65 $generated@@71) (exists (($generated@@72 Int) ($generated@@73 T@U) ($generated@@74 T@U) ) (= $generated@@71 ($generated@@24 $generated@@72 $generated@@73 $generated@@74))))
 :pattern ( ($generated@@65 $generated@@71))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@63 $generated@@75) (= $generated@@75 $generated@@46))
 :pattern ( ($generated@@63 $generated@@75))
)))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 Int) ) (!  (=> (or ($generated@@58 $generated@@77 $generated@@78) (and (< 1 $generated@@55) ($generated@@22 $generated@@23 $generated@@77 $generated@@25))) ($generated@@22 $generated@@23 ($generated@@56 $generated@@76 $generated@@77 $generated@@78) $generated@@25))
 :pattern ( ($generated@@56 $generated@@76 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and ($generated@@65 $generated@@79) ($generated@@65 $generated@@80)) (= ($generated@@47 $generated@@79 $generated@@80)  (and (and (= ($generated@@34 $generated@@79) ($generated@@34 $generated@@80)) ($generated@@47 ($generated@@38 $generated@@79) ($generated@@38 $generated@@80))) ($generated@@47 ($generated@@42 $generated@@79) ($generated@@42 $generated@@80)))))
 :pattern ( ($generated@@47 $generated@@79 $generated@@80) ($generated@@65 $generated@@79))
 :pattern ( ($generated@@47 $generated@@79 $generated@@80) ($generated@@65 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 Int) ) (! (= ($generated@@56 ($generated@@57 $generated@@81) $generated@@82 $generated@@83) ($generated@@56 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@56 ($generated@@57 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@59 $generated@@84) (or ($generated@@63 $generated@@84) ($generated@@65 $generated@@84)))
 :pattern ( ($generated@@59 $generated@@84))
)))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 Int) ) (!  (=> (or ($generated@@58 $generated@@86 $generated@@87) (and (< 1 $generated@@55) ($generated@@22 $generated@@23 $generated@@86 $generated@@25))) (and (and ($generated@@59 $generated@@86) (=> (not ($generated@@47 $generated@@86 $generated@@46)) (and (=> (< $generated@@87 ($generated@@34 $generated@@86)) ($generated@@58 ($generated@@42 $generated@@86) ($generated@@34 $generated@@86))) (=> (<= ($generated@@34 $generated@@86) $generated@@87) ($generated@@58 ($generated@@42 $generated@@86) $generated@@87))))) (= ($generated@@56 ($generated@@57 $generated@@85) $generated@@86 $generated@@87) (ite ($generated@@47 $generated@@86 $generated@@46) ($generated@@24 $generated@@87 ($generated@@52 $generated@@23 $generated@@46) ($generated@@52 $generated@@23 $generated@@46)) (ite (< $generated@@87 ($generated@@34 $generated@@86)) ($generated@@24 $generated@@87 ($generated@@56 $generated@@85 ($generated@@42 $generated@@86) ($generated@@34 $generated@@86)) ($generated@@38 $generated@@86)) ($generated@@24 ($generated@@34 $generated@@86) ($generated@@56 $generated@@85 ($generated@@42 $generated@@86) $generated@@87) ($generated@@38 $generated@@86)))))))
 :pattern ( ($generated@@56 ($generated@@57 $generated@@85) $generated@@86 $generated@@87))
))))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@22 $generated@@23 $generated@@88 $generated@@25) (or ($generated@@63 $generated@@88) ($generated@@65 $generated@@88)))
 :pattern ( ($generated@@65 $generated@@88) ($generated@@22 $generated@@23 $generated@@88 $generated@@25))
 :pattern ( ($generated@@63 $generated@@88) ($generated@@22 $generated@@23 $generated@@88 $generated@@25))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and ($generated@@63 $generated@@89) ($generated@@63 $generated@@90)) ($generated@@47 $generated@@89 $generated@@90))
 :pattern ( ($generated@@47 $generated@@89 $generated@@90) ($generated@@63 $generated@@89))
 :pattern ( ($generated@@47 $generated@@89 $generated@@90) ($generated@@63 $generated@@90))
)))
(assert (forall (($generated@@91 Int) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@24 ($generated@@50 $generated@@91) ($generated@@52 $generated@@23 $generated@@92) ($generated@@52 $generated@@23 $generated@@93)) ($generated@@52 $generated@@23 ($generated@@24 $generated@@91 $generated@@92 $generated@@93)))
 :pattern ( ($generated@@24 ($generated@@50 $generated@@91) ($generated@@52 $generated@@23 $generated@@92) ($generated@@52 $generated@@23 $generated@@93)))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@67 $generated@@95 ($generated@@68 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@68 $generated@@95 $generated@@94))
)))
(assert (forall (($generated@@97 Int) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (< ($generated@@96 $generated@@98) ($generated@@96 ($generated@@24 $generated@@97 $generated@@98 $generated@@99)))
 :pattern ( ($generated@@24 $generated@@97 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 Int) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (< ($generated@@96 $generated@@102) ($generated@@96 ($generated@@24 $generated@@100 $generated@@101 $generated@@102)))
 :pattern ( ($generated@@24 $generated@@100 $generated@@101 $generated@@102))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@103 $generated@@114 $generated@@115 $generated@@116 ($generated@@110 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@119 $generated@@120) $generated@@117)
 :weight 0
)) (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@103 $generated@@121 $generated@@122 $generated@@123 ($generated@@110 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@103 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@103 $generated@@130 $generated@@131 $generated@@132 ($generated@@110 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)))) (= ($generated@@6 $generated@@104) 4)) (= ($generated@@6 $generated@@105) 5)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@107 $generated@@139 $generated@@140 ($generated@@111 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@143) $generated@@141)
 :weight 0
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@148 $generated@@149) (= ($generated@@107 $generated@@144 $generated@@145 ($generated@@111 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@107 $generated@@144 $generated@@145 $generated@@147 $generated@@149)))
 :weight 0
))) (= ($generated@@6 $generated@@108) 6)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (= ($generated@@6 ($generated@@109 $generated@@150 $generated@@151)) 7))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@112 ($generated@@109 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@109 $generated@@152 $generated@@153))
))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@113 ($generated@@109 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@109 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Bool) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@11 ($generated@@103 $generated@@104 $generated@@105 $generated@@7 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@11 ($generated@@67 $generated@@7 ($generated@@107 $generated@@105 $generated@@108 ($generated@@107 $generated@@104 ($generated@@109 $generated@@105 $generated@@108) $generated@@157 $generated@@160) $generated@@158)))) $generated@@159))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105 $generated@@7 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@163 $generated@@165) (and ($generated@@65 $generated@@164) ($generated@@162 $generated@@23 $generated@@164 $generated@@25 $generated@@165))) ($generated@@162 $generated@@8 ($generated@@12 ($generated@@34 $generated@@164)) $generated $generated@@165))
 :pattern ( ($generated@@162 $generated@@8 ($generated@@12 ($generated@@34 $generated@@164)) $generated $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@163 $generated@@167) ($generated@@22 $generated@@23 $generated@@166 $generated@@25)) ($generated@@162 $generated@@23 $generated@@166 $generated@@25 $generated@@167))
 :pattern ( ($generated@@162 $generated@@23 $generated@@166 $generated@@25 $generated@@167))
)))
(assert (= ($generated@@29 $generated@@25) $generated@@2))
(assert (= ($generated@@168 $generated@@25) $generated@@5))
(assert (= $generated@@46 ($generated@@52 $generated@@23 $generated@@46)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and ($generated@@163 $generated@@170) (and ($generated@@65 $generated@@169) ($generated@@162 $generated@@23 $generated@@169 $generated@@25 $generated@@170))) ($generated@@162 $generated@@23 ($generated@@38 $generated@@169) $generated@@25 $generated@@170))
 :pattern ( ($generated@@162 $generated@@23 ($generated@@38 $generated@@169) $generated@@25 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and ($generated@@163 $generated@@172) (and ($generated@@65 $generated@@171) ($generated@@162 $generated@@23 $generated@@171 $generated@@25 $generated@@172))) ($generated@@162 $generated@@23 ($generated@@42 $generated@@171) $generated@@25 $generated@@172))
 :pattern ( ($generated@@162 $generated@@23 ($generated@@42 $generated@@171) $generated@@25 $generated@@172))
)))
(assert (forall (($generated@@173 Int) ) (! (= ($generated@@68 $generated@@8 ($generated@@12 ($generated@@50 $generated@@173))) ($generated@@52 $generated@@108 ($generated@@68 $generated@@8 ($generated@@12 $generated@@173))))
 :pattern ( ($generated@@68 $generated@@8 ($generated@@12 ($generated@@50 $generated@@173))))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@68 $generated@@175 ($generated@@52 $generated@@175 $generated@@174)) ($generated@@52 $generated@@108 ($generated@@68 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@68 $generated@@175 ($generated@@52 $generated@@175 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! ($generated@@162 $generated@@8 $generated@@177 $generated $generated@@176)
 :pattern ( ($generated@@162 $generated@@8 $generated@@177 $generated $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! ($generated@@22 $generated@@8 $generated@@178 $generated)
 :pattern ( ($generated@@22 $generated@@8 $generated@@178 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@188  (=> (<= ($generated@@34 $generated@@179) $generated@@180) (and (=> (= (ControlFlow 0 10) (- 0 14)) ($generated@@65 $generated@@179)) (=> ($generated@@65 $generated@@179) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@65 $generated@@179)) (=> ($generated@@65 $generated@@179) (=> (= $generated@@181 ($generated@@42 $generated@@179)) (=> (and ($generated@@162 $generated@@23 $generated@@181 $generated@@25 $generated@@182) ($generated@@162 $generated@@8 ($generated@@12 $generated@@180) $generated $generated@@182)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (or (<= 0 $generated@@180) (< ($generated@@96 $generated@@181) ($generated@@96 $generated@@179))) (= $generated@@180 $generated@@180))) (=> (or (or (<= 0 $generated@@180) (< ($generated@@96 $generated@@181) ($generated@@96 $generated@@179))) (= $generated@@180 $generated@@180)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (< ($generated@@96 $generated@@181) ($generated@@96 $generated@@179)) (and (= ($generated@@96 $generated@@181) ($generated@@96 $generated@@179)) (< $generated@@180 $generated@@180)))) (=> (or (< ($generated@@96 $generated@@181) ($generated@@96 $generated@@179)) (and (= ($generated@@96 $generated@@181) ($generated@@96 $generated@@179)) (< $generated@@180 $generated@@180))) (=> (and ($generated@@58 ($generated@@42 $generated@@179) $generated@@180) (= (ControlFlow 0 10) (- 0 9))) ($generated@@65 $generated@@179)))))))))))))))
(let (($generated@@189  (=> (< $generated@@180 ($generated@@34 $generated@@179)) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@65 $generated@@179)) (=> ($generated@@65 $generated@@179) (=> (and (= $generated@@183 ($generated@@42 $generated@@179)) ($generated@@162 $generated@@23 $generated@@183 $generated@@25 $generated@@182)) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@65 $generated@@179)) (=> ($generated@@65 $generated@@179) (=> (and (= $generated@@184 ($generated@@34 $generated@@179)) ($generated@@162 $generated@@8 ($generated@@12 $generated@@184) $generated $generated@@182)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (or (<= 0 $generated@@180) (< ($generated@@96 $generated@@183) ($generated@@96 $generated@@179))) (= $generated@@184 $generated@@180))) (=> (or (or (<= 0 $generated@@180) (< ($generated@@96 $generated@@183) ($generated@@96 $generated@@179))) (= $generated@@184 $generated@@180)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (< ($generated@@96 $generated@@183) ($generated@@96 $generated@@179)) (and (= ($generated@@96 $generated@@183) ($generated@@96 $generated@@179)) (< $generated@@184 $generated@@180)))) (=> (or (< ($generated@@96 $generated@@183) ($generated@@96 $generated@@179)) (and (= ($generated@@96 $generated@@183) ($generated@@96 $generated@@179)) (< $generated@@184 $generated@@180))) (=> (and ($generated@@58 ($generated@@42 $generated@@179) ($generated@@34 $generated@@179)) (= (ControlFlow 0 4) (- 0 3))) ($generated@@65 $generated@@179)))))))))))))))
(let (($generated@@190  (=> (not ($generated@@47 $generated@@179 $generated@@46)) (and (=> (= (ControlFlow 0 15) (- 0 16)) ($generated@@65 $generated@@179)) (=> ($generated@@65 $generated@@179) (and (=> (= (ControlFlow 0 15) 4) $generated@@189) (=> (= (ControlFlow 0 15) 10) $generated@@188)))))))
(let (($generated@@191 true))
(let (($generated@@192 true))
(let (($generated@@193  (=> (= $generated@@185 ($generated@@106 $generated@@186 $generated@@182 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 17) 1) $generated@@192) (=> (= (ControlFlow 0 17) 2) $generated@@191)) (=> (= (ControlFlow 0 17) 15) $generated@@190)))))
(let (($generated@@194  (=> (and (and (and ($generated@@163 $generated@@182) ($generated@@187 $generated@@182)) ($generated@@22 $generated@@23 $generated@@179 $generated@@25)) (and (= 1 $generated@@55) (= (ControlFlow 0 18) 17))) $generated@@193)))
$generated@@194))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
