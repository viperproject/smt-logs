(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U T@U) Bool)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@52 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@63 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@69 (T@T T@U T@U) Bool)
(declare-fun $generated@@71 () Int)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@102 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@T T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) Bool)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@126 (T@U T@U T@U) Bool)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Int)
(declare-fun $generated@@166 (T@U) Int)
(declare-fun $generated@@179 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 () T@T)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (! (= ($generated@@24 $generated@@26 ($generated@@25 $generated@@27) $generated@@28) ($generated@@24 $generated@@26 $generated@@27 $generated@@28))
 :pattern ( ($generated@@24 $generated@@26 ($generated@@25 $generated@@27) $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@30 ($generated@@29 $generated@@31 $generated@@32) $generated@@32)
 :pattern ( ($generated@@29 $generated@@31 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@30 $generated@@33 $generated@@35) ($generated@@30 ($generated@@29 $generated@@33 $generated@@34) $generated@@35))
 :pattern ( ($generated@@29 $generated@@33 $generated@@34) ($generated@@30 $generated@@33 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> ($generated@@30 $generated@@37 $generated@@39) ($generated@@30 ($generated@@36 $generated@@37 $generated@@38) $generated@@39))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38) ($generated@@30 $generated@@37 $generated@@39))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> ($generated@@30 $generated@@41 $generated@@42) ($generated@@30 ($generated@@36 $generated@@40 $generated@@41) $generated@@42))
 :pattern ( ($generated@@36 $generated@@40 $generated@@41) ($generated@@30 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@30 ($generated@@29 $generated@@43 $generated@@44) $generated@@45)  (or (= $generated@@45 $generated@@44) ($generated@@30 $generated@@43 $generated@@45)))
 :pattern ( ($generated@@30 ($generated@@29 $generated@@43 $generated@@44) $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> ($generated@@30 $generated@@48 $generated@@49) (not ($generated@@30 ($generated@@46 $generated@@47 $generated@@48) $generated@@49)))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48) ($generated@@30 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (!  (not ($generated@@30 $generated@@50 $generated@@51))
 :pattern ( ($generated@@30 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@52 $generated@@53 ($generated@@25 $generated@@54) $generated@@55) ($generated@@52 $generated@@53 $generated@@54 $generated@@55))
 :pattern ( ($generated@@52 $generated@@53 ($generated@@25 $generated@@54) $generated@@55))
)))
(assert (= ($generated@@56 $generated@@57) $generated@@4))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@36 ($generated@@36 $generated@@58 $generated@@59) $generated@@59) ($generated@@36 $generated@@58 $generated@@59))
 :pattern ( ($generated@@36 ($generated@@36 $generated@@58 $generated@@59) $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@30 ($generated@@46 $generated@@60 $generated@@61) $generated@@62)  (and ($generated@@30 $generated@@60 $generated@@62) (not ($generated@@30 $generated@@61 $generated@@62))))
 :pattern ( ($generated@@30 ($generated@@46 $generated@@60 $generated@@61) $generated@@62))
)))
(assert (= ($generated@@7 $generated@@64) 3))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@66 $generated@@68) ($generated@@63 $generated@@64 $generated@@57 ($generated@@65 $generated@@67) $generated@@68))
 :pattern ( ($generated@@63 $generated@@64 $generated@@57 ($generated@@65 $generated@@67) $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! ($generated@@69 $generated@@64 $generated@@57 ($generated@@65 $generated@@70))
 :pattern ( ($generated@@69 $generated@@64 $generated@@57 ($generated@@65 $generated@@70)))
)))
(assert  (=> (<= 1 $generated@@71) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (or ($generated@@72 $generated@@76 $generated@@78) (and (< 1 $generated@@71) ($generated@@69 $generated@@64 $generated@@78 ($generated@@65 $generated@@76)))) (and (=> (not ($generated@@73 $generated@@78)) (let (($generated@@79 ($generated@@74 $generated@@78)))
($generated@@72 $generated@@76 $generated@@79))) (= ($generated@@52 $generated@@76 ($generated@@25 $generated@@77) $generated@@78) (ite ($generated@@73 $generated@@78) $generated@@50 (let (($generated@@80 ($generated@@74 $generated@@78)))
(let (($generated@@81 ($generated@@75 $generated@@78)))
($generated@@36 ($generated@@29 $generated@@50 $generated@@81) ($generated@@52 $generated@@76 $generated@@77 $generated@@80))))))))
 :pattern ( ($generated@@52 $generated@@76 ($generated@@25 $generated@@77) $generated@@78))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@69 $generated@@64 ($generated@@85 $generated@@88 $generated@@89) ($generated@@65 $generated@@87))  (and ($generated@@86 $generated@@88 $generated@@87) ($generated@@69 $generated@@64 $generated@@89 ($generated@@65 $generated@@87))))
 :pattern ( ($generated@@69 $generated@@64 ($generated@@85 $generated@@88 $generated@@89) ($generated@@65 $generated@@87)))
)))
(assert  (=> (<= 2 $generated@@71) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (or ($generated@@90 $generated@@92 $generated@@94) (and (< 2 $generated@@71) ($generated@@69 $generated@@64 $generated@@94 ($generated@@65 $generated@@92)))) (and (=> (not ($generated@@73 $generated@@94)) (let (($generated@@95 ($generated@@74 $generated@@94)))
(let (($generated@@96 ($generated@@75 $generated@@94)))
 (and ($generated@@72 $generated@@92 $generated@@95) (=> (not ($generated@@30 ($generated@@52 $generated@@92 ($generated@@25 $generated@@91) $generated@@95) $generated@@96)) ($generated@@90 $generated@@92 $generated@@95)))))) (= ($generated@@24 $generated@@92 ($generated@@25 $generated@@93) $generated@@94) (ite ($generated@@73 $generated@@94) true (let (($generated@@97 ($generated@@74 $generated@@94)))
(let (($generated@@98 ($generated@@75 $generated@@94)))
 (and (not ($generated@@30 ($generated@@52 $generated@@92 ($generated@@25 $generated@@91) $generated@@97) $generated@@98)) ($generated@@24 $generated@@92 $generated@@93 $generated@@97))))))))
 :pattern ( ($generated@@24 $generated@@92 ($generated@@25 $generated@@93) $generated@@94))
))))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@73 $generated@@99) (= ($generated@@56 $generated@@99) $generated@@4))
 :pattern ( ($generated@@73 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@100 $generated@@101) (= ($generated@@56 $generated@@101) $generated@@5))
 :pattern ( ($generated@@100 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@103 $generated@@105 ($generated@@102 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@102 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@106 $generated@@107 $generated@@108) (forall (($generated@@109 T@U) ) (!  (or (not ($generated@@30 $generated@@107 $generated@@109)) (not ($generated@@30 $generated@@108 $generated@@109)))
 :pattern ( ($generated@@30 $generated@@107 $generated@@109))
 :pattern ( ($generated@@30 $generated@@108 $generated@@109))
)))
 :pattern ( ($generated@@106 $generated@@107 $generated@@108))
)))
(assert (= ($generated@@7 $generated@@110) 4))
(assert  (=> (<= 1 $generated@@71) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@72 $generated@@111 ($generated@@82 $generated@@64 $generated@@113)) (and (< 1 $generated@@71) ($generated@@69 $generated@@64 $generated@@113 ($generated@@65 $generated@@111)))) (and (=> (not ($generated@@12 ($generated@@82 $generated@@8 ($generated@@11 ($generated@@73 ($generated@@82 $generated@@64 $generated@@113)))))) (let (($generated@@114 ($generated@@82 $generated@@64 ($generated@@74 ($generated@@82 $generated@@64 $generated@@113)))))
($generated@@72 $generated@@111 $generated@@114))) (= ($generated@@52 $generated@@111 ($generated@@25 $generated@@112) ($generated@@82 $generated@@64 $generated@@113)) (ite ($generated@@73 ($generated@@82 $generated@@64 $generated@@113)) $generated@@50 (let (($generated@@115 ($generated@@82 $generated@@64 ($generated@@74 ($generated@@82 $generated@@64 $generated@@113)))))
(let (($generated@@116 ($generated@@82 $generated@@110 ($generated@@75 ($generated@@82 $generated@@64 $generated@@113)))))
($generated@@36 ($generated@@29 $generated@@50 $generated@@116) ($generated@@52 $generated@@111 ($generated@@25 $generated@@112) $generated@@115))))))))
 :weight 3
 :pattern ( ($generated@@52 $generated@@111 ($generated@@25 $generated@@112) ($generated@@82 $generated@@64 $generated@@113)))
))))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@100 $generated@@117) (exists (($generated@@118 T@U) ($generated@@119 T@U) ) (= $generated@@117 ($generated@@85 $generated@@118 $generated@@119))))
 :pattern ( ($generated@@100 $generated@@117))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@73 $generated@@120) (= $generated@@120 $generated@@57))
 :pattern ( ($generated@@73 $generated@@120))
)))
(assert (= ($generated@@7 $generated@@121) 5))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@69 $generated@@121 $generated@@123 ($generated@@122 $generated@@124)) (forall (($generated@@125 T@U) ) (!  (=> ($generated@@30 $generated@@123 $generated@@125) ($generated@@86 $generated@@125 $generated@@124))
 :pattern ( ($generated@@30 $generated@@123 $generated@@125))
)))
 :pattern ( ($generated@@69 $generated@@121 $generated@@123 ($generated@@122 $generated@@124)))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@126 ($generated@@103 $generated@@130 $generated@@127) $generated@@128 $generated@@129) ($generated@@63 $generated@@130 $generated@@127 $generated@@128 $generated@@129))
 :pattern ( ($generated@@126 ($generated@@103 $generated@@130 $generated@@127) $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@132 T@U) ) (!  (and (= ($generated@@23 ($generated@@65 $generated@@132)) $generated@@3) (= ($generated@@131 ($generated@@65 $generated@@132)) $generated@@6))
 :pattern ( ($generated@@65 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@30 ($generated@@36 $generated@@133 $generated@@134) $generated@@135)  (or ($generated@@30 $generated@@133 $generated@@135) ($generated@@30 $generated@@134 $generated@@135)))
 :pattern ( ($generated@@30 ($generated@@36 $generated@@133 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> ($generated@@106 $generated@@136 $generated@@137) (and (= ($generated@@46 ($generated@@36 $generated@@136 $generated@@137) $generated@@136) $generated@@137) (= ($generated@@46 ($generated@@36 $generated@@136 $generated@@137) $generated@@137) $generated@@136)))
 :pattern ( ($generated@@36 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@69 $generated@@64 $generated@@139 ($generated@@65 $generated@@138)) (or ($generated@@73 $generated@@139) ($generated@@100 $generated@@139)))
 :pattern ( ($generated@@100 $generated@@139) ($generated@@69 $generated@@64 $generated@@139 ($generated@@65 $generated@@138)))
 :pattern ( ($generated@@73 $generated@@139) ($generated@@69 $generated@@64 $generated@@139 ($generated@@65 $generated@@138)))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@86 $generated@@140 $generated) (and (= ($generated@@103 $generated@@8 ($generated@@102 $generated@@8 $generated@@140)) $generated@@140) ($generated@@69 $generated@@8 ($generated@@102 $generated@@8 $generated@@140) $generated)))
 :pattern ( ($generated@@86 $generated@@140 $generated))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@86 ($generated@@103 $generated@@143 $generated@@141) $generated@@142) ($generated@@69 $generated@@143 $generated@@141 $generated@@142))
 :pattern ( ($generated@@86 ($generated@@103 $generated@@143 $generated@@141) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@63 $generated@@121 $generated@@144 ($generated@@122 $generated@@145) $generated@@146) (forall (($generated@@147 T@U) ) (!  (=> ($generated@@30 $generated@@144 $generated@@147) ($generated@@126 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@30 $generated@@144 $generated@@147))
)))
 :pattern ( ($generated@@63 $generated@@121 $generated@@144 ($generated@@122 $generated@@145) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@56 ($generated@@85 $generated@@148 $generated@@149)) $generated@@5)
 :pattern ( ($generated@@85 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@75 ($generated@@85 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@85 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@74 ($generated@@85 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@85 $generated@@152 $generated@@153))
)))
(assert  (=> (<= 1 $generated@@71) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (or ($generated@@72 $generated@@155 $generated@@157) (and (< 1 $generated@@71) (and ($generated@@69 $generated@@64 $generated@@157 ($generated@@65 $generated@@155)) ($generated@@63 $generated@@64 $generated@@157 ($generated@@65 $generated@@155) $generated@@154)))) ($generated@@66 $generated@@154)) ($generated@@63 $generated@@121 ($generated@@52 $generated@@155 $generated@@156 $generated@@157) ($generated@@122 $generated@@155) $generated@@154))
 :pattern ( ($generated@@63 $generated@@121 ($generated@@52 $generated@@155 $generated@@156 $generated@@157) ($generated@@122 $generated@@155) $generated@@154))
))))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@122 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@122 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@23 ($generated@@122 $generated@@160)) $generated@@1)
 :pattern ( ($generated@@122 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@161 ($generated@@65 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@65 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@102 $generated@@164 ($generated@@103 $generated@@164 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@103 $generated@@164 $generated@@163))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (< ($generated@@165 $generated@@167) ($generated@@166 ($generated@@85 $generated@@167 $generated@@168)))
 :pattern ( ($generated@@85 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (< ($generated@@166 $generated@@170) ($generated@@166 ($generated@@85 $generated@@169 $generated@@170)))
 :pattern ( ($generated@@85 $generated@@169 $generated@@170))
)))
(assert  (=> (<= 1 $generated@@71) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (or ($generated@@72 $generated@@171 $generated@@173) (and (< 1 $generated@@71) ($generated@@69 $generated@@64 $generated@@173 ($generated@@65 $generated@@171)))) ($generated@@69 $generated@@121 ($generated@@52 $generated@@171 $generated@@172 $generated@@173) ($generated@@122 $generated@@171)))
 :pattern ( ($generated@@52 $generated@@171 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@36 $generated@@174 ($generated@@36 $generated@@174 $generated@@175)) ($generated@@36 $generated@@174 $generated@@175))
 :pattern ( ($generated@@36 $generated@@174 ($generated@@36 $generated@@174 $generated@@175)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@66 $generated@@178) (and ($generated@@100 $generated@@176) ($generated@@63 $generated@@64 $generated@@176 ($generated@@65 $generated@@177) $generated@@178))) ($generated@@126 ($generated@@75 $generated@@176) $generated@@177 $generated@@178))
 :pattern ( ($generated@@126 ($generated@@75 $generated@@176) $generated@@177 $generated@@178))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@179 $generated@@189 $generated@@190 $generated@@191 ($generated@@185 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@194 $generated@@195) $generated@@192)
 :weight 0
)) (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@179 $generated@@196 $generated@@197 $generated@@198 ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@179 $generated@@205 $generated@@206 $generated@@207 ($generated@@185 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@179 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (= ($generated@@7 $generated@@180) 6)) (= ($generated@@7 $generated@@181) 7)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (= ($generated@@183 $generated@@214 $generated@@215 ($generated@@186 $generated@@214 $generated@@215 $generated@@217 $generated@@218 $generated@@216) $generated@@218) $generated@@216)
 :weight 0
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@223 $generated@@224) (= ($generated@@183 $generated@@219 $generated@@220 ($generated@@186 $generated@@219 $generated@@220 $generated@@222 $generated@@223 $generated@@221) $generated@@224) ($generated@@183 $generated@@219 $generated@@220 $generated@@222 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@7 ($generated@@184 $generated@@225 $generated@@226)) 8))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@187 ($generated@@184 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@184 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@188 ($generated@@184 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@184 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (= ($generated@@12 ($generated@@179 $generated@@180 $generated@@181 $generated@@8 ($generated@@182 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (or (not (= $generated@@235 $generated@@231)) (not true)) ($generated@@12 ($generated@@102 $generated@@8 ($generated@@183 $generated@@181 $generated@@110 ($generated@@183 $generated@@180 ($generated@@184 $generated@@181 $generated@@110) $generated@@232 $generated@@235) $generated@@233)))) $generated@@234))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181 $generated@@8 ($generated@@182 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (! (= ($generated@@165 ($generated@@103 $generated@@64 $generated@@237)) ($generated@@166 $generated@@237))
 :pattern ( ($generated@@165 ($generated@@103 $generated@@64 $generated@@237)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> ($generated@@86 $generated@@238 ($generated@@122 $generated@@239)) (and (= ($generated@@103 $generated@@121 ($generated@@102 $generated@@121 $generated@@238)) $generated@@238) ($generated@@69 $generated@@121 ($generated@@102 $generated@@121 $generated@@238) ($generated@@122 $generated@@239))))
 :pattern ( ($generated@@86 $generated@@238 ($generated@@122 $generated@@239)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> ($generated@@86 $generated@@241 ($generated@@65 $generated@@240)) (and (= ($generated@@103 $generated@@64 ($generated@@102 $generated@@64 $generated@@241)) $generated@@241) ($generated@@69 $generated@@64 ($generated@@102 $generated@@64 $generated@@241) ($generated@@65 $generated@@240))))
 :pattern ( ($generated@@86 $generated@@241 ($generated@@65 $generated@@240)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and ($generated@@66 $generated@@244) (and ($generated@@100 $generated@@242) ($generated@@63 $generated@@64 $generated@@242 ($generated@@65 $generated@@243) $generated@@244))) ($generated@@63 $generated@@64 ($generated@@74 $generated@@242) ($generated@@65 $generated@@243) $generated@@244))
 :pattern ( ($generated@@63 $generated@@64 ($generated@@74 $generated@@242) ($generated@@65 $generated@@243) $generated@@244))
)))
(assert (= $generated@@57 ($generated@@82 $generated@@64 $generated@@57)))
(assert  (=> (<= 2 $generated@@71) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (or ($generated@@90 $generated@@245 ($generated@@82 $generated@@64 $generated@@247)) (and (< 2 $generated@@71) ($generated@@69 $generated@@64 $generated@@247 ($generated@@65 $generated@@245)))) (and (=> (not ($generated@@12 ($generated@@82 $generated@@8 ($generated@@11 ($generated@@73 ($generated@@82 $generated@@64 $generated@@247)))))) (let (($generated@@248 ($generated@@82 $generated@@64 ($generated@@74 ($generated@@82 $generated@@64 $generated@@247)))))
(let (($generated@@249 ($generated@@82 $generated@@110 ($generated@@75 ($generated@@82 $generated@@64 $generated@@247)))))
 (and ($generated@@72 $generated@@245 $generated@@248) (=> (not ($generated@@30 ($generated@@52 $generated@@245 ($generated@@25 $generated@@91) $generated@@248) $generated@@249)) ($generated@@90 $generated@@245 $generated@@248)))))) (= ($generated@@24 $generated@@245 ($generated@@25 $generated@@246) ($generated@@82 $generated@@64 $generated@@247)) (ite ($generated@@73 ($generated@@82 $generated@@64 $generated@@247)) true (let (($generated@@250 ($generated@@82 $generated@@64 ($generated@@74 ($generated@@82 $generated@@64 $generated@@247)))))
(let (($generated@@251 ($generated@@82 $generated@@110 ($generated@@75 ($generated@@82 $generated@@64 $generated@@247)))))
 (and (not ($generated@@30 ($generated@@82 $generated@@121 ($generated@@52 $generated@@245 ($generated@@25 $generated@@91) $generated@@250)) $generated@@251)) ($generated@@24 $generated@@245 ($generated@@25 $generated@@246) $generated@@250))))))))
 :weight 3
 :pattern ( ($generated@@24 $generated@@245 ($generated@@25 $generated@@246) ($generated@@82 $generated@@64 $generated@@247)))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= ($generated@@85 ($generated@@82 $generated@@110 $generated@@252) ($generated@@82 $generated@@64 $generated@@253)) ($generated@@82 $generated@@64 ($generated@@85 $generated@@252 $generated@@253)))
 :pattern ( ($generated@@85 ($generated@@82 $generated@@110 $generated@@252) ($generated@@82 $generated@@64 $generated@@253)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@T) ) (! (= ($generated@@103 $generated@@255 ($generated@@82 $generated@@255 $generated@@254)) ($generated@@82 $generated@@110 ($generated@@103 $generated@@255 $generated@@254)))
 :pattern ( ($generated@@103 $generated@@255 ($generated@@82 $generated@@255 $generated@@254)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! ($generated@@63 $generated@@8 $generated@@257 $generated $generated@@256)
 :pattern ( ($generated@@63 $generated@@8 $generated@@257 $generated $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> ($generated@@66 $generated@@261) (= ($generated@@63 $generated@@64 ($generated@@85 $generated@@259 $generated@@260) ($generated@@65 $generated@@258) $generated@@261)  (and ($generated@@126 $generated@@259 $generated@@258 $generated@@261) ($generated@@63 $generated@@64 $generated@@260 ($generated@@65 $generated@@258) $generated@@261))))
 :pattern ( ($generated@@63 $generated@@64 ($generated@@85 $generated@@259 $generated@@260) ($generated@@65 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (! ($generated@@69 $generated@@8 $generated@@262 $generated)
 :pattern ( ($generated@@69 $generated@@8 $generated@@262 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@275 true))
(let (($generated@@276  (=> (and ($generated@@30 ($generated@@52 $generated@@263 ($generated@@25 $generated@@91) $generated@@264) $generated@@265) (= (ControlFlow 0 7) 4)) $generated@@275)))
(let (($generated@@277  (=> (and (not ($generated@@30 ($generated@@52 $generated@@263 ($generated@@25 $generated@@91) $generated@@264) $generated@@265)) ($generated@@63 $generated@@64 $generated@@264 ($generated@@65 $generated@@263) $generated@@266)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@166 $generated@@264) ($generated@@166 $generated@@267))) (=> (< ($generated@@166 $generated@@264) ($generated@@166 $generated@@267)) (=> (and ($generated@@90 $generated@@263 $generated@@264) (= (ControlFlow 0 5) 4)) $generated@@275))))))
(let (($generated@@278  (=> (= $generated@@267 ($generated@@85 $generated@@268 $generated@@269)) (=> (and ($generated@@86 $generated@@268 $generated@@263) ($generated@@69 $generated@@64 $generated@@269 ($generated@@65 $generated@@263))) (=> (and (and (and (= $generated@@270 $generated@@269) ($generated@@69 $generated@@64 $generated@@270 ($generated@@65 $generated@@263))) (and (= $generated@@264 $generated@@270) (= $generated@@271 $generated@@268))) (and (and ($generated@@86 $generated@@271 $generated@@263) (= $generated@@265 $generated@@271)) (and ($generated@@63 $generated@@64 $generated@@264 ($generated@@65 $generated@@263) $generated@@266) ($generated@@72 $generated@@263 $generated@@264)))) (and (=> (= (ControlFlow 0 8) 5) $generated@@277) (=> (= (ControlFlow 0 8) 7) $generated@@276)))))))
(let (($generated@@279 true))
(let (($generated@@280  (=> (or (not (= $generated@@267 $generated@@57)) (not true)) (and (=> (= (ControlFlow 0 9) 8) $generated@@278) (=> (= (ControlFlow 0 9) 3) $generated@@279)))))
(let (($generated@@281 true))
(let (($generated@@282 true))
(let (($generated@@283  (=> (= $generated@@272 ($generated@@182 $generated@@273 $generated@@266 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@282) (=> (= (ControlFlow 0 10) 2) $generated@@281)) (=> (= (ControlFlow 0 10) 9) $generated@@280)))))
(let (($generated@@284  (=> (and (and (and ($generated@@66 $generated@@266) ($generated@@274 $generated@@266)) ($generated@@69 $generated@@64 $generated@@267 ($generated@@65 $generated@@263))) (and (= 2 $generated@@71) (= (ControlFlow 0 11) 10))) $generated@@283)))
$generated@@284)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
