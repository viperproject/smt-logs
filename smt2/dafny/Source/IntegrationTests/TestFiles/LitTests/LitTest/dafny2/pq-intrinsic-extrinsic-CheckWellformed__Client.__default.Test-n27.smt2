(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@T T@U T@U) Bool)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 () Bool)
(declare-fun $generated@@39 () Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Int)
(declare-fun $generated@@49 (T@U) Int)
(declare-fun $generated@@52 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@61 (T@U T@U) T@U)
(declare-fun $generated@@64 (T@U T@U Int) T@U)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@101 (T@U Int) Bool)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@110 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@T T@T) T@T)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@116 (T@T) T@T)
(declare-fun $generated@@170 () Bool)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@3 $generated@@21) 3))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> ($generated@@20 $generated@@21 $generated@@24 ($generated@@22 $generated@@25)) ($generated@@23 $generated@@24))
 :pattern ( ($generated@@20 $generated@@21 $generated@@24 ($generated@@22 $generated@@25)))
)))
(assert ($generated@@26 $generated@@27 $generated@@28))
(assert (forall (($generated@@31 T@U) ) (!  (=> ($generated@@30 $generated@@31) ($generated@@29 $generated@@27 $generated@@28 $generated@@31))
 :pattern ( ($generated@@29 $generated@@27 $generated@@28 $generated@@31))
)))
(assert (forall (($generated@@33 Int) ) (! (= ($generated@@32 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@T) ) (! (= ($generated@@34 $generated@@36 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@36 $generated@@35))
)))
(assert  (=> (<= 0 $generated@@37) (=> (or $generated@@38 (< 0 $generated@@37)) (= ($generated@@32 $generated@@39) ($generated@@32 3)))))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 ($generated@@40 $generated@@43 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@40 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (or (not (= $generated@@47 $generated@@48)) (not true)) (= ($generated@@45 $generated@@46 $generated@@48) ($generated@@45 ($generated@@44 $generated@@46 $generated@@47) $generated@@48)))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@45 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@49 ($generated@@44 $generated@@50 $generated@@51)) (+ ($generated@@49 $generated@@50) 1))
 :pattern ( ($generated@@49 ($generated@@44 $generated@@50 $generated@@51)))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@29 ($generated@@41 $generated@@56 $generated@@53) $generated@@54 $generated@@55) ($generated@@52 $generated@@56 $generated@@53 $generated@@54 $generated@@55))
 :pattern ( ($generated@@29 ($generated@@41 $generated@@56 $generated@@53) $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (or ($generated@@58 $generated@@60) ($generated@@26 $generated@@60 $generated@@28)) ($generated@@20 $generated@@21 ($generated@@57 $generated@@59 $generated@@60) ($generated@@22 $generated)))
 :pattern ( ($generated@@57 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@49 ($generated@@61 $generated@@62 $generated@@63)) (+ ($generated@@49 $generated@@62) ($generated@@49 $generated@@63)))
 :pattern ( ($generated@@49 ($generated@@61 $generated@@62 $generated@@63)))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 Int) ) (! (= ($generated@@64 ($generated@@65 $generated@@66) $generated@@67 $generated@@68) ($generated@@64 $generated@@66 $generated@@67 $generated@@68))
 :pattern ( ($generated@@64 ($generated@@65 $generated@@66) $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@69 $generated@@70 $generated@@71) (= $generated@@70 $generated@@71))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@20 $generated@@21 $generated@@72 ($generated@@22 $generated@@73)) (forall (($generated@@74 T@U) ) (!  (=> (< 0 ($generated@@45 $generated@@72 $generated@@74)) ($generated@@26 $generated@@74 $generated@@73))
 :pattern ( ($generated@@45 $generated@@72 $generated@@74))
)))
 :pattern ( ($generated@@20 $generated@@21 $generated@@72 ($generated@@22 $generated@@73)))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@26 $generated@@75 $generated) (and (= ($generated@@41 $generated@@5 ($generated@@40 $generated@@5 $generated@@75)) $generated@@75) ($generated@@20 $generated@@5 ($generated@@40 $generated@@5 $generated@@75) $generated)))
 :pattern ( ($generated@@26 $generated@@75 $generated))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@76 ($generated@@65 $generated@@77) $generated@@78) ($generated@@76 $generated@@77 $generated@@78))
 :pattern ( ($generated@@76 ($generated@@65 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@26 ($generated@@41 $generated@@81 $generated@@79) $generated@@80) ($generated@@20 $generated@@81 $generated@@79 $generated@@80))
 :pattern ( ($generated@@26 ($generated@@41 $generated@@81 $generated@@79) $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@23 $generated@@82) (forall (($generated@@83 T@U) ) (!  (and (<= 0 ($generated@@45 $generated@@82 $generated@@83)) (<= ($generated@@45 $generated@@82 $generated@@83) ($generated@@49 $generated@@82)))
 :pattern ( ($generated@@45 $generated@@82 $generated@@83))
)))
 :pattern ( ($generated@@23 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (! (<= 0 ($generated@@49 $generated@@84))
 :pattern ( ($generated@@49 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@45 $generated@@85 $generated@@86) 0)
 :pattern ( ($generated@@45 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@45 ($generated@@44 $generated@@87 $generated@@88) $generated@@88) (+ ($generated@@45 $generated@@87 $generated@@88) 1))
 :pattern ( ($generated@@44 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@89 ($generated@@22 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@22 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@19 ($generated@@22 $generated@@91)) $generated@@1)
 :pattern ( ($generated@@22 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@40 $generated@@93 ($generated@@41 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@41 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@57 ($generated@@65 $generated@@94) $generated@@95) ($generated@@57 $generated@@94 $generated@@95))
 :pattern ( ($generated@@57 ($generated@@65 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= (= ($generated@@49 $generated@@96) 0) (= $generated@@96 $generated@@85)) (=> (or (not (= ($generated@@49 $generated@@96) 0)) (not true)) (exists (($generated@@97 T@U) ) (! (< 0 ($generated@@45 $generated@@96 $generated@@97))
 :pattern ( ($generated@@45 $generated@@96 $generated@@97))
))))
 :pattern ( ($generated@@49 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@45 ($generated@@61 $generated@@98 $generated@@99) $generated@@100) (+ ($generated@@45 $generated@@98 $generated@@100) ($generated@@45 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@45 ($generated@@61 $generated@@98 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 Int) ) (!  (=> (and (or ($generated@@101 $generated@@104 $generated@@105) (and ($generated@@26 $generated@@104 $generated@@28) ($generated@@29 $generated@@104 $generated@@28 $generated@@102))) ($generated@@30 $generated@@102)) ($generated@@29 ($generated@@64 $generated@@103 $generated@@104 $generated@@105) $generated@@28 $generated@@102))
 :pattern ( ($generated@@29 ($generated@@64 $generated@@103 $generated@@104 $generated@@105) $generated@@28 $generated@@102))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@106 $generated@@117 $generated@@118 $generated@@119 ($generated@@113 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@122 $generated@@123) $generated@@120)
 :weight 0
)) (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@106 $generated@@124 $generated@@125 $generated@@126 ($generated@@113 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@106 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@106 $generated@@133 $generated@@134 $generated@@135 ($generated@@113 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)))) (= ($generated@@3 $generated@@107) 4)) (= ($generated@@3 $generated@@108) 5)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@110 $generated@@142 $generated@@143 ($generated@@114 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@144) $generated@@146) $generated@@144)
 :weight 0
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@151 $generated@@152) (= ($generated@@110 $generated@@147 $generated@@148 ($generated@@114 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@152) ($generated@@110 $generated@@147 $generated@@148 $generated@@150 $generated@@152)))
 :weight 0
))) (= ($generated@@3 $generated@@111) 6)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (= ($generated@@3 ($generated@@112 $generated@@153 $generated@@154)) 7))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@115 ($generated@@112 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@112 $generated@@155 $generated@@156))
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@116 ($generated@@112 $generated@@157 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@112 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@8 ($generated@@106 $generated@@107 $generated@@108 $generated@@4 ($generated@@109 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))  (=> (and (or (not (= $generated@@163 $generated@@159)) (not true)) ($generated@@8 ($generated@@40 $generated@@4 ($generated@@110 $generated@@108 $generated@@111 ($generated@@110 $generated@@107 ($generated@@112 $generated@@108 $generated@@111) $generated@@160 $generated@@163) $generated@@161)))) $generated@@162))
 :pattern ( ($generated@@106 $generated@@107 $generated@@108 $generated@@4 ($generated@@109 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Int) ) (!  (=> (or ($generated@@101 $generated@@166 $generated@@167) ($generated@@26 $generated@@166 $generated@@28)) ($generated@@26 ($generated@@64 $generated@@165 $generated@@166 $generated@@167) $generated@@28))
 :pattern ( ($generated@@64 $generated@@165 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@26 $generated@@168 ($generated@@22 $generated@@169)) (and (= ($generated@@41 $generated@@21 ($generated@@40 $generated@@21 $generated@@168)) $generated@@168) ($generated@@20 $generated@@21 ($generated@@40 $generated@@21 $generated@@168) ($generated@@22 $generated@@169))))
 :pattern ( ($generated@@26 $generated@@168 ($generated@@22 $generated@@169)))
)))
(assert  (=> (<= 0 $generated@@37) (=> (or $generated@@38 (< 0 $generated@@37)) (and (and $generated@@170 (let (($generated@@174 $generated@@27))
 (and ($generated@@101 $generated@@174 ($generated@@32 4)) (let (($generated@@175 ($generated@@64 ($generated@@65 $generated@@171) $generated@@174 ($generated@@32 4))))
 (and ($generated@@101 $generated@@175 ($generated@@32 3)) (let (($generated@@176 ($generated@@64 ($generated@@65 $generated@@171) $generated@@175 ($generated@@32 3))))
($generated@@172 $generated@@176))))))) (= $generated@@39 (let (($generated@@177 $generated@@27))
(let (($generated@@178 ($generated@@64 ($generated@@65 $generated@@171) $generated@@177 ($generated@@32 4))))
(let (($generated@@179 ($generated@@64 ($generated@@65 $generated@@171) $generated@@178 ($generated@@32 3))))
(let (($generated@@180 ($generated@@173 $generated@@179)))
$generated@@180)))))))))
(assert  (=> (<= 0 $generated@@37) (=> (or $generated@@38 (< 0 $generated@@37)) (and (and $generated@@170 (let (($generated@@181 $generated@@27))
 (and ($generated@@101 $generated@@181 ($generated@@32 4)) (let (($generated@@182 ($generated@@64 ($generated@@65 $generated@@171) $generated@@181 ($generated@@32 4))))
 (and ($generated@@101 $generated@@182 ($generated@@32 3)) (let (($generated@@183 ($generated@@64 ($generated@@65 $generated@@171) $generated@@182 ($generated@@32 3))))
($generated@@172 $generated@@183))))))) (= $generated@@39 (let (($generated@@184 $generated@@27))
(let (($generated@@185 ($generated@@64 ($generated@@65 $generated@@171) $generated@@184 ($generated@@32 4))))
(let (($generated@@186 ($generated@@64 ($generated@@65 $generated@@171) $generated@@185 ($generated@@32 3))))
(let (($generated@@187 ($generated@@173 $generated@@186)))
$generated@@187)))))))))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@41 $generated@@5 ($generated@@9 ($generated@@32 $generated@@188))) ($generated@@34 $generated@@111 ($generated@@41 $generated@@5 ($generated@@9 $generated@@188))))
 :pattern ( ($generated@@41 $generated@@5 ($generated@@9 ($generated@@32 $generated@@188))))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@T) ) (! (= ($generated@@41 $generated@@190 ($generated@@34 $generated@@190 $generated@@189)) ($generated@@34 $generated@@111 ($generated@@41 $generated@@190 $generated@@189)))
 :pattern ( ($generated@@41 $generated@@190 ($generated@@34 $generated@@190 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (< 0 ($generated@@45 $generated@@191 $generated@@193)) (< 0 ($generated@@45 ($generated@@44 $generated@@191 $generated@@192) $generated@@193)))
 :pattern ( ($generated@@44 $generated@@191 $generated@@192) ($generated@@45 $generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (= (< 0 ($generated@@45 ($generated@@44 $generated@@194 $generated@@195) $generated@@196))  (or (= $generated@@196 $generated@@195) (< 0 ($generated@@45 $generated@@194 $generated@@196))))
 :pattern ( ($generated@@45 ($generated@@44 $generated@@194 $generated@@195) $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@69 $generated@@197 $generated@@198) (forall (($generated@@199 T@U) ) (! (= ($generated@@45 $generated@@197 $generated@@199) ($generated@@45 $generated@@198 $generated@@199))
 :pattern ( ($generated@@45 $generated@@197 $generated@@199))
 :pattern ( ($generated@@45 $generated@@198 $generated@@199))
)))
 :pattern ( ($generated@@69 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@52 $generated@@21 $generated@@200 ($generated@@22 $generated@@201) $generated@@202) (forall (($generated@@203 T@U) ) (!  (=> (< 0 ($generated@@45 $generated@@200 $generated@@203)) ($generated@@29 $generated@@203 $generated@@201 $generated@@202))
 :pattern ( ($generated@@45 $generated@@200 $generated@@203))
)))
 :pattern ( ($generated@@52 $generated@@21 $generated@@200 ($generated@@22 $generated@@201) $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! ($generated@@52 $generated@@5 $generated@@205 $generated $generated@@204)
 :pattern ( ($generated@@52 $generated@@5 $generated@@205 $generated $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! ($generated@@20 $generated@@5 $generated@@206 $generated)
 :pattern ( ($generated@@20 $generated@@5 $generated@@206 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 (T@U) Bool)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () Int)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@228  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@32 $generated@@39) ($generated@@32 3)))))
(let (($generated@@229  (=> $generated@@170 (=> (and (and (= $generated@@207 $generated@@27) $generated@@170) (and ($generated@@26 $generated@@207 $generated@@28) (= $generated@@208 $generated@@207))) (=> (and (and (and ($generated@@29 $generated@@208 $generated@@28 $generated@@209) (= $generated@@210 ($generated@@32 4))) (and ($generated@@52 $generated@@5 ($generated@@9 $generated@@210) $generated $generated@@209) ($generated@@101 $generated@@208 ($generated@@32 4)))) (and (and (= $generated@@211 ($generated@@64 ($generated@@65 $generated@@171) $generated@@208 ($generated@@32 4))) ($generated@@101 $generated@@208 ($generated@@32 4))) (and ($generated@@26 $generated@@211 $generated@@28) (= $generated@@212 $generated@@211)))) (=> (and (and (and (and ($generated@@29 $generated@@212 $generated@@28 $generated@@209) (= $generated@@213 ($generated@@32 3))) (and ($generated@@52 $generated@@5 ($generated@@9 $generated@@213) $generated $generated@@209) ($generated@@101 $generated@@212 ($generated@@32 3)))) (and (and (= $generated@@214 ($generated@@64 ($generated@@65 $generated@@171) $generated@@212 ($generated@@32 3))) ($generated@@101 $generated@@212 ($generated@@32 3))) (and ($generated@@26 $generated@@214 $generated@@28) (= $generated@@215 $generated@@214)))) (and (and (and ($generated@@30 $generated@@216) ($generated@@217 $generated@@216)) (and $generated@@170 (let (($generated@@230 $generated@@27))
 (and ($generated@@218 $generated@@230) (=> ($generated@@76 ($generated@@65 $generated@@171) $generated@@230) ($generated@@58 $generated@@230)))))) (and (and (let (($generated@@231 $generated@@27))
($generated@@76 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@231)) (let (($generated@@232 $generated@@27))
($generated@@69 ($generated@@57 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@232) $generated@@85))) (and (= $generated@@209 $generated@@216) (= $generated@@219 ($generated@@32 4)))))) (and (=> (= (ControlFlow 0 5) (- 0 11)) ($generated@@76 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@208)) (=> ($generated@@76 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@208) (=> (and (and (and ($generated@@30 $generated@@220) ($generated@@217 $generated@@220)) (and ($generated@@101 $generated@@208 $generated@@219) (let (($generated@@233 ($generated@@64 ($generated@@65 $generated@@171) $generated@@208 $generated@@219)))
 (and ($generated@@218 $generated@@233) (=> ($generated@@76 ($generated@@65 $generated@@171) $generated@@233) (and ($generated@@58 $generated@@233) ($generated@@58 $generated@@208))))))) (and (and (let (($generated@@234 ($generated@@64 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@208 $generated@@219)))
($generated@@76 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@234)) (let (($generated@@235 ($generated@@64 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@208 $generated@@219)))
($generated@@69 ($generated@@57 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@235) ($generated@@61 ($generated@@57 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@208) ($generated@@44 $generated@@85 ($generated@@41 $generated@@5 ($generated@@9 $generated@@219))))))) (and (= $generated@@216 $generated@@220) (= $generated@@221 ($generated@@32 3))))) (and (=> (= (ControlFlow 0 5) (- 0 10)) ($generated@@76 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@212)) (=> ($generated@@76 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@212) (=> (and ($generated@@30 $generated@@222) ($generated@@217 $generated@@222)) (=> (and (and (and ($generated@@101 $generated@@212 $generated@@221) (let (($generated@@236 ($generated@@64 ($generated@@65 $generated@@171) $generated@@212 $generated@@221)))
 (and ($generated@@218 $generated@@236) (=> ($generated@@76 ($generated@@65 $generated@@171) $generated@@236) (and ($generated@@58 $generated@@236) ($generated@@58 $generated@@212)))))) (and (let (($generated@@237 ($generated@@64 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@212 $generated@@221)))
($generated@@76 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@237)) (let (($generated@@238 ($generated@@64 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@212 $generated@@221)))
($generated@@69 ($generated@@57 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@238) ($generated@@61 ($generated@@57 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@212) ($generated@@44 $generated@@85 ($generated@@41 $generated@@5 ($generated@@9 $generated@@221)))))))) (and (and (= $generated@@220 $generated@@222) ($generated@@29 $generated@@215 $generated@@28 $generated@@222)) (and ($generated@@58 $generated@@215) ($generated@@58 $generated@@215)))) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@69 ($generated@@57 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@215) ($generated@@44 ($generated@@44 $generated@@85 ($generated@@41 $generated@@5 ($generated@@9 ($generated@@32 3)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@32 4)))))) (=> ($generated@@69 ($generated@@57 ($generated@@65 $generated@@171) $generated@@215) ($generated@@44 ($generated@@44 $generated@@85 ($generated@@41 $generated@@5 ($generated@@9 ($generated@@32 3)))) ($generated@@41 $generated@@5 ($generated@@9 ($generated@@32 4))))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@76 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@215)) (=> ($generated@@76 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@215) (and (=> (= (ControlFlow 0 5) (- 0 7)) (not ($generated@@69 ($generated@@57 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@215) $generated@@85))) (=> (not ($generated@@69 ($generated@@57 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@215) $generated@@85)) (=> (and (and (and ($generated@@30 $generated@@223) ($generated@@217 $generated@@223)) (and ($generated@@172 $generated@@215) (let (($generated@@239 ($generated@@173 $generated@@215)))
 (and ($generated@@58 $generated@@215) (=> (> ($generated@@45 ($generated@@57 ($generated@@65 $generated@@171) $generated@@215) ($generated@@41 $generated@@5 ($generated@@9 $generated@@239))) 0) ($generated@@58 $generated@@215)))))) (and (and (let (($generated@@240 ($generated@@173 $generated@@215)))
(> ($generated@@45 ($generated@@57 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@215) ($generated@@41 $generated@@5 ($generated@@9 $generated@@240))) 0)) (let (($generated@@241 ($generated@@173 $generated@@215)))
(forall (($generated@@242 T@U) ) (!  (=> (> ($generated@@45 ($generated@@57 ($generated@@65 $generated@@171) $generated@@215) ($generated@@41 $generated@@5 $generated@@242)) 0) (<= $generated@@241 ($generated@@10 $generated@@242)))
 :pattern ( ($generated@@45 ($generated@@57 ($generated@@65 $generated@@171) $generated@@215) ($generated@@41 $generated@@5 $generated@@242)))
)))) (and (= $generated@@222 $generated@@223) ($generated@@29 $generated@@215 $generated@@28 $generated@@223)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not ($generated@@69 ($generated@@57 ($generated@@65 ($generated@@65 $generated@@171)) $generated@@215) $generated@@85))) (=> (not ($generated@@69 ($generated@@57 ($generated@@65 $generated@@171) $generated@@215) $generated@@85)) (=> (and (and (and ($generated@@172 $generated@@215) (= $generated@@224 ($generated@@173 $generated@@215))) (and ($generated@@172 $generated@@215) ($generated@@20 $generated@@5 ($generated@@9 $generated@@224) $generated))) (and (and (= $generated@@225 $generated@@224) (= $generated@@39 $generated@@225)) (and ($generated@@20 $generated@@5 ($generated@@9 $generated@@39) $generated) (= (ControlFlow 0 5) 4)))) $generated@@228)))))))))))))))))))))))
(let (($generated@@243  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@8 ($generated@@34 $generated@@4 ($generated@@7 true))))))
(let (($generated@@244  (=> (= $generated@@226 ($generated@@109 $generated@@227 $generated@@209 $generated@@2 false)) (and (=> (= (ControlFlow 0 12) 2) $generated@@243) (=> (= (ControlFlow 0 12) 5) $generated@@229)))))
(let (($generated@@245  (=> (and (and ($generated@@30 $generated@@209) ($generated@@217 $generated@@209)) (and (= 0 $generated@@37) (= (ControlFlow 0 13) 12))) $generated@@244)))
$generated@@245))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
