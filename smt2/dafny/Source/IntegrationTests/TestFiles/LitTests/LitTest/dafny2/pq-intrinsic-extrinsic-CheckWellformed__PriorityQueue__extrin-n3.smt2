(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Int T@U T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 (Int) Int)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) Int)
(declare-fun $generated@@98 (T@U) Int)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@109 (T@U T@U) Bool)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@133 (T@U) Int)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 (T@T T@T) T@T)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@213 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@27 Int) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26)  (and (and ($generated@@23 $generated@@9 ($generated@@13 $generated@@27) $generated) ($generated@@23 $generated@@24 $generated@@28 $generated@@26)) ($generated@@23 $generated@@24 $generated@@29 $generated@@26)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26))
)))
(assert (= ($generated@@7 $generated@@33) 4))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@32 $generated@@36) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@36 $generated@@26))) ($generated@@23 $generated@@33 ($generated@@31 $generated@@35 $generated@@36) ($generated@@34 $generated)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@36))
))))
(assert (= ($generated@@37 $generated) $generated@@0))
(assert (forall (($generated@@39 Int) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@38 ($generated@@25 $generated@@39 $generated@@40 $generated@@41)) $generated@@5)
 :pattern ( ($generated@@25 $generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 Int) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@42 ($generated@@25 $generated@@43 $generated@@44 $generated@@45)) $generated@@43)
 :pattern ( ($generated@@25 $generated@@43 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 Int) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@46 ($generated@@25 $generated@@47 $generated@@48 $generated@@49)) $generated@@48)
 :pattern ( ($generated@@25 $generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 Int) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@50 ($generated@@25 $generated@@51 $generated@@52 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@25 $generated@@51 $generated@@52 $generated@@53))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (or ($generated@@32 ($generated@@55 $generated@@24 $generated@@63)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@63 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@55 $generated@@8 ($generated@@11 ($generated@@56 ($generated@@55 $generated@@24 $generated@@63)))))) (let (($generated@@64 ($generated@@55 $generated@@24 ($generated@@50 ($generated@@55 $generated@@24 $generated@@63)))))
(let (($generated@@65 ($generated@@55 $generated@@24 ($generated@@46 ($generated@@55 $generated@@24 $generated@@63)))))
 (and ($generated@@32 $generated@@65) ($generated@@32 $generated@@64))))) (= ($generated@@31 ($generated@@54 $generated@@62) ($generated@@55 $generated@@24 $generated@@63)) (ite ($generated@@56 ($generated@@55 $generated@@24 $generated@@63)) $generated@@57 (let (($generated@@66 ($generated@@55 $generated@@24 ($generated@@50 ($generated@@55 $generated@@24 $generated@@63)))))
(let (($generated@@67 ($generated@@55 $generated@@24 ($generated@@46 ($generated@@55 $generated@@24 $generated@@63)))))
(let (($generated@@68 ($generated@@58 ($generated@@42 ($generated@@55 $generated@@24 $generated@@63)))))
($generated@@59 ($generated@@59 ($generated@@60 $generated@@57 ($generated@@61 $generated@@9 ($generated@@13 $generated@@68))) ($generated@@31 ($generated@@54 $generated@@62) $generated@@67)) ($generated@@31 ($generated@@54 $generated@@62) $generated@@66)))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@54 $generated@@62) ($generated@@55 $generated@@24 $generated@@63)))
))))
(assert (= ($generated@@38 $generated@@69) $generated@@4))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> ($generated@@23 $generated@@33 $generated@@71 ($generated@@34 $generated@@72)) ($generated@@70 $generated@@71))
 :pattern ( ($generated@@23 $generated@@33 $generated@@71 ($generated@@34 $generated@@72)))
)))
(assert ($generated@@23 $generated@@24 $generated@@69 $generated@@26))
(assert (forall (($generated@@73 Int) ) (! (= ($generated@@58 $generated@@73) $generated@@73)
 :pattern ( ($generated@@58 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@55 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@55 $generated@@75 $generated@@74))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@32 $generated@@77) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@77 $generated@@26))) (and (=> (not ($generated@@56 $generated@@77)) (let (($generated@@78 ($generated@@50 $generated@@77)))
(let (($generated@@79 ($generated@@46 $generated@@77)))
 (and ($generated@@32 $generated@@79) ($generated@@32 $generated@@78))))) (= ($generated@@31 ($generated@@54 $generated@@76) $generated@@77) (ite ($generated@@56 $generated@@77) $generated@@57 (let (($generated@@80 ($generated@@50 $generated@@77)))
(let (($generated@@81 ($generated@@46 $generated@@77)))
(let (($generated@@82 ($generated@@42 $generated@@77)))
($generated@@59 ($generated@@59 ($generated@@60 $generated@@57 ($generated@@61 $generated@@9 ($generated@@13 $generated@@82))) ($generated@@31 $generated@@76 $generated@@81)) ($generated@@31 $generated@@76 $generated@@80)))))))))
 :pattern ( ($generated@@31 ($generated@@54 $generated@@76) $generated@@77))
))))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@56 $generated@@83) (= ($generated@@38 $generated@@83) $generated@@4))
 :pattern ( ($generated@@56 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 $generated@@85) (= ($generated@@38 $generated@@85) $generated@@5))
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@61 $generated@@88 ($generated@@86 $generated@@88 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@86 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@84 $generated@@89) (exists (($generated@@90 Int) ($generated@@91 T@U) ($generated@@92 T@U) ) (= $generated@@89 ($generated@@25 $generated@@90 $generated@@91 $generated@@92))))
 :pattern ( ($generated@@84 $generated@@89))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or (not (= $generated@@95 $generated@@96)) (not true)) (= ($generated@@93 $generated@@94 $generated@@96) ($generated@@93 ($generated@@60 $generated@@94 $generated@@95) $generated@@96)))
 :pattern ( ($generated@@60 $generated@@94 $generated@@95) ($generated@@93 $generated@@94 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@56 $generated@@97) (= $generated@@97 $generated@@69))
 :pattern ( ($generated@@56 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@98 ($generated@@60 $generated@@99 $generated@@100)) (+ ($generated@@98 $generated@@99) 1))
 :pattern ( ($generated@@98 ($generated@@60 $generated@@99 $generated@@100)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@101 ($generated@@61 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@102 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@101 ($generated@@61 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@98 ($generated@@59 $generated@@107 $generated@@108)) (+ ($generated@@98 $generated@@107) ($generated@@98 $generated@@108)))
 :pattern ( ($generated@@98 ($generated@@59 $generated@@107 $generated@@108)))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@109 $generated@@110 $generated@@26) (and (= ($generated@@61 $generated@@24 ($generated@@86 $generated@@24 $generated@@110)) $generated@@110) ($generated@@23 $generated@@24 ($generated@@86 $generated@@24 $generated@@110) $generated@@26)))
 :pattern ( ($generated@@109 $generated@@110 $generated@@26))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@23 $generated@@33 $generated@@111 ($generated@@34 $generated@@112)) (forall (($generated@@113 T@U) ) (!  (=> (< 0 ($generated@@93 $generated@@111 $generated@@113)) ($generated@@109 $generated@@113 $generated@@112))
 :pattern ( ($generated@@93 $generated@@111 $generated@@113))
)))
 :pattern ( ($generated@@23 $generated@@33 $generated@@111 ($generated@@34 $generated@@112)))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@114 $generated@@26) (or ($generated@@56 $generated@@114) ($generated@@84 $generated@@114)))
 :pattern ( ($generated@@84 $generated@@114) ($generated@@23 $generated@@24 $generated@@114 $generated@@26))
 :pattern ( ($generated@@56 $generated@@114) ($generated@@23 $generated@@24 $generated@@114 $generated@@26))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@109 $generated@@115 $generated) (and (= ($generated@@61 $generated@@9 ($generated@@86 $generated@@9 $generated@@115)) $generated@@115) ($generated@@23 $generated@@9 ($generated@@86 $generated@@9 $generated@@115) $generated)))
 :pattern ( ($generated@@109 $generated@@115 $generated))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@109 ($generated@@61 $generated@@118 $generated@@116) $generated@@117) ($generated@@23 $generated@@118 $generated@@116 $generated@@117))
 :pattern ( ($generated@@109 ($generated@@61 $generated@@118 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@70 $generated@@119) (forall (($generated@@120 T@U) ) (!  (and (<= 0 ($generated@@93 $generated@@119 $generated@@120)) (<= ($generated@@93 $generated@@119 $generated@@120) ($generated@@98 $generated@@119)))
 :pattern ( ($generated@@93 $generated@@119 $generated@@120))
)))
 :pattern ( ($generated@@70 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (<= 0 ($generated@@98 $generated@@121))
 :pattern ( ($generated@@98 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@93 $generated@@57 $generated@@122) 0)
 :pattern ( ($generated@@93 $generated@@57 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@93 ($generated@@60 $generated@@123 $generated@@124) $generated@@124) (+ ($generated@@93 $generated@@123 $generated@@124) 1))
 :pattern ( ($generated@@60 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 Int) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@25 ($generated@@58 $generated@@125) ($generated@@55 $generated@@24 $generated@@126) ($generated@@55 $generated@@24 $generated@@127)) ($generated@@55 $generated@@24 ($generated@@25 $generated@@125 $generated@@126 $generated@@127)))
 :pattern ( ($generated@@25 ($generated@@58 $generated@@125) ($generated@@55 $generated@@24 $generated@@126) ($generated@@55 $generated@@24 $generated@@127)))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@34 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@34 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@37 ($generated@@34 $generated@@130)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@86 $generated@@132 ($generated@@61 $generated@@132 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@61 $generated@@132 $generated@@131))
)))
(assert (forall (($generated@@134 Int) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (< ($generated@@133 $generated@@135) ($generated@@133 ($generated@@25 $generated@@134 $generated@@135 $generated@@136)))
 :pattern ( ($generated@@25 $generated@@134 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 Int) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (< ($generated@@133 $generated@@139) ($generated@@133 ($generated@@25 $generated@@137 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@25 $generated@@137 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@31 ($generated@@54 $generated@@140) $generated@@141) ($generated@@31 $generated@@140 $generated@@141))
 :pattern ( ($generated@@31 ($generated@@54 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (!  (and (= (= ($generated@@98 $generated@@142) 0) (= $generated@@142 $generated@@57)) (=> (or (not (= ($generated@@98 $generated@@142) 0)) (not true)) (exists (($generated@@143 T@U) ) (! (< 0 ($generated@@93 $generated@@142 $generated@@143))
 :pattern ( ($generated@@93 $generated@@142 $generated@@143))
))))
 :pattern ( ($generated@@98 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@93 ($generated@@59 $generated@@144 $generated@@145) $generated@@146) (+ ($generated@@93 $generated@@144 $generated@@146) ($generated@@93 $generated@@145 $generated@@146)))
 :pattern ( ($generated@@93 ($generated@@59 $generated@@144 $generated@@145) $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@147 $generated@@158 $generated@@159 $generated@@160 ($generated@@154 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@147 $generated@@165 $generated@@166 $generated@@167 ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@147 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@147 $generated@@174 $generated@@175 $generated@@176 ($generated@@154 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@147 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))) (= ($generated@@7 $generated@@148) 5)) (= ($generated@@7 $generated@@149) 6)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@151 $generated@@183 $generated@@184 ($generated@@155 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@185) $generated@@187) $generated@@185)
 :weight 0
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@192 $generated@@193) (= ($generated@@151 $generated@@188 $generated@@189 ($generated@@155 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@190) $generated@@193) ($generated@@151 $generated@@188 $generated@@189 $generated@@191 $generated@@193)))
 :weight 0
))) (= ($generated@@7 $generated@@152) 7)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@7 ($generated@@153 $generated@@194 $generated@@195)) 8))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@156 ($generated@@153 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@153 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@157 ($generated@@153 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@153 $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@12 ($generated@@147 $generated@@148 $generated@@149 $generated@@8 ($generated@@150 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@204 $generated@@205))  (=> (and (or (not (= $generated@@204 $generated@@200)) (not true)) ($generated@@12 ($generated@@86 $generated@@8 ($generated@@151 $generated@@149 $generated@@152 ($generated@@151 $generated@@148 ($generated@@153 $generated@@149 $generated@@152) $generated@@201 $generated@@204) $generated@@202)))) $generated@@203))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149 $generated@@8 ($generated@@150 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and ($generated@@206 $generated@@208) (and ($generated@@84 $generated@@207) ($generated@@102 $generated@@24 $generated@@207 $generated@@26 $generated@@208))) ($generated@@102 $generated@@9 ($generated@@13 ($generated@@42 $generated@@207)) $generated $generated@@208))
 :pattern ( ($generated@@102 $generated@@9 ($generated@@13 ($generated@@42 $generated@@207)) $generated $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@109 $generated@@209 ($generated@@34 $generated@@210)) (and (= ($generated@@61 $generated@@33 ($generated@@86 $generated@@33 $generated@@209)) $generated@@209) ($generated@@23 $generated@@33 ($generated@@86 $generated@@33 $generated@@209) ($generated@@34 $generated@@210))))
 :pattern ( ($generated@@109 $generated@@209 ($generated@@34 $generated@@210)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and ($generated@@206 $generated@@212) ($generated@@23 $generated@@24 $generated@@211 $generated@@26)) ($generated@@102 $generated@@24 $generated@@211 $generated@@26 $generated@@212))
 :pattern ( ($generated@@102 $generated@@24 $generated@@211 $generated@@26 $generated@@212))
)))
(assert (= ($generated@@37 $generated@@26) $generated@@3))
(assert (= ($generated@@213 $generated@@26) $generated@@6))
(assert (= $generated@@69 ($generated@@55 $generated@@24 $generated@@69)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and ($generated@@206 $generated@@215) (and ($generated@@84 $generated@@214) ($generated@@102 $generated@@24 $generated@@214 $generated@@26 $generated@@215))) ($generated@@102 $generated@@24 ($generated@@46 $generated@@214) $generated@@26 $generated@@215))
 :pattern ( ($generated@@102 $generated@@24 ($generated@@46 $generated@@214) $generated@@26 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and ($generated@@206 $generated@@217) (and ($generated@@84 $generated@@216) ($generated@@102 $generated@@24 $generated@@216 $generated@@26 $generated@@217))) ($generated@@102 $generated@@24 ($generated@@50 $generated@@216) $generated@@26 $generated@@217))
 :pattern ( ($generated@@102 $generated@@24 ($generated@@50 $generated@@216) $generated@@26 $generated@@217))
)))
(assert (forall (($generated@@218 Int) ) (! (= ($generated@@61 $generated@@9 ($generated@@13 ($generated@@58 $generated@@218))) ($generated@@55 $generated@@152 ($generated@@61 $generated@@9 ($generated@@13 $generated@@218))))
 :pattern ( ($generated@@61 $generated@@9 ($generated@@13 ($generated@@58 $generated@@218))))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@T) ) (! (= ($generated@@61 $generated@@220 ($generated@@55 $generated@@220 $generated@@219)) ($generated@@55 $generated@@152 ($generated@@61 $generated@@220 $generated@@219)))
 :pattern ( ($generated@@61 $generated@@220 ($generated@@55 $generated@@220 $generated@@219)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (< 0 ($generated@@93 $generated@@221 $generated@@223)) (< 0 ($generated@@93 ($generated@@60 $generated@@221 $generated@@222) $generated@@223)))
 :pattern ( ($generated@@60 $generated@@221 $generated@@222) ($generated@@93 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (< 0 ($generated@@93 ($generated@@60 $generated@@224 $generated@@225) $generated@@226))  (or (= $generated@@226 $generated@@225) (< 0 ($generated@@93 $generated@@224 $generated@@226))))
 :pattern ( ($generated@@93 ($generated@@60 $generated@@224 $generated@@225) $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (= ($generated@@102 $generated@@33 $generated@@227 ($generated@@34 $generated@@228) $generated@@229) (forall (($generated@@230 T@U) ) (!  (=> (< 0 ($generated@@93 $generated@@227 $generated@@230)) ($generated@@101 $generated@@230 $generated@@228 $generated@@229))
 :pattern ( ($generated@@93 $generated@@227 $generated@@230))
)))
 :pattern ( ($generated@@102 $generated@@33 $generated@@227 ($generated@@34 $generated@@228) $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! ($generated@@102 $generated@@9 $generated@@232 $generated $generated@@231)
 :pattern ( ($generated@@102 $generated@@9 $generated@@232 $generated $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ) (! ($generated@@23 $generated@@9 $generated@@233 $generated)
 :pattern ( ($generated@@23 $generated@@9 $generated@@233 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () Int)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@248 true))
(let (($generated@@249  (=> (= $generated@@234 ($generated@@25 $generated@@235 $generated@@236 $generated@@237)) (=> (and (and ($generated@@23 $generated@@24 $generated@@236 $generated@@26) ($generated@@23 $generated@@24 $generated@@237 $generated@@26)) (and (= $generated@@238 $generated@@237) ($generated@@23 $generated@@24 $generated@@238 $generated@@26))) (=> (and (and (and (= $generated@@239 $generated@@238) (= $generated@@240 $generated@@236)) (and ($generated@@23 $generated@@24 $generated@@240 $generated@@26) (= $generated@@241 $generated@@240))) (and (and (= $generated@@242 $generated@@235) ($generated@@23 $generated@@9 ($generated@@13 $generated@@242) $generated)) (and (= $generated@@243 $generated@@242) ($generated@@102 $generated@@24 $generated@@241 $generated@@26 $generated@@244)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< ($generated@@133 $generated@@241) ($generated@@133 $generated@@234))) (=> (< ($generated@@133 $generated@@241) ($generated@@133 $generated@@234)) (=> ($generated@@32 $generated@@241) (=> (and ($generated@@102 $generated@@24 $generated@@239 $generated@@26 $generated@@244) (= (ControlFlow 0 4) (- 0 3))) (< ($generated@@133 $generated@@239) ($generated@@133 $generated@@234)))))))))))
(let (($generated@@250  (=> (or (not (= $generated@@234 $generated@@69)) (not true)) (and (=> (= (ControlFlow 0 7) 4) $generated@@249) (=> (= (ControlFlow 0 7) 6) $generated@@248)))))
(let (($generated@@251 true))
(let (($generated@@252 true))
(let (($generated@@253  (=> (= $generated@@245 ($generated@@150 $generated@@246 $generated@@244 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@252) (=> (= (ControlFlow 0 8) 2) $generated@@251)) (=> (= (ControlFlow 0 8) 7) $generated@@250)))))
(let (($generated@@254  (=> (and (and (and ($generated@@206 $generated@@244) ($generated@@247 $generated@@244)) ($generated@@23 $generated@@24 $generated@@234 $generated@@26)) (and (= 1 $generated@@30) (= (ControlFlow 0 9) 8))) $generated@@253)))
$generated@@254))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
