(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (Bool T@U) Bool)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@U Int) T@U)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@39 (T@U) Int)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@49 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@T T@T) T@T)
(declare-fun $generated@@60 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@82 (Int T@U) Bool)
(declare-fun $generated@@83 (Int T@U) Bool)
(declare-fun $generated@@87 (T@U Int T@U) Bool)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U Int T@U) Bool)
(declare-fun $generated@@90 () Bool)
(declare-fun $generated@@91 (T@U Int) Bool)
(declare-fun $generated@@92 (T@U Int) Bool)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@107 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@112 (T@U T@U T@U) Bool)
(declare-fun $generated@@122 (T@U T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@4) 0))
(assert (= ($generated@@28 $generated) $generated@@1))
(assert (= ($generated@@28 $generated@@0) $generated@@2))
(assert (= ($generated@@29 $generated@@4) $generated@@5))
(assert (= ($generated@@11 $generated@@34) 3))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@40 T@U) ) (!  (=> (or ($generated@@32 $generated@@40) (and (< 0 $generated@@30) ($generated@@33 $generated@@34 $generated@@40 ($generated@@35 $generated@@0)))) (= ($generated@@31 true $generated@@40) (forall (($generated@@41 Int) ($generated@@42 Int) ) (!  (=> (and (and (<= ($generated@@38 0) $generated@@41) (< $generated@@41 $generated@@42)) (< $generated@@42 ($generated@@39 $generated@@40))) (< ($generated@@18 ($generated@@36 $generated@@13 ($generated@@37 $generated@@40 $generated@@41))) ($generated@@18 ($generated@@36 $generated@@13 ($generated@@37 $generated@@40 $generated@@42)))))
 :pattern ( ($generated@@36 $generated@@13 ($generated@@37 $generated@@40 $generated@@42)) ($generated@@36 $generated@@13 ($generated@@37 $generated@@40 $generated@@41)))
))))
 :pattern ( ($generated@@31 true $generated@@40))
))))
(assert (= ($generated@@39 $generated@@43) 0))
(assert (= ($generated@@11 $generated@@44) 4))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@33 $generated@@44 $generated@@48 $generated@@45)  (or (= $generated@@48 $generated@@46) (= ($generated@@47 $generated@@48) $generated@@45)))
 :pattern ( ($generated@@33 $generated@@44 $generated@@48 $generated@@45))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@49 $generated@@44 $generated@@51 $generated@@50 $generated@@52) ($generated@@49 $generated@@44 $generated@@51 $generated@@45 $generated@@52))
 :pattern ( ($generated@@49 $generated@@44 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@49 $generated@@44 $generated@@51 $generated@@45 $generated@@52))
)))
(assert (= ($generated@@27 $generated@@53) 0))
(assert (= ($generated@@54 $generated@@8 $generated@@10) $generated@@53))
(assert ($generated@@55 $generated@@53))
(assert  (and (and (and (and (and (and (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@56 $generated@@63 $generated@@64 ($generated@@60 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@67) $generated@@65)
 :weight 0
)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (or (= $generated@@72 $generated@@73) (= ($generated@@56 $generated@@68 $generated@@69 ($generated@@60 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@73) ($generated@@56 $generated@@68 $generated@@69 $generated@@71 $generated@@73)))
 :weight 0
))) (= ($generated@@11 $generated@@57) 5)) (= ($generated@@11 $generated@@58) 6)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (= ($generated@@11 ($generated@@59 $generated@@74 $generated@@75)) 7))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@61 ($generated@@59 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@59 $generated@@76 $generated@@77))
))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@62 ($generated@@59 $generated@@78 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@59 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@49 $generated@@44 $generated@@80 $generated@@45 $generated@@81)  (or (= $generated@@80 $generated@@46) ($generated@@16 ($generated@@36 $generated@@12 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@81 $generated@@80) $generated@@4)))))
 :pattern ( ($generated@@49 $generated@@44 $generated@@80 $generated@@45 $generated@@81))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@84 Int) ($generated@@85 T@U) ) (!  (=> (or ($generated@@83 $generated@@84 $generated@@85) (and (< 0 $generated@@30) ($generated@@33 $generated@@34 $generated@@85 ($generated@@35 $generated@@0)))) (= ($generated@@82 $generated@@84 $generated@@85) (forall (($generated@@86 Int) ) (!  (=> (and (<= ($generated@@38 0) $generated@@86) (< $generated@@86 ($generated@@39 $generated@@85))) (< $generated@@84 ($generated@@18 ($generated@@36 $generated@@13 ($generated@@37 $generated@@85 $generated@@86)))))
 :pattern ( ($generated@@36 $generated@@13 ($generated@@37 $generated@@85 $generated@@86)))
))))
 :pattern ( ($generated@@82 $generated@@84 $generated@@85))
))))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@93 T@U) ($generated@@94 Int) ($generated@@95 T@U) ) (!  (=> (or ($generated@@89 ($generated@@88 $generated@@34 $generated@@93) ($generated@@38 $generated@@94) ($generated@@88 $generated@@34 $generated@@95)) (and (< 1 $generated@@30) (and ($generated@@33 $generated@@34 $generated@@93 ($generated@@35 $generated@@0)) ($generated@@33 $generated@@34 $generated@@95 ($generated@@35 $generated@@0))))) (and (and ($generated@@32 ($generated@@88 $generated@@34 $generated@@93)) (=> ($generated@@31 $generated@@90 ($generated@@88 $generated@@34 $generated@@93)) (and ($generated@@32 ($generated@@88 $generated@@34 $generated@@95)) (=> ($generated@@31 $generated@@90 ($generated@@88 $generated@@34 $generated@@95)) (and ($generated@@91 ($generated@@88 $generated@@34 $generated@@93) ($generated@@38 $generated@@94)) (=> ($generated@@16 ($generated@@88 $generated@@12 ($generated@@15 ($generated@@92 ($generated@@88 $generated@@34 $generated@@93) ($generated@@38 $generated@@94))))) ($generated@@83 ($generated@@38 $generated@@94) ($generated@@88 $generated@@34 $generated@@95)))))))) (= ($generated@@87 ($generated@@88 $generated@@34 $generated@@93) ($generated@@38 $generated@@94) ($generated@@88 $generated@@34 $generated@@95))  (and (and (and ($generated@@31 $generated@@90 ($generated@@88 $generated@@34 $generated@@93)) ($generated@@31 $generated@@90 ($generated@@88 $generated@@34 $generated@@95))) ($generated@@92 ($generated@@88 $generated@@34 $generated@@93) ($generated@@38 $generated@@94))) ($generated@@82 ($generated@@38 $generated@@94) ($generated@@88 $generated@@34 $generated@@95))))))
 :weight 3
 :pattern ( ($generated@@87 ($generated@@88 $generated@@34 $generated@@93) ($generated@@38 $generated@@94) ($generated@@88 $generated@@34 $generated@@95)))
))))
(assert (forall (($generated@@96 Int) ) (! (= ($generated@@38 $generated@@96) $generated@@96)
 :pattern ( ($generated@@38 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@88 $generated@@98 $generated@@97) $generated@@97)
 :pattern ( ($generated@@88 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@99 $generated@@101 ($generated@@36 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@36 $generated@@101 $generated@@100))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@102 T@U) ) (!  (=> (or ($generated@@32 ($generated@@88 $generated@@34 $generated@@102)) (and (< 0 $generated@@30) ($generated@@33 $generated@@34 $generated@@102 ($generated@@35 $generated@@0)))) (= ($generated@@31 true ($generated@@88 $generated@@34 $generated@@102)) (forall (($generated@@103 Int) ($generated@@104 Int) ) (!  (=> (and (and (<= ($generated@@38 0) $generated@@103) (< $generated@@103 $generated@@104)) (< $generated@@104 ($generated@@39 ($generated@@88 $generated@@34 $generated@@102)))) (< ($generated@@18 ($generated@@36 $generated@@13 ($generated@@37 ($generated@@88 $generated@@34 $generated@@102) $generated@@103))) ($generated@@18 ($generated@@36 $generated@@13 ($generated@@37 ($generated@@88 $generated@@34 $generated@@102) $generated@@104)))))
 :pattern ( ($generated@@36 $generated@@13 ($generated@@37 $generated@@102 $generated@@104)) ($generated@@36 $generated@@13 ($generated@@37 $generated@@102 $generated@@103)))
))))
 :weight 3
 :pattern ( ($generated@@31 true ($generated@@88 $generated@@34 $generated@@102)))
))))
(assert  (=> (<= 2 $generated@@30) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 Int) ($generated@@111 T@U) ) (!  (=> (or ($generated@@107 $generated@@108 $generated@@109 $generated@@110 $generated@@111) (and (< 2 $generated@@30) (and (and ($generated@@106 $generated@@108) ($generated@@33 $generated@@44 $generated@@109 $generated@@45)) ($generated@@33 $generated@@44 $generated@@111 $generated@@45)))) (and ($generated@@89 (ite (= $generated@@109 $generated@@46) $generated@@43 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@108 $generated@@109) $generated@@53))) $generated@@110 (ite (= $generated@@111 $generated@@46) $generated@@43 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@108 $generated@@111) $generated@@53)))) (= ($generated@@105 $generated@@108 $generated@@109 $generated@@110 $generated@@111) ($generated@@87 (ite (= $generated@@109 $generated@@46) $generated@@43 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@108 $generated@@109) $generated@@53))) $generated@@110 (ite (= $generated@@111 $generated@@46) $generated@@43 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@108 $generated@@111) $generated@@53)))))))
 :pattern ( ($generated@@105 $generated@@108 $generated@@109 $generated@@110 $generated@@111) ($generated@@106 $generated@@108))
))))
(assert ($generated@@55 $generated@@4))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@112 ($generated@@99 $generated@@116 $generated@@113) $generated@@114 $generated@@115) ($generated@@49 $generated@@116 $generated@@113 $generated@@114 $generated@@115))
 :pattern ( ($generated@@112 ($generated@@99 $generated@@116 $generated@@113) $generated@@114 $generated@@115))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@117 T@U) ($generated@@118 Int) ) (!  (=> (or ($generated@@91 ($generated@@88 $generated@@34 $generated@@117) ($generated@@38 $generated@@118)) (and (< 0 $generated@@30) ($generated@@33 $generated@@34 $generated@@117 ($generated@@35 $generated@@0)))) (= ($generated@@92 ($generated@@88 $generated@@34 $generated@@117) ($generated@@38 $generated@@118)) (forall (($generated@@119 Int) ) (!  (=> (and (<= ($generated@@38 0) $generated@@119) (< $generated@@119 ($generated@@39 ($generated@@88 $generated@@34 $generated@@117)))) (< ($generated@@18 ($generated@@36 $generated@@13 ($generated@@37 ($generated@@88 $generated@@34 $generated@@117) $generated@@119))) $generated@@118))
 :pattern ( ($generated@@36 $generated@@13 ($generated@@37 $generated@@117 $generated@@119)))
))))
 :weight 3
 :pattern ( ($generated@@92 ($generated@@88 $generated@@34 $generated@@117) ($generated@@38 $generated@@118)))
))))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (and (and ($generated@@106 $generated@@120) (and (or (not (= $generated@@121 $generated@@46)) (not true)) (= ($generated@@47 $generated@@121) $generated@@45))) ($generated@@16 ($generated@@36 $generated@@12 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@120 $generated@@121) $generated@@4)))) ($generated@@49 $generated@@34 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@120 $generated@@121) $generated@@53)) ($generated@@35 $generated@@0) $generated@@120))
 :pattern ( ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@120 $generated@@121) $generated@@53)))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@122 $generated@@123 $generated@@50) (and (= ($generated@@99 $generated@@44 ($generated@@36 $generated@@44 $generated@@123)) $generated@@123) ($generated@@33 $generated@@44 ($generated@@36 $generated@@44 $generated@@123) $generated@@50)))
 :pattern ( ($generated@@122 $generated@@123 $generated@@50))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@122 $generated@@124 $generated@@45) (and (= ($generated@@99 $generated@@44 ($generated@@36 $generated@@44 $generated@@124)) $generated@@124) ($generated@@33 $generated@@44 ($generated@@36 $generated@@44 $generated@@124) $generated@@45)))
 :pattern ( ($generated@@122 $generated@@124 $generated@@45))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@33 $generated@@44 $generated@@125 $generated@@50)  (and ($generated@@33 $generated@@44 $generated@@125 $generated@@45) (or (not (= $generated@@125 $generated@@46)) (not true))))
 :pattern ( ($generated@@33 $generated@@44 $generated@@125 $generated@@50))
 :pattern ( ($generated@@33 $generated@@44 $generated@@125 $generated@@45))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (and (= ($generated@@126 ($generated@@54 $generated@@127 $generated@@128)) $generated@@127) (= ($generated@@29 ($generated@@54 $generated@@127 $generated@@128)) $generated@@128))
 :pattern ( ($generated@@54 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@122 $generated@@129 $generated@@0) (and (= ($generated@@99 $generated@@13 ($generated@@36 $generated@@13 $generated@@129)) $generated@@129) ($generated@@33 $generated@@13 ($generated@@36 $generated@@13 $generated@@129) $generated@@0)))
 :pattern ( ($generated@@122 $generated@@129 $generated@@0))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@122 $generated@@130 $generated) (and (= ($generated@@99 $generated@@12 ($generated@@36 $generated@@12 $generated@@130)) $generated@@130) ($generated@@33 $generated@@12 ($generated@@36 $generated@@12 $generated@@130) $generated)))
 :pattern ( ($generated@@122 $generated@@130 $generated))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@122 ($generated@@99 $generated@@133 $generated@@131) $generated@@132) ($generated@@33 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@122 ($generated@@99 $generated@@133 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (<= 0 ($generated@@39 $generated@@134))
 :pattern ( ($generated@@39 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@49 $generated@@34 $generated@@135 ($generated@@35 $generated@@136) $generated@@137) (forall (($generated@@138 Int) ) (!  (=> (and (<= 0 $generated@@138) (< $generated@@138 ($generated@@39 $generated@@135))) ($generated@@112 ($generated@@37 $generated@@135 $generated@@138) $generated@@136 $generated@@137))
 :pattern ( ($generated@@37 $generated@@135 $generated@@138))
)))
 :pattern ( ($generated@@49 $generated@@34 $generated@@135 ($generated@@35 $generated@@136) $generated@@137))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@35 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@35 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@28 ($generated@@35 $generated@@141)) $generated@@3)
 :pattern ( ($generated@@35 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@36 $generated@@143 ($generated@@99 $generated@@143 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@99 $generated@@143 $generated@@142))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@144 T@U) ($generated@@145 Int) ) (!  (=> (or ($generated@@91 $generated@@144 $generated@@145) (and (< 0 $generated@@30) ($generated@@33 $generated@@34 $generated@@144 ($generated@@35 $generated@@0)))) (= ($generated@@92 $generated@@144 $generated@@145) (forall (($generated@@146 Int) ) (!  (=> (and (<= ($generated@@38 0) $generated@@146) (< $generated@@146 ($generated@@39 $generated@@144))) (< ($generated@@18 ($generated@@36 $generated@@13 ($generated@@37 $generated@@144 $generated@@146))) $generated@@145))
 :pattern ( ($generated@@36 $generated@@13 ($generated@@37 $generated@@144 $generated@@146)))
))))
 :pattern ( ($generated@@92 $generated@@144 $generated@@145))
))))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 T@U) ) (!  (=> (or ($generated@@89 $generated@@147 $generated@@148 $generated@@149) (and (< 1 $generated@@30) (and ($generated@@33 $generated@@34 $generated@@147 ($generated@@35 $generated@@0)) ($generated@@33 $generated@@34 $generated@@149 ($generated@@35 $generated@@0))))) (and (and ($generated@@32 $generated@@147) (=> ($generated@@31 $generated@@90 $generated@@147) (and ($generated@@32 $generated@@149) (=> ($generated@@31 $generated@@90 $generated@@149) (and ($generated@@91 $generated@@147 $generated@@148) (=> ($generated@@92 $generated@@147 $generated@@148) ($generated@@83 $generated@@148 $generated@@149))))))) (= ($generated@@87 $generated@@147 $generated@@148 $generated@@149)  (and (and (and ($generated@@31 $generated@@90 $generated@@147) ($generated@@31 $generated@@90 $generated@@149)) ($generated@@92 $generated@@147 $generated@@148)) ($generated@@82 $generated@@148 $generated@@149)))))
 :pattern ( ($generated@@87 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@122 $generated@@150 ($generated@@35 $generated@@151)) (and (= ($generated@@99 $generated@@34 ($generated@@36 $generated@@34 $generated@@150)) $generated@@150) ($generated@@33 $generated@@34 ($generated@@36 $generated@@34 $generated@@150) ($generated@@35 $generated@@151))))
 :pattern ( ($generated@@122 $generated@@150 ($generated@@35 $generated@@151)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and ($generated@@106 $generated@@152) (and (or (not (= $generated@@153 $generated@@46)) (not true)) (= ($generated@@47 $generated@@153) $generated@@45))) ($generated@@33 $generated@@34 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@152 $generated@@153) $generated@@53)) ($generated@@35 $generated@@0)))
 :pattern ( ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@152 $generated@@153) $generated@@53)))
)))
(assert (= ($generated@@28 $generated@@50) $generated@@6))
(assert (= ($generated@@154 $generated@@50) $generated@@9))
(assert (= ($generated@@28 $generated@@45) $generated@@7))
(assert (= ($generated@@154 $generated@@45) $generated@@9))
(assert  (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@155 $generated@@158 $generated@@159 $generated@@160 ($generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@155 $generated@@165 $generated@@166 $generated@@167 ($generated@@157 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@155 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@155 $generated@@174 $generated@@175 $generated@@176 ($generated@@157 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@155 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@16 ($generated@@155 $generated@@44 $generated@@57 $generated@@12 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))  (=> (and (or (not (= $generated@@188 $generated@@183)) (not true)) ($generated@@16 ($generated@@36 $generated@@12 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@184 $generated@@188) $generated@@185)))) (or (= $generated@@188 $generated@@186) (= $generated@@188 $generated@@187))))
 :pattern ( ($generated@@155 $generated@@44 $generated@@57 $generated@@12 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 Int) ) (! (= ($generated@@99 $generated@@13 ($generated@@17 ($generated@@38 $generated@@190))) ($generated@@88 $generated@@58 ($generated@@99 $generated@@13 ($generated@@17 $generated@@190))))
 :pattern ( ($generated@@99 $generated@@13 ($generated@@17 ($generated@@38 $generated@@190))))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@T) ) (! (= ($generated@@99 $generated@@192 ($generated@@88 $generated@@192 $generated@@191)) ($generated@@88 $generated@@58 ($generated@@99 $generated@@192 $generated@@191)))
 :pattern ( ($generated@@99 $generated@@192 ($generated@@88 $generated@@192 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ) (!  (=> (= ($generated@@39 $generated@@193) 0) (= $generated@@193 $generated@@43))
 :pattern ( ($generated@@39 $generated@@193))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@194 Int) ($generated@@195 T@U) ) (!  (=> (or ($generated@@83 ($generated@@38 $generated@@194) ($generated@@88 $generated@@34 $generated@@195)) (and (< 0 $generated@@30) ($generated@@33 $generated@@34 $generated@@195 ($generated@@35 $generated@@0)))) (= ($generated@@82 ($generated@@38 $generated@@194) ($generated@@88 $generated@@34 $generated@@195)) (forall (($generated@@196 Int) ) (!  (=> (and (<= ($generated@@38 0) $generated@@196) (< $generated@@196 ($generated@@39 ($generated@@88 $generated@@34 $generated@@195)))) (< $generated@@194 ($generated@@18 ($generated@@36 $generated@@13 ($generated@@37 ($generated@@88 $generated@@34 $generated@@195) $generated@@196)))))
 :pattern ( ($generated@@36 $generated@@13 ($generated@@37 $generated@@195 $generated@@196)))
))))
 :weight 3
 :pattern ( ($generated@@82 ($generated@@38 $generated@@194) ($generated@@88 $generated@@34 $generated@@195)))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! ($generated@@49 $generated@@13 $generated@@198 $generated@@0 $generated@@197)
 :pattern ( ($generated@@49 $generated@@13 $generated@@198 $generated@@0 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! ($generated@@49 $generated@@12 $generated@@200 $generated $generated@@199)
 :pattern ( ($generated@@49 $generated@@12 $generated@@200 $generated $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@201 ($generated@@35 $generated@@202)) (forall (($generated@@203 Int) ) (!  (=> (and (<= 0 $generated@@203) (< $generated@@203 ($generated@@39 $generated@@201))) ($generated@@122 ($generated@@37 $generated@@201 $generated@@203) $generated@@202))
 :pattern ( ($generated@@37 $generated@@201 $generated@@203))
)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@201 ($generated@@35 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ) (! ($generated@@33 $generated@@13 $generated@@204 $generated@@0)
 :pattern ( ($generated@@33 $generated@@13 $generated@@204 $generated@@0))
)))
(assert (forall (($generated@@205 T@U) ) (! ($generated@@33 $generated@@12 $generated@@205 $generated)
 :pattern ( ($generated@@33 $generated@@12 $generated@@205 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Bool)
(declare-fun $generated@@212 () Bool)
(declare-fun $generated@@213 () Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Bool)
(declare-fun $generated@@217 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@218  (=> (and (= $generated@@206 (ite (= $generated@@207 $generated@@46) $generated@@43 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@208 $generated@@207) $generated@@53)))) ($generated@@49 $generated@@34 $generated@@206 ($generated@@35 $generated@@0) $generated@@208)) (=> (and (and ($generated@@89 (ite (= $generated@@209 $generated@@46) $generated@@43 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@208 $generated@@209) $generated@@53))) $generated@@210 (ite (= $generated@@207 $generated@@46) $generated@@43 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@208 $generated@@207) $generated@@53)))) (= ($generated@@105 $generated@@208 $generated@@209 $generated@@210 $generated@@207) ($generated@@87 (ite (= $generated@@209 $generated@@46) $generated@@43 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@208 $generated@@209) $generated@@53))) $generated@@210 (ite (= $generated@@207 $generated@@46) $generated@@43 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@208 $generated@@207) $generated@@53)))))) (and ($generated@@89 (ite (= $generated@@209 $generated@@46) $generated@@43 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@208 $generated@@209) $generated@@53))) $generated@@210 (ite (= $generated@@207 $generated@@46) $generated@@43 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@208 $generated@@207) $generated@@53)))) ($generated@@33 $generated@@12 ($generated@@15 ($generated@@105 $generated@@208 $generated@@209 $generated@@210 $generated@@207)) $generated))) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@211) (=> $generated@@211 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@212)))))))
(let (($generated@@219  (=> (or (not (= $generated@@207 $generated@@46)) (not true)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (not (= $generated@@207 $generated@@46)) (not true))) (=> (or (not (= $generated@@207 $generated@@46)) (not true)) (=> (= $generated@@213 ($generated@@16 ($generated@@155 $generated@@44 $generated@@57 $generated@@12 $generated@@214 $generated@@207 $generated@@53))) (=> (and (= $generated@@212 $generated@@213) (= (ControlFlow 0 6) 3)) $generated@@218)))))))
(let (($generated@@220  (=> (= $generated@@207 $generated@@46) (=> (and (= $generated@@212 true) (= (ControlFlow 0 5) 3)) $generated@@218))))
(let (($generated@@221  (=> (= $generated@@215 (ite (= $generated@@209 $generated@@46) $generated@@43 ($generated@@36 $generated@@34 ($generated@@56 $generated@@57 $generated@@58 ($generated@@56 $generated@@44 ($generated@@59 $generated@@57 $generated@@58) $generated@@208 $generated@@209) $generated@@53)))) (=> (and ($generated@@49 $generated@@34 $generated@@215 ($generated@@35 $generated@@0) $generated@@208) ($generated@@49 $generated@@13 ($generated@@17 $generated@@210) $generated@@0 $generated@@208)) (and (=> (= (ControlFlow 0 8) 5) $generated@@220) (=> (= (ControlFlow 0 8) 6) $generated@@219))))))
(let (($generated@@222  (=> (or (not (= $generated@@209 $generated@@46)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (not (= $generated@@209 $generated@@46)) (not true))) (=> (or (not (= $generated@@209 $generated@@46)) (not true)) (=> (= $generated@@216 ($generated@@16 ($generated@@155 $generated@@44 $generated@@57 $generated@@12 $generated@@214 $generated@@209 $generated@@53))) (=> (and (= $generated@@211 $generated@@216) (= (ControlFlow 0 10) 8)) $generated@@221)))))))
(let (($generated@@223  (=> (= $generated@@209 $generated@@46) (=> (and (= $generated@@211 true) (= (ControlFlow 0 9) 8)) $generated@@221))))
(let (($generated@@224 true))
(let (($generated@@225  (=> (= $generated@@214 ($generated@@156 $generated@@46 $generated@@208 $generated@@4 $generated@@209 $generated@@207)) (and (and (=> (= (ControlFlow 0 12) 1) $generated@@224) (=> (= (ControlFlow 0 12) 9) $generated@@223)) (=> (= (ControlFlow 0 12) 10) $generated@@222)))))
(let (($generated@@226  (=> (and ($generated@@106 $generated@@208) ($generated@@217 $generated@@208)) (=> (and (and ($generated@@33 $generated@@44 $generated@@209 $generated@@45) ($generated@@33 $generated@@44 $generated@@207 $generated@@45)) (and (= 2 $generated@@30) (= (ControlFlow 0 13) 12))) $generated@@225))))
$generated@@226))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
