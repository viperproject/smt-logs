(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (Int T@U T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@88 (T@U) Int)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@93 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@109 (T@U) Bool)
(declare-fun $generated@@111 (T@T T@U) T@U)
(declare-fun $generated@@118 (T@U T@U) Int)
(declare-fun $generated@@123 (T@U) Int)
(declare-fun $generated@@126 (T@U T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Int)
(declare-fun $generated@@185 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@187 () T@T)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@190 () T@T)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@26) 3))
(assert (forall (($generated@@29 Int) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@27 $generated@@29 $generated@@30 $generated@@31) $generated@@28)  (and (and ($generated@@25 $generated@@11 ($generated@@15 $generated@@29) $generated) ($generated@@25 $generated@@26 $generated@@30 $generated@@28)) ($generated@@25 $generated@@26 $generated@@31 $generated@@28)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@27 $generated@@29 $generated@@30 $generated@@31) $generated@@28))
)))
(assert (= ($generated@@9 $generated@@36) 4))
(assert  (=> (<= 3 $generated@@32) (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@34 $generated@@39) (and (< 3 $generated@@32) ($generated@@25 $generated@@26 $generated@@39 $generated@@35))) ($generated@@25 $generated@@36 ($generated@@33 $generated@@38 $generated@@39) ($generated@@37 $generated)))
 :pattern ( ($generated@@33 $generated@@38 $generated@@39))
))))
(assert (= ($generated@@40 $generated) $generated@@0))
(assert (forall (($generated@@42 Int) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@41 ($generated@@27 $generated@@42 $generated@@43 $generated@@44)) $generated@@6)
 :pattern ( ($generated@@27 $generated@@42 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 Int) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@45 ($generated@@27 $generated@@46 $generated@@47 $generated@@48)) $generated@@46)
 :pattern ( ($generated@@27 $generated@@46 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 Int) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@49 ($generated@@27 $generated@@50 $generated@@51 $generated@@52)) $generated@@51)
 :pattern ( ($generated@@27 $generated@@50 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 Int) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@53 ($generated@@27 $generated@@54 $generated@@55 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@27 $generated@@54 $generated@@55 $generated@@56))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@60 ($generated@@59 $generated@@26 $generated@@67)) (and (< 1 $generated@@32) ($generated@@25 $generated@@26 $generated@@67 $generated@@28))) (and (=> (not ($generated@@14 ($generated@@59 $generated@@10 ($generated@@13 ($generated@@61 ($generated@@59 $generated@@26 $generated@@67)))))) (let (($generated@@68 ($generated@@59 $generated@@26 ($generated@@53 ($generated@@59 $generated@@26 $generated@@67)))))
(let (($generated@@69 ($generated@@59 $generated@@26 ($generated@@49 ($generated@@59 $generated@@26 $generated@@67)))))
(let (($generated@@70 ($generated@@62 ($generated@@45 ($generated@@59 $generated@@26 $generated@@67)))))
 (and ($generated@@60 $generated@@69) (=> ($generated@@57 ($generated@@58 $generated@@66) $generated@@69) (and ($generated@@60 $generated@@68) (=> ($generated@@57 ($generated@@58 $generated@@66) $generated@@68) (and ($generated@@63 $generated@@69) (=> (or ($generated@@64 $generated@@69 $generated@@65) (<= $generated@@70 ($generated@@45 $generated@@69))) ($generated@@63 $generated@@68))))))))))) (= ($generated@@57 ($generated@@58 $generated@@66) ($generated@@59 $generated@@26 $generated@@67)) (ite ($generated@@61 ($generated@@59 $generated@@26 $generated@@67)) true (let (($generated@@71 ($generated@@59 $generated@@26 ($generated@@53 ($generated@@59 $generated@@26 $generated@@67)))))
(let (($generated@@72 ($generated@@59 $generated@@26 ($generated@@49 ($generated@@59 $generated@@26 $generated@@67)))))
(let (($generated@@73 ($generated@@62 ($generated@@45 ($generated@@59 $generated@@26 $generated@@67)))))
 (and (and (and ($generated@@57 ($generated@@58 $generated@@66) $generated@@72) ($generated@@57 ($generated@@58 $generated@@66) $generated@@71)) (or ($generated@@64 $generated@@72 $generated@@65) (<= $generated@@73 ($generated@@62 ($generated@@45 $generated@@72))))) (or ($generated@@64 $generated@@71 $generated@@65) (<= $generated@@73 ($generated@@62 ($generated@@45 $generated@@71))))))))))))
 :weight 3
 :pattern ( ($generated@@57 ($generated@@58 $generated@@66) ($generated@@59 $generated@@26 $generated@@67)))
))))
(assert  (=> (<= 3 $generated@@32) (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@34 ($generated@@59 $generated@@26 $generated@@79)) (and (< 3 $generated@@32) ($generated@@25 $generated@@26 $generated@@79 $generated@@35))) (and (=> (not ($generated@@14 ($generated@@59 $generated@@10 ($generated@@13 ($generated@@61 ($generated@@59 $generated@@26 $generated@@79)))))) (let (($generated@@80 ($generated@@59 $generated@@26 ($generated@@53 ($generated@@59 $generated@@26 $generated@@79)))))
(let (($generated@@81 ($generated@@59 $generated@@26 ($generated@@49 ($generated@@59 $generated@@26 $generated@@79)))))
 (and ($generated@@34 $generated@@81) ($generated@@34 $generated@@80))))) (= ($generated@@33 ($generated@@58 $generated@@78) ($generated@@59 $generated@@26 $generated@@79)) (ite ($generated@@61 ($generated@@59 $generated@@26 $generated@@79)) $generated@@74 (let (($generated@@82 ($generated@@59 $generated@@26 ($generated@@53 ($generated@@59 $generated@@26 $generated@@79)))))
(let (($generated@@83 ($generated@@59 $generated@@26 ($generated@@49 ($generated@@59 $generated@@26 $generated@@79)))))
(let (($generated@@84 ($generated@@62 ($generated@@45 ($generated@@59 $generated@@26 $generated@@79)))))
($generated@@75 ($generated@@75 ($generated@@76 $generated@@74 ($generated@@77 $generated@@11 ($generated@@15 $generated@@84))) ($generated@@33 ($generated@@58 $generated@@78) $generated@@83)) ($generated@@33 ($generated@@58 $generated@@78) $generated@@82)))))))))
 :weight 3
 :pattern ( ($generated@@33 ($generated@@58 $generated@@78) ($generated@@59 $generated@@26 $generated@@79)))
))))
(assert (= ($generated@@41 $generated@@65) $generated@@5))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@25 $generated@@36 $generated@@86 ($generated@@37 $generated@@87)) ($generated@@85 $generated@@86))
 :pattern ( ($generated@@25 $generated@@36 $generated@@86 ($generated@@37 $generated@@87)))
)))
(assert  (=> (<= 5 $generated@@32) (forall (($generated@@92 T@U) ) (!  (=> (or ($generated@@89 ($generated@@59 $generated@@26 $generated@@92)) (and (< 5 $generated@@32) (and ($generated@@25 $generated@@26 $generated@@92 $generated@@35) (not ($generated@@90 ($generated@@33 ($generated@@58 $generated@@91) ($generated@@59 $generated@@26 $generated@@92)) $generated@@74))))) (= ($generated@@88 ($generated@@59 $generated@@26 $generated@@92)) ($generated@@62 ($generated@@45 ($generated@@59 $generated@@26 $generated@@92)))))
 :weight 3
 :pattern ( ($generated@@88 ($generated@@59 $generated@@26 $generated@@92)))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@93 $generated@@26 $generated@@94 $generated@@35 $generated@@95) ($generated@@93 $generated@@26 $generated@@94 $generated@@28 $generated@@95))
 :pattern ( ($generated@@93 $generated@@26 $generated@@94 $generated@@35 $generated@@95))
)))
(assert ($generated@@25 $generated@@26 $generated@@65 $generated@@28))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@64 $generated@@96 $generated@@97) (= $generated@@96 $generated@@97))
 :pattern ( ($generated@@64 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 Int) ) (! (= ($generated@@62 $generated@@98) $generated@@98)
 :pattern ( ($generated@@62 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@59 $generated@@100 $generated@@99) $generated@@99)
 :pattern ( ($generated@@59 $generated@@100 $generated@@99))
)))
(assert  (=> (<= 3 $generated@@32) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@34 $generated@@102) (and (< 3 $generated@@32) ($generated@@25 $generated@@26 $generated@@102 $generated@@35))) (and (=> (not ($generated@@61 $generated@@102)) (let (($generated@@103 ($generated@@53 $generated@@102)))
(let (($generated@@104 ($generated@@49 $generated@@102)))
 (and ($generated@@34 $generated@@104) ($generated@@34 $generated@@103))))) (= ($generated@@33 ($generated@@58 $generated@@101) $generated@@102) (ite ($generated@@61 $generated@@102) $generated@@74 (let (($generated@@105 ($generated@@53 $generated@@102)))
(let (($generated@@106 ($generated@@49 $generated@@102)))
(let (($generated@@107 ($generated@@45 $generated@@102)))
($generated@@75 ($generated@@75 ($generated@@76 $generated@@74 ($generated@@77 $generated@@11 ($generated@@15 $generated@@107))) ($generated@@33 $generated@@101 $generated@@106)) ($generated@@33 $generated@@101 $generated@@105)))))))))
 :pattern ( ($generated@@33 ($generated@@58 $generated@@101) $generated@@102))
))))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@61 $generated@@108) (= ($generated@@41 $generated@@108) $generated@@5))
 :pattern ( ($generated@@61 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@109 $generated@@110) (= ($generated@@41 $generated@@110) $generated@@6))
 :pattern ( ($generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@77 $generated@@113 ($generated@@111 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@111 $generated@@113 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@109 $generated@@114) (exists (($generated@@115 Int) ($generated@@116 T@U) ($generated@@117 T@U) ) (= $generated@@114 ($generated@@27 $generated@@115 $generated@@116 $generated@@117))))
 :pattern ( ($generated@@109 $generated@@114))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or (not (= $generated@@120 $generated@@121)) (not true)) (= ($generated@@118 $generated@@119 $generated@@121) ($generated@@118 ($generated@@76 $generated@@119 $generated@@120) $generated@@121)))
 :pattern ( ($generated@@76 $generated@@119 $generated@@120) ($generated@@118 $generated@@119 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@61 $generated@@122) (= $generated@@122 $generated@@65))
 :pattern ( ($generated@@61 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@123 ($generated@@76 $generated@@124 $generated@@125)) (+ ($generated@@123 $generated@@124) 1))
 :pattern ( ($generated@@123 ($generated@@76 $generated@@124 $generated@@125)))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@126 ($generated@@77 $generated@@130 $generated@@127) $generated@@128 $generated@@129) ($generated@@93 $generated@@130 $generated@@127 $generated@@128 $generated@@129))
 :pattern ( ($generated@@126 ($generated@@77 $generated@@130 $generated@@127) $generated@@128 $generated@@129))
)))
(assert  (=> (<= 5 $generated@@32) (forall (($generated@@131 T@U) ) (!  (=> (or ($generated@@89 $generated@@131) (and (< 5 $generated@@32) (and ($generated@@25 $generated@@26 $generated@@131 $generated@@35) (not ($generated@@90 ($generated@@33 ($generated@@58 $generated@@91) $generated@@131) $generated@@74))))) (let (($generated@@132 ($generated@@88 $generated@@131)))
 (and (> ($generated@@118 ($generated@@33 ($generated@@58 $generated@@91) $generated@@131) ($generated@@77 $generated@@11 ($generated@@15 $generated@@132))) 0) (forall (($generated@@133 T@U) ) (!  (=> (> ($generated@@118 ($generated@@33 ($generated@@58 $generated@@91) $generated@@131) ($generated@@77 $generated@@11 $generated@@133)) 0) (<= $generated@@132 ($generated@@16 $generated@@133)))
 :pattern ( ($generated@@118 ($generated@@33 ($generated@@58 $generated@@91) $generated@@131) ($generated@@77 $generated@@11 $generated@@133)))
)))))
 :pattern ( ($generated@@88 $generated@@131))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and ($generated@@109 $generated@@134) ($generated@@109 $generated@@135)) (= ($generated@@64 $generated@@134 $generated@@135)  (and (and (= ($generated@@45 $generated@@134) ($generated@@45 $generated@@135)) ($generated@@64 ($generated@@49 $generated@@134) ($generated@@49 $generated@@135))) ($generated@@64 ($generated@@53 $generated@@134) ($generated@@53 $generated@@135)))))
 :pattern ( ($generated@@64 $generated@@134 $generated@@135) ($generated@@109 $generated@@134))
 :pattern ( ($generated@@64 $generated@@134 $generated@@135) ($generated@@109 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@123 ($generated@@75 $generated@@136 $generated@@137)) (+ ($generated@@123 $generated@@136) ($generated@@123 $generated@@137)))
 :pattern ( ($generated@@123 ($generated@@75 $generated@@136 $generated@@137)))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@138 $generated@@139 $generated@@28) (and (= ($generated@@77 $generated@@26 ($generated@@111 $generated@@26 $generated@@139)) $generated@@139) ($generated@@25 $generated@@26 ($generated@@111 $generated@@26 $generated@@139) $generated@@28)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@28))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@138 $generated@@140 $generated@@35) (and (= ($generated@@77 $generated@@26 ($generated@@111 $generated@@26 $generated@@140)) $generated@@140) ($generated@@25 $generated@@26 ($generated@@111 $generated@@26 $generated@@140) $generated@@35)))
 :pattern ( ($generated@@138 $generated@@140 $generated@@35))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> ($generated@@63 $generated@@141) (or ($generated@@61 $generated@@141) ($generated@@109 $generated@@141)))
 :pattern ( ($generated@@63 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@90 $generated@@142 $generated@@143) (= $generated@@142 $generated@@143))
 :pattern ( ($generated@@90 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@25 $generated@@36 $generated@@144 ($generated@@37 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (< 0 ($generated@@118 $generated@@144 $generated@@146)) ($generated@@138 $generated@@146 $generated@@145))
 :pattern ( ($generated@@118 $generated@@144 $generated@@146))
)))
 :pattern ( ($generated@@25 $generated@@36 $generated@@144 ($generated@@37 $generated@@145)))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@147 $generated@@28) (or ($generated@@61 $generated@@147) ($generated@@109 $generated@@147)))
 :pattern ( ($generated@@109 $generated@@147) ($generated@@25 $generated@@26 $generated@@147 $generated@@28))
 :pattern ( ($generated@@61 $generated@@147) ($generated@@25 $generated@@26 $generated@@147 $generated@@28))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> ($generated@@138 $generated@@148 $generated) (and (= ($generated@@77 $generated@@11 ($generated@@111 $generated@@11 $generated@@148)) $generated@@148) ($generated@@25 $generated@@11 ($generated@@111 $generated@@11 $generated@@148) $generated)))
 :pattern ( ($generated@@138 $generated@@148 $generated))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@57 ($generated@@58 $generated@@149) $generated@@150) ($generated@@57 $generated@@149 $generated@@150))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@149) $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@138 ($generated@@77 $generated@@153 $generated@@151) $generated@@152) ($generated@@25 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@138 ($generated@@77 $generated@@153 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@85 $generated@@154) (forall (($generated@@155 T@U) ) (!  (and (<= 0 ($generated@@118 $generated@@154 $generated@@155)) (<= ($generated@@118 $generated@@154 $generated@@155) ($generated@@123 $generated@@154)))
 :pattern ( ($generated@@118 $generated@@154 $generated@@155))
)))
 :pattern ( ($generated@@85 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (<= 0 ($generated@@123 $generated@@156))
 :pattern ( ($generated@@123 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@61 $generated@@157) ($generated@@61 $generated@@158)) ($generated@@64 $generated@@157 $generated@@158))
 :pattern ( ($generated@@64 $generated@@157 $generated@@158) ($generated@@61 $generated@@157))
 :pattern ( ($generated@@64 $generated@@157 $generated@@158) ($generated@@61 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@118 $generated@@74 $generated@@159) 0)
 :pattern ( ($generated@@118 $generated@@74 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@118 ($generated@@76 $generated@@160 $generated@@161) $generated@@161) (+ ($generated@@118 $generated@@160 $generated@@161) 1))
 :pattern ( ($generated@@76 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 Int) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@27 ($generated@@62 $generated@@162) ($generated@@59 $generated@@26 $generated@@163) ($generated@@59 $generated@@26 $generated@@164)) ($generated@@59 $generated@@26 ($generated@@27 $generated@@162 $generated@@163 $generated@@164)))
 :pattern ( ($generated@@27 ($generated@@62 $generated@@162) ($generated@@59 $generated@@26 $generated@@163) ($generated@@59 $generated@@26 $generated@@164)))
)))
(assert (forall (($generated@@166 T@U) ) (! (= ($generated@@165 ($generated@@37 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@37 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@40 ($generated@@37 $generated@@167)) $generated@@1)
 :pattern ( ($generated@@37 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@111 $generated@@169 ($generated@@77 $generated@@169 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@77 $generated@@169 $generated@@168))
)))
(assert (forall (($generated@@171 Int) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (< ($generated@@170 $generated@@172) ($generated@@170 ($generated@@27 $generated@@171 $generated@@172 $generated@@173)))
 :pattern ( ($generated@@27 $generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (< ($generated@@170 $generated@@176) ($generated@@170 ($generated@@27 $generated@@174 $generated@@175 $generated@@176)))
 :pattern ( ($generated@@27 $generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@33 ($generated@@58 $generated@@177) $generated@@178) ($generated@@33 $generated@@177 $generated@@178))
 :pattern ( ($generated@@33 ($generated@@58 $generated@@177) $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (!  (and (= (= ($generated@@123 $generated@@179) 0) (= $generated@@179 $generated@@74)) (=> (or (not (= ($generated@@123 $generated@@179) 0)) (not true)) (exists (($generated@@180 T@U) ) (! (< 0 ($generated@@118 $generated@@179 $generated@@180))
 :pattern ( ($generated@@118 $generated@@179 $generated@@180))
))))
 :pattern ( ($generated@@123 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@118 ($generated@@75 $generated@@181 $generated@@182) $generated@@183) (+ ($generated@@118 $generated@@181 $generated@@183) ($generated@@118 $generated@@182 $generated@@183)))
 :pattern ( ($generated@@118 ($generated@@75 $generated@@181 $generated@@182) $generated@@183))
)))
(assert  (=> (<= 5 $generated@@32) (forall (($generated@@184 T@U) ) (!  (=> (or ($generated@@89 $generated@@184) (and (< 5 $generated@@32) (and ($generated@@25 $generated@@26 $generated@@184 $generated@@35) (not ($generated@@90 ($generated@@33 ($generated@@58 $generated@@91) $generated@@184) $generated@@74))))) (= ($generated@@88 $generated@@184) ($generated@@45 $generated@@184)))
 :pattern ( ($generated@@88 $generated@@184))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@185 $generated@@196 $generated@@197 $generated@@198 ($generated@@192 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@201 $generated@@202) $generated@@199)
 :weight 0
)) (and (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@185 $generated@@203 $generated@@204 $generated@@205 ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@185 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@185 $generated@@212 $generated@@213 $generated@@214 ($generated@@192 $generated@@212 $generated@@213 $generated@@214 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@185 $generated@@212 $generated@@213 $generated@@214 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (= ($generated@@9 $generated@@186) 5)) (= ($generated@@9 $generated@@187) 6)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@189 $generated@@221 $generated@@222 ($generated@@193 $generated@@221 $generated@@222 $generated@@224 $generated@@225 $generated@@223) $generated@@225) $generated@@223)
 :weight 0
))) (forall (($generated@@226 T@T) ($generated@@227 T@T) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@230 $generated@@231) (= ($generated@@189 $generated@@226 $generated@@227 ($generated@@193 $generated@@226 $generated@@227 $generated@@229 $generated@@230 $generated@@228) $generated@@231) ($generated@@189 $generated@@226 $generated@@227 $generated@@229 $generated@@231)))
 :weight 0
))) (= ($generated@@9 $generated@@190) 7)) (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (= ($generated@@9 ($generated@@191 $generated@@232 $generated@@233)) 8))) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@194 ($generated@@191 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@191 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@195 ($generated@@191 $generated@@236 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@191 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (= ($generated@@14 ($generated@@185 $generated@@186 $generated@@187 $generated@@10 ($generated@@188 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (or (not (= $generated@@242 $generated@@238)) (not true)) ($generated@@14 ($generated@@111 $generated@@10 ($generated@@189 $generated@@187 $generated@@190 ($generated@@189 $generated@@186 ($generated@@191 $generated@@187 $generated@@190) $generated@@239 $generated@@242) $generated@@240)))) $generated@@241))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187 $generated@@10 ($generated@@188 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and ($generated@@244 $generated@@246) (and ($generated@@109 $generated@@245) ($generated@@93 $generated@@26 $generated@@245 $generated@@28 $generated@@246))) ($generated@@93 $generated@@11 ($generated@@15 ($generated@@45 $generated@@245)) $generated $generated@@246))
 :pattern ( ($generated@@93 $generated@@11 ($generated@@15 ($generated@@45 $generated@@245)) $generated $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> ($generated@@138 $generated@@247 ($generated@@37 $generated@@248)) (and (= ($generated@@77 $generated@@36 ($generated@@111 $generated@@36 $generated@@247)) $generated@@247) ($generated@@25 $generated@@36 ($generated@@111 $generated@@36 $generated@@247) ($generated@@37 $generated@@248))))
 :pattern ( ($generated@@138 $generated@@247 ($generated@@37 $generated@@248)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and ($generated@@244 $generated@@250) ($generated@@25 $generated@@26 $generated@@249 $generated@@28)) ($generated@@93 $generated@@26 $generated@@249 $generated@@28 $generated@@250))
 :pattern ( ($generated@@93 $generated@@26 $generated@@249 $generated@@28 $generated@@250))
)))
(assert (= ($generated@@40 $generated@@28) $generated@@3))
(assert (= ($generated@@251 $generated@@28) $generated@@7))
(assert (= ($generated@@40 $generated@@35) $generated@@4))
(assert (= ($generated@@251 $generated@@35) $generated@@8))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (or ($generated@@60 $generated@@253) (and (< 1 $generated@@32) ($generated@@25 $generated@@26 $generated@@253 $generated@@28))) (and (=> (not ($generated@@61 $generated@@253)) (let (($generated@@254 ($generated@@53 $generated@@253)))
(let (($generated@@255 ($generated@@49 $generated@@253)))
(let (($generated@@256 ($generated@@45 $generated@@253)))
 (and ($generated@@60 $generated@@255) (=> ($generated@@57 $generated@@252 $generated@@255) (and ($generated@@60 $generated@@254) (=> ($generated@@57 $generated@@252 $generated@@254) (and ($generated@@63 $generated@@255) (=> (or ($generated@@64 $generated@@255 $generated@@65) (<= $generated@@256 ($generated@@45 $generated@@255))) ($generated@@63 $generated@@254))))))))))) (= ($generated@@57 ($generated@@58 $generated@@252) $generated@@253) (ite ($generated@@61 $generated@@253) true (let (($generated@@257 ($generated@@53 $generated@@253)))
(let (($generated@@258 ($generated@@49 $generated@@253)))
(let (($generated@@259 ($generated@@45 $generated@@253)))
 (and (and (and ($generated@@57 $generated@@252 $generated@@258) ($generated@@57 $generated@@252 $generated@@257)) (or ($generated@@64 $generated@@258 $generated@@65) (<= $generated@@259 ($generated@@45 $generated@@258)))) (or ($generated@@64 $generated@@257 $generated@@65) (<= $generated@@259 ($generated@@45 $generated@@257)))))))))))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@252) $generated@@253))
))))
(assert (= $generated@@65 ($generated@@59 $generated@@26 $generated@@65)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and ($generated@@244 $generated@@261) (and ($generated@@109 $generated@@260) ($generated@@93 $generated@@26 $generated@@260 $generated@@28 $generated@@261))) ($generated@@93 $generated@@26 ($generated@@49 $generated@@260) $generated@@28 $generated@@261))
 :pattern ( ($generated@@93 $generated@@26 ($generated@@49 $generated@@260) $generated@@28 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and ($generated@@244 $generated@@263) (and ($generated@@109 $generated@@262) ($generated@@93 $generated@@26 $generated@@262 $generated@@28 $generated@@263))) ($generated@@93 $generated@@26 ($generated@@53 $generated@@262) $generated@@28 $generated@@263))
 :pattern ( ($generated@@93 $generated@@26 ($generated@@53 $generated@@262) $generated@@28 $generated@@263))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@77 $generated@@11 ($generated@@15 ($generated@@62 $generated@@264))) ($generated@@59 $generated@@190 ($generated@@77 $generated@@11 ($generated@@15 $generated@@264))))
 :pattern ( ($generated@@77 $generated@@11 ($generated@@15 ($generated@@62 $generated@@264))))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@T) ) (! (= ($generated@@77 $generated@@266 ($generated@@59 $generated@@266 $generated@@265)) ($generated@@59 $generated@@190 ($generated@@77 $generated@@266 $generated@@265)))
 :pattern ( ($generated@@77 $generated@@266 ($generated@@59 $generated@@266 $generated@@265)))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (< 0 ($generated@@118 $generated@@267 $generated@@269)) (< 0 ($generated@@118 ($generated@@76 $generated@@267 $generated@@268) $generated@@269)))
 :pattern ( ($generated@@76 $generated@@267 $generated@@268) ($generated@@118 $generated@@267 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (= (< 0 ($generated@@118 ($generated@@76 $generated@@270 $generated@@271) $generated@@272))  (or (= $generated@@272 $generated@@271) (< 0 ($generated@@118 $generated@@270 $generated@@272))))
 :pattern ( ($generated@@118 ($generated@@76 $generated@@270 $generated@@271) $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@273 $generated@@35)  (and ($generated@@25 $generated@@26 $generated@@273 $generated@@28) ($generated@@57 ($generated@@58 $generated@@91) $generated@@273)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@273 $generated@@35))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= ($generated@@90 $generated@@274 $generated@@275) (forall (($generated@@276 T@U) ) (! (= ($generated@@118 $generated@@274 $generated@@276) ($generated@@118 $generated@@275 $generated@@276))
 :pattern ( ($generated@@118 $generated@@274 $generated@@276))
 :pattern ( ($generated@@118 $generated@@275 $generated@@276))
)))
 :pattern ( ($generated@@90 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (= ($generated@@93 $generated@@36 $generated@@277 ($generated@@37 $generated@@278) $generated@@279) (forall (($generated@@280 T@U) ) (!  (=> (< 0 ($generated@@118 $generated@@277 $generated@@280)) ($generated@@126 $generated@@280 $generated@@278 $generated@@279))
 :pattern ( ($generated@@118 $generated@@277 $generated@@280))
)))
 :pattern ( ($generated@@93 $generated@@36 $generated@@277 ($generated@@37 $generated@@278) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! ($generated@@93 $generated@@11 $generated@@282 $generated $generated@@281)
 :pattern ( ($generated@@93 $generated@@11 $generated@@282 $generated $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! ($generated@@25 $generated@@11 $generated@@283 $generated)
 :pattern ( ($generated@@25 $generated@@11 $generated@@283 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 () Int)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 () Int)
(declare-fun $generated@@288 () Int)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@293 true))
(let (($generated@@294 true))
(let (($generated@@295  (=> (and (>= 0 ($generated@@118 ($generated@@33 ($generated@@58 $generated@@91) $generated@@284) ($generated@@77 $generated@@11 ($generated@@15 $generated@@285)))) (= (ControlFlow 0 11) 7)) $generated@@294)))
(let (($generated@@296  (=> (and (> ($generated@@118 ($generated@@33 ($generated@@58 $generated@@91) $generated@@284) ($generated@@77 $generated@@11 ($generated@@15 $generated@@285))) 0) (= (ControlFlow 0 10) 7)) $generated@@294)))
(let (($generated@@297  (=> (and ($generated@@93 $generated@@26 $generated@@284 $generated@@35 $generated@@286) ($generated@@34 $generated@@284)) (and (=> (= (ControlFlow 0 12) 10) $generated@@296) (=> (= (ControlFlow 0 12) 11) $generated@@295)))))
(let (($generated@@298  (=> (> ($generated@@118 ($generated@@33 ($generated@@58 $generated@@91) $generated@@284) ($generated@@77 $generated@@11 ($generated@@15 $generated@@287))) 0) (and (=> (= (ControlFlow 0 13) 12) $generated@@297) (=> (= (ControlFlow 0 13) 9) $generated@@293)))))
(let (($generated@@299  (=> (and (>= 0 ($generated@@118 ($generated@@33 ($generated@@58 $generated@@91) $generated@@284) ($generated@@77 $generated@@11 ($generated@@15 $generated@@287)))) (= (ControlFlow 0 8) 7)) $generated@@294)))
(let (($generated@@300  (=> ($generated@@93 $generated@@26 $generated@@284 $generated@@35 $generated@@286) (and (=> (= (ControlFlow 0 14) (- 0 16)) (not ($generated@@90 ($generated@@33 ($generated@@58 ($generated@@58 $generated@@91)) $generated@@284) $generated@@74))) (=> (not ($generated@@90 ($generated@@33 ($generated@@58 $generated@@91) $generated@@284) $generated@@74)) (and (=> (= (ControlFlow 0 14) (- 0 15)) (or ($generated@@64 $generated@@284 $generated@@284) (< ($generated@@170 $generated@@284) ($generated@@170 $generated@@284)))) (=> (or ($generated@@64 $generated@@284 $generated@@284) (< ($generated@@170 $generated@@284) ($generated@@170 $generated@@284))) (=> (or ($generated@@64 $generated@@284 $generated@@284) ($generated@@89 $generated@@284)) (=> (and (= $generated@@288 ($generated@@88 $generated@@284)) ($generated@@89 $generated@@284)) (=> (and (and ($generated@@25 $generated@@11 ($generated@@15 $generated@@288) $generated) (= $generated@@287 $generated@@288)) (and ($generated@@93 $generated@@26 $generated@@284 $generated@@35 $generated@@286) ($generated@@34 $generated@@284))) (and (=> (= (ControlFlow 0 14) 13) $generated@@298) (=> (= (ControlFlow 0 14) 8) $generated@@299))))))))))))
(let (($generated@@301  (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@302 ($generated@@88 $generated@@284)))
(> ($generated@@118 ($generated@@33 ($generated@@58 ($generated@@58 $generated@@91)) $generated@@284) ($generated@@77 $generated@@11 ($generated@@15 $generated@@302))) 0))) (=> (let (($generated@@303 ($generated@@88 $generated@@284)))
(> ($generated@@118 ($generated@@33 ($generated@@58 ($generated@@58 $generated@@91)) $generated@@284) ($generated@@77 $generated@@11 ($generated@@15 $generated@@303))) 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@304 ($generated@@88 $generated@@284)))
(forall (($generated@@305 Int) ) (!  (=> (> ($generated@@118 ($generated@@33 ($generated@@58 ($generated@@58 $generated@@91)) $generated@@284) ($generated@@77 $generated@@11 ($generated@@15 $generated@@305))) 0) (<= $generated@@304 $generated@@305))
 :pattern ( ($generated@@118 ($generated@@33 ($generated@@58 ($generated@@58 $generated@@91)) $generated@@284) ($generated@@77 $generated@@11 ($generated@@15 $generated@@305))))
))))))))
(let (($generated@@306  (and (=> (= (ControlFlow 0 4) (- 0 6)) (not ($generated@@64 $generated@@284 $generated@@65))) (=> (not ($generated@@64 $generated@@284 $generated@@65)) (=> (and ($generated@@244 $generated@@289) ($generated@@290 $generated@@289)) (=> (and (and (and ($generated@@34 $generated@@284) (=> (> ($generated@@118 ($generated@@33 ($generated@@58 $generated@@91) $generated@@284) ($generated@@77 $generated@@11 ($generated@@15 ($generated@@45 $generated@@284)))) 0) ($generated@@34 $generated@@284))) (> ($generated@@118 ($generated@@33 ($generated@@58 ($generated@@58 $generated@@91)) $generated@@284) ($generated@@77 $generated@@11 ($generated@@15 ($generated@@45 $generated@@284)))) 0)) (and (forall (($generated@@307 T@U) ) (!  (=> (> ($generated@@118 ($generated@@33 ($generated@@58 $generated@@91) $generated@@284) ($generated@@77 $generated@@11 $generated@@307)) 0) (<= ($generated@@45 $generated@@284) ($generated@@16 $generated@@307)))
 :pattern ( ($generated@@118 ($generated@@33 ($generated@@58 $generated@@91) $generated@@284) ($generated@@77 $generated@@11 $generated@@307)))
)) (= $generated@@286 $generated@@289))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@109 $generated@@284)) (=> ($generated@@109 $generated@@284) (=> (= ($generated@@88 $generated@@284) ($generated@@45 $generated@@284)) (=> (and ($generated@@25 $generated@@11 ($generated@@15 ($generated@@88 $generated@@284)) $generated) (= (ControlFlow 0 4) 2)) $generated@@301))))))))))
(let (($generated@@308  (=> (and (and (= $generated@@291 ($generated@@188 $generated@@292 $generated@@286 $generated@@2 false)) ($generated@@93 $generated@@26 $generated@@284 $generated@@35 $generated@@286)) (and ($generated@@34 $generated@@284) (not ($generated@@90 ($generated@@33 ($generated@@58 $generated@@91) $generated@@284) $generated@@74)))) (and (=> (= (ControlFlow 0 17) 14) $generated@@300) (=> (= (ControlFlow 0 17) 4) $generated@@306)))))
(let (($generated@@309  (=> (and (and (and ($generated@@244 $generated@@286) ($generated@@290 $generated@@286)) ($generated@@25 $generated@@26 $generated@@284 $generated@@35)) (and (= 5 $generated@@32) (= (ControlFlow 0 18) 17))) $generated@@308)))
$generated@@309)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
