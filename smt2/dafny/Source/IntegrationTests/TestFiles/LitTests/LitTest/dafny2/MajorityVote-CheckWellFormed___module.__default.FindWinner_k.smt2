(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Int) Int)
(declare-fun $generated@@26 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U Int) T@U)
(declare-fun $generated@@38 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@41 (Int Int) Int)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@50 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@3 $generated@@24) 3))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 Int) ($generated@@36 Int) ($generated@@37 T@U) ) (!  (=> (or ($generated@@26 $generated@@32 ($generated@@23 $generated@@24 $generated@@34) ($generated@@25 $generated@@35) ($generated@@25 $generated@@36) $generated@@37) (and (< 0 $generated@@20) (and (and ($generated@@27 $generated@@24 $generated@@34 ($generated@@28 $generated@@32)) ($generated@@29 $generated@@37 $generated@@32)) (and (and (<= ($generated@@25 0) ($generated@@25 $generated@@35)) (<= ($generated@@25 $generated@@35) ($generated@@25 $generated@@36))) (<= ($generated@@25 $generated@@36) ($generated@@30 ($generated@@23 $generated@@24 $generated@@34))))))) (and (=> (or (not (= ($generated@@25 $generated@@35) ($generated@@25 $generated@@36))) (not true)) ($generated@@26 $generated@@32 ($generated@@23 $generated@@24 $generated@@34) ($generated@@25 $generated@@35) ($generated@@25 (- $generated@@36 1)) $generated@@37)) (= ($generated@@21 $generated@@32 ($generated@@22 $generated@@33) ($generated@@23 $generated@@24 $generated@@34) ($generated@@25 $generated@@35) ($generated@@25 $generated@@36) $generated@@37) (ite (= ($generated@@25 $generated@@35) ($generated@@25 $generated@@36)) 0 (+ ($generated@@21 $generated@@32 ($generated@@22 $generated@@33) ($generated@@23 $generated@@24 $generated@@34) ($generated@@25 $generated@@35) ($generated@@25 (- $generated@@36 1)) $generated@@37) (ite (= ($generated@@31 ($generated@@23 $generated@@24 $generated@@34) ($generated@@25 (- $generated@@36 1))) $generated@@37) 1 0))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@32 ($generated@@22 $generated@@33) ($generated@@23 $generated@@24 $generated@@34) ($generated@@25 $generated@@35) ($generated@@25 $generated@@36) $generated@@37))
))))
(assert (= ($generated@@3 $generated@@39) 4))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 Int) ($generated@@46 Int) ($generated@@47 T@U) ) (!  (=> (or ($generated@@40 $generated@@43 ($generated@@23 $generated@@24 $generated@@44) ($generated@@25 $generated@@45) ($generated@@25 $generated@@46) ($generated@@23 $generated@@39 $generated@@47)) (and (< 1 $generated@@20) (and (and ($generated@@27 $generated@@24 $generated@@44 ($generated@@28 $generated@@43)) ($generated@@29 $generated@@47 $generated@@43)) (and (and (<= ($generated@@25 0) ($generated@@25 $generated@@45)) (<= ($generated@@25 $generated@@45) ($generated@@25 $generated@@46))) (<= ($generated@@25 $generated@@46) ($generated@@30 ($generated@@23 $generated@@24 $generated@@44))))))) (and ($generated@@26 $generated@@43 ($generated@@23 $generated@@24 $generated@@44) ($generated@@25 $generated@@45) ($generated@@25 $generated@@46) ($generated@@23 $generated@@39 $generated@@47)) (= ($generated@@38 $generated@@43 ($generated@@23 $generated@@24 $generated@@44) ($generated@@25 $generated@@45) ($generated@@25 $generated@@46) ($generated@@23 $generated@@39 $generated@@47)) ($generated@@8 ($generated@@23 $generated@@4 ($generated@@7 (> ($generated@@41 ($generated@@25 2) ($generated@@25 ($generated@@21 $generated@@43 ($generated@@22 $generated@@42) ($generated@@23 $generated@@24 $generated@@44) ($generated@@25 $generated@@45) ($generated@@25 $generated@@46) ($generated@@23 $generated@@39 $generated@@47)))) (- $generated@@46 $generated@@45))))))))
 :weight 3
 :pattern ( ($generated@@38 $generated@@43 ($generated@@23 $generated@@24 $generated@@44) ($generated@@25 $generated@@45) ($generated@@25 $generated@@46) ($generated@@23 $generated@@39 $generated@@47)))
))))
(assert (= ($generated@@30 $generated@@48) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@50 $generated@@58 $generated@@59 ($generated@@55 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@62) $generated@@60)
 :weight 0
)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (or (= $generated@@67 $generated@@68) (= ($generated@@50 $generated@@63 $generated@@64 ($generated@@55 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@68) ($generated@@50 $generated@@63 $generated@@64 $generated@@66 $generated@@68)))
 :weight 0
))) (= ($generated@@3 $generated@@51) 5)) (= ($generated@@3 $generated@@52) 6)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (= ($generated@@3 ($generated@@53 $generated@@69 $generated@@70)) 7))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@56 ($generated@@53 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@53 $generated@@71 $generated@@72))
))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@57 ($generated@@53 $generated@@73 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@53 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@49 $generated@@75 $generated@@76) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@8 ($generated@@54 $generated@@4 ($generated@@50 $generated@@51 $generated@@39 ($generated@@50 $generated@@52 ($generated@@53 $generated@@51 $generated@@39) $generated@@75 $generated@@77) $generated@@2))) ($generated@@8 ($generated@@54 $generated@@4 ($generated@@50 $generated@@51 $generated@@39 ($generated@@50 $generated@@52 ($generated@@53 $generated@@51 $generated@@39) $generated@@76 $generated@@77) $generated@@2))))
 :pattern ( ($generated@@50 $generated@@51 $generated@@39 ($generated@@50 $generated@@52 ($generated@@53 $generated@@51 $generated@@39) $generated@@76 $generated@@77) $generated@@2))
)))
 :pattern ( ($generated@@49 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@25 $generated@@78) $generated@@78)
 :pattern ( ($generated@@25 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@23 $generated@@80 $generated@@79) $generated@@79)
 :pattern ( ($generated@@23 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@54 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@54 $generated@@83 $generated@@82))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 Int) ($generated@@88 Int) ($generated@@89 T@U) ) (!  (=> (or ($generated@@26 $generated@@84 ($generated@@23 $generated@@24 $generated@@86) ($generated@@25 $generated@@87) ($generated@@25 $generated@@88) ($generated@@23 $generated@@39 $generated@@89)) (and (< 0 $generated@@20) (and (and ($generated@@27 $generated@@24 $generated@@86 ($generated@@28 $generated@@84)) ($generated@@29 $generated@@89 $generated@@84)) (and (and (<= ($generated@@25 0) ($generated@@25 $generated@@87)) (<= ($generated@@25 $generated@@87) ($generated@@25 $generated@@88))) (<= ($generated@@25 $generated@@88) ($generated@@30 ($generated@@23 $generated@@24 $generated@@86))))))) (and (=> (or (not (= ($generated@@25 $generated@@87) ($generated@@25 $generated@@88))) (not true)) ($generated@@26 $generated@@84 ($generated@@23 $generated@@24 $generated@@86) ($generated@@25 $generated@@87) ($generated@@25 (- $generated@@88 1)) ($generated@@23 $generated@@39 $generated@@89))) (= ($generated@@21 $generated@@84 ($generated@@22 $generated@@85) ($generated@@23 $generated@@24 $generated@@86) ($generated@@25 $generated@@87) ($generated@@25 $generated@@88) ($generated@@23 $generated@@39 $generated@@89)) (ite (= ($generated@@25 $generated@@87) ($generated@@25 $generated@@88)) 0 (+ ($generated@@21 $generated@@84 ($generated@@22 $generated@@85) ($generated@@23 $generated@@24 $generated@@86) ($generated@@25 $generated@@87) ($generated@@25 (- $generated@@88 1)) ($generated@@23 $generated@@39 $generated@@89)) (ite (= ($generated@@31 ($generated@@23 $generated@@24 $generated@@86) ($generated@@25 (- $generated@@88 1))) ($generated@@23 $generated@@39 $generated@@89)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@84 ($generated@@22 $generated@@85) ($generated@@23 $generated@@24 $generated@@86) ($generated@@25 $generated@@87) ($generated@@25 $generated@@88) ($generated@@23 $generated@@39 $generated@@89)))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@90 ($generated@@81 $generated@@95 $generated@@92) $generated@@93 $generated@@94) ($generated@@91 $generated@@95 $generated@@92 $generated@@93 $generated@@94))
 :pattern ( ($generated@@90 ($generated@@81 $generated@@95 $generated@@92) $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@49 $generated@@96 $generated@@97) (=> ($generated@@90 $generated@@98 $generated@@99 $generated@@96) ($generated@@90 $generated@@98 $generated@@99 $generated@@97)))
 :pattern ( ($generated@@49 $generated@@96 $generated@@97) ($generated@@90 $generated@@98 $generated@@99 $generated@@96))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (!  (=> ($generated@@49 $generated@@100 $generated@@101) (=> ($generated@@91 $generated@@104 $generated@@102 $generated@@103 $generated@@100) ($generated@@91 $generated@@104 $generated@@102 $generated@@103 $generated@@101)))
 :pattern ( ($generated@@49 $generated@@100 $generated@@101) ($generated@@91 $generated@@104 $generated@@102 $generated@@103 $generated@@100))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 Int) ($generated@@109 Int) ($generated@@110 T@U) ) (! (= ($generated@@21 $generated@@105 ($generated@@22 $generated@@106) $generated@@107 $generated@@108 $generated@@109 $generated@@110) ($generated@@21 $generated@@105 $generated@@106 $generated@@107 $generated@@108 $generated@@109 $generated@@110))
 :pattern ( ($generated@@21 $generated@@105 ($generated@@22 $generated@@106) $generated@@107 $generated@@108 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or (not (= $generated@@111 $generated@@113)) (not true)) (=> (and ($generated@@49 $generated@@111 $generated@@112) ($generated@@49 $generated@@112 $generated@@113)) ($generated@@49 $generated@@111 $generated@@113)))
 :pattern ( ($generated@@49 $generated@@111 $generated@@112) ($generated@@49 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@29 $generated@@114 $generated) (and (= ($generated@@81 $generated@@5 ($generated@@54 $generated@@5 $generated@@114)) $generated@@114) ($generated@@27 $generated@@5 ($generated@@54 $generated@@5 $generated@@114) $generated)))
 :pattern ( ($generated@@29 $generated@@114 $generated))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@29 ($generated@@81 $generated@@117 $generated@@115) $generated@@116) ($generated@@27 $generated@@117 $generated@@115 $generated@@116))
 :pattern ( ($generated@@29 ($generated@@81 $generated@@117 $generated@@115) $generated@@116))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 Int) ($generated@@121 Int) ($generated@@122 T@U) ) (!  (=> (or ($generated@@40 $generated@@118 ($generated@@23 $generated@@24 $generated@@119) ($generated@@25 $generated@@120) ($generated@@25 $generated@@121) $generated@@122) (and (< 1 $generated@@20) (and (and ($generated@@27 $generated@@24 $generated@@119 ($generated@@28 $generated@@118)) ($generated@@29 $generated@@122 $generated@@118)) (and (and (<= ($generated@@25 0) ($generated@@25 $generated@@120)) (<= ($generated@@25 $generated@@120) ($generated@@25 $generated@@121))) (<= ($generated@@25 $generated@@121) ($generated@@30 ($generated@@23 $generated@@24 $generated@@119))))))) (and ($generated@@26 $generated@@118 ($generated@@23 $generated@@24 $generated@@119) ($generated@@25 $generated@@120) ($generated@@25 $generated@@121) $generated@@122) (= ($generated@@38 $generated@@118 ($generated@@23 $generated@@24 $generated@@119) ($generated@@25 $generated@@120) ($generated@@25 $generated@@121) $generated@@122) (> ($generated@@41 ($generated@@25 2) ($generated@@21 $generated@@118 ($generated@@22 $generated@@42) ($generated@@23 $generated@@24 $generated@@119) ($generated@@25 $generated@@120) ($generated@@25 $generated@@121) $generated@@122)) (- $generated@@121 $generated@@120)))))
 :weight 3
 :pattern ( ($generated@@38 $generated@@118 ($generated@@23 $generated@@24 $generated@@119) ($generated@@25 $generated@@120) ($generated@@25 $generated@@121) $generated@@122))
))))
(assert (forall (($generated@@123 T@U) ) (! (<= 0 ($generated@@30 $generated@@123))
 :pattern ( ($generated@@30 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@91 $generated@@24 $generated@@124 ($generated@@28 $generated@@125) $generated@@126) (forall (($generated@@127 Int) ) (!  (=> (and (<= 0 $generated@@127) (< $generated@@127 ($generated@@30 $generated@@124))) ($generated@@90 ($generated@@31 $generated@@124 $generated@@127) $generated@@125 $generated@@126))
 :pattern ( ($generated@@31 $generated@@124 $generated@@127))
)))
 :pattern ( ($generated@@91 $generated@@24 $generated@@124 ($generated@@28 $generated@@125) $generated@@126))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 Int) ($generated@@131 Int) ($generated@@132 T@U) ) (!  (=> (or ($generated@@40 $generated@@128 $generated@@129 $generated@@130 $generated@@131 $generated@@132) (and (< 1 $generated@@20) (and (and ($generated@@27 $generated@@24 $generated@@129 ($generated@@28 $generated@@128)) ($generated@@29 $generated@@132 $generated@@128)) (and (and (<= ($generated@@25 0) $generated@@130) (<= $generated@@130 $generated@@131)) (<= $generated@@131 ($generated@@30 $generated@@129)))))) (and ($generated@@26 $generated@@128 $generated@@129 $generated@@130 $generated@@131 $generated@@132) (= ($generated@@38 $generated@@128 $generated@@129 $generated@@130 $generated@@131 $generated@@132) (> ($generated@@41 ($generated@@25 2) ($generated@@21 $generated@@128 ($generated@@22 $generated@@42) $generated@@129 $generated@@130 $generated@@131 $generated@@132)) (- $generated@@131 $generated@@130)))))
 :pattern ( ($generated@@38 $generated@@128 $generated@@129 $generated@@130 $generated@@131 $generated@@132))
))))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@28 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@28 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@19 ($generated@@28 $generated@@135)) $generated@@1)
 :pattern ( ($generated@@28 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@54 $generated@@137 ($generated@@81 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@81 $generated@@137 $generated@@136))
)))
(assert  (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@138 $generated@@141 $generated@@142 $generated@@143 ($generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@146 $generated@@147) $generated@@144)
 :weight 0
)) (and (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@138 $generated@@148 $generated@@149 $generated@@150 ($generated@@140 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@138 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@138 $generated@@157 $generated@@158 $generated@@159 ($generated@@140 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@138 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Bool) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@8 ($generated@@138 $generated@@52 $generated@@51 $generated@@4 ($generated@@139 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))  (=> (and (or (not (= $generated@@170 $generated@@166)) (not true)) ($generated@@8 ($generated@@54 $generated@@4 ($generated@@50 $generated@@51 $generated@@39 ($generated@@50 $generated@@52 ($generated@@53 $generated@@51 $generated@@39) $generated@@167 $generated@@170) $generated@@168)))) $generated@@169))
 :pattern ( ($generated@@138 $generated@@52 $generated@@51 $generated@@4 ($generated@@139 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Int) ($generated@@176 Int) ($generated@@177 T@U) ) (!  (=> (or ($generated@@26 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@177) (and (< 0 $generated@@20) (and (and ($generated@@27 $generated@@24 $generated@@174 ($generated@@28 $generated@@172)) ($generated@@29 $generated@@177 $generated@@172)) (and (and (<= ($generated@@25 0) $generated@@175) (<= $generated@@175 $generated@@176)) (<= $generated@@176 ($generated@@30 $generated@@174)))))) (and (=> (or (not (= $generated@@175 $generated@@176)) (not true)) ($generated@@26 $generated@@172 $generated@@174 $generated@@175 (- $generated@@176 1) $generated@@177)) (= ($generated@@21 $generated@@172 ($generated@@22 $generated@@173) $generated@@174 $generated@@175 $generated@@176 $generated@@177) (ite (= $generated@@175 $generated@@176) 0 (+ ($generated@@21 $generated@@172 $generated@@173 $generated@@174 $generated@@175 (- $generated@@176 1) $generated@@177) (ite (= ($generated@@31 $generated@@174 (- $generated@@176 1)) $generated@@177) 1 0))))))
 :pattern ( ($generated@@21 $generated@@172 ($generated@@22 $generated@@173) $generated@@174 $generated@@175 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 Int) ($generated@@179 Int) ) (! (= ($generated@@41 $generated@@178 $generated@@179) (* $generated@@178 $generated@@179))
 :pattern ( ($generated@@41 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@29 $generated@@180 ($generated@@28 $generated@@181)) (and (= ($generated@@81 $generated@@24 ($generated@@54 $generated@@24 $generated@@180)) $generated@@180) ($generated@@27 $generated@@24 ($generated@@54 $generated@@24 $generated@@180) ($generated@@28 $generated@@181))))
 :pattern ( ($generated@@29 $generated@@180 ($generated@@28 $generated@@181)))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@81 $generated@@5 ($generated@@9 ($generated@@25 $generated@@182))) ($generated@@23 $generated@@39 ($generated@@81 $generated@@5 ($generated@@9 $generated@@182))))
 :pattern ( ($generated@@81 $generated@@5 ($generated@@9 ($generated@@25 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@81 $generated@@184 ($generated@@23 $generated@@184 $generated@@183)) ($generated@@23 $generated@@39 ($generated@@81 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@81 $generated@@184 ($generated@@23 $generated@@184 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= ($generated@@30 $generated@@185) 0) (= $generated@@185 $generated@@48))
 :pattern ( ($generated@@30 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! ($generated@@91 $generated@@5 $generated@@187 $generated $generated@@186)
 :pattern ( ($generated@@91 $generated@@5 $generated@@187 $generated $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@27 $generated@@24 $generated@@188 ($generated@@28 $generated@@189)) (forall (($generated@@190 Int) ) (!  (=> (and (<= 0 $generated@@190) (< $generated@@190 ($generated@@30 $generated@@188))) ($generated@@29 ($generated@@31 $generated@@188 $generated@@190) $generated@@189))
 :pattern ( ($generated@@31 $generated@@188 $generated@@190))
)))
 :pattern ( ($generated@@27 $generated@@24 $generated@@188 ($generated@@28 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ) (! ($generated@@27 $generated@@5 $generated@@191 $generated)
 :pattern ( ($generated@@27 $generated@@5 $generated@@191 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@203  (=> (= $generated@@192 ($generated@@139 $generated@@193 $generated@@194 $generated@@2 false)) (=> (and ($generated@@91 $generated@@24 $generated@@195 ($generated@@28 $generated@@196) $generated@@194) (= $generated@@197 ($generated@@25 0))) (=> (and (and ($generated@@91 $generated@@5 ($generated@@9 $generated@@197) $generated $generated@@194) (= $generated@@198 ($generated@@30 $generated@@195))) (and ($generated@@91 $generated@@5 ($generated@@9 $generated@@198) $generated $generated@@194) ($generated@@90 $generated@@199 $generated@@196 $generated@@194))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@25 0) $generated@@197)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@197 $generated@@198)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@198 ($generated@@30 $generated@@195))))))))))
(let (($generated@@204  (=> (and ($generated@@200 $generated@@194) ($generated@@201 $generated@@194)) (=> (and (and (and ($generated@@27 $generated@@24 $generated@@195 ($generated@@28 $generated@@196)) ($generated@@91 $generated@@24 $generated@@195 ($generated@@28 $generated@@196) $generated@@194)) (and ($generated@@29 $generated@@199 $generated@@196) ($generated@@90 $generated@@199 $generated@@196 $generated@@194))) (and (and ($generated@@29 $generated@@202 $generated@@196) ($generated@@90 $generated@@202 $generated@@196 $generated@@194)) (and (= 2 $generated@@20) (= (ControlFlow 0 5) 2)))) $generated@@203))))
$generated@@204)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
