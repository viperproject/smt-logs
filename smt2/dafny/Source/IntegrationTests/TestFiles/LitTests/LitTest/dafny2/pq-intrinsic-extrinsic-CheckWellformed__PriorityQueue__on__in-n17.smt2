(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@38 (T@U T@U) Int)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@52 (T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@63 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@79 (T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@96 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@152 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (= ($generated@@5 $generated@@28) 3))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@30 T@U) ) (!  (=> (or ($generated@@24 $generated@@30) (and (< 1 $generated@@22) ($generated@@25 $generated@@30 $generated@@26))) ($generated@@27 $generated@@28 ($generated@@23 $generated@@30) ($generated@@29 $generated)))
 :pattern ( ($generated@@23 $generated@@30))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@37 T@U) ) (!  (=> (or ($generated@@32 $generated@@37) (and (< 2 $generated@@22) (and ($generated@@25 $generated@@37 $generated@@26) (not ($generated@@33 ($generated@@23 $generated@@37) $generated@@34))))) (and ($generated@@35 $generated@@37) (= ($generated@@31 $generated@@37) ($generated@@36 $generated@@37))))
 :pattern ( ($generated@@31 $generated@@37))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@40 T@U) ) (!  (=> (or ($generated@@32 $generated@@40) (and (< 2 $generated@@22) (and ($generated@@25 $generated@@40 $generated@@26) (not ($generated@@33 ($generated@@23 $generated@@40) $generated@@34))))) (let (($generated@@41 ($generated@@31 $generated@@40)))
 (and (> ($generated@@38 ($generated@@23 $generated@@40) ($generated@@39 $generated@@7 ($generated@@11 $generated@@41))) 0) (forall (($generated@@42 T@U) ) (!  (=> (> ($generated@@38 ($generated@@23 $generated@@40) ($generated@@39 $generated@@7 $generated@@42)) 0) (<= $generated@@41 ($generated@@12 $generated@@42)))
 :pattern ( ($generated@@38 ($generated@@23 $generated@@40) ($generated@@39 $generated@@7 $generated@@42)))
)))))
 :pattern ( ($generated@@31 $generated@@40))
))))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@44 ($generated@@29 $generated@@45)) ($generated@@43 $generated@@44))
 :pattern ( ($generated@@27 $generated@@28 $generated@@44 ($generated@@29 $generated@@45)))
)))
(assert (forall (($generated@@49 T@U) ) (!  (=> (or ($generated@@35 $generated@@49) (and ($generated@@25 $generated@@49 $generated@@46) (and ($generated@@47 $generated@@49) (not ($generated@@33 ($generated@@48 $generated@@49) $generated@@34))))) (let (($generated@@50 ($generated@@36 $generated@@49)))
 (and (> ($generated@@38 ($generated@@48 $generated@@49) ($generated@@39 $generated@@7 ($generated@@11 $generated@@50))) 0) (forall (($generated@@51 T@U) ) (!  (=> (> ($generated@@38 ($generated@@48 $generated@@49) ($generated@@39 $generated@@7 $generated@@51)) 0) (<= $generated@@50 ($generated@@12 $generated@@51)))
 :pattern ( ($generated@@38 ($generated@@48 $generated@@49) ($generated@@39 $generated@@7 $generated@@51)))
)))))
 :pattern ( ($generated@@36 $generated@@49))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@52 $generated@@53 $generated@@26 $generated@@54) ($generated@@52 $generated@@53 $generated@@46 $generated@@54))
 :pattern ( ($generated@@52 $generated@@53 $generated@@26 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@55 $generated@@57 $generated@@56) $generated@@56)
 :pattern ( ($generated@@55 $generated@@57 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@39 $generated@@60 ($generated@@58 $generated@@60 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@58 $generated@@60 $generated@@59))
)))
(assert (= ($generated@@5 $generated@@61) 4))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@62 T@U) ) (!  (=> (or ($generated@@32 ($generated@@55 $generated@@61 $generated@@62)) (and (< 2 $generated@@22) (and ($generated@@25 $generated@@62 $generated@@26) (not ($generated@@33 ($generated@@23 ($generated@@55 $generated@@61 $generated@@62)) $generated@@34))))) (and ($generated@@35 ($generated@@55 $generated@@61 $generated@@62)) (= ($generated@@31 ($generated@@55 $generated@@61 $generated@@62)) ($generated@@36 ($generated@@55 $generated@@61 $generated@@62)))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@55 $generated@@61 $generated@@62)))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@52 ($generated@@39 $generated@@67 $generated@@64) $generated@@65 $generated@@66) ($generated@@63 $generated@@67 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@52 ($generated@@39 $generated@@67 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> (or ($generated@@68 $generated@@69) ($generated@@25 $generated@@69 $generated@@46)) ($generated@@27 $generated@@28 ($generated@@48 $generated@@69) ($generated@@29 $generated)))
 :pattern ( ($generated@@48 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@33 $generated@@70 $generated@@71) (= $generated@@70 $generated@@71))
 :pattern ( ($generated@@33 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@72 ($generated@@29 $generated@@73)) (forall (($generated@@74 T@U) ) (!  (=> (< 0 ($generated@@38 $generated@@72 $generated@@74)) ($generated@@25 $generated@@74 $generated@@73))
 :pattern ( ($generated@@38 $generated@@72 $generated@@74))
)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@72 ($generated@@29 $generated@@73)))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@25 $generated@@75 $generated) (and (= ($generated@@39 $generated@@7 ($generated@@58 $generated@@7 $generated@@75)) $generated@@75) ($generated@@27 $generated@@7 ($generated@@58 $generated@@7 $generated@@75) $generated)))
 :pattern ( ($generated@@25 $generated@@75 $generated))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@25 ($generated@@39 $generated@@78 $generated@@76) $generated@@77) ($generated@@27 $generated@@78 $generated@@76 $generated@@77))
 :pattern ( ($generated@@25 ($generated@@39 $generated@@78 $generated@@76) $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@43 $generated@@80) (forall (($generated@@81 T@U) ) (!  (and (<= 0 ($generated@@38 $generated@@80 $generated@@81)) (<= ($generated@@38 $generated@@80 $generated@@81) ($generated@@79 $generated@@80)))
 :pattern ( ($generated@@38 $generated@@80 $generated@@81))
)))
 :pattern ( ($generated@@43 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (! (<= 0 ($generated@@79 $generated@@82))
 :pattern ( ($generated@@79 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@38 $generated@@34 $generated@@83) 0)
 :pattern ( ($generated@@38 $generated@@34 $generated@@83))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@84 T@U) ) (!  (=> (or ($generated@@24 $generated@@84) (and (< 1 $generated@@22) ($generated@@25 $generated@@84 $generated@@26))) (and ($generated@@68 $generated@@84) (= ($generated@@23 $generated@@84) ($generated@@48 $generated@@84))))
 :pattern ( ($generated@@23 $generated@@84))
))))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@85 ($generated@@29 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@29 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@21 ($generated@@29 $generated@@87)) $generated@@1)
 :pattern ( ($generated@@29 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@58 $generated@@89 ($generated@@39 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@39 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (!  (and (= (= ($generated@@79 $generated@@90) 0) (= $generated@@90 $generated@@34)) (=> (or (not (= ($generated@@79 $generated@@90) 0)) (not true)) (exists (($generated@@91 T@U) ) (! (< 0 ($generated@@38 $generated@@90 $generated@@91))
 :pattern ( ($generated@@38 $generated@@90 $generated@@91))
))))
 :pattern ( ($generated@@79 $generated@@90))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@92 $generated@@102 $generated@@103 $generated@@104 ($generated@@98 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@107 $generated@@108) $generated@@105)
 :weight 0
)) (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@92 $generated@@109 $generated@@110 $generated@@111 ($generated@@98 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@92 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@92 $generated@@118 $generated@@119 $generated@@120 ($generated@@98 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@92 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)))) (= ($generated@@5 $generated@@93) 5)) (= ($generated@@5 $generated@@94) 6)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@96 $generated@@127 $generated@@128 ($generated@@99 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@129) $generated@@131) $generated@@129)
 :weight 0
))) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 $generated@@132 $generated@@133 ($generated@@99 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@132 $generated@@133 $generated@@135 $generated@@137)))
 :weight 0
))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (= ($generated@@5 ($generated@@97 $generated@@138 $generated@@139)) 7))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@97 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@97 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Bool) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@10 ($generated@@92 $generated@@93 $generated@@94 $generated@@6 ($generated@@95 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))  (=> (and (or (not (= $generated@@148 $generated@@144)) (not true)) ($generated@@10 ($generated@@58 $generated@@6 ($generated@@96 $generated@@94 $generated@@61 ($generated@@96 $generated@@93 ($generated@@97 $generated@@94 $generated@@61) $generated@@145 $generated@@148) $generated@@146)))) $generated@@147))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94 $generated@@6 ($generated@@95 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@25 $generated@@150 ($generated@@29 $generated@@151)) (and (= ($generated@@39 $generated@@28 ($generated@@58 $generated@@28 $generated@@150)) $generated@@150) ($generated@@27 $generated@@28 ($generated@@58 $generated@@28 $generated@@150) ($generated@@29 $generated@@151))))
 :pattern ( ($generated@@25 $generated@@150 ($generated@@29 $generated@@151)))
)))
(assert (= ($generated@@21 $generated@@26) $generated@@3))
(assert (= ($generated@@152 $generated@@26) $generated@@4))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@25 $generated@@153 $generated@@26)  (and ($generated@@25 $generated@@153 $generated@@46) ($generated@@47 $generated@@153)))
 :pattern ( ($generated@@25 $generated@@153 $generated@@26))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@39 $generated@@155 ($generated@@55 $generated@@155 $generated@@154)) ($generated@@55 $generated@@61 ($generated@@39 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@39 $generated@@155 ($generated@@55 $generated@@155 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@33 $generated@@156 $generated@@157) (forall (($generated@@158 T@U) ) (! (= ($generated@@38 $generated@@156 $generated@@158) ($generated@@38 $generated@@157 $generated@@158))
 :pattern ( ($generated@@38 $generated@@156 $generated@@158))
 :pattern ( ($generated@@38 $generated@@157 $generated@@158))
)))
 :pattern ( ($generated@@33 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@63 $generated@@28 $generated@@159 ($generated@@29 $generated@@160) $generated@@161) (forall (($generated@@162 T@U) ) (!  (=> (< 0 ($generated@@38 $generated@@159 $generated@@162)) ($generated@@52 $generated@@162 $generated@@160 $generated@@161))
 :pattern ( ($generated@@38 $generated@@159 $generated@@162))
)))
 :pattern ( ($generated@@63 $generated@@28 $generated@@159 ($generated@@29 $generated@@160) $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! ($generated@@63 $generated@@7 $generated@@164 $generated $generated@@163)
 :pattern ( ($generated@@63 $generated@@7 $generated@@164 $generated $generated@@163))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@165 T@U) ) (!  (=> (or ($generated@@24 ($generated@@55 $generated@@61 $generated@@165)) (and (< 1 $generated@@22) ($generated@@25 $generated@@165 $generated@@26))) (and ($generated@@68 ($generated@@55 $generated@@61 $generated@@165)) (= ($generated@@23 ($generated@@55 $generated@@61 $generated@@165)) ($generated@@48 ($generated@@55 $generated@@61 $generated@@165)))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@55 $generated@@61 $generated@@165)))
))))
(assert (forall (($generated@@166 T@U) ) (! ($generated@@27 $generated@@7 $generated@@166 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@166 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@176 true))
(let (($generated@@177 true))
(let (($generated@@178  (=> (and (>= 0 ($generated@@38 ($generated@@23 $generated@@167) ($generated@@39 $generated@@7 ($generated@@11 $generated@@168)))) (= (ControlFlow 0 11) 7)) $generated@@177)))
(let (($generated@@179  (=> (and (> ($generated@@38 ($generated@@23 $generated@@167) ($generated@@39 $generated@@7 ($generated@@11 $generated@@168))) 0) (= (ControlFlow 0 10) 7)) $generated@@177)))
(let (($generated@@180  (=> (and ($generated@@52 $generated@@167 $generated@@26 $generated@@169) ($generated@@24 $generated@@167)) (and (=> (= (ControlFlow 0 12) 10) $generated@@179) (=> (= (ControlFlow 0 12) 11) $generated@@178)))))
(let (($generated@@181  (=> (> ($generated@@38 ($generated@@23 $generated@@167) ($generated@@39 $generated@@7 ($generated@@11 $generated@@170))) 0) (and (=> (= (ControlFlow 0 13) 12) $generated@@180) (=> (= (ControlFlow 0 13) 9) $generated@@176)))))
(let (($generated@@182  (=> (and (>= 0 ($generated@@38 ($generated@@23 $generated@@167) ($generated@@39 $generated@@7 ($generated@@11 $generated@@170)))) (= (ControlFlow 0 8) 7)) $generated@@177)))
(let (($generated@@183  (=> ($generated@@52 $generated@@167 $generated@@26 $generated@@169) (and (=> (= (ControlFlow 0 14) (- 0 16)) (not ($generated@@33 ($generated@@23 $generated@@167) $generated@@34))) (=> (not ($generated@@33 ($generated@@23 $generated@@167) $generated@@34)) (and (=> (= (ControlFlow 0 14) (- 0 15)) (= $generated@@167 $generated@@167)) (=> (= $generated@@167 $generated@@167) (=> (or (= $generated@@167 $generated@@167) ($generated@@32 $generated@@167)) (=> (and (= $generated@@171 ($generated@@31 $generated@@167)) ($generated@@32 $generated@@167)) (=> (and (and ($generated@@27 $generated@@7 ($generated@@11 $generated@@171) $generated) (= $generated@@170 $generated@@171)) (and ($generated@@52 $generated@@167 $generated@@26 $generated@@169) ($generated@@24 $generated@@167))) (and (=> (= (ControlFlow 0 14) 13) $generated@@181) (=> (= (ControlFlow 0 14) 8) $generated@@182))))))))))))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@185 ($generated@@31 $generated@@167)))
(> ($generated@@38 ($generated@@23 $generated@@167) ($generated@@39 $generated@@7 ($generated@@11 $generated@@185))) 0))) (=> (let (($generated@@186 ($generated@@31 $generated@@167)))
(> ($generated@@38 ($generated@@23 $generated@@167) ($generated@@39 $generated@@7 ($generated@@11 $generated@@186))) 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@187 ($generated@@31 $generated@@167)))
(forall (($generated@@188 Int) ) (!  (=> (> ($generated@@38 ($generated@@23 $generated@@167) ($generated@@39 $generated@@7 ($generated@@11 $generated@@188))) 0) (<= $generated@@187 $generated@@188))
 :pattern ( ($generated@@38 ($generated@@23 $generated@@167) ($generated@@39 $generated@@7 ($generated@@11 $generated@@188))))
))))))))
(let (($generated@@189  (=> ($generated@@52 $generated@@167 $generated@@46 $generated@@169) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@47 $generated@@167)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not ($generated@@33 ($generated@@48 $generated@@167) $generated@@34))) (=> (and (and (and ($generated@@47 $generated@@167) (not ($generated@@33 ($generated@@48 $generated@@167) $generated@@34))) ($generated@@35 $generated@@167)) (and (and (= ($generated@@31 $generated@@167) ($generated@@36 $generated@@167)) ($generated@@35 $generated@@167)) (and ($generated@@27 $generated@@7 ($generated@@11 ($generated@@31 $generated@@167)) $generated) (= (ControlFlow 0 4) 2)))) $generated@@184))))))
(let (($generated@@190  (=> (and (and (= $generated@@172 ($generated@@95 $generated@@173 $generated@@169 $generated@@2 false)) ($generated@@52 $generated@@167 $generated@@26 $generated@@169)) (and ($generated@@24 $generated@@167) (not ($generated@@33 ($generated@@23 $generated@@167) $generated@@34)))) (and (=> (= (ControlFlow 0 17) 14) $generated@@183) (=> (= (ControlFlow 0 17) 4) $generated@@189)))))
(let (($generated@@191  (=> (and (and (and ($generated@@174 $generated@@169) ($generated@@175 $generated@@169)) ($generated@@25 $generated@@167 $generated@@26)) (and (= 2 $generated@@22) (= (ControlFlow 0 18) 17))) $generated@@190)))
$generated@@191)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
