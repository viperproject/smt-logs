(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@41 (T@U Bool Int Int) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (Int) Int)
(declare-fun $generated@@44 (Int Int) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () Bool)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@U) Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U T@U) Bool)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@T T@T) T@T)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@200 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@20 ($generated@@19 $generated@@21 $generated@@22) $generated@@22)
 :pattern ( ($generated@@19 $generated@@21 $generated@@22))
)))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> ($generated@@20 $generated@@23 $generated@@25) ($generated@@20 ($generated@@19 $generated@@23 $generated@@24) $generated@@25))
 :pattern ( ($generated@@19 $generated@@23 $generated@@24) ($generated@@20 $generated@@23 $generated@@25))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> ($generated@@20 $generated@@27 $generated@@29) ($generated@@20 ($generated@@26 $generated@@27 $generated@@28) $generated@@29))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28) ($generated@@20 $generated@@27 $generated@@29))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@20 $generated@@31 $generated@@32) ($generated@@20 ($generated@@26 $generated@@30 $generated@@31) $generated@@32))
 :pattern ( ($generated@@26 $generated@@30 $generated@@31) ($generated@@20 $generated@@31 $generated@@32))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! ($generated@@33 $generated@@5 $generated@@35 $generated@@34 $generated@@36)
 :pattern ( ($generated@@33 $generated@@5 $generated@@35 $generated@@34 $generated@@36))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@20 ($generated@@19 $generated@@37 $generated@@38) $generated@@39)  (or (= $generated@@39 $generated@@38) ($generated@@20 $generated@@37 $generated@@39)))
 :pattern ( ($generated@@20 ($generated@@19 $generated@@37 $generated@@38) $generated@@39))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@48 T@U) ($generated@@49 Int) ($generated@@50 Int) ) (!  (=> (or ($generated@@44 $generated@@49 ($generated@@43 $generated@@50)) (and (< 0 $generated@@40) (and (<= ($generated@@43 0) $generated@@49) (<= ($generated@@43 0) $generated@@50)))) (and (=> (or (not (= ($generated@@43 $generated@@50) ($generated@@43 0))) (not true)) ($generated@@44 (+ $generated@@49 1) ($generated@@43 (- $generated@@50 1)))) (= ($generated@@41 ($generated@@42 $generated@@48) true $generated@@49 ($generated@@43 $generated@@50)) (ite (= ($generated@@43 $generated@@50) ($generated@@43 0)) $generated@@45 ($generated@@26 ($generated@@41 ($generated@@42 $generated@@48) $generated@@46 (+ $generated@@49 1) ($generated@@43 (- $generated@@50 1))) ($generated@@19 $generated@@45 ($generated@@47 $generated@@5 ($generated@@9 $generated@@49))))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@42 $generated@@48) true $generated@@49 ($generated@@43 $generated@@50)))
))))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> ($generated@@20 $generated@@53 $generated@@54) (not ($generated@@20 ($generated@@51 $generated@@52 $generated@@53) $generated@@54)))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53) ($generated@@20 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ) (!  (not ($generated@@20 $generated@@45 $generated@@55))
 :pattern ( ($generated@@20 $generated@@45 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@20 ($generated@@56 $generated@@57 $generated@@58) $generated@@59)  (and ($generated@@20 $generated@@57 $generated@@59) ($generated@@20 $generated@@58 $generated@@59)))
 :pattern ( ($generated@@20 ($generated@@56 $generated@@57 $generated@@58) $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@26 ($generated@@26 $generated@@60 $generated@@61) $generated@@61) ($generated@@26 $generated@@60 $generated@@61))
 :pattern ( ($generated@@26 ($generated@@26 $generated@@60 $generated@@61) $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@56 ($generated@@56 $generated@@62 $generated@@63) $generated@@63) ($generated@@56 $generated@@62 $generated@@63))
 :pattern ( ($generated@@56 ($generated@@56 $generated@@62 $generated@@63) $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@20 ($generated@@51 $generated@@64 $generated@@65) $generated@@66)  (and ($generated@@20 $generated@@64 $generated@@66) (not ($generated@@20 $generated@@65 $generated@@66))))
 :pattern ( ($generated@@20 ($generated@@51 $generated@@64 $generated@@65) $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (and (= (= ($generated@@67 $generated@@68) 0) (= $generated@@68 $generated@@45)) (=> (or (not (= ($generated@@67 $generated@@68) 0)) (not true)) (exists (($generated@@69 T@U) ) (! ($generated@@20 $generated@@68 $generated@@69)
 :pattern ( ($generated@@20 $generated@@68 $generated@@69))
))))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= (+ ($generated@@67 ($generated@@26 $generated@@70 $generated@@71)) ($generated@@67 ($generated@@56 $generated@@70 $generated@@71))) (+ ($generated@@67 $generated@@70) ($generated@@67 $generated@@71)))
 :pattern ( ($generated@@67 ($generated@@26 $generated@@70 $generated@@71)))
 :pattern ( ($generated@@67 ($generated@@56 $generated@@70 $generated@@71)))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@43 $generated@@72) $generated@@72)
 :pattern ( ($generated@@43 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (= ($generated@@3 $generated@@77) 3))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@79 T@U) ($generated@@80 Bool) ($generated@@81 Int) ($generated@@82 Int) ) (!  (=> (or ($generated@@44 $generated@@81 $generated@@82) (and (< 0 $generated@@40) (and (<= ($generated@@43 0) $generated@@81) (<= ($generated@@43 0) $generated@@82)))) (and (and (= ($generated@@67 ($generated@@41 $generated@@79 $generated@@80 $generated@@81 $generated@@82)) $generated@@82) (forall (($generated@@83 T@U) ) (! (= ($generated@@20 ($generated@@41 $generated@@79 $generated@@80 $generated@@81 $generated@@82) ($generated@@47 $generated@@5 $generated@@83))  (and (<= $generated@@81 ($generated@@10 $generated@@83)) (< ($generated@@10 $generated@@83) (+ $generated@@81 $generated@@82))))
 :pattern ( ($generated@@20 ($generated@@41 $generated@@79 $generated@@80 $generated@@81 $generated@@82) ($generated@@47 $generated@@5 $generated@@83)))
))) ($generated@@76 $generated@@77 ($generated@@41 $generated@@79 $generated@@80 $generated@@81 $generated@@82) ($generated@@78 $generated@@34))))
 :pattern ( ($generated@@41 $generated@@79 $generated@@80 $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@47 $generated@@86 ($generated@@84 $generated@@86 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@84 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (or (not ($generated@@20 $generated@@88 $generated@@90)) (not ($generated@@20 $generated@@89 $generated@@90)))
 :pattern ( ($generated@@20 $generated@@88 $generated@@90))
 :pattern ( ($generated@@20 $generated@@89 $generated@@90))
)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@76 $generated@@77 $generated@@92 ($generated@@78 $generated@@93)) (forall (($generated@@94 T@U) ) (!  (=> ($generated@@20 $generated@@92 $generated@@94) ($generated@@91 $generated@@94 $generated@@93))
 :pattern ( ($generated@@20 $generated@@92 $generated@@94))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@92 ($generated@@78 $generated@@93)))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@76 $generated@@5 $generated@@95 $generated@@34) (<= ($generated@@43 0) ($generated@@10 $generated@@95)))
 :pattern ( ($generated@@76 $generated@@5 $generated@@95 $generated@@34))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@96 ($generated@@47 $generated@@100 $generated@@97) $generated@@98 $generated@@99) ($generated@@33 $generated@@100 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@96 ($generated@@47 $generated@@100 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@91 $generated@@101 $generated@@34) (and (= ($generated@@47 $generated@@5 ($generated@@84 $generated@@5 $generated@@101)) $generated@@101) ($generated@@76 $generated@@5 ($generated@@84 $generated@@5 $generated@@101) $generated@@34)))
 :pattern ( ($generated@@91 $generated@@101 $generated@@34))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@20 ($generated@@26 $generated@@102 $generated@@103) $generated@@104)  (or ($generated@@20 $generated@@102 $generated@@104) ($generated@@20 $generated@@103 $generated@@104)))
 :pattern ( ($generated@@20 ($generated@@26 $generated@@102 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@87 $generated@@105 $generated@@106) (and (= ($generated@@51 ($generated@@26 $generated@@105 $generated@@106) $generated@@105) $generated@@106) (= ($generated@@51 ($generated@@26 $generated@@105 $generated@@106) $generated@@106) $generated@@105)))
 :pattern ( ($generated@@26 $generated@@105 $generated@@106))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@107 T@U) ($generated@@108 Int) ($generated@@109 Int) ) (!  (=> (or ($generated@@44 $generated@@108 $generated@@109) (and (< 0 $generated@@40) (and (<= ($generated@@43 0) $generated@@108) (<= ($generated@@43 0) $generated@@109)))) (and (=> (or (not (= $generated@@109 ($generated@@43 0))) (not true)) ($generated@@44 (+ $generated@@108 1) (- $generated@@109 1))) (= ($generated@@41 ($generated@@42 $generated@@107) true $generated@@108 $generated@@109) (ite (= $generated@@109 ($generated@@43 0)) $generated@@45 ($generated@@26 ($generated@@41 $generated@@107 $generated@@46 (+ $generated@@108 1) (- $generated@@109 1)) ($generated@@19 $generated@@45 ($generated@@47 $generated@@5 ($generated@@9 $generated@@108))))))))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@107) true $generated@@108 $generated@@109))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (and (= (+ (+ ($generated@@67 ($generated@@51 $generated@@110 $generated@@111)) ($generated@@67 ($generated@@51 $generated@@111 $generated@@110))) ($generated@@67 ($generated@@56 $generated@@110 $generated@@111))) ($generated@@67 ($generated@@26 $generated@@110 $generated@@111))) (= ($generated@@67 ($generated@@51 $generated@@110 $generated@@111)) (- ($generated@@67 $generated@@110) ($generated@@67 ($generated@@56 $generated@@110 $generated@@111)))))
 :pattern ( ($generated@@67 ($generated@@51 $generated@@110 $generated@@111)))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@91 ($generated@@47 $generated@@114 $generated@@112) $generated@@113) ($generated@@76 $generated@@114 $generated@@112 $generated@@113))
 :pattern ( ($generated@@91 ($generated@@47 $generated@@114 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (<= 0 ($generated@@67 $generated@@115))
 :pattern ( ($generated@@67 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@33 $generated@@77 $generated@@116 ($generated@@78 $generated@@117) $generated@@118) (forall (($generated@@119 T@U) ) (!  (=> ($generated@@20 $generated@@116 $generated@@119) ($generated@@96 $generated@@119 $generated@@117 $generated@@118))
 :pattern ( ($generated@@20 $generated@@116 $generated@@119))
)))
 :pattern ( ($generated@@33 $generated@@77 $generated@@116 ($generated@@78 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@78 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@78 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@78 $generated@@123)) $generated)
 :pattern ( ($generated@@78 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@84 $generated@@125 ($generated@@47 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@47 $generated@@125 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@26 $generated@@126 ($generated@@26 $generated@@126 $generated@@127)) ($generated@@26 $generated@@126 $generated@@127))
 :pattern ( ($generated@@26 $generated@@126 ($generated@@26 $generated@@126 $generated@@127)))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@56 $generated@@128 ($generated@@56 $generated@@128 $generated@@129)) ($generated@@56 $generated@@128 $generated@@129))
 :pattern ( ($generated@@56 $generated@@128 ($generated@@56 $generated@@128 $generated@@129)))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@130 T@U) ($generated@@131 Int) ($generated@@132 Int) ) (!  (=> (or ($generated@@44 ($generated@@43 $generated@@131) ($generated@@43 $generated@@132)) (and (< 0 $generated@@40) (and (<= ($generated@@43 0) $generated@@131) (<= ($generated@@43 0) $generated@@132)))) (and (=> (or (not (= ($generated@@43 $generated@@132) ($generated@@43 0))) (not true)) ($generated@@44 ($generated@@43 (+ $generated@@131 1)) ($generated@@43 (- $generated@@132 1)))) (= ($generated@@41 ($generated@@42 $generated@@130) true ($generated@@43 $generated@@131) ($generated@@43 $generated@@132)) (ite (= ($generated@@43 $generated@@132) ($generated@@43 0)) $generated@@45 ($generated@@26 ($generated@@41 ($generated@@42 $generated@@130) $generated@@46 ($generated@@43 (+ $generated@@131 1)) ($generated@@43 (- $generated@@132 1))) ($generated@@19 $generated@@45 ($generated@@47 $generated@@5 ($generated@@9 ($generated@@43 $generated@@131)))))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@42 $generated@@130) true ($generated@@43 $generated@@131) ($generated@@43 $generated@@132)))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 Bool) ($generated@@135 Int) ($generated@@136 Int) ) (! (= ($generated@@41 ($generated@@42 $generated@@133) $generated@@134 $generated@@135 $generated@@136) ($generated@@41 $generated@@133 $generated@@134 $generated@@135 $generated@@136))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@133) $generated@@134 $generated@@135 $generated@@136))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@137 $generated@@148 $generated@@149 $generated@@150 ($generated@@144 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@153 $generated@@154) $generated@@151)
 :weight 0
)) (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@137 $generated@@155 $generated@@156 $generated@@157 ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@137 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@137 $generated@@164 $generated@@165 $generated@@166 ($generated@@144 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@171 $generated@@172) ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@171 $generated@@172)))
 :weight 0
)))) (= ($generated@@3 $generated@@138) 4)) (= ($generated@@3 $generated@@139) 5)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@141 $generated@@173 $generated@@174 ($generated@@145 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@175) $generated@@177) $generated@@175)
 :weight 0
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or (= $generated@@182 $generated@@183) (= ($generated@@141 $generated@@178 $generated@@179 ($generated@@145 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@180) $generated@@183) ($generated@@141 $generated@@178 $generated@@179 $generated@@181 $generated@@183)))
 :weight 0
))) (= ($generated@@3 $generated@@142) 6)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@3 ($generated@@143 $generated@@184 $generated@@185)) 7))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@146 ($generated@@143 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@143 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@147 ($generated@@143 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@143 $generated@@188 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 Bool) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@8 ($generated@@137 $generated@@138 $generated@@139 $generated@@4 ($generated@@140 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@194 $generated@@195))  (=> (and (or (not (= $generated@@194 $generated@@190)) (not true)) ($generated@@8 ($generated@@84 $generated@@4 ($generated@@141 $generated@@139 $generated@@142 ($generated@@141 $generated@@138 ($generated@@143 $generated@@139 $generated@@142) $generated@@191 $generated@@194) $generated@@192)))) $generated@@193))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139 $generated@@4 ($generated@@140 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@91 $generated@@196 ($generated@@78 $generated@@197)) (and (= ($generated@@47 $generated@@77 ($generated@@84 $generated@@77 $generated@@196)) $generated@@196) ($generated@@76 $generated@@77 ($generated@@84 $generated@@77 $generated@@196) ($generated@@78 $generated@@197))))
 :pattern ( ($generated@@91 $generated@@196 ($generated@@78 $generated@@197)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@20 $generated@@198 $generated@@199) (= ($generated@@67 ($generated@@19 $generated@@198 $generated@@199)) ($generated@@67 $generated@@198)))
 :pattern ( ($generated@@67 ($generated@@19 $generated@@198 $generated@@199)))
)))
(assert (= ($generated@@122 $generated@@34) $generated@@1))
(assert (= ($generated@@200 $generated@@34) $generated@@2))
(assert (forall (($generated@@201 Int) ) (! (= ($generated@@47 $generated@@5 ($generated@@9 ($generated@@43 $generated@@201))) ($generated@@73 $generated@@142 ($generated@@47 $generated@@5 ($generated@@9 $generated@@201))))
 :pattern ( ($generated@@47 $generated@@5 ($generated@@9 ($generated@@43 $generated@@201))))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@T) ) (! (= ($generated@@47 $generated@@203 ($generated@@73 $generated@@203 $generated@@202)) ($generated@@73 $generated@@142 ($generated@@47 $generated@@203 $generated@@202)))
 :pattern ( ($generated@@47 $generated@@203 ($generated@@73 $generated@@203 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (not ($generated@@20 $generated@@204 $generated@@205)) (= ($generated@@67 ($generated@@19 $generated@@204 $generated@@205)) (+ ($generated@@67 $generated@@204) 1)))
 :pattern ( ($generated@@67 ($generated@@19 $generated@@204 $generated@@205)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@217 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@218 true))
(let (($generated@@219  (=> (and (< $generated@@206 $generated@@207) (= (ControlFlow 0 12) 10)) $generated@@218)))
(let (($generated@@220  (=> (and (<= $generated@@207 $generated@@206) (= (ControlFlow 0 11) 10)) $generated@@218)))
(let (($generated@@221  (=> ($generated@@76 $generated@@77 ($generated@@41 ($generated@@42 $generated@@208) $generated@@46 $generated@@207 $generated@@209) ($generated@@78 $generated@@34)) (=> (and ($generated@@76 $generated@@77 $generated@@210 ($generated@@78 $generated@@34)) (= ($generated@@67 $generated@@210) $generated@@209)) (and (=> (= (ControlFlow 0 13) 11) $generated@@220) (=> (= (ControlFlow 0 13) 12) $generated@@219))))))
(let (($generated@@222  (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@67 $generated@@210) $generated@@209)) (=> (= ($generated@@67 $generated@@210) $generated@@209) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@223 Int) ) (! (= ($generated@@20 $generated@@210 ($generated@@47 $generated@@5 ($generated@@9 $generated@@223)))  (and (<= $generated@@207 $generated@@223) (< $generated@@223 (+ $generated@@207 $generated@@209))))
 :pattern ( ($generated@@20 $generated@@210 ($generated@@47 $generated@@5 ($generated@@9 $generated@@223))))
)))))))
(let (($generated@@224  (=> (or (not (= $generated@@209 ($generated@@43 0))) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@76 $generated@@5 ($generated@@9 (+ $generated@@207 1)) $generated@@34)) (=> ($generated@@76 $generated@@5 ($generated@@9 (+ $generated@@207 1)) $generated@@34) (=> (and (= $generated@@211 (+ $generated@@207 1)) ($generated@@33 $generated@@5 ($generated@@9 $generated@@211) $generated@@34 $generated@@212)) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@76 $generated@@5 ($generated@@9 (- $generated@@209 1)) $generated@@34)) (=> ($generated@@76 $generated@@5 ($generated@@9 (- $generated@@209 1)) $generated@@34) (=> (and (= $generated@@213 (- $generated@@209 1)) ($generated@@33 $generated@@5 ($generated@@9 $generated@@213) $generated@@34 $generated@@212)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@209) (= $generated@@213 $generated@@209))) (=> (or (<= 0 $generated@@209) (= $generated@@213 $generated@@209)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< $generated@@213 $generated@@209)) (=> (< $generated@@213 $generated@@209) (=> (and ($generated@@44 (+ $generated@@207 1) (- $generated@@209 1)) (= ($generated@@41 ($generated@@42 $generated@@208) $generated@@46 $generated@@207 $generated@@209) ($generated@@26 ($generated@@41 ($generated@@42 $generated@@208) $generated@@46 (+ $generated@@207 1) (- $generated@@209 1)) ($generated@@19 $generated@@45 ($generated@@47 $generated@@5 ($generated@@9 $generated@@207)))))) (=> (and (and ($generated@@44 (+ $generated@@207 1) (- $generated@@209 1)) ($generated@@76 $generated@@77 ($generated@@41 ($generated@@42 $generated@@208) $generated@@46 $generated@@207 $generated@@209) ($generated@@78 $generated@@34))) (and (= ($generated@@41 ($generated@@42 $generated@@208) $generated@@46 $generated@@207 $generated@@209) $generated@@210) (= (ControlFlow 0 5) 2))) $generated@@222)))))))))))))))
(let (($generated@@225  (=> (= $generated@@209 ($generated@@43 0)) (=> (and (and (= ($generated@@41 ($generated@@42 $generated@@208) $generated@@46 $generated@@207 $generated@@209) ($generated@@73 $generated@@77 $generated@@45)) ($generated@@76 $generated@@77 ($generated@@41 ($generated@@42 $generated@@208) $generated@@46 $generated@@207 $generated@@209) ($generated@@78 $generated@@34))) (and (= ($generated@@41 ($generated@@42 $generated@@208) $generated@@46 $generated@@207 $generated@@209) $generated@@210) (= (ControlFlow 0 4) 2))) $generated@@222))))
(let (($generated@@226  (=> (= $generated@@214 ($generated@@140 $generated@@215 $generated@@212 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 14) 13) $generated@@221) (=> (= (ControlFlow 0 14) 4) $generated@@225)) (=> (= (ControlFlow 0 14) 5) $generated@@224)))))
(let (($generated@@227  (=> (and ($generated@@216 $generated@@212) ($generated@@217 $generated@@212)) (=> (and (and (<= ($generated@@43 0) $generated@@207) (<= ($generated@@43 0) $generated@@209)) (and (= 0 $generated@@40) (= (ControlFlow 0 15) 14))) $generated@@226))))
$generated@@227))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
