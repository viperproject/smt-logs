(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Int T@U T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 (Int) Int)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@85 () Bool)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@102 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@U T@U) Int)
(declare-fun $generated@@114 (T@U) Int)
(declare-fun $generated@@121 (T@U T@U) Bool)
(declare-fun $generated@@124 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@167 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@228 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@27 Int) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26)  (and (and ($generated@@23 $generated@@9 ($generated@@13 $generated@@27) $generated) ($generated@@23 $generated@@24 $generated@@28 $generated@@26)) ($generated@@23 $generated@@24 $generated@@29 $generated@@26)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26))
)))
(assert (= ($generated@@7 $generated@@33) 4))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@32 $generated@@36) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@36 $generated@@26))) ($generated@@23 $generated@@33 ($generated@@31 $generated@@35 $generated@@36) ($generated@@34 $generated)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@36))
))))
(assert (= ($generated@@37 $generated) $generated@@0))
(assert (forall (($generated@@39 Int) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@38 ($generated@@25 $generated@@39 $generated@@40 $generated@@41)) $generated@@5)
 :pattern ( ($generated@@25 $generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 Int) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@42 ($generated@@25 $generated@@43 $generated@@44 $generated@@45)) $generated@@43)
 :pattern ( ($generated@@25 $generated@@43 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 Int) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@46 ($generated@@25 $generated@@47 $generated@@48 $generated@@49)) $generated@@48)
 :pattern ( ($generated@@25 $generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 Int) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@50 ($generated@@25 $generated@@51 $generated@@52 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@25 $generated@@51 $generated@@52 $generated@@53))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@57 ($generated@@56 $generated@@24 $generated@@64)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@64 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 ($generated@@58 ($generated@@56 $generated@@24 $generated@@64)))))) (let (($generated@@65 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@64)))))
(let (($generated@@66 ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@64)))))
(let (($generated@@67 ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@64)))))
 (and ($generated@@57 $generated@@66) (=> ($generated@@54 ($generated@@55 $generated@@63) $generated@@66) (and ($generated@@57 $generated@@65) (=> ($generated@@54 ($generated@@55 $generated@@63) $generated@@65) (and ($generated@@60 $generated@@66) (=> (or ($generated@@61 $generated@@66 $generated@@62) (<= $generated@@67 ($generated@@42 $generated@@66))) ($generated@@60 $generated@@65))))))))))) (= ($generated@@54 ($generated@@55 $generated@@63) ($generated@@56 $generated@@24 $generated@@64)) (ite ($generated@@58 ($generated@@56 $generated@@24 $generated@@64)) true (let (($generated@@68 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@64)))))
(let (($generated@@69 ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@64)))))
(let (($generated@@70 ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@64)))))
 (and (and (and ($generated@@54 ($generated@@55 $generated@@63) $generated@@69) ($generated@@54 ($generated@@55 $generated@@63) $generated@@68)) (or ($generated@@61 $generated@@69 $generated@@62) (<= $generated@@70 ($generated@@59 ($generated@@42 $generated@@69))))) (or ($generated@@61 $generated@@68 $generated@@62) (<= $generated@@70 ($generated@@59 ($generated@@42 $generated@@68))))))))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@55 $generated@@63) ($generated@@56 $generated@@24 $generated@@64)))
))))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (or ($generated@@32 ($generated@@56 $generated@@24 $generated@@76)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@76 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 ($generated@@58 ($generated@@56 $generated@@24 $generated@@76)))))) (let (($generated@@77 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@76)))))
(let (($generated@@78 ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@76)))))
 (and ($generated@@32 $generated@@78) ($generated@@32 $generated@@77))))) (= ($generated@@31 ($generated@@55 $generated@@75) ($generated@@56 $generated@@24 $generated@@76)) (ite ($generated@@58 ($generated@@56 $generated@@24 $generated@@76)) $generated@@71 (let (($generated@@79 ($generated@@56 $generated@@24 ($generated@@50 ($generated@@56 $generated@@24 $generated@@76)))))
(let (($generated@@80 ($generated@@56 $generated@@24 ($generated@@46 ($generated@@56 $generated@@24 $generated@@76)))))
(let (($generated@@81 ($generated@@59 ($generated@@42 ($generated@@56 $generated@@24 $generated@@76)))))
($generated@@72 ($generated@@72 ($generated@@73 $generated@@71 ($generated@@74 $generated@@9 ($generated@@13 $generated@@81))) ($generated@@31 ($generated@@55 $generated@@75) $generated@@80)) ($generated@@31 ($generated@@55 $generated@@75) $generated@@79)))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@55 $generated@@75) ($generated@@56 $generated@@24 $generated@@76)))
))))
(assert (= ($generated@@38 $generated@@62) $generated@@4))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@23 $generated@@33 $generated@@83 ($generated@@34 $generated@@84)) ($generated@@82 $generated@@83))
 :pattern ( ($generated@@23 $generated@@33 $generated@@83 ($generated@@34 $generated@@84)))
)))
(assert ($generated@@23 $generated@@24 $generated@@62 $generated@@26))
(assert  (=> (<= 1 $generated@@30) (=> (or $generated@@85 (< 1 $generated@@30)) ($generated@@23 $generated@@24 $generated@@86 $generated@@26))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@61 $generated@@87 $generated@@88) (= $generated@@87 $generated@@88))
 :pattern ( ($generated@@61 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 Int) ) (! (= ($generated@@59 $generated@@89) $generated@@89)
 :pattern ( ($generated@@59 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@56 $generated@@91 $generated@@90) $generated@@90)
 :pattern ( ($generated@@56 $generated@@91 $generated@@90))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@32 $generated@@93) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@93 $generated@@26))) (and (=> (not ($generated@@58 $generated@@93)) (let (($generated@@94 ($generated@@50 $generated@@93)))
(let (($generated@@95 ($generated@@46 $generated@@93)))
 (and ($generated@@32 $generated@@95) ($generated@@32 $generated@@94))))) (= ($generated@@31 ($generated@@55 $generated@@92) $generated@@93) (ite ($generated@@58 $generated@@93) $generated@@71 (let (($generated@@96 ($generated@@50 $generated@@93)))
(let (($generated@@97 ($generated@@46 $generated@@93)))
(let (($generated@@98 ($generated@@42 $generated@@93)))
($generated@@72 ($generated@@72 ($generated@@73 $generated@@71 ($generated@@74 $generated@@9 ($generated@@13 $generated@@98))) ($generated@@31 $generated@@92 $generated@@97)) ($generated@@31 $generated@@92 $generated@@96)))))))))
 :pattern ( ($generated@@31 ($generated@@55 $generated@@92) $generated@@93))
))))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@58 $generated@@99) (= ($generated@@38 $generated@@99) $generated@@4))
 :pattern ( ($generated@@58 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@100 $generated@@101) (= ($generated@@38 $generated@@101) $generated@@5))
 :pattern ( ($generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@74 $generated@@104 ($generated@@102 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@102 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@100 $generated@@105) (exists (($generated@@106 Int) ($generated@@107 T@U) ($generated@@108 T@U) ) (= $generated@@105 ($generated@@25 $generated@@106 $generated@@107 $generated@@108))))
 :pattern ( ($generated@@100 $generated@@105))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or (not (= $generated@@111 $generated@@112)) (not true)) (= ($generated@@109 $generated@@110 $generated@@112) ($generated@@109 ($generated@@73 $generated@@110 $generated@@111) $generated@@112)))
 :pattern ( ($generated@@73 $generated@@110 $generated@@111) ($generated@@109 $generated@@110 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@58 $generated@@113) (= $generated@@113 $generated@@62))
 :pattern ( ($generated@@58 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@114 ($generated@@73 $generated@@115 $generated@@116)) (+ ($generated@@114 $generated@@115) 1))
 :pattern ( ($generated@@114 ($generated@@73 $generated@@115 $generated@@116)))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@100 $generated@@117) ($generated@@100 $generated@@118)) (= ($generated@@61 $generated@@117 $generated@@118)  (and (and (= ($generated@@42 $generated@@117) ($generated@@42 $generated@@118)) ($generated@@61 ($generated@@46 $generated@@117) ($generated@@46 $generated@@118))) ($generated@@61 ($generated@@50 $generated@@117) ($generated@@50 $generated@@118)))))
 :pattern ( ($generated@@61 $generated@@117 $generated@@118) ($generated@@100 $generated@@117))
 :pattern ( ($generated@@61 $generated@@117 $generated@@118) ($generated@@100 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@114 ($generated@@72 $generated@@119 $generated@@120)) (+ ($generated@@114 $generated@@119) ($generated@@114 $generated@@120)))
 :pattern ( ($generated@@114 ($generated@@72 $generated@@119 $generated@@120)))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@121 $generated@@122 $generated@@26) (and (= ($generated@@74 $generated@@24 ($generated@@102 $generated@@24 $generated@@122)) $generated@@122) ($generated@@23 $generated@@24 ($generated@@102 $generated@@24 $generated@@122) $generated@@26)))
 :pattern ( ($generated@@121 $generated@@122 $generated@@26))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@60 $generated@@123) (or ($generated@@58 $generated@@123) ($generated@@100 $generated@@123)))
 :pattern ( ($generated@@60 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@124 $generated@@125 $generated@@126) (= $generated@@125 $generated@@126))
 :pattern ( ($generated@@124 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@23 $generated@@33 $generated@@127 ($generated@@34 $generated@@128)) (forall (($generated@@129 T@U) ) (!  (=> (< 0 ($generated@@109 $generated@@127 $generated@@129)) ($generated@@121 $generated@@129 $generated@@128))
 :pattern ( ($generated@@109 $generated@@127 $generated@@129))
)))
 :pattern ( ($generated@@23 $generated@@33 $generated@@127 ($generated@@34 $generated@@128)))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@130 $generated@@26) (or ($generated@@58 $generated@@130) ($generated@@100 $generated@@130)))
 :pattern ( ($generated@@100 $generated@@130) ($generated@@23 $generated@@24 $generated@@130 $generated@@26))
 :pattern ( ($generated@@58 $generated@@130) ($generated@@23 $generated@@24 $generated@@130 $generated@@26))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@121 $generated@@131 $generated) (and (= ($generated@@74 $generated@@9 ($generated@@102 $generated@@9 $generated@@131)) $generated@@131) ($generated@@23 $generated@@9 ($generated@@102 $generated@@9 $generated@@131) $generated)))
 :pattern ( ($generated@@121 $generated@@131 $generated))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@54 ($generated@@55 $generated@@132) $generated@@133) ($generated@@54 $generated@@132 $generated@@133))
 :pattern ( ($generated@@54 ($generated@@55 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@121 ($generated@@74 $generated@@136 $generated@@134) $generated@@135) ($generated@@23 $generated@@136 $generated@@134 $generated@@135))
 :pattern ( ($generated@@121 ($generated@@74 $generated@@136 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@82 $generated@@137) (forall (($generated@@138 T@U) ) (!  (and (<= 0 ($generated@@109 $generated@@137 $generated@@138)) (<= ($generated@@109 $generated@@137 $generated@@138) ($generated@@114 $generated@@137)))
 :pattern ( ($generated@@109 $generated@@137 $generated@@138))
)))
 :pattern ( ($generated@@82 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! (<= 0 ($generated@@114 $generated@@139))
 :pattern ( ($generated@@114 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and ($generated@@58 $generated@@140) ($generated@@58 $generated@@141)) ($generated@@61 $generated@@140 $generated@@141))
 :pattern ( ($generated@@61 $generated@@140 $generated@@141) ($generated@@58 $generated@@140))
 :pattern ( ($generated@@61 $generated@@140 $generated@@141) ($generated@@58 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@109 $generated@@71 $generated@@142) 0)
 :pattern ( ($generated@@109 $generated@@71 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@109 ($generated@@73 $generated@@143 $generated@@144) $generated@@144) (+ ($generated@@109 $generated@@143 $generated@@144) 1))
 :pattern ( ($generated@@73 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 Int) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@25 ($generated@@59 $generated@@145) ($generated@@56 $generated@@24 $generated@@146) ($generated@@56 $generated@@24 $generated@@147)) ($generated@@56 $generated@@24 ($generated@@25 $generated@@145 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@25 ($generated@@59 $generated@@145) ($generated@@56 $generated@@24 $generated@@146) ($generated@@56 $generated@@24 $generated@@147)))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@34 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@34 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@37 ($generated@@34 $generated@@150)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@102 $generated@@152 ($generated@@74 $generated@@152 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@74 $generated@@152 $generated@@151))
)))
(assert (forall (($generated@@154 Int) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (< ($generated@@153 $generated@@155) ($generated@@153 ($generated@@25 $generated@@154 $generated@@155 $generated@@156)))
 :pattern ( ($generated@@25 $generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 Int) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (< ($generated@@153 $generated@@159) ($generated@@153 ($generated@@25 $generated@@157 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@25 $generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@31 ($generated@@55 $generated@@160) $generated@@161) ($generated@@31 $generated@@160 $generated@@161))
 :pattern ( ($generated@@31 ($generated@@55 $generated@@160) $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ) (!  (and (= (= ($generated@@114 $generated@@162) 0) (= $generated@@162 $generated@@71)) (=> (or (not (= ($generated@@114 $generated@@162) 0)) (not true)) (exists (($generated@@163 T@U) ) (! (< 0 ($generated@@109 $generated@@162 $generated@@163))
 :pattern ( ($generated@@109 $generated@@162 $generated@@163))
))))
 :pattern ( ($generated@@114 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@109 ($generated@@72 $generated@@164 $generated@@165) $generated@@166) (+ ($generated@@109 $generated@@164 $generated@@166) ($generated@@109 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@109 ($generated@@72 $generated@@164 $generated@@165) $generated@@166))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@167 $generated@@178 $generated@@179 $generated@@180 ($generated@@174 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@183 $generated@@184) $generated@@181)
 :weight 0
)) (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@167 $generated@@185 $generated@@186 $generated@@187 ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@167 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@167 $generated@@194 $generated@@195 $generated@@196 ($generated@@174 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@167 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (= ($generated@@7 $generated@@168) 5)) (= ($generated@@7 $generated@@169) 6)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@171 $generated@@203 $generated@@204 ($generated@@175 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@205) $generated@@207) $generated@@205)
 :weight 0
))) (forall (($generated@@208 T@T) ($generated@@209 T@T) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@212 $generated@@213) (= ($generated@@171 $generated@@208 $generated@@209 ($generated@@175 $generated@@208 $generated@@209 $generated@@211 $generated@@212 $generated@@210) $generated@@213) ($generated@@171 $generated@@208 $generated@@209 $generated@@211 $generated@@213)))
 :weight 0
))) (= ($generated@@7 $generated@@172) 7)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (= ($generated@@7 ($generated@@173 $generated@@214 $generated@@215)) 8))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@176 ($generated@@173 $generated@@216 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@173 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@177 ($generated@@173 $generated@@218 $generated@@219)) $generated@@219)
 :pattern ( ($generated@@173 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@12 ($generated@@167 $generated@@168 $generated@@169 $generated@@8 ($generated@@170 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (or (not (= $generated@@224 $generated@@220)) (not true)) ($generated@@12 ($generated@@102 $generated@@8 ($generated@@171 $generated@@169 $generated@@172 ($generated@@171 $generated@@168 ($generated@@173 $generated@@169 $generated@@172) $generated@@221 $generated@@224) $generated@@222)))) $generated@@223))
 :pattern ( ($generated@@167 $generated@@168 $generated@@169 $generated@@8 ($generated@@170 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> ($generated@@121 $generated@@226 ($generated@@34 $generated@@227)) (and (= ($generated@@74 $generated@@33 ($generated@@102 $generated@@33 $generated@@226)) $generated@@226) ($generated@@23 $generated@@33 ($generated@@102 $generated@@33 $generated@@226) ($generated@@34 $generated@@227))))
 :pattern ( ($generated@@121 $generated@@226 ($generated@@34 $generated@@227)))
)))
(assert (= ($generated@@37 $generated@@26) $generated@@3))
(assert (= ($generated@@228 $generated@@26) $generated@@6))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (or ($generated@@57 $generated@@230) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@230 $generated@@26))) (and (=> (not ($generated@@58 $generated@@230)) (let (($generated@@231 ($generated@@50 $generated@@230)))
(let (($generated@@232 ($generated@@46 $generated@@230)))
(let (($generated@@233 ($generated@@42 $generated@@230)))
 (and ($generated@@57 $generated@@232) (=> ($generated@@54 $generated@@229 $generated@@232) (and ($generated@@57 $generated@@231) (=> ($generated@@54 $generated@@229 $generated@@231) (and ($generated@@60 $generated@@232) (=> (or ($generated@@61 $generated@@232 $generated@@62) (<= $generated@@233 ($generated@@42 $generated@@232))) ($generated@@60 $generated@@231))))))))))) (= ($generated@@54 ($generated@@55 $generated@@229) $generated@@230) (ite ($generated@@58 $generated@@230) true (let (($generated@@234 ($generated@@50 $generated@@230)))
(let (($generated@@235 ($generated@@46 $generated@@230)))
(let (($generated@@236 ($generated@@42 $generated@@230)))
 (and (and (and ($generated@@54 $generated@@229 $generated@@235) ($generated@@54 $generated@@229 $generated@@234)) (or ($generated@@61 $generated@@235 $generated@@62) (<= $generated@@236 ($generated@@42 $generated@@235)))) (or ($generated@@61 $generated@@234 $generated@@62) (<= $generated@@236 ($generated@@42 $generated@@234)))))))))))
 :pattern ( ($generated@@54 ($generated@@55 $generated@@229) $generated@@230))
))))
(assert (= $generated@@62 ($generated@@56 $generated@@24 $generated@@62)))
(assert  (=> (<= 1 $generated@@30) (=> (or $generated@@85 (< 1 $generated@@30)) (= $generated@@86 ($generated@@56 $generated@@24 $generated@@62)))))
(assert  (=> (<= 1 $generated@@30) (=> (or $generated@@85 (< 1 $generated@@30)) (= $generated@@86 ($generated@@56 $generated@@24 $generated@@62)))))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@74 $generated@@9 ($generated@@13 ($generated@@59 $generated@@237))) ($generated@@56 $generated@@172 ($generated@@74 $generated@@9 ($generated@@13 $generated@@237))))
 :pattern ( ($generated@@74 $generated@@9 ($generated@@13 ($generated@@59 $generated@@237))))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@T) ) (! (= ($generated@@74 $generated@@239 ($generated@@56 $generated@@239 $generated@@238)) ($generated@@56 $generated@@172 ($generated@@74 $generated@@239 $generated@@238)))
 :pattern ( ($generated@@74 $generated@@239 ($generated@@56 $generated@@239 $generated@@238)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (< 0 ($generated@@109 $generated@@240 $generated@@242)) (< 0 ($generated@@109 ($generated@@73 $generated@@240 $generated@@241) $generated@@242)))
 :pattern ( ($generated@@73 $generated@@240 $generated@@241) ($generated@@109 $generated@@240 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (< 0 ($generated@@109 ($generated@@73 $generated@@243 $generated@@244) $generated@@245))  (or (= $generated@@245 $generated@@244) (< 0 ($generated@@109 $generated@@243 $generated@@245))))
 :pattern ( ($generated@@109 ($generated@@73 $generated@@243 $generated@@244) $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= ($generated@@124 $generated@@246 $generated@@247) (forall (($generated@@248 T@U) ) (! (= ($generated@@109 $generated@@246 $generated@@248) ($generated@@109 $generated@@247 $generated@@248))
 :pattern ( ($generated@@109 $generated@@246 $generated@@248))
 :pattern ( ($generated@@109 $generated@@247 $generated@@248))
)))
 :pattern ( ($generated@@124 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! ($generated@@23 $generated@@9 $generated@@249 $generated)
 :pattern ( ($generated@@23 $generated@@9 $generated@@249 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@256  (=> (= $generated@@250 ($generated@@170 $generated@@251 $generated@@252 $generated@@2 false)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (let (($generated@@257 ($generated@@56 $generated@@24 $generated@@86)))
 (=> ($generated@@57 $generated@@257) (or ($generated@@54 ($generated@@55 $generated@@253) $generated@@257) (=> ($generated@@58 $generated@@257) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 true)))))))) (=> (let (($generated@@258 ($generated@@56 $generated@@24 $generated@@86)))
 (=> ($generated@@57 $generated@@258) (or ($generated@@54 ($generated@@55 $generated@@253) $generated@@258) (=> ($generated@@58 $generated@@258) ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (let (($generated@@259 ($generated@@56 $generated@@24 $generated@@86)))
 (=> ($generated@@57 $generated@@259) (or ($generated@@54 ($generated@@55 $generated@@253) $generated@@259) (=> (not ($generated@@58 $generated@@259)) (let (($generated@@260 ($generated@@46 $generated@@259)))
($generated@@54 ($generated@@55 ($generated@@55 $generated@@253)) $generated@@260))))))) (=> (let (($generated@@261 ($generated@@56 $generated@@24 $generated@@86)))
 (=> ($generated@@57 $generated@@261) (or ($generated@@54 ($generated@@55 $generated@@253) $generated@@261) (=> (not ($generated@@58 $generated@@261)) (let (($generated@@262 ($generated@@46 $generated@@261)))
($generated@@54 ($generated@@55 ($generated@@55 $generated@@253)) $generated@@262)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (let (($generated@@263 ($generated@@56 $generated@@24 $generated@@86)))
 (=> ($generated@@57 $generated@@263) (or ($generated@@54 ($generated@@55 $generated@@253) $generated@@263) (=> (not ($generated@@58 $generated@@263)) (let (($generated@@264 ($generated@@50 $generated@@263)))
($generated@@54 ($generated@@55 ($generated@@55 $generated@@253)) $generated@@264))))))) (=> (let (($generated@@265 ($generated@@56 $generated@@24 $generated@@86)))
 (=> ($generated@@57 $generated@@265) (or ($generated@@54 ($generated@@55 $generated@@253) $generated@@265) (=> (not ($generated@@58 $generated@@265)) (let (($generated@@266 ($generated@@50 $generated@@265)))
($generated@@54 ($generated@@55 ($generated@@55 $generated@@253)) $generated@@266)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (let (($generated@@267 ($generated@@56 $generated@@24 $generated@@86)))
 (=> ($generated@@57 $generated@@267) (or ($generated@@54 ($generated@@55 $generated@@253) $generated@@267) (=> (not ($generated@@58 $generated@@267)) (let (($generated@@268 ($generated@@46 $generated@@267)))
(let (($generated@@269 ($generated@@42 $generated@@267)))
 (or ($generated@@61 $generated@@268 $generated@@62) (<= $generated@@269 ($generated@@42 $generated@@268)))))))))) (=> (let (($generated@@270 ($generated@@56 $generated@@24 $generated@@86)))
 (=> ($generated@@57 $generated@@270) (or ($generated@@54 ($generated@@55 $generated@@253) $generated@@270) (=> (not ($generated@@58 $generated@@270)) (let (($generated@@271 ($generated@@46 $generated@@270)))
(let (($generated@@272 ($generated@@42 $generated@@270)))
 (or ($generated@@61 $generated@@271 $generated@@62) (<= $generated@@272 ($generated@@42 $generated@@271))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@273 ($generated@@56 $generated@@24 $generated@@86)))
 (=> ($generated@@57 $generated@@273) (or ($generated@@54 ($generated@@55 $generated@@253) $generated@@273) (=> (not ($generated@@58 $generated@@273)) (let (($generated@@274 ($generated@@50 $generated@@273)))
(let (($generated@@275 ($generated@@42 $generated@@273)))
 (or ($generated@@61 $generated@@274 $generated@@62) (<= $generated@@275 ($generated@@42 $generated@@274)))))))))) (=> (let (($generated@@276 ($generated@@56 $generated@@24 $generated@@86)))
 (=> ($generated@@57 $generated@@276) (or ($generated@@54 ($generated@@55 $generated@@253) $generated@@276) (=> (not ($generated@@58 $generated@@276)) (let (($generated@@277 ($generated@@50 $generated@@276)))
(let (($generated@@278 ($generated@@42 $generated@@276)))
 (or ($generated@@61 $generated@@277 $generated@@62) (<= $generated@@278 ($generated@@42 $generated@@277))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@279 ($generated@@56 $generated@@24 $generated@@86)))
($generated@@124 ($generated@@31 ($generated@@55 ($generated@@55 $generated@@253)) $generated@@279) $generated@@71))))))))))))))))
(let (($generated@@280  (=> (and (and ($generated@@254 $generated@@252) ($generated@@255 $generated@@252)) (and (= 2 $generated@@30) (= (ControlFlow 0 8) 2))) $generated@@256)))
$generated@@280)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
