(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@T T@T) T@T)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@39 (T@T) T@T)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@60 (T@U) Int)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 (T@T T@U T@U) Bool)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@69 (Int) Int)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@92 (T@U Int) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@41 T@T) ($generated@@42 T@T) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@26 $generated@@41 $generated@@42 ($generated@@38 $generated@@41 $generated@@42 $generated@@44 $generated@@45 $generated@@43) $generated@@45) $generated@@43)
 :weight 0
)) (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (or (= $generated@@50 $generated@@51) (= ($generated@@26 $generated@@46 $generated@@47 ($generated@@38 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@51) ($generated@@26 $generated@@46 $generated@@47 $generated@@49 $generated@@51)))
 :weight 0
))) (= ($generated@@6 $generated@@27) 3)) (= ($generated@@6 $generated@@28) 4)) (= ($generated@@6 $generated@@29) 5)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ) (= ($generated@@6 ($generated@@30 $generated@@52 $generated@@53)) 6))) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (! (= ($generated@@39 ($generated@@30 $generated@@54 $generated@@55)) $generated@@54)
 :pattern ( ($generated@@30 $generated@@54 $generated@@55))
))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@40 ($generated@@30 $generated@@56 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@30 $generated@@56 $generated@@57))
))) (= ($generated@@6 $generated@@36) 7)))
(assert  (=> (< 0 $generated@@23) (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@58) (and (or (not (= $generated@@59 $generated@@32)) (not true)) (= ($generated@@33 $generated@@59) $generated@@34))) ($generated@@11 ($generated@@25 $generated@@7 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@58 $generated@@59) $generated@@2)))) ($generated@@35 $generated@@36 ($generated@@24 $generated@@59) ($generated@@37 $generated) $generated@@58))
 :pattern ( ($generated@@24 $generated@@59) ($generated@@25 $generated@@7 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@58 $generated@@59) $generated@@2)))
))))
(assert (= ($generated@@60 $generated@@61) 0))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@62 $generated@@29 $generated@@63 $generated@@34)  (or (= $generated@@63 $generated@@32) (= ($generated@@33 $generated@@63) $generated@@34)))
 :pattern ( ($generated@@62 $generated@@29 $generated@@63 $generated@@34))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@35 $generated@@29 $generated@@65 $generated@@64 $generated@@66) ($generated@@35 $generated@@29 $generated@@65 $generated@@34 $generated@@66))
 :pattern ( ($generated@@35 $generated@@29 $generated@@65 $generated@@64 $generated@@66))
 :pattern ( ($generated@@35 $generated@@29 $generated@@65 $generated@@34 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@35 $generated@@29 $generated@@67 $generated@@34 $generated@@68)  (or (= $generated@@67 $generated@@32) ($generated@@11 ($generated@@25 $generated@@7 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@68 $generated@@67) $generated@@2)))))
 :pattern ( ($generated@@35 $generated@@29 $generated@@67 $generated@@34 $generated@@68))
)))
(assert (forall (($generated@@70 Int) ) (! (= ($generated@@69 $generated@@70) $generated@@70)
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@25 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@25 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@74 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@35 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@74 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert  (=> (< 0 $generated@@23) (forall (($generated@@82 T@U) ) (!  (=> (and (or (not (= $generated@@82 $generated@@32)) (not true)) (= ($generated@@33 $generated@@82) $generated@@34)) ($generated@@62 $generated@@36 ($generated@@24 $generated@@82) ($generated@@37 $generated)))
 :pattern ( ($generated@@24 $generated@@82))
))))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@83 $generated@@84 $generated@@34) (and (= ($generated@@74 $generated@@29 ($generated@@25 $generated@@29 $generated@@84)) $generated@@84) ($generated@@62 $generated@@29 ($generated@@25 $generated@@29 $generated@@84) $generated@@34)))
 :pattern ( ($generated@@83 $generated@@84 $generated@@34))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@83 $generated@@85 $generated@@64) (and (= ($generated@@74 $generated@@29 ($generated@@25 $generated@@29 $generated@@85)) $generated@@85) ($generated@@62 $generated@@29 ($generated@@25 $generated@@29 $generated@@85) $generated@@64)))
 :pattern ( ($generated@@83 $generated@@85 $generated@@64))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@62 $generated@@29 $generated@@86 $generated@@64)  (and ($generated@@62 $generated@@29 $generated@@86 $generated@@34) (or (not (= $generated@@86 $generated@@32)) (not true))))
 :pattern ( ($generated@@62 $generated@@29 $generated@@86 $generated@@64))
 :pattern ( ($generated@@62 $generated@@29 $generated@@86 $generated@@34))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@83 $generated@@87 $generated) (and (= ($generated@@74 $generated@@8 ($generated@@25 $generated@@8 $generated@@87)) $generated@@87) ($generated@@62 $generated@@8 ($generated@@25 $generated@@8 $generated@@87) $generated)))
 :pattern ( ($generated@@83 $generated@@87 $generated))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@83 ($generated@@74 $generated@@90 $generated@@88) $generated@@89) ($generated@@62 $generated@@90 $generated@@88 $generated@@89))
 :pattern ( ($generated@@83 ($generated@@74 $generated@@90 $generated@@88) $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (<= 0 ($generated@@60 $generated@@91))
 :pattern ( ($generated@@60 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@93 ($generated@@37 $generated@@94) $generated@@95) (forall (($generated@@96 Int) ) (!  (=> (and (<= 0 $generated@@96) (< $generated@@96 ($generated@@60 $generated@@93))) ($generated@@77 ($generated@@92 $generated@@93 $generated@@96) $generated@@94 $generated@@95))
 :pattern ( ($generated@@92 $generated@@93 $generated@@96))
)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@93 ($generated@@37 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 ($generated@@37 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@37 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@22 ($generated@@37 $generated@@99)) $generated@@1)
 :pattern ( ($generated@@37 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@25 $generated@@101 ($generated@@74 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@74 $generated@@101 $generated@@100))
)))
(assert  (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@102 $generated@@105 $generated@@106 $generated@@107 ($generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@102 $generated@@112 $generated@@113 $generated@@114 ($generated@@104 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@102 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@102 $generated@@121 $generated@@122 $generated@@123 ($generated@@104 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@102 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Bool) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@11 ($generated@@102 $generated@@29 $generated@@27 $generated@@7 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@130)) (not true)) ($generated@@11 ($generated@@25 $generated@@7 ($generated@@26 $generated@@27 $generated@@28 ($generated@@26 $generated@@29 ($generated@@30 $generated@@27 $generated@@28) $generated@@131 $generated@@134) $generated@@132)))) $generated@@133))
 :pattern ( ($generated@@102 $generated@@29 $generated@@27 $generated@@7 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> ($generated@@83 $generated@@136 ($generated@@37 $generated@@137)) (and (= ($generated@@74 $generated@@36 ($generated@@25 $generated@@36 $generated@@136)) $generated@@136) ($generated@@62 $generated@@36 ($generated@@25 $generated@@36 $generated@@136) ($generated@@37 $generated@@137))))
 :pattern ( ($generated@@83 $generated@@136 ($generated@@37 $generated@@137)))
)))
(assert (= ($generated@@22 $generated@@34) $generated@@3))
(assert (= ($generated@@138 $generated@@34) $generated@@5))
(assert (= ($generated@@22 $generated@@64) $generated@@4))
(assert (= ($generated@@138 $generated@@64) $generated@@5))
(assert (forall (($generated@@139 Int) ) (! (= ($generated@@74 $generated@@8 ($generated@@12 ($generated@@69 $generated@@139))) ($generated@@71 $generated@@28 ($generated@@74 $generated@@8 ($generated@@12 $generated@@139))))
 :pattern ( ($generated@@74 $generated@@8 ($generated@@12 ($generated@@69 $generated@@139))))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@74 $generated@@141 ($generated@@71 $generated@@141 $generated@@140)) ($generated@@71 $generated@@28 ($generated@@74 $generated@@141 $generated@@140)))
 :pattern ( ($generated@@74 $generated@@141 ($generated@@71 $generated@@141 $generated@@140)))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= ($generated@@60 $generated@@142) 0) (= $generated@@142 $generated@@61))
 :pattern ( ($generated@@60 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! ($generated@@35 $generated@@8 $generated@@144 $generated $generated@@143)
 :pattern ( ($generated@@35 $generated@@8 $generated@@144 $generated $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@62 $generated@@36 $generated@@145 ($generated@@37 $generated@@146)) (forall (($generated@@147 Int) ) (!  (=> (and (<= 0 $generated@@147) (< $generated@@147 ($generated@@60 $generated@@145))) ($generated@@83 ($generated@@92 $generated@@145 $generated@@147) $generated@@146))
 :pattern ( ($generated@@92 $generated@@145 $generated@@147))
)))
 :pattern ( ($generated@@62 $generated@@36 $generated@@145 ($generated@@37 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ) (! ($generated@@62 $generated@@8 $generated@@148 $generated)
 :pattern ( ($generated@@62 $generated@@8 $generated@@148 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@153 true))
(let (($generated@@154 true))
(let (($generated@@155  (=> (< 0 ($generated@@60 ($generated@@24 $generated@@149))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 ($generated@@69 0)) (< ($generated@@69 0) ($generated@@60 ($generated@@24 $generated@@149))))) (and (=> (= (ControlFlow 0 4) 2) $generated@@154) (=> (= (ControlFlow 0 4) 3) $generated@@153))))))
(let (($generated@@156 true))
(let (($generated@@157  (=> (= $generated@@150 ($generated@@103 $generated@@32 $generated@@151 $generated@@2 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@156) (=> (= (ControlFlow 0 6) 4) $generated@@155)))))
(let (($generated@@158  (=> (and ($generated@@31 $generated@@151) ($generated@@152 $generated@@151)) (=> (and (and (or (not (= $generated@@149 $generated@@32)) (not true)) (and ($generated@@62 $generated@@29 $generated@@149 $generated@@64) ($generated@@35 $generated@@29 $generated@@149 $generated@@64 $generated@@151))) (and (= 1 $generated@@23) (= (ControlFlow 0 7) 6))) $generated@@157))))
$generated@@158)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
