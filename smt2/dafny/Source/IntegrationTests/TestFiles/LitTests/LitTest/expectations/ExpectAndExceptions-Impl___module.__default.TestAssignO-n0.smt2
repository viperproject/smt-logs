(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 (T@U Int) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@T T@U T@U) Bool)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (Int) Int)
(declare-fun $generated@@52 (T@U) Int)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@68 (T@U T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@118 (T@U) Bool)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@167 (Int) T@U)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@170 (T@U) Int)
(declare-fun $generated@@172 (T@U) Int)
(declare-fun $generated@@178 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! ($generated@@30 $generated@@15 $generated@@32 $generated@@31 $generated@@33)
 :pattern ( ($generated@@30 $generated@@15 $generated@@32 $generated@@31 $generated@@33))
)))
(assert (= ($generated@@13 $generated@@39) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 Int) ) (!  (=> (and (<= 0 $generated@@41) (< $generated@@41 ($generated@@36 $generated@@40))) (< ($generated@@37 ($generated@@38 $generated@@39 ($generated@@34 $generated@@40 $generated@@41))) ($generated@@37 ($generated@@35 $generated@@40))))
 :pattern ( ($generated@@34 $generated@@40 $generated@@41) ($generated@@35 $generated@@40))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 Int) ) (!  (=> (and (<= 0 $generated@@44) (< $generated@@44 ($generated@@36 $generated@@43))) (< ($generated@@37 ($generated@@38 $generated@@39 ($generated@@34 $generated@@43 $generated@@44))) ($generated@@37 ($generated@@42 $generated@@43))))
 :pattern ( ($generated@@34 $generated@@43 $generated@@44) ($generated@@42 $generated@@43))
)))
(assert (forall (($generated@@53 T@U) ) (!  (=> (or ($generated@@47 ($generated@@46 $generated@@39 $generated@@53)) (and ($generated@@48 $generated@@39 $generated@@53 $generated@@49) (not ($generated@@18 ($generated@@46 $generated@@14 ($generated@@17 ($generated@@50 ($generated@@46 $generated@@39 $generated@@53)))))))) (= ($generated@@45 ($generated@@46 $generated@@39 $generated@@53)) ($generated@@51 ($generated@@52 ($generated@@46 $generated@@39 $generated@@53)))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@46 $generated@@39 $generated@@53)))
)))
(assert (= ($generated@@36 $generated@@54) 0))
(assert (forall (($generated@@55 Int) ) (! (= ($generated@@51 $generated@@55) $generated@@55)
 :pattern ( ($generated@@51 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@46 $generated@@57 $generated@@56) $generated@@56)
 :pattern ( ($generated@@46 $generated@@57 $generated@@56))
)))
(assert (= ($generated@@13 $generated@@58) 4))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and ($generated@@48 $generated@@58 $generated@@62 ($generated@@60 $generated@@64)) ($generated@@61 $generated@@63 $generated@@64)) ($generated@@48 $generated@@58 ($generated@@59 $generated@@62 $generated@@63) ($generated@@60 $generated@@64)))
 :pattern ( ($generated@@48 $generated@@58 ($generated@@59 $generated@@62 $generated@@63) ($generated@@60 $generated@@64)))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> (or ($generated@@65 ($generated@@46 $generated@@39 $generated@@67)) ($generated@@48 $generated@@39 $generated@@67 $generated@@49)) (= ($generated@@50 ($generated@@46 $generated@@39 $generated@@67)) ($generated@@18 ($generated@@46 $generated@@14 ($generated@@17 ($generated@@66 ($generated@@46 $generated@@39 $generated@@67)))))))
 :weight 3
 :pattern ( ($generated@@50 ($generated@@46 $generated@@39 $generated@@67)))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or ($generated@@69 $generated@@72 $generated@@73) (and ($generated@@48 $generated@@39 $generated@@73 ($generated@@70 $generated@@72)) (not ($generated@@71 $generated@@72 $generated@@73)))) ($generated@@61 ($generated@@68 $generated@@72 $generated@@73) $generated@@72))
 :pattern ( ($generated@@68 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@74 $generated@@76 $generated@@77) ($generated@@48 $generated@@39 $generated@@77 ($generated@@70 $generated@@76))) (= ($generated@@71 $generated@@76 $generated@@77) ($generated@@75 $generated@@77)))
 :pattern ( ($generated@@71 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@78 $generated@@80) (= ($generated@@79 $generated@@80) $generated@@6))
 :pattern ( ($generated@@78 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@75 $generated@@81) (= ($generated@@79 $generated@@81) $generated@@7))
 :pattern ( ($generated@@75 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 $generated@@83) (= ($generated@@79 $generated@@83) $generated@@8))
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@66 $generated@@84) (= ($generated@@79 $generated@@84) $generated@@9))
 :pattern ( ($generated@@66 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@38 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@38 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@78 $generated@@89) (exists (($generated@@90 T@U) ) (= $generated@@89 ($generated@@88 $generated@@90))))
 :pattern ( ($generated@@78 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@75 $generated@@91) (exists (($generated@@92 T@U) ) (= $generated@@91 ($generated@@35 $generated@@92))))
 :pattern ( ($generated@@75 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@82 $generated@@94) (exists (($generated@@95 Int) ) (= $generated@@94 ($generated@@93 $generated@@95))))
 :pattern ( ($generated@@82 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@66 $generated@@96) (exists (($generated@@97 T@U) ) (= $generated@@96 ($generated@@42 $generated@@97))))
 :pattern ( ($generated@@66 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@48 $generated@@15 $generated@@98 $generated@@31) (<= ($generated@@51 0) ($generated@@20 $generated@@98)))
 :pattern ( ($generated@@48 $generated@@15 $generated@@98 $generated@@31))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@36 ($generated@@59 $generated@@99 $generated@@100)) (+ 1 ($generated@@36 $generated@@99)))
 :pattern ( ($generated@@59 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@101 ($generated@@85 $generated@@105 $generated@@102) $generated@@103 $generated@@104) ($generated@@30 $generated@@105 $generated@@102 $generated@@103 $generated@@104))
 :pattern ( ($generated@@101 ($generated@@85 $generated@@105 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (= ($generated@@13 $generated@@106) 5))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (or ($generated@@69 $generated@@108 ($generated@@46 $generated@@39 $generated@@109)) (and ($generated@@48 $generated@@39 $generated@@109 ($generated@@70 $generated@@108)) (not ($generated@@18 ($generated@@46 $generated@@14 ($generated@@17 ($generated@@71 $generated@@108 ($generated@@46 $generated@@39 $generated@@109)))))))) (= ($generated@@68 $generated@@108 ($generated@@46 $generated@@39 $generated@@109)) ($generated@@46 $generated@@106 ($generated@@107 ($generated@@46 $generated@@39 $generated@@109)))))
 :weight 3
 :pattern ( ($generated@@68 $generated@@108 ($generated@@46 $generated@@39 $generated@@109)))
)))
(assert (forall (($generated@@111 T@U) ) (!  (and (= ($generated@@29 ($generated@@70 $generated@@111)) $generated@@5) (= ($generated@@110 ($generated@@70 $generated@@111)) $generated@@12))
 :pattern ( ($generated@@70 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@61 $generated@@112 $generated@@31) (and (= ($generated@@85 $generated@@15 ($generated@@38 $generated@@15 $generated@@112)) $generated@@112) ($generated@@48 $generated@@15 ($generated@@38 $generated@@15 $generated@@112) $generated@@31)))
 :pattern ( ($generated@@61 $generated@@112 $generated@@31))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@61 $generated@@113 $generated@@49) (and (= ($generated@@85 $generated@@39 ($generated@@38 $generated@@39 $generated@@113)) $generated@@113) ($generated@@48 $generated@@39 ($generated@@38 $generated@@39 $generated@@113) $generated@@49)))
 :pattern ( ($generated@@61 $generated@@113 $generated@@49))
)))
(assert (forall (($generated@@114 Int) ) (! (= ($generated@@48 $generated@@39 ($generated@@93 $generated@@114) $generated@@49) ($generated@@48 $generated@@15 ($generated@@19 $generated@@114) $generated@@31))
 :pattern ( ($generated@@48 $generated@@39 ($generated@@93 $generated@@114) $generated@@49))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 Int) ($generated@@117 T@U) ) (!  (and (=> (= $generated@@116 ($generated@@36 $generated@@115)) (= ($generated@@34 ($generated@@59 $generated@@115 $generated@@117) $generated@@116) $generated@@117)) (=> (or (not (= $generated@@116 ($generated@@36 $generated@@115))) (not true)) (= ($generated@@34 ($generated@@59 $generated@@115 $generated@@117) $generated@@116) ($generated@@34 $generated@@115 $generated@@116))))
 :pattern ( ($generated@@34 ($generated@@59 $generated@@115 $generated@@117) $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> ($generated@@118 $generated@@121) (= ($generated@@30 $generated@@39 ($generated@@88 $generated@@120) ($generated@@70 $generated@@119) $generated@@121) ($generated@@101 $generated@@120 $generated@@119 $generated@@121)))
 :pattern ( ($generated@@30 $generated@@39 ($generated@@88 $generated@@120) ($generated@@70 $generated@@119) $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (and (or ($generated@@69 $generated@@123 $generated@@124) (and ($generated@@30 $generated@@39 $generated@@124 ($generated@@70 $generated@@123) $generated@@122) (not ($generated@@71 $generated@@123 $generated@@124)))) ($generated@@118 $generated@@122)) ($generated@@101 ($generated@@68 $generated@@123 $generated@@124) $generated@@123 $generated@@122))
 :pattern ( ($generated@@101 ($generated@@68 $generated@@123 $generated@@124) $generated@@123 $generated@@122))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@118 $generated@@127) (and ($generated@@75 $generated@@126) (exists (($generated@@128 T@U) ) (! ($generated@@30 $generated@@39 $generated@@126 ($generated@@70 $generated@@128) $generated@@127)
 :pattern ( ($generated@@30 $generated@@39 $generated@@126 ($generated@@70 $generated@@128) $generated@@127))
)))) ($generated@@30 $generated@@58 ($generated@@125 $generated@@126) ($generated@@60 $generated) $generated@@127))
 :pattern ( ($generated@@30 $generated@@58 ($generated@@125 $generated@@126) ($generated@@60 $generated) $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@118 $generated@@131) (= ($generated@@30 $generated@@39 ($generated@@35 $generated@@130) ($generated@@70 $generated@@129) $generated@@131) ($generated@@30 $generated@@58 $generated@@130 ($generated@@60 $generated) $generated@@131)))
 :pattern ( ($generated@@30 $generated@@39 ($generated@@35 $generated@@130) ($generated@@70 $generated@@129) $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@48 $generated@@39 $generated@@133 ($generated@@70 $generated@@132)) (or ($generated@@78 $generated@@133) ($generated@@75 $generated@@133)))
 :pattern ( ($generated@@75 $generated@@133) ($generated@@48 $generated@@39 $generated@@133 ($generated@@70 $generated@@132)))
 :pattern ( ($generated@@78 $generated@@133) ($generated@@48 $generated@@39 $generated@@133 ($generated@@70 $generated@@132)))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (or ($generated@@74 $generated@@134 ($generated@@46 $generated@@39 $generated@@135)) ($generated@@48 $generated@@39 $generated@@135 ($generated@@70 $generated@@134))) (= ($generated@@71 $generated@@134 ($generated@@46 $generated@@39 $generated@@135)) ($generated@@18 ($generated@@46 $generated@@14 ($generated@@17 ($generated@@75 ($generated@@46 $generated@@39 $generated@@135)))))))
 :weight 3
 :pattern ( ($generated@@71 $generated@@134 ($generated@@46 $generated@@39 $generated@@135)))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@48 $generated@@39 $generated@@136 $generated@@49) (or ($generated@@82 $generated@@136) ($generated@@66 $generated@@136)))
 :pattern ( ($generated@@66 $generated@@136) ($generated@@48 $generated@@39 $generated@@136 $generated@@49))
 :pattern ( ($generated@@82 $generated@@136) ($generated@@48 $generated@@39 $generated@@136 $generated@@49))
)))
(assert (= ($generated@@13 $generated@@137) 6))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@61 $generated@@138 $generated) (and (= ($generated@@85 $generated@@137 ($generated@@38 $generated@@137 $generated@@138)) $generated@@138) ($generated@@48 $generated@@137 ($generated@@38 $generated@@137 $generated@@138) $generated)))
 :pattern ( ($generated@@61 $generated@@138 $generated))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (or ($generated@@47 $generated@@139) (and ($generated@@48 $generated@@39 $generated@@139 $generated@@49) (not ($generated@@50 $generated@@139)))) (= ($generated@@45 $generated@@139) ($generated@@52 $generated@@139)))
 :pattern ( ($generated@@45 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (or ($generated@@47 $generated@@140) (and ($generated@@48 $generated@@39 $generated@@140 $generated@@49) (not ($generated@@50 $generated@@140)))) (<= ($generated@@51 0) ($generated@@45 $generated@@140)))
 :pattern ( ($generated@@45 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@61 ($generated@@85 $generated@@143 $generated@@141) $generated@@142) ($generated@@48 $generated@@143 $generated@@141 $generated@@142))
 :pattern ( ($generated@@61 ($generated@@85 $generated@@143 $generated@@141) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (<= 0 ($generated@@36 $generated@@144))
 :pattern ( ($generated@@36 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@30 $generated@@58 $generated@@145 ($generated@@60 $generated@@146) $generated@@147) (forall (($generated@@148 Int) ) (!  (=> (and (<= 0 $generated@@148) (< $generated@@148 ($generated@@36 $generated@@145))) ($generated@@101 ($generated@@34 $generated@@145 $generated@@148) $generated@@146 $generated@@147))
 :pattern ( ($generated@@34 $generated@@145 $generated@@148))
)))
 :pattern ( ($generated@@30 $generated@@58 $generated@@145 ($generated@@60 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@149 ($generated@@60 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@60 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@29 ($generated@@60 $generated@@151)) $generated@@1)
 :pattern ( ($generated@@60 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@70 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@70 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@79 ($generated@@88 $generated@@154)) $generated@@6)
 :pattern ( ($generated@@88 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@107 ($generated@@88 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@88 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@79 ($generated@@35 $generated@@156)) $generated@@7)
 :pattern ( ($generated@@35 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@125 ($generated@@35 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@35 $generated@@157))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@79 ($generated@@93 $generated@@158)) $generated@@8)
 :pattern ( ($generated@@93 $generated@@158))
)))
(assert (forall (($generated@@159 Int) ) (! (= ($generated@@52 ($generated@@93 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@93 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@79 ($generated@@42 $generated@@160)) $generated@@9)
 :pattern ( ($generated@@42 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@161 ($generated@@42 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@42 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@38 $generated@@164 ($generated@@85 $generated@@164 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@85 $generated@@164 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@48 $generated@@39 ($generated@@88 $generated@@166) ($generated@@70 $generated@@165)) ($generated@@61 $generated@@166 $generated@@165))
 :pattern ( ($generated@@48 $generated@@39 ($generated@@88 $generated@@166) ($generated@@70 $generated@@165)))
)))
(assert (forall (($generated@@169 Int) ) (!  (=> (or (and (<= 0 $generated@@169) (< $generated@@169 55296)) (and (<= 57344 $generated@@169) (< $generated@@169 1114112))) (= ($generated@@168 ($generated@@167 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! (< ($generated@@170 $generated@@171) ($generated@@37 ($generated@@88 $generated@@171)))
 :pattern ( ($generated@@88 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! (< ($generated@@172 $generated@@173) ($generated@@37 ($generated@@35 $generated@@173)))
 :pattern ( ($generated@@35 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (! (< ($generated@@172 $generated@@174) ($generated@@37 ($generated@@42 $generated@@174)))
 :pattern ( ($generated@@42 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and ($generated@@118 $generated@@177) (and ($generated@@78 $generated@@175) ($generated@@30 $generated@@39 $generated@@175 ($generated@@70 $generated@@176) $generated@@177))) ($generated@@101 ($generated@@107 $generated@@175) $generated@@176 $generated@@177))
 :pattern ( ($generated@@101 ($generated@@107 $generated@@175) $generated@@176 $generated@@177))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@178 $generated@@188 $generated@@189 $generated@@190 ($generated@@184 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@193 $generated@@194) $generated@@191)
 :weight 0
)) (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@178 $generated@@195 $generated@@196 $generated@@197 ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@178 $generated@@204 $generated@@205 $generated@@206 ($generated@@184 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@178 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (= ($generated@@13 $generated@@179) 7)) (= ($generated@@13 $generated@@180) 8)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@182 $generated@@213 $generated@@214 ($generated@@185 $generated@@213 $generated@@214 $generated@@216 $generated@@217 $generated@@215) $generated@@217) $generated@@215)
 :weight 0
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@222 $generated@@223) (= ($generated@@182 $generated@@218 $generated@@219 ($generated@@185 $generated@@218 $generated@@219 $generated@@221 $generated@@222 $generated@@220) $generated@@223) ($generated@@182 $generated@@218 $generated@@219 $generated@@221 $generated@@223)))
 :weight 0
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (= ($generated@@13 ($generated@@183 $generated@@224 $generated@@225)) 9))) (forall (($generated@@226 T@T) ($generated@@227 T@T) ) (! (= ($generated@@186 ($generated@@183 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@183 $generated@@226 $generated@@227))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= ($generated@@187 ($generated@@183 $generated@@228 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@183 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (= ($generated@@18 ($generated@@178 $generated@@179 $generated@@180 $generated@@14 ($generated@@181 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (or (not (= $generated@@234 $generated@@230)) (not true)) ($generated@@18 ($generated@@38 $generated@@14 ($generated@@182 $generated@@180 $generated@@106 ($generated@@182 $generated@@179 ($generated@@183 $generated@@180 $generated@@106) $generated@@231 $generated@@234) $generated@@232)))) $generated@@233))
 :pattern ( ($generated@@178 $generated@@179 $generated@@180 $generated@@14 ($generated@@181 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (and (= ($generated@@236 ($generated@@59 $generated@@238 $generated@@239)) $generated@@238) (= ($generated@@237 ($generated@@59 $generated@@238 $generated@@239)) $generated@@239))
 :pattern ( ($generated@@59 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@170 ($generated@@85 $generated@@39 $generated@@240)) ($generated@@37 $generated@@240))
 :pattern ( ($generated@@170 ($generated@@85 $generated@@39 $generated@@240)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> ($generated@@61 $generated@@241 ($generated@@60 $generated@@242)) (and (= ($generated@@85 $generated@@58 ($generated@@38 $generated@@58 $generated@@241)) $generated@@241) ($generated@@48 $generated@@58 ($generated@@38 $generated@@58 $generated@@241) ($generated@@60 $generated@@242))))
 :pattern ( ($generated@@61 $generated@@241 ($generated@@60 $generated@@242)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> ($generated@@61 $generated@@244 ($generated@@70 $generated@@243)) (and (= ($generated@@85 $generated@@39 ($generated@@38 $generated@@39 $generated@@244)) $generated@@244) ($generated@@48 $generated@@39 ($generated@@38 $generated@@39 $generated@@244) ($generated@@70 $generated@@243))))
 :pattern ( ($generated@@61 $generated@@244 ($generated@@70 $generated@@243)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= ($generated@@48 $generated@@39 ($generated@@35 $generated@@246) ($generated@@70 $generated@@245)) ($generated@@48 $generated@@58 $generated@@246 ($generated@@60 $generated)))
 :pattern ( ($generated@@48 $generated@@39 ($generated@@35 $generated@@246) ($generated@@70 $generated@@245)))
)))
(assert (forall (($generated@@247 T@U) ) (!  (and (= ($generated@@167 ($generated@@168 $generated@@247)) $generated@@247) (or (and (<= 0 ($generated@@168 $generated@@247)) (< ($generated@@168 $generated@@247) 55296)) (and (<= 57344 ($generated@@168 $generated@@247)) (< ($generated@@168 $generated@@247) 1114112))))
 :pattern ( ($generated@@168 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and ($generated@@118 $generated@@249) ($generated@@48 $generated@@39 $generated@@248 $generated@@49)) ($generated@@30 $generated@@39 $generated@@248 $generated@@49 $generated@@249))
 :pattern ( ($generated@@30 $generated@@39 $generated@@248 $generated@@49 $generated@@249))
)))
(assert (= ($generated@@29 $generated@@31) $generated@@3))
(assert (= ($generated@@110 $generated@@31) $generated@@10))
(assert (= ($generated@@29 $generated@@49) $generated@@4))
(assert (= ($generated@@110 $generated@@49) $generated@@11))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@48 $generated@@39 ($generated@@42 $generated@@250) $generated@@49) ($generated@@48 $generated@@58 $generated@@250 ($generated@@60 $generated)))
 :pattern ( ($generated@@48 $generated@@39 ($generated@@42 $generated@@250) $generated@@49))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and ($generated@@118 $generated@@252) (and ($generated@@66 $generated@@251) ($generated@@30 $generated@@39 $generated@@251 $generated@@49 $generated@@252))) ($generated@@30 $generated@@58 ($generated@@161 $generated@@251) ($generated@@60 $generated) $generated@@252))
 :pattern ( ($generated@@30 $generated@@58 ($generated@@161 $generated@@251) ($generated@@60 $generated) $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and ($generated@@118 $generated@@254) (and ($generated@@82 $generated@@253) ($generated@@30 $generated@@39 $generated@@253 $generated@@49 $generated@@254))) ($generated@@30 $generated@@15 ($generated@@19 ($generated@@52 $generated@@253)) $generated@@31 $generated@@254))
 :pattern ( ($generated@@30 $generated@@15 ($generated@@19 ($generated@@52 $generated@@253)) $generated@@31 $generated@@254))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@85 $generated@@15 ($generated@@19 ($generated@@51 $generated@@255))) ($generated@@46 $generated@@106 ($generated@@85 $generated@@15 ($generated@@19 $generated@@255))))
 :pattern ( ($generated@@85 $generated@@15 ($generated@@19 ($generated@@51 $generated@@255))))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@88 ($generated@@46 $generated@@106 $generated@@256)) ($generated@@46 $generated@@39 ($generated@@88 $generated@@256)))
 :pattern ( ($generated@@88 ($generated@@46 $generated@@106 $generated@@256)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@35 ($generated@@46 $generated@@58 $generated@@257)) ($generated@@46 $generated@@39 ($generated@@35 $generated@@257)))
 :pattern ( ($generated@@35 ($generated@@46 $generated@@58 $generated@@257)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@93 ($generated@@51 $generated@@258)) ($generated@@46 $generated@@39 ($generated@@93 $generated@@258)))
 :pattern ( ($generated@@93 ($generated@@51 $generated@@258)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@42 ($generated@@46 $generated@@58 $generated@@259)) ($generated@@46 $generated@@39 ($generated@@42 $generated@@259)))
 :pattern ( ($generated@@42 ($generated@@46 $generated@@58 $generated@@259)))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@T) ) (! (= ($generated@@85 $generated@@261 ($generated@@46 $generated@@261 $generated@@260)) ($generated@@46 $generated@@106 ($generated@@85 $generated@@261 $generated@@260)))
 :pattern ( ($generated@@85 $generated@@261 ($generated@@46 $generated@@261 $generated@@260)))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= ($generated@@36 $generated@@262) 0) (= $generated@@262 $generated@@54))
 :pattern ( ($generated@@36 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (or ($generated@@65 $generated@@263) ($generated@@48 $generated@@39 $generated@@263 $generated@@49)) (= ($generated@@50 $generated@@263) ($generated@@66 $generated@@263)))
 :pattern ( ($generated@@50 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! ($generated@@30 $generated@@137 $generated@@265 $generated $generated@@264)
 :pattern ( ($generated@@30 $generated@@137 $generated@@265 $generated $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= ($generated@@48 $generated@@58 $generated@@266 ($generated@@60 $generated@@267)) (forall (($generated@@268 Int) ) (!  (=> (and (<= 0 $generated@@268) (< $generated@@268 ($generated@@36 $generated@@266))) ($generated@@61 ($generated@@34 $generated@@266 $generated@@268) $generated@@267))
 :pattern ( ($generated@@34 $generated@@266 $generated@@268))
)))
 :pattern ( ($generated@@48 $generated@@58 $generated@@266 ($generated@@60 $generated@@267)))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 Int) ) (!  (=> (and (<= 0 $generated@@270) (< $generated@@270 ($generated@@36 $generated@@269))) (< ($generated@@37 ($generated@@38 $generated@@39 ($generated@@34 $generated@@269 $generated@@270))) ($generated@@172 $generated@@269)))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@39 ($generated@@34 $generated@@269 $generated@@270))))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (or ($generated@@69 $generated@@271 $generated@@272) (and ($generated@@48 $generated@@39 $generated@@272 ($generated@@70 $generated@@271)) (not ($generated@@71 $generated@@271 $generated@@272)))) (= ($generated@@68 $generated@@271 $generated@@272) ($generated@@107 $generated@@272)))
 :pattern ( ($generated@@68 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! ($generated@@48 $generated@@137 $generated@@273 $generated)
 :pattern ( ($generated@@48 $generated@@137 $generated@@273 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () Int)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 (T@U) Bool)
(declare-fun $generated@@286 () Int)
(declare-fun $generated@@287 () T@U)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 () Int)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@293  (=> (not ($generated@@50 $generated@@274)) (=> (and ($generated@@101 ($generated@@85 $generated@@39 $generated@@274) $generated@@49 $generated@@275) (= (ControlFlow 0 5) (- 0 4))) (not ($generated@@50 $generated@@274))))))
(let (($generated@@294 true))
(let (($generated@@295  (=> (and (not ($generated@@71 ($generated@@60 $generated) $generated@@276)) ($generated@@101 ($generated@@85 $generated@@39 $generated@@276) ($generated@@70 ($generated@@60 $generated)) $generated@@275)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (not ($generated@@71 ($generated@@60 $generated) $generated@@276))) (=> (and (not ($generated@@71 ($generated@@60 $generated) $generated@@276)) ($generated@@69 ($generated@@60 $generated) $generated@@276)) (=> (and (and (and ($generated@@69 ($generated@@60 $generated) $generated@@276) (= $generated@@277 ($generated@@38 $generated@@58 ($generated@@68 ($generated@@60 $generated) $generated@@276)))) (and ($generated@@48 $generated@@39 $generated@@278 $generated@@49) ($generated@@30 $generated@@39 $generated@@278 $generated@@49 $generated@@275))) (and (and (= $generated@@274 ($generated@@46 $generated@@39 ($generated@@42 ($generated@@46 $generated@@58 ($generated@@59 ($generated@@59 ($generated@@59 ($generated@@59 ($generated@@59 ($generated@@59 ($generated@@59 $generated@@54 ($generated@@85 $generated@@137 ($generated@@167 75))) ($generated@@85 $generated@@137 ($generated@@167 97))) ($generated@@85 $generated@@137 ($generated@@167 98))) ($generated@@85 $generated@@137 ($generated@@167 111))) ($generated@@85 $generated@@137 ($generated@@167 111))) ($generated@@85 $generated@@137 ($generated@@167 109))) ($generated@@85 $generated@@137 ($generated@@167 33))))))) ($generated@@101 ($generated@@85 $generated@@39 $generated@@274) $generated@@49 $generated@@275)) (and ($generated@@65 $generated@@274) ($generated@@65 $generated@@274)))) (and (=> (= (ControlFlow 0 6) 3) $generated@@294) (=> (= (ControlFlow 0 6) 5) $generated@@293))))))))
(let (($generated@@296 true))
(let (($generated@@297  (=> (and (not ($generated@@50 $generated@@279)) ($generated@@101 ($generated@@85 $generated@@39 $generated@@279) $generated@@49 $generated@@275)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (not ($generated@@50 $generated@@279))) (=> (and (not ($generated@@50 $generated@@279)) ($generated@@47 $generated@@279)) (=> (and (and (and ($generated@@47 $generated@@279) (= $generated@@280 ($generated@@45 $generated@@279))) (and ($generated@@48 $generated@@39 $generated@@281 ($generated@@70 ($generated@@60 $generated))) ($generated@@30 $generated@@39 $generated@@281 ($generated@@70 ($generated@@60 $generated)) $generated@@275))) (and (and (= $generated@@276 ($generated@@46 $generated@@39 ($generated@@88 ($generated@@85 $generated@@58 ($generated@@46 $generated@@58 ($generated@@59 ($generated@@59 ($generated@@59 ($generated@@59 ($generated@@59 ($generated@@59 ($generated@@59 $generated@@54 ($generated@@85 $generated@@137 ($generated@@167 72))) ($generated@@85 $generated@@137 ($generated@@167 111))) ($generated@@85 $generated@@137 ($generated@@167 111))) ($generated@@85 $generated@@137 ($generated@@167 114))) ($generated@@85 $generated@@137 ($generated@@167 97))) ($generated@@85 $generated@@137 ($generated@@167 121))) ($generated@@85 $generated@@137 ($generated@@167 33)))))))) ($generated@@101 ($generated@@85 $generated@@39 $generated@@276) ($generated@@70 ($generated@@60 $generated)) $generated@@275)) (and ($generated@@74 ($generated@@60 $generated) $generated@@276) ($generated@@74 ($generated@@60 $generated) $generated@@276)))) (and (=> (= (ControlFlow 0 8) 2) $generated@@296) (=> (= (ControlFlow 0 8) 6) $generated@@295))))))))
(let (($generated@@298 true))
(let (($generated@@299  (=> (= $generated@@282 ($generated@@181 $generated@@283 $generated@@275 $generated@@2 false)) (=> (and ($generated@@48 $generated@@39 $generated@@284 $generated@@49) ($generated@@30 $generated@@39 $generated@@284 $generated@@49 $generated@@275)) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@48 $generated@@15 ($generated@@19 ($generated@@51 42)) $generated@@31)) (=> ($generated@@48 $generated@@15 ($generated@@19 ($generated@@51 42)) $generated@@31) (=> (and (and (= $generated@@279 ($generated@@46 $generated@@39 ($generated@@93 ($generated@@51 42)))) ($generated@@101 ($generated@@85 $generated@@39 $generated@@279) $generated@@49 $generated@@275)) (and ($generated@@65 $generated@@279) ($generated@@65 $generated@@279))) (and (=> (= (ControlFlow 0 10) 1) $generated@@298) (=> (= (ControlFlow 0 10) 8) $generated@@297)))))))))
(let (($generated@@300  (=> (and (and ($generated@@118 $generated@@275) ($generated@@285 $generated@@275)) (and (<= ($generated@@51 0) $generated@@286) true)) (=> (and (and (and ($generated@@48 $generated@@39 $generated@@287 $generated@@49) ($generated@@30 $generated@@39 $generated@@287 $generated@@49 $generated@@275)) true) (and (and ($generated@@48 $generated@@58 $generated@@288 ($generated@@60 $generated)) ($generated@@30 $generated@@58 $generated@@288 ($generated@@60 $generated) $generated@@275)) true)) (=> (and (and (and (and ($generated@@48 $generated@@39 $generated@@289 ($generated@@70 ($generated@@60 $generated))) ($generated@@30 $generated@@39 $generated@@289 ($generated@@70 ($generated@@60 $generated)) $generated@@275)) true) (and (<= ($generated@@51 0) $generated@@290) true)) (and (and (and ($generated@@48 $generated@@39 $generated@@291 $generated@@49) ($generated@@30 $generated@@39 $generated@@291 $generated@@49 $generated@@275)) true) (and (= 2 $generated@@292) (= (ControlFlow 0 12) 10)))) $generated@@299)))))
$generated@@300)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
