(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (Int) T@U)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (T@U T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (= ($generated@@8 $generated@@30) 3))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or ($generated@@28 $generated@@43 $generated@@44 $generated@@45) (and (< 2 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@44 ($generated@@31 $generated@@0)) ($generated@@29 $generated@@30 $generated@@45 ($generated@@31 $generated@@0))))) (and (and (=> (< 0 ($generated@@32 $generated@@43)) (=> (not ($generated@@33 $generated@@44)) (let (($generated@@46 ($generated@@34 $generated@@44)))
(let (($generated@@47 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@44)))))
 (=> ($generated@@37 $generated@@45) (=> (<= $generated@@47 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@45)))) ($generated@@28 ($generated@@38 $generated@@43 ($generated@@39 1)) $generated@@46 ($generated@@34 $generated@@45)))))))) (=> (=> (< 0 ($generated@@32 $generated@@43)) (ite ($generated@@33 $generated@@44) true (let (($generated@@48 ($generated@@34 $generated@@44)))
(let (($generated@@49 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@44)))))
 (and (and ($generated@@37 $generated@@45) (<= $generated@@49 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@45))))) ($generated@@26 $generated@@42 ($generated@@38 $generated@@43 ($generated@@39 1)) $generated@@48 ($generated@@34 $generated@@45))))))) (=> (= ($generated@@40 0) ($generated@@32 $generated@@43)) (forall (($generated@@50 T@U) ) (!  (=> ($generated@@41 $generated@@50 $generated@@43) ($generated@@28 $generated@@50 $generated@@44 $generated@@45))
 :pattern ( ($generated@@26 $generated@@42 $generated@@50 $generated@@44 $generated@@45))
))))) (= ($generated@@26 ($generated@@27 $generated@@42) $generated@@43 $generated@@44 $generated@@45)  (and (=> (< 0 ($generated@@32 $generated@@43)) (ite ($generated@@33 $generated@@44) true (let (($generated@@51 ($generated@@34 $generated@@44)))
(let (($generated@@52 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@44)))))
 (and (and ($generated@@37 $generated@@45) (<= $generated@@52 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@45))))) ($generated@@26 $generated@@42 ($generated@@38 $generated@@43 ($generated@@39 1)) $generated@@51 ($generated@@34 $generated@@45))))))) (=> (= ($generated@@40 0) ($generated@@32 $generated@@43)) (forall (($generated@@53 T@U) ) (!  (=> ($generated@@41 $generated@@53 $generated@@43) ($generated@@26 $generated@@42 $generated@@53 $generated@@44 $generated@@45))
 :pattern ( ($generated@@26 $generated@@42 $generated@@53 $generated@@44 $generated@@45))
)))))))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@42) $generated@@43 $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (and ($generated@@41 $generated@@54 $generated@@55) ($generated@@41 $generated@@55 $generated@@56)) ($generated@@41 $generated@@54 $generated@@56))
 :pattern ( ($generated@@41 $generated@@54 $generated@@55) ($generated@@41 $generated@@55 $generated@@56))
 :pattern ( ($generated@@41 $generated@@54 $generated@@55) ($generated@@41 $generated@@54 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 Int) ($generated@@59 Int) ) (!  (=> (and (and (<= 0 $generated@@58) (<= 0 $generated@@59)) (<= (+ $generated@@58 $generated@@59) ($generated@@32 $generated@@57))) (= ($generated@@38 ($generated@@38 $generated@@57 ($generated@@39 $generated@@58)) ($generated@@39 $generated@@59)) ($generated@@38 $generated@@57 ($generated@@39 (+ $generated@@58 $generated@@59)))))
 :pattern ( ($generated@@38 ($generated@@38 $generated@@57 ($generated@@39 $generated@@58)) ($generated@@39 $generated@@59)))
)))
(assert (= ($generated@@60 $generated@@61) $generated@@5))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@63 $generated@@65) ($generated@@62 $generated@@30 $generated@@61 ($generated@@31 $generated@@64) $generated@@65))
 :pattern ( ($generated@@62 $generated@@30 $generated@@61 ($generated@@31 $generated@@64) $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ) (! ($generated@@29 $generated@@30 $generated@@61 ($generated@@31 $generated@@66))
 :pattern ( ($generated@@29 $generated@@30 $generated@@61 ($generated@@31 $generated@@66)))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and (and ($generated@@29 $generated@@30 $generated@@68 ($generated@@31 $generated@@0)) ($generated@@29 $generated@@30 $generated@@69 ($generated@@31 $generated@@0))) (= $generated@@70 ($generated@@39 0))) ($generated@@26 $generated@@67 $generated@@70 $generated@@68 $generated@@69))
 :pattern ( ($generated@@26 $generated@@67 $generated@@70 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@71 Int) ) (! (= ($generated@@40 $generated@@71) $generated@@71)
 :pattern ( ($generated@@40 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@75 $generated@@78 $generated@@79) ($generated@@31 $generated@@77))  (and ($generated@@76 $generated@@78 $generated@@77) ($generated@@29 $generated@@30 $generated@@79 ($generated@@31 $generated@@77))))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@75 $generated@@78 $generated@@79) ($generated@@31 $generated@@77)))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@33 $generated@@80) (= ($generated@@60 $generated@@80) $generated@@5))
 :pattern ( ($generated@@33 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@37 $generated@@81) (= ($generated@@60 $generated@@81) $generated@@6))
 :pattern ( ($generated@@37 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@35 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@35 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@37 $generated@@85) (exists (($generated@@86 T@U) ($generated@@87 T@U) ) (= $generated@@85 ($generated@@75 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@37 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@33 $generated@@88) (= $generated@@88 $generated@@61))
 :pattern ( ($generated@@33 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@89 ($generated@@27 $generated@@90) $generated@@91 $generated@@92) ($generated@@89 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@89 ($generated@@27 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@93 ($generated@@82 $generated@@97 $generated@@94) $generated@@95 $generated@@96) ($generated@@62 $generated@@97 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@93 ($generated@@82 $generated@@97 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@24 ($generated@@31 $generated@@99)) $generated@@4) (= ($generated@@98 ($generated@@31 $generated@@99)) $generated@@7))
 :pattern ( ($generated@@31 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (and ($generated@@100 $generated@@102) (<= ($generated@@32 $generated@@102) ($generated@@32 $generated@@101))) (and (= ($generated@@100 ($generated@@38 $generated@@101 $generated@@102)) ($generated@@100 $generated@@101)) (= ($generated@@32 ($generated@@38 $generated@@101 $generated@@102)) (- ($generated@@32 $generated@@101) ($generated@@32 $generated@@102)))))
 :pattern ( ($generated@@38 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 Int) ) (!  (=> (<= 0 $generated@@103) (and ($generated@@100 ($generated@@39 $generated@@103)) (= ($generated@@32 ($generated@@39 $generated@@103)) $generated@@103)))
 :pattern ( ($generated@@39 $generated@@103))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and (and ($generated@@29 $generated@@30 $generated@@105 ($generated@@31 $generated@@0)) ($generated@@29 $generated@@30 $generated@@106 ($generated@@31 $generated@@0))) ($generated@@89 ($generated@@27 $generated@@104) $generated@@105 $generated@@106)) (forall (($generated@@107 T@U) ) (! ($generated@@26 ($generated@@27 $generated@@104) $generated@@107 $generated@@105 $generated@@106)
 :pattern ( ($generated@@26 ($generated@@27 $generated@@104) $generated@@107 $generated@@105 $generated@@106))
)))
 :pattern ( ($generated@@89 ($generated@@27 $generated@@104) $generated@@105 $generated@@106))
))))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (or ($generated@@41 $generated@@108 $generated@@109) (= $generated@@108 $generated@@109)) ($generated@@41 $generated@@109 $generated@@108))
 :pattern ( ($generated@@41 $generated@@108 $generated@@109) ($generated@@41 $generated@@109 $generated@@108))
)))
(assert (= ($generated@@8 $generated@@110) 4))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or ($generated@@28 ($generated@@72 $generated@@110 $generated@@112) $generated@@113 $generated@@114) (and (< 2 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@113 ($generated@@31 $generated@@0)) ($generated@@29 $generated@@30 $generated@@114 ($generated@@31 $generated@@0))))) (and (and (=> (< 0 ($generated@@32 $generated@@112)) (=> (not ($generated@@33 $generated@@113)) (let (($generated@@115 ($generated@@34 $generated@@113)))
(let (($generated@@116 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@113)))))
 (=> ($generated@@37 $generated@@114) (=> (<= $generated@@116 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@114)))) ($generated@@28 ($generated@@38 $generated@@112 ($generated@@39 1)) $generated@@115 ($generated@@34 $generated@@114)))))))) (=> (=> (< 0 ($generated@@32 $generated@@112)) (ite ($generated@@33 $generated@@113) true (let (($generated@@117 ($generated@@34 $generated@@113)))
(let (($generated@@118 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@113)))))
 (and (and ($generated@@37 $generated@@114) (<= $generated@@118 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@114))))) ($generated@@26 ($generated@@27 $generated@@111) ($generated@@38 $generated@@112 ($generated@@39 1)) $generated@@117 ($generated@@34 $generated@@114))))))) (=> (= ($generated@@40 0) ($generated@@32 $generated@@112)) (forall (($generated@@119 T@U) ) (!  (=> ($generated@@41 $generated@@119 $generated@@112) ($generated@@28 $generated@@119 $generated@@113 $generated@@114))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@111) $generated@@119 $generated@@113 $generated@@114))
))))) (= ($generated@@26 ($generated@@27 $generated@@111) ($generated@@72 $generated@@110 $generated@@112) $generated@@113 $generated@@114)  (and (=> (< 0 ($generated@@32 $generated@@112)) (ite ($generated@@33 $generated@@113) true (let (($generated@@120 ($generated@@34 $generated@@113)))
(let (($generated@@121 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@113)))))
 (and (and ($generated@@37 $generated@@114) (<= $generated@@121 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@114))))) ($generated@@26 ($generated@@27 $generated@@111) ($generated@@38 $generated@@112 ($generated@@39 1)) $generated@@120 ($generated@@34 $generated@@114))))))) (=> (= ($generated@@40 0) ($generated@@32 $generated@@112)) (forall (($generated@@122 T@U) ) (!  (=> ($generated@@41 $generated@@122 $generated@@112) ($generated@@26 ($generated@@27 $generated@@111) $generated@@122 $generated@@113 $generated@@114))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@111) $generated@@122 $generated@@113 $generated@@114))
)))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@27 $generated@@111) ($generated@@72 $generated@@110 $generated@@112) $generated@@113 $generated@@114))
))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@124 ($generated@@31 $generated@@123)) (or ($generated@@33 $generated@@124) ($generated@@37 $generated@@124)))
 :pattern ( ($generated@@37 $generated@@124) ($generated@@29 $generated@@30 $generated@@124 ($generated@@31 $generated@@123)))
 :pattern ( ($generated@@33 $generated@@124) ($generated@@29 $generated@@30 $generated@@124 ($generated@@31 $generated@@123)))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@76 $generated@@125 $generated@@0) (and (= ($generated@@82 $generated@@10 ($generated@@35 $generated@@10 $generated@@125)) $generated@@125) ($generated@@29 $generated@@10 ($generated@@35 $generated@@10 $generated@@125) $generated@@0)))
 :pattern ( ($generated@@76 $generated@@125 $generated@@0))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@76 $generated@@126 $generated) (and (= ($generated@@82 $generated@@9 ($generated@@35 $generated@@9 $generated@@126)) $generated@@126) ($generated@@29 $generated@@9 ($generated@@35 $generated@@9 $generated@@126) $generated)))
 :pattern ( ($generated@@76 $generated@@126 $generated))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@76 ($generated@@82 $generated@@129 $generated@@127) $generated@@128) ($generated@@29 $generated@@129 $generated@@127 $generated@@128))
 :pattern ( ($generated@@76 ($generated@@82 $generated@@129 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@130) $generated@@131 $generated@@132 $generated@@133) ($generated@@26 $generated@@130 $generated@@131 $generated@@132 $generated@@133))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@130) $generated@@131 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (! (<= 0 ($generated@@32 $generated@@134))
 :pattern ( ($generated@@32 $generated@@134))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and ($generated@@29 $generated@@30 $generated@@136 ($generated@@31 $generated@@0)) ($generated@@29 $generated@@30 $generated@@137 ($generated@@31 $generated@@0))) (forall (($generated@@138 T@U) ) (! ($generated@@26 ($generated@@27 $generated@@135) $generated@@138 $generated@@136 $generated@@137)
 :pattern ( ($generated@@26 ($generated@@27 $generated@@135) $generated@@138 $generated@@136 $generated@@137))
))) ($generated@@89 ($generated@@27 $generated@@135) $generated@@136 $generated@@137))
 :pattern ( ($generated@@89 ($generated@@27 $generated@@135) $generated@@136 $generated@@137))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@60 ($generated@@75 $generated@@139 $generated@@140)) $generated@@6)
 :pattern ( ($generated@@75 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@36 ($generated@@75 $generated@@141 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@75 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@34 ($generated@@75 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@75 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@31 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@31 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@35 $generated@@148 ($generated@@82 $generated@@148 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@82 $generated@@148 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (and (and (and (=> ($generated@@41 $generated@@149 $generated@@150) (or (not (= $generated@@149 $generated@@150)) (not true))) (=> (and ($generated@@100 $generated@@149) (not ($generated@@100 $generated@@150))) ($generated@@41 $generated@@149 $generated@@150))) (=> (and ($generated@@100 $generated@@149) ($generated@@100 $generated@@150)) (= ($generated@@41 $generated@@149 $generated@@150) (< ($generated@@32 $generated@@149) ($generated@@32 $generated@@150))))) (=> (and ($generated@@41 $generated@@149 $generated@@150) ($generated@@100 $generated@@150)) ($generated@@100 $generated@@149)))
 :pattern ( ($generated@@41 $generated@@149 $generated@@150))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (or ($generated@@28 ($generated@@72 $generated@@110 $generated@@152) ($generated@@72 $generated@@30 $generated@@153) ($generated@@72 $generated@@30 $generated@@154)) (and (< 2 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@153 ($generated@@31 $generated@@0)) ($generated@@29 $generated@@30 $generated@@154 ($generated@@31 $generated@@0))))) (and (and (=> (< 0 ($generated@@32 $generated@@152)) (=> (not ($generated@@13 ($generated@@72 $generated@@9 ($generated@@12 ($generated@@33 ($generated@@72 $generated@@30 $generated@@153)))))) (let (($generated@@155 ($generated@@72 $generated@@30 ($generated@@34 ($generated@@72 $generated@@30 $generated@@153)))))
(let (($generated@@156 ($generated@@40 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 ($generated@@72 $generated@@30 $generated@@153)))))))
 (=> ($generated@@13 ($generated@@72 $generated@@9 ($generated@@12 ($generated@@37 ($generated@@72 $generated@@30 $generated@@154))))) (=> (<= $generated@@156 ($generated@@40 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 ($generated@@72 $generated@@30 $generated@@154)))))) ($generated@@28 ($generated@@38 $generated@@152 ($generated@@39 1)) $generated@@155 ($generated@@72 $generated@@30 ($generated@@34 ($generated@@72 $generated@@30 $generated@@154)))))))))) (=> (=> (< 0 ($generated@@32 $generated@@152)) (ite ($generated@@33 ($generated@@72 $generated@@30 $generated@@153)) true (let (($generated@@157 ($generated@@72 $generated@@30 ($generated@@34 ($generated@@72 $generated@@30 $generated@@153)))))
(let (($generated@@158 ($generated@@40 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 ($generated@@72 $generated@@30 $generated@@153)))))))
 (and (and ($generated@@37 ($generated@@72 $generated@@30 $generated@@154)) (<= $generated@@158 ($generated@@40 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 ($generated@@72 $generated@@30 $generated@@154))))))) ($generated@@26 ($generated@@27 $generated@@151) ($generated@@38 $generated@@152 ($generated@@39 1)) $generated@@157 ($generated@@72 $generated@@30 ($generated@@34 ($generated@@72 $generated@@30 $generated@@154))))))))) (=> (= ($generated@@40 0) ($generated@@32 $generated@@152)) (forall (($generated@@159 T@U) ) (!  (=> ($generated@@41 $generated@@159 $generated@@152) ($generated@@28 $generated@@159 $generated@@153 $generated@@154))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@151) $generated@@159 $generated@@153 $generated@@154))
))))) (= ($generated@@26 ($generated@@27 $generated@@151) ($generated@@72 $generated@@110 $generated@@152) ($generated@@72 $generated@@30 $generated@@153) ($generated@@72 $generated@@30 $generated@@154))  (and (=> (< 0 ($generated@@32 $generated@@152)) (ite ($generated@@33 ($generated@@72 $generated@@30 $generated@@153)) true (let (($generated@@160 ($generated@@72 $generated@@30 ($generated@@34 ($generated@@72 $generated@@30 $generated@@153)))))
(let (($generated@@161 ($generated@@40 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 ($generated@@72 $generated@@30 $generated@@153)))))))
 (and (and ($generated@@37 ($generated@@72 $generated@@30 $generated@@154)) (<= $generated@@161 ($generated@@40 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 ($generated@@72 $generated@@30 $generated@@154))))))) ($generated@@26 ($generated@@27 $generated@@151) ($generated@@38 $generated@@152 ($generated@@39 1)) $generated@@160 ($generated@@72 $generated@@30 ($generated@@34 ($generated@@72 $generated@@30 $generated@@154))))))))) (=> (= ($generated@@40 0) ($generated@@32 $generated@@152)) (forall (($generated@@162 T@U) ) (!  (=> ($generated@@41 $generated@@162 $generated@@152) ($generated@@26 ($generated@@27 $generated@@151) $generated@@162 $generated@@153 $generated@@154))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@151) $generated@@162 $generated@@153 $generated@@154))
)))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@27 $generated@@151) ($generated@@72 $generated@@110 $generated@@152) ($generated@@72 $generated@@30 $generated@@153) ($generated@@72 $generated@@30 $generated@@154)))
))))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (or ($generated@@163 $generated@@165 $generated@@166) (and (< 1 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@165 ($generated@@31 $generated@@0)) ($generated@@29 $generated@@30 $generated@@166 ($generated@@31 $generated@@0))))) (and (=> (not ($generated@@33 $generated@@165)) (let (($generated@@167 ($generated@@34 $generated@@165)))
(let (($generated@@168 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@165)))))
 (=> ($generated@@37 $generated@@166) (=> (<= $generated@@168 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@166)))) ($generated@@163 $generated@@167 ($generated@@34 $generated@@166))))))) (= ($generated@@89 ($generated@@27 $generated@@164) $generated@@165 $generated@@166) (ite ($generated@@33 $generated@@165) true (let (($generated@@169 ($generated@@34 $generated@@165)))
(let (($generated@@170 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@165)))))
 (and (and ($generated@@37 $generated@@166) (<= $generated@@170 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@166))))) ($generated@@89 $generated@@164 $generated@@169 ($generated@@34 $generated@@166)))))))))
 :pattern ( ($generated@@89 ($generated@@27 $generated@@164) $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@63 $generated@@173) (and ($generated@@37 $generated@@171) ($generated@@62 $generated@@30 $generated@@171 ($generated@@31 $generated@@172) $generated@@173))) ($generated@@93 ($generated@@36 $generated@@171) $generated@@172 $generated@@173))
 :pattern ( ($generated@@93 ($generated@@36 $generated@@171) $generated@@172 $generated@@173))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@174 $generated@@184 $generated@@185 $generated@@186 ($generated@@180 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@189 $generated@@190) $generated@@187)
 :weight 0
)) (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@174 $generated@@191 $generated@@192 $generated@@193 ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@174 $generated@@200 $generated@@201 $generated@@202 ($generated@@180 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@174 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (= ($generated@@8 $generated@@175) 5)) (= ($generated@@8 $generated@@176) 6)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (= ($generated@@178 $generated@@209 $generated@@210 ($generated@@181 $generated@@209 $generated@@210 $generated@@212 $generated@@213 $generated@@211) $generated@@213) $generated@@211)
 :weight 0
))) (forall (($generated@@214 T@T) ($generated@@215 T@T) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@218 $generated@@219) (= ($generated@@178 $generated@@214 $generated@@215 ($generated@@181 $generated@@214 $generated@@215 $generated@@217 $generated@@218 $generated@@216) $generated@@219) ($generated@@178 $generated@@214 $generated@@215 $generated@@217 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (= ($generated@@8 ($generated@@179 $generated@@220 $generated@@221)) 7))) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= ($generated@@182 ($generated@@179 $generated@@222 $generated@@223)) $generated@@222)
 :pattern ( ($generated@@179 $generated@@222 $generated@@223))
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (! (= ($generated@@183 ($generated@@179 $generated@@224 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@179 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (= ($generated@@13 ($generated@@174 $generated@@175 $generated@@176 $generated@@9 ($generated@@177 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (or (not (= $generated@@230 $generated@@226)) (not true)) ($generated@@13 ($generated@@35 $generated@@9 ($generated@@178 $generated@@176 $generated@@110 ($generated@@178 $generated@@175 ($generated@@179 $generated@@176 $generated@@110) $generated@@227 $generated@@230) $generated@@228)))) $generated@@229))
 :pattern ( ($generated@@174 $generated@@175 $generated@@176 $generated@@9 ($generated@@177 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> ($generated@@76 $generated@@233 ($generated@@31 $generated@@232)) (and (= ($generated@@82 $generated@@30 ($generated@@35 $generated@@30 $generated@@233)) $generated@@233) ($generated@@29 $generated@@30 ($generated@@35 $generated@@30 $generated@@233) ($generated@@31 $generated@@232))))
 :pattern ( ($generated@@76 $generated@@233 ($generated@@31 $generated@@232)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> ($generated@@100 $generated@@234) (= $generated@@234 ($generated@@39 ($generated@@32 $generated@@234))))
 :pattern ( ($generated@@32 $generated@@234))
 :pattern ( ($generated@@100 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and ($generated@@63 $generated@@237) (and ($generated@@37 $generated@@235) ($generated@@62 $generated@@30 $generated@@235 ($generated@@31 $generated@@236) $generated@@237))) ($generated@@62 $generated@@30 ($generated@@34 $generated@@235) ($generated@@31 $generated@@236) $generated@@237))
 :pattern ( ($generated@@62 $generated@@30 ($generated@@34 $generated@@235) ($generated@@31 $generated@@236) $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and ($generated@@100 $generated@@239) (<= ($generated@@32 $generated@@239) ($generated@@32 $generated@@238))) (or (and (= $generated@@239 ($generated@@39 0)) (= ($generated@@38 $generated@@238 $generated@@239) $generated@@238)) (and (or (not (= $generated@@239 ($generated@@39 0))) (not true)) ($generated@@41 ($generated@@38 $generated@@238 $generated@@239) $generated@@238))))
 :pattern ( ($generated@@38 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 Int) ) (! (= ($generated@@82 $generated@@10 ($generated@@14 ($generated@@40 $generated@@240))) ($generated@@72 $generated@@110 ($generated@@82 $generated@@10 ($generated@@14 $generated@@240))))
 :pattern ( ($generated@@82 $generated@@10 ($generated@@14 ($generated@@40 $generated@@240))))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (= ($generated@@82 $generated@@242 ($generated@@72 $generated@@242 $generated@@241)) ($generated@@72 $generated@@110 ($generated@@82 $generated@@242 $generated@@241)))
 :pattern ( ($generated@@82 $generated@@242 ($generated@@72 $generated@@242 $generated@@241)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! ($generated@@62 $generated@@10 $generated@@244 $generated@@0 $generated@@243)
 :pattern ( ($generated@@62 $generated@@10 $generated@@244 $generated@@0 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! ($generated@@62 $generated@@9 $generated@@246 $generated $generated@@245)
 :pattern ( ($generated@@62 $generated@@9 $generated@@246 $generated $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> ($generated@@63 $generated@@250) (= ($generated@@62 $generated@@30 ($generated@@75 $generated@@248 $generated@@249) ($generated@@31 $generated@@247) $generated@@250)  (and ($generated@@93 $generated@@248 $generated@@247 $generated@@250) ($generated@@62 $generated@@30 $generated@@249 ($generated@@31 $generated@@247) $generated@@250))))
 :pattern ( ($generated@@62 $generated@@30 ($generated@@75 $generated@@248 $generated@@249) ($generated@@31 $generated@@247) $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (! ($generated@@29 $generated@@10 $generated@@251 $generated@@0)
 :pattern ( ($generated@@29 $generated@@10 $generated@@251 $generated@@0))
)))
(assert (forall (($generated@@252 T@U) ) (! ($generated@@29 $generated@@9 $generated@@252 $generated)
 :pattern ( ($generated@@29 $generated@@9 $generated@@252 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () Int)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () Int)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@266 true))
(let (($generated@@267  (=> (and (not (and ($generated@@37 $generated@@253) (<= $generated@@254 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@253)))))) (= (ControlFlow 0 7) 4)) $generated@@266)))
(let (($generated@@268  (=> (and (and ($generated@@37 $generated@@253) (<= $generated@@254 ($generated@@15 ($generated@@35 $generated@@10 ($generated@@36 $generated@@253))))) ($generated@@62 $generated@@30 $generated@@255 ($generated@@31 $generated@@0) $generated@@256)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@37 $generated@@253)) (=> ($generated@@37 $generated@@253) (=> (and (and (= $generated@@257 ($generated@@34 $generated@@253)) ($generated@@62 $generated@@30 $generated@@257 ($generated@@31 $generated@@0) $generated@@256)) (and ($generated@@163 $generated@@255 ($generated@@34 $generated@@253)) (= (ControlFlow 0 5) 4))) $generated@@266))))))
(let (($generated@@269  (=> (not ($generated@@37 $generated@@253)) (and (=> (= (ControlFlow 0 10) 5) $generated@@268) (=> (= (ControlFlow 0 10) 7) $generated@@267)))))
(let (($generated@@270  (=> ($generated@@37 $generated@@253) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@37 $generated@@253)) (=> ($generated@@37 $generated@@253) (and (=> (= (ControlFlow 0 8) 5) $generated@@268) (=> (= (ControlFlow 0 8) 7) $generated@@267)))))))
(let (($generated@@271  (=> (and (and (and (= $generated@@258 ($generated@@75 ($generated@@82 $generated@@10 ($generated@@14 $generated@@259)) $generated@@260)) ($generated@@29 $generated@@30 $generated@@260 ($generated@@31 $generated@@0))) (and (= $generated@@261 $generated@@260) ($generated@@29 $generated@@30 $generated@@261 ($generated@@31 $generated@@0)))) (and (and (= $generated@@255 $generated@@261) (= $generated@@262 $generated@@259)) (and ($generated@@29 $generated@@10 ($generated@@14 $generated@@262) $generated@@0) (= $generated@@254 $generated@@262)))) (and (=> (= (ControlFlow 0 11) 8) $generated@@270) (=> (= (ControlFlow 0 11) 10) $generated@@269)))))
(let (($generated@@272 true))
(let (($generated@@273  (=> (or (not (= $generated@@258 $generated@@61)) (not true)) (and (=> (= (ControlFlow 0 12) 11) $generated@@271) (=> (= (ControlFlow 0 12) 3) $generated@@272)))))
(let (($generated@@274 true))
(let (($generated@@275 true))
(let (($generated@@276  (=> (= $generated@@263 ($generated@@177 $generated@@264 $generated@@256 $generated@@3 false)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@275) (=> (= (ControlFlow 0 13) 2) $generated@@274)) (=> (= (ControlFlow 0 13) 12) $generated@@273)))))
(let (($generated@@277  (=> (and ($generated@@63 $generated@@256) ($generated@@265 $generated@@256)) (=> (and (and ($generated@@29 $generated@@30 $generated@@258 ($generated@@31 $generated@@0)) ($generated@@29 $generated@@30 $generated@@253 ($generated@@31 $generated@@0))) (and (= 1 $generated@@25) (= (ControlFlow 0 14) 13))) $generated@@276))))
$generated@@277)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
