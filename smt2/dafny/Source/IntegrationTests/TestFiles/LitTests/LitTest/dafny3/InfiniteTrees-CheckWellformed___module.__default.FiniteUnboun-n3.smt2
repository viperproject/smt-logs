(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (Int) T@U)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@50 () Int)
(declare-fun $generated@@51 (T@U T@U Int) Bool)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (Int) Int)
(declare-fun $generated@@54 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@60 () Bool)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 (T@U Int) T@U)
(declare-fun $generated@@63 (Int) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@U T@U Int) Bool)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U) Bool)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@127 (T@U Int) T@U)
(declare-fun $generated@@128 (Int) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@195 (T@U) Int)
(declare-fun $generated@@200 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@201 () T@T)
(declare-fun $generated@@202 () T@T)
(declare-fun $generated@@203 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@204 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@205 (T@T T@T) T@T)
(declare-fun $generated@@206 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@266 (T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@11 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@11 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 Int) ($generated@@38 Int) ) (!  (=> (and (and (<= 0 $generated@@37) (<= 0 $generated@@38)) (<= (+ $generated@@37 $generated@@38) ($generated@@35 $generated@@36))) (= ($generated@@33 ($generated@@33 $generated@@36 ($generated@@34 $generated@@37)) ($generated@@34 $generated@@38)) ($generated@@33 $generated@@36 ($generated@@34 (+ $generated@@37 $generated@@38)))))
 :pattern ( ($generated@@33 ($generated@@33 $generated@@36 ($generated@@34 $generated@@37)) ($generated@@34 $generated@@38)))
)))
(assert (= ($generated@@39 $generated@@40) $generated@@3))
(assert (= ($generated@@9 $generated@@43) 3))
(assert (forall (($generated@@45 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@45 $generated@@44) ($generated@@41 $generated@@45))
 :pattern ( ($generated@@41 $generated@@45) ($generated@@42 $generated@@43 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> ($generated@@47 $generated@@49) ($generated@@29 $generated@@43 $generated@@40 ($generated@@46 $generated@@48) $generated@@49))
 :pattern ( ($generated@@29 $generated@@43 $generated@@40 ($generated@@46 $generated@@48) $generated@@49))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 Int) ) (!  (=> (and (and ($generated@@42 $generated@@43 $generated@@56 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@57)) ($generated@@51 ($generated@@52 $generated@@55) $generated@@56 $generated@@57)) (forall (($generated@@58 T@U) ) (! ($generated@@54 ($generated@@52 $generated@@55) $generated@@58 $generated@@56 $generated@@57)
 :pattern ( ($generated@@54 ($generated@@52 $generated@@55) $generated@@58 $generated@@56 $generated@@57))
)))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@55) $generated@@56 $generated@@57))
))))
(assert (forall (($generated@@59 T@U) ) (! ($generated@@42 $generated@@43 $generated@@40 ($generated@@46 $generated@@59))
 :pattern ( ($generated@@42 $generated@@43 $generated@@40 ($generated@@46 $generated@@59)))
)))
(assert  (=> (<= 5 $generated@@50) (=> (or $generated@@60 (< 5 $generated@@50)) ($generated@@42 $generated@@43 $generated@@61 $generated@@44))))
(assert  (=> (<= 4 $generated@@50) (forall (($generated@@64 T@U) ($generated@@65 Int) ) (!  (=> (or ($generated@@63 $generated@@65) (and (< 4 $generated@@50) (<= ($generated@@53 0) $generated@@65))) ($generated@@42 $generated@@43 ($generated@@62 $generated@@64 $generated@@65) ($generated@@46 $generated@@44)))
 :pattern ( ($generated@@62 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@53 $generated@@66) $generated@@66)
 :pattern ( ($generated@@53 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert (= ($generated@@9 $generated@@70) 4))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 Int) ) (!  (=> (or ($generated@@71 ($generated@@67 $generated@@70 $generated@@78) ($generated@@67 $generated@@43 $generated@@79) ($generated@@53 $generated@@80)) (and (< 3 $generated@@50) (and ($generated@@42 $generated@@43 $generated@@79 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@80)))) (and (and (=> (< 0 ($generated@@35 $generated@@78)) (=> (not ($generated@@14 ($generated@@67 $generated@@10 ($generated@@13 ($generated@@72 ($generated@@67 $generated@@43 $generated@@79)))))) (let (($generated@@81 ($generated@@67 $generated@@43 ($generated@@73 ($generated@@67 $generated@@43 $generated@@79)))))
(let (($generated@@82 ($generated@@67 $generated@@43 ($generated@@74 $generated@@43 ($generated@@75 ($generated@@67 $generated@@43 $generated@@79))))))
 (=> (<= ($generated@@53 1) ($generated@@53 $generated@@80)) (and (and ($generated@@41 $generated@@82) ($generated@@71 ($generated@@33 $generated@@78 ($generated@@34 1)) ($generated@@76 $generated@@82) ($generated@@53 (- $generated@@80 1)))) (=> ($generated@@54 ($generated@@52 $generated@@77) ($generated@@33 $generated@@78 ($generated@@34 1)) ($generated@@76 $generated@@82) ($generated@@53 (- $generated@@80 1))) ($generated@@71 ($generated@@33 $generated@@78 ($generated@@34 1)) $generated@@81 ($generated@@53 $generated@@80))))))))) (=> (=> (< 0 ($generated@@35 $generated@@78)) (ite ($generated@@72 ($generated@@67 $generated@@43 $generated@@79)) true (let (($generated@@83 ($generated@@67 $generated@@43 ($generated@@73 ($generated@@67 $generated@@43 $generated@@79)))))
(let (($generated@@84 ($generated@@67 $generated@@43 ($generated@@74 $generated@@43 ($generated@@75 ($generated@@67 $generated@@43 $generated@@79))))))
 (and (and (<= ($generated@@53 1) ($generated@@53 $generated@@80)) ($generated@@54 ($generated@@52 $generated@@77) ($generated@@33 $generated@@78 ($generated@@34 1)) ($generated@@67 $generated@@43 ($generated@@76 $generated@@84)) ($generated@@53 (- $generated@@80 1)))) ($generated@@54 ($generated@@52 $generated@@77) ($generated@@33 $generated@@78 ($generated@@34 1)) $generated@@83 ($generated@@53 $generated@@80))))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@78)) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@25 $generated@@85 $generated@@78) ($generated@@71 $generated@@85 $generated@@79 $generated@@80))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@77) $generated@@85 $generated@@79 $generated@@80))
))))) (= ($generated@@54 ($generated@@52 $generated@@77) ($generated@@67 $generated@@70 $generated@@78) ($generated@@67 $generated@@43 $generated@@79) ($generated@@53 $generated@@80))  (and (=> (< 0 ($generated@@35 $generated@@78)) (ite ($generated@@72 ($generated@@67 $generated@@43 $generated@@79)) true (let (($generated@@86 ($generated@@67 $generated@@43 ($generated@@73 ($generated@@67 $generated@@43 $generated@@79)))))
(let (($generated@@87 ($generated@@67 $generated@@43 ($generated@@74 $generated@@43 ($generated@@75 ($generated@@67 $generated@@43 $generated@@79))))))
 (and (and (<= ($generated@@53 1) ($generated@@53 $generated@@80)) ($generated@@54 ($generated@@52 $generated@@77) ($generated@@33 $generated@@78 ($generated@@34 1)) ($generated@@67 $generated@@43 ($generated@@76 $generated@@87)) ($generated@@53 (- $generated@@80 1)))) ($generated@@54 ($generated@@52 $generated@@77) ($generated@@33 $generated@@78 ($generated@@34 1)) $generated@@86 ($generated@@53 $generated@@80))))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@78)) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@25 $generated@@88 $generated@@78) ($generated@@54 ($generated@@52 $generated@@77) $generated@@88 $generated@@79 $generated@@80))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@77) $generated@@88 $generated@@79 $generated@@80))
)))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@52 $generated@@77) ($generated@@67 $generated@@70 $generated@@78) ($generated@@67 $generated@@43 $generated@@79) ($generated@@53 $generated@@80)))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@42 $generated@@43 ($generated@@89 $generated@@92 $generated@@93) ($generated@@46 $generated@@91))  (and ($generated@@90 $generated@@92 $generated@@91) ($generated@@42 $generated@@43 $generated@@93 ($generated@@46 $generated@@91))))
 :pattern ( ($generated@@42 $generated@@43 ($generated@@89 $generated@@92 $generated@@93) ($generated@@46 $generated@@91)))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@72 $generated@@94) (= ($generated@@39 $generated@@94) $generated@@3))
 :pattern ( ($generated@@72 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@95 $generated@@96) (= ($generated@@39 $generated@@96) $generated@@4))
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@41 $generated@@97) (= ($generated@@39 $generated@@97) $generated@@5))
 :pattern ( ($generated@@41 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 ($generated@@74 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@74 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@95 $generated@@101) (exists (($generated@@102 T@U) ($generated@@103 T@U) ) (= $generated@@101 ($generated@@89 $generated@@102 $generated@@103))))
 :pattern ( ($generated@@95 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@72 $generated@@104) (= $generated@@104 $generated@@40))
 :pattern ( ($generated@@72 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@41 $generated@@106) (exists (($generated@@107 T@U) ) (= $generated@@106 ($generated@@105 $generated@@107))))
 :pattern ( ($generated@@41 $generated@@106))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 Int) ) (!  (=> (and (and ($generated@@42 $generated@@43 $generated@@109 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@110)) (forall (($generated@@111 T@U) ) (! ($generated@@54 ($generated@@52 $generated@@108) $generated@@111 $generated@@109 $generated@@110)
 :pattern ( ($generated@@54 ($generated@@52 $generated@@108) $generated@@111 $generated@@109 $generated@@110))
))) ($generated@@51 ($generated@@52 $generated@@108) $generated@@109 $generated@@110))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@108) $generated@@109 $generated@@110))
))))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@42 $generated@@11 $generated@@112 $generated@@30) (<= ($generated@@53 0) ($generated@@16 $generated@@112)))
 :pattern ( ($generated@@42 $generated@@11 $generated@@112 $generated@@30))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 Int) ) (! (= ($generated@@51 ($generated@@52 $generated@@113) $generated@@114 $generated@@115) ($generated@@51 $generated@@113 $generated@@114 $generated@@115))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@113) $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@116 ($generated@@98 $generated@@120 $generated@@117) $generated@@118 $generated@@119) ($generated@@29 $generated@@120 $generated@@117 $generated@@118 $generated@@119))
 :pattern ( ($generated@@116 ($generated@@98 $generated@@120 $generated@@117) $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@123 T@U) ) (!  (and (= ($generated@@121 ($generated@@46 $generated@@123)) $generated@@1) (= ($generated@@122 ($generated@@46 $generated@@123)) $generated@@7))
 :pattern ( ($generated@@46 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@124 $generated@@126) (<= ($generated@@35 $generated@@126) ($generated@@35 $generated@@125))) (and (= ($generated@@124 ($generated@@33 $generated@@125 $generated@@126)) ($generated@@124 $generated@@125)) (= ($generated@@35 ($generated@@33 $generated@@125 $generated@@126)) (- ($generated@@35 $generated@@125) ($generated@@35 $generated@@126)))))
 :pattern ( ($generated@@33 $generated@@125 $generated@@126))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@129 T@U) ($generated@@130 Int) ) (!  (=> (or ($generated@@128 $generated@@130) (and (< 3 $generated@@50) (<= ($generated@@53 0) $generated@@130))) (and (=> (or (not (= $generated@@130 ($generated@@53 0))) (not true)) ($generated@@128 (- $generated@@130 1))) (= ($generated@@127 ($generated@@52 $generated@@129) $generated@@130) (ite (= $generated@@130 ($generated@@53 0)) ($generated@@105 ($generated@@67 $generated@@43 $generated@@40)) ($generated@@105 ($generated@@89 ($generated@@98 $generated@@43 ($generated@@127 $generated@@129 (- $generated@@130 1))) ($generated@@67 $generated@@43 $generated@@40)))))))
 :pattern ( ($generated@@127 ($generated@@52 $generated@@129) $generated@@130))
))))
(assert (forall (($generated@@131 Int) ) (!  (=> (<= 0 $generated@@131) (and ($generated@@124 ($generated@@34 $generated@@131)) (= ($generated@@35 ($generated@@34 $generated@@131)) $generated@@131)))
 :pattern ( ($generated@@34 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@90 $generated@@132 $generated@@30) (and (= ($generated@@98 $generated@@11 ($generated@@74 $generated@@11 $generated@@132)) $generated@@132) ($generated@@42 $generated@@11 ($generated@@74 $generated@@11 $generated@@132) $generated@@30)))
 :pattern ( ($generated@@90 $generated@@132 $generated@@30))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@90 $generated@@133 $generated@@44) (and (= ($generated@@98 $generated@@43 ($generated@@74 $generated@@43 $generated@@133)) $generated@@133) ($generated@@42 $generated@@43 ($generated@@74 $generated@@43 $generated@@133) $generated@@44)))
 :pattern ( ($generated@@90 $generated@@133 $generated@@44))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (or ($generated@@25 $generated@@134 $generated@@135) (= $generated@@134 $generated@@135)) ($generated@@25 $generated@@135 $generated@@134))
 :pattern ( ($generated@@25 $generated@@134 $generated@@135) ($generated@@25 $generated@@135 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@42 $generated@@43 ($generated@@105 $generated@@136) $generated@@44) ($generated@@42 $generated@@43 $generated@@136 ($generated@@46 $generated@@44)))
 :pattern ( ($generated@@42 $generated@@43 ($generated@@105 $generated@@136) $generated@@44))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 Int) ) (!  (=> (or ($generated@@71 ($generated@@67 $generated@@70 $generated@@138) $generated@@139 $generated@@140) (and (< 3 $generated@@50) (and ($generated@@42 $generated@@43 $generated@@139 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@140)))) (and (and (=> (< 0 ($generated@@35 $generated@@138)) (=> (not ($generated@@72 $generated@@139)) (let (($generated@@141 ($generated@@73 $generated@@139)))
(let (($generated@@142 ($generated@@74 $generated@@43 ($generated@@75 $generated@@139))))
 (=> (<= ($generated@@53 1) $generated@@140) (and (and ($generated@@41 $generated@@142) ($generated@@71 ($generated@@33 $generated@@138 ($generated@@34 1)) ($generated@@76 $generated@@142) (- $generated@@140 1))) (=> ($generated@@54 ($generated@@52 $generated@@137) ($generated@@33 $generated@@138 ($generated@@34 1)) ($generated@@76 $generated@@142) (- $generated@@140 1)) ($generated@@71 ($generated@@33 $generated@@138 ($generated@@34 1)) $generated@@141 $generated@@140)))))))) (=> (=> (< 0 ($generated@@35 $generated@@138)) (ite ($generated@@72 $generated@@139) true (let (($generated@@143 ($generated@@73 $generated@@139)))
(let (($generated@@144 ($generated@@74 $generated@@43 ($generated@@75 $generated@@139))))
 (and (and (<= ($generated@@53 1) $generated@@140) ($generated@@54 ($generated@@52 $generated@@137) ($generated@@33 $generated@@138 ($generated@@34 1)) ($generated@@76 $generated@@144) (- $generated@@140 1))) ($generated@@54 ($generated@@52 $generated@@137) ($generated@@33 $generated@@138 ($generated@@34 1)) $generated@@143 $generated@@140)))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@138)) (forall (($generated@@145 T@U) ) (!  (=> ($generated@@25 $generated@@145 $generated@@138) ($generated@@71 $generated@@145 $generated@@139 $generated@@140))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@137) $generated@@145 $generated@@139 $generated@@140))
))))) (= ($generated@@54 ($generated@@52 $generated@@137) ($generated@@67 $generated@@70 $generated@@138) $generated@@139 $generated@@140)  (and (=> (< 0 ($generated@@35 $generated@@138)) (ite ($generated@@72 $generated@@139) true (let (($generated@@146 ($generated@@73 $generated@@139)))
(let (($generated@@147 ($generated@@74 $generated@@43 ($generated@@75 $generated@@139))))
 (and (and (<= ($generated@@53 1) $generated@@140) ($generated@@54 ($generated@@52 $generated@@137) ($generated@@33 $generated@@138 ($generated@@34 1)) ($generated@@76 $generated@@147) (- $generated@@140 1))) ($generated@@54 ($generated@@52 $generated@@137) ($generated@@33 $generated@@138 ($generated@@34 1)) $generated@@146 $generated@@140)))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@138)) (forall (($generated@@148 T@U) ) (!  (=> ($generated@@25 $generated@@148 $generated@@138) ($generated@@54 ($generated@@52 $generated@@137) $generated@@148 $generated@@139 $generated@@140))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@137) $generated@@148 $generated@@139 $generated@@140))
)))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@52 $generated@@137) ($generated@@67 $generated@@70 $generated@@138) $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@150 ($generated@@46 $generated@@149)) (or ($generated@@72 $generated@@150) ($generated@@95 $generated@@150)))
 :pattern ( ($generated@@95 $generated@@150) ($generated@@42 $generated@@43 $generated@@150 ($generated@@46 $generated@@149)))
 :pattern ( ($generated@@72 $generated@@150) ($generated@@42 $generated@@43 $generated@@150 ($generated@@46 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@90 ($generated@@98 $generated@@153 $generated@@151) $generated@@152) ($generated@@42 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@90 ($generated@@98 $generated@@153 $generated@@151) $generated@@152))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (or ($generated@@71 $generated@@155 $generated@@156 $generated@@157) (and (< 3 $generated@@50) (and ($generated@@42 $generated@@43 $generated@@156 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@157)))) (and (and (=> (< 0 ($generated@@35 $generated@@155)) (=> (not ($generated@@72 $generated@@156)) (let (($generated@@158 ($generated@@73 $generated@@156)))
(let (($generated@@159 ($generated@@74 $generated@@43 ($generated@@75 $generated@@156))))
 (=> (<= ($generated@@53 1) $generated@@157) (and (and ($generated@@41 $generated@@159) ($generated@@71 ($generated@@33 $generated@@155 ($generated@@34 1)) ($generated@@76 $generated@@159) (- $generated@@157 1))) (=> ($generated@@54 $generated@@154 ($generated@@33 $generated@@155 ($generated@@34 1)) ($generated@@76 $generated@@159) (- $generated@@157 1)) ($generated@@71 ($generated@@33 $generated@@155 ($generated@@34 1)) $generated@@158 $generated@@157)))))))) (=> (=> (< 0 ($generated@@35 $generated@@155)) (ite ($generated@@72 $generated@@156) true (let (($generated@@160 ($generated@@73 $generated@@156)))
(let (($generated@@161 ($generated@@74 $generated@@43 ($generated@@75 $generated@@156))))
 (and (and (<= ($generated@@53 1) $generated@@157) ($generated@@54 $generated@@154 ($generated@@33 $generated@@155 ($generated@@34 1)) ($generated@@76 $generated@@161) (- $generated@@157 1))) ($generated@@54 $generated@@154 ($generated@@33 $generated@@155 ($generated@@34 1)) $generated@@160 $generated@@157)))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@155)) (forall (($generated@@162 T@U) ) (!  (=> ($generated@@25 $generated@@162 $generated@@155) ($generated@@71 $generated@@162 $generated@@156 $generated@@157))
 :pattern ( ($generated@@54 $generated@@154 $generated@@162 $generated@@156 $generated@@157))
))))) (= ($generated@@54 ($generated@@52 $generated@@154) $generated@@155 $generated@@156 $generated@@157)  (and (=> (< 0 ($generated@@35 $generated@@155)) (ite ($generated@@72 $generated@@156) true (let (($generated@@163 ($generated@@73 $generated@@156)))
(let (($generated@@164 ($generated@@74 $generated@@43 ($generated@@75 $generated@@156))))
 (and (and (<= ($generated@@53 1) $generated@@157) ($generated@@54 $generated@@154 ($generated@@33 $generated@@155 ($generated@@34 1)) ($generated@@76 $generated@@164) (- $generated@@157 1))) ($generated@@54 $generated@@154 ($generated@@33 $generated@@155 ($generated@@34 1)) $generated@@163 $generated@@157)))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@155)) (forall (($generated@@165 T@U) ) (!  (=> ($generated@@25 $generated@@165 $generated@@155) ($generated@@54 $generated@@154 $generated@@165 $generated@@156 $generated@@157))
 :pattern ( ($generated@@54 $generated@@154 $generated@@165 $generated@@156 $generated@@157))
)))))))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@154) $generated@@155 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Int) ) (! (= ($generated@@54 ($generated@@52 $generated@@166) $generated@@167 $generated@@168 $generated@@169) ($generated@@54 $generated@@166 $generated@@167 $generated@@168 $generated@@169))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@166) $generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (! (<= 0 ($generated@@35 $generated@@170))
 :pattern ( ($generated@@35 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@39 ($generated@@89 $generated@@171 $generated@@172)) $generated@@4)
 :pattern ( ($generated@@89 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@75 ($generated@@89 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@89 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@73 ($generated@@89 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@89 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@177 ($generated@@46 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@46 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@39 ($generated@@105 $generated@@179)) $generated@@5)
 :pattern ( ($generated@@105 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@76 ($generated@@105 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@105 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@74 $generated@@182 ($generated@@98 $generated@@182 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@98 $generated@@182 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@183 $generated@@184) (or (not (= $generated@@183 $generated@@184)) (not true))) (=> (and ($generated@@124 $generated@@183) (not ($generated@@124 $generated@@184))) ($generated@@25 $generated@@183 $generated@@184))) (=> (and ($generated@@124 $generated@@183) ($generated@@124 $generated@@184)) (= ($generated@@25 $generated@@183 $generated@@184) (< ($generated@@35 $generated@@183) ($generated@@35 $generated@@184))))) (=> (and ($generated@@25 $generated@@183 $generated@@184) ($generated@@124 $generated@@184)) ($generated@@124 $generated@@183)))
 :pattern ( ($generated@@25 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ) (! (= ($generated@@127 ($generated@@52 $generated@@185) $generated@@186) ($generated@@127 $generated@@185 $generated@@186))
 :pattern ( ($generated@@127 ($generated@@52 $generated@@185) $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 Int) ) (! (= ($generated@@62 ($generated@@52 $generated@@187) $generated@@188) ($generated@@62 $generated@@187 $generated@@188))
 :pattern ( ($generated@@62 ($generated@@52 $generated@@187) $generated@@188))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@190 T@U) ($generated@@191 Int) ) (!  (=> (or ($generated@@128 $generated@@191) (and (< 3 $generated@@50) (<= ($generated@@53 0) $generated@@191))) (and (forall (($generated@@192 Int) ) (!  (=> (<= ($generated@@53 0) $generated@@192) (= ($generated@@51 ($generated@@52 $generated@@189) ($generated@@76 ($generated@@127 $generated@@190 $generated@@191)) $generated@@192) (<= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@189) ($generated@@76 ($generated@@127 $generated@@190 $generated@@191)) $generated@@192))
)) ($generated@@42 $generated@@43 ($generated@@127 $generated@@190 $generated@@191) $generated@@44)))
 :pattern ( ($generated@@127 $generated@@190 $generated@@191))
))))
(assert  (=> (<= 5 $generated@@50) (=> (or $generated@@60 (< 5 $generated@@50)) (and ($generated@@63 ($generated@@53 0)) (= $generated@@61 ($generated@@67 $generated@@43 ($generated@@105 ($generated@@67 $generated@@43 ($generated@@62 ($generated@@52 $generated@@189) ($generated@@53 0))))))))))
(assert  (=> (<= 5 $generated@@50) (=> (or $generated@@60 (< 5 $generated@@50)) (and ($generated@@63 ($generated@@53 0)) (= $generated@@61 ($generated@@67 $generated@@43 ($generated@@105 ($generated@@67 $generated@@43 ($generated@@62 ($generated@@52 $generated@@189) ($generated@@53 0))))))))))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@193 T@U) ($generated@@194 Int) ) (!  (=> (or ($generated@@128 ($generated@@53 $generated@@194)) (and (< 3 $generated@@50) (<= ($generated@@53 0) $generated@@194))) (and (=> (or (not (= ($generated@@53 $generated@@194) ($generated@@53 0))) (not true)) ($generated@@128 ($generated@@53 (- $generated@@194 1)))) (= ($generated@@127 ($generated@@52 $generated@@193) ($generated@@53 $generated@@194)) (ite (= ($generated@@53 $generated@@194) ($generated@@53 0)) ($generated@@105 ($generated@@67 $generated@@43 $generated@@40)) ($generated@@105 ($generated@@67 $generated@@43 ($generated@@89 ($generated@@98 $generated@@43 ($generated@@67 $generated@@43 ($generated@@127 ($generated@@52 $generated@@193) ($generated@@53 (- $generated@@194 1))))) ($generated@@67 $generated@@43 $generated@@40))))))))
 :weight 3
 :pattern ( ($generated@@127 ($generated@@52 $generated@@193) ($generated@@53 $generated@@194)))
))))
(assert (forall (($generated@@196 T@U) ) (! (< ($generated@@195 $generated@@196) ($generated@@195 ($generated@@105 $generated@@196)))
 :pattern ( ($generated@@105 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@47 $generated@@199) (and ($generated@@95 $generated@@197) ($generated@@29 $generated@@43 $generated@@197 ($generated@@46 $generated@@198) $generated@@199))) ($generated@@116 ($generated@@75 $generated@@197) $generated@@198 $generated@@199))
 :pattern ( ($generated@@116 ($generated@@75 $generated@@197) $generated@@198 $generated@@199))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@200 $generated@@210 $generated@@211 $generated@@212 ($generated@@206 $generated@@210 $generated@@211 $generated@@212 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@215 $generated@@216) $generated@@213)
 :weight 0
)) (and (forall (($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@200 $generated@@217 $generated@@218 $generated@@219 ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@T) ($generated@@227 T@T) ($generated@@228 T@T) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@200 $generated@@226 $generated@@227 $generated@@228 ($generated@@206 $generated@@226 $generated@@227 $generated@@228 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@200 $generated@@226 $generated@@227 $generated@@228 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)))) (= ($generated@@9 $generated@@201) 5)) (= ($generated@@9 $generated@@202) 6)) (forall (($generated@@235 T@T) ($generated@@236 T@T) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (= ($generated@@204 $generated@@235 $generated@@236 ($generated@@207 $generated@@235 $generated@@236 $generated@@238 $generated@@239 $generated@@237) $generated@@239) $generated@@237)
 :weight 0
))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or (= $generated@@244 $generated@@245) (= ($generated@@204 $generated@@240 $generated@@241 ($generated@@207 $generated@@240 $generated@@241 $generated@@243 $generated@@244 $generated@@242) $generated@@245) ($generated@@204 $generated@@240 $generated@@241 $generated@@243 $generated@@245)))
 :weight 0
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (= ($generated@@9 ($generated@@205 $generated@@246 $generated@@247)) 7))) (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (! (= ($generated@@208 ($generated@@205 $generated@@248 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@205 $generated@@248 $generated@@249))
))) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@209 ($generated@@205 $generated@@250 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@205 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (= ($generated@@14 ($generated@@200 $generated@@201 $generated@@202 $generated@@10 ($generated@@203 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))  (=> (and (or (not (= $generated@@256 $generated@@252)) (not true)) ($generated@@14 ($generated@@74 $generated@@10 ($generated@@204 $generated@@202 $generated@@70 ($generated@@204 $generated@@201 ($generated@@205 $generated@@202 $generated@@70) $generated@@253 $generated@@256) $generated@@254)))) $generated@@255))
 :pattern ( ($generated@@200 $generated@@201 $generated@@202 $generated@@10 ($generated@@203 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> ($generated@@90 $generated@@259 ($generated@@46 $generated@@258)) (and (= ($generated@@98 $generated@@43 ($generated@@74 $generated@@43 $generated@@259)) $generated@@259) ($generated@@42 $generated@@43 ($generated@@74 $generated@@43 $generated@@259) ($generated@@46 $generated@@258))))
 :pattern ( ($generated@@90 $generated@@259 ($generated@@46 $generated@@258)))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> ($generated@@124 $generated@@260) (= $generated@@260 ($generated@@34 ($generated@@35 $generated@@260))))
 :pattern ( ($generated@@35 $generated@@260))
 :pattern ( ($generated@@124 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and ($generated@@47 $generated@@263) (and ($generated@@95 $generated@@261) ($generated@@29 $generated@@43 $generated@@261 ($generated@@46 $generated@@262) $generated@@263))) ($generated@@29 $generated@@43 ($generated@@73 $generated@@261) ($generated@@46 $generated@@262) $generated@@263))
 :pattern ( ($generated@@29 $generated@@43 ($generated@@73 $generated@@261) ($generated@@46 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and ($generated@@47 $generated@@265) ($generated@@42 $generated@@43 $generated@@264 $generated@@44)) ($generated@@29 $generated@@43 $generated@@264 $generated@@44 $generated@@265))
 :pattern ( ($generated@@29 $generated@@43 $generated@@264 $generated@@44 $generated@@265))
)))
(assert (= ($generated@@121 $generated@@30) $generated@@0))
(assert (= ($generated@@122 $generated@@30) $generated@@6))
(assert (= ($generated@@121 $generated@@44) $generated@@2))
(assert (= ($generated@@122 $generated@@44) $generated@@8))
(assert  (=> (<= 2 $generated@@50) (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Int) ) (!  (=> (or ($generated@@266 $generated@@268 $generated@@269) (and (< 2 $generated@@50) (and ($generated@@42 $generated@@43 $generated@@268 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@269)))) (and (=> (not ($generated@@72 $generated@@268)) (let (($generated@@270 ($generated@@73 $generated@@268)))
(let (($generated@@271 ($generated@@74 $generated@@43 ($generated@@75 $generated@@268))))
 (=> (<= ($generated@@53 1) $generated@@269) (and (and ($generated@@41 $generated@@271) ($generated@@266 ($generated@@76 $generated@@271) (- $generated@@269 1))) (=> ($generated@@51 $generated@@267 ($generated@@76 $generated@@271) (- $generated@@269 1)) ($generated@@266 $generated@@270 $generated@@269))))))) (= ($generated@@51 ($generated@@52 $generated@@267) $generated@@268 $generated@@269) (ite ($generated@@72 $generated@@268) true (let (($generated@@272 ($generated@@73 $generated@@268)))
(let (($generated@@273 ($generated@@74 $generated@@43 ($generated@@75 $generated@@268))))
 (and (and (<= ($generated@@53 1) $generated@@269) ($generated@@51 $generated@@267 ($generated@@76 $generated@@273) (- $generated@@269 1))) ($generated@@51 $generated@@267 $generated@@272 $generated@@269))))))))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@267) $generated@@268 $generated@@269))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and ($generated@@124 $generated@@275) (<= ($generated@@35 $generated@@275) ($generated@@35 $generated@@274))) (or (and (= $generated@@275 ($generated@@34 0)) (= ($generated@@33 $generated@@274 $generated@@275) $generated@@274)) (and (or (not (= $generated@@275 ($generated@@34 0))) (not true)) ($generated@@25 ($generated@@33 $generated@@274 $generated@@275) $generated@@274))))
 :pattern ( ($generated@@33 $generated@@274 $generated@@275))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 Int) ($generated@@279 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@43 $generated@@277 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@278)) (= $generated@@279 ($generated@@34 0))) ($generated@@54 $generated@@276 $generated@@279 $generated@@277 $generated@@278))
 :pattern ( ($generated@@54 $generated@@276 $generated@@279 $generated@@277 $generated@@278))
))))
(assert (forall (($generated@@280 Int) ) (! (= ($generated@@98 $generated@@11 ($generated@@15 ($generated@@53 $generated@@280))) ($generated@@67 $generated@@70 ($generated@@98 $generated@@11 ($generated@@15 $generated@@280))))
 :pattern ( ($generated@@98 $generated@@11 ($generated@@15 ($generated@@53 $generated@@280))))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@105 ($generated@@67 $generated@@43 $generated@@281)) ($generated@@67 $generated@@43 ($generated@@105 $generated@@281)))
 :pattern ( ($generated@@105 ($generated@@67 $generated@@43 $generated@@281)))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (= ($generated@@98 $generated@@283 ($generated@@67 $generated@@283 $generated@@282)) ($generated@@67 $generated@@70 ($generated@@98 $generated@@283 $generated@@282)))
 :pattern ( ($generated@@98 $generated@@283 ($generated@@67 $generated@@283 $generated@@282)))
)))
(assert  (=> (<= 4 $generated@@50) (forall (($generated@@284 T@U) ($generated@@285 Int) ) (!  (=> (or ($generated@@63 $generated@@285) (and (< 4 $generated@@50) (<= ($generated@@53 0) $generated@@285))) (and (and ($generated@@128 $generated@@285) ($generated@@63 (+ $generated@@285 1))) (= ($generated@@62 ($generated@@52 $generated@@284) $generated@@285) ($generated@@89 ($generated@@98 $generated@@43 ($generated@@127 ($generated@@52 $generated@@189) $generated@@285)) ($generated@@62 $generated@@284 (+ $generated@@285 1))))))
 :pattern ( ($generated@@62 ($generated@@52 $generated@@284) $generated@@285))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and ($generated@@47 $generated@@287) (and ($generated@@41 $generated@@286) ($generated@@29 $generated@@43 $generated@@286 $generated@@44 $generated@@287))) ($generated@@29 $generated@@43 ($generated@@76 $generated@@286) ($generated@@46 $generated@@44) $generated@@287))
 :pattern ( ($generated@@29 $generated@@43 ($generated@@76 $generated@@286) ($generated@@46 $generated@@44) $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> ($generated@@47 $generated@@291) (= ($generated@@29 $generated@@43 ($generated@@89 $generated@@289 $generated@@290) ($generated@@46 $generated@@288) $generated@@291)  (and ($generated@@116 $generated@@289 $generated@@288 $generated@@291) ($generated@@29 $generated@@43 $generated@@290 ($generated@@46 $generated@@288) $generated@@291))))
 :pattern ( ($generated@@29 $generated@@43 ($generated@@89 $generated@@289 $generated@@290) ($generated@@46 $generated@@288) $generated@@291))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@292 () T@U)
(declare-fun $generated@@293 () T@U)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@295 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@296  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@42 $generated@@11 ($generated@@15 ($generated@@53 0)) $generated@@30))))
(let (($generated@@297 true))
(let (($generated@@298  (=> (= $generated@@292 ($generated@@203 $generated@@293 $generated@@294 $generated false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@297) (=> (= (ControlFlow 0 4) 3) $generated@@296)))))
(let (($generated@@299  (=> (and (and ($generated@@47 $generated@@294) ($generated@@295 $generated@@294)) (and (= 5 $generated@@50) (= (ControlFlow 0 5) 4))) $generated@@298)))
$generated@@299)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
