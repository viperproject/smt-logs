(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U Bool T@U) Int)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 () Bool)
(declare-fun $generated@@50 (Int) Int)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@110 (T@U) Int)
(declare-fun $generated@@115 (T@U) Int)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@124 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@T T@T) T@T)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@6 $generated@@23) 3))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@26 $generated@@30) (= ($generated@@22 $generated@@23 ($generated@@24 $generated@@28 $generated@@29) ($generated@@25 $generated@@27) $generated@@30)  (and ($generated@@22 $generated@@23 $generated@@28 ($generated@@25 $generated@@27) $generated@@30) ($generated@@22 $generated@@23 $generated@@29 ($generated@@25 $generated@@27) $generated@@30))))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@24 $generated@@28 $generated@@29) ($generated@@25 $generated@@27) $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! ($generated@@22 $generated@@8 $generated@@32 $generated@@31 $generated@@33)
 :pattern ( ($generated@@22 $generated@@8 $generated@@32 $generated@@31 $generated@@33))
)))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or ($generated@@37 $generated@@43 $generated@@45) (and (< 1 $generated@@34) ($generated@@38 $generated@@23 $generated@@45 ($generated@@25 $generated@@43)))) (and (=> (not ($generated@@39 $generated@@45)) (let (($generated@@46 ($generated@@40 $generated@@45)))
(let (($generated@@47 ($generated@@41 $generated@@45)))
 (and ($generated@@37 $generated@@43 $generated@@47) ($generated@@37 $generated@@43 $generated@@46))))) (= ($generated@@35 $generated@@43 ($generated@@36 $generated@@44) true $generated@@45) (ite ($generated@@39 $generated@@45) 1 (let (($generated@@48 ($generated@@40 $generated@@45)))
(let (($generated@@49 ($generated@@41 $generated@@45)))
(+ (+ 1 ($generated@@35 $generated@@43 $generated@@44 $generated@@42 $generated@@49)) ($generated@@35 $generated@@43 $generated@@44 $generated@@42 $generated@@48))))))))
 :pattern ( ($generated@@35 $generated@@43 ($generated@@36 $generated@@44) true $generated@@45))
))))
(assert (forall (($generated@@51 Int) ) (! (= ($generated@@50 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@52 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@39 $generated@@56) (= ($generated@@55 $generated@@56) $generated@@2))
 :pattern ( ($generated@@39 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@58) (= ($generated@@55 $generated@@58) $generated@@3))
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 ($generated@@59 $generated@@62 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@59 $generated@@62 $generated@@61))
)))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 Bool) ($generated@@66 T@U) ) (!  (=> (or ($generated@@37 $generated@@63 $generated@@66) (and (< 1 $generated@@34) ($generated@@38 $generated@@23 $generated@@66 ($generated@@25 $generated@@63)))) (<= ($generated@@50 0) ($generated@@35 $generated@@63 $generated@@64 $generated@@65 $generated@@66)))
 :pattern ( ($generated@@35 $generated@@63 $generated@@64 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@57 $generated@@67) (exists (($generated@@68 T@U) ($generated@@69 T@U) ) (= $generated@@67 ($generated@@24 $generated@@68 $generated@@69))))
 :pattern ( ($generated@@57 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@38 $generated@@23 ($generated@@24 $generated@@71 $generated@@72) ($generated@@25 $generated@@70))  (and ($generated@@38 $generated@@23 $generated@@71 ($generated@@25 $generated@@70)) ($generated@@38 $generated@@23 $generated@@72 ($generated@@25 $generated@@70))))
 :pattern ( ($generated@@38 $generated@@23 ($generated@@24 $generated@@71 $generated@@72) ($generated@@25 $generated@@70)))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@39 $generated@@74) (exists (($generated@@75 T@U) ) (= $generated@@74 ($generated@@73 $generated@@75))))
 :pattern ( ($generated@@39 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@38 $generated@@8 $generated@@76 $generated@@31) (<= ($generated@@50 0) ($generated@@13 $generated@@76)))
 :pattern ( ($generated@@38 $generated@@8 $generated@@76 $generated@@31))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@60 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@22 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@60 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@84 T@U) ) (!  (and (= ($generated@@82 ($generated@@25 $generated@@84)) $generated@@1) (= ($generated@@83 ($generated@@25 $generated@@84)) $generated@@5))
 :pattern ( ($generated@@25 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@85 $generated@@86 $generated@@31) (and (= ($generated@@60 $generated@@8 ($generated@@59 $generated@@8 $generated@@86)) $generated@@86) ($generated@@38 $generated@@8 ($generated@@59 $generated@@8 $generated@@86) $generated@@31)))
 :pattern ( ($generated@@85 $generated@@86 $generated@@31))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@26 $generated@@89) (= ($generated@@22 $generated@@23 ($generated@@73 $generated@@88) ($generated@@25 $generated@@87) $generated@@89) ($generated@@77 $generated@@88 $generated@@87 $generated@@89)))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@73 $generated@@88) ($generated@@25 $generated@@87) $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> ($generated@@38 $generated@@23 $generated@@91 ($generated@@25 $generated@@90)) (or ($generated@@39 $generated@@91) ($generated@@57 $generated@@91)))
 :pattern ( ($generated@@57 $generated@@91) ($generated@@38 $generated@@23 $generated@@91 ($generated@@25 $generated@@90)))
 :pattern ( ($generated@@39 $generated@@91) ($generated@@38 $generated@@23 $generated@@91 ($generated@@25 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@60 $generated@@94 $generated@@92) $generated@@93) ($generated@@38 $generated@@94 $generated@@92 $generated@@93))
 :pattern ( ($generated@@85 ($generated@@60 $generated@@94 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@55 ($generated@@24 $generated@@95 $generated@@96)) $generated@@3)
 :pattern ( ($generated@@24 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@41 ($generated@@24 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@24 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@40 ($generated@@24 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@24 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@101 ($generated@@25 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@25 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@55 ($generated@@73 $generated@@103)) $generated@@2)
 :pattern ( ($generated@@73 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@104 ($generated@@73 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@73 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@59 $generated@@107 ($generated@@60 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@60 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@38 $generated@@23 ($generated@@73 $generated@@109) ($generated@@25 $generated@@108)) ($generated@@85 $generated@@109 $generated@@108))
 :pattern ( ($generated@@38 $generated@@23 ($generated@@73 $generated@@109) ($generated@@25 $generated@@108)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (< ($generated@@110 $generated@@111) ($generated@@110 ($generated@@24 $generated@@111 $generated@@112)))
 :pattern ( ($generated@@24 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (< ($generated@@110 $generated@@114) ($generated@@110 ($generated@@24 $generated@@113 $generated@@114)))
 :pattern ( ($generated@@24 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (! (< ($generated@@115 $generated@@116) ($generated@@110 ($generated@@73 $generated@@116)))
 :pattern ( ($generated@@73 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (and ($generated@@26 $generated@@119) (and ($generated@@39 $generated@@117) ($generated@@22 $generated@@23 $generated@@117 ($generated@@25 $generated@@118) $generated@@119))) ($generated@@77 ($generated@@104 $generated@@117) $generated@@118 $generated@@119))
 :pattern ( ($generated@@77 ($generated@@104 $generated@@117) $generated@@118 $generated@@119))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@120 $generated@@131 $generated@@132 $generated@@133 ($generated@@127 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@120 $generated@@138 $generated@@139 $generated@@140 ($generated@@127 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@120 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@120 $generated@@147 $generated@@148 $generated@@149 ($generated@@127 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))) (= ($generated@@6 $generated@@121) 4)) (= ($generated@@6 $generated@@122) 5)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@124 $generated@@156 $generated@@157 ($generated@@128 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@158) $generated@@160) $generated@@158)
 :weight 0
))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@165 $generated@@166) (= ($generated@@124 $generated@@161 $generated@@162 ($generated@@128 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@163) $generated@@166) ($generated@@124 $generated@@161 $generated@@162 $generated@@164 $generated@@166)))
 :weight 0
))) (= ($generated@@6 $generated@@125) 6)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@6 ($generated@@126 $generated@@167 $generated@@168)) 7))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@129 ($generated@@126 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@126 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@130 ($generated@@126 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@126 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Bool) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@11 ($generated@@120 $generated@@121 $generated@@122 $generated@@7 ($generated@@123 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))  (=> (and (or (not (= $generated@@177 $generated@@173)) (not true)) ($generated@@11 ($generated@@59 $generated@@7 ($generated@@124 $generated@@122 $generated@@125 ($generated@@124 $generated@@121 ($generated@@126 $generated@@122 $generated@@125) $generated@@174 $generated@@177) $generated@@175)))) $generated@@176))
 :pattern ( ($generated@@120 $generated@@121 $generated@@122 $generated@@7 ($generated@@123 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@115 ($generated@@60 $generated@@23 $generated@@179)) ($generated@@110 $generated@@179))
 :pattern ( ($generated@@115 ($generated@@60 $generated@@23 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 Bool) ($generated@@183 T@U) ) (! (= ($generated@@35 $generated@@180 ($generated@@36 $generated@@181) $generated@@182 $generated@@183) ($generated@@35 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
 :pattern ( ($generated@@35 $generated@@180 ($generated@@36 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@85 $generated@@185 ($generated@@25 $generated@@184)) (and (= ($generated@@60 $generated@@23 ($generated@@59 $generated@@23 $generated@@185)) $generated@@185) ($generated@@38 $generated@@23 ($generated@@59 $generated@@23 $generated@@185) ($generated@@25 $generated@@184))))
 :pattern ( ($generated@@85 $generated@@185 ($generated@@25 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@26 $generated@@188) (and ($generated@@57 $generated@@186) ($generated@@22 $generated@@23 $generated@@186 ($generated@@25 $generated@@187) $generated@@188))) ($generated@@22 $generated@@23 ($generated@@41 $generated@@186) ($generated@@25 $generated@@187) $generated@@188))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@41 $generated@@186) ($generated@@25 $generated@@187) $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and ($generated@@26 $generated@@191) (and ($generated@@57 $generated@@189) ($generated@@22 $generated@@23 $generated@@189 ($generated@@25 $generated@@190) $generated@@191))) ($generated@@22 $generated@@23 ($generated@@40 $generated@@189) ($generated@@25 $generated@@190) $generated@@191))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@40 $generated@@189) ($generated@@25 $generated@@190) $generated@@191))
)))
(assert (= ($generated@@82 $generated@@31) $generated@@0))
(assert (= ($generated@@83 $generated@@31) $generated@@4))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (or ($generated@@37 $generated@@192 ($generated@@52 $generated@@23 $generated@@194)) (and (< 1 $generated@@34) ($generated@@38 $generated@@23 $generated@@194 ($generated@@25 $generated@@192)))) (and (=> (not ($generated@@11 ($generated@@52 $generated@@7 ($generated@@10 ($generated@@39 ($generated@@52 $generated@@23 $generated@@194)))))) (let (($generated@@195 ($generated@@52 $generated@@23 ($generated@@40 ($generated@@52 $generated@@23 $generated@@194)))))
(let (($generated@@196 ($generated@@52 $generated@@23 ($generated@@41 ($generated@@52 $generated@@23 $generated@@194)))))
 (and ($generated@@37 $generated@@192 $generated@@196) ($generated@@37 $generated@@192 $generated@@195))))) (= ($generated@@35 $generated@@192 ($generated@@36 $generated@@193) true ($generated@@52 $generated@@23 $generated@@194)) (ite ($generated@@39 ($generated@@52 $generated@@23 $generated@@194)) 1 (let (($generated@@197 ($generated@@52 $generated@@23 ($generated@@40 ($generated@@52 $generated@@23 $generated@@194)))))
(let (($generated@@198 ($generated@@52 $generated@@23 ($generated@@41 ($generated@@52 $generated@@23 $generated@@194)))))
(+ (+ 1 ($generated@@35 $generated@@192 ($generated@@36 $generated@@193) $generated@@42 $generated@@198)) ($generated@@35 $generated@@192 ($generated@@36 $generated@@193) $generated@@42 $generated@@197))))))))
 :weight 3
 :pattern ( ($generated@@35 $generated@@192 ($generated@@36 $generated@@193) true ($generated@@52 $generated@@23 $generated@@194)))
))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@24 ($generated@@52 $generated@@23 $generated@@199) ($generated@@52 $generated@@23 $generated@@200)) ($generated@@52 $generated@@23 ($generated@@24 $generated@@199 $generated@@200)))
 :pattern ( ($generated@@24 ($generated@@52 $generated@@23 $generated@@199) ($generated@@52 $generated@@23 $generated@@200)))
)))
(assert (forall (($generated@@201 Int) ) (! (= ($generated@@60 $generated@@8 ($generated@@12 ($generated@@50 $generated@@201))) ($generated@@52 $generated@@125 ($generated@@60 $generated@@8 ($generated@@12 $generated@@201))))
 :pattern ( ($generated@@60 $generated@@8 ($generated@@12 ($generated@@50 $generated@@201))))
)))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@73 ($generated@@52 $generated@@125 $generated@@202)) ($generated@@52 $generated@@23 ($generated@@73 $generated@@202)))
 :pattern ( ($generated@@73 ($generated@@52 $generated@@125 $generated@@202)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@60 $generated@@204 ($generated@@52 $generated@@204 $generated@@203)) ($generated@@52 $generated@@125 ($generated@@60 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@60 $generated@@204 ($generated@@52 $generated@@204 $generated@@203)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@219 true))
(let (($generated@@220  (=> (and (= $generated@@205 ($generated@@24 $generated@@206 $generated@@207)) ($generated@@38 $generated@@23 $generated@@206 ($generated@@25 $generated@@208))) (=> (and (and (and ($generated@@38 $generated@@23 $generated@@207 ($generated@@25 $generated@@208)) (= $generated@@209 $generated@@207)) (and ($generated@@38 $generated@@23 $generated@@209 ($generated@@25 $generated@@208)) (= $generated@@210 $generated@@209))) (and (and (= $generated@@211 $generated@@206) ($generated@@38 $generated@@23 $generated@@211 ($generated@@25 $generated@@208))) (and (= $generated@@212 $generated@@211) ($generated@@22 $generated@@23 $generated@@212 ($generated@@25 $generated@@208) $generated@@213)))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (< ($generated@@110 $generated@@212) ($generated@@110 $generated@@205))) (=> (< ($generated@@110 $generated@@212) ($generated@@110 $generated@@205)) (=> (and ($generated@@37 $generated@@208 $generated@@212) ($generated@@22 $generated@@23 $generated@@210 ($generated@@25 $generated@@208) $generated@@213)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@110 $generated@@210) ($generated@@110 $generated@@205))) (=> (< ($generated@@110 $generated@@210) ($generated@@110 $generated@@205)) (=> (and ($generated@@37 $generated@@208 $generated@@210) (= (ControlFlow 0 5) (- 0 4))) ($generated@@38 $generated@@8 ($generated@@12 (+ (+ 1 ($generated@@35 $generated@@208 ($generated@@36 $generated@@214) $generated@@42 $generated@@212)) ($generated@@35 $generated@@208 ($generated@@36 $generated@@214) $generated@@42 $generated@@210))) $generated@@31)))))))))))
(let (($generated@@221  (=> (or (not (= $generated@@205 ($generated@@73 $generated@@215))) (not true)) (and (=> (= (ControlFlow 0 9) 5) $generated@@220) (=> (= (ControlFlow 0 9) 8) $generated@@219)))))
(let (($generated@@222  (=> (= $generated@@205 ($generated@@73 $generated@@215)) (=> (and ($generated@@85 $generated@@215 $generated@@208) (= (ControlFlow 0 3) (- 0 2))) ($generated@@38 $generated@@8 ($generated@@12 ($generated@@50 1)) $generated@@31)))))
(let (($generated@@223 true))
(let (($generated@@224  (=> (= $generated@@216 ($generated@@123 $generated@@217 $generated@@213 $generated false)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@223) (=> (= (ControlFlow 0 10) 3) $generated@@222)) (=> (= (ControlFlow 0 10) 9) $generated@@221)))))
(let (($generated@@225  (=> (and (and (and ($generated@@26 $generated@@213) ($generated@@218 $generated@@213)) ($generated@@38 $generated@@23 $generated@@205 ($generated@@25 $generated@@208))) (and (= 1 $generated@@34) (= (ControlFlow 0 11) 10))) $generated@@224)))
$generated@@225))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
