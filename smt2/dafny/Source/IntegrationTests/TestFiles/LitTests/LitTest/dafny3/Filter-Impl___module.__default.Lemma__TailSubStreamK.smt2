(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U T@U T@U Int) T@U)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U) T@U)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (Int) Int)
(declare-fun $generated@@25 (T@U T@U Int) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@36 (T@U T@U Int T@U T@U) Bool)
(declare-fun $generated@@42 (T@U Int T@U T@U) Bool)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@103 () T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@140 (T@T T@T) T@T)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@23) 3))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 Int) ) (!  (=> (or ($generated@@25 $generated@@30 ($generated@@22 $generated@@23 $generated@@32) ($generated@@24 $generated@@33)) (and (< 1 $generated@@19) (and ($generated@@26 $generated@@23 $generated@@32 ($generated@@27 $generated@@30)) (<= ($generated@@24 0) $generated@@33)))) (and (=> (or (not (= ($generated@@24 $generated@@33) ($generated@@24 0))) (not true)) (and ($generated@@28 ($generated@@22 $generated@@23 $generated@@32)) ($generated@@25 $generated@@30 ($generated@@22 $generated@@23 ($generated@@29 ($generated@@22 $generated@@23 $generated@@32))) ($generated@@24 (- $generated@@33 1))))) (= ($generated@@20 $generated@@30 ($generated@@21 $generated@@31) ($generated@@22 $generated@@23 $generated@@32) ($generated@@24 $generated@@33)) (ite (= ($generated@@24 $generated@@33) ($generated@@24 0)) $generated@@32 ($generated@@20 $generated@@30 ($generated@@21 $generated@@31) ($generated@@22 $generated@@23 ($generated@@29 ($generated@@22 $generated@@23 $generated@@32))) ($generated@@24 (- $generated@@33 1)))))))
 :weight 3
 :pattern ( ($generated@@20 $generated@@30 ($generated@@21 $generated@@31) ($generated@@22 $generated@@23 $generated@@32) ($generated@@24 $generated@@33)))
))))
(assert (forall (($generated@@35 T@U) ) (!  (=> ($generated@@34 $generated@@35) ($generated@@28 $generated@@35))
 :pattern ( ($generated@@34 $generated@@35))
)))
(assert  (=> (<= 4 $generated@@19) (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 Int) ) (!  (=> (and (and ($generated@@26 $generated@@23 $generated@@39 ($generated@@27 $generated@@37)) ($generated@@26 $generated@@23 $generated@@40 ($generated@@27 $generated@@37))) (= $generated@@41 0)) ($generated@@36 $generated@@37 $generated@@38 $generated@@41 $generated@@39 $generated@@40))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 $generated@@41 $generated@@39 $generated@@40))
))))
(assert (= ($generated@@3 $generated@@44) 4))
(assert  (=> (<= 4 $generated@@19) (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 Int) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or ($generated@@42 $generated@@47 ($generated@@24 $generated@@49) ($generated@@22 $generated@@23 $generated@@50) ($generated@@22 $generated@@23 $generated@@51)) (and (< 4 $generated@@19) (and (and (<= ($generated@@24 0) $generated@@49) ($generated@@26 $generated@@23 $generated@@50 ($generated@@27 $generated@@47))) ($generated@@26 $generated@@23 $generated@@51 ($generated@@27 $generated@@47))))) (and (=> (< 0 $generated@@49) (and (and ($generated@@28 ($generated@@22 $generated@@23 $generated@@50)) ($generated@@43 $generated@@47 ($generated@@22 $generated@@44 ($generated@@45 ($generated@@22 $generated@@23 $generated@@50))) ($generated@@22 $generated@@23 $generated@@51))) (=> ($generated@@8 ($generated@@22 $generated@@4 ($generated@@7 ($generated@@46 $generated@@47 ($generated@@22 $generated@@44 ($generated@@45 ($generated@@22 $generated@@23 $generated@@50))) ($generated@@22 $generated@@23 $generated@@51))))) (and ($generated@@28 ($generated@@22 $generated@@23 $generated@@50)) ($generated@@42 $generated@@47 (- $generated@@49 1) ($generated@@22 $generated@@23 ($generated@@29 ($generated@@22 $generated@@23 $generated@@50))) ($generated@@22 $generated@@23 $generated@@51)))))) (= ($generated@@36 $generated@@47 ($generated@@21 $generated@@48) ($generated@@24 $generated@@49) ($generated@@22 $generated@@23 $generated@@50) ($generated@@22 $generated@@23 $generated@@51))  (=> (< 0 $generated@@49) (and ($generated@@46 $generated@@47 ($generated@@22 $generated@@44 ($generated@@45 ($generated@@22 $generated@@23 $generated@@50))) ($generated@@22 $generated@@23 $generated@@51)) ($generated@@36 $generated@@47 ($generated@@21 $generated@@48) (- $generated@@49 1) ($generated@@22 $generated@@23 ($generated@@29 ($generated@@22 $generated@@23 $generated@@50))) ($generated@@22 $generated@@23 $generated@@51)))))))
 :weight 3
 :pattern ( ($generated@@36 $generated@@47 ($generated@@21 $generated@@48) ($generated@@24 $generated@@49) ($generated@@22 $generated@@23 $generated@@50) ($generated@@22 $generated@@23 $generated@@51)))
))))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> ($generated@@26 $generated@@23 $generated@@53 ($generated@@27 $generated@@52)) ($generated@@28 $generated@@53))
 :pattern ( ($generated@@28 $generated@@53) ($generated@@26 $generated@@23 $generated@@53 ($generated@@27 $generated@@52)))
)))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 Int) ) (!  (=> (or ($generated@@25 $generated@@54 $generated@@56 $generated@@57) (and (< 1 $generated@@19) (and ($generated@@26 $generated@@23 $generated@@56 ($generated@@27 $generated@@54)) (<= ($generated@@24 0) $generated@@57)))) (and (=> (or (not (= $generated@@57 ($generated@@24 0))) (not true)) (and ($generated@@28 $generated@@56) ($generated@@25 $generated@@54 ($generated@@29 $generated@@56) (- $generated@@57 1)))) (= ($generated@@20 $generated@@54 ($generated@@21 $generated@@55) $generated@@56 $generated@@57) (ite (= $generated@@57 ($generated@@24 0)) $generated@@56 ($generated@@20 $generated@@54 $generated@@55 ($generated@@29 $generated@@56) (- $generated@@57 1))))))
 :pattern ( ($generated@@20 $generated@@54 ($generated@@21 $generated@@55) $generated@@56 $generated@@57))
))))
(assert (forall (($generated@@58 Int) ) (! (= ($generated@@24 $generated@@58) $generated@@58)
 :pattern ( ($generated@@24 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@22 $generated@@60 $generated@@59) $generated@@59)
 :pattern ( ($generated@@22 $generated@@60 $generated@@59))
)))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 Int) ) (!  (=> (or ($generated@@25 $generated@@61 $generated@@63 $generated@@64) (and (< 1 $generated@@19) (and ($generated@@26 $generated@@23 $generated@@63 ($generated@@27 $generated@@61)) (<= ($generated@@24 0) $generated@@64)))) ($generated@@26 $generated@@23 ($generated@@20 $generated@@61 $generated@@62 $generated@@63 $generated@@64) ($generated@@27 $generated@@61)))
 :pattern ( ($generated@@20 $generated@@61 $generated@@62 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@26 $generated@@23 ($generated@@65 $generated@@68 $generated@@69) ($generated@@27 $generated@@67))  (and ($generated@@66 $generated@@68 $generated@@67) ($generated@@26 $generated@@23 $generated@@69 ($generated@@27 $generated@@67))))
 :pattern ( ($generated@@26 $generated@@23 ($generated@@65 $generated@@68 $generated@@69) ($generated@@27 $generated@@67)))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@28 $generated@@71) (= ($generated@@70 $generated@@71) $generated@@1))
 :pattern ( ($generated@@28 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@72 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@72 $generated@@75 $generated@@74))
)))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 Int) ) (!  (=> (or ($generated@@25 $generated@@76 $generated@@78 ($generated@@24 $generated@@79)) (and (< 1 $generated@@19) (and ($generated@@26 $generated@@23 $generated@@78 ($generated@@27 $generated@@76)) (<= ($generated@@24 0) $generated@@79)))) (and (=> (or (not (= ($generated@@24 $generated@@79) ($generated@@24 0))) (not true)) (and ($generated@@28 $generated@@78) ($generated@@25 $generated@@76 ($generated@@29 $generated@@78) ($generated@@24 (- $generated@@79 1))))) (= ($generated@@20 $generated@@76 ($generated@@21 $generated@@77) $generated@@78 ($generated@@24 $generated@@79)) (ite (= ($generated@@24 $generated@@79) ($generated@@24 0)) $generated@@78 ($generated@@20 $generated@@76 ($generated@@21 $generated@@77) ($generated@@29 $generated@@78) ($generated@@24 (- $generated@@79 1)))))))
 :weight 3
 :pattern ( ($generated@@20 $generated@@76 ($generated@@21 $generated@@77) $generated@@78 ($generated@@24 $generated@@79)))
))))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@28 $generated@@80) (exists (($generated@@81 T@U) ($generated@@82 T@U) ) (= $generated@@80 ($generated@@65 $generated@@81 $generated@@82))))
 :pattern ( ($generated@@28 $generated@@80))
)))
(assert  (=> (<= 4 $generated@@19) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 Int) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (or ($generated@@42 $generated@@83 $generated@@85 $generated@@86 $generated@@87) (and (< 4 $generated@@19) (and (and (<= ($generated@@24 0) $generated@@85) ($generated@@26 $generated@@23 $generated@@86 ($generated@@27 $generated@@83))) ($generated@@26 $generated@@23 $generated@@87 ($generated@@27 $generated@@83))))) (and (=> (< 0 $generated@@85) (and (and ($generated@@28 $generated@@86) ($generated@@43 $generated@@83 ($generated@@45 $generated@@86) $generated@@87)) (=> ($generated@@46 $generated@@83 ($generated@@45 $generated@@86) $generated@@87) (and ($generated@@28 $generated@@86) ($generated@@42 $generated@@83 (- $generated@@85 1) ($generated@@29 $generated@@86) $generated@@87))))) (= ($generated@@36 $generated@@83 ($generated@@21 $generated@@84) $generated@@85 $generated@@86 $generated@@87)  (=> (< 0 $generated@@85) (and ($generated@@46 $generated@@83 ($generated@@45 $generated@@86) $generated@@87) ($generated@@36 $generated@@83 $generated@@84 (- $generated@@85 1) ($generated@@29 $generated@@86) $generated@@87))))))
 :pattern ( ($generated@@36 $generated@@83 ($generated@@21 $generated@@84) $generated@@85 $generated@@86 $generated@@87))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@88 ($generated@@73 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@89 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@88 ($generated@@73 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= ($generated@@94 ($generated@@27 $generated@@96)) $generated@@0) (= ($generated@@95 ($generated@@27 $generated@@96)) $generated@@2))
 :pattern ( ($generated@@27 $generated@@96))
)))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 Int) ) (!  (=> (and (or ($generated@@25 $generated@@99 $generated@@101 $generated@@102) (and (< 1 $generated@@19) (and (and ($generated@@26 $generated@@23 $generated@@101 ($generated@@27 $generated@@99)) ($generated@@89 $generated@@23 $generated@@101 ($generated@@27 $generated@@99) $generated@@98)) (<= ($generated@@24 0) $generated@@102)))) ($generated@@97 $generated@@98)) ($generated@@89 $generated@@23 ($generated@@20 $generated@@99 $generated@@100 $generated@@101 $generated@@102) ($generated@@27 $generated@@99) $generated@@98))
 :pattern ( ($generated@@89 $generated@@23 ($generated@@20 $generated@@99 $generated@@100 $generated@@101 $generated@@102) ($generated@@27 $generated@@99) $generated@@98))
))))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or ($generated@@43 $generated@@104 $generated@@105 $generated@@106) (and (< 2 $generated@@19) (and ($generated@@66 $generated@@105 $generated@@104) ($generated@@26 $generated@@23 $generated@@106 ($generated@@27 $generated@@104))))) (and (forall (($generated@@107 Int) ) (!  (=> (<= ($generated@@24 0) $generated@@107) (=> (<= ($generated@@24 0) $generated@@107) (and ($generated@@25 $generated@@104 $generated@@106 $generated@@107) ($generated@@28 ($generated@@20 $generated@@104 ($generated@@21 $generated@@103) $generated@@106 $generated@@107)))))
 :pattern ( ($generated@@20 $generated@@104 ($generated@@21 $generated@@103) $generated@@106 $generated@@107))
)) (= ($generated@@46 $generated@@104 $generated@@105 $generated@@106) (exists (($generated@@108 Int) ) (!  (and (<= ($generated@@24 0) $generated@@108) (and (<= ($generated@@24 0) $generated@@108) (= ($generated@@45 ($generated@@20 $generated@@104 ($generated@@21 $generated@@103) $generated@@106 $generated@@108)) $generated@@105)))
 :pattern ( ($generated@@20 $generated@@104 ($generated@@21 $generated@@103) $generated@@106 $generated@@108))
)))))
 :pattern ( ($generated@@46 $generated@@104 $generated@@105 $generated@@106))
))))
(assert  (=> (<= 4 $generated@@19) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 Int) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@42 $generated@@109 ($generated@@24 $generated@@111) $generated@@112 $generated@@113) (and (< 4 $generated@@19) (and (and (<= ($generated@@24 0) $generated@@111) ($generated@@26 $generated@@23 $generated@@112 ($generated@@27 $generated@@109))) ($generated@@26 $generated@@23 $generated@@113 ($generated@@27 $generated@@109))))) (and (=> (< 0 $generated@@111) (and (and ($generated@@28 $generated@@112) ($generated@@43 $generated@@109 ($generated@@45 $generated@@112) $generated@@113)) (=> ($generated@@46 $generated@@109 ($generated@@45 $generated@@112) $generated@@113) (and ($generated@@28 $generated@@112) ($generated@@42 $generated@@109 (- $generated@@111 1) ($generated@@29 $generated@@112) $generated@@113))))) (= ($generated@@36 $generated@@109 ($generated@@21 $generated@@110) ($generated@@24 $generated@@111) $generated@@112 $generated@@113)  (=> (< 0 $generated@@111) (and ($generated@@46 $generated@@109 ($generated@@45 $generated@@112) $generated@@113) ($generated@@36 $generated@@109 ($generated@@21 $generated@@110) (- $generated@@111 1) ($generated@@29 $generated@@112) $generated@@113))))))
 :weight 3
 :pattern ( ($generated@@36 $generated@@109 ($generated@@21 $generated@@110) ($generated@@24 $generated@@111) $generated@@112 $generated@@113))
))))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@66 ($generated@@73 $generated@@116 $generated@@114) $generated@@115) ($generated@@26 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@66 ($generated@@73 $generated@@116 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@70 ($generated@@65 $generated@@117 $generated@@118)) $generated@@1)
 :pattern ( ($generated@@65 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@45 ($generated@@65 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@65 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@29 ($generated@@65 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@65 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@27 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@27 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@72 $generated@@126 ($generated@@73 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@73 $generated@@126 $generated@@125))
)))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or ($generated@@43 $generated@@127 ($generated@@22 $generated@@44 $generated@@128) ($generated@@22 $generated@@23 $generated@@129)) (and (< 2 $generated@@19) (and ($generated@@66 $generated@@128 $generated@@127) ($generated@@26 $generated@@23 $generated@@129 ($generated@@27 $generated@@127))))) (and (forall (($generated@@130 Int) ) (!  (=> (<= ($generated@@24 0) $generated@@130) (=> (<= ($generated@@24 0) $generated@@130) (and ($generated@@25 $generated@@127 ($generated@@22 $generated@@23 $generated@@129) $generated@@130) ($generated@@28 ($generated@@20 $generated@@127 ($generated@@21 $generated@@103) ($generated@@22 $generated@@23 $generated@@129) $generated@@130)))))
 :pattern ( ($generated@@20 $generated@@127 ($generated@@21 $generated@@103) $generated@@129 $generated@@130))
)) (= ($generated@@46 $generated@@127 ($generated@@22 $generated@@44 $generated@@128) ($generated@@22 $generated@@23 $generated@@129)) (exists (($generated@@131 Int) ) (!  (and (<= ($generated@@24 0) $generated@@131) (and (<= ($generated@@24 0) $generated@@131) (= ($generated@@45 ($generated@@20 $generated@@127 ($generated@@21 $generated@@103) ($generated@@22 $generated@@23 $generated@@129) $generated@@131)) ($generated@@22 $generated@@44 $generated@@128))))
 :pattern ( ($generated@@20 $generated@@127 ($generated@@21 $generated@@103) $generated@@129 $generated@@131))
)))))
 :weight 3
 :pattern ( ($generated@@46 $generated@@127 ($generated@@22 $generated@@44 $generated@@128) ($generated@@22 $generated@@23 $generated@@129)))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and ($generated@@97 $generated@@134) (and ($generated@@28 $generated@@132) ($generated@@89 $generated@@23 $generated@@132 ($generated@@27 $generated@@133) $generated@@134))) ($generated@@88 ($generated@@45 $generated@@132) $generated@@133 $generated@@134))
 :pattern ( ($generated@@88 ($generated@@45 $generated@@132) $generated@@133 $generated@@134))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@135 $generated@@145 $generated@@146 $generated@@147 ($generated@@141 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@135 $generated@@152 $generated@@153 $generated@@154 ($generated@@141 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@135 $generated@@161 $generated@@162 $generated@@163 ($generated@@141 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@135 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))) (= ($generated@@3 $generated@@136) 5)) (= ($generated@@3 $generated@@137) 6)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@139 $generated@@170 $generated@@171 ($generated@@142 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@174) $generated@@172)
 :weight 0
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@179 $generated@@180) (= ($generated@@139 $generated@@175 $generated@@176 ($generated@@142 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@177) $generated@@180) ($generated@@139 $generated@@175 $generated@@176 $generated@@178 $generated@@180)))
 :weight 0
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@3 ($generated@@140 $generated@@181 $generated@@182)) 7))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@143 ($generated@@140 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@140 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@144 ($generated@@140 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@140 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@8 ($generated@@135 $generated@@136 $generated@@137 $generated@@4 ($generated@@138 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@8 ($generated@@72 $generated@@4 ($generated@@139 $generated@@137 $generated@@44 ($generated@@139 $generated@@136 ($generated@@140 $generated@@137 $generated@@44) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137 $generated@@4 ($generated@@138 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 Int) ) (! (= ($generated@@20 $generated@@193 ($generated@@21 $generated@@194) $generated@@195 $generated@@196) ($generated@@20 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
 :pattern ( ($generated@@20 $generated@@193 ($generated@@21 $generated@@194) $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@66 $generated@@198 ($generated@@27 $generated@@197)) (and (= ($generated@@73 $generated@@23 ($generated@@72 $generated@@23 $generated@@198)) $generated@@198) ($generated@@26 $generated@@23 ($generated@@72 $generated@@23 $generated@@198) ($generated@@27 $generated@@197))))
 :pattern ( ($generated@@66 $generated@@198 ($generated@@27 $generated@@197)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Int) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@36 $generated@@199 ($generated@@21 $generated@@200) $generated@@201 $generated@@202 $generated@@203) ($generated@@36 $generated@@199 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
 :pattern ( ($generated@@36 $generated@@199 ($generated@@21 $generated@@200) $generated@@201 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@97 $generated@@206) (and ($generated@@28 $generated@@204) ($generated@@89 $generated@@23 $generated@@204 ($generated@@27 $generated@@205) $generated@@206))) ($generated@@89 $generated@@23 ($generated@@29 $generated@@204) ($generated@@27 $generated@@205) $generated@@206))
 :pattern ( ($generated@@89 $generated@@23 ($generated@@29 $generated@@204) ($generated@@27 $generated@@205) $generated@@206))
)))
(assert (forall (($generated@@207 Int) ) (! (= ($generated@@73 $generated@@5 ($generated@@9 ($generated@@24 $generated@@207))) ($generated@@22 $generated@@44 ($generated@@73 $generated@@5 ($generated@@9 $generated@@207))))
 :pattern ( ($generated@@73 $generated@@5 ($generated@@9 ($generated@@24 $generated@@207))))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@T) ) (! (= ($generated@@73 $generated@@209 ($generated@@22 $generated@@209 $generated@@208)) ($generated@@22 $generated@@44 ($generated@@73 $generated@@209 $generated@@208)))
 :pattern ( ($generated@@73 $generated@@209 ($generated@@22 $generated@@209 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> ($generated@@97 $generated@@213) (= ($generated@@89 $generated@@23 ($generated@@65 $generated@@211 $generated@@212) ($generated@@27 $generated@@210) $generated@@213)  (and ($generated@@88 $generated@@211 $generated@@210 $generated@@213) ($generated@@89 $generated@@23 $generated@@212 ($generated@@27 $generated@@210) $generated@@213))))
 :pattern ( ($generated@@89 $generated@@23 ($generated@@65 $generated@@211 $generated@@212) ($generated@@27 $generated@@210) $generated@@213))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@225  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@42 $generated@@214 $generated@@215 $generated@@216 $generated@@217) (or ($generated@@36 $generated@@214 ($generated@@21 $generated@@103) $generated@@215 $generated@@216 $generated@@217) (=> (< 0 $generated@@215) (=> ($generated@@43 $generated@@214 ($generated@@45 $generated@@216) $generated@@217) (or ($generated@@46 $generated@@214 ($generated@@45 $generated@@216) $generated@@217) (exists (($generated@@226 Int) ) (!  (and (<= ($generated@@24 0) $generated@@226) (and (<= ($generated@@24 0) $generated@@226) (= ($generated@@45 ($generated@@20 $generated@@214 ($generated@@21 $generated@@103) $generated@@217 $generated@@226)) ($generated@@45 $generated@@216))))
 :pattern ( ($generated@@20 $generated@@214 ($generated@@21 $generated@@103) $generated@@217 $generated@@226))
)))))))) (=> (=> ($generated@@42 $generated@@214 $generated@@215 $generated@@216 $generated@@217) (or ($generated@@36 $generated@@214 ($generated@@21 $generated@@103) $generated@@215 $generated@@216 $generated@@217) (=> (< 0 $generated@@215) (=> ($generated@@43 $generated@@214 ($generated@@45 $generated@@216) $generated@@217) (or ($generated@@46 $generated@@214 ($generated@@45 $generated@@216) $generated@@217) (exists (($generated@@227 Int) ) (!  (and (<= ($generated@@24 0) $generated@@227) (and (<= ($generated@@24 0) $generated@@227) (= ($generated@@45 ($generated@@20 $generated@@214 ($generated@@21 $generated@@103) $generated@@217 $generated@@227)) ($generated@@45 $generated@@216))))
 :pattern ( ($generated@@20 $generated@@214 ($generated@@21 $generated@@103) $generated@@217 $generated@@227))
))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@42 $generated@@214 $generated@@215 $generated@@216 $generated@@217) (or ($generated@@36 $generated@@214 ($generated@@21 $generated@@103) $generated@@215 $generated@@216 $generated@@217) (=> (< 0 $generated@@215) ($generated@@36 $generated@@214 ($generated@@21 ($generated@@21 $generated@@103)) (- $generated@@215 1) ($generated@@29 $generated@@216) $generated@@217)))))))))
(let (($generated@@228  (=> (and (= $generated@@215 0) (= (ControlFlow 0 6) 2)) $generated@@225)))
(let (($generated@@229  (=> (and (and (or (not (= $generated@@215 0)) (not true)) ($generated@@28 $generated@@216)) (and ($generated@@28 $generated@@216) (= $generated@@218 ($generated@@45 $generated@@216)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@43 $generated@@214 $generated@@218 ($generated@@29 $generated@@217)) (or ($generated@@46 $generated@@214 $generated@@218 ($generated@@29 $generated@@217)) (exists (($generated@@230 Int) ) (!  (and (<= ($generated@@24 0) $generated@@230) (and (<= ($generated@@24 0) $generated@@230) (= ($generated@@45 ($generated@@20 $generated@@214 ($generated@@21 $generated@@103) ($generated@@29 $generated@@217) $generated@@230)) $generated@@218)))
 :pattern ( ($generated@@20 $generated@@214 ($generated@@21 $generated@@103) ($generated@@29 $generated@@217) $generated@@230))
))))) (=> (=> ($generated@@43 $generated@@214 $generated@@218 ($generated@@29 $generated@@217)) (or ($generated@@46 $generated@@214 $generated@@218 ($generated@@29 $generated@@217)) (exists (($generated@@231 Int) ) (!  (and (<= ($generated@@24 0) $generated@@231) (and (<= ($generated@@24 0) $generated@@231) (= ($generated@@45 ($generated@@20 $generated@@214 ($generated@@21 $generated@@103) ($generated@@29 $generated@@217) $generated@@231)) $generated@@218)))
 :pattern ( ($generated@@20 $generated@@214 ($generated@@21 $generated@@103) ($generated@@29 $generated@@217) $generated@@231))
)))) (=> (and (and (and ($generated@@97 $generated@@219) ($generated@@220 $generated@@219)) ($generated@@43 $generated@@214 $generated@@218 $generated@@217)) (and (and ($generated@@43 $generated@@214 $generated@@218 $generated@@217) (and ($generated@@46 $generated@@214 $generated@@218 $generated@@217) (exists (($generated@@232 Int) ) (!  (and (<= ($generated@@24 0) $generated@@232) (and (<= ($generated@@24 0) $generated@@232) (= ($generated@@45 ($generated@@20 $generated@@214 ($generated@@21 $generated@@103) $generated@@217 $generated@@232)) $generated@@218)))
 :pattern ( ($generated@@20 $generated@@214 ($generated@@21 $generated@@103) $generated@@217 $generated@@232))
)))) (and (= $generated@@221 $generated@@219) (= (ControlFlow 0 4) 2)))) $generated@@225))))))
(let (($generated@@233  (=> (= $generated@@222 ($generated@@138 $generated@@223 $generated@@224 $generated false)) (=> (and ($generated@@34 $generated@@216) ($generated@@34 $generated@@217)) (=> (and (and ($generated@@97 $generated@@221) ($generated@@220 $generated@@221)) (and (= $generated@@224 $generated@@221) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Int) ) (!  (=> (and (and (and (and ($generated@@26 $generated@@23 $generated@@234 ($generated@@27 $generated@@214)) ($generated@@26 $generated@@23 $generated@@235 ($generated@@27 $generated@@214))) (<= ($generated@@24 0) $generated@@236)) ($generated@@36 $generated@@214 ($generated@@21 $generated@@103) $generated@@236 $generated@@234 ($generated@@29 $generated@@235))) (and (<= 0 $generated@@236) (< $generated@@236 $generated@@215))) ($generated@@36 $generated@@214 ($generated@@21 $generated@@103) $generated@@236 $generated@@234 $generated@@235))
 :pattern ( ($generated@@36 $generated@@214 ($generated@@21 $generated@@103) $generated@@236 $generated@@234 ($generated@@29 $generated@@235)))
)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@229) (=> (= (ControlFlow 0 7) 6) $generated@@228)))))))
(let (($generated@@237  (=> (and ($generated@@97 $generated@@224) ($generated@@220 $generated@@224)) (=> (and (and ($generated@@26 $generated@@23 $generated@@216 ($generated@@27 $generated@@214)) ($generated@@89 $generated@@23 $generated@@216 ($generated@@27 $generated@@214) $generated@@224)) ($generated@@34 $generated@@216)) (=> (and (and (and (and ($generated@@26 $generated@@23 $generated@@217 ($generated@@27 $generated@@214)) ($generated@@89 $generated@@23 $generated@@217 ($generated@@27 $generated@@214) $generated@@224)) ($generated@@34 $generated@@217)) (and (<= ($generated@@24 0) $generated@@215) (= 5 $generated@@19))) (and (and ($generated@@42 $generated@@214 $generated@@215 $generated@@216 ($generated@@29 $generated@@217)) (and ($generated@@36 $generated@@214 ($generated@@21 $generated@@103) $generated@@215 $generated@@216 ($generated@@29 $generated@@217)) (=> (< 0 $generated@@215) (and ($generated@@46 $generated@@214 ($generated@@45 $generated@@216) ($generated@@29 $generated@@217)) ($generated@@36 $generated@@214 ($generated@@21 $generated@@103) (- $generated@@215 1) ($generated@@29 $generated@@216) ($generated@@29 $generated@@217)))))) (= (ControlFlow 0 8) 7))) $generated@@233)))))
$generated@@237))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
