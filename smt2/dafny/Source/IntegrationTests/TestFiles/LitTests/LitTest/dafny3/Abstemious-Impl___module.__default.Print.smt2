(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@T T@T) T@T)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@63 (Int) Int)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@U T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@117 (T@U Int) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@129 (T@U) Bool)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@25 T@U) ) (!  (=> ($generated@@23 $generated@@25) ($generated@@24 $generated@@25))
 :pattern ( ($generated@@23 $generated@@25))
)))
(assert (= ($generated@@26 $generated@@27) 0))
(assert (= ($generated@@6 $generated@@29) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@31)) ($generated@@24 $generated@@32))
 :pattern ( ($generated@@24 $generated@@32) ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@31)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@34 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@34 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@34 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@6 $generated@@35) 4)) (= ($generated@@6 $generated@@36) 5)) (= ($generated@@6 $generated@@37) 6)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@6 ($generated@@38 $generated@@54 $generated@@55)) 7))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@38 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@38 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@38 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@38 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@33 $generated@@60 $generated@@61) (forall (($generated@@62 T@U) ) (!  (=> ($generated@@11 ($generated@@39 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@60 $generated@@62) $generated@@2))) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@61 $generated@@62) $generated@@2))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@61 $generated@@62) $generated@@2))
)))
 :pattern ( ($generated@@33 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 Int) ) (! (= ($generated@@63 $generated@@64) $generated@@64)
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@68 $generated@@71 $generated@@72) ($generated@@30 $generated@@70))  (and ($generated@@69 $generated@@71 $generated@@70) ($generated@@28 $generated@@29 $generated@@72 ($generated@@30 $generated@@70))))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@68 $generated@@71 $generated@@72) ($generated@@30 $generated@@70)))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@24 $generated@@74) (= ($generated@@73 $generated@@74) $generated@@4))
 :pattern ( ($generated@@24 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@39 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@39 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@24 $generated@@78) (exists (($generated@@79 T@U) ($generated@@80 T@U) ) (= $generated@@78 ($generated@@68 $generated@@79 $generated@@80))))
 :pattern ( ($generated@@24 $generated@@78))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@81 ($generated@@75 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@82 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@81 ($generated@@75 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@33 $generated@@87 $generated@@88) (=> ($generated@@81 $generated@@89 $generated@@90 $generated@@87) ($generated@@81 $generated@@89 $generated@@90 $generated@@88)))
 :pattern ( ($generated@@33 $generated@@87 $generated@@88) ($generated@@81 $generated@@89 $generated@@90 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (!  (=> ($generated@@33 $generated@@91 $generated@@92) (=> ($generated@@82 $generated@@95 $generated@@93 $generated@@94 $generated@@91) ($generated@@82 $generated@@95 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@33 $generated@@91 $generated@@92) ($generated@@82 $generated@@95 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@97 T@U) ) (!  (and (= ($generated@@22 ($generated@@30 $generated@@97)) $generated@@3) (= ($generated@@96 ($generated@@30 $generated@@97)) $generated@@5))
 :pattern ( ($generated@@30 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or (not (= $generated@@98 $generated@@100)) (not true)) (=> (and ($generated@@33 $generated@@98 $generated@@99) ($generated@@33 $generated@@99 $generated@@100)) ($generated@@33 $generated@@98 $generated@@100)))
 :pattern ( ($generated@@33 $generated@@98 $generated@@99) ($generated@@33 $generated@@99 $generated@@100))
)))
(assert (= ($generated@@6 $generated@@101) 8))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@69 $generated@@102 $generated) (and (= ($generated@@75 $generated@@101 ($generated@@39 $generated@@101 $generated@@102)) $generated@@102) ($generated@@28 $generated@@101 ($generated@@39 $generated@@101 $generated@@102) $generated)))
 :pattern ( ($generated@@69 $generated@@102 $generated))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@69 ($generated@@75 $generated@@105 $generated@@103) $generated@@104) ($generated@@28 $generated@@105 $generated@@103 $generated@@104))
 :pattern ( ($generated@@69 ($generated@@75 $generated@@105 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (<= 0 ($generated@@26 $generated@@106))
 :pattern ( ($generated@@26 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@73 ($generated@@68 $generated@@107 $generated@@108)) $generated@@4)
 :pattern ( ($generated@@68 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@68 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@68 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@68 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@68 $generated@@113 $generated@@114))
)))
(assert (= ($generated@@6 $generated@@115) 9))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@82 $generated@@115 $generated@@118 ($generated@@116 $generated@@119) $generated@@120) (forall (($generated@@121 Int) ) (!  (=> (and (<= 0 $generated@@121) (< $generated@@121 ($generated@@26 $generated@@118))) ($generated@@81 ($generated@@117 $generated@@118 $generated@@121) $generated@@119 $generated@@120))
 :pattern ( ($generated@@117 $generated@@118 $generated@@121))
)))
 :pattern ( ($generated@@82 $generated@@115 $generated@@118 ($generated@@116 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@116 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@116 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@22 ($generated@@116 $generated@@124)) $generated@@1)
 :pattern ( ($generated@@116 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@30 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@30 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@39 $generated@@128 ($generated@@75 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@75 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@129 $generated@@132) (and ($generated@@24 $generated@@130) ($generated@@82 $generated@@29 $generated@@130 ($generated@@30 $generated@@131) $generated@@132))) ($generated@@81 ($generated@@109 $generated@@130) $generated@@131 $generated@@132))
 :pattern ( ($generated@@81 ($generated@@109 $generated@@130) $generated@@131 $generated@@132))
)))
(assert  (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@133 $generated@@136 $generated@@137 $generated@@138 ($generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@141 $generated@@142) $generated@@139)
 :weight 0
)) (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@133 $generated@@143 $generated@@144 $generated@@145 ($generated@@135 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@133 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@133 $generated@@152 $generated@@153 $generated@@154 ($generated@@135 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@133 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@11 ($generated@@133 $generated@@37 $generated@@35 $generated@@7 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))  (=> (and (or (not (= $generated@@165 $generated@@161)) (not true)) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@162 $generated@@165) $generated@@163)))) $generated@@164))
 :pattern ( ($generated@@133 $generated@@37 $generated@@35 $generated@@7 ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@69 $generated@@167 ($generated@@116 $generated@@168)) (and (= ($generated@@75 $generated@@115 ($generated@@39 $generated@@115 $generated@@167)) $generated@@167) ($generated@@28 $generated@@115 ($generated@@39 $generated@@115 $generated@@167) ($generated@@116 $generated@@168))))
 :pattern ( ($generated@@69 $generated@@167 ($generated@@116 $generated@@168)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@69 $generated@@170 ($generated@@30 $generated@@169)) (and (= ($generated@@75 $generated@@29 ($generated@@39 $generated@@29 $generated@@170)) $generated@@170) ($generated@@28 $generated@@29 ($generated@@39 $generated@@29 $generated@@170) ($generated@@30 $generated@@169))))
 :pattern ( ($generated@@69 $generated@@170 ($generated@@30 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@129 $generated@@173) (and ($generated@@24 $generated@@171) ($generated@@82 $generated@@29 $generated@@171 ($generated@@30 $generated@@172) $generated@@173))) ($generated@@82 $generated@@29 ($generated@@112 $generated@@171) ($generated@@30 $generated@@172) $generated@@173))
 :pattern ( ($generated@@82 $generated@@29 ($generated@@112 $generated@@171) ($generated@@30 $generated@@172) $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@75 $generated@@8 ($generated@@12 ($generated@@63 $generated@@174))) ($generated@@65 $generated@@36 ($generated@@75 $generated@@8 ($generated@@12 $generated@@174))))
 :pattern ( ($generated@@75 $generated@@8 ($generated@@12 ($generated@@63 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@75 $generated@@176 ($generated@@65 $generated@@176 $generated@@175)) ($generated@@65 $generated@@36 ($generated@@75 $generated@@176 $generated@@175)))
 :pattern ( ($generated@@75 $generated@@176 ($generated@@65 $generated@@176 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= ($generated@@26 $generated@@177) 0) (= $generated@@177 $generated@@27))
 :pattern ( ($generated@@26 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! ($generated@@82 $generated@@101 $generated@@179 $generated $generated@@178)
 :pattern ( ($generated@@82 $generated@@101 $generated@@179 $generated $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@129 $generated@@183) (= ($generated@@82 $generated@@29 ($generated@@68 $generated@@181 $generated@@182) ($generated@@30 $generated@@180) $generated@@183)  (and ($generated@@81 $generated@@181 $generated@@180 $generated@@183) ($generated@@82 $generated@@29 $generated@@182 ($generated@@30 $generated@@180) $generated@@183))))
 :pattern ( ($generated@@82 $generated@@29 ($generated@@68 $generated@@181 $generated@@182) ($generated@@30 $generated@@180) $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@28 $generated@@115 $generated@@184 ($generated@@116 $generated@@185)) (forall (($generated@@186 Int) ) (!  (=> (and (<= 0 $generated@@186) (< $generated@@186 ($generated@@26 $generated@@184))) ($generated@@69 ($generated@@117 $generated@@184 $generated@@186) $generated@@185))
 :pattern ( ($generated@@117 $generated@@184 $generated@@186))
)))
 :pattern ( ($generated@@28 $generated@@115 $generated@@184 ($generated@@116 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@28 $generated@@101 $generated@@187 $generated)
 :pattern ( ($generated@@28 $generated@@101 $generated@@187 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Bool)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@208  (=> (and (< $generated@@188 $generated@@189) (= $generated@@190 (- $generated@@189 $generated@@188))) (and (=> (= (ControlFlow 0 5) (- 0 8)) $generated@@191) (=> $generated@@191 (=> ($generated@@24 $generated@@192) (=> (and ($generated@@24 $generated@@192) (= $generated@@193 (+ $generated@@188 1))) (and (=> (= (ControlFlow 0 5) (- 0 7)) $generated@@191) (=> $generated@@191 (=> ($generated@@24 $generated@@192) (=> (and ($generated@@24 $generated@@192) (= $generated@@194 ($generated@@112 $generated@@192))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@190) (= (- $generated@@189 $generated@@193) $generated@@190))) (=> (or (<= 0 $generated@@190) (= (- $generated@@189 $generated@@193) $generated@@190)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- $generated@@189 $generated@@193) $generated@@190)))))))))))))))
(let (($generated@@209 true))
(let (($generated@@210  (=> $generated@@195 (and (=> (= (ControlFlow 0 9) 3) $generated@@209) (=> (= (ControlFlow 0 9) 5) $generated@@208)))))
(let (($generated@@211 true))
(let (($generated@@212  (and (=> (= (ControlFlow 0 10) 2) $generated@@211) (=> (= (ControlFlow 0 10) 9) $generated@@210))))
(let (($generated@@213 true))
(let (($generated@@214  (=> (=> $generated@@191 (and ($generated@@28 $generated@@29 $generated@@192 ($generated@@30 $generated@@196)) ($generated@@82 $generated@@29 $generated@@192 ($generated@@30 $generated@@196) $generated@@197))) (=> (and (and (and (and (and (and (not false) (<= 0 $generated@@188)) $generated@@191) (= $generated@@198 0)) true) (forall (($generated@@215 T@U) ) (!  (=> (and (or (not (= $generated@@215 $generated@@199)) (not true)) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@197 $generated@@215) $generated@@2)))) (= ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@197 $generated@@215) ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@197 $generated@@215)))
 :pattern ( ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@197 $generated@@215))
))) (and (and ($generated@@33 $generated@@197 $generated@@197) (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (or (not (= $generated@@216 $generated@@199)) (not true)) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@197 $generated@@216) $generated@@2)))) (or (= ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@197 $generated@@216) $generated@@217) ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@197 $generated@@216) $generated@@217)) ($generated@@11 ($generated@@133 $generated@@37 $generated@@35 $generated@@7 $generated@@200 $generated@@216 $generated@@217))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@197 $generated@@216) $generated@@217))
))) (and (=> true $generated@@191) (<= (- $generated@@189 $generated@@188) $generated@@201)))) (and (=> (= (ControlFlow 0 11) 1) $generated@@213) (=> (= (ControlFlow 0 11) 10) $generated@@212))))))
(let (($generated@@218  (=> (and (and (= $generated@@200 ($generated@@134 $generated@@199 $generated@@197 $generated@@2 false)) (= $generated@@198 ($generated@@63 0))) (and (= $generated@@201 (- $generated@@189 $generated@@198)) (= (ControlFlow 0 12) 11))) $generated@@214)))
(let (($generated@@219  (=> (and (and (and (and ($generated@@129 $generated@@197) ($generated@@202 $generated@@197)) (<= ($generated@@63 0) $generated@@189)) (and ($generated@@28 $generated@@115 $generated@@203 ($generated@@116 $generated)) ($generated@@82 $generated@@115 $generated@@203 ($generated@@116 $generated) $generated@@197))) (and (and (and ($generated@@28 $generated@@29 $generated@@204 ($generated@@30 $generated@@196)) ($generated@@82 $generated@@29 $generated@@204 ($generated@@30 $generated@@196) $generated@@197)) ($generated@@23 $generated@@204)) (and (and (=> $generated@@205 (and ($generated@@28 $generated@@29 $generated@@206 ($generated@@30 $generated@@196)) ($generated@@82 $generated@@29 $generated@@206 ($generated@@30 $generated@@196) $generated@@197))) true) (and (= 1 $generated@@207) (= (ControlFlow 0 13) 12))))) $generated@@218)))
$generated@@219))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
