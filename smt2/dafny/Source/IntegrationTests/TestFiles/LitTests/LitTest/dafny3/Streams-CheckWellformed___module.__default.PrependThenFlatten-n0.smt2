(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U T@U T@U) Bool)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 (Int) T@U)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@59 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@U T@U T@U) Bool)
(declare-fun $generated@@127 (T@U T@U T@U) Bool)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@191 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@192 () T@T)
(declare-fun $generated@@193 () T@T)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@198 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (! (= ($generated@@20 $generated@@22 ($generated@@21 $generated@@23) $generated@@24) ($generated@@20 $generated@@22 $generated@@23 $generated@@24))
 :pattern ( ($generated@@20 $generated@@22 ($generated@@21 $generated@@23) $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@26 $generated@@28))
)))
(assert (= ($generated@@4 $generated@@32) 3))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or ($generated@@30 $generated@@39 $generated@@41) (and (< 1 $generated@@29) ($generated@@31 $generated@@32 $generated@@41 ($generated@@33 ($generated@@33 $generated@@39))))) (and (=> (not ($generated@@34 $generated@@41)) (let (($generated@@42 ($generated@@35 $generated@@41)))
(let (($generated@@43 ($generated@@36 $generated@@32 ($generated@@37 $generated@@41))))
 (=> ($generated@@38 $generated@@43) ($generated@@30 $generated@@39 $generated@@42))))) (= ($generated@@20 $generated@@39 ($generated@@21 $generated@@40) $generated@@41) (ite ($generated@@34 $generated@@41) true (let (($generated@@44 ($generated@@35 $generated@@41)))
(let (($generated@@45 ($generated@@36 $generated@@32 ($generated@@37 $generated@@41))))
 (and ($generated@@38 $generated@@45) ($generated@@20 $generated@@39 $generated@@40 $generated@@44))))))))
 :pattern ( ($generated@@20 $generated@@39 ($generated@@21 $generated@@40) $generated@@41))
))))
(assert (forall (($generated@@49 T@U) ($generated@@50 Int) ($generated@@51 Int) ) (!  (=> (and (and (<= 0 $generated@@50) (<= 0 $generated@@51)) (<= (+ $generated@@50 $generated@@51) ($generated@@48 $generated@@49))) (= ($generated@@46 ($generated@@46 $generated@@49 ($generated@@47 $generated@@50)) ($generated@@47 $generated@@51)) ($generated@@46 $generated@@49 ($generated@@47 (+ $generated@@50 $generated@@51)))))
 :pattern ( ($generated@@46 ($generated@@46 $generated@@49 ($generated@@47 $generated@@50)) ($generated@@47 $generated@@51)))
)))
(assert (= ($generated@@52 $generated@@53) $generated@@1))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> ($generated@@55 $generated@@57) ($generated@@54 $generated@@32 $generated@@53 ($generated@@33 $generated@@56) $generated@@57))
 :pattern ( ($generated@@54 $generated@@32 $generated@@53 ($generated@@33 $generated@@56) $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ) (! ($generated@@31 $generated@@32 $generated@@53 ($generated@@33 $generated@@58))
 :pattern ( ($generated@@31 $generated@@32 $generated@@53 ($generated@@33 $generated@@58)))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@31 $generated@@32 $generated@@62 ($generated@@33 ($generated@@33 $generated@@60))) ($generated@@20 $generated@@60 ($generated@@21 $generated@@61) $generated@@62)) (forall (($generated@@63 T@U) ) (! ($generated@@59 $generated@@60 ($generated@@21 $generated@@61) $generated@@63 $generated@@62)
 :pattern ( ($generated@@59 $generated@@60 ($generated@@21 $generated@@61) $generated@@63 $generated@@62))
)))
 :pattern ( ($generated@@20 $generated@@60 ($generated@@21 $generated@@61) $generated@@62))
))))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@64 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (and ($generated@@31 $generated@@32 $generated@@71 ($generated@@33 ($generated@@33 $generated@@69))) (forall (($generated@@72 T@U) ) (! ($generated@@59 $generated@@69 ($generated@@21 $generated@@70) $generated@@72 $generated@@71)
 :pattern ( ($generated@@59 $generated@@69 ($generated@@21 $generated@@70) $generated@@72 $generated@@71))
))) ($generated@@20 $generated@@69 ($generated@@21 $generated@@70) $generated@@71))
 :pattern ( ($generated@@20 $generated@@69 ($generated@@21 $generated@@70) $generated@@71))
))))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (or ($generated@@74 $generated@@77 $generated@@79 $generated@@80) (and (< 2 $generated@@29) (and (and ($generated@@31 $generated@@32 $generated@@79 ($generated@@33 $generated@@77)) ($generated@@31 $generated@@32 $generated@@80 ($generated@@33 ($generated@@33 $generated@@77)))) ($generated@@20 $generated@@77 ($generated@@21 $generated@@75) $generated@@80)))) (and (and (=> ($generated@@34 $generated@@79) (=> (not ($generated@@34 $generated@@80)) (let (($generated@@81 ($generated@@35 $generated@@80)))
(let (($generated@@82 ($generated@@36 $generated@@32 ($generated@@37 $generated@@80))))
($generated@@74 $generated@@77 ($generated@@35 $generated@@82) $generated@@81))))) (=> (not ($generated@@34 $generated@@79)) (let (($generated@@83 ($generated@@35 $generated@@79)))
($generated@@74 $generated@@77 $generated@@83 $generated@@80)))) (= ($generated@@73 $generated@@77 ($generated@@21 $generated@@78) $generated@@79 $generated@@80) (ite ($generated@@34 $generated@@79) (ite ($generated@@34 $generated@@80) $generated@@53 (let (($generated@@84 ($generated@@35 $generated@@80)))
(let (($generated@@85 ($generated@@36 $generated@@32 ($generated@@37 $generated@@80))))
($generated@@76 ($generated@@37 $generated@@85) ($generated@@73 $generated@@77 $generated@@78 ($generated@@35 $generated@@85) $generated@@84))))) (let (($generated@@86 ($generated@@35 $generated@@79)))
(let (($generated@@87 ($generated@@37 $generated@@79)))
($generated@@76 $generated@@87 ($generated@@73 $generated@@77 $generated@@78 $generated@@86 $generated@@80))))))))
 :pattern ( ($generated@@73 $generated@@77 ($generated@@21 $generated@@78) $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@31 $generated@@32 ($generated@@76 $generated@@90 $generated@@91) ($generated@@33 $generated@@89))  (and ($generated@@88 $generated@@90 $generated@@89) ($generated@@31 $generated@@32 $generated@@91 ($generated@@33 $generated@@89))))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@76 $generated@@90 $generated@@91) ($generated@@33 $generated@@89)))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@34 $generated@@92) (= ($generated@@52 $generated@@92) $generated@@1))
 :pattern ( ($generated@@34 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@38 $generated@@93) (= ($generated@@52 $generated@@93) $generated@@2))
 :pattern ( ($generated@@38 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@36 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@36 $generated@@96 $generated@@95))
)))
(assert (= ($generated@@4 $generated@@97) 4))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@98 $generated@@99 ($generated@@66 $generated@@97 $generated@@101) ($generated@@66 $generated@@32 $generated@@102)) (and (< 2 $generated@@29) ($generated@@31 $generated@@32 $generated@@102 ($generated@@33 ($generated@@33 $generated@@99))))) (and (and (=> (< 0 ($generated@@48 $generated@@101)) (=> (not ($generated@@9 ($generated@@66 $generated@@5 ($generated@@8 ($generated@@34 ($generated@@66 $generated@@32 $generated@@102)))))) (let (($generated@@103 ($generated@@66 $generated@@32 ($generated@@35 ($generated@@66 $generated@@32 $generated@@102)))))
(let (($generated@@104 ($generated@@66 $generated@@32 ($generated@@36 $generated@@32 ($generated@@37 ($generated@@66 $generated@@32 $generated@@102))))))
 (=> ($generated@@38 $generated@@104) ($generated@@98 $generated@@99 ($generated@@46 $generated@@101 ($generated@@47 1)) $generated@@103)))))) (=> (=> (< 0 ($generated@@48 $generated@@101)) (ite ($generated@@34 ($generated@@66 $generated@@32 $generated@@102)) true (let (($generated@@105 ($generated@@66 $generated@@32 ($generated@@35 ($generated@@66 $generated@@32 $generated@@102)))))
(let (($generated@@106 ($generated@@66 $generated@@32 ($generated@@36 $generated@@32 ($generated@@37 ($generated@@66 $generated@@32 $generated@@102))))))
 (and ($generated@@38 $generated@@106) ($generated@@59 $generated@@99 ($generated@@21 $generated@@100) ($generated@@46 $generated@@101 ($generated@@47 1)) $generated@@105)))))) (=> (= ($generated@@64 0) ($generated@@48 $generated@@101)) (forall (($generated@@107 T@U) ) (!  (=> ($generated@@25 $generated@@107 $generated@@101) ($generated@@98 $generated@@99 $generated@@107 $generated@@102))
 :pattern ( ($generated@@59 $generated@@99 ($generated@@21 $generated@@100) $generated@@107 $generated@@102))
))))) (= ($generated@@59 $generated@@99 ($generated@@21 $generated@@100) ($generated@@66 $generated@@97 $generated@@101) ($generated@@66 $generated@@32 $generated@@102))  (and (=> (< 0 ($generated@@48 $generated@@101)) (ite ($generated@@34 ($generated@@66 $generated@@32 $generated@@102)) true (let (($generated@@108 ($generated@@66 $generated@@32 ($generated@@35 ($generated@@66 $generated@@32 $generated@@102)))))
(let (($generated@@109 ($generated@@66 $generated@@32 ($generated@@36 $generated@@32 ($generated@@37 ($generated@@66 $generated@@32 $generated@@102))))))
 (and ($generated@@38 $generated@@109) ($generated@@59 $generated@@99 ($generated@@21 $generated@@100) ($generated@@46 $generated@@101 ($generated@@47 1)) $generated@@108)))))) (=> (= ($generated@@64 0) ($generated@@48 $generated@@101)) (forall (($generated@@110 T@U) ) (!  (=> ($generated@@25 $generated@@110 $generated@@101) ($generated@@59 $generated@@99 ($generated@@21 $generated@@100) $generated@@110 $generated@@102))
 :pattern ( ($generated@@59 $generated@@99 ($generated@@21 $generated@@100) $generated@@110 $generated@@102))
)))))))
 :weight 3
 :pattern ( ($generated@@59 $generated@@99 ($generated@@21 $generated@@100) ($generated@@66 $generated@@97 $generated@@101) ($generated@@66 $generated@@32 $generated@@102)))
))))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@38 $generated@@111) (exists (($generated@@112 T@U) ($generated@@113 T@U) ) (= $generated@@111 ($generated@@76 $generated@@112 $generated@@113))))
 :pattern ( ($generated@@38 $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@34 $generated@@114) (= $generated@@114 $generated@@53))
 :pattern ( ($generated@@34 $generated@@114))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@98 $generated@@115 ($generated@@66 $generated@@97 $generated@@117) $generated@@118) (and (< 2 $generated@@29) ($generated@@31 $generated@@32 $generated@@118 ($generated@@33 ($generated@@33 $generated@@115))))) (and (and (=> (< 0 ($generated@@48 $generated@@117)) (=> (not ($generated@@34 $generated@@118)) (let (($generated@@119 ($generated@@35 $generated@@118)))
(let (($generated@@120 ($generated@@36 $generated@@32 ($generated@@37 $generated@@118))))
 (=> ($generated@@38 $generated@@120) ($generated@@98 $generated@@115 ($generated@@46 $generated@@117 ($generated@@47 1)) $generated@@119)))))) (=> (=> (< 0 ($generated@@48 $generated@@117)) (ite ($generated@@34 $generated@@118) true (let (($generated@@121 ($generated@@35 $generated@@118)))
(let (($generated@@122 ($generated@@36 $generated@@32 ($generated@@37 $generated@@118))))
 (and ($generated@@38 $generated@@122) ($generated@@59 $generated@@115 ($generated@@21 $generated@@116) ($generated@@46 $generated@@117 ($generated@@47 1)) $generated@@121)))))) (=> (= ($generated@@64 0) ($generated@@48 $generated@@117)) (forall (($generated@@123 T@U) ) (!  (=> ($generated@@25 $generated@@123 $generated@@117) ($generated@@98 $generated@@115 $generated@@123 $generated@@118))
 :pattern ( ($generated@@59 $generated@@115 ($generated@@21 $generated@@116) $generated@@123 $generated@@118))
))))) (= ($generated@@59 $generated@@115 ($generated@@21 $generated@@116) ($generated@@66 $generated@@97 $generated@@117) $generated@@118)  (and (=> (< 0 ($generated@@48 $generated@@117)) (ite ($generated@@34 $generated@@118) true (let (($generated@@124 ($generated@@35 $generated@@118)))
(let (($generated@@125 ($generated@@36 $generated@@32 ($generated@@37 $generated@@118))))
 (and ($generated@@38 $generated@@125) ($generated@@59 $generated@@115 ($generated@@21 $generated@@116) ($generated@@46 $generated@@117 ($generated@@47 1)) $generated@@124)))))) (=> (= ($generated@@64 0) ($generated@@48 $generated@@117)) (forall (($generated@@126 T@U) ) (!  (=> ($generated@@25 $generated@@126 $generated@@117) ($generated@@59 $generated@@115 ($generated@@21 $generated@@116) $generated@@126 $generated@@118))
 :pattern ( ($generated@@59 $generated@@115 ($generated@@21 $generated@@116) $generated@@126 $generated@@118))
)))))))
 :weight 3
 :pattern ( ($generated@@59 $generated@@115 ($generated@@21 $generated@@116) ($generated@@66 $generated@@97 $generated@@117) $generated@@118))
))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@127 ($generated@@94 $generated@@131 $generated@@128) $generated@@129 $generated@@130) ($generated@@54 $generated@@131 $generated@@128 $generated@@129 $generated@@130))
 :pattern ( ($generated@@127 ($generated@@94 $generated@@131 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@134 T@U) ) (!  (and (= ($generated@@132 ($generated@@33 $generated@@134)) $generated@@0) (= ($generated@@133 ($generated@@33 $generated@@134)) $generated@@3))
 :pattern ( ($generated@@33 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and ($generated@@135 $generated@@137) (<= ($generated@@48 $generated@@137) ($generated@@48 $generated@@136))) (and (= ($generated@@135 ($generated@@46 $generated@@136 $generated@@137)) ($generated@@135 $generated@@136)) (= ($generated@@48 ($generated@@46 $generated@@136 $generated@@137)) (- ($generated@@48 $generated@@136) ($generated@@48 $generated@@137)))))
 :pattern ( ($generated@@46 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 Int) ) (!  (=> (<= 0 $generated@@138) (and ($generated@@135 ($generated@@47 $generated@@138)) (= ($generated@@48 ($generated@@47 $generated@@138)) $generated@@138)))
 :pattern ( ($generated@@47 $generated@@138))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (or ($generated@@74 $generated@@140 $generated@@142 $generated@@143) (and (< 2 $generated@@29) (and (and (and ($generated@@31 $generated@@32 $generated@@142 ($generated@@33 $generated@@140)) ($generated@@54 $generated@@32 $generated@@142 ($generated@@33 $generated@@140) $generated@@139)) (and ($generated@@31 $generated@@32 $generated@@143 ($generated@@33 ($generated@@33 $generated@@140))) ($generated@@54 $generated@@32 $generated@@143 ($generated@@33 ($generated@@33 $generated@@140)) $generated@@139))) ($generated@@20 $generated@@140 ($generated@@21 $generated@@75) $generated@@143)))) ($generated@@55 $generated@@139)) ($generated@@54 $generated@@32 ($generated@@73 $generated@@140 $generated@@141 $generated@@142 $generated@@143) ($generated@@33 $generated@@140) $generated@@139))
 :pattern ( ($generated@@54 $generated@@32 ($generated@@73 $generated@@140 $generated@@141 $generated@@142 $generated@@143) ($generated@@33 $generated@@140) $generated@@139))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (or ($generated@@25 $generated@@144 $generated@@145) (= $generated@@144 $generated@@145)) ($generated@@25 $generated@@145 $generated@@144))
 :pattern ( ($generated@@25 $generated@@144 $generated@@145) ($generated@@25 $generated@@145 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@147 ($generated@@33 $generated@@146)) (or ($generated@@34 $generated@@147) ($generated@@38 $generated@@147)))
 :pattern ( ($generated@@38 $generated@@147) ($generated@@31 $generated@@32 $generated@@147 ($generated@@33 $generated@@146)))
 :pattern ( ($generated@@34 $generated@@147) ($generated@@31 $generated@@32 $generated@@147 ($generated@@33 $generated@@146)))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (or ($generated@@98 $generated@@148 $generated@@150 $generated@@151) (and (< 2 $generated@@29) ($generated@@31 $generated@@32 $generated@@151 ($generated@@33 ($generated@@33 $generated@@148))))) (and (and (=> (< 0 ($generated@@48 $generated@@150)) (=> (not ($generated@@34 $generated@@151)) (let (($generated@@152 ($generated@@35 $generated@@151)))
(let (($generated@@153 ($generated@@36 $generated@@32 ($generated@@37 $generated@@151))))
 (=> ($generated@@38 $generated@@153) ($generated@@98 $generated@@148 ($generated@@46 $generated@@150 ($generated@@47 1)) $generated@@152)))))) (=> (=> (< 0 ($generated@@48 $generated@@150)) (ite ($generated@@34 $generated@@151) true (let (($generated@@154 ($generated@@35 $generated@@151)))
(let (($generated@@155 ($generated@@36 $generated@@32 ($generated@@37 $generated@@151))))
 (and ($generated@@38 $generated@@155) ($generated@@59 $generated@@148 $generated@@149 ($generated@@46 $generated@@150 ($generated@@47 1)) $generated@@154)))))) (=> (= ($generated@@64 0) ($generated@@48 $generated@@150)) (forall (($generated@@156 T@U) ) (!  (=> ($generated@@25 $generated@@156 $generated@@150) ($generated@@98 $generated@@148 $generated@@156 $generated@@151))
 :pattern ( ($generated@@59 $generated@@148 $generated@@149 $generated@@156 $generated@@151))
))))) (= ($generated@@59 $generated@@148 ($generated@@21 $generated@@149) $generated@@150 $generated@@151)  (and (=> (< 0 ($generated@@48 $generated@@150)) (ite ($generated@@34 $generated@@151) true (let (($generated@@157 ($generated@@35 $generated@@151)))
(let (($generated@@158 ($generated@@36 $generated@@32 ($generated@@37 $generated@@151))))
 (and ($generated@@38 $generated@@158) ($generated@@59 $generated@@148 $generated@@149 ($generated@@46 $generated@@150 ($generated@@47 1)) $generated@@157)))))) (=> (= ($generated@@64 0) ($generated@@48 $generated@@150)) (forall (($generated@@159 T@U) ) (!  (=> ($generated@@25 $generated@@159 $generated@@150) ($generated@@59 $generated@@148 $generated@@149 $generated@@159 $generated@@151))
 :pattern ( ($generated@@59 $generated@@148 $generated@@149 $generated@@159 $generated@@151))
)))))))
 :pattern ( ($generated@@59 $generated@@148 ($generated@@21 $generated@@149) $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@88 ($generated@@94 $generated@@162 $generated@@160) $generated@@161) ($generated@@31 $generated@@162 $generated@@160 $generated@@161))
 :pattern ( ($generated@@88 ($generated@@94 $generated@@162 $generated@@160) $generated@@161))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (or ($generated@@74 $generated@@163 $generated@@165 $generated@@166) (and (< 2 $generated@@29) (and (and ($generated@@31 $generated@@32 $generated@@165 ($generated@@33 $generated@@163)) ($generated@@31 $generated@@32 $generated@@166 ($generated@@33 ($generated@@33 $generated@@163)))) ($generated@@20 $generated@@163 ($generated@@21 $generated@@75) $generated@@166)))) ($generated@@31 $generated@@32 ($generated@@73 $generated@@163 $generated@@164 $generated@@165 $generated@@166) ($generated@@33 $generated@@163)))
 :pattern ( ($generated@@73 $generated@@163 $generated@@164 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ) (! (<= 0 ($generated@@48 $generated@@167))
 :pattern ( ($generated@@48 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@52 ($generated@@76 $generated@@168 $generated@@169)) $generated@@2)
 :pattern ( ($generated@@76 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@37 ($generated@@76 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@76 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@35 ($generated@@76 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@76 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@174 ($generated@@33 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@33 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@36 $generated@@177 ($generated@@94 $generated@@177 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@94 $generated@@177 $generated@@176))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and ($generated@@31 $generated@@32 $generated@@180 ($generated@@33 ($generated@@33 $generated@@178))) (= $generated@@181 ($generated@@47 0))) ($generated@@59 $generated@@178 $generated@@179 $generated@@181 $generated@@180))
 :pattern ( ($generated@@59 $generated@@178 $generated@@179 $generated@@181 $generated@@180))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@182 $generated@@183) (or (not (= $generated@@182 $generated@@183)) (not true))) (=> (and ($generated@@135 $generated@@182) (not ($generated@@135 $generated@@183))) ($generated@@25 $generated@@182 $generated@@183))) (=> (and ($generated@@135 $generated@@182) ($generated@@135 $generated@@183)) (= ($generated@@25 $generated@@182 $generated@@183) (< ($generated@@48 $generated@@182) ($generated@@48 $generated@@183))))) (=> (and ($generated@@25 $generated@@182 $generated@@183) ($generated@@135 $generated@@183)) ($generated@@135 $generated@@182)))
 :pattern ( ($generated@@25 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@59 $generated@@184 ($generated@@21 $generated@@185) $generated@@186 $generated@@187) ($generated@@59 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
 :pattern ( ($generated@@59 $generated@@184 ($generated@@21 $generated@@185) $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and ($generated@@55 $generated@@190) (and ($generated@@38 $generated@@188) ($generated@@54 $generated@@32 $generated@@188 ($generated@@33 $generated@@189) $generated@@190))) ($generated@@127 ($generated@@37 $generated@@188) $generated@@189 $generated@@190))
 :pattern ( ($generated@@127 ($generated@@37 $generated@@188) $generated@@189 $generated@@190))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@191 $generated@@201 $generated@@202 $generated@@203 ($generated@@197 $generated@@201 $generated@@202 $generated@@203 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@206 $generated@@207) $generated@@204)
 :weight 0
)) (and (forall (($generated@@208 T@T) ($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@191 $generated@@208 $generated@@209 $generated@@210 ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)) (forall (($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@191 $generated@@217 $generated@@218 $generated@@219 ($generated@@197 $generated@@217 $generated@@218 $generated@@219 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@191 $generated@@217 $generated@@218 $generated@@219 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (= ($generated@@4 $generated@@192) 5)) (= ($generated@@4 $generated@@193) 6)) (forall (($generated@@226 T@T) ($generated@@227 T@T) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@195 $generated@@226 $generated@@227 ($generated@@198 $generated@@226 $generated@@227 $generated@@229 $generated@@230 $generated@@228) $generated@@230) $generated@@228)
 :weight 0
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or (= $generated@@235 $generated@@236) (= ($generated@@195 $generated@@231 $generated@@232 ($generated@@198 $generated@@231 $generated@@232 $generated@@234 $generated@@235 $generated@@233) $generated@@236) ($generated@@195 $generated@@231 $generated@@232 $generated@@234 $generated@@236)))
 :weight 0
))) (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (= ($generated@@4 ($generated@@196 $generated@@237 $generated@@238)) 7))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@199 ($generated@@196 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@196 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@200 ($generated@@196 $generated@@241 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@196 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (= ($generated@@9 ($generated@@191 $generated@@192 $generated@@193 $generated@@5 ($generated@@194 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (or (not (= $generated@@247 $generated@@243)) (not true)) ($generated@@9 ($generated@@36 $generated@@5 ($generated@@195 $generated@@193 $generated@@97 ($generated@@195 $generated@@192 ($generated@@196 $generated@@193 $generated@@97) $generated@@244 $generated@@247) $generated@@245)))) $generated@@246))
 :pattern ( ($generated@@191 $generated@@192 $generated@@193 $generated@@5 ($generated@@194 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (= ($generated@@73 $generated@@249 ($generated@@21 $generated@@250) $generated@@251 $generated@@252) ($generated@@73 $generated@@249 $generated@@250 $generated@@251 $generated@@252))
 :pattern ( ($generated@@73 $generated@@249 ($generated@@21 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> ($generated@@88 $generated@@254 ($generated@@33 $generated@@253)) (and (= ($generated@@94 $generated@@32 ($generated@@36 $generated@@32 $generated@@254)) $generated@@254) ($generated@@31 $generated@@32 ($generated@@36 $generated@@32 $generated@@254) ($generated@@33 $generated@@253))))
 :pattern ( ($generated@@88 $generated@@254 ($generated@@33 $generated@@253)))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> ($generated@@135 $generated@@255) (= $generated@@255 ($generated@@47 ($generated@@48 $generated@@255))))
 :pattern ( ($generated@@48 $generated@@255))
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and ($generated@@55 $generated@@258) (and ($generated@@38 $generated@@256) ($generated@@54 $generated@@32 $generated@@256 ($generated@@33 $generated@@257) $generated@@258))) ($generated@@54 $generated@@32 ($generated@@35 $generated@@256) ($generated@@33 $generated@@257) $generated@@258))
 :pattern ( ($generated@@54 $generated@@32 ($generated@@35 $generated@@256) ($generated@@33 $generated@@257) $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and ($generated@@135 $generated@@260) (<= ($generated@@48 $generated@@260) ($generated@@48 $generated@@259))) (or (and (= $generated@@260 ($generated@@47 0)) (= ($generated@@46 $generated@@259 $generated@@260) $generated@@259)) (and (or (not (= $generated@@260 ($generated@@47 0))) (not true)) ($generated@@25 ($generated@@46 $generated@@259 $generated@@260) $generated@@259))))
 :pattern ( ($generated@@46 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@94 $generated@@6 ($generated@@10 ($generated@@64 $generated@@261))) ($generated@@66 $generated@@97 ($generated@@94 $generated@@6 ($generated@@10 $generated@@261))))
 :pattern ( ($generated@@94 $generated@@6 ($generated@@10 ($generated@@64 $generated@@261))))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@T) ) (! (= ($generated@@94 $generated@@263 ($generated@@66 $generated@@263 $generated@@262)) ($generated@@66 $generated@@97 ($generated@@94 $generated@@263 $generated@@262)))
 :pattern ( ($generated@@94 $generated@@263 ($generated@@66 $generated@@263 $generated@@262)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> ($generated@@55 $generated@@267) (= ($generated@@54 $generated@@32 ($generated@@76 $generated@@265 $generated@@266) ($generated@@33 $generated@@264) $generated@@267)  (and ($generated@@127 $generated@@265 $generated@@264 $generated@@267) ($generated@@54 $generated@@32 $generated@@266 ($generated@@33 $generated@@264) $generated@@267))))
 :pattern ( ($generated@@54 $generated@@32 ($generated@@76 $generated@@265 $generated@@266) ($generated@@33 $generated@@264) $generated@@267))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@288 true))
(let (($generated@@289  (=> (= $generated@@268 ($generated@@76 ($generated@@94 $generated@@32 $generated@@269) $generated@@270)) (=> (and (and (and ($generated@@31 $generated@@32 $generated@@269 ($generated@@33 $generated@@271)) ($generated@@31 $generated@@32 $generated@@270 ($generated@@33 ($generated@@33 $generated@@271)))) (and (= $generated@@272 $generated@@270) ($generated@@31 $generated@@32 $generated@@272 ($generated@@33 ($generated@@33 $generated@@271))))) (and (and (= $generated@@273 $generated@@272) (= $generated@@274 $generated@@269)) (and ($generated@@31 $generated@@32 $generated@@274 ($generated@@33 $generated@@271)) (= $generated@@275 $generated@@274)))) (and (=> (= (ControlFlow 0 10) (- 0 14)) ($generated@@38 $generated@@275)) (=> ($generated@@38 $generated@@275) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@38 $generated@@275)) (=> ($generated@@38 $generated@@275) (=> (= $generated@@276 ($generated@@35 $generated@@275)) (=> (and ($generated@@54 $generated@@32 $generated@@276 ($generated@@33 $generated@@271) $generated@@277) ($generated@@54 $generated@@32 $generated@@273 ($generated@@33 ($generated@@33 $generated@@271)) $generated@@277)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (=> ($generated@@30 $generated@@271 $generated@@273) (or ($generated@@20 $generated@@271 ($generated@@21 $generated@@75) $generated@@273) (=> ($generated@@34 $generated@@273) ($generated@@9 ($generated@@66 $generated@@5 ($generated@@8 true))))))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (=> ($generated@@30 $generated@@271 $generated@@273) (or ($generated@@20 $generated@@271 ($generated@@21 $generated@@75) $generated@@273) (=> (not ($generated@@34 $generated@@273)) (let (($generated@@290 ($generated@@36 $generated@@32 ($generated@@37 $generated@@273))))
($generated@@38 $generated@@290)))))) (=> (= (ControlFlow 0 10) (- 0 9)) (=> ($generated@@30 $generated@@271 $generated@@273) (or ($generated@@20 $generated@@271 ($generated@@21 $generated@@75) $generated@@273) (=> (not ($generated@@34 $generated@@273)) (let (($generated@@291 ($generated@@35 $generated@@273)))
($generated@@20 $generated@@271 ($generated@@21 ($generated@@21 $generated@@75)) $generated@@291))))))))))))))))))
(let (($generated@@292  (=> (or (not (= $generated@@268 $generated@@53)) (not true)) (and (=> (= (ControlFlow 0 16) 10) $generated@@289) (=> (= (ControlFlow 0 16) 15) $generated@@288)))))
(let (($generated@@293 true))
(let (($generated@@294  (=> (= $generated@@278 $generated@@53) (and (=> (= (ControlFlow 0 17) 8) $generated@@293) (=> (= (ControlFlow 0 17) 16) $generated@@292)))))
(let (($generated@@295 true))
(let (($generated@@296  (=> (= $generated@@278 ($generated@@76 $generated@@279 $generated@@280)) (=> (and ($generated@@88 $generated@@279 $generated@@271) ($generated@@31 $generated@@32 $generated@@280 ($generated@@33 $generated@@271))) (=> (and (and (and (= $generated@@281 $generated@@280) ($generated@@31 $generated@@32 $generated@@281 ($generated@@33 $generated@@271))) (and (= $generated@@282 $generated@@281) (= $generated@@283 $generated@@279))) (and (and ($generated@@88 $generated@@283 $generated@@271) (= $generated@@284 $generated@@283)) (and ($generated@@54 $generated@@32 $generated@@282 ($generated@@33 $generated@@271) $generated@@277) ($generated@@54 $generated@@32 $generated@@268 ($generated@@33 ($generated@@33 $generated@@271)) $generated@@277)))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@30 $generated@@271 $generated@@268) (or ($generated@@20 $generated@@271 ($generated@@21 $generated@@75) $generated@@268) (=> ($generated@@34 $generated@@268) ($generated@@9 ($generated@@66 $generated@@5 ($generated@@8 true))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@30 $generated@@271 $generated@@268) (or ($generated@@20 $generated@@271 ($generated@@21 $generated@@75) $generated@@268) (=> (not ($generated@@34 $generated@@268)) (let (($generated@@297 ($generated@@36 $generated@@32 ($generated@@37 $generated@@268))))
($generated@@38 $generated@@297)))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@30 $generated@@271 $generated@@268) (or ($generated@@20 $generated@@271 ($generated@@21 $generated@@75) $generated@@268) (=> (not ($generated@@34 $generated@@268)) (let (($generated@@298 ($generated@@35 $generated@@268)))
($generated@@20 $generated@@271 ($generated@@21 ($generated@@21 $generated@@75)) $generated@@298)))))))))))))
(let (($generated@@299  (=> (or (not (= $generated@@278 $generated@@53)) (not true)) (and (=> (= (ControlFlow 0 7) 3) $generated@@296) (=> (= (ControlFlow 0 7) 6) $generated@@295)))))
(let (($generated@@300 true))
(let (($generated@@301  (=> (and (and (= $generated@@285 ($generated@@194 $generated@@286 $generated@@277 $generated false)) ($generated@@54 $generated@@32 $generated@@268 ($generated@@33 ($generated@@33 $generated@@271)) $generated@@277)) (and ($generated@@30 $generated@@271 $generated@@268) ($generated@@20 $generated@@271 ($generated@@21 $generated@@75) $generated@@268))) (and (and (=> (= (ControlFlow 0 18) 1) $generated@@300) (=> (= (ControlFlow 0 18) 17) $generated@@294)) (=> (= (ControlFlow 0 18) 7) $generated@@299)))))
(let (($generated@@302  (=> (and ($generated@@55 $generated@@277) ($generated@@287 $generated@@277)) (=> (and (and ($generated@@31 $generated@@32 $generated@@278 ($generated@@33 $generated@@271)) ($generated@@31 $generated@@32 $generated@@268 ($generated@@33 ($generated@@33 $generated@@271)))) (and (= 2 $generated@@29) (= (ControlFlow 0 19) 18))) $generated@@301))))
$generated@@302))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
