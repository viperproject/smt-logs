(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) T@U)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U T@U) Bool)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@116 (T@U T@U) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ) (! ($generated@@18 ($generated@@17 $generated@@19 $generated@@20) $generated@@20)
 :pattern ( ($generated@@17 $generated@@19 $generated@@20))
)))
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ($generated@@23 T@U) ) (!  (=> ($generated@@18 $generated@@21 $generated@@23) ($generated@@18 ($generated@@17 $generated@@21 $generated@@22) $generated@@23))
 :pattern ( ($generated@@17 $generated@@21 $generated@@22) ($generated@@18 $generated@@21 $generated@@23))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@18 $generated@@25 $generated@@27) ($generated@@18 ($generated@@24 $generated@@25 $generated@@26) $generated@@27))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26) ($generated@@18 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@18 $generated@@29 $generated@@30) ($generated@@18 ($generated@@24 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@24 $generated@@28 $generated@@29) ($generated@@18 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@18 ($generated@@17 $generated@@31 $generated@@32) $generated@@33)  (or (= $generated@@33 $generated@@32) ($generated@@18 $generated@@31 $generated@@33)))
 :pattern ( ($generated@@18 ($generated@@17 $generated@@31 $generated@@32) $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@18 $generated@@36 $generated@@37) (not ($generated@@18 ($generated@@34 $generated@@35 $generated@@36) $generated@@37)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36) ($generated@@18 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ) (!  (not ($generated@@18 $generated@@38 $generated@@39))
 :pattern ( ($generated@@18 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@24 ($generated@@24 $generated@@40 $generated@@41) $generated@@41) ($generated@@24 $generated@@40 $generated@@41))
 :pattern ( ($generated@@24 ($generated@@24 $generated@@40 $generated@@41) $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@18 ($generated@@34 $generated@@42 $generated@@43) $generated@@44)  (and ($generated@@18 $generated@@42 $generated@@44) (not ($generated@@18 $generated@@43 $generated@@44))))
 :pattern ( ($generated@@18 ($generated@@34 $generated@@42 $generated@@43) $generated@@44))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@46 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@46 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@46 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@1 $generated@@47) 3)) (= ($generated@@1 $generated@@48) 4)) (= ($generated@@1 $generated@@49) 5)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@66 $generated@@67)) 6))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@50 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@50 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@50 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@45 $generated@@72 $generated@@73) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@6 ($generated@@51 $generated@@2 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@72 $generated@@74) $generated@@0))) ($generated@@6 ($generated@@51 $generated@@2 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@73 $generated@@74) $generated@@0))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@73 $generated@@74) $generated@@0))
)))
 :pattern ( ($generated@@45 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 $generated@@79 $generated@@80) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@18 $generated@@79 $generated@@81) ($generated@@18 $generated@@80 $generated@@81))
 :pattern ( ($generated@@18 $generated@@79 $generated@@81))
 :pattern ( ($generated@@18 $generated@@80 $generated@@81))
)))
 :pattern ( ($generated@@78 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@51 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@51 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 $generated@@86 $generated@@87) (forall (($generated@@88 T@U) ) (!  (or (not ($generated@@18 $generated@@86 $generated@@88)) (not ($generated@@18 $generated@@87 $generated@@88)))
 :pattern ( ($generated@@18 $generated@@86 $generated@@88))
 :pattern ( ($generated@@18 $generated@@87 $generated@@88))
)))
 :pattern ( ($generated@@85 $generated@@86 $generated@@87))
)))
(assert (= ($generated@@1 $generated@@90) 7))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@89 $generated@@90 $generated@@93 ($generated@@91 $generated@@94)) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@18 $generated@@93 $generated@@95) ($generated@@92 $generated@@95 $generated@@94))
 :pattern ( ($generated@@18 $generated@@93 $generated@@95))
)))
 :pattern ( ($generated@@89 $generated@@90 $generated@@93 ($generated@@91 $generated@@94)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@96 ($generated@@82 $generated@@101 $generated@@98) $generated@@99 $generated@@100) ($generated@@97 $generated@@101 $generated@@98 $generated@@99 $generated@@100))
 :pattern ( ($generated@@96 ($generated@@82 $generated@@101 $generated@@98) $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> ($generated@@45 $generated@@102 $generated@@103) (=> ($generated@@96 $generated@@104 $generated@@105 $generated@@102) ($generated@@96 $generated@@104 $generated@@105 $generated@@103)))
 :pattern ( ($generated@@45 $generated@@102 $generated@@103) ($generated@@96 $generated@@104 $generated@@105 $generated@@102))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (!  (=> ($generated@@45 $generated@@106 $generated@@107) (=> ($generated@@97 $generated@@110 $generated@@108 $generated@@109 $generated@@106) ($generated@@97 $generated@@110 $generated@@108 $generated@@109 $generated@@107)))
 :pattern ( ($generated@@45 $generated@@106 $generated@@107) ($generated@@97 $generated@@110 $generated@@108 $generated@@109 $generated@@106))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@18 ($generated@@24 $generated@@111 $generated@@112) $generated@@113)  (or ($generated@@18 $generated@@111 $generated@@113) ($generated@@18 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@18 ($generated@@24 $generated@@111 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@85 $generated@@114 $generated@@115) (and (= ($generated@@34 ($generated@@24 $generated@@114 $generated@@115) $generated@@114) $generated@@115) (= ($generated@@34 ($generated@@24 $generated@@114 $generated@@115) $generated@@115) $generated@@114)))
 :pattern ( ($generated@@24 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@116 $generated@@117 $generated@@118) (= $generated@@117 $generated@@118))
 :pattern ( ($generated@@116 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or (not (= $generated@@119 $generated@@121)) (not true)) (=> (and ($generated@@45 $generated@@119 $generated@@120) ($generated@@45 $generated@@120 $generated@@121)) ($generated@@45 $generated@@119 $generated@@121)))
 :pattern ( ($generated@@45 $generated@@119 $generated@@120) ($generated@@45 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@92 ($generated@@82 $generated@@124 $generated@@122) $generated@@123) ($generated@@89 $generated@@124 $generated@@122 $generated@@123))
 :pattern ( ($generated@@92 ($generated@@82 $generated@@124 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@97 $generated@@90 $generated@@125 ($generated@@91 $generated@@126) $generated@@127) (forall (($generated@@128 T@U) ) (!  (=> ($generated@@18 $generated@@125 $generated@@128) ($generated@@96 $generated@@128 $generated@@126 $generated@@127))
 :pattern ( ($generated@@18 $generated@@125 $generated@@128))
)))
 :pattern ( ($generated@@97 $generated@@90 $generated@@125 ($generated@@91 $generated@@126) $generated@@127))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@129 ($generated@@91 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@91 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@91 $generated@@132)) $generated)
 :pattern ( ($generated@@91 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@51 $generated@@134 ($generated@@82 $generated@@134 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@82 $generated@@134 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@24 $generated@@135 ($generated@@24 $generated@@135 $generated@@136)) ($generated@@24 $generated@@135 $generated@@136))
 :pattern ( ($generated@@24 $generated@@135 ($generated@@24 $generated@@135 $generated@@136)))
)))
(assert  (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@137 $generated@@140 $generated@@141 $generated@@142 ($generated@@139 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@145 $generated@@146) $generated@@143)
 :weight 0
)) (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@137 $generated@@147 $generated@@148 $generated@@149 ($generated@@139 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@137 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@137 $generated@@156 $generated@@157 $generated@@158 ($generated@@139 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@137 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@6 ($generated@@137 $generated@@49 $generated@@47 $generated@@2 ($generated@@138 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (or (not (= $generated@@169 $generated@@165)) (not true)) ($generated@@6 ($generated@@51 $generated@@2 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@166 $generated@@169) $generated@@167)))) $generated@@168))
 :pattern ( ($generated@@137 $generated@@49 $generated@@47 $generated@@2 ($generated@@138 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@92 $generated@@171 ($generated@@91 $generated@@172)) (and (= ($generated@@82 $generated@@90 ($generated@@51 $generated@@90 $generated@@171)) $generated@@171) ($generated@@89 $generated@@90 ($generated@@51 $generated@@90 $generated@@171) ($generated@@91 $generated@@172))))
 :pattern ( ($generated@@92 $generated@@171 ($generated@@91 $generated@@172)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@116 $generated@@173 $generated@@174) (forall (($generated@@175 T@U) ) (! (= ($generated@@18 $generated@@173 $generated@@175) ($generated@@18 $generated@@174 $generated@@175))
 :pattern ( ($generated@@18 $generated@@173 $generated@@175))
 :pattern ( ($generated@@18 $generated@@174 $generated@@175))
)))
 :pattern ( ($generated@@116 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@82 $generated@@177 ($generated@@75 $generated@@177 $generated@@176)) ($generated@@75 $generated@@48 ($generated@@82 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@82 $generated@@177 ($generated@@75 $generated@@177 $generated@@176)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () Bool)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@201  (=> (= (ControlFlow 0 13) (- 0 12)) ($generated@@116 $generated@@178 $generated@@179))))
(let (($generated@@202  (=> ($generated@@116 $generated@@180 $generated@@38) (=> (and (= $generated@@179 $generated@@181) (= (ControlFlow 0 14) 13)) $generated@@201))))
(let (($generated@@203  (and (=> (= (ControlFlow 0 4) (- 0 8)) (exists (($generated@@204 T@U) )  (and ($generated@@92 $generated@@204 $generated@@182) ($generated@@18 $generated@@180 $generated@@204)))) (=> (exists (($generated@@205 T@U) )  (and ($generated@@92 $generated@@205 $generated@@182) ($generated@@18 $generated@@180 $generated@@205))) (=> (and (=> true (and ($generated@@92 $generated@@183 $generated@@182) ($generated@@96 $generated@@183 $generated@@182 $generated@@184))) ($generated@@18 $generated@@180 $generated@@183)) (and (=> (= (ControlFlow 0 4) (- 0 7)) true) (=> (= $generated@@185 ($generated@@34 $generated@@180 ($generated@@17 $generated@@38 $generated@@183))) (and (=> (= (ControlFlow 0 4) (- 0 6)) true) (=> (= $generated@@186 ($generated@@24 $generated@@181 ($generated@@17 $generated@@38 $generated@@183))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and ($generated@@78 $generated@@185 $generated@@180) (not ($generated@@78 $generated@@180 $generated@@185)))) (=> (and ($generated@@78 $generated@@185 $generated@@180) (not ($generated@@78 $generated@@180 $generated@@185))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@187 ($generated@@116 $generated@@178 ($generated@@24 $generated@@185 $generated@@186)))))))))))))))
(let (($generated@@206  (=> (and (not (and ($generated@@92 $generated@@188 $generated@@182) ($generated@@96 $generated@@188 $generated@@182 $generated@@184))) (= (ControlFlow 0 10) 4)) $generated@@203)))
(let (($generated@@207  (=> (and (and ($generated@@92 $generated@@188 $generated@@182) ($generated@@96 $generated@@188 $generated@@182 $generated@@184)) (= (ControlFlow 0 9) 4)) $generated@@203)))
(let (($generated@@208  (=> (not ($generated@@116 $generated@@180 $generated@@38)) (and (=> (= (ControlFlow 0 11) 9) $generated@@207) (=> (= (ControlFlow 0 11) 10) $generated@@206)))))
(let (($generated@@209  (=> $generated@@187 (and (=> (= (ControlFlow 0 15) 14) $generated@@202) (=> (= (ControlFlow 0 15) 11) $generated@@208)))))
(let (($generated@@210 true))
(let (($generated@@211  (and (=> (= (ControlFlow 0 16) 2) $generated@@210) (=> (= (ControlFlow 0 16) 15) $generated@@209))))
(let (($generated@@212 true))
(let (($generated@@213  (=> (=> $generated@@189 (and ($generated@@92 $generated@@190 $generated@@182) ($generated@@96 $generated@@190 $generated@@182 $generated@@184))) (=> (and ($generated@@89 $generated@@90 $generated@@180 ($generated@@91 $generated@@182)) ($generated@@97 $generated@@90 $generated@@180 ($generated@@91 $generated@@182) $generated@@184)) (=> (and (and (and ($generated@@89 $generated@@90 $generated@@181 ($generated@@91 $generated@@182)) ($generated@@97 $generated@@90 $generated@@181 ($generated@@91 $generated@@182) $generated@@184)) (and (not false) (=> $generated@@187 ($generated@@116 $generated@@178 ($generated@@24 $generated@@180 $generated@@181))))) (and (and (forall (($generated@@214 T@U) ) (!  (=> (and (or (not (= $generated@@214 $generated@@191)) (not true)) ($generated@@6 ($generated@@51 $generated@@2 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@184 $generated@@214) $generated@@0)))) (= ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@184 $generated@@214) ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@184 $generated@@214)))
 :pattern ( ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@184 $generated@@214))
)) ($generated@@45 $generated@@184 $generated@@184)) (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (or (not (= $generated@@215 $generated@@191)) (not true)) ($generated@@6 ($generated@@51 $generated@@2 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@184 $generated@@215) $generated@@0)))) (or (= ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@184 $generated@@215) $generated@@216) ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@184 $generated@@215) $generated@@216)) ($generated@@6 ($generated@@137 $generated@@49 $generated@@47 $generated@@2 $generated@@192 $generated@@215 $generated@@216))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@184 $generated@@215) $generated@@216))
)) ($generated@@78 $generated@@180 $generated@@178)))) (and (=> (= (ControlFlow 0 17) 1) $generated@@212) (=> (= (ControlFlow 0 17) 16) $generated@@211)))))))
(let (($generated@@217  (=> (and (= $generated@@192 ($generated@@138 $generated@@191 $generated@@184 $generated@@0 false)) (= $generated@@193 ($generated@@75 $generated@@90 $generated@@38))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> $generated@@187 ($generated@@116 $generated@@178 ($generated@@24 $generated@@178 $generated@@193)))) (=> (=> $generated@@187 ($generated@@116 $generated@@178 ($generated@@24 $generated@@178 $generated@@193))) (=> (= (ControlFlow 0 18) 17) $generated@@213))))))
(let (($generated@@218  (=> (and ($generated@@194 $generated@@184) ($generated@@195 $generated@@184)) (=> (and (and ($generated@@89 $generated@@90 $generated@@178 ($generated@@91 $generated@@182)) ($generated@@97 $generated@@90 $generated@@178 ($generated@@91 $generated@@182) $generated@@184)) (and ($generated@@89 $generated@@90 $generated@@196 ($generated@@91 $generated@@182)) ($generated@@97 $generated@@90 $generated@@196 ($generated@@91 $generated@@182) $generated@@184))) (=> (and (and (and ($generated@@89 $generated@@90 $generated@@197 ($generated@@91 $generated@@182)) ($generated@@97 $generated@@90 $generated@@197 ($generated@@91 $generated@@182) $generated@@184)) true) (and (and (=> $generated@@198 (and ($generated@@92 $generated@@199 $generated@@182) ($generated@@96 $generated@@199 $generated@@182 $generated@@184))) true) (and (= 0 $generated@@200) (= (ControlFlow 0 20) 18)))) $generated@@217)))))
$generated@@218))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
