(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) T@U)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@T T@U T@U) Bool)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@107 (T@U T@U) Bool)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ($generated@@21 T@U) ) (!  (=> ($generated@@18 $generated@@19 $generated@@21) ($generated@@18 ($generated@@17 $generated@@19 $generated@@20) $generated@@21))
 :pattern ( ($generated@@17 $generated@@19 $generated@@20) ($generated@@18 $generated@@19 $generated@@21))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (!  (=> ($generated@@18 $generated@@23 $generated@@24) ($generated@@18 ($generated@@17 $generated@@22 $generated@@23) $generated@@24))
 :pattern ( ($generated@@17 $generated@@22 $generated@@23) ($generated@@18 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@18 $generated@@27 $generated@@28) (not ($generated@@18 ($generated@@25 $generated@@26 $generated@@27) $generated@@28)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@18 $generated@@27 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ) (!  (not ($generated@@18 $generated@@29 $generated@@30))
 :pattern ( ($generated@@18 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@17 ($generated@@17 $generated@@31 $generated@@32) $generated@@32) ($generated@@17 $generated@@31 $generated@@32))
 :pattern ( ($generated@@17 ($generated@@17 $generated@@31 $generated@@32) $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@18 ($generated@@25 $generated@@33 $generated@@34) $generated@@35)  (and ($generated@@18 $generated@@33 $generated@@35) (not ($generated@@18 $generated@@34 $generated@@35))))
 :pattern ( ($generated@@18 ($generated@@25 $generated@@33 $generated@@34) $generated@@35))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@37 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@37 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@37 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@1 $generated@@38) 3)) (= ($generated@@1 $generated@@39) 4)) (= ($generated@@1 $generated@@40) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@41 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@41 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@41 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@41 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@36 $generated@@63 $generated@@64) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@6 ($generated@@42 $generated@@2 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@63 $generated@@65) $generated@@0))) ($generated@@6 ($generated@@42 $generated@@2 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@64 $generated@@65) $generated@@0))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@64 $generated@@65) $generated@@0))
)))
 :pattern ( ($generated@@36 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@69 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@18 $generated@@70 $generated@@72) ($generated@@18 $generated@@71 $generated@@72))
 :pattern ( ($generated@@18 $generated@@70 $generated@@72))
 :pattern ( ($generated@@18 $generated@@71 $generated@@72))
)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@42 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@42 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@76 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (or (not ($generated@@18 $generated@@77 $generated@@79)) (not ($generated@@18 $generated@@78 $generated@@79)))
 :pattern ( ($generated@@18 $generated@@77 $generated@@79))
 :pattern ( ($generated@@18 $generated@@78 $generated@@79))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78))
)))
(assert (= ($generated@@1 $generated@@81) 7))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@80 $generated@@81 $generated@@84 ($generated@@82 $generated@@85)) (forall (($generated@@86 T@U) ) (!  (=> ($generated@@18 $generated@@84 $generated@@86) ($generated@@83 $generated@@86 $generated@@85))
 :pattern ( ($generated@@18 $generated@@84 $generated@@86))
)))
 :pattern ( ($generated@@80 $generated@@81 $generated@@84 ($generated@@82 $generated@@85)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@87 ($generated@@73 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@88 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@87 ($generated@@73 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@36 $generated@@93 $generated@@94) (=> ($generated@@87 $generated@@95 $generated@@96 $generated@@93) ($generated@@87 $generated@@95 $generated@@96 $generated@@94)))
 :pattern ( ($generated@@36 $generated@@93 $generated@@94) ($generated@@87 $generated@@95 $generated@@96 $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (!  (=> ($generated@@36 $generated@@97 $generated@@98) (=> ($generated@@88 $generated@@101 $generated@@99 $generated@@100 $generated@@97) ($generated@@88 $generated@@101 $generated@@99 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@36 $generated@@97 $generated@@98) ($generated@@88 $generated@@101 $generated@@99 $generated@@100 $generated@@97))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@18 ($generated@@17 $generated@@102 $generated@@103) $generated@@104)  (or ($generated@@18 $generated@@102 $generated@@104) ($generated@@18 $generated@@103 $generated@@104)))
 :pattern ( ($generated@@18 ($generated@@17 $generated@@102 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@76 $generated@@105 $generated@@106) (and (= ($generated@@25 ($generated@@17 $generated@@105 $generated@@106) $generated@@105) $generated@@106) (= ($generated@@25 ($generated@@17 $generated@@105 $generated@@106) $generated@@106) $generated@@105)))
 :pattern ( ($generated@@17 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> ($generated@@107 $generated@@108 $generated@@109) (= $generated@@108 $generated@@109))
 :pattern ( ($generated@@107 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or (not (= $generated@@110 $generated@@112)) (not true)) (=> (and ($generated@@36 $generated@@110 $generated@@111) ($generated@@36 $generated@@111 $generated@@112)) ($generated@@36 $generated@@110 $generated@@112)))
 :pattern ( ($generated@@36 $generated@@110 $generated@@111) ($generated@@36 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@83 ($generated@@73 $generated@@115 $generated@@113) $generated@@114) ($generated@@80 $generated@@115 $generated@@113 $generated@@114))
 :pattern ( ($generated@@83 ($generated@@73 $generated@@115 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@88 $generated@@81 $generated@@116 ($generated@@82 $generated@@117) $generated@@118) (forall (($generated@@119 T@U) ) (!  (=> ($generated@@18 $generated@@116 $generated@@119) ($generated@@87 $generated@@119 $generated@@117 $generated@@118))
 :pattern ( ($generated@@18 $generated@@116 $generated@@119))
)))
 :pattern ( ($generated@@88 $generated@@81 $generated@@116 ($generated@@82 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@82 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@82 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@82 $generated@@123)) $generated)
 :pattern ( ($generated@@82 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@42 $generated@@125 ($generated@@73 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@73 $generated@@125 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@17 $generated@@126 ($generated@@17 $generated@@126 $generated@@127)) ($generated@@17 $generated@@126 $generated@@127))
 :pattern ( ($generated@@17 $generated@@126 ($generated@@17 $generated@@126 $generated@@127)))
)))
(assert  (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@128 $generated@@131 $generated@@132 $generated@@133 ($generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@128 $generated@@138 $generated@@139 $generated@@140 ($generated@@130 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@128 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@128 $generated@@147 $generated@@148 $generated@@149 ($generated@@130 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@128 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Bool) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@6 ($generated@@128 $generated@@40 $generated@@38 $generated@@2 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@6 ($generated@@42 $generated@@2 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@157 $generated@@160) $generated@@158)))) $generated@@159))
 :pattern ( ($generated@@128 $generated@@40 $generated@@38 $generated@@2 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@83 $generated@@162 ($generated@@82 $generated@@163)) (and (= ($generated@@73 $generated@@81 ($generated@@42 $generated@@81 $generated@@162)) $generated@@162) ($generated@@80 $generated@@81 ($generated@@42 $generated@@81 $generated@@162) ($generated@@82 $generated@@163))))
 :pattern ( ($generated@@83 $generated@@162 ($generated@@82 $generated@@163)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@107 $generated@@164 $generated@@165) (forall (($generated@@166 T@U) ) (! (= ($generated@@18 $generated@@164 $generated@@166) ($generated@@18 $generated@@165 $generated@@166))
 :pattern ( ($generated@@18 $generated@@164 $generated@@166))
 :pattern ( ($generated@@18 $generated@@165 $generated@@166))
)))
 :pattern ( ($generated@@107 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@73 $generated@@168 ($generated@@66 $generated@@168 $generated@@167)) ($generated@@66 $generated@@39 ($generated@@73 $generated@@168 $generated@@167)))
 :pattern ( ($generated@@73 $generated@@168 ($generated@@66 $generated@@168 $generated@@167)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () Bool)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@190  (=> (= (ControlFlow 0 14) (- 0 13)) ($generated@@107 $generated@@169 $generated@@170))))
(let (($generated@@191  (=> ($generated@@107 $generated@@171 $generated@@29) (=> (and (= $generated@@170 $generated@@172) (= (ControlFlow 0 15) 14)) $generated@@190))))
(let (($generated@@192  (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (and ($generated@@80 $generated@@81 $generated@@171 ($generated@@82 $generated@@173)) (and (not ($generated@@107 $generated@@171 $generated@@29)) ($generated@@69 $generated@@171 $generated@@171))) (or (and ($generated@@80 $generated@@81 ($generated@@66 $generated@@81 $generated@@29) ($generated@@82 $generated@@173)) (and (not ($generated@@107 $generated@@29 $generated@@29)) ($generated@@69 $generated@@29 $generated@@171))) (exists (($generated@@193 T@U) )  (and ($generated@@80 $generated@@81 $generated@@193 ($generated@@82 $generated@@173)) (and (not ($generated@@107 $generated@@193 $generated@@29)) ($generated@@69 $generated@@193 $generated@@171))))))) (=> (or (and ($generated@@80 $generated@@81 $generated@@171 ($generated@@82 $generated@@173)) (and (not ($generated@@107 $generated@@171 $generated@@29)) ($generated@@69 $generated@@171 $generated@@171))) (or (and ($generated@@80 $generated@@81 ($generated@@66 $generated@@81 $generated@@29) ($generated@@82 $generated@@173)) (and (not ($generated@@107 $generated@@29 $generated@@29)) ($generated@@69 $generated@@29 $generated@@171))) (exists (($generated@@194 T@U) )  (and ($generated@@80 $generated@@81 $generated@@194 ($generated@@82 $generated@@173)) (and (not ($generated@@107 $generated@@194 $generated@@29)) ($generated@@69 $generated@@194 $generated@@171)))))) (=> (and ($generated@@80 $generated@@81 $generated@@174 ($generated@@82 $generated@@173)) ($generated@@88 $generated@@81 $generated@@174 ($generated@@82 $generated@@173) $generated@@175)) (=> (and (and (not ($generated@@107 $generated@@174 $generated@@29)) ($generated@@69 $generated@@174 $generated@@171)) (and (= $generated@@176 ($generated@@25 $generated@@171 $generated@@174)) (= $generated@@177 ($generated@@17 $generated@@172 $generated@@174)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and ($generated@@69 $generated@@176 $generated@@171) (not ($generated@@69 $generated@@171 $generated@@176)))) (=> (and ($generated@@69 $generated@@176 $generated@@171) (not ($generated@@69 $generated@@171 $generated@@176))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@178 ($generated@@107 $generated@@169 ($generated@@17 $generated@@176 $generated@@177))))))))))))
(let (($generated@@195  (=> (= (ControlFlow 0 8) 4) $generated@@192)))
(let (($generated@@196  (=> (and ($generated@@107 $generated@@179 $generated@@29) (= (ControlFlow 0 10) 8)) $generated@@195)))
(let (($generated@@197  (=> (and (not ($generated@@107 $generated@@179 $generated@@29)) (= (ControlFlow 0 9) 8)) $generated@@195)))
(let (($generated@@198  (=> (and ($generated@@80 $generated@@81 $generated@@179 ($generated@@82 $generated@@173)) ($generated@@88 $generated@@81 $generated@@179 ($generated@@82 $generated@@173) $generated@@175)) (and (=> (= (ControlFlow 0 11) 9) $generated@@197) (=> (= (ControlFlow 0 11) 10) $generated@@196)))))
(let (($generated@@199  (=> (and (not (and ($generated@@80 $generated@@81 $generated@@179 ($generated@@82 $generated@@173)) ($generated@@88 $generated@@81 $generated@@179 ($generated@@82 $generated@@173) $generated@@175))) (= (ControlFlow 0 7) 4)) $generated@@192)))
(let (($generated@@200  (=> (not ($generated@@107 $generated@@171 $generated@@29)) (and (=> (= (ControlFlow 0 12) 11) $generated@@198) (=> (= (ControlFlow 0 12) 7) $generated@@199)))))
(let (($generated@@201  (=> $generated@@178 (and (=> (= (ControlFlow 0 16) 15) $generated@@191) (=> (= (ControlFlow 0 16) 12) $generated@@200)))))
(let (($generated@@202 true))
(let (($generated@@203  (and (=> (= (ControlFlow 0 17) 2) $generated@@202) (=> (= (ControlFlow 0 17) 16) $generated@@201))))
(let (($generated@@204 true))
(let (($generated@@205  (=> (and (and ($generated@@80 $generated@@81 $generated@@180 ($generated@@82 $generated@@173)) ($generated@@88 $generated@@81 $generated@@180 ($generated@@82 $generated@@173) $generated@@175)) (and ($generated@@80 $generated@@81 $generated@@171 ($generated@@82 $generated@@173)) ($generated@@88 $generated@@81 $generated@@171 ($generated@@82 $generated@@173) $generated@@175))) (=> (and (and (and ($generated@@80 $generated@@81 $generated@@172 ($generated@@82 $generated@@173)) ($generated@@88 $generated@@81 $generated@@172 ($generated@@82 $generated@@173) $generated@@175)) (and (not false) (=> $generated@@178 ($generated@@107 $generated@@169 ($generated@@17 $generated@@171 $generated@@172))))) (and (and (forall (($generated@@206 T@U) ) (!  (=> (and (or (not (= $generated@@206 $generated@@181)) (not true)) ($generated@@6 ($generated@@42 $generated@@2 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@175 $generated@@206) $generated@@0)))) (= ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@175 $generated@@206) ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@175 $generated@@206)))
 :pattern ( ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@175 $generated@@206))
)) ($generated@@36 $generated@@175 $generated@@175)) (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (or (not (= $generated@@207 $generated@@181)) (not true)) ($generated@@6 ($generated@@42 $generated@@2 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@175 $generated@@207) $generated@@0)))) (or (= ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@175 $generated@@207) $generated@@208) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@175 $generated@@207) $generated@@208)) ($generated@@6 ($generated@@128 $generated@@40 $generated@@38 $generated@@2 $generated@@182 $generated@@207 $generated@@208))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@175 $generated@@207) $generated@@208))
)) ($generated@@69 $generated@@171 $generated@@169)))) (and (=> (= (ControlFlow 0 18) 1) $generated@@204) (=> (= (ControlFlow 0 18) 17) $generated@@203))))))
(let (($generated@@209  (=> (and (= $generated@@182 ($generated@@129 $generated@@181 $generated@@175 $generated@@0 false)) (= $generated@@183 ($generated@@66 $generated@@81 $generated@@29))) (and (=> (= (ControlFlow 0 19) (- 0 20)) (=> $generated@@178 ($generated@@107 $generated@@169 ($generated@@17 $generated@@169 $generated@@183)))) (=> (=> $generated@@178 ($generated@@107 $generated@@169 ($generated@@17 $generated@@169 $generated@@183))) (=> (= (ControlFlow 0 19) 18) $generated@@205))))))
(let (($generated@@210  (=> (and ($generated@@184 $generated@@175) ($generated@@185 $generated@@175)) (=> (and (and (and (and ($generated@@80 $generated@@81 $generated@@169 ($generated@@82 $generated@@173)) ($generated@@88 $generated@@81 $generated@@169 ($generated@@82 $generated@@173) $generated@@175)) (and ($generated@@80 $generated@@81 $generated@@186 ($generated@@82 $generated@@173)) ($generated@@88 $generated@@81 $generated@@186 ($generated@@82 $generated@@173) $generated@@175))) (and (and ($generated@@80 $generated@@81 $generated@@187 ($generated@@82 $generated@@173)) ($generated@@88 $generated@@81 $generated@@187 ($generated@@82 $generated@@173) $generated@@175)) true)) (and (and (and ($generated@@80 $generated@@81 $generated@@188 ($generated@@82 $generated@@173)) ($generated@@88 $generated@@81 $generated@@188 ($generated@@82 $generated@@173) $generated@@175)) true) (and (= 0 $generated@@189) (= (ControlFlow 0 21) 19)))) $generated@@209))))
$generated@@210)))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
