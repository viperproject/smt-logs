(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U) T@U)
(declare-fun $generated@@19 (T@T T@U) T@U)
(declare-fun $generated@@20 (T@T T@U) T@U)
(declare-fun $generated@@25 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@29 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@T T@T) T@T)
(declare-fun $generated@@32 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@33 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@34 (T@T) T@T)
(declare-fun $generated@@35 (T@T) T@T)
(declare-fun $generated@@84 (T@T T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (= ($generated@@18 $generated) $generated@@0))
(assert (forall (($generated@@21 T@U) ($generated@@22 T@T) ) (! (= ($generated@@20 $generated@@22 ($generated@@19 $generated@@22 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@19 $generated@@22 $generated@@21))
)))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@T) ) (! (= ($generated@@19 $generated@@24 ($generated@@20 $generated@@24 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@20 $generated@@24 $generated@@23))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@36 T@T) ($generated@@37 T@T) ($generated@@38 T@T) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@25 $generated@@36 $generated@@37 $generated@@38 ($generated@@32 $generated@@36 $generated@@37 $generated@@38 $generated@@40 $generated@@41 $generated@@42 $generated@@39) $generated@@41 $generated@@42) $generated@@39)
 :weight 0
)) (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (or (= $generated@@48 $generated@@50) (= ($generated@@25 $generated@@43 $generated@@44 $generated@@45 ($generated@@32 $generated@@43 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@49 $generated@@46) $generated@@50 $generated@@51) ($generated@@25 $generated@@43 $generated@@44 $generated@@45 $generated@@47 $generated@@50 $generated@@51)))
 :weight 0
)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@58 $generated@@60) (= ($generated@@25 $generated@@52 $generated@@53 $generated@@54 ($generated@@32 $generated@@52 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@58 $generated@@55) $generated@@59 $generated@@60) ($generated@@25 $generated@@52 $generated@@53 $generated@@54 $generated@@56 $generated@@59 $generated@@60)))
 :weight 0
)))) (= ($generated@@2 $generated@@26) 3)) (= ($generated@@2 $generated@@27) 4)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@29 $generated@@61 $generated@@62 ($generated@@33 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@65) $generated@@63)
 :weight 0
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (or (= $generated@@70 $generated@@71) (= ($generated@@29 $generated@@66 $generated@@67 ($generated@@33 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@71) ($generated@@29 $generated@@66 $generated@@67 $generated@@69 $generated@@71)))
 :weight 0
))) (= ($generated@@2 $generated@@30) 5)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (= ($generated@@2 ($generated@@31 $generated@@72 $generated@@73)) 6))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@34 ($generated@@31 $generated@@74 $generated@@75)) $generated@@74)
 :pattern ( ($generated@@31 $generated@@74 $generated@@75))
))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@35 ($generated@@31 $generated@@76 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@31 $generated@@76 $generated@@77))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 Bool) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@7 ($generated@@25 $generated@@26 $generated@@27 $generated@@3 ($generated@@28 $generated@@78 $generated@@79 $generated@@80 $generated@@81) $generated@@82 $generated@@83))  (=> (and (or (not (= $generated@@82 $generated@@78)) (not true)) ($generated@@7 ($generated@@19 $generated@@3 ($generated@@29 $generated@@27 $generated@@30 ($generated@@29 $generated@@26 ($generated@@31 $generated@@27 $generated@@30) $generated@@79 $generated@@82) $generated@@80)))) $generated@@81))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27 $generated@@3 ($generated@@28 $generated@@78 $generated@@79 $generated@@80 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! ($generated@@84 $generated@@4 $generated@@86 $generated $generated@@85)
 :pattern ( ($generated@@84 $generated@@4 $generated@@86 $generated $generated@@85))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@87 (Int Int) Int)
(declare-fun $generated@@88 () Int)
(declare-fun $generated@@89 () Int)
(declare-fun $generated@@90 () Int)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@94 (Int Int) Bool)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 () Int)
(declare-fun $generated@@97 () Int)
(declare-fun $generated@@98 () Int)
(declare-fun $generated@@99 () Int)
(declare-fun $generated@@100 () T@U)
(declare-fun $generated@@101 () Int)
(declare-fun $generated@@102 () Int)
(declare-fun $generated@@103 () Int)
(declare-fun $generated@@104 () Int)
(declare-fun $generated@@105 () T@U)
(declare-fun $generated@@106 () Int)
(declare-fun $generated@@107 () Int)
(declare-fun $generated@@108 () Int)
(declare-fun $generated@@109 () T@U)
(declare-fun $generated@@110 () T@U)
(declare-fun $generated@@111 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 46) (let (($generated@@112 true))
(let (($generated@@113  (=> (= (ControlFlow 0 42) (- 0 41)) (= ($generated@@87 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@90)))))
(let (($generated@@114  (=> (and ($generated@@91 $generated@@92) ($generated@@93 $generated@@92)) (=> (and (and (and ($generated@@94 $generated@@89 $generated@@90) ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90))) (and ($generated@@94 $generated@@88 $generated@@89) ($generated@@94 ($generated@@87 $generated@@88 $generated@@89) $generated@@90))) (and (and (= ($generated@@87 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@90)) (= $generated@@95 $generated@@92)) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@88) $generated $generated@@92) ($generated@@84 $generated@@4 ($generated@@8 $generated@@89) $generated $generated@@92)))) (=> (and (and (and (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@92) ($generated@@94 $generated@@89 $generated@@90)) (and (= $generated@@96 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@84 $generated@@4 ($generated@@8 $generated@@96) $generated $generated@@92))) (and (and ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@84 $generated@@4 ($generated@@8 $generated@@88) $generated $generated@@92)) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@89) $generated $generated@@92) ($generated@@94 $generated@@88 $generated@@89)))) (and (and (and (= $generated@@97 ($generated@@87 $generated@@88 $generated@@89)) ($generated@@84 $generated@@4 ($generated@@8 $generated@@97) $generated $generated@@92)) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@92) ($generated@@94 ($generated@@87 $generated@@88 $generated@@89) $generated@@90))) (and (and ($generated@@94 $generated@@89 $generated@@90) ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90))) (and ($generated@@94 $generated@@88 $generated@@89) ($generated@@94 ($generated@@87 $generated@@88 $generated@@89) $generated@@90))))) (and (=> (= (ControlFlow 0 44) 42) $generated@@113) (=> (= (ControlFlow 0 44) 43) $generated@@112)))))))
(let (($generated@@115 true))
(let (($generated@@116  (=> (= (ControlFlow 0 37) (- 0 36)) (= ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@90) ($generated@@87 $generated@@98 $generated@@90)))))
(let (($generated@@117  (=> (= $generated@@98 ($generated@@87 $generated@@88 $generated@@89)) (=> (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@88) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@89) $generated $generated@@95)) (=> (and (and ($generated@@94 $generated@@88 $generated@@89) (= $generated@@99 ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@99) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95))) (=> (and (and (and ($generated@@94 ($generated@@87 $generated@@88 $generated@@89) $generated@@90) ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@95)) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95) ($generated@@94 $generated@@98 $generated@@90))) (and (and ($generated@@94 $generated@@88 $generated@@89) ($generated@@94 ($generated@@87 $generated@@88 $generated@@89) $generated@@90)) ($generated@@94 $generated@@98 $generated@@90))) (and (=> (= (ControlFlow 0 39) 37) $generated@@116) (=> (= (ControlFlow 0 39) 38) $generated@@115))))))))
(let (($generated@@118 true))
(let (($generated@@119  (=> (= (ControlFlow 0 31) (- 0 30)) (= ($generated@@87 $generated@@98 $generated@@98) $generated@@98))))
(let (($generated@@120  (=> (and (and (and (and ($generated@@91 $generated@@100) ($generated@@93 $generated@@100)) ($generated@@94 $generated@@98 $generated@@98)) (and (= ($generated@@87 $generated@@98 $generated@@98) $generated@@98) (= $generated@@95 $generated@@100))) (and (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@100) ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@100)) (and ($generated@@94 $generated@@98 $generated@@98) ($generated@@94 $generated@@98 $generated@@98)))) (and (=> (= (ControlFlow 0 33) 31) $generated@@119) (=> (= (ControlFlow 0 33) 32) $generated@@118)))))
(let (($generated@@121 true))
(let (($generated@@122  (=> (= (ControlFlow 0 26) (- 0 25)) (= ($generated@@87 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@87 $generated@@98 $generated@@90)))))
(let (($generated@@123  (=> (and (and (and (and (= ($generated@@87 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@90)) (= ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@90) ($generated@@87 $generated@@98 $generated@@90))) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@88) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@89) $generated $generated@@95))) (and (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95) ($generated@@94 $generated@@89 $generated@@90)) (and (= $generated@@101 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@84 $generated@@4 ($generated@@8 $generated@@101) $generated $generated@@95)))) (and (and (and ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@95)) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95) ($generated@@94 $generated@@98 $generated@@90))) (and (and ($generated@@94 $generated@@89 $generated@@90) ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90))) ($generated@@94 $generated@@98 $generated@@90)))) (and (=> (= (ControlFlow 0 28) 26) $generated@@122) (=> (= (ControlFlow 0 28) 27) $generated@@121)))))
(let (($generated@@124 true))
(let (($generated@@125  (=> (= (ControlFlow 0 21) (- 0 20)) (<= ($generated@@87 $generated@@98 $generated@@90) $generated@@98))))
(let (($generated@@126  (=> (and (<= ($generated@@87 $generated@@98 $generated@@90) ($generated@@87 $generated@@98 $generated@@98)) (= ($generated@@87 $generated@@98 $generated@@98) $generated@@98)) (=> (and (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95)) (and ($generated@@94 $generated@@98 $generated@@90) ($generated@@94 $generated@@98 $generated@@90))) (and (=> (= (ControlFlow 0 23) 21) $generated@@125) (=> (= (ControlFlow 0 23) 22) $generated@@124))))))
(let (($generated@@127  (=> (= (ControlFlow 0 17) (- 0 16)) (<= ($generated@@87 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)) $generated@@98))))
(let (($generated@@128  (=> ($generated@@84 $generated@@4 ($generated@@8 $generated@@88) $generated $generated@@95) (=> (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@89) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95)) (=> (and (and (and ($generated@@94 $generated@@89 $generated@@90) (= $generated@@102 ($generated@@87 $generated@@89 $generated@@90))) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@102) $generated $generated@@95) ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)))) (and (and ($generated@@94 $generated@@89 $generated@@90) ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90))) (and (<= ($generated@@87 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)) $generated@@98) (= (ControlFlow 0 18) 17)))) $generated@@127)))))
(let (($generated@@129  (=> (= ($generated@@87 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@87 $generated@@98 $generated@@90)) (=> (and (and (<= ($generated@@87 $generated@@98 $generated@@90) $generated@@98) ($generated@@84 $generated@@4 ($generated@@8 $generated@@88) $generated $generated@@95)) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@89) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95))) (=> (and (and (and ($generated@@94 $generated@@89 $generated@@90) (= $generated@@103 ($generated@@87 $generated@@89 $generated@@90))) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@103) $generated $generated@@95) ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)))) (and (and ($generated@@94 $generated@@89 $generated@@90) ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90))) (= (ControlFlow 0 15) (- 0 14)))) (<= ($generated@@87 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)) $generated@@98))))))
(let (($generated@@130 true))
(let (($generated@@131  (=> (and (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95)) (and ($generated@@94 $generated@@98 $generated@@90) ($generated@@94 $generated@@98 $generated@@90))) (and (and (=> (= (ControlFlow 0 19) 13) $generated@@130) (=> (= (ControlFlow 0 19) 15) $generated@@129)) (=> (= (ControlFlow 0 19) 18) $generated@@128)))))
(let (($generated@@132 true))
(let (($generated@@133  (=> (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@88) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@89) $generated $generated@@95)) (=> (and (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95) ($generated@@94 $generated@@89 $generated@@90)) (and (= $generated@@104 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@84 $generated@@4 ($generated@@8 $generated@@104) $generated $generated@@95))) (=> (and (and (and ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@95)) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95) ($generated@@94 $generated@@98 $generated@@90))) (and (and ($generated@@94 $generated@@89 $generated@@90) ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90))) ($generated@@94 $generated@@98 $generated@@90))) (and (and (=> (= (ControlFlow 0 24) 12) $generated@@132) (=> (= (ControlFlow 0 24) 23) $generated@@126)) (=> (= (ControlFlow 0 24) 19) $generated@@131)))))))
(let (($generated@@134 true))
(let (($generated@@135  (=> (and (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@95)) (and ($generated@@94 $generated@@98 $generated@@98) ($generated@@94 $generated@@98 $generated@@98))) (and (and (=> (= (ControlFlow 0 29) 11) $generated@@134) (=> (= (ControlFlow 0 29) 28) $generated@@123)) (=> (= (ControlFlow 0 29) 24) $generated@@133)))))
(let (($generated@@136 true))
(let (($generated@@137  (=> (and (and (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95)) (and ($generated@@94 $generated@@98 $generated@@90) ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@95))) (and (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@95) ($generated@@94 $generated@@98 $generated@@98)) (and ($generated@@94 $generated@@98 $generated@@90) ($generated@@94 $generated@@98 $generated@@98)))) (and (and (=> (= (ControlFlow 0 34) 10) $generated@@136) (=> (= (ControlFlow 0 34) 33) $generated@@120)) (=> (= (ControlFlow 0 34) 29) $generated@@135)))))
(let (($generated@@138 true))
(let (($generated@@139  (=> (= (ControlFlow 0 6) (- 0 5)) (<= ($generated@@87 $generated@@98 $generated@@90) ($generated@@87 $generated@@98 $generated@@98)))))
(let (($generated@@140  (=> (<= $generated@@90 $generated@@98) (and (=> (= (ControlFlow 0 8) (- 0 9)) (<= $generated@@90 $generated@@98)) (=> (<= $generated@@90 $generated@@98) (=> (and (and (and (and ($generated@@91 $generated@@105) ($generated@@93 $generated@@105)) (forall (($generated@@141 Int) ) (!  (and ($generated@@94 $generated@@141 $generated@@90) ($generated@@94 $generated@@141 $generated@@98))
 :pattern ( ($generated@@87 $generated@@141 $generated@@98))
 :pattern ( ($generated@@87 $generated@@141 $generated@@90))
))) (and (forall (($generated@@142 Int) ) (! (<= ($generated@@87 $generated@@142 $generated@@90) ($generated@@87 $generated@@142 $generated@@98))
 :pattern ( ($generated@@87 $generated@@142 $generated@@98))
 :pattern ( ($generated@@87 $generated@@142 $generated@@90))
)) (= $generated@@95 $generated@@105))) (and (and (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@105) ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@105)) (and ($generated@@94 $generated@@98 $generated@@90) ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@105))) (and (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@105) ($generated@@94 $generated@@98 $generated@@98)) (and ($generated@@94 $generated@@98 $generated@@90) ($generated@@94 $generated@@98 $generated@@98))))) (and (=> (= (ControlFlow 0 8) 6) $generated@@139) (=> (= (ControlFlow 0 8) 7) $generated@@138))))))))
(let (($generated@@143  (=> (and (<= $generated@@90 $generated@@98) (= (ControlFlow 0 4) (- 0 3))) (<= $generated@@90 $generated@@98))))
(let (($generated@@144 true))
(let (($generated@@145  (=> (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@88) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@89) $generated $generated@@95)) (=> (and (and ($generated@@94 $generated@@88 $generated@@89) (= $generated@@106 ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@106) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95))) (=> (and (and (and ($generated@@94 ($generated@@87 $generated@@88 $generated@@89) $generated@@90) ($generated@@84 $generated@@4 ($generated@@8 $generated@@98) $generated $generated@@95)) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95) ($generated@@94 $generated@@98 $generated@@90))) (and (and ($generated@@94 $generated@@88 $generated@@89) ($generated@@94 ($generated@@87 $generated@@88 $generated@@89) $generated@@90)) ($generated@@94 $generated@@98 $generated@@90))) (and (and (and (=> (= (ControlFlow 0 35) 2) $generated@@144) (=> (= (ControlFlow 0 35) 34) $generated@@137)) (=> (= (ControlFlow 0 35) 4) $generated@@143)) (=> (= (ControlFlow 0 35) 8) $generated@@140)))))))
(let (($generated@@146 true))
(let (($generated@@147  (=> (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@88) $generated $generated@@95) ($generated@@84 $generated@@4 ($generated@@8 $generated@@89) $generated $generated@@95)) (=> (and (and (and (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95) ($generated@@94 $generated@@89 $generated@@90)) (and (= $generated@@107 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@84 $generated@@4 ($generated@@8 $generated@@107) $generated $generated@@95))) (and (and ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90)) ($generated@@84 $generated@@4 ($generated@@8 $generated@@88) $generated $generated@@95)) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@89) $generated $generated@@95) ($generated@@94 $generated@@88 $generated@@89)))) (and (and (and (= $generated@@108 ($generated@@87 $generated@@88 $generated@@89)) ($generated@@84 $generated@@4 ($generated@@8 $generated@@108) $generated $generated@@95)) (and ($generated@@84 $generated@@4 ($generated@@8 $generated@@90) $generated $generated@@95) ($generated@@94 ($generated@@87 $generated@@88 $generated@@89) $generated@@90))) (and (and ($generated@@94 $generated@@89 $generated@@90) ($generated@@94 $generated@@88 ($generated@@87 $generated@@89 $generated@@90))) (and ($generated@@94 $generated@@88 $generated@@89) ($generated@@94 ($generated@@87 $generated@@88 $generated@@89) $generated@@90))))) (and (and (=> (= (ControlFlow 0 40) 1) $generated@@146) (=> (= (ControlFlow 0 40) 39) $generated@@117)) (=> (= (ControlFlow 0 40) 35) $generated@@145))))))
(let (($generated@@148  (=> (= $generated@@109 ($generated@@28 $generated@@110 $generated@@95 $generated@@1 false)) (and (=> (= (ControlFlow 0 45) 44) $generated@@114) (=> (= (ControlFlow 0 45) 40) $generated@@147)))))
(let (($generated@@149  (=> (and (and ($generated@@91 $generated@@95) ($generated@@93 $generated@@95)) (and (= 2 $generated@@111) (= (ControlFlow 0 46) 45))) $generated@@148)))
$generated@@149)))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
