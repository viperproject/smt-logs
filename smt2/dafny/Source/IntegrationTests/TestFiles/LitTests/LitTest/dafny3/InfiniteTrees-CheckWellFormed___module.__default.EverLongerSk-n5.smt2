(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (Int) T@U)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 (T@U T@U) T@U)
(declare-fun $generated@@43 (T@U) Int)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@T T@U T@U) Bool)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@64 () Int)
(declare-fun $generated@@65 (T@U T@U Int) Bool)
(declare-fun $generated@@66 (Int) Int)
(declare-fun $generated@@67 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@72 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U Int) T@U)
(declare-fun $generated@@83 (Int) Bool)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U Int) T@U)
(declare-fun $generated@@91 (T@U T@U Int) Bool)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@97 () T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U T@U Int) Bool)
(declare-fun $generated@@107 (T@U) Bool)
(declare-fun $generated@@108 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@123 (T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U) Bool)
(declare-fun $generated@@129 (T@U) Bool)
(declare-fun $generated@@132 (T@T T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@169 (T@U Int) T@U)
(declare-fun $generated@@170 (Int) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@270 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@271 () T@T)
(declare-fun $generated@@272 () T@T)
(declare-fun $generated@@273 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@274 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@T)
(declare-fun $generated@@276 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@277 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@340 (T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (or (not (= $generated@@30 ($generated@@27 0))) (not true)) (= ($generated@@25 $generated@@28 $generated@@29 $generated@@30 ($generated@@26 $generated@@31) $generated@@32 $generated@@33) ($generated@@25 $generated@@28 $generated@@29 $generated@@30 $generated@@31 $generated@@32 $generated@@33)))
 :pattern ( ($generated@@25 $generated@@28 $generated@@29 $generated@@30 ($generated@@26 $generated@@31) $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (and ($generated@@34 $generated@@35 $generated@@36) ($generated@@34 $generated@@36 $generated@@37)) ($generated@@34 $generated@@35 $generated@@37))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36) ($generated@@34 $generated@@36 $generated@@37))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36) ($generated@@34 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! ($generated@@38 $generated@@11 $generated@@40 $generated@@39 $generated@@41)
 :pattern ( ($generated@@38 $generated@@11 $generated@@40 $generated@@39 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 Int) ($generated@@46 Int) ) (!  (=> (and (and (<= 0 $generated@@45) (<= 0 $generated@@46)) (<= (+ $generated@@45 $generated@@46) ($generated@@43 $generated@@44))) (= ($generated@@42 ($generated@@42 $generated@@44 ($generated@@27 $generated@@45)) ($generated@@27 $generated@@46)) ($generated@@42 $generated@@44 ($generated@@27 (+ $generated@@45 $generated@@46)))))
 :pattern ( ($generated@@42 ($generated@@42 $generated@@44 ($generated@@27 $generated@@45)) ($generated@@27 $generated@@46)))
)))
(assert (= ($generated@@47 $generated@@48) $generated@@3))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (= $generated@@53 $generated@@54) ($generated@@25 $generated@@49 $generated@@50 $generated@@51 ($generated@@26 $generated@@52) $generated@@53 $generated@@54))
 :pattern ( ($generated@@25 $generated@@49 $generated@@50 $generated@@51 ($generated@@26 $generated@@52) $generated@@53 $generated@@54))
)))
(assert (= ($generated@@9 $generated@@57) 3))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@56 $generated@@57 $generated@@59 $generated@@58) ($generated@@55 $generated@@59))
 :pattern ( ($generated@@55 $generated@@59) ($generated@@56 $generated@@57 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated@@61 $generated@@63) ($generated@@38 $generated@@57 $generated@@48 ($generated@@60 $generated@@62) $generated@@63))
 :pattern ( ($generated@@38 $generated@@57 $generated@@48 ($generated@@60 $generated@@62) $generated@@63))
)))
(assert  (=> (<= 3 $generated@@64) (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 Int) ) (!  (=> (and (and ($generated@@56 $generated@@57 $generated@@69 ($generated@@60 $generated@@58)) (<= ($generated@@66 0) $generated@@70)) ($generated@@65 ($generated@@26 $generated@@68) $generated@@69 $generated@@70)) (forall (($generated@@71 T@U) ) (! ($generated@@67 ($generated@@26 $generated@@68) $generated@@71 $generated@@69 $generated@@70)
 :pattern ( ($generated@@67 ($generated@@26 $generated@@68) $generated@@71 $generated@@69 $generated@@70))
)))
 :pattern ( ($generated@@65 ($generated@@26 $generated@@68) $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@72 $generated@@73 $generated@@74 ($generated@@26 $generated@@75) $generated@@76 $generated@@77) (= $generated@@76 $generated@@77))
 :pattern ( ($generated@@72 $generated@@73 $generated@@74 ($generated@@26 $generated@@75) $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (! ($generated@@56 $generated@@57 $generated@@48 ($generated@@60 $generated@@78))
 :pattern ( ($generated@@56 $generated@@57 $generated@@48 ($generated@@60 $generated@@78)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@79 $generated@@80 $generated@@81) (= $generated@@80 $generated@@81))
 :pattern ( ($generated@@79 $generated@@80 $generated@@81))
)))
(assert  (=> (<= 4 $generated@@64) (forall (($generated@@84 T@U) ($generated@@85 Int) ) (!  (=> (or ($generated@@83 $generated@@85) (and (< 4 $generated@@64) (<= ($generated@@66 0) $generated@@85))) ($generated@@56 $generated@@57 ($generated@@82 $generated@@84 $generated@@85) ($generated@@60 $generated@@58)))
 :pattern ( ($generated@@82 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@86 Int) ) (! (= ($generated@@66 $generated@@86) $generated@@86)
 :pattern ( ($generated@@66 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@87 $generated@@89 $generated@@88))
)))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ) (!  (=> (or ($generated@@91 $generated@@92 $generated@@94 $generated@@95) (and (< 1 $generated@@64) (and ($generated@@56 $generated@@57 $generated@@94 ($generated@@60 $generated@@92)) (<= ($generated@@66 0) $generated@@95)))) ($generated@@56 $generated@@57 ($generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@95) ($generated@@60 $generated@@92)))
 :pattern ( ($generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@95))
))))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 Int) ) (!  (=> (or ($generated@@91 $generated@@99 $generated@@101 ($generated@@66 $generated@@102)) (and (< 1 $generated@@64) (and ($generated@@56 $generated@@57 $generated@@101 ($generated@@60 $generated@@99)) (<= ($generated@@66 0) $generated@@102)))) (and (=> (or (not (= ($generated@@66 $generated@@102) ($generated@@66 0))) (not true)) (and ($generated@@91 $generated@@99 $generated@@101 ($generated@@66 (- $generated@@102 1))) (let (($generated@@103 ($generated@@90 $generated@@99 ($generated@@26 $generated@@100) $generated@@101 ($generated@@66 (- $generated@@102 1)))))
($generated@@96 $generated@@103)))) (= ($generated@@90 $generated@@99 ($generated@@26 $generated@@100) $generated@@101 ($generated@@66 $generated@@102)) (ite (= ($generated@@66 $generated@@102) ($generated@@66 0)) $generated@@101 (let (($generated@@104 ($generated@@90 $generated@@99 ($generated@@26 $generated@@100) $generated@@101 ($generated@@66 (- $generated@@102 1)))))
(ite ($generated@@72 $generated@@99 $generated@@99 ($generated@@26 ($generated@@26 $generated@@97)) $generated@@104 $generated@@48) $generated@@104 ($generated@@98 $generated@@104)))))))
 :weight 3
 :pattern ( ($generated@@90 $generated@@99 ($generated@@26 $generated@@100) $generated@@101 ($generated@@66 $generated@@102)))
))))
(assert (= ($generated@@9 $generated@@105) 4))
(assert  (=> (<= 3 $generated@@64) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 Int) ) (!  (=> (or ($generated@@106 ($generated@@87 $generated@@105 $generated@@112) ($generated@@87 $generated@@57 $generated@@113) ($generated@@66 $generated@@114)) (and (< 3 $generated@@64) (and ($generated@@56 $generated@@57 $generated@@113 ($generated@@60 $generated@@58)) (<= ($generated@@66 0) $generated@@114)))) (and (and (=> (< 0 ($generated@@43 $generated@@112)) (=> (not ($generated@@14 ($generated@@87 $generated@@10 ($generated@@13 ($generated@@107 ($generated@@87 $generated@@57 $generated@@113)))))) (let (($generated@@115 ($generated@@87 $generated@@57 ($generated@@98 ($generated@@87 $generated@@57 $generated@@113)))))
(let (($generated@@116 ($generated@@87 $generated@@57 ($generated@@108 $generated@@57 ($generated@@109 ($generated@@87 $generated@@57 $generated@@113))))))
 (=> (<= ($generated@@66 1) ($generated@@66 $generated@@114)) (and (and ($generated@@55 $generated@@116) ($generated@@106 ($generated@@42 $generated@@112 ($generated@@27 1)) ($generated@@110 $generated@@116) ($generated@@66 (- $generated@@114 1)))) (=> ($generated@@67 ($generated@@26 $generated@@111) ($generated@@42 $generated@@112 ($generated@@27 1)) ($generated@@110 $generated@@116) ($generated@@66 (- $generated@@114 1))) ($generated@@106 ($generated@@42 $generated@@112 ($generated@@27 1)) $generated@@115 ($generated@@66 $generated@@114))))))))) (=> (=> (< 0 ($generated@@43 $generated@@112)) (ite ($generated@@107 ($generated@@87 $generated@@57 $generated@@113)) true (let (($generated@@117 ($generated@@87 $generated@@57 ($generated@@98 ($generated@@87 $generated@@57 $generated@@113)))))
(let (($generated@@118 ($generated@@87 $generated@@57 ($generated@@108 $generated@@57 ($generated@@109 ($generated@@87 $generated@@57 $generated@@113))))))
 (and (and (<= ($generated@@66 1) ($generated@@66 $generated@@114)) ($generated@@67 ($generated@@26 $generated@@111) ($generated@@42 $generated@@112 ($generated@@27 1)) ($generated@@87 $generated@@57 ($generated@@110 $generated@@118)) ($generated@@66 (- $generated@@114 1)))) ($generated@@67 ($generated@@26 $generated@@111) ($generated@@42 $generated@@112 ($generated@@27 1)) $generated@@117 ($generated@@66 $generated@@114))))))) (=> (= ($generated@@66 0) ($generated@@43 $generated@@112)) (forall (($generated@@119 T@U) ) (!  (=> ($generated@@34 $generated@@119 $generated@@112) ($generated@@106 $generated@@119 $generated@@113 $generated@@114))
 :pattern ( ($generated@@67 ($generated@@26 $generated@@111) $generated@@119 $generated@@113 $generated@@114))
))))) (= ($generated@@67 ($generated@@26 $generated@@111) ($generated@@87 $generated@@105 $generated@@112) ($generated@@87 $generated@@57 $generated@@113) ($generated@@66 $generated@@114))  (and (=> (< 0 ($generated@@43 $generated@@112)) (ite ($generated@@107 ($generated@@87 $generated@@57 $generated@@113)) true (let (($generated@@120 ($generated@@87 $generated@@57 ($generated@@98 ($generated@@87 $generated@@57 $generated@@113)))))
(let (($generated@@121 ($generated@@87 $generated@@57 ($generated@@108 $generated@@57 ($generated@@109 ($generated@@87 $generated@@57 $generated@@113))))))
 (and (and (<= ($generated@@66 1) ($generated@@66 $generated@@114)) ($generated@@67 ($generated@@26 $generated@@111) ($generated@@42 $generated@@112 ($generated@@27 1)) ($generated@@87 $generated@@57 ($generated@@110 $generated@@121)) ($generated@@66 (- $generated@@114 1)))) ($generated@@67 ($generated@@26 $generated@@111) ($generated@@42 $generated@@112 ($generated@@27 1)) $generated@@120 ($generated@@66 $generated@@114))))))) (=> (= ($generated@@66 0) ($generated@@43 $generated@@112)) (forall (($generated@@122 T@U) ) (!  (=> ($generated@@34 $generated@@122 $generated@@112) ($generated@@67 ($generated@@26 $generated@@111) $generated@@122 $generated@@113 $generated@@114))
 :pattern ( ($generated@@67 ($generated@@26 $generated@@111) $generated@@122 $generated@@113 $generated@@114))
)))))))
 :weight 3
 :pattern ( ($generated@@67 ($generated@@26 $generated@@111) ($generated@@87 $generated@@105 $generated@@112) ($generated@@87 $generated@@57 $generated@@113) ($generated@@66 $generated@@114)))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@56 $generated@@57 ($generated@@123 $generated@@126 $generated@@127) ($generated@@60 $generated@@125))  (and ($generated@@124 $generated@@126 $generated@@125) ($generated@@56 $generated@@57 $generated@@127 ($generated@@60 $generated@@125))))
 :pattern ( ($generated@@56 $generated@@57 ($generated@@123 $generated@@126 $generated@@127) ($generated@@60 $generated@@125)))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@107 $generated@@128) (= ($generated@@47 $generated@@128) $generated@@3))
 :pattern ( ($generated@@107 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@129 $generated@@130) (= ($generated@@47 $generated@@130) $generated@@4))
 :pattern ( ($generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@55 $generated@@131) (= ($generated@@47 $generated@@131) $generated@@5))
 :pattern ( ($generated@@55 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@132 $generated@@134 ($generated@@108 $generated@@134 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@108 $generated@@134 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> ($generated@@129 $generated@@135) (exists (($generated@@136 T@U) ($generated@@137 T@U) ) (= $generated@@135 ($generated@@123 $generated@@136 $generated@@137))))
 :pattern ( ($generated@@129 $generated@@135))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@107 $generated@@138) (= $generated@@138 $generated@@48))
 :pattern ( ($generated@@107 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and ($generated@@56 $generated@@57 $generated@@143 ($generated@@60 $generated@@139)) ($generated@@56 $generated@@57 $generated@@144 ($generated@@60 $generated@@140))) (= ($generated@@25 $generated@@139 $generated@@140 $generated@@141 ($generated@@26 $generated@@142) $generated@@143 $generated@@144)  (and (=> (< 0 ($generated@@43 $generated@@141)) (or (and ($generated@@107 $generated@@143) ($generated@@107 $generated@@144)) (and (and ($generated@@129 $generated@@143) ($generated@@129 $generated@@144)) (=> (and ($generated@@129 $generated@@143) ($generated@@129 $generated@@144)) (and (= ($generated@@109 $generated@@143) ($generated@@109 $generated@@144)) ($generated@@25 $generated@@139 $generated@@140 ($generated@@42 $generated@@141 ($generated@@27 1)) $generated@@142 ($generated@@98 $generated@@143) ($generated@@98 $generated@@144))))))) (=> (and (or (not (= $generated@@141 ($generated@@27 0))) (not true)) (= ($generated@@43 $generated@@141) 0)) ($generated@@72 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144)))))
 :pattern ( ($generated@@25 $generated@@139 $generated@@140 $generated@@141 ($generated@@26 $generated@@142) $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> ($generated@@55 $generated@@146) (exists (($generated@@147 T@U) ) (= $generated@@146 ($generated@@145 $generated@@147))))
 :pattern ( ($generated@@55 $generated@@146))
)))
(assert  (=> (<= 3 $generated@@64) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 Int) ) (!  (=> (and (and ($generated@@56 $generated@@57 $generated@@149 ($generated@@60 $generated@@58)) (<= ($generated@@66 0) $generated@@150)) (forall (($generated@@151 T@U) ) (! ($generated@@67 ($generated@@26 $generated@@148) $generated@@151 $generated@@149 $generated@@150)
 :pattern ( ($generated@@67 ($generated@@26 $generated@@148) $generated@@151 $generated@@149 $generated@@150))
))) ($generated@@65 ($generated@@26 $generated@@148) $generated@@149 $generated@@150))
 :pattern ( ($generated@@65 ($generated@@26 $generated@@148) $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@79 $generated@@152 $generated@@153) (= ($generated@@110 $generated@@152) ($generated@@110 $generated@@153)))
 :pattern ( ($generated@@79 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@56 $generated@@11 $generated@@154 $generated@@39) (<= ($generated@@66 0) ($generated@@16 $generated@@154)))
 :pattern ( ($generated@@56 $generated@@11 $generated@@154 $generated@@39))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Int) ) (! (= ($generated@@65 ($generated@@26 $generated@@155) $generated@@156 $generated@@157) ($generated@@65 $generated@@155 $generated@@156 $generated@@157))
 :pattern ( ($generated@@65 ($generated@@26 $generated@@155) $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@158 ($generated@@132 $generated@@162 $generated@@159) $generated@@160 $generated@@161) ($generated@@38 $generated@@162 $generated@@159 $generated@@160 $generated@@161))
 :pattern ( ($generated@@158 ($generated@@132 $generated@@162 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@165 T@U) ) (!  (and (= ($generated@@163 ($generated@@60 $generated@@165)) $generated@@1) (= ($generated@@164 ($generated@@60 $generated@@165)) $generated@@7))
 :pattern ( ($generated@@60 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and ($generated@@166 $generated@@168) (<= ($generated@@43 $generated@@168) ($generated@@43 $generated@@167))) (and (= ($generated@@166 ($generated@@42 $generated@@167 $generated@@168)) ($generated@@166 $generated@@167)) (= ($generated@@43 ($generated@@42 $generated@@167 $generated@@168)) (- ($generated@@43 $generated@@167) ($generated@@43 $generated@@168)))))
 :pattern ( ($generated@@42 $generated@@167 $generated@@168))
)))
(assert  (=> (<= 3 $generated@@64) (forall (($generated@@171 T@U) ($generated@@172 Int) ) (!  (=> (or ($generated@@170 $generated@@172) (and (< 3 $generated@@64) (<= ($generated@@66 0) $generated@@172))) (and (=> (or (not (= $generated@@172 ($generated@@66 0))) (not true)) ($generated@@170 (- $generated@@172 1))) (= ($generated@@169 ($generated@@26 $generated@@171) $generated@@172) (ite (= $generated@@172 ($generated@@66 0)) ($generated@@145 ($generated@@87 $generated@@57 $generated@@48)) ($generated@@145 ($generated@@123 ($generated@@132 $generated@@57 ($generated@@169 $generated@@171 (- $generated@@172 1))) ($generated@@87 $generated@@57 $generated@@48)))))))
 :pattern ( ($generated@@169 ($generated@@26 $generated@@171) $generated@@172))
))))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Int) ) (!  (=> (or ($generated@@91 $generated@@173 ($generated@@87 $generated@@57 $generated@@175) ($generated@@66 $generated@@176)) (and (< 1 $generated@@64) (and ($generated@@56 $generated@@57 $generated@@175 ($generated@@60 $generated@@173)) (<= ($generated@@66 0) $generated@@176)))) (and (=> (or (not (= ($generated@@66 $generated@@176) ($generated@@66 0))) (not true)) (and ($generated@@91 $generated@@173 ($generated@@87 $generated@@57 $generated@@175) ($generated@@66 (- $generated@@176 1))) (let (($generated@@177 ($generated@@87 $generated@@57 ($generated@@90 $generated@@173 ($generated@@26 $generated@@174) ($generated@@87 $generated@@57 $generated@@175) ($generated@@66 (- $generated@@176 1))))))
($generated@@96 $generated@@177)))) (= ($generated@@90 $generated@@173 ($generated@@26 $generated@@174) ($generated@@87 $generated@@57 $generated@@175) ($generated@@66 $generated@@176)) (ite (= ($generated@@66 $generated@@176) ($generated@@66 0)) $generated@@175 (let (($generated@@178 ($generated@@87 $generated@@57 ($generated@@90 $generated@@173 ($generated@@26 $generated@@174) ($generated@@87 $generated@@57 $generated@@175) ($generated@@66 (- $generated@@176 1))))))
(ite ($generated@@72 $generated@@173 $generated@@173 ($generated@@26 ($generated@@26 $generated@@97)) $generated@@178 $generated@@48) $generated@@178 ($generated@@98 $generated@@178)))))))
 :weight 3
 :pattern ( ($generated@@90 $generated@@173 ($generated@@26 $generated@@174) ($generated@@87 $generated@@57 $generated@@175) ($generated@@66 $generated@@176)))
))))
(assert (forall (($generated@@179 Int) ) (!  (=> (<= 0 $generated@@179) (and ($generated@@166 ($generated@@27 $generated@@179)) (= ($generated@@43 ($generated@@27 $generated@@179)) $generated@@179)))
 :pattern ( ($generated@@27 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> ($generated@@124 $generated@@180 $generated@@39) (and (= ($generated@@132 $generated@@11 ($generated@@108 $generated@@11 $generated@@180)) $generated@@180) ($generated@@56 $generated@@11 ($generated@@108 $generated@@11 $generated@@180) $generated@@39)))
 :pattern ( ($generated@@124 $generated@@180 $generated@@39))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> ($generated@@124 $generated@@181 $generated@@58) (and (= ($generated@@132 $generated@@57 ($generated@@108 $generated@@57 $generated@@181)) $generated@@181) ($generated@@56 $generated@@57 ($generated@@108 $generated@@57 $generated@@181) $generated@@58)))
 :pattern ( ($generated@@124 $generated@@181 $generated@@58))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and ($generated@@56 $generated@@57 $generated@@185 ($generated@@60 $generated@@182)) ($generated@@56 $generated@@57 $generated@@186 ($generated@@60 $generated@@183))) (= ($generated@@72 $generated@@182 $generated@@183 ($generated@@26 $generated@@184) $generated@@185 $generated@@186)  (or (and ($generated@@107 $generated@@185) ($generated@@107 $generated@@186)) (and (and ($generated@@129 $generated@@185) ($generated@@129 $generated@@186)) (=> (and ($generated@@129 $generated@@185) ($generated@@129 $generated@@186)) (and (= ($generated@@109 $generated@@185) ($generated@@109 $generated@@186)) ($generated@@72 $generated@@182 $generated@@183 $generated@@184 ($generated@@98 $generated@@185) ($generated@@98 $generated@@186))))))))
 :pattern ( ($generated@@72 $generated@@182 $generated@@183 ($generated@@26 $generated@@184) $generated@@185 $generated@@186))
)))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Int) ) (!  (=> (and (or ($generated@@91 $generated@@188 $generated@@190 $generated@@191) (and (< 1 $generated@@64) (and (and ($generated@@56 $generated@@57 $generated@@190 ($generated@@60 $generated@@188)) ($generated@@38 $generated@@57 $generated@@190 ($generated@@60 $generated@@188) $generated@@187)) (<= ($generated@@66 0) $generated@@191)))) ($generated@@61 $generated@@187)) ($generated@@38 $generated@@57 ($generated@@90 $generated@@188 $generated@@189 $generated@@190 $generated@@191) ($generated@@60 $generated@@188) $generated@@187))
 :pattern ( ($generated@@38 $generated@@57 ($generated@@90 $generated@@188 $generated@@189 $generated@@190 $generated@@191) ($generated@@60 $generated@@188) $generated@@187))
))))
(assert (forall (($generated@@192 T@U) ) (!  (=> ($generated@@96 $generated@@192) (or ($generated@@107 $generated@@192) ($generated@@129 $generated@@192)))
 :pattern ( ($generated@@96 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (or ($generated@@34 $generated@@193 $generated@@194) (= $generated@@193 $generated@@194)) ($generated@@34 $generated@@194 $generated@@193))
 :pattern ( ($generated@@34 $generated@@193 $generated@@194) ($generated@@34 $generated@@194 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@56 $generated@@57 ($generated@@145 $generated@@195) $generated@@58) ($generated@@56 $generated@@57 $generated@@195 ($generated@@60 $generated@@58)))
 :pattern ( ($generated@@56 $generated@@57 ($generated@@145 $generated@@195) $generated@@58))
)))
(assert  (=> (<= 3 $generated@@64) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (or ($generated@@106 ($generated@@87 $generated@@105 $generated@@197) $generated@@198 $generated@@199) (and (< 3 $generated@@64) (and ($generated@@56 $generated@@57 $generated@@198 ($generated@@60 $generated@@58)) (<= ($generated@@66 0) $generated@@199)))) (and (and (=> (< 0 ($generated@@43 $generated@@197)) (=> (not ($generated@@107 $generated@@198)) (let (($generated@@200 ($generated@@98 $generated@@198)))
(let (($generated@@201 ($generated@@108 $generated@@57 ($generated@@109 $generated@@198))))
 (=> (<= ($generated@@66 1) $generated@@199) (and (and ($generated@@55 $generated@@201) ($generated@@106 ($generated@@42 $generated@@197 ($generated@@27 1)) ($generated@@110 $generated@@201) (- $generated@@199 1))) (=> ($generated@@67 ($generated@@26 $generated@@196) ($generated@@42 $generated@@197 ($generated@@27 1)) ($generated@@110 $generated@@201) (- $generated@@199 1)) ($generated@@106 ($generated@@42 $generated@@197 ($generated@@27 1)) $generated@@200 $generated@@199)))))))) (=> (=> (< 0 ($generated@@43 $generated@@197)) (ite ($generated@@107 $generated@@198) true (let (($generated@@202 ($generated@@98 $generated@@198)))
(let (($generated@@203 ($generated@@108 $generated@@57 ($generated@@109 $generated@@198))))
 (and (and (<= ($generated@@66 1) $generated@@199) ($generated@@67 ($generated@@26 $generated@@196) ($generated@@42 $generated@@197 ($generated@@27 1)) ($generated@@110 $generated@@203) (- $generated@@199 1))) ($generated@@67 ($generated@@26 $generated@@196) ($generated@@42 $generated@@197 ($generated@@27 1)) $generated@@202 $generated@@199)))))) (=> (= ($generated@@66 0) ($generated@@43 $generated@@197)) (forall (($generated@@204 T@U) ) (!  (=> ($generated@@34 $generated@@204 $generated@@197) ($generated@@106 $generated@@204 $generated@@198 $generated@@199))
 :pattern ( ($generated@@67 ($generated@@26 $generated@@196) $generated@@204 $generated@@198 $generated@@199))
))))) (= ($generated@@67 ($generated@@26 $generated@@196) ($generated@@87 $generated@@105 $generated@@197) $generated@@198 $generated@@199)  (and (=> (< 0 ($generated@@43 $generated@@197)) (ite ($generated@@107 $generated@@198) true (let (($generated@@205 ($generated@@98 $generated@@198)))
(let (($generated@@206 ($generated@@108 $generated@@57 ($generated@@109 $generated@@198))))
 (and (and (<= ($generated@@66 1) $generated@@199) ($generated@@67 ($generated@@26 $generated@@196) ($generated@@42 $generated@@197 ($generated@@27 1)) ($generated@@110 $generated@@206) (- $generated@@199 1))) ($generated@@67 ($generated@@26 $generated@@196) ($generated@@42 $generated@@197 ($generated@@27 1)) $generated@@205 $generated@@199)))))) (=> (= ($generated@@66 0) ($generated@@43 $generated@@197)) (forall (($generated@@207 T@U) ) (!  (=> ($generated@@34 $generated@@207 $generated@@197) ($generated@@67 ($generated@@26 $generated@@196) $generated@@207 $generated@@198 $generated@@199))
 :pattern ( ($generated@@67 ($generated@@26 $generated@@196) $generated@@207 $generated@@198 $generated@@199))
)))))))
 :weight 3
 :pattern ( ($generated@@67 ($generated@@26 $generated@@196) ($generated@@87 $generated@@105 $generated@@197) $generated@@198 $generated@@199))
))))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Int) ) (!  (=> (or ($generated@@91 $generated@@208 $generated@@210 $generated@@211) (and (< 1 $generated@@64) (and ($generated@@56 $generated@@57 $generated@@210 ($generated@@60 $generated@@208)) (<= ($generated@@66 0) $generated@@211)))) (and (=> (or (not (= $generated@@211 ($generated@@66 0))) (not true)) (and ($generated@@91 $generated@@208 $generated@@210 (- $generated@@211 1)) (let (($generated@@212 ($generated@@90 $generated@@208 $generated@@209 $generated@@210 (- $generated@@211 1))))
($generated@@96 $generated@@212)))) (= ($generated@@90 $generated@@208 ($generated@@26 $generated@@209) $generated@@210 $generated@@211) (ite (= $generated@@211 ($generated@@66 0)) $generated@@210 (let (($generated@@213 ($generated@@90 $generated@@208 $generated@@209 $generated@@210 (- $generated@@211 1))))
(ite ($generated@@72 $generated@@208 $generated@@208 ($generated@@26 ($generated@@26 $generated@@97)) $generated@@213 $generated@@48) $generated@@213 ($generated@@98 $generated@@213)))))))
 :pattern ( ($generated@@90 $generated@@208 ($generated@@26 $generated@@209) $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> ($generated@@56 $generated@@57 $generated@@215 ($generated@@60 $generated@@214)) (or ($generated@@107 $generated@@215) ($generated@@129 $generated@@215)))
 :pattern ( ($generated@@129 $generated@@215) ($generated@@56 $generated@@57 $generated@@215 ($generated@@60 $generated@@214)))
 :pattern ( ($generated@@107 $generated@@215) ($generated@@56 $generated@@57 $generated@@215 ($generated@@60 $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@T) ) (! (= ($generated@@124 ($generated@@132 $generated@@218 $generated@@216) $generated@@217) ($generated@@56 $generated@@218 $generated@@216 $generated@@217))
 :pattern ( ($generated@@124 ($generated@@132 $generated@@218 $generated@@216) $generated@@217))
)))
(assert  (=> (<= 3 $generated@@64) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Int) ) (!  (=> (or ($generated@@106 $generated@@220 $generated@@221 $generated@@222) (and (< 3 $generated@@64) (and ($generated@@56 $generated@@57 $generated@@221 ($generated@@60 $generated@@58)) (<= ($generated@@66 0) $generated@@222)))) (and (and (=> (< 0 ($generated@@43 $generated@@220)) (=> (not ($generated@@107 $generated@@221)) (let (($generated@@223 ($generated@@98 $generated@@221)))
(let (($generated@@224 ($generated@@108 $generated@@57 ($generated@@109 $generated@@221))))
 (=> (<= ($generated@@66 1) $generated@@222) (and (and ($generated@@55 $generated@@224) ($generated@@106 ($generated@@42 $generated@@220 ($generated@@27 1)) ($generated@@110 $generated@@224) (- $generated@@222 1))) (=> ($generated@@67 $generated@@219 ($generated@@42 $generated@@220 ($generated@@27 1)) ($generated@@110 $generated@@224) (- $generated@@222 1)) ($generated@@106 ($generated@@42 $generated@@220 ($generated@@27 1)) $generated@@223 $generated@@222)))))))) (=> (=> (< 0 ($generated@@43 $generated@@220)) (ite ($generated@@107 $generated@@221) true (let (($generated@@225 ($generated@@98 $generated@@221)))
(let (($generated@@226 ($generated@@108 $generated@@57 ($generated@@109 $generated@@221))))
 (and (and (<= ($generated@@66 1) $generated@@222) ($generated@@67 $generated@@219 ($generated@@42 $generated@@220 ($generated@@27 1)) ($generated@@110 $generated@@226) (- $generated@@222 1))) ($generated@@67 $generated@@219 ($generated@@42 $generated@@220 ($generated@@27 1)) $generated@@225 $generated@@222)))))) (=> (= ($generated@@66 0) ($generated@@43 $generated@@220)) (forall (($generated@@227 T@U) ) (!  (=> ($generated@@34 $generated@@227 $generated@@220) ($generated@@106 $generated@@227 $generated@@221 $generated@@222))
 :pattern ( ($generated@@67 $generated@@219 $generated@@227 $generated@@221 $generated@@222))
))))) (= ($generated@@67 ($generated@@26 $generated@@219) $generated@@220 $generated@@221 $generated@@222)  (and (=> (< 0 ($generated@@43 $generated@@220)) (ite ($generated@@107 $generated@@221) true (let (($generated@@228 ($generated@@98 $generated@@221)))
(let (($generated@@229 ($generated@@108 $generated@@57 ($generated@@109 $generated@@221))))
 (and (and (<= ($generated@@66 1) $generated@@222) ($generated@@67 $generated@@219 ($generated@@42 $generated@@220 ($generated@@27 1)) ($generated@@110 $generated@@229) (- $generated@@222 1))) ($generated@@67 $generated@@219 ($generated@@42 $generated@@220 ($generated@@27 1)) $generated@@228 $generated@@222)))))) (=> (= ($generated@@66 0) ($generated@@43 $generated@@220)) (forall (($generated@@230 T@U) ) (!  (=> ($generated@@34 $generated@@230 $generated@@220) ($generated@@67 $generated@@219 $generated@@230 $generated@@221 $generated@@222))
 :pattern ( ($generated@@67 $generated@@219 $generated@@230 $generated@@221 $generated@@222))
)))))))
 :pattern ( ($generated@@67 ($generated@@26 $generated@@219) $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Int) ) (! (= ($generated@@67 ($generated@@26 $generated@@231) $generated@@232 $generated@@233 $generated@@234) ($generated@@67 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
 :pattern ( ($generated@@67 ($generated@@26 $generated@@231) $generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ) (! (<= 0 ($generated@@43 $generated@@235))
 :pattern ( ($generated@@43 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= ($generated@@47 ($generated@@123 $generated@@236 $generated@@237)) $generated@@4)
 :pattern ( ($generated@@123 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= ($generated@@109 ($generated@@123 $generated@@238 $generated@@239)) $generated@@238)
 :pattern ( ($generated@@123 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= ($generated@@98 ($generated@@123 $generated@@240 $generated@@241)) $generated@@241)
 :pattern ( ($generated@@123 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@242 ($generated@@60 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@60 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@47 ($generated@@145 $generated@@244)) $generated@@5)
 :pattern ( ($generated@@145 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@110 ($generated@@145 $generated@@245)) $generated@@245)
 :pattern ( ($generated@@145 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@T) ) (! (= ($generated@@108 $generated@@247 ($generated@@132 $generated@@247 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@132 $generated@@247 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (and (=> ($generated@@34 $generated@@248 $generated@@249) (or (not (= $generated@@248 $generated@@249)) (not true))) (=> (and ($generated@@166 $generated@@248) (not ($generated@@166 $generated@@249))) ($generated@@34 $generated@@248 $generated@@249))) (=> (and ($generated@@166 $generated@@248) ($generated@@166 $generated@@249)) (= ($generated@@34 $generated@@248 $generated@@249) (< ($generated@@43 $generated@@248) ($generated@@43 $generated@@249))))) (=> (and ($generated@@34 $generated@@248 $generated@@249) ($generated@@166 $generated@@249)) ($generated@@166 $generated@@248)))
 :pattern ( ($generated@@34 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 Int) ) (! (= ($generated@@169 ($generated@@26 $generated@@250) $generated@@251) ($generated@@169 $generated@@250 $generated@@251))
 :pattern ( ($generated@@169 ($generated@@26 $generated@@250) $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 Int) ) (! (= ($generated@@82 ($generated@@26 $generated@@252) $generated@@253) ($generated@@82 $generated@@252 $generated@@253))
 :pattern ( ($generated@@82 ($generated@@26 $generated@@252) $generated@@253))
)))
(assert  (=> (<= 3 $generated@@64) (forall (($generated@@254 T@U) ($generated@@255 Int) ) (!  (=> (or ($generated@@170 $generated@@255) (and (< 3 $generated@@64) (<= ($generated@@66 0) $generated@@255))) (and (forall (($generated@@256 Int) ) (!  (=> (<= ($generated@@66 0) $generated@@256) (= ($generated@@65 ($generated@@26 $generated@@97) ($generated@@110 ($generated@@169 $generated@@254 $generated@@255)) $generated@@256) (<= $generated@@255 $generated@@256)))
 :pattern ( ($generated@@65 ($generated@@26 $generated@@97) ($generated@@110 ($generated@@169 $generated@@254 $generated@@255)) $generated@@256))
)) ($generated@@56 $generated@@57 ($generated@@169 $generated@@254 $generated@@255) $generated@@58)))
 :pattern ( ($generated@@169 $generated@@254 $generated@@255))
))))
(assert  (=> (<= 3 $generated@@64) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (or ($generated@@170 ($generated@@66 $generated@@258)) (and (< 3 $generated@@64) (<= ($generated@@66 0) $generated@@258))) (and (=> (or (not (= ($generated@@66 $generated@@258) ($generated@@66 0))) (not true)) ($generated@@170 ($generated@@66 (- $generated@@258 1)))) (= ($generated@@169 ($generated@@26 $generated@@257) ($generated@@66 $generated@@258)) (ite (= ($generated@@66 $generated@@258) ($generated@@66 0)) ($generated@@145 ($generated@@87 $generated@@57 $generated@@48)) ($generated@@145 ($generated@@87 $generated@@57 ($generated@@123 ($generated@@132 $generated@@57 ($generated@@87 $generated@@57 ($generated@@169 ($generated@@26 $generated@@257) ($generated@@66 (- $generated@@258 1))))) ($generated@@87 $generated@@57 $generated@@48))))))))
 :weight 3
 :pattern ( ($generated@@169 ($generated@@26 $generated@@257) ($generated@@66 $generated@@258)))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (= ($generated@@72 $generated@@259 $generated@@260 ($generated@@26 $generated@@261) $generated@@262 $generated@@263) (forall (($generated@@264 T@U) ) (! ($generated@@25 $generated@@259 $generated@@260 $generated@@264 ($generated@@26 $generated@@261) $generated@@262 $generated@@263)
 :pattern ( ($generated@@25 $generated@@259 $generated@@260 $generated@@264 ($generated@@26 $generated@@261) $generated@@262 $generated@@263))
)))
 :pattern ( ($generated@@72 $generated@@259 $generated@@260 ($generated@@26 $generated@@261) $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ) (! (< ($generated@@265 $generated@@266) ($generated@@265 ($generated@@145 $generated@@266)))
 :pattern ( ($generated@@145 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and ($generated@@61 $generated@@269) (and ($generated@@129 $generated@@267) ($generated@@38 $generated@@57 $generated@@267 ($generated@@60 $generated@@268) $generated@@269))) ($generated@@158 ($generated@@109 $generated@@267) $generated@@268 $generated@@269))
 :pattern ( ($generated@@158 ($generated@@109 $generated@@267) $generated@@268 $generated@@269))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@280 T@T) ($generated@@281 T@T) ($generated@@282 T@T) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (! (= ($generated@@270 $generated@@280 $generated@@281 $generated@@282 ($generated@@276 $generated@@280 $generated@@281 $generated@@282 $generated@@284 $generated@@285 $generated@@286 $generated@@283) $generated@@285 $generated@@286) $generated@@283)
 :weight 0
)) (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ($generated@@289 T@T) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (or (= $generated@@292 $generated@@294) (= ($generated@@270 $generated@@287 $generated@@288 $generated@@289 ($generated@@276 $generated@@287 $generated@@288 $generated@@289 $generated@@291 $generated@@292 $generated@@293 $generated@@290) $generated@@294 $generated@@295) ($generated@@270 $generated@@287 $generated@@288 $generated@@289 $generated@@291 $generated@@294 $generated@@295)))
 :weight 0
)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ($generated@@298 T@T) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (or (= $generated@@302 $generated@@304) (= ($generated@@270 $generated@@296 $generated@@297 $generated@@298 ($generated@@276 $generated@@296 $generated@@297 $generated@@298 $generated@@300 $generated@@301 $generated@@302 $generated@@299) $generated@@303 $generated@@304) ($generated@@270 $generated@@296 $generated@@297 $generated@@298 $generated@@300 $generated@@303 $generated@@304)))
 :weight 0
)))) (= ($generated@@9 $generated@@271) 5)) (= ($generated@@9 $generated@@272) 6)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (! (= ($generated@@274 $generated@@305 $generated@@306 ($generated@@277 $generated@@305 $generated@@306 $generated@@308 $generated@@309 $generated@@307) $generated@@309) $generated@@307)
 :weight 0
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (or (= $generated@@314 $generated@@315) (= ($generated@@274 $generated@@310 $generated@@311 ($generated@@277 $generated@@310 $generated@@311 $generated@@313 $generated@@314 $generated@@312) $generated@@315) ($generated@@274 $generated@@310 $generated@@311 $generated@@313 $generated@@315)))
 :weight 0
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@9 ($generated@@275 $generated@@316 $generated@@317)) 7))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@278 ($generated@@275 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@275 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@279 ($generated@@275 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@275 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 Bool) ($generated@@326 T@U) ($generated@@327 T@U) ) (! (= ($generated@@14 ($generated@@270 $generated@@271 $generated@@272 $generated@@10 ($generated@@273 $generated@@322 $generated@@323 $generated@@324 $generated@@325) $generated@@326 $generated@@327))  (=> (and (or (not (= $generated@@326 $generated@@322)) (not true)) ($generated@@14 ($generated@@108 $generated@@10 ($generated@@274 $generated@@272 $generated@@105 ($generated@@274 $generated@@271 ($generated@@275 $generated@@272 $generated@@105) $generated@@323 $generated@@326) $generated@@324)))) $generated@@325))
 :pattern ( ($generated@@270 $generated@@271 $generated@@272 $generated@@10 ($generated@@273 $generated@@322 $generated@@323 $generated@@324 $generated@@325) $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 Int) ) (! (= ($generated@@90 $generated@@328 ($generated@@26 $generated@@329) $generated@@330 $generated@@331) ($generated@@90 $generated@@328 $generated@@329 $generated@@330 $generated@@331))
 :pattern ( ($generated@@90 $generated@@328 ($generated@@26 $generated@@329) $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> ($generated@@124 $generated@@333 ($generated@@60 $generated@@332)) (and (= ($generated@@132 $generated@@57 ($generated@@108 $generated@@57 $generated@@333)) $generated@@333) ($generated@@56 $generated@@57 ($generated@@108 $generated@@57 $generated@@333) ($generated@@60 $generated@@332))))
 :pattern ( ($generated@@124 $generated@@333 ($generated@@60 $generated@@332)))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> ($generated@@166 $generated@@334) (= $generated@@334 ($generated@@27 ($generated@@43 $generated@@334))))
 :pattern ( ($generated@@43 $generated@@334))
 :pattern ( ($generated@@166 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and ($generated@@61 $generated@@337) (and ($generated@@129 $generated@@335) ($generated@@38 $generated@@57 $generated@@335 ($generated@@60 $generated@@336) $generated@@337))) ($generated@@38 $generated@@57 ($generated@@98 $generated@@335) ($generated@@60 $generated@@336) $generated@@337))
 :pattern ( ($generated@@38 $generated@@57 ($generated@@98 $generated@@335) ($generated@@60 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and ($generated@@61 $generated@@339) ($generated@@56 $generated@@57 $generated@@338 $generated@@58)) ($generated@@38 $generated@@57 $generated@@338 $generated@@58 $generated@@339))
 :pattern ( ($generated@@38 $generated@@57 $generated@@338 $generated@@58 $generated@@339))
)))
(assert (= ($generated@@163 $generated@@39) $generated@@0))
(assert (= ($generated@@164 $generated@@39) $generated@@6))
(assert (= ($generated@@163 $generated@@58) $generated@@2))
(assert (= ($generated@@164 $generated@@58) $generated@@8))
(assert  (=> (<= 2 $generated@@64) (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 Int) ) (!  (=> (or ($generated@@340 $generated@@342 $generated@@343) (and (< 2 $generated@@64) (and ($generated@@56 $generated@@57 $generated@@342 ($generated@@60 $generated@@58)) (<= ($generated@@66 0) $generated@@343)))) (and (=> (not ($generated@@107 $generated@@342)) (let (($generated@@344 ($generated@@98 $generated@@342)))
(let (($generated@@345 ($generated@@108 $generated@@57 ($generated@@109 $generated@@342))))
 (=> (<= ($generated@@66 1) $generated@@343) (and (and ($generated@@55 $generated@@345) ($generated@@340 ($generated@@110 $generated@@345) (- $generated@@343 1))) (=> ($generated@@65 $generated@@341 ($generated@@110 $generated@@345) (- $generated@@343 1)) ($generated@@340 $generated@@344 $generated@@343))))))) (= ($generated@@65 ($generated@@26 $generated@@341) $generated@@342 $generated@@343) (ite ($generated@@107 $generated@@342) true (let (($generated@@346 ($generated@@98 $generated@@342)))
(let (($generated@@347 ($generated@@108 $generated@@57 ($generated@@109 $generated@@342))))
 (and (and (<= ($generated@@66 1) $generated@@343) ($generated@@65 $generated@@341 ($generated@@110 $generated@@347) (- $generated@@343 1))) ($generated@@65 $generated@@341 $generated@@346 $generated@@343))))))))
 :pattern ( ($generated@@65 ($generated@@26 $generated@@341) $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and ($generated@@166 $generated@@349) (<= ($generated@@43 $generated@@349) ($generated@@43 $generated@@348))) (or (and (= $generated@@349 ($generated@@27 0)) (= ($generated@@42 $generated@@348 $generated@@349) $generated@@348)) (and (or (not (= $generated@@349 ($generated@@27 0))) (not true)) ($generated@@34 ($generated@@42 $generated@@348 $generated@@349) $generated@@348))))
 :pattern ( ($generated@@42 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and ($generated@@34 $generated@@352 $generated@@356) ($generated@@25 $generated@@350 $generated@@351 $generated@@356 ($generated@@26 $generated@@353) $generated@@354 $generated@@355)) ($generated@@25 $generated@@350 $generated@@351 $generated@@352 ($generated@@26 $generated@@353) $generated@@354 $generated@@355))
 :pattern ( ($generated@@25 $generated@@350 $generated@@351 $generated@@352 ($generated@@26 $generated@@353) $generated@@354 $generated@@355) ($generated@@25 $generated@@350 $generated@@351 $generated@@356 ($generated@@26 $generated@@353) $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (! (= ($generated@@72 $generated@@357 $generated@@358 ($generated@@26 $generated@@359) $generated@@360 $generated@@361) ($generated@@72 $generated@@357 $generated@@358 $generated@@359 $generated@@360 $generated@@361))
 :pattern ( ($generated@@72 $generated@@357 $generated@@358 ($generated@@26 $generated@@359) $generated@@360 $generated@@361))
)))
(assert  (=> (<= 3 $generated@@64) (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 Int) ($generated@@365 T@U) ) (!  (=> (and (and ($generated@@56 $generated@@57 $generated@@363 ($generated@@60 $generated@@58)) (<= ($generated@@66 0) $generated@@364)) (= $generated@@365 ($generated@@27 0))) ($generated@@67 $generated@@362 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@67 $generated@@362 $generated@@365 $generated@@363 $generated@@364))
))))
(assert (forall (($generated@@366 Int) ) (! (= ($generated@@132 $generated@@11 ($generated@@15 ($generated@@66 $generated@@366))) ($generated@@87 $generated@@105 ($generated@@132 $generated@@11 ($generated@@15 $generated@@366))))
 :pattern ( ($generated@@132 $generated@@11 ($generated@@15 ($generated@@66 $generated@@366))))
)))
(assert (forall (($generated@@367 T@U) ) (! (= ($generated@@145 ($generated@@87 $generated@@57 $generated@@367)) ($generated@@87 $generated@@57 ($generated@@145 $generated@@367)))
 :pattern ( ($generated@@145 ($generated@@87 $generated@@57 $generated@@367)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@T) ) (! (= ($generated@@132 $generated@@369 ($generated@@87 $generated@@369 $generated@@368)) ($generated@@87 $generated@@105 ($generated@@132 $generated@@369 $generated@@368)))
 :pattern ( ($generated@@132 $generated@@369 ($generated@@87 $generated@@369 $generated@@368)))
)))
(assert  (=> (<= 4 $generated@@64) (forall (($generated@@370 T@U) ($generated@@371 Int) ) (!  (=> (or ($generated@@83 $generated@@371) (and (< 4 $generated@@64) (<= ($generated@@66 0) $generated@@371))) (and (and ($generated@@170 $generated@@371) ($generated@@83 (+ $generated@@371 1))) (= ($generated@@82 ($generated@@26 $generated@@370) $generated@@371) ($generated@@123 ($generated@@132 $generated@@57 ($generated@@169 ($generated@@26 $generated@@97) $generated@@371)) ($generated@@82 $generated@@370 (+ $generated@@371 1))))))
 :pattern ( ($generated@@82 ($generated@@26 $generated@@370) $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and ($generated@@61 $generated@@373) (and ($generated@@55 $generated@@372) ($generated@@38 $generated@@57 $generated@@372 $generated@@58 $generated@@373))) ($generated@@38 $generated@@57 ($generated@@110 $generated@@372) ($generated@@60 $generated@@58) $generated@@373))
 :pattern ( ($generated@@38 $generated@@57 ($generated@@110 $generated@@372) ($generated@@60 $generated@@58) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (forall (($generated@@379 Int) ) (!  (=> (<= 0 $generated@@379) ($generated@@25 $generated@@374 $generated@@375 ($generated@@27 $generated@@379) ($generated@@26 $generated@@376) $generated@@377 $generated@@378))
 :pattern ( ($generated@@25 $generated@@374 $generated@@375 ($generated@@27 $generated@@379) ($generated@@26 $generated@@376) $generated@@377 $generated@@378))
)) ($generated@@72 $generated@@374 $generated@@375 ($generated@@26 $generated@@376) $generated@@377 $generated@@378))
 :pattern ( ($generated@@72 $generated@@374 $generated@@375 ($generated@@26 $generated@@376) $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> ($generated@@61 $generated@@383) (= ($generated@@38 $generated@@57 ($generated@@123 $generated@@381 $generated@@382) ($generated@@60 $generated@@380) $generated@@383)  (and ($generated@@158 $generated@@381 $generated@@380 $generated@@383) ($generated@@38 $generated@@57 $generated@@382 ($generated@@60 $generated@@380) $generated@@383))))
 :pattern ( ($generated@@38 $generated@@57 ($generated@@123 $generated@@381 $generated@@382) ($generated@@60 $generated@@380) $generated@@383))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@384 () T@U)
(declare-fun $generated@@385 () T@U)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 (T@U) Bool)
(declare-fun $generated@@389 () Int)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () Int)
(declare-fun $generated@@392 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@393  (=> (= $generated@@384 ($generated@@273 $generated@@385 $generated@@386 $generated false)) (=> (and (and (and (and ($generated@@61 $generated@@387) ($generated@@388 $generated@@387)) (and (= $generated@@386 $generated@@387) ($generated@@38 $generated@@11 ($generated@@15 $generated@@389) $generated@@39 $generated@@387))) (and (and ($generated@@83 $generated@@389) (= $generated@@390 ($generated@@82 ($generated@@26 $generated@@97) $generated@@389))) (and ($generated@@38 $generated@@57 $generated@@390 ($generated@@60 $generated@@58) $generated@@387) ($generated@@38 $generated@@11 ($generated@@15 $generated@@391) $generated@@39 $generated@@387)))) (and (and (and ($generated@@91 $generated@@58 ($generated@@82 ($generated@@26 $generated@@97) $generated@@389) $generated@@391) ($generated@@129 ($generated@@90 $generated@@58 ($generated@@26 $generated@@97) ($generated@@82 ($generated@@26 $generated@@97) $generated@@389) $generated@@391))) (and ($generated@@38 $generated@@11 ($generated@@15 $generated@@389) $generated@@39 $generated@@387) ($generated@@83 $generated@@389))) (and (and (= $generated@@392 ($generated@@82 ($generated@@26 $generated@@97) $generated@@389)) ($generated@@38 $generated@@57 $generated@@392 ($generated@@60 $generated@@58) $generated@@387)) (and ($generated@@38 $generated@@11 ($generated@@15 $generated@@391) $generated@@39 $generated@@387) ($generated@@91 $generated@@58 ($generated@@82 ($generated@@26 $generated@@97) $generated@@389) $generated@@391))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@129 ($generated@@90 $generated@@58 ($generated@@26 $generated@@97) ($generated@@82 ($generated@@26 $generated@@97) $generated@@389) $generated@@391))) (=> ($generated@@129 ($generated@@90 $generated@@58 ($generated@@26 $generated@@97) ($generated@@82 ($generated@@26 $generated@@97) $generated@@389) $generated@@391)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@56 $generated@@11 ($generated@@15 (+ $generated@@389 $generated@@391)) $generated@@39))))))))
(let (($generated@@394  (=> (and ($generated@@61 $generated@@386) ($generated@@388 $generated@@386)) (=> (and (and (<= ($generated@@66 0) $generated@@389) (<= ($generated@@66 0) $generated@@391)) (and (= 5 $generated@@64) (= (ControlFlow 0 4) 2))) $generated@@393))))
$generated@@394)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
