(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@114 (T@U) Int)
(declare-fun $generated@@115 (T@U) Int)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@128 (T@T T@T) T@T)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (and (= ($generated@@4 $generated@@24) 3) (= ($generated@@4 $generated@@30) 4)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@25 $generated@@33 ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@35 ($generated@@27 $generated@@33)) ($generated@@26 $generated@@24 $generated@@36 ($generated@@27 $generated@@33))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)))))) (let (($generated@@37 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@25 $generated@@33 $generated@@37 ($generated@@23 $generated@@24 $generated@@36)))) (= ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)) $generated@@36 (let (($generated@@38 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
(let (($generated@@39 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@23 $generated@@24 ($generated@@32 $generated@@39 ($generated@@23 $generated@@24 ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) $generated@@38 ($generated@@23 $generated@@24 $generated@@36)))))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)))
))))
(assert (= ($generated@@40 $generated@@41) $generated@@1))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> ($generated@@43 $generated@@45) ($generated@@42 $generated@@24 $generated@@41 ($generated@@27 $generated@@44) $generated@@45))
 :pattern ( ($generated@@42 $generated@@24 $generated@@41 ($generated@@27 $generated@@44) $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ) (! ($generated@@26 $generated@@24 $generated@@41 ($generated@@27 $generated@@46))
 :pattern ( ($generated@@26 $generated@@24 $generated@@41 ($generated@@27 $generated@@46)))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@49) (= $generated@@48 $generated@@49))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (and ($generated@@50 $generated@@51) ($generated@@50 $generated@@52)) (= ($generated@@47 $generated@@51 $generated@@52)  (and (= ($generated@@31 $generated@@51) ($generated@@31 $generated@@52)) ($generated@@47 ($generated@@29 $generated@@51) ($generated@@29 $generated@@52)))))
 :pattern ( ($generated@@47 $generated@@51 $generated@@52) ($generated@@50 $generated@@51))
 :pattern ( ($generated@@47 $generated@@51 $generated@@52) ($generated@@50 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@23 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@23 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@26 $generated@@24 ($generated@@32 $generated@@57 $generated@@58) ($generated@@27 $generated@@56))  (and ($generated@@55 $generated@@57 $generated@@56) ($generated@@26 $generated@@24 $generated@@58 ($generated@@27 $generated@@56))))
 :pattern ( ($generated@@26 $generated@@24 ($generated@@32 $generated@@57 $generated@@58) ($generated@@27 $generated@@56)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (or ($generated@@25 $generated@@59 $generated@@61 $generated@@62) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@61 ($generated@@27 $generated@@59)) ($generated@@26 $generated@@24 $generated@@62 ($generated@@27 $generated@@59))))) (and (=> (not ($generated@@28 $generated@@61)) (let (($generated@@63 ($generated@@29 $generated@@61)))
($generated@@25 $generated@@59 $generated@@63 $generated@@62))) (= ($generated@@21 $generated@@59 ($generated@@22 $generated@@60) $generated@@61 $generated@@62) (ite ($generated@@28 $generated@@61) $generated@@62 (let (($generated@@64 ($generated@@29 $generated@@61)))
(let (($generated@@65 ($generated@@31 $generated@@61)))
($generated@@32 $generated@@65 ($generated@@21 $generated@@59 $generated@@60 $generated@@64 $generated@@62))))))))
 :pattern ( ($generated@@21 $generated@@59 ($generated@@22 $generated@@60) $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@28 $generated@@66) (= ($generated@@40 $generated@@66) $generated@@1))
 :pattern ( ($generated@@28 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@50 $generated@@67) (= ($generated@@40 $generated@@67) $generated@@2))
 :pattern ( ($generated@@50 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 ($generated@@68 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@68 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@50 $generated@@72) (exists (($generated@@73 T@U) ($generated@@74 T@U) ) (= $generated@@72 ($generated@@32 $generated@@73 $generated@@74))))
 :pattern ( ($generated@@50 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@28 $generated@@75) (= $generated@@75 $generated@@41))
 :pattern ( ($generated@@28 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@69 $generated@@80 $generated@@77) $generated@@78 $generated@@79) ($generated@@42 $generated@@80 $generated@@77 $generated@@78 $generated@@79))
 :pattern ( ($generated@@76 ($generated@@69 $generated@@80 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ) (!  (and (= ($generated@@81 ($generated@@27 $generated@@83)) $generated@@0) (= ($generated@@82 ($generated@@27 $generated@@83)) $generated@@3))
 :pattern ( ($generated@@27 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@84 $generated@@85) (or ($generated@@28 $generated@@85) ($generated@@50 $generated@@85)))
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@26 $generated@@24 $generated@@87 ($generated@@27 $generated@@86)) (or ($generated@@28 $generated@@87) ($generated@@50 $generated@@87)))
 :pattern ( ($generated@@50 $generated@@87) ($generated@@26 $generated@@24 $generated@@87 ($generated@@27 $generated@@86)))
 :pattern ( ($generated@@28 $generated@@87) ($generated@@26 $generated@@24 $generated@@87 ($generated@@27 $generated@@86)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@55 ($generated@@69 $generated@@90 $generated@@88) $generated@@89) ($generated@@26 $generated@@90 $generated@@88 $generated@@89))
 :pattern ( ($generated@@55 ($generated@@69 $generated@@90 $generated@@88) $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and ($generated@@28 $generated@@91) ($generated@@28 $generated@@92)) ($generated@@47 $generated@@91 $generated@@92))
 :pattern ( ($generated@@47 $generated@@91 $generated@@92) ($generated@@28 $generated@@91))
 :pattern ( ($generated@@47 $generated@@91 $generated@@92) ($generated@@28 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@40 ($generated@@32 $generated@@93 $generated@@94)) $generated@@2)
 :pattern ( ($generated@@32 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@31 ($generated@@32 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@32 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@29 ($generated@@32 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@32 $generated@@97 $generated@@98))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@25 $generated@@99 $generated@@101 $generated@@102) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@101 ($generated@@27 $generated@@99)) ($generated@@26 $generated@@24 $generated@@102 ($generated@@27 $generated@@99))))) ($generated@@26 $generated@@24 ($generated@@21 $generated@@99 $generated@@100 $generated@@101 $generated@@102) ($generated@@27 $generated@@99)))
 :pattern ( ($generated@@21 $generated@@99 $generated@@100 $generated@@101 $generated@@102))
))))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 ($generated@@27 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@27 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@68 $generated@@106 ($generated@@69 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@69 $generated@@106 $generated@@105))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@25 $generated@@107 ($generated@@23 $generated@@24 $generated@@109) $generated@@110) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@109 ($generated@@27 $generated@@107)) ($generated@@26 $generated@@24 $generated@@110 ($generated@@27 $generated@@107))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@109)))))) (let (($generated@@111 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@109)))))
($generated@@25 $generated@@107 $generated@@111 $generated@@110))) (= ($generated@@21 $generated@@107 ($generated@@22 $generated@@108) ($generated@@23 $generated@@24 $generated@@109) $generated@@110) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@109)) $generated@@110 (let (($generated@@112 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@109)))))
(let (($generated@@113 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@109)))))
($generated@@32 $generated@@113 ($generated@@21 $generated@@107 ($generated@@22 $generated@@108) $generated@@112 $generated@@110))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@107 ($generated@@22 $generated@@108) ($generated@@23 $generated@@24 $generated@@109) $generated@@110))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (< ($generated@@114 $generated@@116) ($generated@@115 ($generated@@32 $generated@@116 $generated@@117)))
 :pattern ( ($generated@@32 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (< ($generated@@115 $generated@@119) ($generated@@115 ($generated@@32 $generated@@118 $generated@@119)))
 :pattern ( ($generated@@32 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@43 $generated@@122) (and ($generated@@50 $generated@@120) ($generated@@42 $generated@@24 $generated@@120 ($generated@@27 $generated@@121) $generated@@122))) ($generated@@76 ($generated@@31 $generated@@120) $generated@@121 $generated@@122))
 :pattern ( ($generated@@76 ($generated@@31 $generated@@120) $generated@@121 $generated@@122))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@123 $generated@@133 $generated@@134 $generated@@135 ($generated@@129 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@138 $generated@@139) $generated@@136)
 :weight 0
)) (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@123 $generated@@140 $generated@@141 $generated@@142 ($generated@@129 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@123 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@155 $generated@@157) (= ($generated@@123 $generated@@149 $generated@@150 $generated@@151 ($generated@@129 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@123 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)))) (= ($generated@@4 $generated@@124) 5)) (= ($generated@@4 $generated@@125) 6)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@127 $generated@@158 $generated@@159 ($generated@@130 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@160) $generated@@162) $generated@@160)
 :weight 0
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@167 $generated@@168) (= ($generated@@127 $generated@@163 $generated@@164 ($generated@@130 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@165) $generated@@168) ($generated@@127 $generated@@163 $generated@@164 $generated@@166 $generated@@168)))
 :weight 0
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@4 ($generated@@128 $generated@@169 $generated@@170)) 7))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@131 ($generated@@128 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@128 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@132 ($generated@@128 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@128 $generated@@173 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@9 ($generated@@123 $generated@@124 $generated@@125 $generated@@5 ($generated@@126 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))  (=> (and (or (not (= $generated@@179 $generated@@175)) (not true)) ($generated@@9 ($generated@@68 $generated@@5 ($generated@@127 $generated@@125 $generated@@30 ($generated@@127 $generated@@124 ($generated@@128 $generated@@125 $generated@@30) $generated@@176 $generated@@179) $generated@@177)))) $generated@@178))
 :pattern ( ($generated@@123 $generated@@124 $generated@@125 $generated@@5 ($generated@@126 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@182 $generated@@184 $generated@@185) (and (< 1 $generated@@20) (and (and ($generated@@26 $generated@@24 $generated@@184 ($generated@@27 $generated@@182)) ($generated@@42 $generated@@24 $generated@@184 ($generated@@27 $generated@@182) $generated@@181)) (and ($generated@@26 $generated@@24 $generated@@185 ($generated@@27 $generated@@182)) ($generated@@42 $generated@@24 $generated@@185 ($generated@@27 $generated@@182) $generated@@181))))) ($generated@@43 $generated@@181)) ($generated@@42 $generated@@24 ($generated@@21 $generated@@182 $generated@@183 $generated@@184 $generated@@185) ($generated@@27 $generated@@182) $generated@@181))
 :pattern ( ($generated@@42 $generated@@24 ($generated@@21 $generated@@182 $generated@@183 $generated@@184 $generated@@185) ($generated@@27 $generated@@182) $generated@@181))
))))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@114 ($generated@@69 $generated@@24 $generated@@186)) ($generated@@115 $generated@@186))
 :pattern ( ($generated@@114 ($generated@@69 $generated@@24 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@21 $generated@@187 ($generated@@22 $generated@@188) $generated@@189 $generated@@190) ($generated@@21 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
 :pattern ( ($generated@@21 $generated@@187 ($generated@@22 $generated@@188) $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@55 $generated@@192 ($generated@@27 $generated@@191)) (and (= ($generated@@69 $generated@@24 ($generated@@68 $generated@@24 $generated@@192)) $generated@@192) ($generated@@26 $generated@@24 ($generated@@68 $generated@@24 $generated@@192) ($generated@@27 $generated@@191))))
 :pattern ( ($generated@@55 $generated@@192 ($generated@@27 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and ($generated@@43 $generated@@195) (and ($generated@@50 $generated@@193) ($generated@@42 $generated@@24 $generated@@193 ($generated@@27 $generated@@194) $generated@@195))) ($generated@@42 $generated@@24 ($generated@@29 $generated@@193) ($generated@@27 $generated@@194) $generated@@195))
 :pattern ( ($generated@@42 $generated@@24 ($generated@@29 $generated@@193) ($generated@@27 $generated@@194) $generated@@195))
)))
(assert (= $generated@@41 ($generated@@23 $generated@@24 $generated@@41)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@32 ($generated@@23 $generated@@30 $generated@@196) ($generated@@23 $generated@@24 $generated@@197)) ($generated@@23 $generated@@24 ($generated@@32 $generated@@196 $generated@@197)))
 :pattern ( ($generated@@32 ($generated@@23 $generated@@30 $generated@@196) ($generated@@23 $generated@@24 $generated@@197)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@T) ) (! (= ($generated@@69 $generated@@199 ($generated@@23 $generated@@199 $generated@@198)) ($generated@@23 $generated@@30 ($generated@@69 $generated@@199 $generated@@198)))
 :pattern ( ($generated@@69 $generated@@199 ($generated@@23 $generated@@199 $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@43 $generated@@203) (= ($generated@@42 $generated@@24 ($generated@@32 $generated@@201 $generated@@202) ($generated@@27 $generated@@200) $generated@@203)  (and ($generated@@76 $generated@@201 $generated@@200 $generated@@203) ($generated@@42 $generated@@24 $generated@@202 ($generated@@27 $generated@@200) $generated@@203))))
 :pattern ( ($generated@@42 $generated@@24 ($generated@@32 $generated@@201 $generated@@202) ($generated@@27 $generated@@200) $generated@@203))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@220  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@47 ($generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@205)) ($generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@205)) $generated@@206 $generated@@207) $generated@@208) ($generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@205)) $generated@@206 ($generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@205)) $generated@@207 $generated@@208))))))
(let (($generated@@221  (=> (= $generated@@206 ($generated@@32 $generated@@209 $generated@@210)) (=> (and ($generated@@55 $generated@@209 $generated@@204) ($generated@@26 $generated@@24 $generated@@210 ($generated@@27 $generated@@204))) (=> (and (and (and (and ($generated@@26 $generated@@24 $generated@@211 ($generated@@27 $generated@@204)) ($generated@@42 $generated@@24 $generated@@211 ($generated@@27 $generated@@204) $generated@@212)) (= $generated@@213 $generated@@210)) (and ($generated@@26 $generated@@24 $generated@@213 ($generated@@27 $generated@@204)) (= $generated@@211 $generated@@213))) (and (and (and ($generated@@55 $generated@@214 $generated@@204) ($generated@@76 $generated@@214 $generated@@204 $generated@@212)) (= $generated@@215 $generated@@209)) (and ($generated@@55 $generated@@215 $generated@@204) (= $generated@@214 $generated@@215)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@115 $generated@@211) ($generated@@115 $generated@@206))) (=> (< ($generated@@115 $generated@@211) ($generated@@115 $generated@@206)) (=> (and ($generated@@43 $generated@@216) ($generated@@217 $generated@@216)) (=> (and (and (and (and ($generated@@84 ($generated@@21 $generated@@204 ($generated@@22 $generated@@205) ($generated@@21 $generated@@204 ($generated@@22 $generated@@205) $generated@@211 $generated@@207) $generated@@208)) ($generated@@84 ($generated@@21 $generated@@204 ($generated@@22 $generated@@205) $generated@@211 ($generated@@21 $generated@@204 ($generated@@22 $generated@@205) $generated@@207 $generated@@208)))) (and (and ($generated@@25 $generated@@204 $generated@@211 $generated@@207) ($generated@@25 $generated@@204 ($generated@@21 $generated@@204 ($generated@@22 $generated@@205) $generated@@211 $generated@@207) $generated@@208)) (and ($generated@@25 $generated@@204 $generated@@207 $generated@@208) ($generated@@25 $generated@@204 $generated@@211 ($generated@@21 $generated@@204 ($generated@@22 $generated@@205) $generated@@207 $generated@@208))))) ($generated@@47 ($generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@205)) ($generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@205)) $generated@@211 $generated@@207) $generated@@208) ($generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@205)) $generated@@211 ($generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@205)) $generated@@207 $generated@@208)))) (and (= $generated@@212 $generated@@216) (= (ControlFlow 0 5) 3))) $generated@@220)))))))))
(let (($generated@@222  (=> (and (= $generated@@206 $generated@@41) (= (ControlFlow 0 4) 3)) $generated@@220)))
(let (($generated@@223 true))
(let (($generated@@224  (=> (or (not (= $generated@@206 $generated@@41)) (not true)) (and (=> (= (ControlFlow 0 7) 5) $generated@@221) (=> (= (ControlFlow 0 7) 1) $generated@@223)))))
(let (($generated@@225  (=> (= $generated@@218 ($generated@@126 $generated@@219 $generated@@212 $generated false)) (and (=> (= (ControlFlow 0 8) 4) $generated@@222) (=> (= (ControlFlow 0 8) 7) $generated@@224)))))
(let (($generated@@226  (=> (and ($generated@@43 $generated@@212) ($generated@@217 $generated@@212)) (=> (and (and (and (and ($generated@@26 $generated@@24 $generated@@206 ($generated@@27 $generated@@204)) ($generated@@42 $generated@@24 $generated@@206 ($generated@@27 $generated@@204) $generated@@212)) ($generated@@84 $generated@@206)) (and (and ($generated@@26 $generated@@24 $generated@@207 ($generated@@27 $generated@@204)) ($generated@@42 $generated@@24 $generated@@207 ($generated@@27 $generated@@204) $generated@@212)) ($generated@@84 $generated@@207))) (and (and (and ($generated@@26 $generated@@24 $generated@@208 ($generated@@27 $generated@@204)) ($generated@@42 $generated@@24 $generated@@208 ($generated@@27 $generated@@204) $generated@@212)) ($generated@@84 $generated@@208)) (and (= 2 $generated@@20) (= (ControlFlow 0 9) 8)))) $generated@@225))))
$generated@@226))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
