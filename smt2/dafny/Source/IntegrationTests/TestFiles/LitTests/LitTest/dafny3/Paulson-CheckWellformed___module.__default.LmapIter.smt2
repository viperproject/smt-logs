(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U T@U Int T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@U Int T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 (T@T T@T) T@T)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@10 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@24 $generated@@10 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (= ($generated@@28 $generated@@29) $generated@@3))
(assert (= ($generated@@8 $generated@@30) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@32 $generated@@34) ($generated@@24 $generated@@30 $generated@@29 ($generated@@31 $generated@@33) $generated@@34))
 :pattern ( ($generated@@24 $generated@@30 $generated@@29 ($generated@@31 $generated@@33) $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ) (! ($generated@@35 $generated@@30 $generated@@29 ($generated@@31 $generated@@36))
 :pattern ( ($generated@@35 $generated@@30 $generated@@29 ($generated@@31 $generated@@36)))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 Int) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or ($generated@@42 $generated@@47 ($generated@@40 $generated@@49) ($generated@@41 $generated@@30 $generated@@50) ($generated@@41 $generated@@30 $generated@@51)) (and (< 3 $generated@@37) (and (and (<= ($generated@@40 0) $generated@@49) ($generated@@35 $generated@@30 $generated@@50 ($generated@@43 $generated@@47))) ($generated@@35 $generated@@30 $generated@@51 ($generated@@31 $generated@@47))))) (and (=> (or (not (= ($generated@@40 $generated@@49) ($generated@@40 0))) (not true)) (and ($generated@@42 $generated@@47 ($generated@@40 (- $generated@@49 1)) ($generated@@41 $generated@@30 $generated@@50) ($generated@@41 $generated@@30 $generated@@51)) ($generated@@44 $generated@@47 ($generated@@41 $generated@@30 $generated@@50) ($generated@@41 $generated@@30 ($generated@@38 $generated@@47 ($generated@@39 $generated@@48) ($generated@@40 (- $generated@@49 1)) ($generated@@41 $generated@@30 $generated@@50) ($generated@@41 $generated@@30 $generated@@51)))))) (= ($generated@@38 $generated@@47 ($generated@@39 $generated@@48) ($generated@@40 $generated@@49) ($generated@@41 $generated@@30 $generated@@50) ($generated@@41 $generated@@30 $generated@@51)) (ite (= ($generated@@40 $generated@@49) ($generated@@40 0)) $generated@@51 ($generated@@45 $generated@@47 ($generated@@39 $generated@@46) ($generated@@41 $generated@@30 $generated@@50) ($generated@@41 $generated@@30 ($generated@@38 $generated@@47 ($generated@@39 $generated@@48) ($generated@@40 (- $generated@@49 1)) ($generated@@41 $generated@@30 $generated@@50) ($generated@@41 $generated@@30 $generated@@51))))))))
 :weight 3
 :pattern ( ($generated@@38 $generated@@47 ($generated@@39 $generated@@48) ($generated@@40 $generated@@49) ($generated@@41 $generated@@30 $generated@@50) ($generated@@41 $generated@@30 $generated@@51)))
))))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 Int) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (and (or ($generated@@42 $generated@@53 $generated@@55 $generated@@56 $generated@@57) (and (< 3 $generated@@37) (and (and (<= ($generated@@40 0) $generated@@55) (and ($generated@@35 $generated@@30 $generated@@56 ($generated@@43 $generated@@53)) ($generated@@24 $generated@@30 $generated@@56 ($generated@@43 $generated@@53) $generated@@52))) (and ($generated@@35 $generated@@30 $generated@@57 ($generated@@31 $generated@@53)) ($generated@@24 $generated@@30 $generated@@57 ($generated@@31 $generated@@53) $generated@@52))))) ($generated@@32 $generated@@52)) ($generated@@24 $generated@@30 ($generated@@38 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57) ($generated@@31 $generated@@53) $generated@@52))
 :pattern ( ($generated@@24 $generated@@30 ($generated@@38 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57) ($generated@@31 $generated@@53) $generated@@52))
))))
(assert (forall (($generated@@58 Int) ) (! (= ($generated@@40 $generated@@58) $generated@@58)
 :pattern ( ($generated@@40 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@41 $generated@@60 $generated@@59) $generated@@59)
 :pattern ( ($generated@@41 $generated@@60 $generated@@59))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 Int) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (or ($generated@@42 $generated@@61 $generated@@63 $generated@@64 $generated@@65) (and (< 3 $generated@@37) (and (and (<= ($generated@@40 0) $generated@@63) ($generated@@35 $generated@@30 $generated@@64 ($generated@@43 $generated@@61))) ($generated@@35 $generated@@30 $generated@@65 ($generated@@31 $generated@@61))))) (and (=> (or (not (= $generated@@63 ($generated@@40 0))) (not true)) (and ($generated@@42 $generated@@61 (- $generated@@63 1) $generated@@64 $generated@@65) ($generated@@44 $generated@@61 $generated@@64 ($generated@@38 $generated@@61 $generated@@62 (- $generated@@63 1) $generated@@64 $generated@@65)))) (= ($generated@@38 $generated@@61 ($generated@@39 $generated@@62) $generated@@63 $generated@@64 $generated@@65) (ite (= $generated@@63 ($generated@@40 0)) $generated@@65 ($generated@@45 $generated@@61 ($generated@@39 $generated@@46) $generated@@64 ($generated@@38 $generated@@61 $generated@@62 (- $generated@@63 1) $generated@@64 $generated@@65))))))
 :pattern ( ($generated@@38 $generated@@61 ($generated@@39 $generated@@62) $generated@@63 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@35 $generated@@30 ($generated@@66 $generated@@69 $generated@@70) ($generated@@31 $generated@@68))  (and ($generated@@67 $generated@@69 $generated@@68) ($generated@@35 $generated@@30 $generated@@70 ($generated@@31 $generated@@68))))
 :pattern ( ($generated@@35 $generated@@30 ($generated@@66 $generated@@69 $generated@@70) ($generated@@31 $generated@@68)))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 $generated@@72) (= ($generated@@28 $generated@@72) $generated@@3))
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@73 $generated@@74) (= ($generated@@28 $generated@@74) $generated@@4))
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@75 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@75 $generated@@78 $generated@@77))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 Int) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@42 $generated@@79 $generated@@81 $generated@@82 $generated@@83) (and (< 3 $generated@@37) (and (and (<= ($generated@@40 0) $generated@@81) ($generated@@35 $generated@@30 $generated@@82 ($generated@@43 $generated@@79))) ($generated@@35 $generated@@30 $generated@@83 ($generated@@31 $generated@@79))))) ($generated@@35 $generated@@30 ($generated@@38 $generated@@79 $generated@@80 $generated@@81 $generated@@82 $generated@@83) ($generated@@31 $generated@@79)))
 :pattern ( ($generated@@38 $generated@@79 $generated@@80 $generated@@81 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@73 $generated@@84) (exists (($generated@@85 T@U) ($generated@@86 T@U) ) (= $generated@@84 ($generated@@66 $generated@@85 $generated@@86))))
 :pattern ( ($generated@@73 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@71 $generated@@87) (= $generated@@87 $generated@@29))
 :pattern ( ($generated@@71 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@35 $generated@@10 $generated@@88 $generated@@25) (<= ($generated@@40 0) ($generated@@15 $generated@@88)))
 :pattern ( ($generated@@35 $generated@@10 $generated@@88 $generated@@25))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@89 ($generated@@76 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@24 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@89 ($generated@@76 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= ($generated@@94 ($generated@@43 $generated@@96)) $generated@@1) (= ($generated@@95 ($generated@@43 $generated@@96)) $generated@@6))
 :pattern ( ($generated@@43 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (!  (and (= ($generated@@94 ($generated@@31 $generated@@97)) $generated@@2) (= ($generated@@95 ($generated@@31 $generated@@97)) $generated@@7))
 :pattern ( ($generated@@31 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@67 $generated@@98 $generated@@25) (and (= ($generated@@76 $generated@@10 ($generated@@75 $generated@@10 $generated@@98)) $generated@@98) ($generated@@35 $generated@@10 ($generated@@75 $generated@@10 $generated@@98) $generated@@25)))
 :pattern ( ($generated@@67 $generated@@98 $generated@@25))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or ($generated@@100 $generated@@101 $generated@@102 $generated@@103) (and (< 1 $generated@@37) (and ($generated@@35 $generated@@30 $generated@@102 ($generated@@43 $generated@@101)) ($generated@@67 $generated@@103 $generated@@101)))) ($generated@@67 ($generated@@99 $generated@@101 $generated@@102 $generated@@103) $generated@@101))
 :pattern ( ($generated@@99 $generated@@101 $generated@@102 $generated@@103))
))))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> ($generated@@35 $generated@@30 $generated@@105 ($generated@@31 $generated@@104)) (or ($generated@@71 $generated@@105) ($generated@@73 $generated@@105)))
 :pattern ( ($generated@@73 $generated@@105) ($generated@@35 $generated@@30 $generated@@105 ($generated@@31 $generated@@104)))
 :pattern ( ($generated@@71 $generated@@105) ($generated@@35 $generated@@30 $generated@@105 ($generated@@31 $generated@@104)))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (and (or ($generated@@100 $generated@@107 $generated@@108 $generated@@109) (and (< 1 $generated@@37) (and (and ($generated@@35 $generated@@30 $generated@@108 ($generated@@43 $generated@@107)) ($generated@@24 $generated@@30 $generated@@108 ($generated@@43 $generated@@107) $generated@@106)) (and ($generated@@67 $generated@@109 $generated@@107) ($generated@@89 $generated@@109 $generated@@107 $generated@@106))))) ($generated@@32 $generated@@106)) ($generated@@89 ($generated@@99 $generated@@107 $generated@@108 $generated@@109) $generated@@107 $generated@@106))
 :pattern ( ($generated@@89 ($generated@@99 $generated@@107 $generated@@108 $generated@@109) $generated@@107 $generated@@106))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@67 ($generated@@76 $generated@@112 $generated@@110) $generated@@111) ($generated@@35 $generated@@112 $generated@@110 $generated@@111))
 :pattern ( ($generated@@67 ($generated@@76 $generated@@112 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@28 ($generated@@66 $generated@@113 $generated@@114)) $generated@@4)
 :pattern ( ($generated@@66 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 ($generated@@66 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@66 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@66 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@66 $generated@@119 $generated@@120))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (or ($generated@@44 $generated@@121 $generated@@123 $generated@@124) (and (< 2 $generated@@37) (and ($generated@@35 $generated@@30 $generated@@123 ($generated@@43 $generated@@121)) ($generated@@35 $generated@@30 $generated@@124 ($generated@@31 $generated@@121))))) ($generated@@35 $generated@@30 ($generated@@45 $generated@@121 $generated@@122 $generated@@123 $generated@@124) ($generated@@31 $generated@@121)))
 :pattern ( ($generated@@45 $generated@@121 $generated@@122 $generated@@123 $generated@@124))
))))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 Int) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or ($generated@@42 $generated@@125 ($generated@@40 $generated@@127) ($generated@@41 $generated@@30 $generated@@128) $generated@@129) (and (< 3 $generated@@37) (and (and (<= ($generated@@40 0) $generated@@127) ($generated@@35 $generated@@30 $generated@@128 ($generated@@43 $generated@@125))) ($generated@@35 $generated@@30 $generated@@129 ($generated@@31 $generated@@125))))) (and (=> (or (not (= ($generated@@40 $generated@@127) ($generated@@40 0))) (not true)) (and ($generated@@42 $generated@@125 ($generated@@40 (- $generated@@127 1)) ($generated@@41 $generated@@30 $generated@@128) $generated@@129) ($generated@@44 $generated@@125 ($generated@@41 $generated@@30 $generated@@128) ($generated@@38 $generated@@125 ($generated@@39 $generated@@126) ($generated@@40 (- $generated@@127 1)) ($generated@@41 $generated@@30 $generated@@128) $generated@@129)))) (= ($generated@@38 $generated@@125 ($generated@@39 $generated@@126) ($generated@@40 $generated@@127) ($generated@@41 $generated@@30 $generated@@128) $generated@@129) (ite (= ($generated@@40 $generated@@127) ($generated@@40 0)) $generated@@129 ($generated@@45 $generated@@125 ($generated@@39 $generated@@46) ($generated@@41 $generated@@30 $generated@@128) ($generated@@38 $generated@@125 ($generated@@39 $generated@@126) ($generated@@40 (- $generated@@127 1)) ($generated@@41 $generated@@30 $generated@@128) $generated@@129))))))
 :weight 3
 :pattern ( ($generated@@38 $generated@@125 ($generated@@39 $generated@@126) ($generated@@40 $generated@@127) ($generated@@41 $generated@@30 $generated@@128) $generated@@129))
))))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@43 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@43 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@31 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@31 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@75 $generated@@135 ($generated@@76 $generated@@135 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@76 $generated@@135 $generated@@134))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (or ($generated@@44 $generated@@136 $generated@@138 $generated@@139) (and (< 2 $generated@@37) (and ($generated@@35 $generated@@30 $generated@@138 ($generated@@43 $generated@@136)) ($generated@@35 $generated@@30 $generated@@139 ($generated@@31 $generated@@136))))) (and (=> (not ($generated@@71 $generated@@139)) (let (($generated@@140 ($generated@@118 $generated@@139)))
(let (($generated@@141 ($generated@@115 $generated@@139)))
 (and ($generated@@100 $generated@@136 $generated@@138 $generated@@141) ($generated@@44 $generated@@136 $generated@@138 $generated@@140))))) (= ($generated@@45 $generated@@136 ($generated@@39 $generated@@137) $generated@@138 $generated@@139) (ite ($generated@@71 $generated@@139) $generated@@29 (let (($generated@@142 ($generated@@118 $generated@@139)))
(let (($generated@@143 ($generated@@115 $generated@@139)))
($generated@@66 ($generated@@99 $generated@@136 $generated@@138 $generated@@143) ($generated@@45 $generated@@136 $generated@@137 $generated@@138 $generated@@142))))))))
 :pattern ( ($generated@@45 $generated@@136 ($generated@@39 $generated@@137) $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and ($generated@@32 $generated@@146) (and ($generated@@73 $generated@@144) ($generated@@24 $generated@@30 $generated@@144 ($generated@@31 $generated@@145) $generated@@146))) ($generated@@89 ($generated@@115 $generated@@144) $generated@@145 $generated@@146))
 :pattern ( ($generated@@89 ($generated@@115 $generated@@144) $generated@@145 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@147 $generated@@158 $generated@@159 $generated@@160 ($generated@@154 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@147 $generated@@165 $generated@@166 $generated@@167 ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@147 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@147 $generated@@174 $generated@@175 $generated@@176 ($generated@@154 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@147 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))) (= ($generated@@8 $generated@@148) 4)) (= ($generated@@8 $generated@@149) 5)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@151 $generated@@183 $generated@@184 ($generated@@155 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@185) $generated@@187) $generated@@185)
 :weight 0
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@192 $generated@@193) (= ($generated@@151 $generated@@188 $generated@@189 ($generated@@155 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@190) $generated@@193) ($generated@@151 $generated@@188 $generated@@189 $generated@@191 $generated@@193)))
 :weight 0
))) (= ($generated@@8 $generated@@152) 6)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@8 ($generated@@153 $generated@@194 $generated@@195)) 7))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@156 ($generated@@153 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@153 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@157 ($generated@@153 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@153 $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@13 ($generated@@147 $generated@@148 $generated@@149 $generated@@9 ($generated@@150 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@204 $generated@@205))  (=> (and (or (not (= $generated@@204 $generated@@200)) (not true)) ($generated@@13 ($generated@@75 $generated@@9 ($generated@@151 $generated@@149 $generated@@152 ($generated@@151 $generated@@148 ($generated@@153 $generated@@149 $generated@@152) $generated@@201 $generated@@204) $generated@@202)))) $generated@@203))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149 $generated@@9 ($generated@@150 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@204 $generated@@205))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (or ($generated@@44 $generated@@207 $generated@@209 $generated@@210) (and (< 2 $generated@@37) (and (and ($generated@@35 $generated@@30 $generated@@209 ($generated@@43 $generated@@207)) ($generated@@24 $generated@@30 $generated@@209 ($generated@@43 $generated@@207) $generated@@206)) (and ($generated@@35 $generated@@30 $generated@@210 ($generated@@31 $generated@@207)) ($generated@@24 $generated@@30 $generated@@210 ($generated@@31 $generated@@207) $generated@@206))))) ($generated@@32 $generated@@206)) ($generated@@24 $generated@@30 ($generated@@45 $generated@@207 $generated@@208 $generated@@209 $generated@@210) ($generated@@31 $generated@@207) $generated@@206))
 :pattern ( ($generated@@24 $generated@@30 ($generated@@45 $generated@@207 $generated@@208 $generated@@209 $generated@@210) ($generated@@31 $generated@@207) $generated@@206))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@45 $generated@@211 ($generated@@39 $generated@@212) $generated@@213 $generated@@214) ($generated@@45 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
 :pattern ( ($generated@@45 $generated@@211 ($generated@@39 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> ($generated@@67 $generated@@216 ($generated@@43 $generated@@215)) (and (= ($generated@@76 $generated@@30 ($generated@@75 $generated@@30 $generated@@216)) $generated@@216) ($generated@@35 $generated@@30 ($generated@@75 $generated@@30 $generated@@216) ($generated@@43 $generated@@215))))
 :pattern ( ($generated@@67 $generated@@216 ($generated@@43 $generated@@215)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> ($generated@@67 $generated@@218 ($generated@@31 $generated@@217)) (and (= ($generated@@76 $generated@@30 ($generated@@75 $generated@@30 $generated@@218)) $generated@@218) ($generated@@35 $generated@@30 ($generated@@75 $generated@@30 $generated@@218) ($generated@@31 $generated@@217))))
 :pattern ( ($generated@@67 $generated@@218 ($generated@@31 $generated@@217)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and ($generated@@32 $generated@@221) (and ($generated@@73 $generated@@219) ($generated@@24 $generated@@30 $generated@@219 ($generated@@31 $generated@@220) $generated@@221))) ($generated@@24 $generated@@30 ($generated@@118 $generated@@219) ($generated@@31 $generated@@220) $generated@@221))
 :pattern ( ($generated@@24 $generated@@30 ($generated@@118 $generated@@219) ($generated@@31 $generated@@220) $generated@@221))
)))
(assert (= ($generated@@94 $generated@@25) $generated@@0))
(assert (= ($generated@@95 $generated@@25) $generated@@5))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Int) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@38 $generated@@222 ($generated@@39 $generated@@223) $generated@@224 $generated@@225 $generated@@226) ($generated@@38 $generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
 :pattern ( ($generated@@38 $generated@@222 ($generated@@39 $generated@@223) $generated@@224 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 Int) ) (! (= ($generated@@76 $generated@@10 ($generated@@14 ($generated@@40 $generated@@227))) ($generated@@41 $generated@@152 ($generated@@76 $generated@@10 ($generated@@14 $generated@@227))))
 :pattern ( ($generated@@76 $generated@@10 ($generated@@14 ($generated@@40 $generated@@227))))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@T) ) (! (= ($generated@@76 $generated@@229 ($generated@@41 $generated@@229 $generated@@228)) ($generated@@41 $generated@@152 ($generated@@76 $generated@@229 $generated@@228)))
 :pattern ( ($generated@@76 $generated@@229 ($generated@@41 $generated@@229 $generated@@228)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> ($generated@@32 $generated@@233) (= ($generated@@24 $generated@@30 ($generated@@66 $generated@@231 $generated@@232) ($generated@@31 $generated@@230) $generated@@233)  (and ($generated@@89 $generated@@231 $generated@@230 $generated@@233) ($generated@@24 $generated@@30 $generated@@232 ($generated@@31 $generated@@230) $generated@@233))))
 :pattern ( ($generated@@24 $generated@@30 ($generated@@66 $generated@@231 $generated@@232) ($generated@@31 $generated@@230) $generated@@233))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () Int)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 (T@U) Int)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@244  (=> (and (or (not (= $generated@@234 ($generated@@40 0))) (not true)) ($generated@@24 $generated@@30 $generated@@235 ($generated@@43 $generated@@236) $generated@@237)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@35 $generated@@10 ($generated@@14 (- $generated@@234 1)) $generated@@25)) (=> ($generated@@35 $generated@@10 ($generated@@14 (- $generated@@234 1)) $generated@@25) (=> (and (and (= $generated@@238 (- $generated@@234 1)) ($generated@@24 $generated@@10 ($generated@@14 $generated@@238) $generated@@25 $generated@@237)) (and ($generated@@24 $generated@@30 $generated@@235 ($generated@@43 $generated@@236) $generated@@237) ($generated@@24 $generated@@30 $generated@@239 ($generated@@31 $generated@@236) $generated@@237))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@234) (= $generated@@238 $generated@@234))) (=> (or (<= 0 $generated@@234) (= $generated@@238 $generated@@234)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< $generated@@238 $generated@@234) (and (= $generated@@238 $generated@@234) (< ($generated@@240 $generated@@235) ($generated@@240 $generated@@235)))))))))))))
(let (($generated@@245 true))
(let (($generated@@246 true))
(let (($generated@@247  (=> (= $generated@@241 ($generated@@150 $generated@@242 $generated@@237 $generated false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@246) (=> (= (ControlFlow 0 7) 2) $generated@@245)) (=> (= (ControlFlow 0 7) 4) $generated@@244)))))
(let (($generated@@248  (=> (and (and (and ($generated@@32 $generated@@237) ($generated@@243 $generated@@237)) (<= ($generated@@40 0) $generated@@234)) (and (and ($generated@@35 $generated@@30 $generated@@235 ($generated@@43 $generated@@236)) ($generated@@35 $generated@@30 $generated@@239 ($generated@@31 $generated@@236))) (and (= 3 $generated@@37) (= (ControlFlow 0 8) 7)))) $generated@@247)))
$generated@@248))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
