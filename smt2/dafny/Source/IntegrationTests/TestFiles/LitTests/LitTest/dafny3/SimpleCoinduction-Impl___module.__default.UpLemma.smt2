(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (Int) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@63 () Int)
(declare-fun $generated@@64 (T@U Int) T@U)
(declare-fun $generated@@65 (Int) Bool)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@T T@T) T@T)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@214 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@27) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (and ($generated@@26 $generated@@27 $generated@@40 ($generated@@28 $generated@@36)) ($generated@@26 $generated@@27 $generated@@41 ($generated@@28 $generated@@37))) (= ($generated@@24 $generated@@36 $generated@@37 $generated@@38 ($generated@@25 $generated@@39) $generated@@40 $generated@@41)  (and (=> (< 0 ($generated@@29 $generated@@38)) (and (and ($generated@@30 $generated@@40) ($generated@@30 $generated@@41)) (=> (and ($generated@@30 $generated@@40) ($generated@@30 $generated@@41)) (and (= ($generated@@31 $generated@@40) ($generated@@31 $generated@@41)) ($generated@@24 $generated@@36 $generated@@37 ($generated@@32 $generated@@38 ($generated@@33 1)) $generated@@39 ($generated@@34 $generated@@40) ($generated@@34 $generated@@41)))))) (=> (and (or (not (= $generated@@38 ($generated@@33 0))) (not true)) (= ($generated@@29 $generated@@38) 0)) ($generated@@35 $generated@@36 $generated@@37 $generated@@39 $generated@@40 $generated@@41)))))
 :pattern ( ($generated@@24 $generated@@36 $generated@@37 $generated@@38 ($generated@@25 $generated@@39) $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (or (not (= $generated@@44 ($generated@@33 0))) (not true)) (= ($generated@@24 $generated@@42 $generated@@43 $generated@@44 ($generated@@25 $generated@@45) $generated@@46 $generated@@47) ($generated@@24 $generated@@42 $generated@@43 $generated@@44 $generated@@45 $generated@@46 $generated@@47)))
 :pattern ( ($generated@@24 $generated@@42 $generated@@43 $generated@@44 ($generated@@25 $generated@@45) $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (and ($generated@@48 $generated@@49 $generated@@50) ($generated@@48 $generated@@50 $generated@@51)) ($generated@@48 $generated@@49 $generated@@51))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50) ($generated@@48 $generated@@50 $generated@@51))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50) ($generated@@48 $generated@@49 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 Int) ($generated@@54 Int) ) (!  (=> (and (and (<= 0 $generated@@53) (<= 0 $generated@@54)) (<= (+ $generated@@53 $generated@@54) ($generated@@29 $generated@@52))) (= ($generated@@32 ($generated@@32 $generated@@52 ($generated@@33 $generated@@53)) ($generated@@33 $generated@@54)) ($generated@@32 $generated@@52 ($generated@@33 (+ $generated@@53 $generated@@54)))))
 :pattern ( ($generated@@32 ($generated@@32 $generated@@52 ($generated@@33 $generated@@53)) ($generated@@33 $generated@@54)))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@56 ($generated@@28 $generated@@55)) ($generated@@30 $generated@@56))
 :pattern ( ($generated@@30 $generated@@56) ($generated@@26 $generated@@27 $generated@@56 ($generated@@28 $generated@@55)))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (= $generated@@61 $generated@@62) ($generated@@24 $generated@@57 $generated@@58 $generated@@59 ($generated@@25 $generated@@60) $generated@@61 $generated@@62))
 :pattern ( ($generated@@24 $generated@@57 $generated@@58 $generated@@59 ($generated@@25 $generated@@60) $generated@@61 $generated@@62))
)))
(assert  (=> (<= 1 $generated@@63) (forall (($generated@@66 T@U) ($generated@@67 Int) ) (!  (=> (or ($generated@@65 $generated@@67) (< 1 $generated@@63)) ($generated@@26 $generated@@27 ($generated@@64 $generated@@66 $generated@@67) ($generated@@28 $generated)))
 :pattern ( ($generated@@64 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@35 $generated@@68 $generated@@69 ($generated@@25 $generated@@70) $generated@@71 $generated@@72) (= $generated@@71 $generated@@72))
 :pattern ( ($generated@@35 $generated@@68 $generated@@69 ($generated@@25 $generated@@70) $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 Int) ) (! (= ($generated@@73 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@78 $generated@@81 $generated@@82) ($generated@@28 $generated@@80))  (and ($generated@@79 $generated@@81 $generated@@80) ($generated@@26 $generated@@27 $generated@@82 ($generated@@28 $generated@@80))))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@78 $generated@@81 $generated@@82) ($generated@@28 $generated@@80)))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@30 $generated@@84) (= ($generated@@83 $generated@@84) $generated@@4))
 :pattern ( ($generated@@30 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 ($generated@@85 $generated@@88 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@85 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@30 $generated@@89) (exists (($generated@@90 T@U) ($generated@@91 T@U) ) (= $generated@@89 ($generated@@78 $generated@@90 $generated@@91))))
 :pattern ( ($generated@@30 $generated@@89))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@26 $generated@@9 $generated@@93 $generated@@92) (<= ($generated@@73 0) ($generated@@14 $generated@@93)))
 :pattern ( ($generated@@26 $generated@@9 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and ($generated@@26 $generated@@27 $generated@@97 ($generated@@28 $generated@@94)) ($generated@@26 $generated@@27 $generated@@98 ($generated@@28 $generated@@95))) (= ($generated@@35 $generated@@94 $generated@@95 ($generated@@25 $generated@@96) $generated@@97 $generated@@98)  (and (and ($generated@@30 $generated@@97) ($generated@@30 $generated@@98)) (=> (and ($generated@@30 $generated@@97) ($generated@@30 $generated@@98)) (and (= ($generated@@31 $generated@@97) ($generated@@31 $generated@@98)) ($generated@@35 $generated@@94 $generated@@95 $generated@@96 ($generated@@34 $generated@@97) ($generated@@34 $generated@@98)))))))
 :pattern ( ($generated@@35 $generated@@94 $generated@@95 ($generated@@25 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (!  (and (= ($generated@@23 ($generated@@28 $generated@@100)) $generated@@3) (= ($generated@@99 ($generated@@28 $generated@@100)) $generated@@6))
 :pattern ( ($generated@@28 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@101 $generated@@103) (<= ($generated@@29 $generated@@103) ($generated@@29 $generated@@102))) (and (= ($generated@@101 ($generated@@32 $generated@@102 $generated@@103)) ($generated@@101 $generated@@102)) (= ($generated@@29 ($generated@@32 $generated@@102 $generated@@103)) (- ($generated@@29 $generated@@102) ($generated@@29 $generated@@103)))))
 :pattern ( ($generated@@32 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 Int) ) (!  (=> (<= 0 $generated@@104) (and ($generated@@101 ($generated@@33 $generated@@104)) (= ($generated@@29 ($generated@@33 $generated@@104)) $generated@@104)))
 :pattern ( ($generated@@33 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@79 $generated@@105 $generated@@92) (and (= ($generated@@86 $generated@@9 ($generated@@85 $generated@@9 $generated@@105)) $generated@@105) ($generated@@26 $generated@@9 ($generated@@85 $generated@@9 $generated@@105) $generated@@92)))
 :pattern ( ($generated@@79 $generated@@105 $generated@@92))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (or ($generated@@48 $generated@@106 $generated@@107) (= $generated@@106 $generated@@107)) ($generated@@48 $generated@@107 $generated@@106))
 :pattern ( ($generated@@48 $generated@@106 $generated@@107) ($generated@@48 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@79 $generated@@108 $generated) (and (= ($generated@@86 $generated@@9 ($generated@@85 $generated@@9 $generated@@108)) $generated@@108) ($generated@@26 $generated@@9 ($generated@@85 $generated@@9 $generated@@108) $generated)))
 :pattern ( ($generated@@79 $generated@@108 $generated))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@79 ($generated@@86 $generated@@111 $generated@@109) $generated@@110) ($generated@@26 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@79 ($generated@@86 $generated@@111 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (<= 0 ($generated@@29 $generated@@112))
 :pattern ( ($generated@@29 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@83 ($generated@@78 $generated@@113 $generated@@114)) $generated@@4)
 :pattern ( ($generated@@78 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@31 ($generated@@78 $generated@@115 $generated@@116)) $generated@@115)
 :pattern ( ($generated@@78 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@34 ($generated@@78 $generated@@117 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@78 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@28 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@28 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@85 $generated@@122 ($generated@@86 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@86 $generated@@122 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (and (and (and (=> ($generated@@48 $generated@@123 $generated@@124) (or (not (= $generated@@123 $generated@@124)) (not true))) (=> (and ($generated@@101 $generated@@123) (not ($generated@@101 $generated@@124))) ($generated@@48 $generated@@123 $generated@@124))) (=> (and ($generated@@101 $generated@@123) ($generated@@101 $generated@@124)) (= ($generated@@48 $generated@@123 $generated@@124) (< ($generated@@29 $generated@@123) ($generated@@29 $generated@@124))))) (=> (and ($generated@@48 $generated@@123 $generated@@124) ($generated@@101 $generated@@124)) ($generated@@101 $generated@@123)))
 :pattern ( ($generated@@48 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 Int) ) (! (= ($generated@@64 ($generated@@25 $generated@@125) $generated@@126) ($generated@@64 $generated@@125 $generated@@126))
 :pattern ( ($generated@@64 ($generated@@25 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@127 ($generated@@25 $generated@@128) $generated@@129) ($generated@@127 $generated@@128 $generated@@129))
 :pattern ( ($generated@@127 ($generated@@25 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@35 $generated@@130 $generated@@131 ($generated@@25 $generated@@132) $generated@@133 $generated@@134) (forall (($generated@@135 T@U) ) (! ($generated@@24 $generated@@130 $generated@@131 $generated@@135 ($generated@@25 $generated@@132) $generated@@133 $generated@@134)
 :pattern ( ($generated@@24 $generated@@130 $generated@@131 $generated@@135 ($generated@@25 $generated@@132) $generated@@133 $generated@@134))
)))
 :pattern ( ($generated@@35 $generated@@130 $generated@@131 ($generated@@25 $generated@@132) $generated@@133 $generated@@134))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@136 $generated@@147 $generated@@148 $generated@@149 ($generated@@143 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@136 $generated@@154 $generated@@155 $generated@@156 ($generated@@143 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@136 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@136 $generated@@163 $generated@@164 $generated@@165 ($generated@@143 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@136 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (= ($generated@@7 $generated@@137) 4)) (= ($generated@@7 $generated@@138) 5)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@140 $generated@@172 $generated@@173 ($generated@@144 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@176) $generated@@174)
 :weight 0
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@181 $generated@@182) (= ($generated@@140 $generated@@177 $generated@@178 ($generated@@144 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@179) $generated@@182) ($generated@@140 $generated@@177 $generated@@178 $generated@@180 $generated@@182)))
 :weight 0
))) (= ($generated@@7 $generated@@141) 6)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@7 ($generated@@142 $generated@@183 $generated@@184)) 7))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@145 ($generated@@142 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@142 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@146 ($generated@@142 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@142 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Bool) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@12 ($generated@@136 $generated@@137 $generated@@138 $generated@@8 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))  (=> (and (or (not (= $generated@@193 $generated@@189)) (not true)) ($generated@@12 ($generated@@85 $generated@@8 ($generated@@140 $generated@@138 $generated@@141 ($generated@@140 $generated@@137 ($generated@@142 $generated@@138 $generated@@141) $generated@@190 $generated@@193) $generated@@191)))) $generated@@192))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138 $generated@@8 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@79 $generated@@196 ($generated@@28 $generated@@195)) (and (= ($generated@@86 $generated@@27 ($generated@@85 $generated@@27 $generated@@196)) $generated@@196) ($generated@@26 $generated@@27 ($generated@@85 $generated@@27 $generated@@196) ($generated@@28 $generated@@195))))
 :pattern ( ($generated@@79 $generated@@196 ($generated@@28 $generated@@195)))
)))
(assert  (=> (<= 1 $generated@@63) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (or ($generated@@65 $generated@@198) (< 1 $generated@@63)) (and ($generated@@65 (+ $generated@@198 1)) (= ($generated@@64 ($generated@@25 $generated@@197) $generated@@198) ($generated@@78 ($generated@@86 $generated@@9 ($generated@@13 $generated@@198)) ($generated@@64 $generated@@197 (+ $generated@@198 1))))))
 :pattern ( ($generated@@64 ($generated@@25 $generated@@197) $generated@@198))
))))
(assert (forall (($generated@@199 T@U) ) (!  (=> ($generated@@101 $generated@@199) (= $generated@@199 ($generated@@33 ($generated@@29 $generated@@199))))
 :pattern ( ($generated@@29 $generated@@199))
 :pattern ( ($generated@@101 $generated@@199))
)))
(assert (= ($generated@@23 $generated@@92) $generated@@2))
(assert (= ($generated@@99 $generated@@92) $generated@@5))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@101 $generated@@201) (<= ($generated@@29 $generated@@201) ($generated@@29 $generated@@200))) (or (and (= $generated@@201 ($generated@@33 0)) (= ($generated@@32 $generated@@200 $generated@@201) $generated@@200)) (and (or (not (= $generated@@201 ($generated@@33 0))) (not true)) ($generated@@48 ($generated@@32 $generated@@200 $generated@@201) $generated@@200))))
 :pattern ( ($generated@@32 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and ($generated@@48 $generated@@204 $generated@@208) ($generated@@24 $generated@@202 $generated@@203 $generated@@208 ($generated@@25 $generated@@205) $generated@@206 $generated@@207)) ($generated@@24 $generated@@202 $generated@@203 $generated@@204 ($generated@@25 $generated@@205) $generated@@206 $generated@@207))
 :pattern ( ($generated@@24 $generated@@202 $generated@@203 $generated@@204 ($generated@@25 $generated@@205) $generated@@206 $generated@@207) ($generated@@24 $generated@@202 $generated@@203 $generated@@208 ($generated@@25 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (= ($generated@@35 $generated@@209 $generated@@210 ($generated@@25 $generated@@211) $generated@@212 $generated@@213) ($generated@@35 $generated@@209 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
 :pattern ( ($generated@@35 $generated@@209 $generated@@210 ($generated@@25 $generated@@211) $generated@@212 $generated@@213))
)))
(assert  (=> (<= 1 $generated@@63) (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (or ($generated@@214 $generated@@216) (and (< 1 $generated@@63) ($generated@@26 $generated@@27 $generated@@216 ($generated@@28 $generated)))) (and (and ($generated@@30 $generated@@216) (and ($generated@@30 $generated@@216) ($generated@@214 ($generated@@34 $generated@@216)))) (= ($generated@@127 ($generated@@25 $generated@@215) $generated@@216) ($generated@@78 ($generated@@86 $generated@@9 ($generated@@13 (+ ($generated@@14 ($generated@@85 $generated@@9 ($generated@@31 $generated@@216))) 1))) ($generated@@127 $generated@@215 ($generated@@34 $generated@@216))))))
 :pattern ( ($generated@@127 ($generated@@25 $generated@@215) $generated@@216))
))))
(assert (forall (($generated@@217 Int) ) (! (= ($generated@@86 $generated@@9 ($generated@@13 ($generated@@73 $generated@@217))) ($generated@@75 $generated@@141 ($generated@@86 $generated@@9 ($generated@@13 $generated@@217))))
 :pattern ( ($generated@@86 $generated@@9 ($generated@@13 ($generated@@73 $generated@@217))))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@T) ) (! (= ($generated@@86 $generated@@219 ($generated@@75 $generated@@219 $generated@@218)) ($generated@@75 $generated@@141 ($generated@@86 $generated@@219 $generated@@218)))
 :pattern ( ($generated@@86 $generated@@219 ($generated@@75 $generated@@219 $generated@@218)))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (forall (($generated@@225 Int) ) (!  (=> (<= 0 $generated@@225) ($generated@@24 $generated@@220 $generated@@221 ($generated@@33 $generated@@225) ($generated@@25 $generated@@222) $generated@@223 $generated@@224))
 :pattern ( ($generated@@24 $generated@@220 $generated@@221 ($generated@@33 $generated@@225) ($generated@@25 $generated@@222) $generated@@223 $generated@@224))
)) ($generated@@35 $generated@@220 $generated@@221 ($generated@@25 $generated@@222) $generated@@223 $generated@@224))
 :pattern ( ($generated@@35 $generated@@220 $generated@@221 ($generated@@25 $generated@@222) $generated@@223 $generated@@224))
)))
(assert  (=> (<= 1 $generated@@63) (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (or ($generated@@214 $generated@@227) (and (< 1 $generated@@63) ($generated@@26 $generated@@27 $generated@@227 ($generated@@28 $generated)))) ($generated@@26 $generated@@27 ($generated@@127 $generated@@226 $generated@@227) ($generated@@28 $generated)))
 :pattern ( ($generated@@127 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ) (! ($generated@@26 $generated@@9 $generated@@228 $generated)
 :pattern ( ($generated@@26 $generated@@9 $generated@@228 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () Int)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@240  (=> (= (ControlFlow 0 2) (- 0 1)) (or ($generated@@24 $generated $generated ($generated@@33 $generated@@229) ($generated@@25 ($generated@@25 $generated@@230)) ($generated@@127 ($generated@@25 $generated@@230) ($generated@@64 ($generated@@25 $generated@@230) $generated@@231)) ($generated@@64 ($generated@@25 $generated@@230) (+ $generated@@231 1))) (=> (< 0 $generated@@229) (=> ($generated@@30 ($generated@@127 ($generated@@25 ($generated@@25 $generated@@230)) ($generated@@64 ($generated@@25 ($generated@@25 $generated@@230)) $generated@@231))) (and ($generated@@30 ($generated@@64 ($generated@@25 ($generated@@25 $generated@@230)) (+ $generated@@231 1))) (and (= ($generated@@14 ($generated@@85 $generated@@9 ($generated@@31 ($generated@@127 ($generated@@25 ($generated@@25 $generated@@230)) ($generated@@64 ($generated@@25 ($generated@@25 $generated@@230)) $generated@@231))))) ($generated@@14 ($generated@@85 $generated@@9 ($generated@@31 ($generated@@64 ($generated@@25 ($generated@@25 $generated@@230)) (+ $generated@@231 1)))))) ($generated@@24 $generated $generated ($generated@@33 (- $generated@@229 1)) ($generated@@25 ($generated@@25 $generated@@230)) ($generated@@34 ($generated@@127 ($generated@@25 ($generated@@25 $generated@@230)) ($generated@@64 ($generated@@25 ($generated@@25 $generated@@230)) $generated@@231))) ($generated@@34 ($generated@@64 ($generated@@25 ($generated@@25 $generated@@230)) (+ $generated@@231 1))))))))))))
(let (($generated@@241  (=> (and (= $generated@@229 0) (= (ControlFlow 0 8) 2)) $generated@@240)))
(let (($generated@@242  (=> (or (not (= $generated@@229 0)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 7)) ($generated@@26 $generated@@9 ($generated@@13 (- $generated@@229 1)) $generated@@92)) (=> ($generated@@26 $generated@@9 ($generated@@13 (- $generated@@229 1)) $generated@@92) (=> (and (= $generated@@232 (- $generated@@229 1)) (= $generated@@233 (+ $generated@@231 1))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (<= 0 $generated@@229) (= $generated@@232 $generated@@229))) (=> (or (<= 0 $generated@@229) (= $generated@@232 $generated@@229)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (or (<= 0 $generated@@231) (< $generated@@232 $generated@@229)) (= $generated@@233 $generated@@231))) (=> (or (or (<= 0 $generated@@231) (< $generated@@232 $generated@@229)) (= $generated@@233 $generated@@231)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (< $generated@@232 $generated@@229) (and (= $generated@@232 $generated@@229) (< $generated@@233 $generated@@231)))) (=> (or (< $generated@@232 $generated@@229) (and (= $generated@@232 $generated@@229) (< $generated@@233 $generated@@231))) (=> (and ($generated@@234 $generated@@235) ($generated@@236 $generated@@235)) (=> (and (and (and (and ($generated@@65 $generated@@233) ($generated@@214 ($generated@@64 ($generated@@25 $generated@@230) $generated@@233))) ($generated@@65 (+ $generated@@233 1))) ($generated@@24 $generated $generated ($generated@@33 $generated@@232) ($generated@@25 ($generated@@25 $generated@@230)) ($generated@@127 ($generated@@25 $generated@@230) ($generated@@64 ($generated@@25 $generated@@230) $generated@@233)) ($generated@@64 ($generated@@25 $generated@@230) (+ $generated@@233 1)))) (and (= $generated@@237 $generated@@235) (= (ControlFlow 0 3) 2))) $generated@@240))))))))))))))
(let (($generated@@243  (=> (= $generated@@238 ($generated@@139 $generated@@239 $generated@@237 $generated@@1 false)) (and (=> (= (ControlFlow 0 9) 3) $generated@@242) (=> (= (ControlFlow 0 9) 8) $generated@@241)))))
(let (($generated@@244  (=> (and (and (and ($generated@@234 $generated@@237) ($generated@@236 $generated@@237)) (<= ($generated@@73 0) $generated@@229)) (and (= 2 $generated@@63) (= (ControlFlow 0 10) 9))) $generated@@243)))
$generated@@244))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
