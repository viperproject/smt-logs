(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (Int) T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@59 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@T T@U T@U) Bool)
(declare-fun $generated@@67 (Int) Int)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) Bool)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@116 (T@U) Bool)
(declare-fun $generated@@122 () Int)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@127 (T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@187 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 () T@T)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@192 () T@T)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (or (not (= $generated@@27 ($generated@@24 0))) (not true)) (= ($generated@@22 $generated@@25 $generated@@26 $generated@@27 ($generated@@23 $generated@@28) $generated@@29 $generated@@30) ($generated@@22 $generated@@25 $generated@@26 $generated@@27 $generated@@28 $generated@@29 $generated@@30)))
 :pattern ( ($generated@@22 $generated@@25 $generated@@26 $generated@@27 ($generated@@23 $generated@@28) $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and ($generated@@31 $generated@@32 $generated@@33) ($generated@@31 $generated@@33 $generated@@34)) ($generated@@31 $generated@@32 $generated@@34))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33) ($generated@@31 $generated@@33 $generated@@34))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33) ($generated@@31 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! ($generated@@35 $generated@@8 $generated@@37 $generated@@36 $generated@@38)
 :pattern ( ($generated@@35 $generated@@8 $generated@@37 $generated@@36 $generated@@38))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 Int) ($generated@@43 Int) ) (!  (=> (and (and (<= 0 $generated@@42) (<= 0 $generated@@43)) (<= (+ $generated@@42 $generated@@43) ($generated@@40 $generated@@41))) (= ($generated@@39 ($generated@@39 $generated@@41 ($generated@@24 $generated@@42)) ($generated@@24 $generated@@43)) ($generated@@39 $generated@@41 ($generated@@24 (+ $generated@@42 $generated@@43)))))
 :pattern ( ($generated@@39 ($generated@@39 $generated@@41 ($generated@@24 $generated@@42)) ($generated@@24 $generated@@43)))
)))
(assert ($generated@@44 $generated@@45))
(assert (= ($generated@@46 $generated@@47) $generated@@2))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (= $generated@@52 $generated@@53) ($generated@@22 $generated@@48 $generated@@49 $generated@@50 ($generated@@23 $generated@@51) $generated@@52 $generated@@53))
 :pattern ( ($generated@@22 $generated@@48 $generated@@49 $generated@@50 ($generated@@23 $generated@@51) $generated@@52 $generated@@53))
)))
(assert (= ($generated@@6 $generated@@54) 3))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> ($generated@@56 $generated@@58) ($generated@@35 $generated@@54 $generated@@47 ($generated@@55 $generated@@57) $generated@@58))
 :pattern ( ($generated@@35 $generated@@54 $generated@@47 ($generated@@55 $generated@@57) $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@59 $generated@@60 $generated@@61 ($generated@@23 $generated@@62) $generated@@63 $generated@@64) (= $generated@@63 $generated@@64))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61 ($generated@@23 $generated@@62) $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! ($generated@@65 $generated@@54 $generated@@47 ($generated@@55 $generated@@66))
 :pattern ( ($generated@@65 $generated@@54 $generated@@47 ($generated@@55 $generated@@66)))
)))
(assert (forall (($generated@@68 Int) ) (! (= ($generated@@67 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 $generated@@70) $generated@@70)
 :pattern ( ($generated@@69 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@65 $generated@@54 ($generated@@72 $generated@@75 $generated@@76) ($generated@@55 $generated@@74))  (and ($generated@@73 $generated@@75 $generated@@74) ($generated@@65 $generated@@54 $generated@@76 ($generated@@55 $generated@@74))))
 :pattern ( ($generated@@65 $generated@@54 ($generated@@72 $generated@@75 $generated@@76) ($generated@@55 $generated@@74)))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@77 $generated@@78) (= ($generated@@46 $generated@@78) $generated@@2))
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@79 $generated@@80) (= ($generated@@46 $generated@@80) $generated@@3))
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@81 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@81 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@79 $generated@@85) (exists (($generated@@86 T@U) ($generated@@87 T@U) ) (= $generated@@85 ($generated@@72 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@79 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@77 $generated@@88) (= $generated@@88 $generated@@47))
 :pattern ( ($generated@@77 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and ($generated@@65 $generated@@54 $generated@@95 ($generated@@55 $generated@@91)) ($generated@@65 $generated@@54 $generated@@96 ($generated@@55 $generated@@92))) (= ($generated@@22 $generated@@91 $generated@@92 $generated@@93 ($generated@@23 $generated@@94) $generated@@95 $generated@@96)  (and (=> (< 0 ($generated@@40 $generated@@93)) (or (and ($generated@@77 $generated@@95) ($generated@@77 $generated@@96)) (and (and ($generated@@79 $generated@@95) ($generated@@79 $generated@@96)) (=> (and ($generated@@79 $generated@@95) ($generated@@79 $generated@@96)) (and (= ($generated@@89 $generated@@95) ($generated@@89 $generated@@96)) ($generated@@22 $generated@@91 $generated@@92 ($generated@@39 $generated@@93 ($generated@@24 1)) $generated@@94 ($generated@@90 $generated@@95) ($generated@@90 $generated@@96))))))) (=> (and (or (not (= $generated@@93 ($generated@@24 0))) (not true)) (= ($generated@@40 $generated@@93) 0)) ($generated@@59 $generated@@91 $generated@@92 $generated@@94 $generated@@95 $generated@@96)))))
 :pattern ( ($generated@@22 $generated@@91 $generated@@92 $generated@@93 ($generated@@23 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@65 $generated@@8 $generated@@97 $generated@@36) (<= ($generated@@67 0) ($generated@@13 $generated@@97)))
 :pattern ( ($generated@@65 $generated@@8 $generated@@97 $generated@@36))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@98 ($generated@@82 $generated@@102 $generated@@99) $generated@@100 $generated@@101) ($generated@@35 $generated@@102 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@98 ($generated@@82 $generated@@102 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@103 ($generated@@55 $generated@@105)) $generated@@1) (= ($generated@@104 ($generated@@55 $generated@@105)) $generated@@5))
 :pattern ( ($generated@@55 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and ($generated@@106 $generated@@108) (<= ($generated@@40 $generated@@108) ($generated@@40 $generated@@107))) (and (= ($generated@@106 ($generated@@39 $generated@@107 $generated@@108)) ($generated@@106 $generated@@107)) (= ($generated@@40 ($generated@@39 $generated@@107 $generated@@108)) (- ($generated@@40 $generated@@107) ($generated@@40 $generated@@108)))))
 :pattern ( ($generated@@39 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 Int) ) (!  (=> (<= 0 $generated@@109) (and ($generated@@106 ($generated@@24 $generated@@109)) (= ($generated@@40 ($generated@@24 $generated@@109)) $generated@@109)))
 :pattern ( ($generated@@24 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@73 $generated@@110 $generated@@36) (and (= ($generated@@82 $generated@@8 ($generated@@81 $generated@@8 $generated@@110)) $generated@@110) ($generated@@65 $generated@@8 ($generated@@81 $generated@@8 $generated@@110) $generated@@36)))
 :pattern ( ($generated@@73 $generated@@110 $generated@@36))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and ($generated@@65 $generated@@54 $generated@@114 ($generated@@55 $generated@@111)) ($generated@@65 $generated@@54 $generated@@115 ($generated@@55 $generated@@112))) (= ($generated@@59 $generated@@111 $generated@@112 ($generated@@23 $generated@@113) $generated@@114 $generated@@115)  (or (and ($generated@@77 $generated@@114) ($generated@@77 $generated@@115)) (and (and ($generated@@79 $generated@@114) ($generated@@79 $generated@@115)) (=> (and ($generated@@79 $generated@@114) ($generated@@79 $generated@@115)) (and (= ($generated@@89 $generated@@114) ($generated@@89 $generated@@115)) ($generated@@59 $generated@@111 $generated@@112 $generated@@113 ($generated@@90 $generated@@114) ($generated@@90 $generated@@115))))))))
 :pattern ( ($generated@@59 $generated@@111 $generated@@112 ($generated@@23 $generated@@113) $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@116 $generated@@117) (or ($generated@@77 $generated@@117) ($generated@@79 $generated@@117)))
 :pattern ( ($generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (or ($generated@@31 $generated@@118 $generated@@119) (= $generated@@118 $generated@@119)) ($generated@@31 $generated@@119 $generated@@118))
 :pattern ( ($generated@@31 $generated@@118 $generated@@119) ($generated@@31 $generated@@119 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> ($generated@@65 $generated@@54 $generated@@121 ($generated@@55 $generated@@120)) (or ($generated@@77 $generated@@121) ($generated@@79 $generated@@121)))
 :pattern ( ($generated@@79 $generated@@121) ($generated@@65 $generated@@54 $generated@@121 ($generated@@55 $generated@@120)))
 :pattern ( ($generated@@77 $generated@@121) ($generated@@65 $generated@@54 $generated@@121 ($generated@@55 $generated@@120)))
)))
(assert  (=> (<= 0 $generated@@122) (forall (($generated@@125 T@U) ) (!  (=> (or ($generated@@124 $generated@@125) (and (< 0 $generated@@122) ($generated@@73 $generated@@125 $generated@@45))) ($generated@@73 ($generated@@123 $generated@@125) $generated@@45))
 :pattern ( ($generated@@123 $generated@@125))
))))
(assert  (=> (<= 0 $generated@@122) (forall (($generated@@128 T@U) ) (!  (=> (or ($generated@@127 $generated@@128) (and (< 0 $generated@@122) ($generated@@73 $generated@@128 $generated@@45))) ($generated@@73 ($generated@@126 $generated@@128) $generated@@45))
 :pattern ( ($generated@@126 $generated@@128))
))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@73 ($generated@@82 $generated@@131 $generated@@129) $generated@@130) ($generated@@65 $generated@@131 $generated@@129 $generated@@130))
 :pattern ( ($generated@@73 ($generated@@82 $generated@@131 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (<= 0 ($generated@@40 $generated@@132))
 :pattern ( ($generated@@40 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@44 $generated@@133) (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@73 $generated@@135 $generated@@133) ($generated@@98 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@98 $generated@@135 $generated@@133 $generated@@134))
)))
 :pattern ( ($generated@@44 $generated@@133))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@46 ($generated@@72 $generated@@136 $generated@@137)) $generated@@3)
 :pattern ( ($generated@@72 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@89 ($generated@@72 $generated@@138 $generated@@139)) $generated@@138)
 :pattern ( ($generated@@72 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@90 ($generated@@72 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@72 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@55 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@55 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@81 $generated@@145 ($generated@@82 $generated@@145 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@82 $generated@@145 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (and (and (and (=> ($generated@@31 $generated@@146 $generated@@147) (or (not (= $generated@@146 $generated@@147)) (not true))) (=> (and ($generated@@106 $generated@@146) (not ($generated@@106 $generated@@147))) ($generated@@31 $generated@@146 $generated@@147))) (=> (and ($generated@@106 $generated@@146) ($generated@@106 $generated@@147)) (= ($generated@@31 $generated@@146 $generated@@147) (< ($generated@@40 $generated@@146) ($generated@@40 $generated@@147))))) (=> (and ($generated@@31 $generated@@146 $generated@@147) ($generated@@106 $generated@@147)) ($generated@@106 $generated@@146)))
 :pattern ( ($generated@@31 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@148 ($generated@@23 $generated@@149) $generated@@150) ($generated@@148 $generated@@149 $generated@@150))
 :pattern ( ($generated@@148 ($generated@@23 $generated@@149) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@151 ($generated@@23 $generated@@152) $generated@@153) ($generated@@151 $generated@@152 $generated@@153))
 :pattern ( ($generated@@151 ($generated@@23 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@154 ($generated@@23 $generated@@155) $generated@@156) ($generated@@154 $generated@@155 $generated@@156))
 :pattern ( ($generated@@154 ($generated@@23 $generated@@155) $generated@@156))
)))
(assert  (=> (<= 1 $generated@@122) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or ($generated@@157 $generated@@159) (and (< 1 $generated@@122) ($generated@@65 $generated@@54 $generated@@159 ($generated@@55 $generated@@45)))) (and (=> (not ($generated@@77 $generated@@159)) (let (($generated@@160 ($generated@@90 $generated@@159)))
(let (($generated@@161 ($generated@@89 $generated@@159)))
 (and (and ($generated@@127 $generated@@161) ($generated@@124 ($generated@@126 $generated@@161))) ($generated@@157 $generated@@160))))) (= ($generated@@154 ($generated@@23 $generated@@158) $generated@@159) (ite ($generated@@77 $generated@@159) $generated@@47 (let (($generated@@162 ($generated@@90 $generated@@159)))
(let (($generated@@163 ($generated@@89 $generated@@159)))
($generated@@72 ($generated@@123 ($generated@@126 $generated@@163)) ($generated@@154 $generated@@158 $generated@@162))))))))
 :pattern ( ($generated@@154 ($generated@@23 $generated@@158) $generated@@159))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@59 $generated@@164 $generated@@165 ($generated@@23 $generated@@166) $generated@@167 $generated@@168) (forall (($generated@@169 T@U) ) (! ($generated@@22 $generated@@164 $generated@@165 $generated@@169 ($generated@@23 $generated@@166) $generated@@167 $generated@@168)
 :pattern ( ($generated@@22 $generated@@164 $generated@@165 $generated@@169 ($generated@@23 $generated@@166) $generated@@167 $generated@@168))
)))
 :pattern ( ($generated@@59 $generated@@164 $generated@@165 ($generated@@23 $generated@@166) $generated@@167 $generated@@168))
)))
(assert  (=> (<= 1 $generated@@122) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (or ($generated@@170 $generated@@172) (and (< 1 $generated@@122) ($generated@@65 $generated@@54 $generated@@172 ($generated@@55 $generated@@45)))) (and (=> (not ($generated@@77 $generated@@172)) (let (($generated@@173 ($generated@@90 $generated@@172)))
(let (($generated@@174 ($generated@@89 $generated@@172)))
 (and ($generated@@124 $generated@@174) ($generated@@170 $generated@@173))))) (= ($generated@@148 ($generated@@23 $generated@@171) $generated@@172) (ite ($generated@@77 $generated@@172) $generated@@47 (let (($generated@@175 ($generated@@90 $generated@@172)))
(let (($generated@@176 ($generated@@89 $generated@@172)))
($generated@@72 ($generated@@123 $generated@@176) ($generated@@148 $generated@@171 $generated@@175))))))))
 :pattern ( ($generated@@148 ($generated@@23 $generated@@171) $generated@@172))
))))
(assert  (=> (<= 1 $generated@@122) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (or ($generated@@177 $generated@@179) (and (< 1 $generated@@122) ($generated@@65 $generated@@54 $generated@@179 ($generated@@55 $generated@@45)))) (and (=> (not ($generated@@77 $generated@@179)) (let (($generated@@180 ($generated@@90 $generated@@179)))
(let (($generated@@181 ($generated@@89 $generated@@179)))
 (and ($generated@@127 $generated@@181) ($generated@@177 $generated@@180))))) (= ($generated@@151 ($generated@@23 $generated@@178) $generated@@179) (ite ($generated@@77 $generated@@179) $generated@@47 (let (($generated@@182 ($generated@@90 $generated@@179)))
(let (($generated@@183 ($generated@@89 $generated@@179)))
($generated@@72 ($generated@@126 $generated@@183) ($generated@@151 $generated@@178 $generated@@182))))))))
 :pattern ( ($generated@@151 ($generated@@23 $generated@@178) $generated@@179))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and ($generated@@56 $generated@@186) (and ($generated@@79 $generated@@184) ($generated@@35 $generated@@54 $generated@@184 ($generated@@55 $generated@@185) $generated@@186))) ($generated@@98 ($generated@@89 $generated@@184) $generated@@185 $generated@@186))
 :pattern ( ($generated@@98 ($generated@@89 $generated@@184) $generated@@185 $generated@@186))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@T) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@187 $generated@@198 $generated@@199 $generated@@200 ($generated@@194 $generated@@198 $generated@@199 $generated@@200 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@203 $generated@@204) $generated@@201)
 :weight 0
)) (and (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@187 $generated@@205 $generated@@206 $generated@@207 ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@187 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ($generated@@216 T@T) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@187 $generated@@214 $generated@@215 $generated@@216 ($generated@@194 $generated@@214 $generated@@215 $generated@@216 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@187 $generated@@214 $generated@@215 $generated@@216 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (= ($generated@@6 $generated@@188) 4)) (= ($generated@@6 $generated@@189) 5)) (forall (($generated@@223 T@T) ($generated@@224 T@T) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (= ($generated@@191 $generated@@223 $generated@@224 ($generated@@195 $generated@@223 $generated@@224 $generated@@226 $generated@@227 $generated@@225) $generated@@227) $generated@@225)
 :weight 0
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@232 $generated@@233) (= ($generated@@191 $generated@@228 $generated@@229 ($generated@@195 $generated@@228 $generated@@229 $generated@@231 $generated@@232 $generated@@230) $generated@@233) ($generated@@191 $generated@@228 $generated@@229 $generated@@231 $generated@@233)))
 :weight 0
))) (= ($generated@@6 $generated@@192) 6)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@6 ($generated@@193 $generated@@234 $generated@@235)) 7))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@196 ($generated@@193 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@193 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@197 ($generated@@193 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@193 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (= ($generated@@11 ($generated@@187 $generated@@188 $generated@@189 $generated@@7 ($generated@@190 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (or (not (= $generated@@244 $generated@@240)) (not true)) ($generated@@11 ($generated@@81 $generated@@7 ($generated@@191 $generated@@189 $generated@@192 ($generated@@191 $generated@@188 ($generated@@193 $generated@@189 $generated@@192) $generated@@241 $generated@@244) $generated@@242)))) $generated@@243))
 :pattern ( ($generated@@187 $generated@@188 $generated@@189 $generated@@7 ($generated@@190 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert  (=> (<= 1 $generated@@122) (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (or ($generated@@170 $generated@@247) (and (< 1 $generated@@122) ($generated@@65 $generated@@54 $generated@@247 ($generated@@55 $generated@@45)))) ($generated@@65 $generated@@54 ($generated@@148 $generated@@246 $generated@@247) ($generated@@55 $generated@@45)))
 :pattern ( ($generated@@148 $generated@@246 $generated@@247))
))))
(assert  (=> (<= 1 $generated@@122) (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (or ($generated@@177 $generated@@249) (and (< 1 $generated@@122) ($generated@@65 $generated@@54 $generated@@249 ($generated@@55 $generated@@45)))) ($generated@@65 $generated@@54 ($generated@@151 $generated@@248 $generated@@249) ($generated@@55 $generated@@45)))
 :pattern ( ($generated@@151 $generated@@248 $generated@@249))
))))
(assert  (=> (<= 1 $generated@@122) (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (or ($generated@@157 $generated@@251) (and (< 1 $generated@@122) ($generated@@65 $generated@@54 $generated@@251 ($generated@@55 $generated@@45)))) ($generated@@65 $generated@@54 ($generated@@154 $generated@@250 $generated@@251) ($generated@@55 $generated@@45)))
 :pattern ( ($generated@@154 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> ($generated@@73 $generated@@253 ($generated@@55 $generated@@252)) (and (= ($generated@@82 $generated@@54 ($generated@@81 $generated@@54 $generated@@253)) $generated@@253) ($generated@@65 $generated@@54 ($generated@@81 $generated@@54 $generated@@253) ($generated@@55 $generated@@252))))
 :pattern ( ($generated@@73 $generated@@253 ($generated@@55 $generated@@252)))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> ($generated@@106 $generated@@254) (= $generated@@254 ($generated@@24 ($generated@@40 $generated@@254))))
 :pattern ( ($generated@@40 $generated@@254))
 :pattern ( ($generated@@106 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and ($generated@@56 $generated@@257) (and ($generated@@79 $generated@@255) ($generated@@35 $generated@@54 $generated@@255 ($generated@@55 $generated@@256) $generated@@257))) ($generated@@35 $generated@@54 ($generated@@90 $generated@@255) ($generated@@55 $generated@@256) $generated@@257))
 :pattern ( ($generated@@35 $generated@@54 ($generated@@90 $generated@@255) ($generated@@55 $generated@@256) $generated@@257))
)))
(assert (= ($generated@@103 $generated@@36) $generated@@0))
(assert (= ($generated@@104 $generated@@36) $generated@@4))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and ($generated@@106 $generated@@259) (<= ($generated@@40 $generated@@259) ($generated@@40 $generated@@258))) (or (and (= $generated@@259 ($generated@@24 0)) (= ($generated@@39 $generated@@258 $generated@@259) $generated@@258)) (and (or (not (= $generated@@259 ($generated@@24 0))) (not true)) ($generated@@31 ($generated@@39 $generated@@258 $generated@@259) $generated@@258))))
 :pattern ( ($generated@@39 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and ($generated@@31 $generated@@262 $generated@@266) ($generated@@22 $generated@@260 $generated@@261 $generated@@266 ($generated@@23 $generated@@263) $generated@@264 $generated@@265)) ($generated@@22 $generated@@260 $generated@@261 $generated@@262 ($generated@@23 $generated@@263) $generated@@264 $generated@@265))
 :pattern ( ($generated@@22 $generated@@260 $generated@@261 $generated@@262 ($generated@@23 $generated@@263) $generated@@264 $generated@@265) ($generated@@22 $generated@@260 $generated@@261 $generated@@266 ($generated@@23 $generated@@263) $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (= ($generated@@59 $generated@@267 $generated@@268 ($generated@@23 $generated@@269) $generated@@270 $generated@@271) ($generated@@59 $generated@@267 $generated@@268 $generated@@269 $generated@@270 $generated@@271))
 :pattern ( ($generated@@59 $generated@@267 $generated@@268 ($generated@@23 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@82 $generated@@8 ($generated@@12 ($generated@@67 $generated@@272))) ($generated@@69 $generated@@192 ($generated@@82 $generated@@8 ($generated@@12 $generated@@272))))
 :pattern ( ($generated@@82 $generated@@8 ($generated@@12 ($generated@@67 $generated@@272))))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@T) ) (! (= ($generated@@82 $generated@@274 ($generated@@69 $generated@@274 $generated@@273)) ($generated@@69 $generated@@192 ($generated@@82 $generated@@274 $generated@@273)))
 :pattern ( ($generated@@82 $generated@@274 ($generated@@69 $generated@@274 $generated@@273)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (forall (($generated@@280 Int) ) (!  (=> (<= 0 $generated@@280) ($generated@@22 $generated@@275 $generated@@276 ($generated@@24 $generated@@280) ($generated@@23 $generated@@277) $generated@@278 $generated@@279))
 :pattern ( ($generated@@22 $generated@@275 $generated@@276 ($generated@@24 $generated@@280) ($generated@@23 $generated@@277) $generated@@278 $generated@@279))
)) ($generated@@59 $generated@@275 $generated@@276 ($generated@@23 $generated@@277) $generated@@278 $generated@@279))
 :pattern ( ($generated@@59 $generated@@275 $generated@@276 ($generated@@23 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> ($generated@@56 $generated@@284) (= ($generated@@35 $generated@@54 ($generated@@72 $generated@@282 $generated@@283) ($generated@@55 $generated@@281) $generated@@284)  (and ($generated@@98 $generated@@282 $generated@@281 $generated@@284) ($generated@@35 $generated@@54 $generated@@283 ($generated@@55 $generated@@281) $generated@@284))))
 :pattern ( ($generated@@35 $generated@@54 ($generated@@72 $generated@@282 $generated@@283) ($generated@@55 $generated@@281) $generated@@284))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@285 () Int)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 () T@U)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 () T@U)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 () T@U)
(declare-fun $generated@@293 () T@U)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@295 () Int)
(declare-fun $generated@@296 () T@U)
(declare-fun $generated@@297 (T@U) Bool)
(declare-fun $generated@@298 () T@U)
(declare-fun $generated@@299 () T@U)
(declare-fun $generated@@300 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@301 true))
(let (($generated@@302  (and (=> (= (ControlFlow 0 2) (- 0 3)) (or ($generated@@22 $generated@@45 $generated@@45 ($generated@@24 $generated@@285) ($generated@@23 ($generated@@23 $generated@@286)) ($generated@@154 ($generated@@23 $generated@@286) $generated@@287) ($generated@@148 ($generated@@23 $generated@@286) ($generated@@151 ($generated@@23 $generated@@286) $generated@@287))) (=> (< 0 $generated@@285) (=> ($generated@@77 ($generated@@154 ($generated@@23 ($generated@@23 $generated@@286)) $generated@@287)) ($generated@@77 ($generated@@148 ($generated@@23 ($generated@@23 $generated@@286)) ($generated@@151 ($generated@@23 ($generated@@23 $generated@@286)) $generated@@287))))))) (=> (or ($generated@@22 $generated@@45 $generated@@45 ($generated@@24 $generated@@285) ($generated@@23 ($generated@@23 $generated@@286)) ($generated@@154 ($generated@@23 $generated@@286) $generated@@287) ($generated@@148 ($generated@@23 $generated@@286) ($generated@@151 ($generated@@23 $generated@@286) $generated@@287))) (=> (< 0 $generated@@285) (=> ($generated@@77 ($generated@@154 ($generated@@23 ($generated@@23 $generated@@286)) $generated@@287)) ($generated@@77 ($generated@@148 ($generated@@23 ($generated@@23 $generated@@286)) ($generated@@151 ($generated@@23 ($generated@@23 $generated@@286)) $generated@@287)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (or ($generated@@22 $generated@@45 $generated@@45 ($generated@@24 $generated@@285) ($generated@@23 ($generated@@23 $generated@@286)) ($generated@@154 ($generated@@23 $generated@@286) $generated@@287) ($generated@@148 ($generated@@23 $generated@@286) ($generated@@151 ($generated@@23 $generated@@286) $generated@@287))) (=> (< 0 $generated@@285) (=> ($generated@@79 ($generated@@154 ($generated@@23 ($generated@@23 $generated@@286)) $generated@@287)) (and ($generated@@79 ($generated@@148 ($generated@@23 ($generated@@23 $generated@@286)) ($generated@@151 ($generated@@23 ($generated@@23 $generated@@286)) $generated@@287))) (and (= ($generated@@89 ($generated@@154 ($generated@@23 ($generated@@23 $generated@@286)) $generated@@287)) ($generated@@89 ($generated@@148 ($generated@@23 ($generated@@23 $generated@@286)) ($generated@@151 ($generated@@23 ($generated@@23 $generated@@286)) $generated@@287)))) ($generated@@22 $generated@@45 $generated@@45 ($generated@@24 (- $generated@@285 1)) ($generated@@23 ($generated@@23 $generated@@286)) ($generated@@90 ($generated@@154 ($generated@@23 ($generated@@23 $generated@@286)) $generated@@287)) ($generated@@90 ($generated@@148 ($generated@@23 ($generated@@23 $generated@@286)) ($generated@@151 ($generated@@23 ($generated@@23 $generated@@286)) $generated@@287))))))))))))))
(let (($generated@@303  (=> (= $generated@@287 ($generated@@72 $generated@@288 $generated@@289)) (=> (and ($generated@@73 $generated@@288 $generated@@45) ($generated@@65 $generated@@54 $generated@@289 ($generated@@55 $generated@@45))) (=> (and (and (and (and ($generated@@65 $generated@@54 $generated@@290 ($generated@@55 $generated@@45)) ($generated@@35 $generated@@54 $generated@@290 ($generated@@55 $generated@@45) $generated@@291)) (= $generated@@292 $generated@@289)) (and ($generated@@65 $generated@@54 $generated@@292 ($generated@@55 $generated@@45)) (= $generated@@290 $generated@@292))) (and (and (and ($generated@@73 $generated@@293 $generated@@45) ($generated@@98 $generated@@293 $generated@@45 $generated@@291)) (= $generated@@294 $generated@@288)) (and ($generated@@73 $generated@@294 $generated@@45) (= $generated@@293 $generated@@294)))) (and (=> (= (ControlFlow 0 6) (- 0 9)) ($generated@@65 $generated@@8 ($generated@@12 (- $generated@@285 1)) $generated@@36)) (=> ($generated@@65 $generated@@8 ($generated@@12 (- $generated@@285 1)) $generated@@36) (=> (= $generated@@295 (- $generated@@285 1)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (<= 0 $generated@@285) (= $generated@@295 $generated@@285))) (=> (or (<= 0 $generated@@285) (= $generated@@295 $generated@@285)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (< $generated@@295 $generated@@285)) (=> (< $generated@@295 $generated@@285) (=> (and ($generated@@56 $generated@@296) ($generated@@297 $generated@@296)) (=> (and (and (and ($generated@@157 $generated@@290) (and ($generated@@177 $generated@@290) ($generated@@170 ($generated@@151 ($generated@@23 $generated@@286) $generated@@290)))) ($generated@@22 $generated@@45 $generated@@45 ($generated@@24 $generated@@295) ($generated@@23 ($generated@@23 $generated@@286)) ($generated@@154 ($generated@@23 $generated@@286) $generated@@290) ($generated@@148 ($generated@@23 $generated@@286) ($generated@@151 ($generated@@23 $generated@@286) $generated@@290)))) (and (= $generated@@291 $generated@@296) (= (ControlFlow 0 6) 2))) $generated@@302))))))))))))))
(let (($generated@@304  (=> (or (not (= $generated@@287 $generated@@47)) (not true)) (and (=> (= (ControlFlow 0 11) 6) $generated@@303) (=> (= (ControlFlow 0 11) 10) $generated@@301)))))
(let (($generated@@305  (=> (and (= $generated@@287 $generated@@47) (= (ControlFlow 0 5) 2)) $generated@@302)))
(let (($generated@@306  (=> (or (not (= $generated@@285 0)) (not true)) (and (=> (= (ControlFlow 0 12) 5) $generated@@305) (=> (= (ControlFlow 0 12) 11) $generated@@304)))))
(let (($generated@@307  (=> (and (= $generated@@285 0) (= (ControlFlow 0 4) 2)) $generated@@302)))
(let (($generated@@308  (=> (and (= $generated@@298 ($generated@@190 $generated@@299 $generated@@300 $generated false)) ($generated@@116 $generated@@287)) (=> (and (and ($generated@@56 $generated@@291) ($generated@@297 $generated@@291)) (and (= $generated@@300 $generated@@291) (forall (($generated@@309 Int) ($generated@@310 T@U) ) (!  (=> (and (and (and (<= ($generated@@67 0) $generated@@309) ($generated@@65 $generated@@54 $generated@@310 ($generated@@55 $generated@@45))) ($generated@@11 ($generated@@69 $generated@@7 ($generated@@10 true)))) (and (<= 0 $generated@@309) (< $generated@@309 $generated@@285))) ($generated@@22 $generated@@45 $generated@@45 ($generated@@24 $generated@@309) ($generated@@23 ($generated@@23 $generated@@286)) ($generated@@154 ($generated@@23 $generated@@286) $generated@@310) ($generated@@148 ($generated@@23 $generated@@286) ($generated@@151 ($generated@@23 $generated@@286) $generated@@310))))
 :pattern ( ($generated@@22 $generated@@45 $generated@@45 ($generated@@24 $generated@@309) ($generated@@23 ($generated@@23 $generated@@286)) ($generated@@154 ($generated@@23 $generated@@286) $generated@@310) ($generated@@148 ($generated@@23 $generated@@286) ($generated@@151 ($generated@@23 $generated@@286) $generated@@310))))
)))) (and (=> (= (ControlFlow 0 13) 12) $generated@@306) (=> (= (ControlFlow 0 13) 4) $generated@@307))))))
(let (($generated@@311  (=> (and (and ($generated@@56 $generated@@300) ($generated@@297 $generated@@300)) (<= ($generated@@67 0) $generated@@285)) (=> (and (and (and ($generated@@65 $generated@@54 $generated@@287 ($generated@@55 $generated@@45)) ($generated@@35 $generated@@54 $generated@@287 ($generated@@55 $generated@@45) $generated@@300)) ($generated@@116 $generated@@287)) (and (= 2 $generated@@122) (= (ControlFlow 0 14) 13))) $generated@@308))))
$generated@@311))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
