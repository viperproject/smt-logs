(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@19 () T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (Int) Int)
(declare-fun $generated@@24 (Int) Bool)
(declare-fun $generated@@25 (Int) Int)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@103 () Bool)
(declare-fun $generated@@104 () Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (forall (($generated@@20 T@U) ($generated@@21 T@U) ) (! ($generated@@18 $generated@@4 $generated@@20 $generated@@19 $generated@@21)
 :pattern ( ($generated@@18 $generated@@4 $generated@@20 $generated@@19 $generated@@21))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@26 Int) ) (!  (=> (or ($generated@@24 $generated@@26) (and (< 0 $generated@@22) (<= ($generated@@25 0) $generated@@26))) (<= ($generated@@25 0) ($generated@@23 $generated@@26)))
 :pattern ( ($generated@@23 $generated@@26))
))))
(assert (forall (($generated@@27 Int) ) (! (= ($generated@@25 $generated@@27) $generated@@27)
 :pattern ( ($generated@@25 $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@T) ) (! (= ($generated@@28 $generated@@30 $generated@@29) $generated@@29)
 :pattern ( ($generated@@28 $generated@@30 $generated@@29))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@T) ) (! (= ($generated@@32 $generated@@34 ($generated@@31 $generated@@34 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@31 $generated@@34 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ) (! (= ($generated@@35 $generated@@4 $generated@@36 $generated@@19) (<= ($generated@@25 0) ($generated@@9 $generated@@36)))
 :pattern ( ($generated@@35 $generated@@4 $generated@@36 $generated@@19))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@31 $generated@@38 ($generated@@32 $generated@@38 $generated@@37)) $generated@@37)
 :pattern ( ($generated@@32 $generated@@38 $generated@@37))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@39 $generated@@50 $generated@@51 $generated@@52 ($generated@@46 $generated@@50 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@56 $generated@@53) $generated@@55 $generated@@56) $generated@@53)
 :weight 0
)) (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@62 $generated@@64) (= ($generated@@39 $generated@@57 $generated@@58 $generated@@59 ($generated@@46 $generated@@57 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@63 $generated@@60) $generated@@64 $generated@@65) ($generated@@39 $generated@@57 $generated@@58 $generated@@59 $generated@@61 $generated@@64 $generated@@65)))
 :weight 0
)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (or (= $generated@@72 $generated@@74) (= ($generated@@39 $generated@@66 $generated@@67 $generated@@68 ($generated@@46 $generated@@66 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@72 $generated@@69) $generated@@73 $generated@@74) ($generated@@39 $generated@@66 $generated@@67 $generated@@68 $generated@@70 $generated@@73 $generated@@74)))
 :weight 0
)))) (= ($generated@@2 $generated@@40) 3)) (= ($generated@@2 $generated@@41) 4)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@43 $generated@@75 $generated@@76 ($generated@@47 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@77) $generated@@79) $generated@@77)
 :weight 0
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (or (= $generated@@84 $generated@@85) (= ($generated@@43 $generated@@80 $generated@@81 ($generated@@47 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@82) $generated@@85) ($generated@@43 $generated@@80 $generated@@81 $generated@@83 $generated@@85)))
 :weight 0
))) (= ($generated@@2 $generated@@44) 5)) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (= ($generated@@2 ($generated@@45 $generated@@86 $generated@@87)) 6))) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@88 $generated@@89)) $generated@@88)
 :pattern ( ($generated@@45 $generated@@88 $generated@@89))
))) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@49 ($generated@@45 $generated@@90 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@45 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Bool) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@7 ($generated@@39 $generated@@40 $generated@@41 $generated@@3 ($generated@@42 $generated@@92 $generated@@93 $generated@@94 $generated@@95) $generated@@96 $generated@@97))  (=> (and (or (not (= $generated@@96 $generated@@92)) (not true)) ($generated@@7 ($generated@@31 $generated@@3 ($generated@@43 $generated@@41 $generated@@44 ($generated@@43 $generated@@40 ($generated@@45 $generated@@41 $generated@@44) $generated@@93 $generated@@96) $generated@@94)))) $generated@@95))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 $generated@@3 ($generated@@42 $generated@@92 $generated@@93 $generated@@94 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (= ($generated@@98 $generated@@19) $generated@@0))
(assert (= ($generated@@99 $generated@@19) $generated@@1))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@32 $generated@@4 ($generated@@8 ($generated@@25 $generated@@100))) ($generated@@28 $generated@@44 ($generated@@32 $generated@@4 ($generated@@8 $generated@@100))))
 :pattern ( ($generated@@32 $generated@@4 ($generated@@8 ($generated@@25 $generated@@100))))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@32 $generated@@102 ($generated@@28 $generated@@102 $generated@@101)) ($generated@@28 $generated@@44 ($generated@@32 $generated@@102 $generated@@101)))
 :pattern ( ($generated@@32 $generated@@102 ($generated@@28 $generated@@102 $generated@@101)))
)))
(assert  (=> (<= 1 $generated@@22) (=> (or $generated@@103 (< 1 $generated@@22)) (and (forall (($generated@@105 Int) ($generated@@106 Int) ) (!  (=> (<= ($generated@@25 0) $generated@@105) (=> (= $generated@@106 (+ $generated@@105 1)) (and (and ($generated@@24 $generated@@105) ($generated@@24 ($generated@@23 $generated@@105))) ($generated@@24 $generated@@106))))
 :pattern ( ($generated@@23 $generated@@106) ($generated@@23 ($generated@@23 $generated@@105)))
)) (= $generated@@104 (forall (($generated@@107 Int) ($generated@@108 Int) ) (!  (=> (and (<= ($generated@@25 0) $generated@@107) (= $generated@@108 (+ $generated@@107 1))) (< ($generated@@23 ($generated@@23 $generated@@107)) ($generated@@23 $generated@@108)))
 :pattern ( ($generated@@23 $generated@@108) ($generated@@23 ($generated@@23 $generated@@107)))
)))))))
(assert  (=> (<= 1 $generated@@22) (=> (or $generated@@103 (< 1 $generated@@22)) (and (forall (($generated@@109 Int) ($generated@@110 Int) ) (!  (=> (<= ($generated@@25 0) $generated@@109) (=> (= $generated@@110 (+ $generated@@109 1)) (and (and ($generated@@24 $generated@@109) ($generated@@24 ($generated@@23 $generated@@109))) ($generated@@24 $generated@@110))))
 :pattern ( ($generated@@23 $generated@@110) ($generated@@23 ($generated@@23 $generated@@109)))
)) (= $generated@@104 (forall (($generated@@111 Int) ($generated@@112 Int) ) (!  (=> (and (<= ($generated@@25 0) $generated@@111) (= $generated@@112 (+ $generated@@111 1))) (< ($generated@@23 ($generated@@23 $generated@@111)) ($generated@@23 $generated@@112)))
 :pattern ( ($generated@@23 $generated@@112) ($generated@@23 ($generated@@23 $generated@@111)))
)))))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@113 () Int)
(declare-fun $generated@@114 () Int)
(declare-fun $generated@@115 () T@U)
(declare-fun $generated@@116 () Int)
(declare-fun $generated@@117 () Int)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 () Int)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@122 () T@U)
(declare-fun $generated@@123 (T@U) Bool)
(declare-fun $generated@@124 () Int)
(declare-fun $generated@@125 () Int)
(declare-fun $generated@@126 () Int)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 () Int)
(declare-fun $generated@@129 () T@U)
(declare-fun $generated@@130 () Int)
(declare-fun $generated@@131 () T@U)
(declare-fun $generated@@132 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 50) (let (($generated@@133  (=> (and ($generated@@24 (- $generated@@113 1)) ($generated@@24 ($generated@@23 (- $generated@@113 1)))) (=> (and (and (and (<= (- $generated@@114 1) ($generated@@23 ($generated@@23 (- $generated@@113 1)))) (<= ($generated@@25 1) $generated@@113)) (and ($generated@@18 $generated@@4 ($generated@@8 $generated@@113) $generated@@19 $generated@@115) ($generated@@24 $generated@@113))) (and (and ($generated@@24 $generated@@113) (= (ControlFlow 0 44) (- 0 43))) (and (<= (- $generated@@114 1) ($generated@@23 ($generated@@23 (- $generated@@113 1)))) (<= ($generated@@25 1) $generated@@113)))) (< (- $generated@@114 1) ($generated@@23 $generated@@113))))))
(let (($generated@@134  (=> (and (< ($generated@@23 ($generated@@23 (- $generated@@113 1))) (- $generated@@114 1)) (= (ControlFlow 0 46) 44)) $generated@@133)))
(let (($generated@@135  (=> (and (<= (- $generated@@114 1) ($generated@@23 ($generated@@23 (- $generated@@113 1)))) (= (ControlFlow 0 45) 44)) $generated@@133)))
(let (($generated@@136  (=> ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@113 1)) $generated@@19) (=> (and (= $generated@@116 (- $generated@@113 1)) ($generated@@18 $generated@@4 ($generated@@8 $generated@@116) $generated@@19 $generated@@115)) (=> (and (and ($generated@@24 (- $generated@@113 1)) (= $generated@@117 ($generated@@23 (- $generated@@113 1)))) (and ($generated@@18 $generated@@4 ($generated@@8 $generated@@117) $generated@@19 $generated@@115) ($generated@@24 ($generated@@23 (- $generated@@113 1))))) (and (=> (= (ControlFlow 0 47) 45) $generated@@135) (=> (= (ControlFlow 0 47) 46) $generated@@134)))))))
(let (($generated@@137  (=> (and ($generated@@24 (- $generated@@113 1)) ($generated@@24 ($generated@@23 (- $generated@@113 1)))) (and (=> (= (ControlFlow 0 28) (- 0 29)) (=> (and (<= (- $generated@@114 1) ($generated@@23 (- $generated@@113 1))) (<= ($generated@@25 1) $generated@@113)) (<= (- $generated@@114 1) ($generated@@23 ($generated@@23 (- $generated@@113 1)))))) (=> (= (ControlFlow 0 28) (- 0 27)) (=> (and (<= (- $generated@@114 1) ($generated@@23 (- $generated@@113 1))) (<= ($generated@@25 1) $generated@@113)) (<= ($generated@@25 1) $generated@@113)))))))
(let (($generated@@138  (=> (and (< ($generated@@23 ($generated@@23 (- $generated@@113 1))) (- $generated@@114 1)) (= (ControlFlow 0 31) 28)) $generated@@137)))
(let (($generated@@139  (=> (and (<= (- $generated@@114 1) ($generated@@23 ($generated@@23 (- $generated@@113 1)))) (= (ControlFlow 0 30) 28)) $generated@@137)))
(let (($generated@@140  (=> ($generated@@24 (- $generated@@113 1)) (=> (and (<= (- $generated@@114 1) ($generated@@23 (- $generated@@113 1))) (<= ($generated@@25 1) $generated@@113)) (and (=> (= (ControlFlow 0 32) (- 0 39)) ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@114 1)) $generated@@19)) (=> ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@114 1)) $generated@@19) (=> (= $generated@@118 (- $generated@@114 1)) (and (=> (= (ControlFlow 0 32) (- 0 38)) ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@113 1)) $generated@@19)) (=> ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@113 1)) $generated@@19) (=> (= $generated@@119 (- $generated@@113 1)) (=> (and (and ($generated@@18 $generated@@4 ($generated@@8 $generated@@119) $generated@@19 $generated@@115) ($generated@@24 (- $generated@@113 1))) (and ($generated@@24 (- $generated@@113 1)) (= $generated@@120 ($generated@@23 (- $generated@@113 1))))) (and (=> (= (ControlFlow 0 32) (- 0 37)) (or (<= 0 $generated@@114) (= $generated@@118 $generated@@114))) (=> (or (<= 0 $generated@@114) (= $generated@@118 $generated@@114)) (and (=> (= (ControlFlow 0 32) (- 0 36)) (or (or (<= 0 $generated@@113) (< $generated@@118 $generated@@114)) (= $generated@@120 $generated@@113))) (=> (or (or (<= 0 $generated@@113) (< $generated@@118 $generated@@114)) (= $generated@@120 $generated@@113)) (and (=> (= (ControlFlow 0 32) (- 0 35)) (or (< $generated@@118 $generated@@114) (and (= $generated@@118 $generated@@114) (< $generated@@120 $generated@@113)))) (=> (or (< $generated@@118 $generated@@114) (and (= $generated@@118 $generated@@114) (< $generated@@120 $generated@@113))) (and (=> (= (ControlFlow 0 32) (- 0 34)) (=> $generated@@103 (or ($generated@@7 ($generated@@28 $generated@@3 ($generated@@6 $generated@@104))) (forall (($generated@@141 Int) ($generated@@142 Int) ) (!  (=> (and (<= ($generated@@25 0) $generated@@141) (= $generated@@142 (+ $generated@@141 1))) (< ($generated@@23 ($generated@@23 $generated@@141)) ($generated@@23 $generated@@142)))
 :pattern ( ($generated@@23 $generated@@142) ($generated@@23 ($generated@@23 $generated@@141)))
))))) (=> (=> $generated@@103 (or ($generated@@7 ($generated@@28 $generated@@3 ($generated@@6 $generated@@104))) (forall (($generated@@143 Int) ($generated@@144 Int) ) (!  (=> (and (<= ($generated@@25 0) $generated@@143) (= $generated@@144 (+ $generated@@143 1))) (< ($generated@@23 ($generated@@23 $generated@@143)) ($generated@@23 $generated@@144)))
 :pattern ( ($generated@@23 $generated@@144) ($generated@@23 ($generated@@23 $generated@@143)))
)))) (=> (and (and (and ($generated@@121 $generated@@122) ($generated@@123 $generated@@122)) (=> (<= $generated@@118 $generated@@120) ($generated@@24 $generated@@120))) (and (=> (<= $generated@@118 $generated@@120) (<= $generated@@118 ($generated@@23 $generated@@120))) (= $generated@@115 $generated@@122))) (and (=> (= (ControlFlow 0 32) (- 0 33)) ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@113 1)) $generated@@19)) (=> ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@113 1)) $generated@@19) (=> (and (= $generated@@124 (- $generated@@113 1)) ($generated@@18 $generated@@4 ($generated@@8 $generated@@124) $generated@@19 $generated@@122)) (=> (and (and ($generated@@24 (- $generated@@113 1)) (= $generated@@125 ($generated@@23 (- $generated@@113 1)))) (and ($generated@@18 $generated@@4 ($generated@@8 $generated@@125) $generated@@19 $generated@@122) ($generated@@24 ($generated@@23 (- $generated@@113 1))))) (and (=> (= (ControlFlow 0 32) 30) $generated@@139) (=> (= (ControlFlow 0 32) 31) $generated@@138))))))))))))))))))))))))))
(let (($generated@@145  (=> (and (< ($generated@@23 (- $generated@@113 1)) (- $generated@@114 1)) (= (ControlFlow 0 41) 32)) $generated@@140)))
(let (($generated@@146  (=> (and (<= (- $generated@@114 1) ($generated@@23 (- $generated@@113 1))) (= (ControlFlow 0 40) 32)) $generated@@140)))
(let (($generated@@147  (=> (and (and ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@113 1)) $generated@@19) (= $generated@@126 (- $generated@@113 1))) (and ($generated@@18 $generated@@4 ($generated@@8 $generated@@126) $generated@@19 $generated@@115) ($generated@@24 (- $generated@@113 1)))) (and (=> (= (ControlFlow 0 42) 40) $generated@@146) (=> (= (ControlFlow 0 42) 41) $generated@@145)))))
(let (($generated@@148  (=> (= (ControlFlow 0 24) (- 0 23)) (=  (and (<= (- $generated@@114 1) (- $generated@@113 1)) (<= ($generated@@25 1) $generated@@113)) (<= $generated@@114 $generated@@113)))))
(let (($generated@@149  (=> (and (< (- $generated@@113 1) (- $generated@@114 1)) (= (ControlFlow 0 26) 24)) $generated@@148)))
(let (($generated@@150  (=> (and (<= (- $generated@@114 1) (- $generated@@113 1)) (= (ControlFlow 0 25) 24)) $generated@@148)))
(let (($generated@@151  (=> ($generated@@24 (- $generated@@113 1)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (=> (and (<= (- $generated@@114 1) (- $generated@@113 1)) (<= ($generated@@25 1) $generated@@113)) (<= (- $generated@@114 1) ($generated@@23 (- $generated@@113 1))))) (=> (= (ControlFlow 0 9) (- 0 8)) (=> (and (<= (- $generated@@114 1) (- $generated@@113 1)) (<= ($generated@@25 1) $generated@@113)) (<= ($generated@@25 1) $generated@@113)))))))
(let (($generated@@152  (=> (and (< ($generated@@23 (- $generated@@113 1)) (- $generated@@114 1)) (= (ControlFlow 0 12) 9)) $generated@@151)))
(let (($generated@@153  (=> (and (<= (- $generated@@114 1) ($generated@@23 (- $generated@@113 1))) (= (ControlFlow 0 11) 9)) $generated@@151)))
(let (($generated@@154  (=> (and (<= (- $generated@@114 1) (- $generated@@113 1)) (<= ($generated@@25 1) $generated@@113)) (and (=> (= (ControlFlow 0 13) (- 0 20)) ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@114 1)) $generated@@19)) (=> ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@114 1)) $generated@@19) (=> (= $generated@@127 (- $generated@@114 1)) (and (=> (= (ControlFlow 0 13) (- 0 19)) ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@113 1)) $generated@@19)) (=> ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@113 1)) $generated@@19) (=> (= $generated@@128 (- $generated@@113 1)) (and (=> (= (ControlFlow 0 13) (- 0 18)) (or (<= 0 $generated@@114) (= $generated@@127 $generated@@114))) (=> (or (<= 0 $generated@@114) (= $generated@@127 $generated@@114)) (and (=> (= (ControlFlow 0 13) (- 0 17)) (or (or (<= 0 $generated@@113) (< $generated@@127 $generated@@114)) (= $generated@@128 $generated@@113))) (=> (or (or (<= 0 $generated@@113) (< $generated@@127 $generated@@114)) (= $generated@@128 $generated@@113)) (and (=> (= (ControlFlow 0 13) (- 0 16)) (or (< $generated@@127 $generated@@114) (and (= $generated@@127 $generated@@114) (< $generated@@128 $generated@@113)))) (=> (or (< $generated@@127 $generated@@114) (and (= $generated@@127 $generated@@114) (< $generated@@128 $generated@@113))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (=> $generated@@103 (or ($generated@@7 ($generated@@28 $generated@@3 ($generated@@6 $generated@@104))) (forall (($generated@@155 Int) ($generated@@156 Int) ) (!  (=> (and (<= ($generated@@25 0) $generated@@155) (= $generated@@156 (+ $generated@@155 1))) (< ($generated@@23 ($generated@@23 $generated@@155)) ($generated@@23 $generated@@156)))
 :pattern ( ($generated@@23 $generated@@156) ($generated@@23 ($generated@@23 $generated@@155)))
))))) (=> (=> $generated@@103 (or ($generated@@7 ($generated@@28 $generated@@3 ($generated@@6 $generated@@104))) (forall (($generated@@157 Int) ($generated@@158 Int) ) (!  (=> (and (<= ($generated@@25 0) $generated@@157) (= $generated@@158 (+ $generated@@157 1))) (< ($generated@@23 ($generated@@23 $generated@@157)) ($generated@@23 $generated@@158)))
 :pattern ( ($generated@@23 $generated@@158) ($generated@@23 ($generated@@23 $generated@@157)))
)))) (=> (and (and (and ($generated@@121 $generated@@129) ($generated@@123 $generated@@129)) (=> (<= $generated@@127 $generated@@128) ($generated@@24 $generated@@128))) (and (=> (<= $generated@@127 $generated@@128) (<= $generated@@127 ($generated@@23 $generated@@128))) (= $generated@@115 $generated@@129))) (and (=> (= (ControlFlow 0 13) (- 0 14)) ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@113 1)) $generated@@19)) (=> ($generated@@35 $generated@@4 ($generated@@8 (- $generated@@113 1)) $generated@@19) (=> (= $generated@@130 (- $generated@@113 1)) (=> (and ($generated@@18 $generated@@4 ($generated@@8 $generated@@130) $generated@@19 $generated@@129) ($generated@@24 (- $generated@@113 1))) (and (=> (= (ControlFlow 0 13) 11) $generated@@153) (=> (= (ControlFlow 0 13) 12) $generated@@152))))))))))))))))))))))))
(let (($generated@@159  (=> (and (< (- $generated@@113 1) (- $generated@@114 1)) (= (ControlFlow 0 22) 13)) $generated@@154)))
(let (($generated@@160  (=> (and (<= (- $generated@@114 1) (- $generated@@113 1)) (= (ControlFlow 0 21) 13)) $generated@@154)))
(let (($generated@@161  (=> ($generated@@18 $generated@@4 ($generated@@8 $generated@@113) $generated@@19 $generated@@115) (=> (and ($generated@@24 $generated@@113) ($generated@@24 $generated@@113)) (=> (and (and ($generated@@18 $generated@@4 ($generated@@8 $generated@@113) $generated@@19 $generated@@115) ($generated@@24 $generated@@113)) (and ($generated@@24 $generated@@113) (= (ControlFlow 0 6) (- 0 5)))) (= (<= $generated@@114 ($generated@@23 $generated@@113)) (< (- $generated@@114 1) ($generated@@23 $generated@@113))))))))
(let (($generated@@162 true))
(let (($generated@@163  (=> (= (ControlFlow 0 2) (- 0 1)) (=> (<= $generated@@114 $generated@@113) (<= $generated@@114 ($generated@@23 $generated@@113))))))
(let (($generated@@164  (=> (and (=> (<= $generated@@114 $generated@@113) (<= $generated@@114 ($generated@@23 $generated@@113))) (= (ControlFlow 0 7) 2)) $generated@@163)))
(let (($generated@@165  (=> (< 0 $generated@@114) (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 48) 4) $generated@@162) (=> (= (ControlFlow 0 48) 6) $generated@@161)) (=> (= (ControlFlow 0 48) 47) $generated@@136)) (=> (= (ControlFlow 0 48) 42) $generated@@147)) (=> (= (ControlFlow 0 48) 7) $generated@@164)) (=> (= (ControlFlow 0 48) 25) $generated@@150)) (=> (= (ControlFlow 0 48) 26) $generated@@149)) (=> (= (ControlFlow 0 48) 21) $generated@@160)) (=> (= (ControlFlow 0 48) 22) $generated@@159)))))
(let (($generated@@166  (=> (and (<= $generated@@114 0) (= (ControlFlow 0 3) 2)) $generated@@163)))
(let (($generated@@167  (=> (= $generated@@131 ($generated@@42 $generated@@132 $generated@@115 $generated false)) (and (=> (= (ControlFlow 0 49) 48) $generated@@165) (=> (= (ControlFlow 0 49) 3) $generated@@166)))))
(let (($generated@@168  (=> (and (and (and (and ($generated@@121 $generated@@115) ($generated@@123 $generated@@115)) (<= ($generated@@25 0) $generated@@114)) (and (<= ($generated@@25 0) $generated@@113) (= 2 $generated@@22))) (and (and $generated@@103 (and ($generated@@7 ($generated@@28 $generated@@3 ($generated@@6 $generated@@104))) (forall (($generated@@169 Int) ($generated@@170 Int) ) (!  (=> (and (<= ($generated@@25 0) $generated@@169) (= $generated@@170 (+ $generated@@169 1))) (< ($generated@@23 ($generated@@23 $generated@@169)) ($generated@@23 $generated@@170)))
 :pattern ( ($generated@@23 $generated@@170) ($generated@@23 ($generated@@23 $generated@@169)))
)))) (= (ControlFlow 0 50) 49))) $generated@@167)))
$generated@@168)))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
