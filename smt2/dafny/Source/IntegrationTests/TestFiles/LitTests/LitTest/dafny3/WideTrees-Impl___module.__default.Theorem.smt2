(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (Int) T@U)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@36 (T@U Int) T@U)
(declare-fun $generated@@37 (Int) Bool)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@46 (T@U T@U Int) Bool)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@55 (T@U Int) T@U)
(declare-fun $generated@@56 (Int) Bool)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@U T@U Int) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@109 (T@U) Bool)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@111 () T@U)
(declare-fun $generated@@112 (T@U Int) Bool)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@122 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Int)
(declare-fun $generated@@187 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 () T@T)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@192 (T@T T@T) T@T)
(declare-fun $generated@@193 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@25 $generated@@26)) ($generated@@23 $generated@@24 $generated@@26))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@25 $generated@@26))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 Int) ($generated@@32 Int) ) (!  (=> (and (and (<= 0 $generated@@31) (<= 0 $generated@@32)) (<= (+ $generated@@31 $generated@@32) ($generated@@29 $generated@@30))) (= ($generated@@27 ($generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@28 $generated@@32)) ($generated@@27 $generated@@30 ($generated@@28 (+ $generated@@31 $generated@@32)))))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@28 $generated@@32)))
)))
(assert (= ($generated@@33 $generated@@34) $generated@@2))
(assert (= ($generated@@7 $generated@@40) 3))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@42 T@U) ($generated@@43 Int) ) (!  (=> (or ($generated@@37 $generated@@43) (and (< 2 $generated@@35) (<= ($generated@@38 0) $generated@@43))) ($generated@@39 $generated@@40 ($generated@@36 $generated@@42 $generated@@43) $generated@@41))
 :pattern ( ($generated@@36 $generated@@42 $generated@@43))
))))
(assert (forall (($generated@@45 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@45 $generated@@41) ($generated@@44 $generated@@45))
 :pattern ( ($generated@@44 $generated@@45) ($generated@@39 $generated@@40 $generated@@45 $generated@@41))
)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 Int) ) (!  (=> (and (and ($generated@@39 $generated@@40 $generated@@51 ($generated@@48 $generated@@41)) (<= ($generated@@38 0) $generated@@52)) ($generated@@46 ($generated@@47 $generated@@50) $generated@@51 $generated@@52)) (forall (($generated@@53 T@U) ) (! ($generated@@49 ($generated@@47 $generated@@50) $generated@@53 $generated@@51 $generated@@52)
 :pattern ( ($generated@@49 ($generated@@47 $generated@@50) $generated@@53 $generated@@51 $generated@@52))
)))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@50) $generated@@51 $generated@@52))
))))
(assert (forall (($generated@@54 T@U) ) (! ($generated@@39 $generated@@40 $generated@@34 ($generated@@48 $generated@@54))
 :pattern ( ($generated@@39 $generated@@40 $generated@@34 ($generated@@48 $generated@@54)))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@57 T@U) ($generated@@58 Int) ) (!  (=> (or ($generated@@56 $generated@@58) (and (< 2 $generated@@35) (<= ($generated@@38 0) $generated@@58))) ($generated@@39 $generated@@40 ($generated@@55 $generated@@57 $generated@@58) ($generated@@48 $generated@@41)))
 :pattern ( ($generated@@55 $generated@@57 $generated@@58))
))))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@61 T@U) ($generated@@62 Int) ) (!  (=> (or ($generated@@56 $generated@@62) (and (< 2 $generated@@35) (<= ($generated@@38 0) $generated@@62))) (and (=> (or (not (= $generated@@62 ($generated@@38 0))) (not true)) (and ($generated@@37 (- $generated@@62 1)) ($generated@@56 $generated@@62))) (= ($generated@@55 ($generated@@47 $generated@@61) $generated@@62) (ite (= $generated@@62 ($generated@@38 0)) $generated@@34 ($generated@@59 ($generated@@60 $generated@@40 ($generated@@36 $generated@@61 (- $generated@@62 1))) ($generated@@55 $generated@@61 $generated@@62))))))
 :pattern ( ($generated@@55 ($generated@@47 $generated@@61) $generated@@62))
))))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@38 $generated@@63) $generated@@63)
 :pattern ( ($generated@@38 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (= ($generated@@7 $generated@@67) 4))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 Int) ) (!  (=> (or ($generated@@68 ($generated@@64 $generated@@67 $generated@@75) ($generated@@64 $generated@@40 $generated@@76) ($generated@@38 $generated@@77)) (and (< 3 $generated@@35) (and ($generated@@39 $generated@@40 $generated@@76 ($generated@@48 $generated@@41)) (<= ($generated@@38 0) $generated@@77)))) (and (and (=> (< 0 ($generated@@29 $generated@@75)) (=> (not ($generated@@12 ($generated@@64 $generated@@8 ($generated@@11 ($generated@@69 ($generated@@64 $generated@@40 $generated@@76)))))) (let (($generated@@78 ($generated@@64 $generated@@40 ($generated@@70 ($generated@@64 $generated@@40 $generated@@76)))))
(let (($generated@@79 ($generated@@64 $generated@@40 ($generated@@71 $generated@@40 ($generated@@72 ($generated@@64 $generated@@40 $generated@@76))))))
 (=> (<= ($generated@@38 1) ($generated@@38 $generated@@77)) (and (and ($generated@@44 $generated@@79) ($generated@@68 ($generated@@27 $generated@@75 ($generated@@28 1)) ($generated@@73 $generated@@79) ($generated@@38 (- $generated@@77 1)))) (=> ($generated@@49 ($generated@@47 $generated@@74) ($generated@@27 $generated@@75 ($generated@@28 1)) ($generated@@73 $generated@@79) ($generated@@38 (- $generated@@77 1))) ($generated@@68 ($generated@@27 $generated@@75 ($generated@@28 1)) $generated@@78 ($generated@@38 $generated@@77))))))))) (=> (=> (< 0 ($generated@@29 $generated@@75)) (ite ($generated@@69 ($generated@@64 $generated@@40 $generated@@76)) true (let (($generated@@80 ($generated@@64 $generated@@40 ($generated@@70 ($generated@@64 $generated@@40 $generated@@76)))))
(let (($generated@@81 ($generated@@64 $generated@@40 ($generated@@71 $generated@@40 ($generated@@72 ($generated@@64 $generated@@40 $generated@@76))))))
 (and (and (<= ($generated@@38 1) ($generated@@38 $generated@@77)) ($generated@@49 ($generated@@47 $generated@@74) ($generated@@27 $generated@@75 ($generated@@28 1)) ($generated@@64 $generated@@40 ($generated@@73 $generated@@81)) ($generated@@38 (- $generated@@77 1)))) ($generated@@49 ($generated@@47 $generated@@74) ($generated@@27 $generated@@75 ($generated@@28 1)) $generated@@80 ($generated@@38 $generated@@77))))))) (=> (= ($generated@@38 0) ($generated@@29 $generated@@75)) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@23 $generated@@82 $generated@@75) ($generated@@68 $generated@@82 $generated@@76 $generated@@77))
 :pattern ( ($generated@@49 ($generated@@47 $generated@@74) $generated@@82 $generated@@76 $generated@@77))
))))) (= ($generated@@49 ($generated@@47 $generated@@74) ($generated@@64 $generated@@67 $generated@@75) ($generated@@64 $generated@@40 $generated@@76) ($generated@@38 $generated@@77))  (and (=> (< 0 ($generated@@29 $generated@@75)) (ite ($generated@@69 ($generated@@64 $generated@@40 $generated@@76)) true (let (($generated@@83 ($generated@@64 $generated@@40 ($generated@@70 ($generated@@64 $generated@@40 $generated@@76)))))
(let (($generated@@84 ($generated@@64 $generated@@40 ($generated@@71 $generated@@40 ($generated@@72 ($generated@@64 $generated@@40 $generated@@76))))))
 (and (and (<= ($generated@@38 1) ($generated@@38 $generated@@77)) ($generated@@49 ($generated@@47 $generated@@74) ($generated@@27 $generated@@75 ($generated@@28 1)) ($generated@@64 $generated@@40 ($generated@@73 $generated@@84)) ($generated@@38 (- $generated@@77 1)))) ($generated@@49 ($generated@@47 $generated@@74) ($generated@@27 $generated@@75 ($generated@@28 1)) $generated@@83 ($generated@@38 $generated@@77))))))) (=> (= ($generated@@38 0) ($generated@@29 $generated@@75)) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@23 $generated@@85 $generated@@75) ($generated@@49 ($generated@@47 $generated@@74) $generated@@85 $generated@@76 $generated@@77))
 :pattern ( ($generated@@49 ($generated@@47 $generated@@74) $generated@@85 $generated@@76 $generated@@77))
)))))))
 :weight 3
 :pattern ( ($generated@@49 ($generated@@47 $generated@@74) ($generated@@64 $generated@@67 $generated@@75) ($generated@@64 $generated@@40 $generated@@76) ($generated@@38 $generated@@77)))
))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@39 $generated@@40 ($generated@@59 $generated@@88 $generated@@89) ($generated@@48 $generated@@87))  (and ($generated@@86 $generated@@88 $generated@@87) ($generated@@39 $generated@@40 $generated@@89 ($generated@@48 $generated@@87))))
 :pattern ( ($generated@@39 $generated@@40 ($generated@@59 $generated@@88 $generated@@89) ($generated@@48 $generated@@87)))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@69 $generated@@90) (= ($generated@@33 $generated@@90) $generated@@2))
 :pattern ( ($generated@@69 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@91 $generated@@92) (= ($generated@@33 $generated@@92) $generated@@3))
 :pattern ( ($generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@44 $generated@@93) (= ($generated@@33 $generated@@93) $generated@@4))
 :pattern ( ($generated@@44 $generated@@93))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@95 T@U) ($generated@@96 Int) ) (!  (=> (or ($generated@@37 $generated@@96) (and (< 2 $generated@@35) (<= ($generated@@38 0) $generated@@96))) (and ($generated@@56 $generated@@96) (= ($generated@@36 ($generated@@47 $generated@@95) $generated@@96) ($generated@@94 ($generated@@55 $generated@@95 $generated@@96)))))
 :pattern ( ($generated@@36 ($generated@@47 $generated@@95) $generated@@96))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@60 $generated@@98 ($generated@@71 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@71 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@91 $generated@@99) (exists (($generated@@100 T@U) ($generated@@101 T@U) ) (= $generated@@99 ($generated@@59 $generated@@100 $generated@@101))))
 :pattern ( ($generated@@91 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@69 $generated@@102) (= $generated@@102 $generated@@34))
 :pattern ( ($generated@@69 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@44 $generated@@103) (exists (($generated@@104 T@U) ) (= $generated@@103 ($generated@@94 $generated@@104))))
 :pattern ( ($generated@@44 $generated@@103))
)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 Int) ) (!  (=> (and (and ($generated@@39 $generated@@40 $generated@@106 ($generated@@48 $generated@@41)) (<= ($generated@@38 0) $generated@@107)) (forall (($generated@@108 T@U) ) (! ($generated@@49 ($generated@@47 $generated@@105) $generated@@108 $generated@@106 $generated@@107)
 :pattern ( ($generated@@49 ($generated@@47 $generated@@105) $generated@@108 $generated@@106 $generated@@107))
))) ($generated@@46 ($generated@@47 $generated@@105) $generated@@106 $generated@@107))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@105) $generated@@106 $generated@@107))
))))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@113 T@U) ) (!  (=> (or ($generated@@110 $generated@@113) (and (< 3 $generated@@35) ($generated@@39 $generated@@40 $generated@@113 $generated@@41))) (and (forall (($generated@@114 Int) ) (!  (=> (<= ($generated@@38 0) $generated@@114) (=> (<= ($generated@@38 0) $generated@@114) (and ($generated@@44 $generated@@113) ($generated@@112 ($generated@@73 $generated@@113) $generated@@114))))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@111) ($generated@@73 $generated@@113) $generated@@114))
)) (= ($generated@@109 $generated@@113) (exists (($generated@@115 Int) ) (!  (and (<= ($generated@@38 0) $generated@@115) (and (<= ($generated@@38 0) $generated@@115) ($generated@@46 ($generated@@47 $generated@@111) ($generated@@73 $generated@@113) $generated@@115)))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@111) ($generated@@73 $generated@@113) $generated@@115))
)))))
 :pattern ( ($generated@@109 $generated@@113))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 Int) ) (! (= ($generated@@46 ($generated@@47 $generated@@116) $generated@@117 $generated@@118) ($generated@@46 $generated@@116 $generated@@117 $generated@@118))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@116) $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ) (!  (and (= ($generated@@119 ($generated@@48 $generated@@121)) $generated@@1) (= ($generated@@120 ($generated@@48 $generated@@121)) $generated@@6))
 :pattern ( ($generated@@48 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (and ($generated@@122 $generated@@124) (<= ($generated@@29 $generated@@124) ($generated@@29 $generated@@123))) (and (= ($generated@@122 ($generated@@27 $generated@@123 $generated@@124)) ($generated@@122 $generated@@123)) (= ($generated@@29 ($generated@@27 $generated@@123 $generated@@124)) (- ($generated@@29 $generated@@123) ($generated@@29 $generated@@124)))))
 :pattern ( ($generated@@27 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 Int) ) (!  (=> (<= 0 $generated@@125) (and ($generated@@122 ($generated@@28 $generated@@125)) (= ($generated@@29 ($generated@@28 $generated@@125)) $generated@@125)))
 :pattern ( ($generated@@28 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@86 $generated@@126 $generated@@41) (and (= ($generated@@60 $generated@@40 ($generated@@71 $generated@@40 $generated@@126)) $generated@@126) ($generated@@39 $generated@@40 ($generated@@71 $generated@@40 $generated@@126) $generated@@41)))
 :pattern ( ($generated@@86 $generated@@126 $generated@@41))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (or ($generated@@23 $generated@@127 $generated@@128) (= $generated@@127 $generated@@128)) ($generated@@23 $generated@@128 $generated@@127))
 :pattern ( ($generated@@23 $generated@@127 $generated@@128) ($generated@@23 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@39 $generated@@40 ($generated@@94 $generated@@129) $generated@@41) ($generated@@39 $generated@@40 $generated@@129 ($generated@@48 $generated@@41)))
 :pattern ( ($generated@@39 $generated@@40 ($generated@@94 $generated@@129) $generated@@41))
)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Int) ) (!  (=> (or ($generated@@68 ($generated@@64 $generated@@67 $generated@@131) $generated@@132 $generated@@133) (and (< 3 $generated@@35) (and ($generated@@39 $generated@@40 $generated@@132 ($generated@@48 $generated@@41)) (<= ($generated@@38 0) $generated@@133)))) (and (and (=> (< 0 ($generated@@29 $generated@@131)) (=> (not ($generated@@69 $generated@@132)) (let (($generated@@134 ($generated@@70 $generated@@132)))
(let (($generated@@135 ($generated@@71 $generated@@40 ($generated@@72 $generated@@132))))
 (=> (<= ($generated@@38 1) $generated@@133) (and (and ($generated@@44 $generated@@135) ($generated@@68 ($generated@@27 $generated@@131 ($generated@@28 1)) ($generated@@73 $generated@@135) (- $generated@@133 1))) (=> ($generated@@49 ($generated@@47 $generated@@130) ($generated@@27 $generated@@131 ($generated@@28 1)) ($generated@@73 $generated@@135) (- $generated@@133 1)) ($generated@@68 ($generated@@27 $generated@@131 ($generated@@28 1)) $generated@@134 $generated@@133)))))))) (=> (=> (< 0 ($generated@@29 $generated@@131)) (ite ($generated@@69 $generated@@132) true (let (($generated@@136 ($generated@@70 $generated@@132)))
(let (($generated@@137 ($generated@@71 $generated@@40 ($generated@@72 $generated@@132))))
 (and (and (<= ($generated@@38 1) $generated@@133) ($generated@@49 ($generated@@47 $generated@@130) ($generated@@27 $generated@@131 ($generated@@28 1)) ($generated@@73 $generated@@137) (- $generated@@133 1))) ($generated@@49 ($generated@@47 $generated@@130) ($generated@@27 $generated@@131 ($generated@@28 1)) $generated@@136 $generated@@133)))))) (=> (= ($generated@@38 0) ($generated@@29 $generated@@131)) (forall (($generated@@138 T@U) ) (!  (=> ($generated@@23 $generated@@138 $generated@@131) ($generated@@68 $generated@@138 $generated@@132 $generated@@133))
 :pattern ( ($generated@@49 ($generated@@47 $generated@@130) $generated@@138 $generated@@132 $generated@@133))
))))) (= ($generated@@49 ($generated@@47 $generated@@130) ($generated@@64 $generated@@67 $generated@@131) $generated@@132 $generated@@133)  (and (=> (< 0 ($generated@@29 $generated@@131)) (ite ($generated@@69 $generated@@132) true (let (($generated@@139 ($generated@@70 $generated@@132)))
(let (($generated@@140 ($generated@@71 $generated@@40 ($generated@@72 $generated@@132))))
 (and (and (<= ($generated@@38 1) $generated@@133) ($generated@@49 ($generated@@47 $generated@@130) ($generated@@27 $generated@@131 ($generated@@28 1)) ($generated@@73 $generated@@140) (- $generated@@133 1))) ($generated@@49 ($generated@@47 $generated@@130) ($generated@@27 $generated@@131 ($generated@@28 1)) $generated@@139 $generated@@133)))))) (=> (= ($generated@@38 0) ($generated@@29 $generated@@131)) (forall (($generated@@141 T@U) ) (!  (=> ($generated@@23 $generated@@141 $generated@@131) ($generated@@49 ($generated@@47 $generated@@130) $generated@@141 $generated@@132 $generated@@133))
 :pattern ( ($generated@@49 ($generated@@47 $generated@@130) $generated@@141 $generated@@132 $generated@@133))
)))))))
 :weight 3
 :pattern ( ($generated@@49 ($generated@@47 $generated@@130) ($generated@@64 $generated@@67 $generated@@131) $generated@@132 $generated@@133))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@143 ($generated@@48 $generated@@142)) (or ($generated@@69 $generated@@143) ($generated@@91 $generated@@143)))
 :pattern ( ($generated@@91 $generated@@143) ($generated@@39 $generated@@40 $generated@@143 ($generated@@48 $generated@@142)))
 :pattern ( ($generated@@69 $generated@@143) ($generated@@39 $generated@@40 $generated@@143 ($generated@@48 $generated@@142)))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@86 ($generated@@60 $generated@@146 $generated@@144) $generated@@145) ($generated@@39 $generated@@146 $generated@@144 $generated@@145))
 :pattern ( ($generated@@86 ($generated@@60 $generated@@146 $generated@@144) $generated@@145))
)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 Int) ) (!  (=> (or ($generated@@68 $generated@@148 $generated@@149 $generated@@150) (and (< 3 $generated@@35) (and ($generated@@39 $generated@@40 $generated@@149 ($generated@@48 $generated@@41)) (<= ($generated@@38 0) $generated@@150)))) (and (and (=> (< 0 ($generated@@29 $generated@@148)) (=> (not ($generated@@69 $generated@@149)) (let (($generated@@151 ($generated@@70 $generated@@149)))
(let (($generated@@152 ($generated@@71 $generated@@40 ($generated@@72 $generated@@149))))
 (=> (<= ($generated@@38 1) $generated@@150) (and (and ($generated@@44 $generated@@152) ($generated@@68 ($generated@@27 $generated@@148 ($generated@@28 1)) ($generated@@73 $generated@@152) (- $generated@@150 1))) (=> ($generated@@49 $generated@@147 ($generated@@27 $generated@@148 ($generated@@28 1)) ($generated@@73 $generated@@152) (- $generated@@150 1)) ($generated@@68 ($generated@@27 $generated@@148 ($generated@@28 1)) $generated@@151 $generated@@150)))))))) (=> (=> (< 0 ($generated@@29 $generated@@148)) (ite ($generated@@69 $generated@@149) true (let (($generated@@153 ($generated@@70 $generated@@149)))
(let (($generated@@154 ($generated@@71 $generated@@40 ($generated@@72 $generated@@149))))
 (and (and (<= ($generated@@38 1) $generated@@150) ($generated@@49 $generated@@147 ($generated@@27 $generated@@148 ($generated@@28 1)) ($generated@@73 $generated@@154) (- $generated@@150 1))) ($generated@@49 $generated@@147 ($generated@@27 $generated@@148 ($generated@@28 1)) $generated@@153 $generated@@150)))))) (=> (= ($generated@@38 0) ($generated@@29 $generated@@148)) (forall (($generated@@155 T@U) ) (!  (=> ($generated@@23 $generated@@155 $generated@@148) ($generated@@68 $generated@@155 $generated@@149 $generated@@150))
 :pattern ( ($generated@@49 $generated@@147 $generated@@155 $generated@@149 $generated@@150))
))))) (= ($generated@@49 ($generated@@47 $generated@@147) $generated@@148 $generated@@149 $generated@@150)  (and (=> (< 0 ($generated@@29 $generated@@148)) (ite ($generated@@69 $generated@@149) true (let (($generated@@156 ($generated@@70 $generated@@149)))
(let (($generated@@157 ($generated@@71 $generated@@40 ($generated@@72 $generated@@149))))
 (and (and (<= ($generated@@38 1) $generated@@150) ($generated@@49 $generated@@147 ($generated@@27 $generated@@148 ($generated@@28 1)) ($generated@@73 $generated@@157) (- $generated@@150 1))) ($generated@@49 $generated@@147 ($generated@@27 $generated@@148 ($generated@@28 1)) $generated@@156 $generated@@150)))))) (=> (= ($generated@@38 0) ($generated@@29 $generated@@148)) (forall (($generated@@158 T@U) ) (!  (=> ($generated@@23 $generated@@158 $generated@@148) ($generated@@49 $generated@@147 $generated@@158 $generated@@149 $generated@@150))
 :pattern ( ($generated@@49 $generated@@147 $generated@@158 $generated@@149 $generated@@150))
)))))))
 :pattern ( ($generated@@49 ($generated@@47 $generated@@147) $generated@@148 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Int) ) (! (= ($generated@@49 ($generated@@47 $generated@@159) $generated@@160 $generated@@161 $generated@@162) ($generated@@49 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
 :pattern ( ($generated@@49 ($generated@@47 $generated@@159) $generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (! (<= 0 ($generated@@29 $generated@@163))
 :pattern ( ($generated@@29 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@33 ($generated@@59 $generated@@164 $generated@@165)) $generated@@3)
 :pattern ( ($generated@@59 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@72 ($generated@@59 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@59 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@70 ($generated@@59 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@59 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@170 ($generated@@48 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@48 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@33 ($generated@@94 $generated@@172)) $generated@@4)
 :pattern ( ($generated@@94 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@73 ($generated@@94 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@94 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@71 $generated@@175 ($generated@@60 $generated@@175 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@60 $generated@@175 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (and (and (and (=> ($generated@@23 $generated@@176 $generated@@177) (or (not (= $generated@@176 $generated@@177)) (not true))) (=> (and ($generated@@122 $generated@@176) (not ($generated@@122 $generated@@177))) ($generated@@23 $generated@@176 $generated@@177))) (=> (and ($generated@@122 $generated@@176) ($generated@@122 $generated@@177)) (= ($generated@@23 $generated@@176 $generated@@177) (< ($generated@@29 $generated@@176) ($generated@@29 $generated@@177))))) (=> (and ($generated@@23 $generated@@176 $generated@@177) ($generated@@122 $generated@@177)) ($generated@@122 $generated@@176)))
 :pattern ( ($generated@@23 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 Int) ) (! (= ($generated@@36 ($generated@@47 $generated@@178) $generated@@179) ($generated@@36 $generated@@178 $generated@@179))
 :pattern ( ($generated@@36 ($generated@@47 $generated@@178) $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 Int) ) (! (= ($generated@@55 ($generated@@47 $generated@@180) $generated@@181) ($generated@@55 $generated@@180 $generated@@181))
 :pattern ( ($generated@@55 ($generated@@47 $generated@@180) $generated@@181))
)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@182 T@U) ) (!  (=> (or ($generated@@110 ($generated@@64 $generated@@40 $generated@@182)) (and (< 3 $generated@@35) ($generated@@39 $generated@@40 $generated@@182 $generated@@41))) (and (forall (($generated@@183 Int) ) (!  (=> (<= ($generated@@38 0) $generated@@183) (=> (<= ($generated@@38 0) $generated@@183) (and ($generated@@44 ($generated@@64 $generated@@40 $generated@@182)) ($generated@@112 ($generated@@64 $generated@@40 ($generated@@73 ($generated@@64 $generated@@40 $generated@@182))) $generated@@183))))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@111) ($generated@@73 $generated@@182) $generated@@183))
)) (= ($generated@@109 ($generated@@64 $generated@@40 $generated@@182)) (exists (($generated@@184 Int) ) (!  (and (<= ($generated@@38 0) $generated@@184) (and (<= ($generated@@38 0) $generated@@184) ($generated@@46 ($generated@@47 $generated@@111) ($generated@@64 $generated@@40 ($generated@@73 ($generated@@64 $generated@@40 $generated@@182))) $generated@@184)))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@111) ($generated@@73 $generated@@182) $generated@@184))
)))))
 :weight 3
 :pattern ( ($generated@@109 ($generated@@64 $generated@@40 $generated@@182)))
))))
(assert (forall (($generated@@186 T@U) ) (! (< ($generated@@185 $generated@@186) ($generated@@185 ($generated@@94 $generated@@186)))
 :pattern ( ($generated@@94 $generated@@186))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@187 $generated@@197 $generated@@198 $generated@@199 ($generated@@193 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@202 $generated@@203) $generated@@200)
 :weight 0
)) (and (forall (($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@187 $generated@@204 $generated@@205 $generated@@206 ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@T) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@187 $generated@@213 $generated@@214 $generated@@215 ($generated@@193 $generated@@213 $generated@@214 $generated@@215 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@187 $generated@@213 $generated@@214 $generated@@215 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (= ($generated@@7 $generated@@188) 5)) (= ($generated@@7 $generated@@189) 6)) (forall (($generated@@222 T@T) ($generated@@223 T@T) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@191 $generated@@222 $generated@@223 ($generated@@194 $generated@@222 $generated@@223 $generated@@225 $generated@@226 $generated@@224) $generated@@226) $generated@@224)
 :weight 0
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@231 $generated@@232) (= ($generated@@191 $generated@@227 $generated@@228 ($generated@@194 $generated@@227 $generated@@228 $generated@@230 $generated@@231 $generated@@229) $generated@@232) ($generated@@191 $generated@@227 $generated@@228 $generated@@230 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (= ($generated@@7 ($generated@@192 $generated@@233 $generated@@234)) 7))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@195 ($generated@@192 $generated@@235 $generated@@236)) $generated@@235)
 :pattern ( ($generated@@192 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (! (= ($generated@@196 ($generated@@192 $generated@@237 $generated@@238)) $generated@@238)
 :pattern ( ($generated@@192 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (= ($generated@@12 ($generated@@187 $generated@@188 $generated@@189 $generated@@8 ($generated@@190 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (or (not (= $generated@@243 $generated@@239)) (not true)) ($generated@@12 ($generated@@71 $generated@@8 ($generated@@191 $generated@@189 $generated@@67 ($generated@@191 $generated@@188 ($generated@@192 $generated@@189 $generated@@67) $generated@@240 $generated@@243) $generated@@241)))) $generated@@242))
 :pattern ( ($generated@@187 $generated@@188 $generated@@189 $generated@@8 ($generated@@190 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> ($generated@@86 $generated@@246 ($generated@@48 $generated@@245)) (and (= ($generated@@60 $generated@@40 ($generated@@71 $generated@@40 $generated@@246)) $generated@@246) ($generated@@39 $generated@@40 ($generated@@71 $generated@@40 $generated@@246) ($generated@@48 $generated@@245))))
 :pattern ( ($generated@@86 $generated@@246 ($generated@@48 $generated@@245)))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> ($generated@@122 $generated@@247) (= $generated@@247 ($generated@@28 ($generated@@29 $generated@@247))))
 :pattern ( ($generated@@29 $generated@@247))
 :pattern ( ($generated@@122 $generated@@247))
)))
(assert (= ($generated@@119 $generated@@41) $generated@@0))
(assert (= ($generated@@120 $generated@@41) $generated@@5))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Int) ) (!  (=> (or ($generated@@112 $generated@@249 $generated@@250) (and (< 2 $generated@@35) (and ($generated@@39 $generated@@40 $generated@@249 ($generated@@48 $generated@@41)) (<= ($generated@@38 0) $generated@@250)))) (and (=> (not ($generated@@69 $generated@@249)) (let (($generated@@251 ($generated@@70 $generated@@249)))
(let (($generated@@252 ($generated@@71 $generated@@40 ($generated@@72 $generated@@249))))
 (=> (<= ($generated@@38 1) $generated@@250) (and (and ($generated@@44 $generated@@252) ($generated@@112 ($generated@@73 $generated@@252) (- $generated@@250 1))) (=> ($generated@@46 $generated@@248 ($generated@@73 $generated@@252) (- $generated@@250 1)) ($generated@@112 $generated@@251 $generated@@250))))))) (= ($generated@@46 ($generated@@47 $generated@@248) $generated@@249 $generated@@250) (ite ($generated@@69 $generated@@249) true (let (($generated@@253 ($generated@@70 $generated@@249)))
(let (($generated@@254 ($generated@@71 $generated@@40 ($generated@@72 $generated@@249))))
 (and (and (<= ($generated@@38 1) $generated@@250) ($generated@@46 $generated@@248 ($generated@@73 $generated@@254) (- $generated@@250 1))) ($generated@@46 $generated@@248 $generated@@253 $generated@@250))))))))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@248) $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and ($generated@@122 $generated@@256) (<= ($generated@@29 $generated@@256) ($generated@@29 $generated@@255))) (or (and (= $generated@@256 ($generated@@28 0)) (= ($generated@@27 $generated@@255 $generated@@256) $generated@@255)) (and (or (not (= $generated@@256 ($generated@@28 0))) (not true)) ($generated@@23 ($generated@@27 $generated@@255 $generated@@256) $generated@@255))))
 :pattern ( ($generated@@27 $generated@@255 $generated@@256))
)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 Int) ($generated@@260 T@U) ) (!  (=> (and (and ($generated@@39 $generated@@40 $generated@@258 ($generated@@48 $generated@@41)) (<= ($generated@@38 0) $generated@@259)) (= $generated@@260 ($generated@@28 0))) ($generated@@49 $generated@@257 $generated@@260 $generated@@258 $generated@@259))
 :pattern ( ($generated@@49 $generated@@257 $generated@@260 $generated@@258 $generated@@259))
))))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@60 $generated@@9 ($generated@@13 ($generated@@38 $generated@@261))) ($generated@@64 $generated@@67 ($generated@@60 $generated@@9 ($generated@@13 $generated@@261))))
 :pattern ( ($generated@@60 $generated@@9 ($generated@@13 ($generated@@38 $generated@@261))))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@94 ($generated@@64 $generated@@40 $generated@@262)) ($generated@@64 $generated@@40 ($generated@@94 $generated@@262)))
 :pattern ( ($generated@@94 ($generated@@64 $generated@@40 $generated@@262)))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@T) ) (! (= ($generated@@60 $generated@@264 ($generated@@64 $generated@@264 $generated@@263)) ($generated@@64 $generated@@67 ($generated@@60 $generated@@264 $generated@@263)))
 :pattern ( ($generated@@60 $generated@@264 ($generated@@64 $generated@@264 $generated@@263)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 () Int)
(declare-fun $generated@@272 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@273  (=> (= $generated@@265 ($generated@@190 $generated@@266 $generated@@267 $generated false)) (=> (and ($generated@@268 $generated@@269) ($generated@@270 $generated@@269)) (=> (and (and (= $generated@@267 $generated@@269) (forall (($generated@@274 Int) ) (!  (=> (and (and (<= ($generated@@38 0) $generated@@274) ($generated@@12 ($generated@@64 $generated@@8 ($generated@@11 true)))) (and (<= 0 $generated@@274) (< $generated@@274 $generated@@271))) ($generated@@109 ($generated@@36 ($generated@@47 $generated@@111) $generated@@274)))
 :pattern ( ($generated@@36 ($generated@@47 $generated@@111) $generated@@274))
))) (and ($generated@@268 $generated@@272) ($generated@@270 $generated@@272))) (=> (and (and (and ($generated@@56 $generated@@271) ($generated@@112 ($generated@@55 ($generated@@47 $generated@@111) $generated@@271) $generated@@271)) (and ($generated@@112 ($generated@@55 ($generated@@47 $generated@@111) $generated@@271) $generated@@271) (and ($generated@@46 ($generated@@47 $generated@@111) ($generated@@55 ($generated@@47 $generated@@111) $generated@@271) $generated@@271) (ite ($generated@@69 ($generated@@55 ($generated@@47 $generated@@111) $generated@@271)) true (let (($generated@@275 ($generated@@70 ($generated@@55 ($generated@@47 $generated@@111) $generated@@271))))
(let (($generated@@276 ($generated@@71 $generated@@40 ($generated@@72 ($generated@@55 ($generated@@47 $generated@@111) $generated@@271)))))
 (and (and (<= ($generated@@38 1) $generated@@271) ($generated@@46 ($generated@@47 $generated@@111) ($generated@@73 $generated@@276) (- $generated@@271 1))) ($generated@@46 ($generated@@47 $generated@@111) $generated@@275 $generated@@271)))))))) (and (and (= $generated@@269 $generated@@272) (= (ControlFlow 0 2) (- 0 1))) ($generated@@110 ($generated@@36 ($generated@@47 $generated@@111) $generated@@271)))) (or ($generated@@109 ($generated@@36 ($generated@@47 $generated@@111) $generated@@271)) (exists (($generated@@277 Int) ) (!  (and (<= ($generated@@38 0) $generated@@277) (and (<= ($generated@@38 0) $generated@@277) ($generated@@46 ($generated@@47 $generated@@111) ($generated@@73 ($generated@@36 ($generated@@47 $generated@@111) $generated@@271)) $generated@@277)))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@111) ($generated@@73 ($generated@@36 ($generated@@47 $generated@@111) $generated@@271)) $generated@@277))
)))))))))
(let (($generated@@278  (=> (and (and (and ($generated@@268 $generated@@267) ($generated@@270 $generated@@267)) (<= ($generated@@38 0) $generated@@271)) (and (= 4 $generated@@35) (= (ControlFlow 0 3) 2))) $generated@@273)))
$generated@@278)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
