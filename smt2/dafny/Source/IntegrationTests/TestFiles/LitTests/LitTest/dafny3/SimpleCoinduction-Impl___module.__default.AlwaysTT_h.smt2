(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U T@U) Bool)
(declare-fun $generated@@0 (T@T) Int)
(declare-fun $generated@@1 () T@T)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 (Bool) T@U)
(declare-fun $generated@@5 (T@U) Bool)
(declare-fun $generated@@6 (Int) T@U)
(declare-fun $generated@@7 (T@U) Int)
(declare-fun $generated@@8 (Real) T@U)
(declare-fun $generated@@9 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) T@U)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U Int) Bool)
(declare-fun $generated@@30 (Int) Int)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U Int) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@66 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@70 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@73 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@0 $generated@@1) 0) (= ($generated@@0 $generated@@2) 1)) (= ($generated@@0 $generated@@3) 2)) (forall (($generated@@10 Bool) ) (! (= ($generated@@5 ($generated@@4 $generated@@10)) $generated@@10)
 :pattern ( ($generated@@4 $generated@@10))
))) (forall (($generated@@11 T@U) ) (! (= ($generated@@4 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 Int) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Real) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))))
(assert (forall (($generated@@16 T@U) ($generated@@17 T@U) ($generated@@18 T@U) ) (!  (=> (and ($generated $generated@@16 $generated@@17) ($generated $generated@@17 $generated@@18)) ($generated $generated@@16 $generated@@18))
 :pattern ( ($generated $generated@@16 $generated@@17) ($generated $generated@@17 $generated@@18))
 :pattern ( ($generated $generated@@16 $generated@@17) ($generated $generated@@16 $generated@@18))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 Int) ($generated@@24 Int) ) (!  (=> (and (and (<= 0 $generated@@23) (<= 0 $generated@@24)) (<= (+ $generated@@23 $generated@@24) ($generated@@21 $generated@@22))) (= ($generated@@19 ($generated@@19 $generated@@22 ($generated@@20 $generated@@23)) ($generated@@20 $generated@@24)) ($generated@@19 $generated@@22 ($generated@@20 (+ $generated@@23 $generated@@24)))))
 :pattern ( ($generated@@19 ($generated@@19 $generated@@22 ($generated@@20 $generated@@23)) ($generated@@20 $generated@@24)))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@27 T@U) ($generated@@28 Int) ($generated@@29 T@U) ) (!  (=> (= $generated@@29 ($generated@@20 0)) ($generated@@26 $generated@@27 $generated@@29 $generated@@28))
 :pattern ( ($generated@@26 $generated@@27 $generated@@29 $generated@@28))
))))
(assert (forall (($generated@@31 Int) ) (! (= ($generated@@30 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@31))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@T) ) (! (= ($generated@@32 $generated@@34 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@34 $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@36 $generated@@38 ($generated@@35 $generated@@38 $generated@@37)) $generated@@37)
 :pattern ( ($generated@@35 $generated@@38 $generated@@37))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 Int) ) (!  (=> (or ($generated@@40 $generated@@42 $generated@@43) (< 1 $generated@@25)) (and (and (=> (< 0 ($generated@@21 $generated@@42)) ($generated@@40 ($generated@@19 $generated@@42 ($generated@@20 1)) (+ $generated@@43 1))) (=> (=> (< 0 ($generated@@21 $generated@@42)) ($generated@@26 $generated@@41 ($generated@@19 $generated@@42 ($generated@@20 1)) (+ $generated@@43 1))) (=> (= ($generated@@30 0) ($generated@@21 $generated@@42)) (forall (($generated@@44 T@U) ) (!  (=> ($generated $generated@@44 $generated@@42) ($generated@@40 $generated@@44 $generated@@43))
 :pattern ( ($generated@@26 $generated@@41 $generated@@44 $generated@@43))
))))) (= ($generated@@26 ($generated@@39 $generated@@41) $generated@@42 $generated@@43)  (and (=> (< 0 ($generated@@21 $generated@@42)) ($generated@@26 $generated@@41 ($generated@@19 $generated@@42 ($generated@@20 1)) (+ $generated@@43 1))) (=> (= ($generated@@30 0) ($generated@@21 $generated@@42)) (forall (($generated@@45 T@U) ) (!  (=> ($generated $generated@@45 $generated@@42) ($generated@@26 $generated@@41 $generated@@45 $generated@@43))
 :pattern ( ($generated@@26 $generated@@41 $generated@@45 $generated@@43))
)))))))
 :pattern ( ($generated@@26 ($generated@@39 $generated@@41) $generated@@42 $generated@@43))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 Int) ) (! (= ($generated@@26 ($generated@@39 $generated@@46) $generated@@47 $generated@@48) ($generated@@26 $generated@@46 $generated@@47 $generated@@48))
 :pattern ( ($generated@@26 ($generated@@39 $generated@@46) $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (and ($generated@@49 $generated@@51) (<= ($generated@@21 $generated@@51) ($generated@@21 $generated@@50))) (and (= ($generated@@49 ($generated@@19 $generated@@50 $generated@@51)) ($generated@@49 $generated@@50)) (= ($generated@@21 ($generated@@19 $generated@@50 $generated@@51)) (- ($generated@@21 $generated@@50) ($generated@@21 $generated@@51)))))
 :pattern ( ($generated@@19 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@52 Int) ) (!  (=> (<= 0 $generated@@52) (and ($generated@@49 ($generated@@20 $generated@@52)) (= ($generated@@21 ($generated@@20 $generated@@52)) $generated@@52)))
 :pattern ( ($generated@@20 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (or ($generated $generated@@53 $generated@@54) (= $generated@@53 $generated@@54)) ($generated $generated@@54 $generated@@53))
 :pattern ( ($generated $generated@@53 $generated@@54) ($generated $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (! (<= 0 ($generated@@21 $generated@@55))
 :pattern ( ($generated@@21 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@35 $generated@@57 ($generated@@36 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@36 $generated@@57 $generated@@56))
)))
(assert (= ($generated@@0 $generated@@58) 3))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 Int) ) (!  (=> (or ($generated@@40 ($generated@@32 $generated@@58 $generated@@60) $generated@@61) (< 1 $generated@@25)) (and (and (=> (< 0 ($generated@@21 $generated@@60)) ($generated@@40 ($generated@@19 $generated@@60 ($generated@@20 1)) (+ $generated@@61 1))) (=> (=> (< 0 ($generated@@21 $generated@@60)) ($generated@@26 ($generated@@39 $generated@@59) ($generated@@19 $generated@@60 ($generated@@20 1)) (+ $generated@@61 1))) (=> (= ($generated@@30 0) ($generated@@21 $generated@@60)) (forall (($generated@@62 T@U) ) (!  (=> ($generated $generated@@62 $generated@@60) ($generated@@40 $generated@@62 $generated@@61))
 :pattern ( ($generated@@26 ($generated@@39 $generated@@59) $generated@@62 $generated@@61))
))))) (= ($generated@@26 ($generated@@39 $generated@@59) ($generated@@32 $generated@@58 $generated@@60) $generated@@61)  (and (=> (< 0 ($generated@@21 $generated@@60)) ($generated@@26 ($generated@@39 $generated@@59) ($generated@@19 $generated@@60 ($generated@@20 1)) (+ $generated@@61 1))) (=> (= ($generated@@30 0) ($generated@@21 $generated@@60)) (forall (($generated@@63 T@U) ) (!  (=> ($generated $generated@@63 $generated@@60) ($generated@@26 ($generated@@39 $generated@@59) $generated@@63 $generated@@61))
 :pattern ( ($generated@@26 ($generated@@39 $generated@@59) $generated@@63 $generated@@61))
)))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@39 $generated@@59) ($generated@@32 $generated@@58 $generated@@60) $generated@@61))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (and (and (and (=> ($generated $generated@@64 $generated@@65) (or (not (= $generated@@64 $generated@@65)) (not true))) (=> (and ($generated@@49 $generated@@64) (not ($generated@@49 $generated@@65))) ($generated $generated@@64 $generated@@65))) (=> (and ($generated@@49 $generated@@64) ($generated@@49 $generated@@65)) (= ($generated $generated@@64 $generated@@65) (< ($generated@@21 $generated@@64) ($generated@@21 $generated@@65))))) (=> (and ($generated $generated@@64 $generated@@65) ($generated@@49 $generated@@65)) ($generated@@49 $generated@@64)))
 :pattern ( ($generated $generated@@64 $generated@@65))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@76 T@T) ($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@66 $generated@@76 $generated@@77 $generated@@78 ($generated@@72 $generated@@76 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@82 $generated@@79) $generated@@81 $generated@@82) $generated@@79)
 :weight 0
)) (and (forall (($generated@@83 T@T) ($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (or (= $generated@@88 $generated@@90) (= ($generated@@66 $generated@@83 $generated@@84 $generated@@85 ($generated@@72 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@89 $generated@@86) $generated@@90 $generated@@91) ($generated@@66 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@90 $generated@@91)))
 :weight 0
)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or (= $generated@@98 $generated@@100) (= ($generated@@66 $generated@@92 $generated@@93 $generated@@94 ($generated@@72 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@99 $generated@@100) ($generated@@66 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@99 $generated@@100)))
 :weight 0
)))) (= ($generated@@0 $generated@@67) 4)) (= ($generated@@0 $generated@@68) 5)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@70 $generated@@101 $generated@@102 ($generated@@73 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@103) $generated@@105) $generated@@103)
 :weight 0
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@70 $generated@@106 $generated@@107 ($generated@@73 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@70 $generated@@106 $generated@@107 $generated@@109 $generated@@111)))
 :weight 0
))) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@0 ($generated@@71 $generated@@112 $generated@@113)) 6))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@71 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@71 $generated@@116 $generated@@117))
))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 Bool) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@5 ($generated@@66 $generated@@67 $generated@@68 $generated@@1 ($generated@@69 $generated@@118 $generated@@119 $generated@@120 $generated@@121) $generated@@122 $generated@@123))  (=> (and (or (not (= $generated@@122 $generated@@118)) (not true)) ($generated@@5 ($generated@@35 $generated@@1 ($generated@@70 $generated@@68 $generated@@58 ($generated@@70 $generated@@67 ($generated@@71 $generated@@68 $generated@@58) $generated@@119 $generated@@122) $generated@@120)))) $generated@@121))
 :pattern ( ($generated@@66 $generated@@67 $generated@@68 $generated@@1 ($generated@@69 $generated@@118 $generated@@119 $generated@@120 $generated@@121) $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@49 $generated@@124) (= $generated@@124 ($generated@@20 ($generated@@21 $generated@@124))))
 :pattern ( ($generated@@21 $generated@@124))
 :pattern ( ($generated@@49 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@49 $generated@@126) (<= ($generated@@21 $generated@@126) ($generated@@21 $generated@@125))) (or (and (= $generated@@126 ($generated@@20 0)) (= ($generated@@19 $generated@@125 $generated@@126) $generated@@125)) (and (or (not (= $generated@@126 ($generated@@20 0))) (not true)) ($generated ($generated@@19 $generated@@125 $generated@@126) $generated@@125))))
 :pattern ( ($generated@@19 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 Int) ) (! (= ($generated@@36 $generated@@2 ($generated@@6 ($generated@@30 $generated@@127))) ($generated@@32 $generated@@58 ($generated@@36 $generated@@2 ($generated@@6 $generated@@127))))
 :pattern ( ($generated@@36 $generated@@2 ($generated@@6 ($generated@@30 $generated@@127))))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@36 $generated@@129 ($generated@@32 $generated@@129 $generated@@128)) ($generated@@32 $generated@@58 ($generated@@36 $generated@@129 $generated@@128)))
 :pattern ( ($generated@@36 $generated@@129 ($generated@@32 $generated@@129 $generated@@128)))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 Int) ) (!  (=> (or ($generated@@40 ($generated@@32 $generated@@58 $generated@@131) ($generated@@30 $generated@@132)) (< 1 $generated@@25)) (and (and (=> (< 0 ($generated@@21 $generated@@131)) ($generated@@40 ($generated@@19 $generated@@131 ($generated@@20 1)) ($generated@@30 (+ $generated@@132 1)))) (=> (=> (< 0 ($generated@@21 $generated@@131)) ($generated@@26 ($generated@@39 $generated@@130) ($generated@@19 $generated@@131 ($generated@@20 1)) ($generated@@30 (+ $generated@@132 1)))) (=> (= ($generated@@30 0) ($generated@@21 $generated@@131)) (forall (($generated@@133 T@U) ) (!  (=> ($generated $generated@@133 $generated@@131) ($generated@@40 $generated@@133 $generated@@132))
 :pattern ( ($generated@@26 ($generated@@39 $generated@@130) $generated@@133 $generated@@132))
))))) (= ($generated@@26 ($generated@@39 $generated@@130) ($generated@@32 $generated@@58 $generated@@131) ($generated@@30 $generated@@132))  (and (=> (< 0 ($generated@@21 $generated@@131)) ($generated@@26 ($generated@@39 $generated@@130) ($generated@@19 $generated@@131 ($generated@@20 1)) ($generated@@30 (+ $generated@@132 1)))) (=> (= ($generated@@30 0) ($generated@@21 $generated@@131)) (forall (($generated@@134 T@U) ) (!  (=> ($generated $generated@@134 $generated@@131) ($generated@@26 ($generated@@39 $generated@@130) $generated@@134 $generated@@132))
 :pattern ( ($generated@@26 ($generated@@39 $generated@@130) $generated@@134 $generated@@132))
)))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@39 $generated@@130) ($generated@@32 $generated@@58 $generated@@131) ($generated@@30 $generated@@132)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@146  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@40 $generated@@135 $generated@@136) (or ($generated@@26 ($generated@@39 $generated@@137) $generated@@135 $generated@@136) (=> (< 0 ($generated@@21 $generated@@135)) ($generated@@26 ($generated@@39 ($generated@@39 $generated@@137)) ($generated@@19 $generated@@135 ($generated@@20 1)) (+ $generated@@136 1)))))) (=> (=> ($generated@@40 $generated@@135 $generated@@136) (or ($generated@@26 ($generated@@39 $generated@@137) $generated@@135 $generated@@136) (=> (< 0 ($generated@@21 $generated@@135)) ($generated@@26 ($generated@@39 ($generated@@39 $generated@@137)) ($generated@@19 $generated@@135 ($generated@@20 1)) (+ $generated@@136 1))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@40 $generated@@135 $generated@@136) (or ($generated@@26 ($generated@@39 $generated@@137) $generated@@135 $generated@@136) (=> (= ($generated@@30 0) ($generated@@21 $generated@@135)) (forall (($generated@@147 T@U) ) (!  (=> ($generated $generated@@147 $generated@@135) ($generated@@26 ($generated@@39 ($generated@@39 $generated@@137)) $generated@@147 $generated@@136))
 :pattern ( ($generated@@26 ($generated@@39 ($generated@@39 $generated@@137)) $generated@@147 $generated@@136))
))))))))))
(let (($generated@@148  (=> (<= ($generated@@21 $generated@@135) 0) (=> (and (and (and ($generated@@138 $generated@@139) ($generated@@140 $generated@@139)) (= $generated@@141 $generated@@139)) (and (forall (($generated@@149 T@U) ($generated@@150 Int) ) (!  (=> ($generated $generated@@149 $generated@@135) ($generated@@26 ($generated@@39 $generated@@137) $generated@@149 $generated@@150))
 :pattern ( ($generated@@26 ($generated@@39 $generated@@137) $generated@@149 $generated@@150))
)) (= (ControlFlow 0 5) 2))) $generated@@146))))
(let (($generated@@151  (=> (and (< 0 ($generated@@21 $generated@@135)) (= (ControlFlow 0 4) 2)) $generated@@146)))
(let (($generated@@152  (=> (= $generated@@142 ($generated@@69 $generated@@143 $generated@@144 $generated@@145 false)) (=> (and (and ($generated@@138 $generated@@141) ($generated@@140 $generated@@141)) (and (= $generated@@144 $generated@@141) (forall (($generated@@153 T@U) ($generated@@154 Int) ) (!  (=> (and ($generated@@5 ($generated@@32 $generated@@1 ($generated@@4 true))) (or ($generated $generated@@153 $generated@@135) (and (= $generated@@153 $generated@@135) (and (<= 0 $generated@@154) (< $generated@@154 $generated@@136))))) ($generated@@26 ($generated@@39 $generated@@137) $generated@@153 $generated@@154))
 :pattern ( ($generated@@26 ($generated@@39 $generated@@137) $generated@@153 $generated@@154))
)))) (and (=> (= (ControlFlow 0 6) 4) $generated@@151) (=> (= (ControlFlow 0 6) 5) $generated@@148))))))
(let (($generated@@155  (=> (and (and ($generated@@138 $generated@@144) ($generated@@140 $generated@@144)) (and (= 2 $generated@@25) (= (ControlFlow 0 7) 6))) $generated@@152)))
$generated@@155))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
