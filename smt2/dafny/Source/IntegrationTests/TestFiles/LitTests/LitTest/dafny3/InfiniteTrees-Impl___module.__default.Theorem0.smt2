(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@36 () Int)
(declare-fun $generated@@37 (T@U T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U) Int)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (Int) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@80 (T@U T@U Int) Bool)
(declare-fun $generated@@81 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@U T@U Int) Bool)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@113 (T@T T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U Int) Bool)
(declare-fun $generated@@152 (T@U T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Int)
(declare-fun $generated@@242 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@243 () T@T)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@245 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@246 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@247 (T@T T@T) T@T)
(declare-fun $generated@@248 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@11 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@11 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@35 T@U) ) (!  (=> ($generated@@33 $generated@@35) ($generated@@34 $generated@@35))
 :pattern ( ($generated@@33 $generated@@35))
)))
(assert (= ($generated@@9 $generated@@41) 3))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (or ($generated@@39 $generated@@54 $generated@@55) (and (< 3 $generated@@36) ($generated@@40 $generated@@41 $generated@@55 ($generated@@42 $generated@@43)))) (and (and (=> (< 0 ($generated@@44 $generated@@54)) (=> (not ($generated@@45 $generated@@55)) (let (($generated@@56 ($generated@@46 $generated@@55)))
(let (($generated@@57 ($generated@@47 $generated@@41 ($generated@@48 $generated@@55))))
 (and (and ($generated@@34 $generated@@57) ($generated@@39 ($generated@@49 $generated@@54 ($generated@@50 1)) ($generated@@51 $generated@@57))) (=> ($generated@@37 $generated@@53 ($generated@@49 $generated@@54 ($generated@@50 1)) ($generated@@51 $generated@@57)) ($generated@@39 ($generated@@49 $generated@@54 ($generated@@50 1)) $generated@@56))))))) (=> (=> (< 0 ($generated@@44 $generated@@54)) (ite ($generated@@45 $generated@@55) false (let (($generated@@58 ($generated@@46 $generated@@55)))
(let (($generated@@59 ($generated@@47 $generated@@41 ($generated@@48 $generated@@55))))
 (and ($generated@@37 $generated@@53 ($generated@@49 $generated@@54 ($generated@@50 1)) ($generated@@51 $generated@@59)) ($generated@@37 $generated@@53 ($generated@@49 $generated@@54 ($generated@@50 1)) $generated@@58)))))) (=> (= ($generated@@52 0) ($generated@@44 $generated@@54)) (forall (($generated@@60 T@U) ) (!  (=> ($generated@@25 $generated@@60 $generated@@54) ($generated@@39 $generated@@60 $generated@@55))
 :pattern ( ($generated@@37 $generated@@53 $generated@@60 $generated@@55))
))))) (= ($generated@@37 ($generated@@38 $generated@@53) $generated@@54 $generated@@55)  (and (=> (< 0 ($generated@@44 $generated@@54)) (ite ($generated@@45 $generated@@55) false (let (($generated@@61 ($generated@@46 $generated@@55)))
(let (($generated@@62 ($generated@@47 $generated@@41 ($generated@@48 $generated@@55))))
 (and ($generated@@37 $generated@@53 ($generated@@49 $generated@@54 ($generated@@50 1)) ($generated@@51 $generated@@62)) ($generated@@37 $generated@@53 ($generated@@49 $generated@@54 ($generated@@50 1)) $generated@@61)))))) (=> (= ($generated@@52 0) ($generated@@44 $generated@@54)) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@25 $generated@@63 $generated@@54) ($generated@@37 $generated@@53 $generated@@63 $generated@@55))
 :pattern ( ($generated@@37 $generated@@53 $generated@@63 $generated@@55))
)))))))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@53) $generated@@54 $generated@@55))
))))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@70 T@U) ) (!  (=> (or ($generated@@66 ($generated@@65 $generated@@41 $generated@@70)) (and (< 3 $generated@@36) ($generated@@40 $generated@@41 $generated@@70 $generated@@43))) (and (and ($generated@@34 ($generated@@65 $generated@@41 $generated@@70)) ($generated@@67 ($generated@@65 $generated@@41 ($generated@@51 ($generated@@65 $generated@@41 $generated@@70))))) (= ($generated@@64 ($generated@@65 $generated@@41 $generated@@70))  (not ($generated@@14 ($generated@@65 $generated@@10 ($generated@@13 ($generated@@68 ($generated@@38 $generated@@69) ($generated@@65 $generated@@41 ($generated@@51 ($generated@@65 $generated@@41 $generated@@70)))))))))))
 :weight 3
 :pattern ( ($generated@@64 ($generated@@65 $generated@@41 $generated@@70)))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 Int) ($generated@@73 Int) ) (!  (=> (and (and (<= 0 $generated@@72) (<= 0 $generated@@73)) (<= (+ $generated@@72 $generated@@73) ($generated@@44 $generated@@71))) (= ($generated@@49 ($generated@@49 $generated@@71 ($generated@@50 $generated@@72)) ($generated@@50 $generated@@73)) ($generated@@49 $generated@@71 ($generated@@50 (+ $generated@@72 $generated@@73)))))
 :pattern ( ($generated@@49 ($generated@@49 $generated@@71 ($generated@@50 $generated@@72)) ($generated@@50 $generated@@73)))
)))
(assert (= ($generated@@74 $generated@@75) $generated@@3))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@40 $generated@@41 $generated@@76 $generated@@43) ($generated@@34 $generated@@76))
 :pattern ( ($generated@@34 $generated@@76) ($generated@@40 $generated@@41 $generated@@76 $generated@@43))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> ($generated@@77 $generated@@79) ($generated@@29 $generated@@41 $generated@@75 ($generated@@42 $generated@@78) $generated@@79))
 :pattern ( ($generated@@29 $generated@@41 $generated@@75 ($generated@@42 $generated@@78) $generated@@79))
)))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 Int) ) (!  (=> (and (and ($generated@@40 $generated@@41 $generated@@83 ($generated@@42 $generated@@43)) (<= ($generated@@52 0) $generated@@84)) ($generated@@80 ($generated@@38 $generated@@82) $generated@@83 $generated@@84)) (forall (($generated@@85 T@U) ) (! ($generated@@81 ($generated@@38 $generated@@82) $generated@@85 $generated@@83 $generated@@84)
 :pattern ( ($generated@@81 ($generated@@38 $generated@@82) $generated@@85 $generated@@83 $generated@@84))
)))
 :pattern ( ($generated@@80 ($generated@@38 $generated@@82) $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@86 T@U) ) (! ($generated@@40 $generated@@41 $generated@@75 ($generated@@42 $generated@@86))
 :pattern ( ($generated@@40 $generated@@41 $generated@@75 ($generated@@42 $generated@@86)))
)))
(assert (forall (($generated@@87 Int) ) (! (= ($generated@@52 $generated@@87) $generated@@87)
 :pattern ( ($generated@@52 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@65 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@65 $generated@@89 $generated@@88))
)))
(assert (= ($generated@@9 $generated@@90) 4))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ) (!  (=> (or ($generated@@91 ($generated@@65 $generated@@90 $generated@@93) ($generated@@65 $generated@@41 $generated@@94) ($generated@@52 $generated@@95)) (and (< 3 $generated@@36) (and ($generated@@40 $generated@@41 $generated@@94 ($generated@@42 $generated@@43)) (<= ($generated@@52 0) $generated@@95)))) (and (and (=> (< 0 ($generated@@44 $generated@@93)) (=> (not ($generated@@14 ($generated@@65 $generated@@10 ($generated@@13 ($generated@@45 ($generated@@65 $generated@@41 $generated@@94)))))) (let (($generated@@96 ($generated@@65 $generated@@41 ($generated@@46 ($generated@@65 $generated@@41 $generated@@94)))))
(let (($generated@@97 ($generated@@65 $generated@@41 ($generated@@47 $generated@@41 ($generated@@48 ($generated@@65 $generated@@41 $generated@@94))))))
 (=> (<= ($generated@@52 1) ($generated@@52 $generated@@95)) (and (and ($generated@@34 $generated@@97) ($generated@@91 ($generated@@49 $generated@@93 ($generated@@50 1)) ($generated@@51 $generated@@97) ($generated@@52 (- $generated@@95 1)))) (=> ($generated@@81 ($generated@@38 $generated@@92) ($generated@@49 $generated@@93 ($generated@@50 1)) ($generated@@51 $generated@@97) ($generated@@52 (- $generated@@95 1))) ($generated@@91 ($generated@@49 $generated@@93 ($generated@@50 1)) $generated@@96 ($generated@@52 $generated@@95))))))))) (=> (=> (< 0 ($generated@@44 $generated@@93)) (ite ($generated@@45 ($generated@@65 $generated@@41 $generated@@94)) true (let (($generated@@98 ($generated@@65 $generated@@41 ($generated@@46 ($generated@@65 $generated@@41 $generated@@94)))))
(let (($generated@@99 ($generated@@65 $generated@@41 ($generated@@47 $generated@@41 ($generated@@48 ($generated@@65 $generated@@41 $generated@@94))))))
 (and (and (<= ($generated@@52 1) ($generated@@52 $generated@@95)) ($generated@@81 ($generated@@38 $generated@@92) ($generated@@49 $generated@@93 ($generated@@50 1)) ($generated@@65 $generated@@41 ($generated@@51 $generated@@99)) ($generated@@52 (- $generated@@95 1)))) ($generated@@81 ($generated@@38 $generated@@92) ($generated@@49 $generated@@93 ($generated@@50 1)) $generated@@98 ($generated@@52 $generated@@95))))))) (=> (= ($generated@@52 0) ($generated@@44 $generated@@93)) (forall (($generated@@100 T@U) ) (!  (=> ($generated@@25 $generated@@100 $generated@@93) ($generated@@91 $generated@@100 $generated@@94 $generated@@95))
 :pattern ( ($generated@@81 ($generated@@38 $generated@@92) $generated@@100 $generated@@94 $generated@@95))
))))) (= ($generated@@81 ($generated@@38 $generated@@92) ($generated@@65 $generated@@90 $generated@@93) ($generated@@65 $generated@@41 $generated@@94) ($generated@@52 $generated@@95))  (and (=> (< 0 ($generated@@44 $generated@@93)) (ite ($generated@@45 ($generated@@65 $generated@@41 $generated@@94)) true (let (($generated@@101 ($generated@@65 $generated@@41 ($generated@@46 ($generated@@65 $generated@@41 $generated@@94)))))
(let (($generated@@102 ($generated@@65 $generated@@41 ($generated@@47 $generated@@41 ($generated@@48 ($generated@@65 $generated@@41 $generated@@94))))))
 (and (and (<= ($generated@@52 1) ($generated@@52 $generated@@95)) ($generated@@81 ($generated@@38 $generated@@92) ($generated@@49 $generated@@93 ($generated@@50 1)) ($generated@@65 $generated@@41 ($generated@@51 $generated@@102)) ($generated@@52 (- $generated@@95 1)))) ($generated@@81 ($generated@@38 $generated@@92) ($generated@@49 $generated@@93 ($generated@@50 1)) $generated@@101 ($generated@@52 $generated@@95))))))) (=> (= ($generated@@52 0) ($generated@@44 $generated@@93)) (forall (($generated@@103 T@U) ) (!  (=> ($generated@@25 $generated@@103 $generated@@93) ($generated@@81 ($generated@@38 $generated@@92) $generated@@103 $generated@@94 $generated@@95))
 :pattern ( ($generated@@81 ($generated@@38 $generated@@92) $generated@@103 $generated@@94 $generated@@95))
)))))))
 :weight 3
 :pattern ( ($generated@@81 ($generated@@38 $generated@@92) ($generated@@65 $generated@@90 $generated@@93) ($generated@@65 $generated@@41 $generated@@94) ($generated@@52 $generated@@95)))
))))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@40 $generated@@41 ($generated@@104 $generated@@107 $generated@@108) ($generated@@42 $generated@@106))  (and ($generated@@105 $generated@@107 $generated@@106) ($generated@@40 $generated@@41 $generated@@108 ($generated@@42 $generated@@106))))
 :pattern ( ($generated@@40 $generated@@41 ($generated@@104 $generated@@107 $generated@@108) ($generated@@42 $generated@@106)))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@45 $generated@@109) (= ($generated@@74 $generated@@109) $generated@@3))
 :pattern ( ($generated@@45 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@110 $generated@@111) (= ($generated@@74 $generated@@111) $generated@@4))
 :pattern ( ($generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@34 $generated@@112) (= ($generated@@74 $generated@@112) $generated@@5))
 :pattern ( ($generated@@34 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@113 $generated@@115 ($generated@@47 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@47 $generated@@115 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@110 $generated@@116) (exists (($generated@@117 T@U) ($generated@@118 T@U) ) (= $generated@@116 ($generated@@104 $generated@@117 $generated@@118))))
 :pattern ( ($generated@@110 $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@45 $generated@@119) (= $generated@@119 $generated@@75))
 :pattern ( ($generated@@45 $generated@@119))
)))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@40 $generated@@41 $generated@@121 ($generated@@42 $generated@@43)) (= $generated@@122 ($generated@@50 0))) ($generated@@37 $generated@@120 $generated@@122 $generated@@121))
 :pattern ( ($generated@@37 $generated@@120 $generated@@122 $generated@@121))
))))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (or ($generated@@67 $generated@@124) (and (< 2 $generated@@36) ($generated@@40 $generated@@41 $generated@@124 ($generated@@42 $generated@@43)))) (and (=> (not ($generated@@45 $generated@@124)) (let (($generated@@125 ($generated@@46 $generated@@124)))
(let (($generated@@126 ($generated@@47 $generated@@41 ($generated@@48 $generated@@124))))
 (and (and ($generated@@34 $generated@@126) ($generated@@67 ($generated@@51 $generated@@126))) (=> ($generated@@68 $generated@@123 ($generated@@51 $generated@@126)) ($generated@@67 $generated@@125)))))) (= ($generated@@68 ($generated@@38 $generated@@123) $generated@@124) (ite ($generated@@45 $generated@@124) false (let (($generated@@127 ($generated@@46 $generated@@124)))
(let (($generated@@128 ($generated@@47 $generated@@41 ($generated@@48 $generated@@124))))
 (and ($generated@@68 $generated@@123 ($generated@@51 $generated@@128)) ($generated@@68 $generated@@123 $generated@@127))))))))
 :pattern ( ($generated@@68 ($generated@@38 $generated@@123) $generated@@124))
))))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and ($generated@@40 $generated@@41 $generated@@130 ($generated@@42 $generated@@43)) (forall (($generated@@131 T@U) ) (! ($generated@@37 ($generated@@38 $generated@@129) $generated@@131 $generated@@130)
 :pattern ( ($generated@@37 ($generated@@38 $generated@@129) $generated@@131 $generated@@130))
))) ($generated@@68 ($generated@@38 $generated@@129) $generated@@130))
 :pattern ( ($generated@@68 ($generated@@38 $generated@@129) $generated@@130))
))))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@34 $generated@@133) (exists (($generated@@134 T@U) ) (= $generated@@133 ($generated@@132 $generated@@134))))
 :pattern ( ($generated@@34 $generated@@133))
)))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Int) ) (!  (=> (and (and ($generated@@40 $generated@@41 $generated@@136 ($generated@@42 $generated@@43)) (<= ($generated@@52 0) $generated@@137)) (forall (($generated@@138 T@U) ) (! ($generated@@81 ($generated@@38 $generated@@135) $generated@@138 $generated@@136 $generated@@137)
 :pattern ( ($generated@@81 ($generated@@38 $generated@@135) $generated@@138 $generated@@136 $generated@@137))
))) ($generated@@80 ($generated@@38 $generated@@135) $generated@@136 $generated@@137))
 :pattern ( ($generated@@80 ($generated@@38 $generated@@135) $generated@@136 $generated@@137))
))))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@142 T@U) ) (!  (=> (or ($generated@@140 $generated@@142) (and (< 3 $generated@@36) ($generated@@40 $generated@@41 $generated@@142 $generated@@43))) (and (forall (($generated@@143 Int) ) (!  (=> (<= ($generated@@52 0) $generated@@143) (=> (<= ($generated@@52 0) $generated@@143) (and ($generated@@34 $generated@@142) ($generated@@141 ($generated@@51 $generated@@142) $generated@@143))))
 :pattern ( ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@142) $generated@@143))
)) (= ($generated@@139 $generated@@142) (exists (($generated@@144 Int) ) (!  (and (<= ($generated@@52 0) $generated@@144) (and (<= ($generated@@52 0) $generated@@144) ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@142) $generated@@144)))
 :pattern ( ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@142) $generated@@144))
)))))
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@40 $generated@@11 $generated@@145 $generated@@30) (<= ($generated@@52 0) ($generated@@16 $generated@@145)))
 :pattern ( ($generated@@40 $generated@@11 $generated@@145 $generated@@30))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Int) ) (! (= ($generated@@80 ($generated@@38 $generated@@146) $generated@@147 $generated@@148) ($generated@@80 $generated@@146 $generated@@147 $generated@@148))
 :pattern ( ($generated@@80 ($generated@@38 $generated@@146) $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@37 ($generated@@38 $generated@@149) $generated@@150 $generated@@151) ($generated@@37 $generated@@149 $generated@@150 $generated@@151))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@152 ($generated@@113 $generated@@156 $generated@@153) $generated@@154 $generated@@155) ($generated@@29 $generated@@156 $generated@@153 $generated@@154 $generated@@155))
 :pattern ( ($generated@@152 ($generated@@113 $generated@@156 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@159 T@U) ) (!  (and (= ($generated@@157 ($generated@@42 $generated@@159)) $generated@@1) (= ($generated@@158 ($generated@@42 $generated@@159)) $generated@@7))
 :pattern ( ($generated@@42 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@160 $generated@@162) (<= ($generated@@44 $generated@@162) ($generated@@44 $generated@@161))) (and (= ($generated@@160 ($generated@@49 $generated@@161 $generated@@162)) ($generated@@160 $generated@@161)) (= ($generated@@44 ($generated@@49 $generated@@161 $generated@@162)) (- ($generated@@44 $generated@@161) ($generated@@44 $generated@@162)))))
 :pattern ( ($generated@@49 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 Int) ) (!  (=> (<= 0 $generated@@163) (and ($generated@@160 ($generated@@50 $generated@@163)) (= ($generated@@44 ($generated@@50 $generated@@163)) $generated@@163)))
 :pattern ( ($generated@@50 $generated@@163))
)))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@40 $generated@@41 $generated@@165 ($generated@@42 $generated@@43)) ($generated@@68 ($generated@@38 $generated@@164) $generated@@165)) (forall (($generated@@166 T@U) ) (! ($generated@@37 ($generated@@38 $generated@@164) $generated@@166 $generated@@165)
 :pattern ( ($generated@@37 ($generated@@38 $generated@@164) $generated@@166 $generated@@165))
)))
 :pattern ( ($generated@@68 ($generated@@38 $generated@@164) $generated@@165))
))))
(assert (forall (($generated@@167 T@U) ) (!  (=> ($generated@@105 $generated@@167 $generated@@30) (and (= ($generated@@113 $generated@@11 ($generated@@47 $generated@@11 $generated@@167)) $generated@@167) ($generated@@40 $generated@@11 ($generated@@47 $generated@@11 $generated@@167) $generated@@30)))
 :pattern ( ($generated@@105 $generated@@167 $generated@@30))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> ($generated@@105 $generated@@168 $generated@@43) (and (= ($generated@@113 $generated@@41 ($generated@@47 $generated@@41 $generated@@168)) $generated@@168) ($generated@@40 $generated@@41 ($generated@@47 $generated@@41 $generated@@168) $generated@@43)))
 :pattern ( ($generated@@105 $generated@@168 $generated@@43))
)))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@169 T@U) ) (!  (=> (or ($generated@@66 $generated@@169) (and (< 3 $generated@@36) ($generated@@40 $generated@@41 $generated@@169 $generated@@43))) (and (and ($generated@@34 $generated@@169) ($generated@@67 ($generated@@51 $generated@@169))) (= ($generated@@64 $generated@@169)  (not ($generated@@68 ($generated@@38 $generated@@69) ($generated@@51 $generated@@169))))))
 :pattern ( ($generated@@64 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (or ($generated@@25 $generated@@170 $generated@@171) (= $generated@@170 $generated@@171)) ($generated@@25 $generated@@171 $generated@@170))
 :pattern ( ($generated@@25 $generated@@170 $generated@@171) ($generated@@25 $generated@@171 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@40 $generated@@41 ($generated@@132 $generated@@172) $generated@@43) ($generated@@40 $generated@@41 $generated@@172 ($generated@@42 $generated@@43)))
 :pattern ( ($generated@@40 $generated@@41 ($generated@@132 $generated@@172) $generated@@43))
)))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Int) ) (!  (=> (or ($generated@@91 ($generated@@65 $generated@@90 $generated@@174) $generated@@175 $generated@@176) (and (< 3 $generated@@36) (and ($generated@@40 $generated@@41 $generated@@175 ($generated@@42 $generated@@43)) (<= ($generated@@52 0) $generated@@176)))) (and (and (=> (< 0 ($generated@@44 $generated@@174)) (=> (not ($generated@@45 $generated@@175)) (let (($generated@@177 ($generated@@46 $generated@@175)))
(let (($generated@@178 ($generated@@47 $generated@@41 ($generated@@48 $generated@@175))))
 (=> (<= ($generated@@52 1) $generated@@176) (and (and ($generated@@34 $generated@@178) ($generated@@91 ($generated@@49 $generated@@174 ($generated@@50 1)) ($generated@@51 $generated@@178) (- $generated@@176 1))) (=> ($generated@@81 ($generated@@38 $generated@@173) ($generated@@49 $generated@@174 ($generated@@50 1)) ($generated@@51 $generated@@178) (- $generated@@176 1)) ($generated@@91 ($generated@@49 $generated@@174 ($generated@@50 1)) $generated@@177 $generated@@176)))))))) (=> (=> (< 0 ($generated@@44 $generated@@174)) (ite ($generated@@45 $generated@@175) true (let (($generated@@179 ($generated@@46 $generated@@175)))
(let (($generated@@180 ($generated@@47 $generated@@41 ($generated@@48 $generated@@175))))
 (and (and (<= ($generated@@52 1) $generated@@176) ($generated@@81 ($generated@@38 $generated@@173) ($generated@@49 $generated@@174 ($generated@@50 1)) ($generated@@51 $generated@@180) (- $generated@@176 1))) ($generated@@81 ($generated@@38 $generated@@173) ($generated@@49 $generated@@174 ($generated@@50 1)) $generated@@179 $generated@@176)))))) (=> (= ($generated@@52 0) ($generated@@44 $generated@@174)) (forall (($generated@@181 T@U) ) (!  (=> ($generated@@25 $generated@@181 $generated@@174) ($generated@@91 $generated@@181 $generated@@175 $generated@@176))
 :pattern ( ($generated@@81 ($generated@@38 $generated@@173) $generated@@181 $generated@@175 $generated@@176))
))))) (= ($generated@@81 ($generated@@38 $generated@@173) ($generated@@65 $generated@@90 $generated@@174) $generated@@175 $generated@@176)  (and (=> (< 0 ($generated@@44 $generated@@174)) (ite ($generated@@45 $generated@@175) true (let (($generated@@182 ($generated@@46 $generated@@175)))
(let (($generated@@183 ($generated@@47 $generated@@41 ($generated@@48 $generated@@175))))
 (and (and (<= ($generated@@52 1) $generated@@176) ($generated@@81 ($generated@@38 $generated@@173) ($generated@@49 $generated@@174 ($generated@@50 1)) ($generated@@51 $generated@@183) (- $generated@@176 1))) ($generated@@81 ($generated@@38 $generated@@173) ($generated@@49 $generated@@174 ($generated@@50 1)) $generated@@182 $generated@@176)))))) (=> (= ($generated@@52 0) ($generated@@44 $generated@@174)) (forall (($generated@@184 T@U) ) (!  (=> ($generated@@25 $generated@@184 $generated@@174) ($generated@@81 ($generated@@38 $generated@@173) $generated@@184 $generated@@175 $generated@@176))
 :pattern ( ($generated@@81 ($generated@@38 $generated@@173) $generated@@184 $generated@@175 $generated@@176))
)))))))
 :weight 3
 :pattern ( ($generated@@81 ($generated@@38 $generated@@173) ($generated@@65 $generated@@90 $generated@@174) $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@40 $generated@@41 $generated@@186 ($generated@@42 $generated@@185)) (or ($generated@@45 $generated@@186) ($generated@@110 $generated@@186)))
 :pattern ( ($generated@@110 $generated@@186) ($generated@@40 $generated@@41 $generated@@186 ($generated@@42 $generated@@185)))
 :pattern ( ($generated@@45 $generated@@186) ($generated@@40 $generated@@41 $generated@@186 ($generated@@42 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@68 ($generated@@38 $generated@@187) $generated@@188) ($generated@@68 $generated@@187 $generated@@188))
 :pattern ( ($generated@@68 ($generated@@38 $generated@@187) $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@T) ) (! (= ($generated@@105 ($generated@@113 $generated@@191 $generated@@189) $generated@@190) ($generated@@40 $generated@@191 $generated@@189 $generated@@190))
 :pattern ( ($generated@@105 ($generated@@113 $generated@@191 $generated@@189) $generated@@190))
)))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Int) ) (!  (=> (or ($generated@@91 $generated@@193 $generated@@194 $generated@@195) (and (< 3 $generated@@36) (and ($generated@@40 $generated@@41 $generated@@194 ($generated@@42 $generated@@43)) (<= ($generated@@52 0) $generated@@195)))) (and (and (=> (< 0 ($generated@@44 $generated@@193)) (=> (not ($generated@@45 $generated@@194)) (let (($generated@@196 ($generated@@46 $generated@@194)))
(let (($generated@@197 ($generated@@47 $generated@@41 ($generated@@48 $generated@@194))))
 (=> (<= ($generated@@52 1) $generated@@195) (and (and ($generated@@34 $generated@@197) ($generated@@91 ($generated@@49 $generated@@193 ($generated@@50 1)) ($generated@@51 $generated@@197) (- $generated@@195 1))) (=> ($generated@@81 $generated@@192 ($generated@@49 $generated@@193 ($generated@@50 1)) ($generated@@51 $generated@@197) (- $generated@@195 1)) ($generated@@91 ($generated@@49 $generated@@193 ($generated@@50 1)) $generated@@196 $generated@@195)))))))) (=> (=> (< 0 ($generated@@44 $generated@@193)) (ite ($generated@@45 $generated@@194) true (let (($generated@@198 ($generated@@46 $generated@@194)))
(let (($generated@@199 ($generated@@47 $generated@@41 ($generated@@48 $generated@@194))))
 (and (and (<= ($generated@@52 1) $generated@@195) ($generated@@81 $generated@@192 ($generated@@49 $generated@@193 ($generated@@50 1)) ($generated@@51 $generated@@199) (- $generated@@195 1))) ($generated@@81 $generated@@192 ($generated@@49 $generated@@193 ($generated@@50 1)) $generated@@198 $generated@@195)))))) (=> (= ($generated@@52 0) ($generated@@44 $generated@@193)) (forall (($generated@@200 T@U) ) (!  (=> ($generated@@25 $generated@@200 $generated@@193) ($generated@@91 $generated@@200 $generated@@194 $generated@@195))
 :pattern ( ($generated@@81 $generated@@192 $generated@@200 $generated@@194 $generated@@195))
))))) (= ($generated@@81 ($generated@@38 $generated@@192) $generated@@193 $generated@@194 $generated@@195)  (and (=> (< 0 ($generated@@44 $generated@@193)) (ite ($generated@@45 $generated@@194) true (let (($generated@@201 ($generated@@46 $generated@@194)))
(let (($generated@@202 ($generated@@47 $generated@@41 ($generated@@48 $generated@@194))))
 (and (and (<= ($generated@@52 1) $generated@@195) ($generated@@81 $generated@@192 ($generated@@49 $generated@@193 ($generated@@50 1)) ($generated@@51 $generated@@202) (- $generated@@195 1))) ($generated@@81 $generated@@192 ($generated@@49 $generated@@193 ($generated@@50 1)) $generated@@201 $generated@@195)))))) (=> (= ($generated@@52 0) ($generated@@44 $generated@@193)) (forall (($generated@@203 T@U) ) (!  (=> ($generated@@25 $generated@@203 $generated@@193) ($generated@@81 $generated@@192 $generated@@203 $generated@@194 $generated@@195))
 :pattern ( ($generated@@81 $generated@@192 $generated@@203 $generated@@194 $generated@@195))
)))))))
 :pattern ( ($generated@@81 ($generated@@38 $generated@@192) $generated@@193 $generated@@194 $generated@@195))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Int) ) (! (= ($generated@@81 ($generated@@38 $generated@@204) $generated@@205 $generated@@206 $generated@@207) ($generated@@81 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
 :pattern ( ($generated@@81 ($generated@@38 $generated@@204) $generated@@205 $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ) (! (<= 0 ($generated@@44 $generated@@208))
 :pattern ( ($generated@@44 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@74 ($generated@@104 $generated@@209 $generated@@210)) $generated@@4)
 :pattern ( ($generated@@104 $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@48 ($generated@@104 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@104 $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@46 ($generated@@104 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@104 $generated@@213 $generated@@214))
)))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (or ($generated@@39 ($generated@@65 $generated@@90 $generated@@216) ($generated@@65 $generated@@41 $generated@@217)) (and (< 3 $generated@@36) ($generated@@40 $generated@@41 $generated@@217 ($generated@@42 $generated@@43)))) (and (and (=> (< 0 ($generated@@44 $generated@@216)) (=> (not ($generated@@14 ($generated@@65 $generated@@10 ($generated@@13 ($generated@@45 ($generated@@65 $generated@@41 $generated@@217)))))) (let (($generated@@218 ($generated@@65 $generated@@41 ($generated@@46 ($generated@@65 $generated@@41 $generated@@217)))))
(let (($generated@@219 ($generated@@65 $generated@@41 ($generated@@47 $generated@@41 ($generated@@48 ($generated@@65 $generated@@41 $generated@@217))))))
 (and (and ($generated@@34 $generated@@219) ($generated@@39 ($generated@@49 $generated@@216 ($generated@@50 1)) ($generated@@51 $generated@@219))) (=> ($generated@@37 ($generated@@38 $generated@@215) ($generated@@49 $generated@@216 ($generated@@50 1)) ($generated@@51 $generated@@219)) ($generated@@39 ($generated@@49 $generated@@216 ($generated@@50 1)) $generated@@218))))))) (=> (=> (< 0 ($generated@@44 $generated@@216)) (ite ($generated@@45 ($generated@@65 $generated@@41 $generated@@217)) false (let (($generated@@220 ($generated@@65 $generated@@41 ($generated@@46 ($generated@@65 $generated@@41 $generated@@217)))))
(let (($generated@@221 ($generated@@65 $generated@@41 ($generated@@47 $generated@@41 ($generated@@48 ($generated@@65 $generated@@41 $generated@@217))))))
 (and ($generated@@37 ($generated@@38 $generated@@215) ($generated@@49 $generated@@216 ($generated@@50 1)) ($generated@@65 $generated@@41 ($generated@@51 $generated@@221))) ($generated@@37 ($generated@@38 $generated@@215) ($generated@@49 $generated@@216 ($generated@@50 1)) $generated@@220)))))) (=> (= ($generated@@52 0) ($generated@@44 $generated@@216)) (forall (($generated@@222 T@U) ) (!  (=> ($generated@@25 $generated@@222 $generated@@216) ($generated@@39 $generated@@222 $generated@@217))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@215) $generated@@222 $generated@@217))
))))) (= ($generated@@37 ($generated@@38 $generated@@215) ($generated@@65 $generated@@90 $generated@@216) ($generated@@65 $generated@@41 $generated@@217))  (and (=> (< 0 ($generated@@44 $generated@@216)) (ite ($generated@@45 ($generated@@65 $generated@@41 $generated@@217)) false (let (($generated@@223 ($generated@@65 $generated@@41 ($generated@@46 ($generated@@65 $generated@@41 $generated@@217)))))
(let (($generated@@224 ($generated@@65 $generated@@41 ($generated@@47 $generated@@41 ($generated@@48 ($generated@@65 $generated@@41 $generated@@217))))))
 (and ($generated@@37 ($generated@@38 $generated@@215) ($generated@@49 $generated@@216 ($generated@@50 1)) ($generated@@65 $generated@@41 ($generated@@51 $generated@@224))) ($generated@@37 ($generated@@38 $generated@@215) ($generated@@49 $generated@@216 ($generated@@50 1)) $generated@@223)))))) (=> (= ($generated@@52 0) ($generated@@44 $generated@@216)) (forall (($generated@@225 T@U) ) (!  (=> ($generated@@25 $generated@@225 $generated@@216) ($generated@@37 ($generated@@38 $generated@@215) $generated@@225 $generated@@217))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@215) $generated@@225 $generated@@217))
)))))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@38 $generated@@215) ($generated@@65 $generated@@90 $generated@@216) ($generated@@65 $generated@@41 $generated@@217)))
))))
(assert (forall (($generated@@227 T@U) ) (! (= ($generated@@226 ($generated@@42 $generated@@227)) $generated@@227)
 :pattern ( ($generated@@42 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (! (= ($generated@@74 ($generated@@132 $generated@@228)) $generated@@5)
 :pattern ( ($generated@@132 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (! (= ($generated@@51 ($generated@@132 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@132 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (= ($generated@@47 $generated@@231 ($generated@@113 $generated@@231 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@113 $generated@@231 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@232 $generated@@233) (or (not (= $generated@@232 $generated@@233)) (not true))) (=> (and ($generated@@160 $generated@@232) (not ($generated@@160 $generated@@233))) ($generated@@25 $generated@@232 $generated@@233))) (=> (and ($generated@@160 $generated@@232) ($generated@@160 $generated@@233)) (= ($generated@@25 $generated@@232 $generated@@233) (< ($generated@@44 $generated@@232) ($generated@@44 $generated@@233))))) (=> (and ($generated@@25 $generated@@232 $generated@@233) ($generated@@160 $generated@@233)) ($generated@@160 $generated@@232)))
 :pattern ( ($generated@@25 $generated@@232 $generated@@233))
)))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@234 T@U) ) (!  (=> (or ($generated@@140 ($generated@@65 $generated@@41 $generated@@234)) (and (< 3 $generated@@36) ($generated@@40 $generated@@41 $generated@@234 $generated@@43))) (and (forall (($generated@@235 Int) ) (!  (=> (<= ($generated@@52 0) $generated@@235) (=> (<= ($generated@@52 0) $generated@@235) (and ($generated@@34 ($generated@@65 $generated@@41 $generated@@234)) ($generated@@141 ($generated@@65 $generated@@41 ($generated@@51 ($generated@@65 $generated@@41 $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@234) $generated@@235))
)) (= ($generated@@139 ($generated@@65 $generated@@41 $generated@@234)) (exists (($generated@@236 Int) ) (!  (and (<= ($generated@@52 0) $generated@@236) (and (<= ($generated@@52 0) $generated@@236) ($generated@@80 ($generated@@38 $generated@@69) ($generated@@65 $generated@@41 ($generated@@51 ($generated@@65 $generated@@41 $generated@@234))) $generated@@236)))
 :pattern ( ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@234) $generated@@236))
)))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@65 $generated@@41 $generated@@234)))
))))
(assert (forall (($generated@@238 T@U) ) (! (< ($generated@@237 $generated@@238) ($generated@@237 ($generated@@132 $generated@@238)))
 :pattern ( ($generated@@132 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and ($generated@@77 $generated@@241) (and ($generated@@110 $generated@@239) ($generated@@29 $generated@@41 $generated@@239 ($generated@@42 $generated@@240) $generated@@241))) ($generated@@152 ($generated@@48 $generated@@239) $generated@@240 $generated@@241))
 :pattern ( ($generated@@152 ($generated@@48 $generated@@239) $generated@@240 $generated@@241))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ($generated@@254 T@T) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (! (= ($generated@@242 $generated@@252 $generated@@253 $generated@@254 ($generated@@248 $generated@@252 $generated@@253 $generated@@254 $generated@@256 $generated@@257 $generated@@258 $generated@@255) $generated@@257 $generated@@258) $generated@@255)
 :weight 0
)) (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ($generated@@261 T@T) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (or (= $generated@@264 $generated@@266) (= ($generated@@242 $generated@@259 $generated@@260 $generated@@261 ($generated@@248 $generated@@259 $generated@@260 $generated@@261 $generated@@263 $generated@@264 $generated@@265 $generated@@262) $generated@@266 $generated@@267) ($generated@@242 $generated@@259 $generated@@260 $generated@@261 $generated@@263 $generated@@266 $generated@@267)))
 :weight 0
)) (forall (($generated@@268 T@T) ($generated@@269 T@T) ($generated@@270 T@T) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (or (= $generated@@274 $generated@@276) (= ($generated@@242 $generated@@268 $generated@@269 $generated@@270 ($generated@@248 $generated@@268 $generated@@269 $generated@@270 $generated@@272 $generated@@273 $generated@@274 $generated@@271) $generated@@275 $generated@@276) ($generated@@242 $generated@@268 $generated@@269 $generated@@270 $generated@@272 $generated@@275 $generated@@276)))
 :weight 0
)))) (= ($generated@@9 $generated@@243) 5)) (= ($generated@@9 $generated@@244) 6)) (forall (($generated@@277 T@T) ($generated@@278 T@T) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (! (= ($generated@@246 $generated@@277 $generated@@278 ($generated@@249 $generated@@277 $generated@@278 $generated@@280 $generated@@281 $generated@@279) $generated@@281) $generated@@279)
 :weight 0
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (or (= $generated@@286 $generated@@287) (= ($generated@@246 $generated@@282 $generated@@283 ($generated@@249 $generated@@282 $generated@@283 $generated@@285 $generated@@286 $generated@@284) $generated@@287) ($generated@@246 $generated@@282 $generated@@283 $generated@@285 $generated@@287)))
 :weight 0
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@9 ($generated@@247 $generated@@288 $generated@@289)) 7))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@250 ($generated@@247 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@247 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@251 ($generated@@247 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@247 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 Bool) ($generated@@298 T@U) ($generated@@299 T@U) ) (! (= ($generated@@14 ($generated@@242 $generated@@243 $generated@@244 $generated@@10 ($generated@@245 $generated@@294 $generated@@295 $generated@@296 $generated@@297) $generated@@298 $generated@@299))  (=> (and (or (not (= $generated@@298 $generated@@294)) (not true)) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@246 $generated@@244 $generated@@90 ($generated@@246 $generated@@243 ($generated@@247 $generated@@244 $generated@@90) $generated@@295 $generated@@298) $generated@@296)))) $generated@@297))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@10 ($generated@@245 $generated@@294 $generated@@295 $generated@@296 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> ($generated@@105 $generated@@301 ($generated@@42 $generated@@300)) (and (= ($generated@@113 $generated@@41 ($generated@@47 $generated@@41 $generated@@301)) $generated@@301) ($generated@@40 $generated@@41 ($generated@@47 $generated@@41 $generated@@301) ($generated@@42 $generated@@300))))
 :pattern ( ($generated@@105 $generated@@301 ($generated@@42 $generated@@300)))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> ($generated@@160 $generated@@302) (= $generated@@302 ($generated@@50 ($generated@@44 $generated@@302))))
 :pattern ( ($generated@@44 $generated@@302))
 :pattern ( ($generated@@160 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and ($generated@@77 $generated@@305) (and ($generated@@110 $generated@@303) ($generated@@29 $generated@@41 $generated@@303 ($generated@@42 $generated@@304) $generated@@305))) ($generated@@29 $generated@@41 ($generated@@46 $generated@@303) ($generated@@42 $generated@@304) $generated@@305))
 :pattern ( ($generated@@29 $generated@@41 ($generated@@46 $generated@@303) ($generated@@42 $generated@@304) $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and ($generated@@77 $generated@@307) ($generated@@40 $generated@@41 $generated@@306 $generated@@43)) ($generated@@29 $generated@@41 $generated@@306 $generated@@43 $generated@@307))
 :pattern ( ($generated@@29 $generated@@41 $generated@@306 $generated@@43 $generated@@307))
)))
(assert (= ($generated@@157 $generated@@30) $generated@@0))
(assert (= ($generated@@158 $generated@@30) $generated@@6))
(assert (= ($generated@@157 $generated@@43) $generated@@2))
(assert (= ($generated@@158 $generated@@43) $generated@@8))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (or ($generated@@39 ($generated@@65 $generated@@90 $generated@@309) $generated@@310) (and (< 3 $generated@@36) ($generated@@40 $generated@@41 $generated@@310 ($generated@@42 $generated@@43)))) (and (and (=> (< 0 ($generated@@44 $generated@@309)) (=> (not ($generated@@45 $generated@@310)) (let (($generated@@311 ($generated@@46 $generated@@310)))
(let (($generated@@312 ($generated@@47 $generated@@41 ($generated@@48 $generated@@310))))
 (and (and ($generated@@34 $generated@@312) ($generated@@39 ($generated@@49 $generated@@309 ($generated@@50 1)) ($generated@@51 $generated@@312))) (=> ($generated@@37 ($generated@@38 $generated@@308) ($generated@@49 $generated@@309 ($generated@@50 1)) ($generated@@51 $generated@@312)) ($generated@@39 ($generated@@49 $generated@@309 ($generated@@50 1)) $generated@@311))))))) (=> (=> (< 0 ($generated@@44 $generated@@309)) (ite ($generated@@45 $generated@@310) false (let (($generated@@313 ($generated@@46 $generated@@310)))
(let (($generated@@314 ($generated@@47 $generated@@41 ($generated@@48 $generated@@310))))
 (and ($generated@@37 ($generated@@38 $generated@@308) ($generated@@49 $generated@@309 ($generated@@50 1)) ($generated@@51 $generated@@314)) ($generated@@37 ($generated@@38 $generated@@308) ($generated@@49 $generated@@309 ($generated@@50 1)) $generated@@313)))))) (=> (= ($generated@@52 0) ($generated@@44 $generated@@309)) (forall (($generated@@315 T@U) ) (!  (=> ($generated@@25 $generated@@315 $generated@@309) ($generated@@39 $generated@@315 $generated@@310))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@308) $generated@@315 $generated@@310))
))))) (= ($generated@@37 ($generated@@38 $generated@@308) ($generated@@65 $generated@@90 $generated@@309) $generated@@310)  (and (=> (< 0 ($generated@@44 $generated@@309)) (ite ($generated@@45 $generated@@310) false (let (($generated@@316 ($generated@@46 $generated@@310)))
(let (($generated@@317 ($generated@@47 $generated@@41 ($generated@@48 $generated@@310))))
 (and ($generated@@37 ($generated@@38 $generated@@308) ($generated@@49 $generated@@309 ($generated@@50 1)) ($generated@@51 $generated@@317)) ($generated@@37 ($generated@@38 $generated@@308) ($generated@@49 $generated@@309 ($generated@@50 1)) $generated@@316)))))) (=> (= ($generated@@52 0) ($generated@@44 $generated@@309)) (forall (($generated@@318 T@U) ) (!  (=> ($generated@@25 $generated@@318 $generated@@309) ($generated@@37 ($generated@@38 $generated@@308) $generated@@318 $generated@@310))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@308) $generated@@318 $generated@@310))
)))))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@38 $generated@@308) ($generated@@65 $generated@@90 $generated@@309) $generated@@310))
))))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 Int) ) (!  (=> (or ($generated@@141 $generated@@320 $generated@@321) (and (< 2 $generated@@36) (and ($generated@@40 $generated@@41 $generated@@320 ($generated@@42 $generated@@43)) (<= ($generated@@52 0) $generated@@321)))) (and (=> (not ($generated@@45 $generated@@320)) (let (($generated@@322 ($generated@@46 $generated@@320)))
(let (($generated@@323 ($generated@@47 $generated@@41 ($generated@@48 $generated@@320))))
 (=> (<= ($generated@@52 1) $generated@@321) (and (and ($generated@@34 $generated@@323) ($generated@@141 ($generated@@51 $generated@@323) (- $generated@@321 1))) (=> ($generated@@80 $generated@@319 ($generated@@51 $generated@@323) (- $generated@@321 1)) ($generated@@141 $generated@@322 $generated@@321))))))) (= ($generated@@80 ($generated@@38 $generated@@319) $generated@@320 $generated@@321) (ite ($generated@@45 $generated@@320) true (let (($generated@@324 ($generated@@46 $generated@@320)))
(let (($generated@@325 ($generated@@47 $generated@@41 ($generated@@48 $generated@@320))))
 (and (and (<= ($generated@@52 1) $generated@@321) ($generated@@80 $generated@@319 ($generated@@51 $generated@@325) (- $generated@@321 1))) ($generated@@80 $generated@@319 $generated@@324 $generated@@321))))))))
 :pattern ( ($generated@@80 ($generated@@38 $generated@@319) $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and ($generated@@160 $generated@@327) (<= ($generated@@44 $generated@@327) ($generated@@44 $generated@@326))) (or (and (= $generated@@327 ($generated@@50 0)) (= ($generated@@49 $generated@@326 $generated@@327) $generated@@326)) (and (or (not (= $generated@@327 ($generated@@50 0))) (not true)) ($generated@@25 ($generated@@49 $generated@@326 $generated@@327) $generated@@326))))
 :pattern ( ($generated@@49 $generated@@326 $generated@@327))
)))
(assert  (=> (<= 3 $generated@@36) (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 Int) ($generated@@331 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@41 $generated@@329 ($generated@@42 $generated@@43)) (<= ($generated@@52 0) $generated@@330)) (= $generated@@331 ($generated@@50 0))) ($generated@@81 $generated@@328 $generated@@331 $generated@@329 $generated@@330))
 :pattern ( ($generated@@81 $generated@@328 $generated@@331 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@332 Int) ) (! (= ($generated@@113 $generated@@11 ($generated@@15 ($generated@@52 $generated@@332))) ($generated@@65 $generated@@90 ($generated@@113 $generated@@11 ($generated@@15 $generated@@332))))
 :pattern ( ($generated@@113 $generated@@11 ($generated@@15 ($generated@@52 $generated@@332))))
)))
(assert (forall (($generated@@333 T@U) ) (! (= ($generated@@132 ($generated@@65 $generated@@41 $generated@@333)) ($generated@@65 $generated@@41 ($generated@@132 $generated@@333)))
 :pattern ( ($generated@@132 ($generated@@65 $generated@@41 $generated@@333)))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (= ($generated@@113 $generated@@335 ($generated@@65 $generated@@335 $generated@@334)) ($generated@@65 $generated@@90 ($generated@@113 $generated@@335 $generated@@334)))
 :pattern ( ($generated@@113 $generated@@335 ($generated@@65 $generated@@335 $generated@@334)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and ($generated@@77 $generated@@337) (and ($generated@@34 $generated@@336) ($generated@@29 $generated@@41 $generated@@336 $generated@@43 $generated@@337))) ($generated@@29 $generated@@41 ($generated@@51 $generated@@336) ($generated@@42 $generated@@43) $generated@@337))
 :pattern ( ($generated@@29 $generated@@41 ($generated@@51 $generated@@336) ($generated@@42 $generated@@43) $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> ($generated@@77 $generated@@341) (= ($generated@@29 $generated@@41 ($generated@@104 $generated@@339 $generated@@340) ($generated@@42 $generated@@338) $generated@@341)  (and ($generated@@152 $generated@@339 $generated@@338 $generated@@341) ($generated@@29 $generated@@41 $generated@@340 ($generated@@42 $generated@@338) $generated@@341))))
 :pattern ( ($generated@@29 $generated@@41 ($generated@@104 $generated@@339 $generated@@340) ($generated@@42 $generated@@338) $generated@@341))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@342 () T@U)
(declare-fun $generated@@343 () Int)
(declare-fun $generated@@344 () T@U)
(declare-fun $generated@@345 () Int)
(declare-fun $generated@@346 () T@U)
(declare-fun $generated@@347 (T@U) Bool)
(declare-fun $generated@@348 () Int)
(declare-fun $generated@@349 () T@U)
(declare-fun $generated@@350 () Int)
(declare-fun $generated@@351 () T@U)
(declare-fun $generated@@352 () T@U)
(declare-fun $generated@@353 () T@U)
(declare-fun $generated@@354 () Int)
(declare-fun $generated@@355 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@356  (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (and ($generated@@40 $generated@@11 ($generated@@15 ($generated@@52 0)) $generated@@30) (and (<= ($generated@@52 0) ($generated@@52 0)) ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@342) ($generated@@52 0)))) (or (and ($generated@@40 $generated@@11 ($generated@@15 ($generated@@52 0)) $generated@@30) (and (<= ($generated@@52 0) ($generated@@52 0)) ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@342) ($generated@@52 0)))) (or (and ($generated@@40 $generated@@11 ($generated@@15 ($generated@@52 0)) $generated@@30) (and (<= ($generated@@52 0) ($generated@@52 0)) ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@342) ($generated@@52 0)))) (exists (($generated@@357 Int) )  (and (<= ($generated@@52 0) $generated@@357) (and (<= ($generated@@52 0) $generated@@357) ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@342) $generated@@357)))))))) (=> (or (and ($generated@@40 $generated@@11 ($generated@@15 ($generated@@52 0)) $generated@@30) (and (<= ($generated@@52 0) ($generated@@52 0)) ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@342) ($generated@@52 0)))) (or (and ($generated@@40 $generated@@11 ($generated@@15 ($generated@@52 0)) $generated@@30) (and (<= ($generated@@52 0) ($generated@@52 0)) ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@342) ($generated@@52 0)))) (or (and ($generated@@40 $generated@@11 ($generated@@15 ($generated@@52 0)) $generated@@30) (and (<= ($generated@@52 0) ($generated@@52 0)) ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@342) ($generated@@52 0)))) (exists (($generated@@358 Int) )  (and (<= ($generated@@52 0) $generated@@358) (and (<= ($generated@@52 0) $generated@@358) ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@342) $generated@@358))))))) (=> (<= ($generated@@52 0) $generated@@343) (=> (and (<= ($generated@@52 0) $generated@@343) ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@342) $generated@@343)) (=> (and (and ($generated@@34 $generated@@342) ($generated@@34 $generated@@342)) (and (= $generated@@344 ($generated@@51 $generated@@342)) (<= ($generated@@52 0) $generated@@345))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@141 $generated@@344 $generated@@343) (or ($generated@@80 ($generated@@38 $generated@@69) $generated@@344 $generated@@343) (=> ($generated@@45 $generated@@344) ($generated@@14 ($generated@@65 $generated@@10 ($generated@@13 true))))))) (=> (=> ($generated@@141 $generated@@344 $generated@@343) (or ($generated@@80 ($generated@@38 $generated@@69) $generated@@344 $generated@@343) (=> ($generated@@45 $generated@@344) ($generated@@14 ($generated@@65 $generated@@10 ($generated@@13 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@141 $generated@@344 $generated@@343) (or ($generated@@80 ($generated@@38 $generated@@69) $generated@@344 $generated@@343) (=> (not ($generated@@45 $generated@@344)) (<= ($generated@@52 1) $generated@@343))))) (=> (=> ($generated@@141 $generated@@344 $generated@@343) (or ($generated@@80 ($generated@@38 $generated@@69) $generated@@344 $generated@@343) (=> (not ($generated@@45 $generated@@344)) (<= ($generated@@52 1) $generated@@343)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@141 $generated@@344 $generated@@343) (or ($generated@@80 ($generated@@38 $generated@@69) $generated@@344 $generated@@343) (=> (not ($generated@@45 $generated@@344)) (let (($generated@@359 ($generated@@47 $generated@@41 ($generated@@48 $generated@@344))))
($generated@@80 ($generated@@38 ($generated@@38 $generated@@69)) ($generated@@51 $generated@@359) (- $generated@@343 1))))))) (=> (=> ($generated@@141 $generated@@344 $generated@@343) (or ($generated@@80 ($generated@@38 $generated@@69) $generated@@344 $generated@@343) (=> (not ($generated@@45 $generated@@344)) (let (($generated@@360 ($generated@@47 $generated@@41 ($generated@@48 $generated@@344))))
($generated@@80 ($generated@@38 ($generated@@38 $generated@@69)) ($generated@@51 $generated@@360) (- $generated@@343 1)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@141 $generated@@344 $generated@@343) (or ($generated@@80 ($generated@@38 $generated@@69) $generated@@344 $generated@@343) (=> (not ($generated@@45 $generated@@344)) (let (($generated@@361 ($generated@@46 $generated@@344)))
($generated@@80 ($generated@@38 ($generated@@38 $generated@@69)) $generated@@361 $generated@@343)))))) (=> (=> ($generated@@141 $generated@@344 $generated@@343) (or ($generated@@80 ($generated@@38 $generated@@69) $generated@@344 $generated@@343) (=> (not ($generated@@45 $generated@@344)) (let (($generated@@362 ($generated@@46 $generated@@344)))
($generated@@80 ($generated@@38 ($generated@@38 $generated@@69)) $generated@@362 $generated@@343))))) (=> (and (and (and (and ($generated@@77 $generated@@346) ($generated@@347 $generated@@346)) (<= ($generated@@52 0) $generated@@348)) (and ($generated@@39 ($generated@@50 $generated@@348) $generated@@344) (not ($generated@@37 ($generated@@38 ($generated@@38 $generated@@69)) ($generated@@50 $generated@@348) $generated@@344)))) (and (and (= $generated@@349 $generated@@346) (= (ControlFlow 0 2) (- 0 1))) ($generated@@66 $generated@@342))) (or ($generated@@64 $generated@@342) (not ($generated@@68 ($generated@@38 ($generated@@38 $generated@@69)) ($generated@@51 $generated@@342))))))))))))))))))))
(let (($generated@@363  (=> (and (=> (<= ($generated@@52 0) $generated@@350) (and ($generated@@34 $generated@@342) ($generated@@141 ($generated@@51 $generated@@342) $generated@@350))) (= (ControlFlow 0 9) 2)) $generated@@356)))
(let (($generated@@364  (=> (and (< $generated@@350 ($generated@@52 0)) (= (ControlFlow 0 11) 9)) $generated@@363)))
(let (($generated@@365  (=> (<= ($generated@@52 0) $generated@@350) (=> (and ($generated@@34 $generated@@342) (= $generated@@351 ($generated@@51 $generated@@342))) (=> (and (and ($generated@@29 $generated@@41 $generated@@351 ($generated@@42 $generated@@43) $generated@@349) ($generated@@29 $generated@@11 ($generated@@15 $generated@@350) $generated@@30 $generated@@349)) (and ($generated@@141 ($generated@@51 $generated@@342) $generated@@350) (= (ControlFlow 0 10) 9))) $generated@@363)))))
(let (($generated@@366  (=> (<= ($generated@@52 0) $generated@@350) (and (=> (= (ControlFlow 0 12) 10) $generated@@365) (=> (= (ControlFlow 0 12) 11) $generated@@364)))))
(let (($generated@@367  (=> (and (< $generated@@350 ($generated@@52 0)) (= (ControlFlow 0 8) 2)) $generated@@356)))
(let (($generated@@368  (=> (= $generated@@352 ($generated@@245 $generated@@353 $generated@@349 $generated false)) (and (=> (= (ControlFlow 0 13) 12) $generated@@366) (=> (= (ControlFlow 0 13) 8) $generated@@367)))))
(let (($generated@@369  (=> (and ($generated@@77 $generated@@349) ($generated@@347 $generated@@349)) (=> (and (and (and (and ($generated@@40 $generated@@41 $generated@@342 $generated@@43) ($generated@@29 $generated@@41 $generated@@342 $generated@@43 $generated@@349)) ($generated@@33 $generated@@342)) (and (<= ($generated@@52 0) $generated@@354) true)) (and (and (and (<= ($generated@@52 0) $generated@@355) true) (= 5 $generated@@36)) (and (and ($generated@@140 $generated@@342) (and ($generated@@139 $generated@@342) (exists (($generated@@370 Int) ) (!  (and (<= ($generated@@52 0) $generated@@370) (and (<= ($generated@@52 0) $generated@@370) ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@342) $generated@@370)))
 :pattern ( ($generated@@80 ($generated@@38 $generated@@69) ($generated@@51 $generated@@342) $generated@@370))
)))) (= (ControlFlow 0 14) 13)))) $generated@@368))))
$generated@@369)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
