(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (Int) Int)
(declare-fun $generated@@25 (T@U Int T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@U T@U T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@T T@T) T@T)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@114 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@27) 3))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 Int) ($generated@@35 T@U) ) (!  (=> (or ($generated@@25 $generated@@32 ($generated@@24 $generated@@34) $generated@@35) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@34) ($generated@@26 $generated@@27 $generated@@35 ($generated@@28 $generated@@32))))) (and (and (=> (= ($generated@@24 $generated@@34) ($generated@@24 0)) ($generated@@29 $generated@@35)) (=> (or (not (= ($generated@@24 $generated@@34) ($generated@@24 0))) (not true)) (and ($generated@@29 $generated@@35) ($generated@@25 $generated@@32 ($generated@@24 (- $generated@@34 1)) ($generated@@30 $generated@@35))))) (= ($generated@@22 $generated@@32 ($generated@@23 $generated@@33) ($generated@@24 $generated@@34) $generated@@35) (ite (= ($generated@@24 $generated@@34) ($generated@@24 0)) ($generated@@31 $generated@@35) ($generated@@22 $generated@@32 ($generated@@23 $generated@@33) ($generated@@24 (- $generated@@34 1)) ($generated@@30 $generated@@35))))))
 :weight 3
 :pattern ( ($generated@@22 $generated@@32 ($generated@@23 $generated@@33) ($generated@@24 $generated@@34) $generated@@35))
))))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! ($generated@@36 $generated@@7 $generated@@38 $generated@@37 $generated@@39)
 :pattern ( ($generated@@36 $generated@@7 $generated@@38 $generated@@37 $generated@@39))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@41 ($generated@@28 $generated@@40)) ($generated@@29 $generated@@41))
 :pattern ( ($generated@@29 $generated@@41) ($generated@@26 $generated@@27 $generated@@41 ($generated@@28 $generated@@40)))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 Int) ($generated@@45 T@U) ) (!  (=> (or ($generated@@25 $generated@@42 $generated@@44 $generated@@45) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@44) ($generated@@26 $generated@@27 $generated@@45 ($generated@@28 $generated@@42))))) (and (and (=> (= $generated@@44 ($generated@@24 0)) ($generated@@29 $generated@@45)) (=> (or (not (= $generated@@44 ($generated@@24 0))) (not true)) (and ($generated@@29 $generated@@45) ($generated@@25 $generated@@42 (- $generated@@44 1) ($generated@@30 $generated@@45))))) (= ($generated@@22 $generated@@42 ($generated@@23 $generated@@43) $generated@@44 $generated@@45) (ite (= $generated@@44 ($generated@@24 0)) ($generated@@31 $generated@@45) ($generated@@22 $generated@@42 $generated@@43 (- $generated@@44 1) ($generated@@30 $generated@@45))))))
 :pattern ( ($generated@@22 $generated@@42 ($generated@@23 $generated@@43) $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@46 Int) ) (! (= ($generated@@24 $generated@@46) $generated@@46)
 :pattern ( ($generated@@24 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@49 $generated@@48))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 Int) ($generated@@54 T@U) ) (!  (=> (or ($generated@@25 $generated@@51 $generated@@53 $generated@@54) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@53) ($generated@@26 $generated@@27 $generated@@54 ($generated@@28 $generated@@51))))) ($generated@@50 ($generated@@22 $generated@@51 $generated@@52 $generated@@53 $generated@@54) $generated@@51))
 :pattern ( ($generated@@22 $generated@@51 $generated@@52 $generated@@53 $generated@@54))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 Int) ($generated@@61 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@58 $generated@@60 $generated@@61) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@60) (and ($generated@@26 $generated@@27 $generated@@61 ($generated@@28 $generated@@58)) ($generated@@36 $generated@@27 $generated@@61 ($generated@@28 $generated@@58) $generated@@57))))) ($generated@@56 $generated@@57)) ($generated@@55 ($generated@@22 $generated@@58 $generated@@59 $generated@@60 $generated@@61) $generated@@58 $generated@@57))
 :pattern ( ($generated@@55 ($generated@@22 $generated@@58 $generated@@59 $generated@@60 $generated@@61) $generated@@58 $generated@@57))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@62 $generated@@64 $generated@@65) ($generated@@28 $generated@@63))  (and ($generated@@50 $generated@@64 $generated@@63) ($generated@@26 $generated@@27 $generated@@65 ($generated@@28 $generated@@63))))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@62 $generated@@64 $generated@@65) ($generated@@28 $generated@@63)))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@29 $generated@@67) (= ($generated@@66 $generated@@67) $generated@@2))
 :pattern ( ($generated@@29 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 ($generated@@68 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@68 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@29 $generated@@72) (exists (($generated@@73 T@U) ($generated@@74 T@U) ) (= $generated@@72 ($generated@@62 $generated@@73 $generated@@74))))
 :pattern ( ($generated@@29 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@26 $generated@@7 $generated@@75 $generated@@37) (<= ($generated@@24 0) ($generated@@12 $generated@@75)))
 :pattern ( ($generated@@26 $generated@@7 $generated@@75 $generated@@37))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@55 ($generated@@69 $generated@@79 $generated@@76) $generated@@77 $generated@@78) ($generated@@36 $generated@@79 $generated@@76 $generated@@77 $generated@@78))
 :pattern ( ($generated@@55 ($generated@@69 $generated@@79 $generated@@76) $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@82 T@U) ) (!  (and (= ($generated@@80 ($generated@@28 $generated@@82)) $generated@@1) (= ($generated@@81 ($generated@@28 $generated@@82)) $generated@@4))
 :pattern ( ($generated@@28 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@50 $generated@@83 $generated@@37) (and (= ($generated@@69 $generated@@7 ($generated@@68 $generated@@7 $generated@@83)) $generated@@83) ($generated@@26 $generated@@7 ($generated@@68 $generated@@7 $generated@@83) $generated@@37)))
 :pattern ( ($generated@@50 $generated@@83 $generated@@37))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 Int) ($generated@@87 T@U) ) (!  (=> (or ($generated@@25 $generated@@84 ($generated@@24 $generated@@86) ($generated@@47 $generated@@27 $generated@@87)) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@86) ($generated@@26 $generated@@27 $generated@@87 ($generated@@28 $generated@@84))))) (and (and (=> (= ($generated@@24 $generated@@86) ($generated@@24 0)) ($generated@@29 ($generated@@47 $generated@@27 $generated@@87))) (=> (or (not (= ($generated@@24 $generated@@86) ($generated@@24 0))) (not true)) (and ($generated@@29 ($generated@@47 $generated@@27 $generated@@87)) ($generated@@25 $generated@@84 ($generated@@24 (- $generated@@86 1)) ($generated@@47 $generated@@27 ($generated@@30 ($generated@@47 $generated@@27 $generated@@87))))))) (= ($generated@@22 $generated@@84 ($generated@@23 $generated@@85) ($generated@@24 $generated@@86) ($generated@@47 $generated@@27 $generated@@87)) (ite (= ($generated@@24 $generated@@86) ($generated@@24 0)) ($generated@@31 ($generated@@47 $generated@@27 $generated@@87)) ($generated@@22 $generated@@84 ($generated@@23 $generated@@85) ($generated@@24 (- $generated@@86 1)) ($generated@@47 $generated@@27 ($generated@@30 ($generated@@47 $generated@@27 $generated@@87))))))))
 :weight 3
 :pattern ( ($generated@@22 $generated@@84 ($generated@@23 $generated@@85) ($generated@@24 $generated@@86) ($generated@@47 $generated@@27 $generated@@87)))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@50 ($generated@@69 $generated@@90 $generated@@88) $generated@@89) ($generated@@26 $generated@@90 $generated@@88 $generated@@89))
 :pattern ( ($generated@@50 ($generated@@69 $generated@@90 $generated@@88) $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@66 ($generated@@62 $generated@@91 $generated@@92)) $generated@@2)
 :pattern ( ($generated@@62 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@31 ($generated@@62 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@62 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@30 ($generated@@62 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@62 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 ($generated@@28 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@28 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@68 $generated@@100 ($generated@@69 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@69 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@56 $generated@@103) (and ($generated@@29 $generated@@101) ($generated@@36 $generated@@27 $generated@@101 ($generated@@28 $generated@@102) $generated@@103))) ($generated@@55 ($generated@@31 $generated@@101) $generated@@102 $generated@@103))
 :pattern ( ($generated@@55 ($generated@@31 $generated@@101) $generated@@102 $generated@@103))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@104 $generated@@115 $generated@@116 $generated@@117 ($generated@@111 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@104 $generated@@122 $generated@@123 $generated@@124 ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@104 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@104 $generated@@131 $generated@@132 $generated@@133 ($generated@@111 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))) (= ($generated@@5 $generated@@105) 4)) (= ($generated@@5 $generated@@106) 5)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@108 $generated@@140 $generated@@141 ($generated@@112 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@142) $generated@@144) $generated@@142)
 :weight 0
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@108 $generated@@145 $generated@@146 ($generated@@112 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@108 $generated@@145 $generated@@146 $generated@@148 $generated@@150)))
 :weight 0
))) (= ($generated@@5 $generated@@109) 6)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (= ($generated@@5 ($generated@@110 $generated@@151 $generated@@152)) 7))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@113 ($generated@@110 $generated@@153 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@110 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@114 ($generated@@110 $generated@@155 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@110 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@10 ($generated@@104 $generated@@105 $generated@@106 $generated@@6 ($generated@@107 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@10 ($generated@@68 $generated@@6 ($generated@@108 $generated@@106 $generated@@109 ($generated@@108 $generated@@105 ($generated@@110 $generated@@106 $generated@@109) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@104 $generated@@105 $generated@@106 $generated@@6 ($generated@@107 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 T@U) ) (! (= ($generated@@22 $generated@@163 ($generated@@23 $generated@@164) $generated@@165 $generated@@166) ($generated@@22 $generated@@163 $generated@@164 $generated@@165 $generated@@166))
 :pattern ( ($generated@@22 $generated@@163 ($generated@@23 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@50 $generated@@168 ($generated@@28 $generated@@167)) (and (= ($generated@@69 $generated@@27 ($generated@@68 $generated@@27 $generated@@168)) $generated@@168) ($generated@@26 $generated@@27 ($generated@@68 $generated@@27 $generated@@168) ($generated@@28 $generated@@167))))
 :pattern ( ($generated@@50 $generated@@168 ($generated@@28 $generated@@167)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@56 $generated@@171) (and ($generated@@29 $generated@@169) ($generated@@36 $generated@@27 $generated@@169 ($generated@@28 $generated@@170) $generated@@171))) ($generated@@36 $generated@@27 ($generated@@30 $generated@@169) ($generated@@28 $generated@@170) $generated@@171))
 :pattern ( ($generated@@36 $generated@@27 ($generated@@30 $generated@@169) ($generated@@28 $generated@@170) $generated@@171))
)))
(assert (= ($generated@@80 $generated@@37) $generated@@0))
(assert (= ($generated@@81 $generated@@37) $generated@@3))
(assert (forall (($generated@@172 Int) ) (! (= ($generated@@69 $generated@@7 ($generated@@11 ($generated@@24 $generated@@172))) ($generated@@47 $generated@@109 ($generated@@69 $generated@@7 ($generated@@11 $generated@@172))))
 :pattern ( ($generated@@69 $generated@@7 ($generated@@11 ($generated@@24 $generated@@172))))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@69 $generated@@174 ($generated@@47 $generated@@174 $generated@@173)) ($generated@@47 $generated@@109 ($generated@@69 $generated@@174 $generated@@173)))
 :pattern ( ($generated@@69 $generated@@174 ($generated@@47 $generated@@174 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@56 $generated@@178) (= ($generated@@36 $generated@@27 ($generated@@62 $generated@@176 $generated@@177) ($generated@@28 $generated@@175) $generated@@178)  (and ($generated@@55 $generated@@176 $generated@@175 $generated@@178) ($generated@@36 $generated@@27 $generated@@177 ($generated@@28 $generated@@175) $generated@@178))))
 :pattern ( ($generated@@36 $generated@@27 ($generated@@62 $generated@@176 $generated@@177) ($generated@@28 $generated@@175) $generated@@178))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@188  (=> (or (not (= $generated@@179 ($generated@@24 0))) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@26 $generated@@7 ($generated@@11 (- $generated@@179 1)) $generated@@37)) (=> ($generated@@26 $generated@@7 ($generated@@11 (- $generated@@179 1)) $generated@@37) (=> (= $generated@@180 (- $generated@@179 1)) (=> (and (and ($generated@@36 $generated@@7 ($generated@@11 $generated@@180) $generated@@37 $generated@@181) ($generated@@29 $generated@@182)) (and (= $generated@@183 ($generated@@30 $generated@@182)) ($generated@@36 $generated@@27 $generated@@183 ($generated@@28 $generated@@184) $generated@@181))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@179) (= $generated@@180 $generated@@179))) (=> (or (<= 0 $generated@@179) (= $generated@@180 $generated@@179)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@180 $generated@@179)))))))))))
(let (($generated@@189 true))
(let (($generated@@190 true))
(let (($generated@@191  (=> (= $generated@@185 ($generated@@107 $generated@@186 $generated@@181 $generated false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@190) (=> (= (ControlFlow 0 7) 2) $generated@@189)) (=> (= (ControlFlow 0 7) 4) $generated@@188)))))
(let (($generated@@192  (=> (and ($generated@@56 $generated@@181) ($generated@@187 $generated@@181)) (=> (and (and (<= ($generated@@24 0) $generated@@179) ($generated@@26 $generated@@27 $generated@@182 ($generated@@28 $generated@@184))) (and (= 1 $generated@@21) (= (ControlFlow 0 8) 7))) $generated@@191))))
$generated@@192))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
