(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (Int) Int)
(declare-fun $generated@@25 (T@U Int T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@114 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 (T@T T@T) T@T)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@T) T@T)
(declare-fun $generated@@120 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@27) 3))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 Int) ($generated@@35 T@U) ) (!  (=> (or ($generated@@25 $generated@@32 ($generated@@24 $generated@@34) $generated@@35) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@34) ($generated@@26 $generated@@27 $generated@@35 ($generated@@28 $generated@@32))))) (and (and (=> (= ($generated@@24 $generated@@34) ($generated@@24 0)) ($generated@@29 $generated@@35)) (=> (or (not (= ($generated@@24 $generated@@34) ($generated@@24 0))) (not true)) (and ($generated@@29 $generated@@35) ($generated@@25 $generated@@32 ($generated@@24 (- $generated@@34 1)) ($generated@@30 $generated@@35))))) (= ($generated@@22 $generated@@32 ($generated@@23 $generated@@33) ($generated@@24 $generated@@34) $generated@@35) (ite (= ($generated@@24 $generated@@34) ($generated@@24 0)) ($generated@@31 $generated@@35) ($generated@@22 $generated@@32 ($generated@@23 $generated@@33) ($generated@@24 (- $generated@@34 1)) ($generated@@30 $generated@@35))))))
 :weight 3
 :pattern ( ($generated@@22 $generated@@32 ($generated@@23 $generated@@33) ($generated@@24 $generated@@34) $generated@@35))
))))
(assert (= ($generated@@36 $generated) $generated@@0))
(assert (forall (($generated@@38 T@U) ) (!  (=> ($generated@@37 $generated@@38) ($generated@@29 $generated@@38))
 :pattern ( ($generated@@37 $generated@@38))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@40 ($generated@@28 $generated@@39)) ($generated@@29 $generated@@40))
 :pattern ( ($generated@@29 $generated@@40) ($generated@@26 $generated@@27 $generated@@40 ($generated@@28 $generated@@39)))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 Int) ($generated@@44 T@U) ) (!  (=> (or ($generated@@25 $generated@@41 $generated@@43 $generated@@44) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@43) ($generated@@26 $generated@@27 $generated@@44 ($generated@@28 $generated@@41))))) (and (and (=> (= $generated@@43 ($generated@@24 0)) ($generated@@29 $generated@@44)) (=> (or (not (= $generated@@43 ($generated@@24 0))) (not true)) (and ($generated@@29 $generated@@44) ($generated@@25 $generated@@41 (- $generated@@43 1) ($generated@@30 $generated@@44))))) (= ($generated@@22 $generated@@41 ($generated@@23 $generated@@42) $generated@@43 $generated@@44) (ite (= $generated@@43 ($generated@@24 0)) ($generated@@31 $generated@@44) ($generated@@22 $generated@@41 $generated@@42 (- $generated@@43 1) ($generated@@30 $generated@@44))))))
 :pattern ( ($generated@@22 $generated@@41 ($generated@@23 $generated@@42) $generated@@43 $generated@@44))
))))
(assert (forall (($generated@@45 Int) ) (! (= ($generated@@24 $generated@@45) $generated@@45)
 :pattern ( ($generated@@24 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@48 $generated@@47))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 Int) ($generated@@53 T@U) ) (!  (=> (or ($generated@@25 $generated@@50 $generated@@52 $generated@@53) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@52) ($generated@@26 $generated@@27 $generated@@53 ($generated@@28 $generated@@50))))) ($generated@@49 ($generated@@22 $generated@@50 $generated@@51 $generated@@52 $generated@@53) $generated@@50))
 :pattern ( ($generated@@22 $generated@@50 $generated@@51 $generated@@52 $generated@@53))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 Int) ($generated@@61 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@58 $generated@@60 $generated@@61) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@60) (and ($generated@@26 $generated@@27 $generated@@61 ($generated@@28 $generated@@58)) ($generated@@55 $generated@@27 $generated@@61 ($generated@@28 $generated@@58) $generated@@57))))) ($generated@@56 $generated@@57)) ($generated@@54 ($generated@@22 $generated@@58 $generated@@59 $generated@@60 $generated@@61) $generated@@58 $generated@@57))
 :pattern ( ($generated@@54 ($generated@@22 $generated@@58 $generated@@59 $generated@@60 $generated@@61) $generated@@58 $generated@@57))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@62 $generated@@64 $generated@@65) ($generated@@28 $generated@@63))  (and ($generated@@49 $generated@@64 $generated@@63) ($generated@@26 $generated@@27 $generated@@65 ($generated@@28 $generated@@63))))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@62 $generated@@64 $generated@@65) ($generated@@28 $generated@@63)))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@67 $generated@@71 $generated@@72) (and (< 1 $generated@@21) (and ($generated@@26 $generated@@27 $generated@@71 ($generated@@28 $generated)) ($generated@@26 $generated@@27 $generated@@72 ($generated@@28 $generated))))) (and (and (and ($generated@@29 $generated@@71) ($generated@@29 $generated@@72)) (and (and ($generated@@29 $generated@@71) ($generated@@29 $generated@@72)) ($generated@@67 ($generated@@30 $generated@@71) ($generated@@30 $generated@@72)))) (= ($generated@@66 ($generated@@23 $generated@@70) $generated@@71 $generated@@72) ($generated@@62 ($generated@@68 $generated@@7 ($generated@@11 (+ ($generated@@12 ($generated@@69 $generated@@7 ($generated@@31 $generated@@71))) ($generated@@12 ($generated@@69 $generated@@7 ($generated@@31 $generated@@72)))))) ($generated@@66 $generated@@70 ($generated@@30 $generated@@71) ($generated@@30 $generated@@72))))))
 :pattern ( ($generated@@66 ($generated@@23 $generated@@70) $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@29 $generated@@74) (= ($generated@@73 $generated@@74) $generated@@3))
 :pattern ( ($generated@@29 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@68 $generated@@76 ($generated@@69 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@29 $generated@@77) (exists (($generated@@78 T@U) ($generated@@79 T@U) ) (= $generated@@77 ($generated@@62 $generated@@78 $generated@@79))))
 :pattern ( ($generated@@29 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@54 ($generated@@68 $generated@@83 $generated@@80) $generated@@81 $generated@@82) ($generated@@55 $generated@@83 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@54 ($generated@@68 $generated@@83 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (!  (and (= ($generated@@36 ($generated@@28 $generated@@85)) $generated@@2) (= ($generated@@84 ($generated@@28 $generated@@85)) $generated@@4))
 :pattern ( ($generated@@28 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@66 ($generated@@23 $generated@@86) $generated@@87 $generated@@88) ($generated@@66 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@66 ($generated@@23 $generated@@86) $generated@@87 $generated@@88))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 Int) ($generated@@92 T@U) ) (!  (=> (or ($generated@@25 $generated@@89 ($generated@@24 $generated@@91) ($generated@@46 $generated@@27 $generated@@92)) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@91) ($generated@@26 $generated@@27 $generated@@92 ($generated@@28 $generated@@89))))) (and (and (=> (= ($generated@@24 $generated@@91) ($generated@@24 0)) ($generated@@29 ($generated@@46 $generated@@27 $generated@@92))) (=> (or (not (= ($generated@@24 $generated@@91) ($generated@@24 0))) (not true)) (and ($generated@@29 ($generated@@46 $generated@@27 $generated@@92)) ($generated@@25 $generated@@89 ($generated@@24 (- $generated@@91 1)) ($generated@@46 $generated@@27 ($generated@@30 ($generated@@46 $generated@@27 $generated@@92))))))) (= ($generated@@22 $generated@@89 ($generated@@23 $generated@@90) ($generated@@24 $generated@@91) ($generated@@46 $generated@@27 $generated@@92)) (ite (= ($generated@@24 $generated@@91) ($generated@@24 0)) ($generated@@31 ($generated@@46 $generated@@27 $generated@@92)) ($generated@@22 $generated@@89 ($generated@@23 $generated@@90) ($generated@@24 (- $generated@@91 1)) ($generated@@46 $generated@@27 ($generated@@30 ($generated@@46 $generated@@27 $generated@@92))))))))
 :weight 3
 :pattern ( ($generated@@22 $generated@@89 ($generated@@23 $generated@@90) ($generated@@24 $generated@@91) ($generated@@46 $generated@@27 $generated@@92)))
))))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@49 $generated@@93 $generated) (and (= ($generated@@68 $generated@@7 ($generated@@69 $generated@@7 $generated@@93)) $generated@@93) ($generated@@26 $generated@@7 ($generated@@69 $generated@@7 $generated@@93) $generated)))
 :pattern ( ($generated@@49 $generated@@93 $generated))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@49 ($generated@@68 $generated@@96 $generated@@94) $generated@@95) ($generated@@26 $generated@@96 $generated@@94 $generated@@95))
 :pattern ( ($generated@@49 ($generated@@68 $generated@@96 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@73 ($generated@@62 $generated@@97 $generated@@98)) $generated@@3)
 :pattern ( ($generated@@62 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@31 ($generated@@62 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@62 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@30 ($generated@@62 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@62 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 ($generated@@28 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@28 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@69 $generated@@106 ($generated@@68 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@68 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (and ($generated@@56 $generated@@109) (and ($generated@@29 $generated@@107) ($generated@@55 $generated@@27 $generated@@107 ($generated@@28 $generated@@108) $generated@@109))) ($generated@@54 ($generated@@31 $generated@@107) $generated@@108 $generated@@109))
 :pattern ( ($generated@@54 ($generated@@31 $generated@@107) $generated@@108 $generated@@109))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@110 $generated@@121 $generated@@122 $generated@@123 ($generated@@117 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@126 $generated@@127) $generated@@124)
 :weight 0
)) (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@110 $generated@@128 $generated@@129 $generated@@130 ($generated@@117 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@110 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@110 $generated@@137 $generated@@138 $generated@@139 ($generated@@117 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@110 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (= ($generated@@5 $generated@@111) 4)) (= ($generated@@5 $generated@@112) 5)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@114 $generated@@146 $generated@@147 ($generated@@118 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@148) $generated@@150) $generated@@148)
 :weight 0
))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@155 $generated@@156) (= ($generated@@114 $generated@@151 $generated@@152 ($generated@@118 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@153) $generated@@156) ($generated@@114 $generated@@151 $generated@@152 $generated@@154 $generated@@156)))
 :weight 0
))) (= ($generated@@5 $generated@@115) 6)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (= ($generated@@5 ($generated@@116 $generated@@157 $generated@@158)) 7))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@119 ($generated@@116 $generated@@159 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@116 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@120 ($generated@@116 $generated@@161 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@116 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 Bool) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@10 ($generated@@110 $generated@@111 $generated@@112 $generated@@6 ($generated@@113 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))  (=> (and (or (not (= $generated@@167 $generated@@163)) (not true)) ($generated@@10 ($generated@@69 $generated@@6 ($generated@@114 $generated@@112 $generated@@115 ($generated@@114 $generated@@111 ($generated@@116 $generated@@112 $generated@@115) $generated@@164 $generated@@167) $generated@@165)))) $generated@@166))
 :pattern ( ($generated@@110 $generated@@111 $generated@@112 $generated@@6 ($generated@@113 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Int) ($generated@@172 T@U) ) (! (= ($generated@@22 $generated@@169 ($generated@@23 $generated@@170) $generated@@171 $generated@@172) ($generated@@22 $generated@@169 $generated@@170 $generated@@171 $generated@@172))
 :pattern ( ($generated@@22 $generated@@169 ($generated@@23 $generated@@170) $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@49 $generated@@174 ($generated@@28 $generated@@173)) (and (= ($generated@@68 $generated@@27 ($generated@@69 $generated@@27 $generated@@174)) $generated@@174) ($generated@@26 $generated@@27 ($generated@@69 $generated@@27 $generated@@174) ($generated@@28 $generated@@173))))
 :pattern ( ($generated@@49 $generated@@174 ($generated@@28 $generated@@173)))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (or ($generated@@67 $generated@@176 $generated@@177) (and (< 1 $generated@@21) (and ($generated@@26 $generated@@27 $generated@@176 ($generated@@28 $generated)) ($generated@@26 $generated@@27 $generated@@177 ($generated@@28 $generated))))) ($generated@@26 $generated@@27 ($generated@@66 $generated@@175 $generated@@176 $generated@@177) ($generated@@28 $generated)))
 :pattern ( ($generated@@66 $generated@@175 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and ($generated@@56 $generated@@180) (and ($generated@@29 $generated@@178) ($generated@@55 $generated@@27 $generated@@178 ($generated@@28 $generated@@179) $generated@@180))) ($generated@@55 $generated@@27 ($generated@@30 $generated@@178) ($generated@@28 $generated@@179) $generated@@180))
 :pattern ( ($generated@@55 $generated@@27 ($generated@@30 $generated@@178) ($generated@@28 $generated@@179) $generated@@180))
)))
(assert (forall (($generated@@181 Int) ) (! (= ($generated@@68 $generated@@7 ($generated@@11 ($generated@@24 $generated@@181))) ($generated@@46 $generated@@115 ($generated@@68 $generated@@7 ($generated@@11 $generated@@181))))
 :pattern ( ($generated@@68 $generated@@7 ($generated@@11 ($generated@@24 $generated@@181))))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@68 $generated@@183 ($generated@@46 $generated@@183 $generated@@182)) ($generated@@46 $generated@@115 ($generated@@68 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@68 $generated@@183 ($generated@@46 $generated@@183 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! ($generated@@55 $generated@@7 $generated@@185 $generated $generated@@184)
 :pattern ( ($generated@@55 $generated@@7 $generated@@185 $generated $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@56 $generated@@189) (= ($generated@@55 $generated@@27 ($generated@@62 $generated@@187 $generated@@188) ($generated@@28 $generated@@186) $generated@@189)  (and ($generated@@54 $generated@@187 $generated@@186 $generated@@189) ($generated@@55 $generated@@27 $generated@@188 ($generated@@28 $generated@@186) $generated@@189))))
 :pattern ( ($generated@@55 $generated@@27 ($generated@@62 $generated@@187 $generated@@188) ($generated@@28 $generated@@186) $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! ($generated@@26 $generated@@7 $generated@@190 $generated)
 :pattern ( ($generated@@26 $generated@@7 $generated@@190 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@200  (=> (= $generated@@191 ($generated@@113 $generated@@192 $generated@@193 $generated@@1 false)) (=> (and ($generated@@37 $generated@@194) ($generated@@37 $generated@@195)) (=> (and (and (and ($generated@@56 $generated@@196) ($generated@@197 $generated@@196)) (= $generated@@193 $generated@@196)) (and (forall (($generated@@201 Int) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (and (and (and (<= ($generated@@24 0) $generated@@201) ($generated@@26 $generated@@27 $generated@@202 ($generated@@28 $generated))) ($generated@@26 $generated@@27 $generated@@203 ($generated@@28 $generated))) ($generated@@10 ($generated@@46 $generated@@6 ($generated@@9 true)))) (and (<= 0 $generated@@201) (< $generated@@201 $generated@@199))) (= ($generated@@12 ($generated@@69 $generated@@7 ($generated@@22 $generated ($generated@@23 $generated@@198) $generated@@201 ($generated@@66 ($generated@@23 $generated@@198) $generated@@202 $generated@@203)))) (+ ($generated@@12 ($generated@@69 $generated@@7 ($generated@@22 $generated ($generated@@23 $generated@@198) $generated@@201 $generated@@202))) ($generated@@12 ($generated@@69 $generated@@7 ($generated@@22 $generated ($generated@@23 $generated@@198) $generated@@201 $generated@@203))))))
 :pattern ( ($generated@@69 $generated@@7 ($generated@@22 $generated ($generated@@23 $generated@@198) $generated@@201 ($generated@@66 ($generated@@23 $generated@@198) $generated@@202 $generated@@203))))
)) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@12 ($generated@@69 $generated@@7 ($generated@@22 $generated ($generated@@23 ($generated@@23 $generated@@198)) $generated@@199 ($generated@@66 ($generated@@23 ($generated@@23 $generated@@198)) $generated@@194 $generated@@195)))) (+ ($generated@@12 ($generated@@69 $generated@@7 ($generated@@22 $generated ($generated@@23 ($generated@@23 $generated@@198)) $generated@@199 $generated@@194))) ($generated@@12 ($generated@@69 $generated@@7 ($generated@@22 $generated ($generated@@23 ($generated@@23 $generated@@198)) $generated@@199 $generated@@195))))))))))
(let (($generated@@204  (=> (and (and (and (and ($generated@@56 $generated@@193) ($generated@@197 $generated@@193)) (<= ($generated@@24 0) $generated@@199)) (and (and ($generated@@26 $generated@@27 $generated@@194 ($generated@@28 $generated)) ($generated@@55 $generated@@27 $generated@@194 ($generated@@28 $generated) $generated@@193)) ($generated@@37 $generated@@194))) (and (and (and ($generated@@26 $generated@@27 $generated@@195 ($generated@@28 $generated)) ($generated@@55 $generated@@27 $generated@@195 ($generated@@28 $generated) $generated@@193)) ($generated@@37 $generated@@195)) (and (= 2 $generated@@21) (= (ControlFlow 0 3) 2)))) $generated@@200)))
$generated@@204)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
