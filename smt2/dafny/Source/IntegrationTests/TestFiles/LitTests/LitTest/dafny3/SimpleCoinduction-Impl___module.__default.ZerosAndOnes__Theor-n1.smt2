(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@37 (Int) T@U)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 () Bool)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@64 () Bool)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@152 (T@T T@T) T@T)
(declare-fun $generated@@153 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@6 $generated@@28) 3))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@26 $generated@@41 $generated@@42 $generated@@43) (and (< 2 $generated@@23) (and ($generated@@27 $generated@@28 $generated@@42 ($generated@@29 $generated)) ($generated@@27 $generated@@28 $generated@@43 ($generated@@29 $generated))))) (and (and (=> (< 0 ($generated@@30 $generated@@41)) (=> (not ($generated@@31 $generated@@42)) (let (($generated@@44 ($generated@@32 $generated@@42)))
(let (($generated@@45 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@42)))))
 (=> ($generated@@35 $generated@@43) (=> (<= $generated@@45 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@43)))) ($generated@@26 ($generated@@36 $generated@@41 ($generated@@37 1)) $generated@@44 ($generated@@32 $generated@@43)))))))) (=> (=> (< 0 ($generated@@30 $generated@@41)) (ite ($generated@@31 $generated@@42) true (let (($generated@@46 ($generated@@32 $generated@@42)))
(let (($generated@@47 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@42)))))
 (and (and ($generated@@35 $generated@@43) (<= $generated@@47 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@43))))) ($generated@@24 $generated@@40 ($generated@@36 $generated@@41 ($generated@@37 1)) $generated@@46 ($generated@@32 $generated@@43))))))) (=> (= ($generated@@38 0) ($generated@@30 $generated@@41)) (forall (($generated@@48 T@U) ) (!  (=> ($generated@@39 $generated@@48 $generated@@41) ($generated@@26 $generated@@48 $generated@@42 $generated@@43))
 :pattern ( ($generated@@24 $generated@@40 $generated@@48 $generated@@42 $generated@@43))
))))) (= ($generated@@24 ($generated@@25 $generated@@40) $generated@@41 $generated@@42 $generated@@43)  (and (=> (< 0 ($generated@@30 $generated@@41)) (ite ($generated@@31 $generated@@42) true (let (($generated@@49 ($generated@@32 $generated@@42)))
(let (($generated@@50 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@42)))))
 (and (and ($generated@@35 $generated@@43) (<= $generated@@50 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@43))))) ($generated@@24 $generated@@40 ($generated@@36 $generated@@41 ($generated@@37 1)) $generated@@49 ($generated@@32 $generated@@43))))))) (=> (= ($generated@@38 0) ($generated@@30 $generated@@41)) (forall (($generated@@51 T@U) ) (!  (=> ($generated@@39 $generated@@51 $generated@@41) ($generated@@24 $generated@@40 $generated@@51 $generated@@42 $generated@@43))
 :pattern ( ($generated@@24 $generated@@40 $generated@@51 $generated@@42 $generated@@43))
)))))))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@40) $generated@@41 $generated@@42 $generated@@43))
))))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (and ($generated@@39 $generated@@52 $generated@@53) ($generated@@39 $generated@@53 $generated@@54)) ($generated@@39 $generated@@52 $generated@@54))
 :pattern ( ($generated@@39 $generated@@52 $generated@@53) ($generated@@39 $generated@@53 $generated@@54))
 :pattern ( ($generated@@39 $generated@@52 $generated@@53) ($generated@@39 $generated@@52 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ($generated@@57 Int) ) (!  (=> (and (and (<= 0 $generated@@56) (<= 0 $generated@@57)) (<= (+ $generated@@56 $generated@@57) ($generated@@30 $generated@@55))) (= ($generated@@36 ($generated@@36 $generated@@55 ($generated@@37 $generated@@56)) ($generated@@37 $generated@@57)) ($generated@@36 $generated@@55 ($generated@@37 (+ $generated@@56 $generated@@57)))))
 :pattern ( ($generated@@36 ($generated@@36 $generated@@55 ($generated@@37 $generated@@56)) ($generated@@37 $generated@@57)))
)))
(assert (= ($generated@@58 $generated@@59) $generated@@3))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@62 T@U) ) (!  (=> (or $generated@@61 (< 1 $generated@@23)) ($generated@@27 $generated@@28 ($generated@@60 $generated@@62) ($generated@@29 $generated)))
 :pattern ( ($generated@@60 $generated@@62))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@65 T@U) ) (!  (=> (or $generated@@64 (< 1 $generated@@23)) ($generated@@27 $generated@@28 ($generated@@63 $generated@@65) ($generated@@29 $generated)))
 :pattern ( ($generated@@63 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ) (! ($generated@@27 $generated@@28 $generated@@59 ($generated@@29 $generated@@66))
 :pattern ( ($generated@@27 $generated@@28 $generated@@59 ($generated@@29 $generated@@66)))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@28 $generated@@68 ($generated@@29 $generated)) ($generated@@27 $generated@@28 $generated@@69 ($generated@@29 $generated))) (= $generated@@70 ($generated@@37 0))) ($generated@@24 $generated@@67 $generated@@70 $generated@@68 $generated@@69))
 :pattern ( ($generated@@24 $generated@@67 $generated@@70 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@71 Int) ) (! (= ($generated@@38 $generated@@71) $generated@@71)
 :pattern ( ($generated@@38 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@75 $generated@@78 $generated@@79) ($generated@@29 $generated@@77))  (and ($generated@@76 $generated@@78 $generated@@77) ($generated@@27 $generated@@28 $generated@@79 ($generated@@29 $generated@@77))))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@75 $generated@@78 $generated@@79) ($generated@@29 $generated@@77)))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@31 $generated@@80) (= ($generated@@58 $generated@@80) $generated@@3))
 :pattern ( ($generated@@31 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@35 $generated@@81) (= ($generated@@58 $generated@@81) $generated@@4))
 :pattern ( ($generated@@35 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@33 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@33 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@35 $generated@@85) (exists (($generated@@86 T@U) ($generated@@87 T@U) ) (= $generated@@85 ($generated@@75 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@35 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@31 $generated@@88) (= $generated@@88 $generated@@59))
 :pattern ( ($generated@@31 $generated@@88))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@89 T@U) ) (!  (=> (or $generated@@61 (< 1 $generated@@23)) (and $generated@@61 (= ($generated@@60 ($generated@@25 $generated@@89)) ($generated@@72 $generated@@28 ($generated@@75 ($generated@@82 $generated@@8 ($generated@@12 ($generated@@38 0))) ($generated@@72 $generated@@28 ($generated@@60 $generated@@89)))))))
 :pattern ( ($generated@@60 ($generated@@25 $generated@@89)))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@90 T@U) ) (!  (=> (or $generated@@64 (< 1 $generated@@23)) (and $generated@@64 (= ($generated@@63 ($generated@@25 $generated@@90)) ($generated@@72 $generated@@28 ($generated@@75 ($generated@@82 $generated@@8 ($generated@@12 ($generated@@38 1))) ($generated@@72 $generated@@28 ($generated@@63 $generated@@90)))))))
 :pattern ( ($generated@@63 ($generated@@25 $generated@@90)))
))))
(assert (forall (($generated@@92 T@U) ) (!  (and (= ($generated@@22 ($generated@@29 $generated@@92)) $generated@@2) (= ($generated@@91 ($generated@@29 $generated@@92)) $generated@@5))
 :pattern ( ($generated@@29 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (and ($generated@@93 $generated@@95) (<= ($generated@@30 $generated@@95) ($generated@@30 $generated@@94))) (and (= ($generated@@93 ($generated@@36 $generated@@94 $generated@@95)) ($generated@@93 $generated@@94)) (= ($generated@@30 ($generated@@36 $generated@@94 $generated@@95)) (- ($generated@@30 $generated@@94) ($generated@@30 $generated@@95)))))
 :pattern ( ($generated@@36 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 Int) ) (!  (=> (<= 0 $generated@@96) (and ($generated@@93 ($generated@@37 $generated@@96)) (= ($generated@@30 ($generated@@37 $generated@@96)) $generated@@96)))
 :pattern ( ($generated@@37 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (or ($generated@@39 $generated@@97 $generated@@98) (= $generated@@97 $generated@@98)) ($generated@@39 $generated@@98 $generated@@97))
 :pattern ( ($generated@@39 $generated@@97 $generated@@98) ($generated@@39 $generated@@98 $generated@@97))
)))
(assert (= ($generated@@6 $generated@@99) 4))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or ($generated@@26 ($generated@@72 $generated@@99 $generated@@101) $generated@@102 $generated@@103) (and (< 2 $generated@@23) (and ($generated@@27 $generated@@28 $generated@@102 ($generated@@29 $generated)) ($generated@@27 $generated@@28 $generated@@103 ($generated@@29 $generated))))) (and (and (=> (< 0 ($generated@@30 $generated@@101)) (=> (not ($generated@@31 $generated@@102)) (let (($generated@@104 ($generated@@32 $generated@@102)))
(let (($generated@@105 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@102)))))
 (=> ($generated@@35 $generated@@103) (=> (<= $generated@@105 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@103)))) ($generated@@26 ($generated@@36 $generated@@101 ($generated@@37 1)) $generated@@104 ($generated@@32 $generated@@103)))))))) (=> (=> (< 0 ($generated@@30 $generated@@101)) (ite ($generated@@31 $generated@@102) true (let (($generated@@106 ($generated@@32 $generated@@102)))
(let (($generated@@107 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@102)))))
 (and (and ($generated@@35 $generated@@103) (<= $generated@@107 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@103))))) ($generated@@24 ($generated@@25 $generated@@100) ($generated@@36 $generated@@101 ($generated@@37 1)) $generated@@106 ($generated@@32 $generated@@103))))))) (=> (= ($generated@@38 0) ($generated@@30 $generated@@101)) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@39 $generated@@108 $generated@@101) ($generated@@26 $generated@@108 $generated@@102 $generated@@103))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@100) $generated@@108 $generated@@102 $generated@@103))
))))) (= ($generated@@24 ($generated@@25 $generated@@100) ($generated@@72 $generated@@99 $generated@@101) $generated@@102 $generated@@103)  (and (=> (< 0 ($generated@@30 $generated@@101)) (ite ($generated@@31 $generated@@102) true (let (($generated@@109 ($generated@@32 $generated@@102)))
(let (($generated@@110 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@102)))))
 (and (and ($generated@@35 $generated@@103) (<= $generated@@110 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@103))))) ($generated@@24 ($generated@@25 $generated@@100) ($generated@@36 $generated@@101 ($generated@@37 1)) $generated@@109 ($generated@@32 $generated@@103))))))) (=> (= ($generated@@38 0) ($generated@@30 $generated@@101)) (forall (($generated@@111 T@U) ) (!  (=> ($generated@@39 $generated@@111 $generated@@101) ($generated@@24 ($generated@@25 $generated@@100) $generated@@111 $generated@@102 $generated@@103))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@100) $generated@@111 $generated@@102 $generated@@103))
)))))))
 :weight 3
 :pattern ( ($generated@@24 ($generated@@25 $generated@@100) ($generated@@72 $generated@@99 $generated@@101) $generated@@102 $generated@@103))
))))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@113 ($generated@@29 $generated@@112)) (or ($generated@@31 $generated@@113) ($generated@@35 $generated@@113)))
 :pattern ( ($generated@@35 $generated@@113) ($generated@@27 $generated@@28 $generated@@113 ($generated@@29 $generated@@112)))
 :pattern ( ($generated@@31 $generated@@113) ($generated@@27 $generated@@28 $generated@@113 ($generated@@29 $generated@@112)))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@76 $generated@@114 $generated) (and (= ($generated@@82 $generated@@8 ($generated@@33 $generated@@8 $generated@@114)) $generated@@114) ($generated@@27 $generated@@8 ($generated@@33 $generated@@8 $generated@@114) $generated)))
 :pattern ( ($generated@@76 $generated@@114 $generated))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@76 ($generated@@82 $generated@@117 $generated@@115) $generated@@116) ($generated@@27 $generated@@117 $generated@@115 $generated@@116))
 :pattern ( ($generated@@76 ($generated@@82 $generated@@117 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@118) $generated@@119 $generated@@120 $generated@@121) ($generated@@24 $generated@@118 $generated@@119 $generated@@120 $generated@@121))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@118) $generated@@119 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (<= 0 ($generated@@30 $generated@@122))
 :pattern ( ($generated@@30 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@58 ($generated@@75 $generated@@123 $generated@@124)) $generated@@4)
 :pattern ( ($generated@@75 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@34 ($generated@@75 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@75 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@32 ($generated@@75 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@75 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@129 ($generated@@29 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@29 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@33 $generated@@132 ($generated@@82 $generated@@132 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@82 $generated@@132 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (and (and (and (=> ($generated@@39 $generated@@133 $generated@@134) (or (not (= $generated@@133 $generated@@134)) (not true))) (=> (and ($generated@@93 $generated@@133) (not ($generated@@93 $generated@@134))) ($generated@@39 $generated@@133 $generated@@134))) (=> (and ($generated@@93 $generated@@133) ($generated@@93 $generated@@134)) (= ($generated@@39 $generated@@133 $generated@@134) (< ($generated@@30 $generated@@133) ($generated@@30 $generated@@134))))) (=> (and ($generated@@39 $generated@@133 $generated@@134) ($generated@@93 $generated@@134)) ($generated@@93 $generated@@133)))
 :pattern ( ($generated@@39 $generated@@133 $generated@@134))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (or ($generated@@26 ($generated@@72 $generated@@99 $generated@@136) ($generated@@72 $generated@@28 $generated@@137) ($generated@@72 $generated@@28 $generated@@138)) (and (< 2 $generated@@23) (and ($generated@@27 $generated@@28 $generated@@137 ($generated@@29 $generated)) ($generated@@27 $generated@@28 $generated@@138 ($generated@@29 $generated))))) (and (and (=> (< 0 ($generated@@30 $generated@@136)) (=> (not ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@72 $generated@@28 $generated@@137)))))) (let (($generated@@139 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 $generated@@137)))))
(let (($generated@@140 ($generated@@38 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 ($generated@@72 $generated@@28 $generated@@137)))))))
 (=> ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 ($generated@@35 ($generated@@72 $generated@@28 $generated@@138))))) (=> (<= $generated@@140 ($generated@@38 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 ($generated@@72 $generated@@28 $generated@@138)))))) ($generated@@26 ($generated@@36 $generated@@136 ($generated@@37 1)) $generated@@139 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 $generated@@138)))))))))) (=> (=> (< 0 ($generated@@30 $generated@@136)) (ite ($generated@@31 ($generated@@72 $generated@@28 $generated@@137)) true (let (($generated@@141 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 $generated@@137)))))
(let (($generated@@142 ($generated@@38 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 ($generated@@72 $generated@@28 $generated@@137)))))))
 (and (and ($generated@@35 ($generated@@72 $generated@@28 $generated@@138)) (<= $generated@@142 ($generated@@38 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 ($generated@@72 $generated@@28 $generated@@138))))))) ($generated@@24 ($generated@@25 $generated@@135) ($generated@@36 $generated@@136 ($generated@@37 1)) $generated@@141 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 $generated@@138))))))))) (=> (= ($generated@@38 0) ($generated@@30 $generated@@136)) (forall (($generated@@143 T@U) ) (!  (=> ($generated@@39 $generated@@143 $generated@@136) ($generated@@26 $generated@@143 $generated@@137 $generated@@138))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@135) $generated@@143 $generated@@137 $generated@@138))
))))) (= ($generated@@24 ($generated@@25 $generated@@135) ($generated@@72 $generated@@99 $generated@@136) ($generated@@72 $generated@@28 $generated@@137) ($generated@@72 $generated@@28 $generated@@138))  (and (=> (< 0 ($generated@@30 $generated@@136)) (ite ($generated@@31 ($generated@@72 $generated@@28 $generated@@137)) true (let (($generated@@144 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 $generated@@137)))))
(let (($generated@@145 ($generated@@38 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 ($generated@@72 $generated@@28 $generated@@137)))))))
 (and (and ($generated@@35 ($generated@@72 $generated@@28 $generated@@138)) (<= $generated@@145 ($generated@@38 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 ($generated@@72 $generated@@28 $generated@@138))))))) ($generated@@24 ($generated@@25 $generated@@135) ($generated@@36 $generated@@136 ($generated@@37 1)) $generated@@144 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 $generated@@138))))))))) (=> (= ($generated@@38 0) ($generated@@30 $generated@@136)) (forall (($generated@@146 T@U) ) (!  (=> ($generated@@39 $generated@@146 $generated@@136) ($generated@@24 ($generated@@25 $generated@@135) $generated@@146 $generated@@137 $generated@@138))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@135) $generated@@146 $generated@@137 $generated@@138))
)))))))
 :weight 3
 :pattern ( ($generated@@24 ($generated@@25 $generated@@135) ($generated@@72 $generated@@99 $generated@@136) ($generated@@72 $generated@@28 $generated@@137) ($generated@@72 $generated@@28 $generated@@138)))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@147 $generated@@157 $generated@@158 $generated@@159 ($generated@@153 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@162 $generated@@163) $generated@@160)
 :weight 0
)) (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@147 $generated@@164 $generated@@165 $generated@@166 ($generated@@153 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@171 $generated@@172) ($generated@@147 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@171 $generated@@172)))
 :weight 0
)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@147 $generated@@173 $generated@@174 $generated@@175 ($generated@@153 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@147 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)))) (= ($generated@@6 $generated@@148) 5)) (= ($generated@@6 $generated@@149) 6)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@151 $generated@@182 $generated@@183 ($generated@@154 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@184) $generated@@186) $generated@@184)
 :weight 0
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@191 $generated@@192) (= ($generated@@151 $generated@@187 $generated@@188 ($generated@@154 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@189) $generated@@192) ($generated@@151 $generated@@187 $generated@@188 $generated@@190 $generated@@192)))
 :weight 0
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@6 ($generated@@152 $generated@@193 $generated@@194)) 7))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@155 ($generated@@152 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@152 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@156 ($generated@@152 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@152 $generated@@197 $generated@@198))
))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Bool) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@11 ($generated@@147 $generated@@148 $generated@@149 $generated@@7 ($generated@@150 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@203 $generated@@204))  (=> (and (or (not (= $generated@@203 $generated@@199)) (not true)) ($generated@@11 ($generated@@33 $generated@@7 ($generated@@151 $generated@@149 $generated@@99 ($generated@@151 $generated@@148 ($generated@@152 $generated@@149 $generated@@99) $generated@@200 $generated@@203) $generated@@201)))) $generated@@202))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149 $generated@@7 ($generated@@150 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@60 ($generated@@25 $generated@@205)) ($generated@@60 $generated@@205))
 :pattern ( ($generated@@60 ($generated@@25 $generated@@205)))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@63 ($generated@@25 $generated@@206)) ($generated@@63 $generated@@206))
 :pattern ( ($generated@@63 ($generated@@25 $generated@@206)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@76 $generated@@208 ($generated@@29 $generated@@207)) (and (= ($generated@@82 $generated@@28 ($generated@@33 $generated@@28 $generated@@208)) $generated@@208) ($generated@@27 $generated@@28 ($generated@@33 $generated@@28 $generated@@208) ($generated@@29 $generated@@207))))
 :pattern ( ($generated@@76 $generated@@208 ($generated@@29 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ) (!  (=> ($generated@@93 $generated@@209) (= $generated@@209 ($generated@@37 ($generated@@30 $generated@@209))))
 :pattern ( ($generated@@30 $generated@@209))
 :pattern ( ($generated@@93 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@93 $generated@@211) (<= ($generated@@30 $generated@@211) ($generated@@30 $generated@@210))) (or (and (= $generated@@211 ($generated@@37 0)) (= ($generated@@36 $generated@@210 $generated@@211) $generated@@210)) (and (or (not (= $generated@@211 ($generated@@37 0))) (not true)) ($generated@@39 ($generated@@36 $generated@@210 $generated@@211) $generated@@210))))
 :pattern ( ($generated@@36 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 Int) ) (! (= ($generated@@82 $generated@@8 ($generated@@12 ($generated@@38 $generated@@212))) ($generated@@72 $generated@@99 ($generated@@82 $generated@@8 ($generated@@12 $generated@@212))))
 :pattern ( ($generated@@82 $generated@@8 ($generated@@12 ($generated@@38 $generated@@212))))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@T) ) (! (= ($generated@@82 $generated@@214 ($generated@@72 $generated@@214 $generated@@213)) ($generated@@72 $generated@@99 ($generated@@82 $generated@@214 $generated@@213)))
 :pattern ( ($generated@@82 $generated@@214 ($generated@@72 $generated@@214 $generated@@213)))
)))
(assert (forall (($generated@@215 T@U) ) (! ($generated@@27 $generated@@8 $generated@@215 $generated)
 :pattern ( ($generated@@27 $generated@@8 $generated@@215 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 (T@U) Bool)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@225  (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@26 $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (or ($generated@@24 ($generated@@25 $generated@@217) $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (=> (< 0 ($generated@@30 $generated@@216)) (=> ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))))))) ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 true)))))))) (=> (=> ($generated@@26 $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (or ($generated@@24 ($generated@@25 $generated@@217) $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (=> (< 0 ($generated@@30 $generated@@216)) (=> ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))))))) ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@26 $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (or ($generated@@24 ($generated@@25 $generated@@217) $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (=> (< 0 ($generated@@30 $generated@@216)) (=> (not ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217)))))))) ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 ($generated@@35 ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 ($generated@@25 $generated@@217))))))))))))) (=> (=> ($generated@@26 $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (or ($generated@@24 ($generated@@25 $generated@@217) $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (=> (< 0 ($generated@@30 $generated@@216)) (=> (not ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217)))))))) ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 ($generated@@35 ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 ($generated@@25 $generated@@217)))))))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@26 $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (or ($generated@@24 ($generated@@25 $generated@@217) $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (=> (< 0 ($generated@@30 $generated@@216)) (=> (not ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217)))))))) (let (($generated@@226 ($generated@@38 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 ($generated@@25 $generated@@217))))))))))
(<= $generated@@226 ($generated@@38 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 ($generated@@25 $generated@@217))))))))))))))) (=> (=> ($generated@@26 $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (or ($generated@@24 ($generated@@25 $generated@@217) $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (=> (< 0 ($generated@@30 $generated@@216)) (=> (not ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217)))))))) (let (($generated@@227 ($generated@@38 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 ($generated@@25 $generated@@217))))))))))
(<= $generated@@227 ($generated@@38 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 ($generated@@25 $generated@@217)))))))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@26 $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (or ($generated@@24 ($generated@@25 $generated@@217) $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (=> (< 0 ($generated@@30 $generated@@216)) (=> (not ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217)))))))) (let (($generated@@228 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 ($generated@@25 $generated@@217))))))))
($generated@@24 ($generated@@25 ($generated@@25 $generated@@217)) ($generated@@36 $generated@@216 ($generated@@37 1)) $generated@@228 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 ($generated@@25 $generated@@217))))))))))))) (=> (=> ($generated@@26 $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (or ($generated@@24 ($generated@@25 $generated@@217) $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (=> (< 0 ($generated@@30 $generated@@216)) (=> (not ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217)))))))) (let (($generated@@229 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 ($generated@@25 $generated@@217))))))))
($generated@@24 ($generated@@25 ($generated@@25 $generated@@217)) ($generated@@36 $generated@@216 ($generated@@37 1)) $generated@@229 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 ($generated@@25 $generated@@217)))))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@26 $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (or ($generated@@24 ($generated@@25 $generated@@217) $generated@@216 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))) (=> (= ($generated@@38 0) ($generated@@30 $generated@@216)) (forall (($generated@@230 T@U) ) (!  (=> ($generated@@39 $generated@@230 $generated@@216) ($generated@@24 ($generated@@25 ($generated@@25 $generated@@217)) $generated@@230 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 ($generated@@25 $generated@@217)))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 ($generated@@25 $generated@@217))))))
 :pattern ( ($generated@@24 ($generated@@25 ($generated@@25 $generated@@217)) $generated@@230 ($generated@@60 ($generated@@25 ($generated@@25 $generated@@217))) ($generated@@63 ($generated@@25 ($generated@@25 $generated@@217)))))
))))))))))))))))
(let (($generated@@231  (=> (<= ($generated@@30 $generated@@216) 0) (=> (and (and (and ($generated@@218 $generated@@219) ($generated@@220 $generated@@219)) (= $generated@@221 $generated@@219)) (and (forall (($generated@@232 T@U) ) (!  (=> ($generated@@39 $generated@@232 $generated@@216) ($generated@@24 ($generated@@25 $generated@@217) $generated@@232 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@217) $generated@@232 ($generated@@60 ($generated@@25 $generated@@217)) ($generated@@63 ($generated@@25 $generated@@217))))
 :pattern ( ($generated@@39 $generated@@232 $generated@@216))
)) (= (ControlFlow 0 8) 2))) $generated@@225))))
(let (($generated@@233  (=> (and (< 0 ($generated@@30 $generated@@216)) (= (ControlFlow 0 7) 2)) $generated@@225)))
(let (($generated@@234  (=> (= $generated@@222 ($generated@@150 $generated@@223 $generated@@224 $generated@@1 false)) (=> (and (and ($generated@@218 $generated@@221) ($generated@@220 $generated@@221)) (and (= $generated@@224 $generated@@221) (forall (($generated@@235 T@U) ) (!  (=> (and ($generated@@11 ($generated@@72 $generated@@7 ($generated@@10 true))) ($generated@@39 $generated@@235 $generated@@216)) ($generated@@24 ($generated@@25 $generated@@217) $generated@@235 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@217) $generated@@235 ($generated@@72 $generated@@28 ($generated@@60 ($generated@@25 $generated@@217))) ($generated@@72 $generated@@28 ($generated@@63 ($generated@@25 $generated@@217)))))
)))) (and (=> (= (ControlFlow 0 9) 7) $generated@@233) (=> (= (ControlFlow 0 9) 8) $generated@@231))))))
(let (($generated@@236  (=> (and (and ($generated@@218 $generated@@224) ($generated@@220 $generated@@224)) (and (= 3 $generated@@23) (= (ControlFlow 0 10) 9))) $generated@@234)))
$generated@@236))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
