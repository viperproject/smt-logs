(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (Int) T@U)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@36 (T@U Int) T@U)
(declare-fun $generated@@37 (Int) Bool)
(declare-fun $generated@@38 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@118 (T@U) Bool)
(declare-fun $generated@@122 (Int Int) Int)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@171 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@25 $generated@@26)) ($generated@@23 $generated@@24 $generated@@26))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@25 $generated@@26))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 Int) ($generated@@32 Int) ) (!  (=> (and (and (<= 0 $generated@@31) (<= 0 $generated@@32)) (<= (+ $generated@@31 $generated@@32) ($generated@@29 $generated@@30))) (= ($generated@@27 ($generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@28 $generated@@32)) ($generated@@27 $generated@@30 ($generated@@28 (+ $generated@@31 $generated@@32)))))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@28 $generated@@32)))
)))
(assert (= ($generated@@33 $generated@@34) $generated@@3))
(assert (= ($generated@@6 $generated@@39) 3))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (or ($generated@@37 $generated@@42) (< 1 $generated@@35)) ($generated@@38 $generated@@39 ($generated@@36 $generated@@41 $generated@@42) ($generated@@40 $generated)))
 :pattern ( ($generated@@36 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> ($generated@@44 $generated@@46) ($generated@@43 $generated@@39 $generated@@34 ($generated@@40 $generated@@45) $generated@@46))
 :pattern ( ($generated@@43 $generated@@39 $generated@@34 ($generated@@40 $generated@@45) $generated@@46))
)))
(assert (forall (($generated@@47 T@U) ) (! ($generated@@38 $generated@@39 $generated@@34 ($generated@@40 $generated@@47))
 :pattern ( ($generated@@38 $generated@@39 $generated@@34 ($generated@@40 $generated@@47)))
)))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@48 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@38 $generated@@39 ($generated@@53 $generated@@56 $generated@@57) ($generated@@40 $generated@@55))  (and ($generated@@54 $generated@@56 $generated@@55) ($generated@@38 $generated@@39 $generated@@57 ($generated@@40 $generated@@55))))
 :pattern ( ($generated@@38 $generated@@39 ($generated@@53 $generated@@56 $generated@@57) ($generated@@40 $generated@@55)))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (and ($generated@@38 $generated@@39 $generated@@60 ($generated@@40 $generated)) (= $generated@@61 ($generated@@28 0))) ($generated@@58 $generated@@59 $generated@@61 $generated@@60))
 :pattern ( ($generated@@58 $generated@@59 $generated@@61 $generated@@60))
))))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@62 $generated@@63) (= ($generated@@33 $generated@@63) $generated@@3))
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@64 $generated@@65) (= ($generated@@33 $generated@@65) $generated@@4))
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (and ($generated@@38 $generated@@39 $generated@@69 ($generated@@40 $generated)) (forall (($generated@@70 T@U) ) (! ($generated@@58 ($generated@@67 $generated@@68) $generated@@70 $generated@@69)
 :pattern ( ($generated@@58 ($generated@@67 $generated@@68) $generated@@70 $generated@@69))
))) ($generated@@66 ($generated@@67 $generated@@68) $generated@@69))
 :pattern ( ($generated@@66 ($generated@@67 $generated@@68) $generated@@69))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@71 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@71 $generated@@74 $generated@@73))
)))
(assert (= ($generated@@6 $generated@@75) 4))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@76 ($generated@@50 $generated@@75 $generated@@80) ($generated@@50 $generated@@39 $generated@@81)) (and (< 2 $generated@@35) ($generated@@38 $generated@@39 $generated@@81 ($generated@@40 $generated)))) (and (and (=> (< 0 ($generated@@29 $generated@@80)) (=> (not ($generated@@11 ($generated@@50 $generated@@7 ($generated@@10 ($generated@@62 ($generated@@50 $generated@@39 $generated@@81)))))) (let (($generated@@82 ($generated@@50 $generated@@39 ($generated@@77 ($generated@@50 $generated@@39 $generated@@81)))))
(let (($generated@@83 ($generated@@48 ($generated@@13 ($generated@@71 $generated@@8 ($generated@@78 ($generated@@50 $generated@@39 $generated@@81)))))))
 (=> (> $generated@@83 0) ($generated@@76 ($generated@@27 $generated@@80 ($generated@@28 1)) $generated@@82)))))) (=> (=> (< 0 ($generated@@29 $generated@@80)) (ite ($generated@@62 ($generated@@50 $generated@@39 $generated@@81)) true (let (($generated@@84 ($generated@@50 $generated@@39 ($generated@@77 ($generated@@50 $generated@@39 $generated@@81)))))
(let (($generated@@85 ($generated@@48 ($generated@@13 ($generated@@71 $generated@@8 ($generated@@78 ($generated@@50 $generated@@39 $generated@@81)))))))
 (and (> $generated@@85 0) ($generated@@58 ($generated@@67 $generated@@79) ($generated@@27 $generated@@80 ($generated@@28 1)) $generated@@84)))))) (=> (= ($generated@@48 0) ($generated@@29 $generated@@80)) (forall (($generated@@86 T@U) ) (!  (=> ($generated@@23 $generated@@86 $generated@@80) ($generated@@76 $generated@@86 $generated@@81))
 :pattern ( ($generated@@58 ($generated@@67 $generated@@79) $generated@@86 $generated@@81))
))))) (= ($generated@@58 ($generated@@67 $generated@@79) ($generated@@50 $generated@@75 $generated@@80) ($generated@@50 $generated@@39 $generated@@81))  (and (=> (< 0 ($generated@@29 $generated@@80)) (ite ($generated@@62 ($generated@@50 $generated@@39 $generated@@81)) true (let (($generated@@87 ($generated@@50 $generated@@39 ($generated@@77 ($generated@@50 $generated@@39 $generated@@81)))))
(let (($generated@@88 ($generated@@48 ($generated@@13 ($generated@@71 $generated@@8 ($generated@@78 ($generated@@50 $generated@@39 $generated@@81)))))))
 (and (> $generated@@88 0) ($generated@@58 ($generated@@67 $generated@@79) ($generated@@27 $generated@@80 ($generated@@28 1)) $generated@@87)))))) (=> (= ($generated@@48 0) ($generated@@29 $generated@@80)) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@23 $generated@@89 $generated@@80) ($generated@@58 ($generated@@67 $generated@@79) $generated@@89 $generated@@81))
 :pattern ( ($generated@@58 ($generated@@67 $generated@@79) $generated@@89 $generated@@81))
)))))))
 :weight 3
 :pattern ( ($generated@@58 ($generated@@67 $generated@@79) ($generated@@50 $generated@@75 $generated@@80) ($generated@@50 $generated@@39 $generated@@81)))
))))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@64 $generated@@90) (exists (($generated@@91 T@U) ($generated@@92 T@U) ) (= $generated@@90 ($generated@@53 $generated@@91 $generated@@92))))
 :pattern ( ($generated@@64 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@62 $generated@@93) (= $generated@@93 $generated@@34))
 :pattern ( ($generated@@62 $generated@@93))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (and ($generated@@38 $generated@@39 $generated@@95 ($generated@@40 $generated)) ($generated@@66 ($generated@@67 $generated@@94) $generated@@95)) (forall (($generated@@96 T@U) ) (! ($generated@@58 ($generated@@67 $generated@@94) $generated@@96 $generated@@95)
 :pattern ( ($generated@@58 ($generated@@67 $generated@@94) $generated@@96 $generated@@95))
)))
 :pattern ( ($generated@@66 ($generated@@67 $generated@@94) $generated@@95))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@58 ($generated@@67 $generated@@97) $generated@@98 $generated@@99) ($generated@@58 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@58 ($generated@@67 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@100 ($generated@@72 $generated@@104 $generated@@101) $generated@@102 $generated@@103) ($generated@@43 $generated@@104 $generated@@101 $generated@@102 $generated@@103))
 :pattern ( ($generated@@100 ($generated@@72 $generated@@104 $generated@@101) $generated@@102 $generated@@103))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (or ($generated@@76 ($generated@@50 $generated@@75 $generated@@106) $generated@@107) (and (< 2 $generated@@35) ($generated@@38 $generated@@39 $generated@@107 ($generated@@40 $generated)))) (and (and (=> (< 0 ($generated@@29 $generated@@106)) (=> (not ($generated@@62 $generated@@107)) (let (($generated@@108 ($generated@@77 $generated@@107)))
(let (($generated@@109 ($generated@@13 ($generated@@71 $generated@@8 ($generated@@78 $generated@@107)))))
 (=> (> $generated@@109 0) ($generated@@76 ($generated@@27 $generated@@106 ($generated@@28 1)) $generated@@108)))))) (=> (=> (< 0 ($generated@@29 $generated@@106)) (ite ($generated@@62 $generated@@107) true (let (($generated@@110 ($generated@@77 $generated@@107)))
(let (($generated@@111 ($generated@@13 ($generated@@71 $generated@@8 ($generated@@78 $generated@@107)))))
 (and (> $generated@@111 0) ($generated@@58 ($generated@@67 $generated@@105) ($generated@@27 $generated@@106 ($generated@@28 1)) $generated@@110)))))) (=> (= ($generated@@48 0) ($generated@@29 $generated@@106)) (forall (($generated@@112 T@U) ) (!  (=> ($generated@@23 $generated@@112 $generated@@106) ($generated@@76 $generated@@112 $generated@@107))
 :pattern ( ($generated@@58 ($generated@@67 $generated@@105) $generated@@112 $generated@@107))
))))) (= ($generated@@58 ($generated@@67 $generated@@105) ($generated@@50 $generated@@75 $generated@@106) $generated@@107)  (and (=> (< 0 ($generated@@29 $generated@@106)) (ite ($generated@@62 $generated@@107) true (let (($generated@@113 ($generated@@77 $generated@@107)))
(let (($generated@@114 ($generated@@13 ($generated@@71 $generated@@8 ($generated@@78 $generated@@107)))))
 (and (> $generated@@114 0) ($generated@@58 ($generated@@67 $generated@@105) ($generated@@27 $generated@@106 ($generated@@28 1)) $generated@@113)))))) (=> (= ($generated@@48 0) ($generated@@29 $generated@@106)) (forall (($generated@@115 T@U) ) (!  (=> ($generated@@23 $generated@@115 $generated@@106) ($generated@@58 ($generated@@67 $generated@@105) $generated@@115 $generated@@107))
 :pattern ( ($generated@@58 ($generated@@67 $generated@@105) $generated@@115 $generated@@107))
)))))))
 :weight 3
 :pattern ( ($generated@@58 ($generated@@67 $generated@@105) ($generated@@50 $generated@@75 $generated@@106) $generated@@107))
))))
(assert (forall (($generated@@117 T@U) ) (!  (and (= ($generated@@22 ($generated@@40 $generated@@117)) $generated@@2) (= ($generated@@116 ($generated@@40 $generated@@117)) $generated@@5))
 :pattern ( ($generated@@40 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and ($generated@@118 $generated@@120) (<= ($generated@@29 $generated@@120) ($generated@@29 $generated@@119))) (and (= ($generated@@118 ($generated@@27 $generated@@119 $generated@@120)) ($generated@@118 $generated@@119)) (= ($generated@@29 ($generated@@27 $generated@@119 $generated@@120)) (- ($generated@@29 $generated@@119) ($generated@@29 $generated@@120)))))
 :pattern ( ($generated@@27 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 Int) ) (!  (=> (<= 0 $generated@@121) (and ($generated@@118 ($generated@@28 $generated@@121)) (= ($generated@@29 ($generated@@28 $generated@@121)) $generated@@121)))
 :pattern ( ($generated@@28 $generated@@121))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@123 T@U) ($generated@@124 Int) ) (!  (=> (or ($generated@@37 $generated@@124) (< 1 $generated@@35)) (and (and (=> (= ($generated@@122 $generated@@124 ($generated@@48 5)) ($generated@@48 0)) ($generated@@37 (+ $generated@@124 1))) (=> (or (not (= ($generated@@122 $generated@@124 ($generated@@48 5)) ($generated@@48 0))) (not true)) ($generated@@37 (+ $generated@@124 1)))) (= ($generated@@36 ($generated@@67 $generated@@123) $generated@@124) (ite (= ($generated@@122 $generated@@124 ($generated@@48 5)) ($generated@@48 0)) ($generated@@53 ($generated@@72 $generated@@8 ($generated@@12 $generated@@124)) ($generated@@36 $generated@@123 (+ $generated@@124 1))) ($generated@@36 $generated@@123 (+ $generated@@124 1))))))
 :pattern ( ($generated@@36 ($generated@@67 $generated@@123) $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (or ($generated@@23 $generated@@125 $generated@@126) (= $generated@@125 $generated@@126)) ($generated@@23 $generated@@126 $generated@@125))
 :pattern ( ($generated@@23 $generated@@125 $generated@@126) ($generated@@23 $generated@@126 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@38 $generated@@39 $generated@@128 ($generated@@40 $generated@@127)) (or ($generated@@62 $generated@@128) ($generated@@64 $generated@@128)))
 :pattern ( ($generated@@64 $generated@@128) ($generated@@38 $generated@@39 $generated@@128 ($generated@@40 $generated@@127)))
 :pattern ( ($generated@@62 $generated@@128) ($generated@@38 $generated@@39 $generated@@128 ($generated@@40 $generated@@127)))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or ($generated@@76 $generated@@130 $generated@@131) (and (< 2 $generated@@35) ($generated@@38 $generated@@39 $generated@@131 ($generated@@40 $generated)))) (and (and (=> (< 0 ($generated@@29 $generated@@130)) (=> (not ($generated@@62 $generated@@131)) (let (($generated@@132 ($generated@@77 $generated@@131)))
(let (($generated@@133 ($generated@@13 ($generated@@71 $generated@@8 ($generated@@78 $generated@@131)))))
 (=> (> $generated@@133 0) ($generated@@76 ($generated@@27 $generated@@130 ($generated@@28 1)) $generated@@132)))))) (=> (=> (< 0 ($generated@@29 $generated@@130)) (ite ($generated@@62 $generated@@131) true (let (($generated@@134 ($generated@@77 $generated@@131)))
(let (($generated@@135 ($generated@@13 ($generated@@71 $generated@@8 ($generated@@78 $generated@@131)))))
 (and (> $generated@@135 0) ($generated@@58 $generated@@129 ($generated@@27 $generated@@130 ($generated@@28 1)) $generated@@134)))))) (=> (= ($generated@@48 0) ($generated@@29 $generated@@130)) (forall (($generated@@136 T@U) ) (!  (=> ($generated@@23 $generated@@136 $generated@@130) ($generated@@76 $generated@@136 $generated@@131))
 :pattern ( ($generated@@58 $generated@@129 $generated@@136 $generated@@131))
))))) (= ($generated@@58 ($generated@@67 $generated@@129) $generated@@130 $generated@@131)  (and (=> (< 0 ($generated@@29 $generated@@130)) (ite ($generated@@62 $generated@@131) true (let (($generated@@137 ($generated@@77 $generated@@131)))
(let (($generated@@138 ($generated@@13 ($generated@@71 $generated@@8 ($generated@@78 $generated@@131)))))
 (and (> $generated@@138 0) ($generated@@58 $generated@@129 ($generated@@27 $generated@@130 ($generated@@28 1)) $generated@@137)))))) (=> (= ($generated@@48 0) ($generated@@29 $generated@@130)) (forall (($generated@@139 T@U) ) (!  (=> ($generated@@23 $generated@@139 $generated@@130) ($generated@@58 $generated@@129 $generated@@139 $generated@@131))
 :pattern ( ($generated@@58 $generated@@129 $generated@@139 $generated@@131))
)))))))
 :pattern ( ($generated@@58 ($generated@@67 $generated@@129) $generated@@130 $generated@@131))
))))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@54 $generated@@140 $generated) (and (= ($generated@@72 $generated@@8 ($generated@@71 $generated@@8 $generated@@140)) $generated@@140) ($generated@@38 $generated@@8 ($generated@@71 $generated@@8 $generated@@140) $generated)))
 :pattern ( ($generated@@54 $generated@@140 $generated))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@66 ($generated@@67 $generated@@141) $generated@@142) ($generated@@66 $generated@@141 $generated@@142))
 :pattern ( ($generated@@66 ($generated@@67 $generated@@141) $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@54 ($generated@@72 $generated@@145 $generated@@143) $generated@@144) ($generated@@38 $generated@@145 $generated@@143 $generated@@144))
 :pattern ( ($generated@@54 ($generated@@72 $generated@@145 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (<= 0 ($generated@@29 $generated@@146))
 :pattern ( ($generated@@29 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@33 ($generated@@53 $generated@@147 $generated@@148)) $generated@@4)
 :pattern ( ($generated@@53 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@78 ($generated@@53 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@53 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@77 ($generated@@53 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@53 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@153 ($generated@@40 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@40 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@71 $generated@@156 ($generated@@72 $generated@@156 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@72 $generated@@156 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (and (and (and (=> ($generated@@23 $generated@@157 $generated@@158) (or (not (= $generated@@157 $generated@@158)) (not true))) (=> (and ($generated@@118 $generated@@157) (not ($generated@@118 $generated@@158))) ($generated@@23 $generated@@157 $generated@@158))) (=> (and ($generated@@118 $generated@@157) ($generated@@118 $generated@@158)) (= ($generated@@23 $generated@@157 $generated@@158) (< ($generated@@29 $generated@@157) ($generated@@29 $generated@@158))))) (=> (and ($generated@@23 $generated@@157 $generated@@158) ($generated@@118 $generated@@158)) ($generated@@118 $generated@@157)))
 :pattern ( ($generated@@23 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 Int) ) (! (= ($generated@@36 ($generated@@67 $generated@@159) $generated@@160) ($generated@@36 $generated@@159 $generated@@160))
 :pattern ( ($generated@@36 ($generated@@67 $generated@@159) $generated@@160))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (or ($generated@@161 $generated@@163) (and (< 1 $generated@@35) ($generated@@38 $generated@@39 $generated@@163 ($generated@@40 $generated)))) (and (=> (not ($generated@@62 $generated@@163)) (let (($generated@@164 ($generated@@77 $generated@@163)))
(let (($generated@@165 ($generated@@13 ($generated@@71 $generated@@8 ($generated@@78 $generated@@163)))))
 (=> (> $generated@@165 0) ($generated@@161 $generated@@164))))) (= ($generated@@66 ($generated@@67 $generated@@162) $generated@@163) (ite ($generated@@62 $generated@@163) true (let (($generated@@166 ($generated@@77 $generated@@163)))
(let (($generated@@167 ($generated@@13 ($generated@@71 $generated@@8 ($generated@@78 $generated@@163)))))
 (and (> $generated@@167 0) ($generated@@66 $generated@@162 $generated@@166))))))))
 :pattern ( ($generated@@66 ($generated@@67 $generated@@162) $generated@@163))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and ($generated@@44 $generated@@170) (and ($generated@@64 $generated@@168) ($generated@@43 $generated@@39 $generated@@168 ($generated@@40 $generated@@169) $generated@@170))) ($generated@@100 ($generated@@78 $generated@@168) $generated@@169 $generated@@170))
 :pattern ( ($generated@@100 ($generated@@78 $generated@@168) $generated@@169 $generated@@170))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@171 $generated@@181 $generated@@182 $generated@@183 ($generated@@177 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@186 $generated@@187) $generated@@184)
 :weight 0
)) (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@171 $generated@@188 $generated@@189 $generated@@190 ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@171 $generated@@197 $generated@@198 $generated@@199 ($generated@@177 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@171 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (= ($generated@@6 $generated@@172) 5)) (= ($generated@@6 $generated@@173) 6)) (forall (($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@175 $generated@@206 $generated@@207 ($generated@@178 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@208) $generated@@210) $generated@@208)
 :weight 0
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@215 $generated@@216) (= ($generated@@175 $generated@@211 $generated@@212 ($generated@@178 $generated@@211 $generated@@212 $generated@@214 $generated@@215 $generated@@213) $generated@@216) ($generated@@175 $generated@@211 $generated@@212 $generated@@214 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (= ($generated@@6 ($generated@@176 $generated@@217 $generated@@218)) 7))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@179 ($generated@@176 $generated@@219 $generated@@220)) $generated@@219)
 :pattern ( ($generated@@176 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@180 ($generated@@176 $generated@@221 $generated@@222)) $generated@@222)
 :pattern ( ($generated@@176 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@11 ($generated@@171 $generated@@172 $generated@@173 $generated@@7 ($generated@@174 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (or (not (= $generated@@227 $generated@@223)) (not true)) ($generated@@11 ($generated@@71 $generated@@7 ($generated@@175 $generated@@173 $generated@@75 ($generated@@175 $generated@@172 ($generated@@176 $generated@@173 $generated@@75) $generated@@224 $generated@@227) $generated@@225)))) $generated@@226))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173 $generated@@7 ($generated@@174 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 Int) ($generated@@230 Int) ) (! (= ($generated@@122 $generated@@229 $generated@@230) (mod $generated@@229 $generated@@230))
 :pattern ( ($generated@@122 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> ($generated@@54 $generated@@232 ($generated@@40 $generated@@231)) (and (= ($generated@@72 $generated@@39 ($generated@@71 $generated@@39 $generated@@232)) $generated@@232) ($generated@@38 $generated@@39 ($generated@@71 $generated@@39 $generated@@232) ($generated@@40 $generated@@231))))
 :pattern ( ($generated@@54 $generated@@232 ($generated@@40 $generated@@231)))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> ($generated@@118 $generated@@233) (= $generated@@233 ($generated@@28 ($generated@@29 $generated@@233))))
 :pattern ( ($generated@@29 $generated@@233))
 :pattern ( ($generated@@118 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and ($generated@@44 $generated@@236) (and ($generated@@64 $generated@@234) ($generated@@43 $generated@@39 $generated@@234 ($generated@@40 $generated@@235) $generated@@236))) ($generated@@43 $generated@@39 ($generated@@77 $generated@@234) ($generated@@40 $generated@@235) $generated@@236))
 :pattern ( ($generated@@43 $generated@@39 ($generated@@77 $generated@@234) ($generated@@40 $generated@@235) $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and ($generated@@118 $generated@@238) (<= ($generated@@29 $generated@@238) ($generated@@29 $generated@@237))) (or (and (= $generated@@238 ($generated@@28 0)) (= ($generated@@27 $generated@@237 $generated@@238) $generated@@237)) (and (or (not (= $generated@@238 ($generated@@28 0))) (not true)) ($generated@@23 ($generated@@27 $generated@@237 $generated@@238) $generated@@237))))
 :pattern ( ($generated@@27 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 Int) ) (! (= ($generated@@72 $generated@@8 ($generated@@12 ($generated@@48 $generated@@239))) ($generated@@50 $generated@@75 ($generated@@72 $generated@@8 ($generated@@12 $generated@@239))))
 :pattern ( ($generated@@72 $generated@@8 ($generated@@12 ($generated@@48 $generated@@239))))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@T) ) (! (= ($generated@@72 $generated@@241 ($generated@@50 $generated@@241 $generated@@240)) ($generated@@50 $generated@@75 ($generated@@72 $generated@@241 $generated@@240)))
 :pattern ( ($generated@@72 $generated@@241 ($generated@@50 $generated@@241 $generated@@240)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! ($generated@@43 $generated@@8 $generated@@243 $generated $generated@@242)
 :pattern ( ($generated@@43 $generated@@8 $generated@@243 $generated $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> ($generated@@44 $generated@@247) (= ($generated@@43 $generated@@39 ($generated@@53 $generated@@245 $generated@@246) ($generated@@40 $generated@@244) $generated@@247)  (and ($generated@@100 $generated@@245 $generated@@244 $generated@@247) ($generated@@43 $generated@@39 $generated@@246 ($generated@@40 $generated@@244) $generated@@247))))
 :pattern ( ($generated@@43 $generated@@39 ($generated@@53 $generated@@245 $generated@@246) ($generated@@40 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ) (! ($generated@@38 $generated@@8 $generated@@248 $generated)
 :pattern ( ($generated@@38 $generated@@8 $generated@@248 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@254  (=> (= $generated@@249 ($generated@@174 $generated@@250 $generated@@251 $generated@@1 false)) (=> (and (> $generated@@252 0) (= (ControlFlow 0 2) (- 0 1))) (or (not (= ($generated@@48 5) 0)) (not true))))))
(let (($generated@@255  (=> (and (and ($generated@@44 $generated@@251) ($generated@@253 $generated@@251)) (and (= 3 $generated@@35) (= (ControlFlow 0 3) 2))) $generated@@254)))
$generated@@255)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
