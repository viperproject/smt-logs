(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () Bool)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@90 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@94 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (= ($generated@@5 $generated@@24) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@27 ($generated@@25 $generated@@26)) ($generated@@22 $generated@@27))
 :pattern ( ($generated@@22 $generated@@27) ($generated@@23 $generated@@24 $generated@@27 ($generated@@25 $generated@@26)))
)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@31 T@U) ) (!  (=> (or $generated@@30 (< 2 $generated@@28)) ($generated@@23 $generated@@24 ($generated@@29 $generated@@31) ($generated@@25 $generated)))
 :pattern ( ($generated@@29 $generated@@31))
))))
(assert (forall (($generated@@33 Int) ) (! (= ($generated@@32 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@T) ) (! (= ($generated@@34 $generated@@36 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@36 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@37 $generated@@40 $generated@@41) ($generated@@25 $generated@@39))  (and ($generated@@38 $generated@@40 $generated@@39) ($generated@@23 $generated@@24 $generated@@41 ($generated@@25 $generated@@39))))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@37 $generated@@40 $generated@@41) ($generated@@25 $generated@@39)))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or ($generated@@44 $generated@@50 $generated@@51) (and (< 1 $generated@@28) (and ($generated@@23 $generated@@24 $generated@@50 ($generated@@25 $generated)) ($generated@@23 $generated@@24 $generated@@51 ($generated@@25 $generated))))) (and (and (and ($generated@@22 $generated@@50) ($generated@@22 $generated@@51)) (and (and ($generated@@22 $generated@@50) ($generated@@22 $generated@@51)) ($generated@@44 ($generated@@45 $generated@@50) ($generated@@45 $generated@@51)))) (= ($generated@@42 ($generated@@43 $generated@@49) $generated@@50 $generated@@51) ($generated@@37 ($generated@@46 $generated@@7 ($generated@@11 (+ ($generated@@12 ($generated@@47 $generated@@7 ($generated@@48 $generated@@50))) ($generated@@12 ($generated@@47 $generated@@7 ($generated@@48 $generated@@51)))))) ($generated@@42 $generated@@49 ($generated@@45 $generated@@50) ($generated@@45 $generated@@51))))))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@49) $generated@@50 $generated@@51))
))))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@22 $generated@@53) (= ($generated@@52 $generated@@53) $generated@@3))
 :pattern ( ($generated@@22 $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@46 $generated@@55 ($generated@@47 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@47 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@22 $generated@@56) (exists (($generated@@57 T@U) ($generated@@58 T@U) ) (= $generated@@56 ($generated@@37 $generated@@57 $generated@@58))))
 :pattern ( ($generated@@22 $generated@@56))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@59 ($generated@@46 $generated@@64 $generated@@61) $generated@@62 $generated@@63) ($generated@@60 $generated@@64 $generated@@61 $generated@@62 $generated@@63))
 :pattern ( ($generated@@59 ($generated@@46 $generated@@64 $generated@@61) $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (!  (and (= ($generated@@21 ($generated@@25 $generated@@66)) $generated@@2) (= ($generated@@65 ($generated@@25 $generated@@66)) $generated@@4))
 :pattern ( ($generated@@25 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@42 ($generated@@43 $generated@@67) $generated@@68 $generated@@69) ($generated@@42 $generated@@67 $generated@@68 $generated@@69))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@67) $generated@@68 $generated@@69))
)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@71 T@U) ) (!  (=> (or $generated@@30 (< 2 $generated@@28)) (and (and (and $generated@@30 (and $generated@@30 ($generated@@22 ($generated@@34 $generated@@24 ($generated@@29 $generated@@71))))) ($generated@@44 ($generated@@34 $generated@@24 ($generated@@29 $generated@@71)) ($generated@@34 $generated@@24 ($generated@@45 ($generated@@34 $generated@@24 ($generated@@29 $generated@@71)))))) (= ($generated@@29 ($generated@@43 $generated@@71)) ($generated@@34 $generated@@24 ($generated@@37 ($generated@@46 $generated@@7 ($generated@@11 ($generated@@32 1))) ($generated@@34 $generated@@24 ($generated@@42 ($generated@@43 $generated@@70) ($generated@@34 $generated@@24 ($generated@@29 $generated@@71)) ($generated@@34 $generated@@24 ($generated@@45 ($generated@@34 $generated@@24 ($generated@@29 $generated@@71)))))))))))
 :pattern ( ($generated@@29 ($generated@@43 $generated@@71)))
))))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@38 $generated@@72 $generated) (and (= ($generated@@46 $generated@@7 ($generated@@47 $generated@@7 $generated@@72)) $generated@@72) ($generated@@23 $generated@@7 ($generated@@47 $generated@@7 $generated@@72) $generated)))
 :pattern ( ($generated@@38 $generated@@72 $generated))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@38 ($generated@@46 $generated@@75 $generated@@73) $generated@@74) ($generated@@23 $generated@@75 $generated@@73 $generated@@74))
 :pattern ( ($generated@@38 ($generated@@46 $generated@@75 $generated@@73) $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@52 ($generated@@37 $generated@@76 $generated@@77)) $generated@@3)
 :pattern ( ($generated@@37 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@48 ($generated@@37 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@37 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@45 ($generated@@37 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@37 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 ($generated@@25 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@25 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@47 $generated@@85 ($generated@@46 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@46 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and ($generated@@86 $generated@@89) (and ($generated@@22 $generated@@87) ($generated@@60 $generated@@24 $generated@@87 ($generated@@25 $generated@@88) $generated@@89))) ($generated@@59 ($generated@@48 $generated@@87) $generated@@88 $generated@@89))
 :pattern ( ($generated@@59 ($generated@@48 $generated@@87) $generated@@88 $generated@@89))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@90 $generated@@101 $generated@@102 $generated@@103 ($generated@@97 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@106 $generated@@107) $generated@@104)
 :weight 0
)) (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@90 $generated@@108 $generated@@109 $generated@@110 ($generated@@97 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@90 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@90 $generated@@117 $generated@@118 $generated@@119 ($generated@@97 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@90 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)))) (= ($generated@@5 $generated@@91) 4)) (= ($generated@@5 $generated@@92) 5)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@94 $generated@@126 $generated@@127 ($generated@@98 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@130) $generated@@128)
 :weight 0
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@94 $generated@@131 $generated@@132 ($generated@@98 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@94 $generated@@131 $generated@@132 $generated@@134 $generated@@136)))
 :weight 0
))) (= ($generated@@5 $generated@@95) 6)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@5 ($generated@@96 $generated@@137 $generated@@138)) 7))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@96 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@96 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Bool) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@10 ($generated@@90 $generated@@91 $generated@@92 $generated@@6 ($generated@@93 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))  (=> (and (or (not (= $generated@@147 $generated@@143)) (not true)) ($generated@@10 ($generated@@47 $generated@@6 ($generated@@94 $generated@@92 $generated@@95 ($generated@@94 $generated@@91 ($generated@@96 $generated@@92 $generated@@95) $generated@@144 $generated@@147) $generated@@145)))) $generated@@146))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92 $generated@@6 ($generated@@93 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@29 ($generated@@43 $generated@@149)) ($generated@@29 $generated@@149))
 :pattern ( ($generated@@29 ($generated@@43 $generated@@149)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@38 $generated@@151 ($generated@@25 $generated@@150)) (and (= ($generated@@46 $generated@@24 ($generated@@47 $generated@@24 $generated@@151)) $generated@@151) ($generated@@23 $generated@@24 ($generated@@47 $generated@@24 $generated@@151) ($generated@@25 $generated@@150))))
 :pattern ( ($generated@@38 $generated@@151 ($generated@@25 $generated@@150)))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (or ($generated@@44 $generated@@153 $generated@@154) (and (< 1 $generated@@28) (and ($generated@@23 $generated@@24 $generated@@153 ($generated@@25 $generated)) ($generated@@23 $generated@@24 $generated@@154 ($generated@@25 $generated))))) ($generated@@23 $generated@@24 ($generated@@42 $generated@@152 $generated@@153 $generated@@154) ($generated@@25 $generated)))
 :pattern ( ($generated@@42 $generated@@152 $generated@@153 $generated@@154))
))))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@155 T@U) ) (!  (=> (or $generated@@30 (< 2 $generated@@28)) (and (and (and $generated@@30 (and $generated@@30 ($generated@@22 ($generated@@34 $generated@@24 ($generated@@29 ($generated@@43 $generated@@155)))))) ($generated@@44 ($generated@@34 $generated@@24 ($generated@@29 ($generated@@43 $generated@@155))) ($generated@@34 $generated@@24 ($generated@@45 ($generated@@34 $generated@@24 ($generated@@29 ($generated@@43 $generated@@155))))))) (= ($generated@@29 ($generated@@43 $generated@@155)) ($generated@@34 $generated@@24 ($generated@@37 ($generated@@46 $generated@@7 ($generated@@11 ($generated@@32 1))) ($generated@@34 $generated@@24 ($generated@@42 ($generated@@43 $generated@@70) ($generated@@34 $generated@@24 ($generated@@29 ($generated@@43 $generated@@155))) ($generated@@34 $generated@@24 ($generated@@45 ($generated@@34 $generated@@24 ($generated@@29 ($generated@@43 $generated@@155))))))))))))
 :weight 3
 :pattern ( ($generated@@29 ($generated@@43 $generated@@155)))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@86 $generated@@158) (and ($generated@@22 $generated@@156) ($generated@@60 $generated@@24 $generated@@156 ($generated@@25 $generated@@157) $generated@@158))) ($generated@@60 $generated@@24 ($generated@@45 $generated@@156) ($generated@@25 $generated@@157) $generated@@158))
 :pattern ( ($generated@@60 $generated@@24 ($generated@@45 $generated@@156) ($generated@@25 $generated@@157) $generated@@158))
)))
(assert (forall (($generated@@159 Int) ) (! (= ($generated@@46 $generated@@7 ($generated@@11 ($generated@@32 $generated@@159))) ($generated@@34 $generated@@95 ($generated@@46 $generated@@7 ($generated@@11 $generated@@159))))
 :pattern ( ($generated@@46 $generated@@7 ($generated@@11 ($generated@@32 $generated@@159))))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@46 $generated@@161 ($generated@@34 $generated@@161 $generated@@160)) ($generated@@34 $generated@@95 ($generated@@46 $generated@@161 $generated@@160)))
 :pattern ( ($generated@@46 $generated@@161 ($generated@@34 $generated@@161 $generated@@160)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! ($generated@@60 $generated@@7 $generated@@163 $generated $generated@@162)
 :pattern ( ($generated@@60 $generated@@7 $generated@@163 $generated $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@86 $generated@@167) (= ($generated@@60 $generated@@24 ($generated@@37 $generated@@165 $generated@@166) ($generated@@25 $generated@@164) $generated@@167)  (and ($generated@@59 $generated@@165 $generated@@164 $generated@@167) ($generated@@60 $generated@@24 $generated@@166 ($generated@@25 $generated@@164) $generated@@167))))
 :pattern ( ($generated@@60 $generated@@24 ($generated@@37 $generated@@165 $generated@@166) ($generated@@25 $generated@@164) $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (! ($generated@@23 $generated@@7 $generated@@168 $generated)
 :pattern ( ($generated@@23 $generated@@7 $generated@@168 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@173  (=> (= (ControlFlow 0 3) (- 0 4)) false)))
(let (($generated@@174 true))
(let (($generated@@175  (=> (= $generated@@169 ($generated@@93 $generated@@170 $generated@@171 $generated@@1 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@174) (=> (= (ControlFlow 0 5) 3) $generated@@173)))))
(let (($generated@@176  (=> (and (and ($generated@@86 $generated@@171) ($generated@@172 $generated@@171)) (and (= 2 $generated@@28) (= (ControlFlow 0 6) 5))) $generated@@175)))
$generated@@176)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
