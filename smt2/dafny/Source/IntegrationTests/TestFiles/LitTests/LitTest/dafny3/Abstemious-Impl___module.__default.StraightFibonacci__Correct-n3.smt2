(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (Int) Int)
(declare-fun $generated@@25 (T@U Int T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U Int) Int)
(declare-fun $generated@@38 (Int) Bool)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U T@U T@U) Bool)
(declare-fun $generated@@59 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U Int) T@U)
(declare-fun $generated@@86 (Int) Bool)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@T T@T) T@T)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@187 () T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@27) 3))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 Int) ($generated@@35 T@U) ) (!  (=> (or ($generated@@25 $generated@@32 ($generated@@24 $generated@@34) $generated@@35) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@34) ($generated@@26 $generated@@27 $generated@@35 ($generated@@28 $generated@@32))))) (and (and (=> (= ($generated@@24 $generated@@34) ($generated@@24 0)) ($generated@@29 $generated@@35)) (=> (or (not (= ($generated@@24 $generated@@34) ($generated@@24 0))) (not true)) (and ($generated@@29 $generated@@35) ($generated@@25 $generated@@32 ($generated@@24 (- $generated@@34 1)) ($generated@@30 $generated@@35))))) (= ($generated@@22 $generated@@32 ($generated@@23 $generated@@33) ($generated@@24 $generated@@34) $generated@@35) (ite (= ($generated@@24 $generated@@34) ($generated@@24 0)) ($generated@@31 $generated@@35) ($generated@@22 $generated@@32 ($generated@@23 $generated@@33) ($generated@@24 (- $generated@@34 1)) ($generated@@30 $generated@@35))))))
 :weight 3
 :pattern ( ($generated@@22 $generated@@32 ($generated@@23 $generated@@33) ($generated@@24 $generated@@34) $generated@@35))
))))
(assert (= ($generated@@36 $generated) $generated@@0))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@39 T@U) ($generated@@40 Int) ) (!  (=> (or ($generated@@38 $generated@@40) (and (< 0 $generated@@21) (<= ($generated@@24 0) $generated@@40))) (and (=> (<= 2 $generated@@40) (and ($generated@@38 (- $generated@@40 2)) ($generated@@38 (- $generated@@40 1)))) (= ($generated@@37 ($generated@@23 $generated@@39) $generated@@40) (ite (< $generated@@40 2) $generated@@40 (+ ($generated@@37 $generated@@39 (- $generated@@40 2)) ($generated@@37 $generated@@39 (- $generated@@40 1)))))))
 :pattern ( ($generated@@37 ($generated@@23 $generated@@39) $generated@@40))
))))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (or ($generated@@38 $generated@@42) (and (< 0 $generated@@21) (<= ($generated@@24 0) $generated@@42))) (<= ($generated@@24 0) ($generated@@37 $generated@@41 $generated@@42)))
 :pattern ( ($generated@@37 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@44 ($generated@@28 $generated@@43)) ($generated@@29 $generated@@44))
 :pattern ( ($generated@@29 $generated@@44) ($generated@@26 $generated@@27 $generated@@44 ($generated@@28 $generated@@43)))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 Int) ($generated@@48 T@U) ) (!  (=> (or ($generated@@25 $generated@@45 $generated@@47 $generated@@48) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@47) ($generated@@26 $generated@@27 $generated@@48 ($generated@@28 $generated@@45))))) (and (and (=> (= $generated@@47 ($generated@@24 0)) ($generated@@29 $generated@@48)) (=> (or (not (= $generated@@47 ($generated@@24 0))) (not true)) (and ($generated@@29 $generated@@48) ($generated@@25 $generated@@45 (- $generated@@47 1) ($generated@@30 $generated@@48))))) (= ($generated@@22 $generated@@45 ($generated@@23 $generated@@46) $generated@@47 $generated@@48) (ite (= $generated@@47 ($generated@@24 0)) ($generated@@31 $generated@@48) ($generated@@22 $generated@@45 $generated@@46 (- $generated@@47 1) ($generated@@30 $generated@@48))))))
 :pattern ( ($generated@@22 $generated@@45 ($generated@@23 $generated@@46) $generated@@47 $generated@@48))
))))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@24 $generated@@49) $generated@@49)
 :pattern ( ($generated@@24 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 Int) ($generated@@57 T@U) ) (!  (=> (or ($generated@@25 $generated@@54 $generated@@56 $generated@@57) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@56) ($generated@@26 $generated@@27 $generated@@57 ($generated@@28 $generated@@54))))) ($generated@@53 ($generated@@22 $generated@@54 $generated@@55 $generated@@56 $generated@@57) $generated@@54))
 :pattern ( ($generated@@22 $generated@@54 $generated@@55 $generated@@56 $generated@@57))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 Int) ($generated@@65 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@62 $generated@@64 $generated@@65) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@64) (and ($generated@@26 $generated@@27 $generated@@65 ($generated@@28 $generated@@62)) ($generated@@59 $generated@@27 $generated@@65 ($generated@@28 $generated@@62) $generated@@61))))) ($generated@@60 $generated@@61)) ($generated@@58 ($generated@@22 $generated@@62 $generated@@63 $generated@@64 $generated@@65) $generated@@62 $generated@@61))
 :pattern ( ($generated@@58 ($generated@@22 $generated@@62 $generated@@63 $generated@@64 $generated@@65) $generated@@62 $generated@@61))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@66 $generated@@68 $generated@@69) ($generated@@28 $generated@@67))  (and ($generated@@53 $generated@@68 $generated@@67) ($generated@@26 $generated@@27 $generated@@69 ($generated@@28 $generated@@67))))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@66 $generated@@68 $generated@@69) ($generated@@28 $generated@@67)))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@29 $generated@@71) (= ($generated@@70 $generated@@71) $generated@@3))
 :pattern ( ($generated@@29 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@72 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@72 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@29 $generated@@76) (exists (($generated@@77 T@U) ($generated@@78 T@U) ) (= $generated@@76 ($generated@@66 $generated@@77 $generated@@78))))
 :pattern ( ($generated@@29 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@58 ($generated@@73 $generated@@82 $generated@@79) $generated@@80 $generated@@81) ($generated@@59 $generated@@82 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@58 ($generated@@73 $generated@@82 $generated@@79) $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (!  (and (= ($generated@@36 ($generated@@28 $generated@@84)) $generated@@2) (= ($generated@@83 ($generated@@28 $generated@@84)) $generated@@4))
 :pattern ( ($generated@@28 $generated@@84))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@87 T@U) ($generated@@88 Int) ) (!  (=> (or ($generated@@86 $generated@@88) (and (< 1 $generated@@21) (<= ($generated@@24 0) $generated@@88))) ($generated@@26 $generated@@27 ($generated@@85 $generated@@87 $generated@@88) ($generated@@28 $generated)))
 :pattern ( ($generated@@85 $generated@@87 $generated@@88))
))))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@89 T@U) ($generated@@90 Int) ) (!  (=> (or ($generated@@38 ($generated@@24 $generated@@90)) (and (< 0 $generated@@21) (<= ($generated@@24 0) $generated@@90))) (and (=> (not ($generated@@10 ($generated@@50 $generated@@6 ($generated@@9 (< $generated@@90 2))))) (and ($generated@@38 ($generated@@24 (- $generated@@90 2))) ($generated@@38 ($generated@@24 (- $generated@@90 1))))) (= ($generated@@37 ($generated@@23 $generated@@89) ($generated@@24 $generated@@90)) (ite (< $generated@@90 2) $generated@@90 (+ ($generated@@37 ($generated@@23 $generated@@89) ($generated@@24 (- $generated@@90 2))) ($generated@@37 ($generated@@23 $generated@@89) ($generated@@24 (- $generated@@90 1))))))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@23 $generated@@89) ($generated@@24 $generated@@90)))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 Int) ($generated@@94 T@U) ) (!  (=> (or ($generated@@25 $generated@@91 ($generated@@24 $generated@@93) ($generated@@50 $generated@@27 $generated@@94)) (and (< 1 $generated@@21) (and (<= ($generated@@24 0) $generated@@93) ($generated@@26 $generated@@27 $generated@@94 ($generated@@28 $generated@@91))))) (and (and (=> (= ($generated@@24 $generated@@93) ($generated@@24 0)) ($generated@@29 ($generated@@50 $generated@@27 $generated@@94))) (=> (or (not (= ($generated@@24 $generated@@93) ($generated@@24 0))) (not true)) (and ($generated@@29 ($generated@@50 $generated@@27 $generated@@94)) ($generated@@25 $generated@@91 ($generated@@24 (- $generated@@93 1)) ($generated@@50 $generated@@27 ($generated@@30 ($generated@@50 $generated@@27 $generated@@94))))))) (= ($generated@@22 $generated@@91 ($generated@@23 $generated@@92) ($generated@@24 $generated@@93) ($generated@@50 $generated@@27 $generated@@94)) (ite (= ($generated@@24 $generated@@93) ($generated@@24 0)) ($generated@@31 ($generated@@50 $generated@@27 $generated@@94)) ($generated@@22 $generated@@91 ($generated@@23 $generated@@92) ($generated@@24 (- $generated@@93 1)) ($generated@@50 $generated@@27 ($generated@@30 ($generated@@50 $generated@@27 $generated@@94))))))))
 :weight 3
 :pattern ( ($generated@@22 $generated@@91 ($generated@@23 $generated@@92) ($generated@@24 $generated@@93) ($generated@@50 $generated@@27 $generated@@94)))
))))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@53 $generated@@95 $generated) (and (= ($generated@@73 $generated@@7 ($generated@@72 $generated@@7 $generated@@95)) $generated@@95) ($generated@@26 $generated@@7 ($generated@@72 $generated@@7 $generated@@95) $generated)))
 :pattern ( ($generated@@53 $generated@@95 $generated))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@53 ($generated@@73 $generated@@98 $generated@@96) $generated@@97) ($generated@@26 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@53 ($generated@@73 $generated@@98 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@70 ($generated@@66 $generated@@99 $generated@@100)) $generated@@3)
 :pattern ( ($generated@@66 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@31 ($generated@@66 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@66 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@30 ($generated@@66 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@66 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 ($generated@@28 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@28 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@72 $generated@@108 ($generated@@73 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@73 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 Int) ) (! (= ($generated@@37 ($generated@@23 $generated@@109) $generated@@110) ($generated@@37 $generated@@109 $generated@@110))
 :pattern ( ($generated@@37 ($generated@@23 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 Int) ) (! (= ($generated@@85 ($generated@@23 $generated@@111) $generated@@112) ($generated@@85 $generated@@111 $generated@@112))
 :pattern ( ($generated@@85 ($generated@@23 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and ($generated@@60 $generated@@115) (and ($generated@@29 $generated@@113) ($generated@@59 $generated@@27 $generated@@113 ($generated@@28 $generated@@114) $generated@@115))) ($generated@@58 ($generated@@31 $generated@@113) $generated@@114 $generated@@115))
 :pattern ( ($generated@@58 ($generated@@31 $generated@@113) $generated@@114 $generated@@115))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@116 $generated@@127 $generated@@128 $generated@@129 ($generated@@123 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@116 $generated@@134 $generated@@135 $generated@@136 ($generated@@123 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@116 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@116 $generated@@143 $generated@@144 $generated@@145 ($generated@@123 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))) (= ($generated@@5 $generated@@117) 4)) (= ($generated@@5 $generated@@118) 5)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@120 $generated@@152 $generated@@153 ($generated@@124 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@156) $generated@@154)
 :weight 0
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@120 $generated@@157 $generated@@158 ($generated@@124 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@120 $generated@@157 $generated@@158 $generated@@160 $generated@@162)))
 :weight 0
))) (= ($generated@@5 $generated@@121) 6)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@5 ($generated@@122 $generated@@163 $generated@@164)) 7))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@125 ($generated@@122 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@122 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@126 ($generated@@122 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@122 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@10 ($generated@@116 $generated@@117 $generated@@118 $generated@@6 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@10 ($generated@@72 $generated@@6 ($generated@@120 $generated@@118 $generated@@121 ($generated@@120 $generated@@117 ($generated@@122 $generated@@118 $generated@@121) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@116 $generated@@117 $generated@@118 $generated@@6 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 T@U) ) (! (= ($generated@@22 $generated@@175 ($generated@@23 $generated@@176) $generated@@177 $generated@@178) ($generated@@22 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
 :pattern ( ($generated@@22 $generated@@175 ($generated@@23 $generated@@176) $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@53 $generated@@180 ($generated@@28 $generated@@179)) (and (= ($generated@@73 $generated@@27 ($generated@@72 $generated@@27 $generated@@180)) $generated@@180) ($generated@@26 $generated@@27 ($generated@@72 $generated@@27 $generated@@180) ($generated@@28 $generated@@179))))
 :pattern ( ($generated@@53 $generated@@180 ($generated@@28 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@60 $generated@@183) (and ($generated@@29 $generated@@181) ($generated@@59 $generated@@27 $generated@@181 ($generated@@28 $generated@@182) $generated@@183))) ($generated@@59 $generated@@27 ($generated@@30 $generated@@181) ($generated@@28 $generated@@182) $generated@@183))
 :pattern ( ($generated@@59 $generated@@27 ($generated@@30 $generated@@181) ($generated@@28 $generated@@182) $generated@@183))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@73 $generated@@7 ($generated@@11 ($generated@@24 $generated@@184))) ($generated@@50 $generated@@121 ($generated@@73 $generated@@7 ($generated@@11 $generated@@184))))
 :pattern ( ($generated@@73 $generated@@7 ($generated@@11 ($generated@@24 $generated@@184))))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@T) ) (! (= ($generated@@73 $generated@@186 ($generated@@50 $generated@@186 $generated@@185)) ($generated@@50 $generated@@121 ($generated@@73 $generated@@186 $generated@@185)))
 :pattern ( ($generated@@73 $generated@@186 ($generated@@50 $generated@@186 $generated@@185)))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@188 T@U) ($generated@@189 Int) ) (!  (=> (or ($generated@@86 $generated@@189) (and (< 1 $generated@@21) (<= ($generated@@24 0) $generated@@189))) (and (and ($generated@@38 $generated@@189) ($generated@@86 (+ $generated@@189 1))) (= ($generated@@85 ($generated@@23 $generated@@188) $generated@@189) ($generated@@66 ($generated@@73 $generated@@7 ($generated@@11 ($generated@@37 ($generated@@23 $generated@@187) $generated@@189))) ($generated@@85 $generated@@188 (+ $generated@@189 1))))))
 :pattern ( ($generated@@85 ($generated@@23 $generated@@188) $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! ($generated@@59 $generated@@7 $generated@@191 $generated $generated@@190)
 :pattern ( ($generated@@59 $generated@@7 $generated@@191 $generated $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@60 $generated@@195) (= ($generated@@59 $generated@@27 ($generated@@66 $generated@@193 $generated@@194) ($generated@@28 $generated@@192) $generated@@195)  (and ($generated@@58 $generated@@193 $generated@@192 $generated@@195) ($generated@@59 $generated@@27 $generated@@194 ($generated@@28 $generated@@192) $generated@@195))))
 :pattern ( ($generated@@59 $generated@@27 ($generated@@66 $generated@@193 $generated@@194) ($generated@@28 $generated@@192) $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! ($generated@@26 $generated@@7 $generated@@196 $generated)
 :pattern ( ($generated@@26 $generated@@7 $generated@@196 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@204  (=> (= $generated@@197 ($generated@@119 $generated@@198 $generated@@199 $generated@@1 false)) (=> (and (and (and ($generated@@60 $generated@@200) ($generated@@201 $generated@@200)) (= $generated@@199 $generated@@200)) (and (forall (($generated@@205 Int) ($generated@@206 Int) ) (!  (=> (and (and (and (<= ($generated@@24 0) $generated@@205) (<= ($generated@@24 0) $generated@@206)) ($generated@@10 ($generated@@50 $generated@@6 ($generated@@9 true)))) (or (and (<= 0 $generated@@205) (< $generated@@205 $generated@@202)) (and (= $generated@@205 $generated@@202) (and (<= 0 $generated@@206) (< $generated@@206 $generated@@203))))) (= ($generated@@12 ($generated@@72 $generated@@7 ($generated@@22 $generated ($generated@@23 $generated@@187) $generated@@205 ($generated@@85 ($generated@@23 $generated@@187) $generated@@206)))) ($generated@@37 ($generated@@23 $generated@@187) (+ $generated@@206 $generated@@205))))
 :pattern ( ($generated@@72 $generated@@7 ($generated@@22 $generated ($generated@@23 $generated@@187) $generated@@205 ($generated@@85 ($generated@@23 $generated@@187) $generated@@206))))
)) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@12 ($generated@@72 $generated@@7 ($generated@@22 $generated ($generated@@23 ($generated@@23 $generated@@187)) $generated@@202 ($generated@@85 ($generated@@23 ($generated@@23 $generated@@187)) $generated@@203)))) ($generated@@37 ($generated@@23 ($generated@@23 $generated@@187)) (+ $generated@@203 $generated@@202)))))))
(let (($generated@@207  (=> (and ($generated@@60 $generated@@199) ($generated@@201 $generated@@199)) (=> (and (and (<= ($generated@@24 0) $generated@@202) (<= ($generated@@24 0) $generated@@203)) (and (= 2 $generated@@21) (= (ControlFlow 0 3) 2))) $generated@@204))))
$generated@@207)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
