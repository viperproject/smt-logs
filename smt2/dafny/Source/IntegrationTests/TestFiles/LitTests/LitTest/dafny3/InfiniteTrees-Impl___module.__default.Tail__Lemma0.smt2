(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@52 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@U T@U) Bool)
(declare-fun $generated@@60 (Int) Int)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 () Int)
(declare-fun $generated@@66 (T@U T@U T@U Int) T@U)
(declare-fun $generated@@67 (T@U T@U Int) Bool)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) Bool)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@113 (T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@174 () T@T)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (or (not (= $generated@@25 ($generated@@22 0))) (not true)) (= ($generated@@20 $generated@@23 $generated@@24 $generated@@25 ($generated@@21 $generated@@26) $generated@@27 $generated@@28) ($generated@@20 $generated@@23 $generated@@24 $generated@@25 $generated@@26 $generated@@27 $generated@@28)))
 :pattern ( ($generated@@20 $generated@@23 $generated@@24 $generated@@25 ($generated@@21 $generated@@26) $generated@@27 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and ($generated@@29 $generated@@30 $generated@@31) ($generated@@29 $generated@@31 $generated@@32)) ($generated@@29 $generated@@30 $generated@@32))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31) ($generated@@29 $generated@@31 $generated@@32))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31) ($generated@@29 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 Int) ($generated@@37 Int) ) (!  (=> (and (and (<= 0 $generated@@36) (<= 0 $generated@@37)) (<= (+ $generated@@36 $generated@@37) ($generated@@34 $generated@@35))) (= ($generated@@33 ($generated@@33 $generated@@35 ($generated@@22 $generated@@36)) ($generated@@22 $generated@@37)) ($generated@@33 $generated@@35 ($generated@@22 (+ $generated@@36 $generated@@37)))))
 :pattern ( ($generated@@33 ($generated@@33 $generated@@35 ($generated@@22 $generated@@36)) ($generated@@22 $generated@@37)))
)))
(assert (= ($generated@@38 $generated@@39) $generated@@1))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (= $generated@@44 $generated@@45) ($generated@@20 $generated@@40 $generated@@41 $generated@@42 ($generated@@21 $generated@@43) $generated@@44 $generated@@45))
 :pattern ( ($generated@@20 $generated@@40 $generated@@41 $generated@@42 ($generated@@21 $generated@@43) $generated@@44 $generated@@45))
)))
(assert (= ($generated@@4 $generated@@47) 3))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> ($generated@@49 $generated@@51) ($generated@@46 $generated@@47 $generated@@39 ($generated@@48 $generated@@50) $generated@@51))
 :pattern ( ($generated@@46 $generated@@47 $generated@@39 ($generated@@48 $generated@@50) $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@52 $generated@@53 $generated@@54 ($generated@@21 $generated@@55) $generated@@56 $generated@@57) (= $generated@@56 $generated@@57))
 :pattern ( ($generated@@52 $generated@@53 $generated@@54 ($generated@@21 $generated@@55) $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (! ($generated@@58 $generated@@47 $generated@@39 ($generated@@48 $generated@@59))
 :pattern ( ($generated@@58 $generated@@47 $generated@@39 ($generated@@48 $generated@@59)))
)))
(assert (forall (($generated@@61 Int) ) (! (= ($generated@@60 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@64 $generated@@63))
)))
(assert  (=> (<= 1 $generated@@65) (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 Int) ) (!  (=> (or ($generated@@67 $generated@@68 $generated@@70 $generated@@71) (and (< 1 $generated@@65) (and ($generated@@58 $generated@@47 $generated@@70 ($generated@@48 $generated@@68)) (<= ($generated@@60 0) $generated@@71)))) ($generated@@58 $generated@@47 ($generated@@66 $generated@@68 $generated@@69 $generated@@70 $generated@@71) ($generated@@48 $generated@@68)))
 :pattern ( ($generated@@66 $generated@@68 $generated@@69 $generated@@70 $generated@@71))
))))
(assert  (=> (<= 1 $generated@@65) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 Int) ) (!  (=> (or ($generated@@67 $generated@@75 $generated@@77 ($generated@@60 $generated@@78)) (and (< 1 $generated@@65) (and ($generated@@58 $generated@@47 $generated@@77 ($generated@@48 $generated@@75)) (<= ($generated@@60 0) $generated@@78)))) (and (=> (or (not (= ($generated@@60 $generated@@78) ($generated@@60 0))) (not true)) (and ($generated@@67 $generated@@75 $generated@@77 ($generated@@60 (- $generated@@78 1))) (let (($generated@@79 ($generated@@66 $generated@@75 ($generated@@21 $generated@@76) $generated@@77 ($generated@@60 (- $generated@@78 1)))))
($generated@@72 $generated@@79)))) (= ($generated@@66 $generated@@75 ($generated@@21 $generated@@76) $generated@@77 ($generated@@60 $generated@@78)) (ite (= ($generated@@60 $generated@@78) ($generated@@60 0)) $generated@@77 (let (($generated@@80 ($generated@@66 $generated@@75 ($generated@@21 $generated@@76) $generated@@77 ($generated@@60 (- $generated@@78 1)))))
(ite ($generated@@52 $generated@@75 $generated@@75 ($generated@@21 ($generated@@21 $generated@@73)) $generated@@80 $generated@@39) $generated@@80 ($generated@@74 $generated@@80)))))))
 :weight 3
 :pattern ( ($generated@@66 $generated@@75 ($generated@@21 $generated@@76) $generated@@77 ($generated@@60 $generated@@78)))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@58 $generated@@47 ($generated@@81 $generated@@84 $generated@@85) ($generated@@48 $generated@@83))  (and ($generated@@82 $generated@@84 $generated@@83) ($generated@@58 $generated@@47 $generated@@85 ($generated@@48 $generated@@83))))
 :pattern ( ($generated@@58 $generated@@47 ($generated@@81 $generated@@84 $generated@@85) ($generated@@48 $generated@@83)))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 $generated@@87) (= ($generated@@38 $generated@@87) $generated@@1))
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 $generated@@89) (= ($generated@@38 $generated@@89) $generated@@2))
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@90 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@90 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@88 $generated@@94) (exists (($generated@@95 T@U) ($generated@@96 T@U) ) (= $generated@@94 ($generated@@81 $generated@@95 $generated@@96))))
 :pattern ( ($generated@@88 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@86 $generated@@97) (= $generated@@97 $generated@@39))
 :pattern ( ($generated@@86 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and ($generated@@58 $generated@@47 $generated@@103 ($generated@@48 $generated@@99)) ($generated@@58 $generated@@47 $generated@@104 ($generated@@48 $generated@@100))) (= ($generated@@20 $generated@@99 $generated@@100 $generated@@101 ($generated@@21 $generated@@102) $generated@@103 $generated@@104)  (and (=> (< 0 ($generated@@34 $generated@@101)) (or (and ($generated@@86 $generated@@103) ($generated@@86 $generated@@104)) (and (and ($generated@@88 $generated@@103) ($generated@@88 $generated@@104)) (=> (and ($generated@@88 $generated@@103) ($generated@@88 $generated@@104)) (and (= ($generated@@98 $generated@@103) ($generated@@98 $generated@@104)) ($generated@@20 $generated@@99 $generated@@100 ($generated@@33 $generated@@101 ($generated@@22 1)) $generated@@102 ($generated@@74 $generated@@103) ($generated@@74 $generated@@104))))))) (=> (and (or (not (= $generated@@101 ($generated@@22 0))) (not true)) (= ($generated@@34 $generated@@101) 0)) ($generated@@52 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104)))))
 :pattern ( ($generated@@20 $generated@@99 $generated@@100 $generated@@101 ($generated@@21 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@105 ($generated@@91 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@46 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@105 ($generated@@91 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@112 T@U) ) (!  (and (= ($generated@@110 ($generated@@48 $generated@@112)) $generated@@0) (= ($generated@@111 ($generated@@48 $generated@@112)) $generated@@3))
 :pattern ( ($generated@@48 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and ($generated@@113 $generated@@115) (<= ($generated@@34 $generated@@115) ($generated@@34 $generated@@114))) (and (= ($generated@@113 ($generated@@33 $generated@@114 $generated@@115)) ($generated@@113 $generated@@114)) (= ($generated@@34 ($generated@@33 $generated@@114 $generated@@115)) (- ($generated@@34 $generated@@114) ($generated@@34 $generated@@115)))))
 :pattern ( ($generated@@33 $generated@@114 $generated@@115))
)))
(assert  (=> (<= 1 $generated@@65) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 Int) ) (!  (=> (or ($generated@@67 $generated@@116 ($generated@@62 $generated@@47 $generated@@118) ($generated@@60 $generated@@119)) (and (< 1 $generated@@65) (and ($generated@@58 $generated@@47 $generated@@118 ($generated@@48 $generated@@116)) (<= ($generated@@60 0) $generated@@119)))) (and (=> (or (not (= ($generated@@60 $generated@@119) ($generated@@60 0))) (not true)) (and ($generated@@67 $generated@@116 ($generated@@62 $generated@@47 $generated@@118) ($generated@@60 (- $generated@@119 1))) (let (($generated@@120 ($generated@@62 $generated@@47 ($generated@@66 $generated@@116 ($generated@@21 $generated@@117) ($generated@@62 $generated@@47 $generated@@118) ($generated@@60 (- $generated@@119 1))))))
($generated@@72 $generated@@120)))) (= ($generated@@66 $generated@@116 ($generated@@21 $generated@@117) ($generated@@62 $generated@@47 $generated@@118) ($generated@@60 $generated@@119)) (ite (= ($generated@@60 $generated@@119) ($generated@@60 0)) $generated@@118 (let (($generated@@121 ($generated@@62 $generated@@47 ($generated@@66 $generated@@116 ($generated@@21 $generated@@117) ($generated@@62 $generated@@47 $generated@@118) ($generated@@60 (- $generated@@119 1))))))
(ite ($generated@@52 $generated@@116 $generated@@116 ($generated@@21 ($generated@@21 $generated@@73)) $generated@@121 $generated@@39) $generated@@121 ($generated@@74 $generated@@121)))))))
 :weight 3
 :pattern ( ($generated@@66 $generated@@116 ($generated@@21 $generated@@117) ($generated@@62 $generated@@47 $generated@@118) ($generated@@60 $generated@@119)))
))))
(assert (forall (($generated@@122 Int) ) (!  (=> (<= 0 $generated@@122) (and ($generated@@113 ($generated@@22 $generated@@122)) (= ($generated@@34 ($generated@@22 $generated@@122)) $generated@@122)))
 :pattern ( ($generated@@22 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@58 $generated@@47 $generated@@126 ($generated@@48 $generated@@123)) ($generated@@58 $generated@@47 $generated@@127 ($generated@@48 $generated@@124))) (= ($generated@@52 $generated@@123 $generated@@124 ($generated@@21 $generated@@125) $generated@@126 $generated@@127)  (or (and ($generated@@86 $generated@@126) ($generated@@86 $generated@@127)) (and (and ($generated@@88 $generated@@126) ($generated@@88 $generated@@127)) (=> (and ($generated@@88 $generated@@126) ($generated@@88 $generated@@127)) (and (= ($generated@@98 $generated@@126) ($generated@@98 $generated@@127)) ($generated@@52 $generated@@123 $generated@@124 $generated@@125 ($generated@@74 $generated@@126) ($generated@@74 $generated@@127))))))))
 :pattern ( ($generated@@52 $generated@@123 $generated@@124 ($generated@@21 $generated@@125) $generated@@126 $generated@@127))
)))
(assert  (=> (<= 1 $generated@@65) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 Int) ) (!  (=> (and (or ($generated@@67 $generated@@129 $generated@@131 $generated@@132) (and (< 1 $generated@@65) (and (and ($generated@@58 $generated@@47 $generated@@131 ($generated@@48 $generated@@129)) ($generated@@46 $generated@@47 $generated@@131 ($generated@@48 $generated@@129) $generated@@128)) (<= ($generated@@60 0) $generated@@132)))) ($generated@@49 $generated@@128)) ($generated@@46 $generated@@47 ($generated@@66 $generated@@129 $generated@@130 $generated@@131 $generated@@132) ($generated@@48 $generated@@129) $generated@@128))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@66 $generated@@129 $generated@@130 $generated@@131 $generated@@132) ($generated@@48 $generated@@129) $generated@@128))
))))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@72 $generated@@133) (or ($generated@@86 $generated@@133) ($generated@@88 $generated@@133)))
 :pattern ( ($generated@@72 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (or ($generated@@29 $generated@@134 $generated@@135) (= $generated@@134 $generated@@135)) ($generated@@29 $generated@@135 $generated@@134))
 :pattern ( ($generated@@29 $generated@@134 $generated@@135) ($generated@@29 $generated@@135 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@65) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 Int) ) (!  (=> (or ($generated@@67 $generated@@136 $generated@@138 $generated@@139) (and (< 1 $generated@@65) (and ($generated@@58 $generated@@47 $generated@@138 ($generated@@48 $generated@@136)) (<= ($generated@@60 0) $generated@@139)))) (and (=> (or (not (= $generated@@139 ($generated@@60 0))) (not true)) (and ($generated@@67 $generated@@136 $generated@@138 (- $generated@@139 1)) (let (($generated@@140 ($generated@@66 $generated@@136 $generated@@137 $generated@@138 (- $generated@@139 1))))
($generated@@72 $generated@@140)))) (= ($generated@@66 $generated@@136 ($generated@@21 $generated@@137) $generated@@138 $generated@@139) (ite (= $generated@@139 ($generated@@60 0)) $generated@@138 (let (($generated@@141 ($generated@@66 $generated@@136 $generated@@137 $generated@@138 (- $generated@@139 1))))
(ite ($generated@@52 $generated@@136 $generated@@136 ($generated@@21 ($generated@@21 $generated@@73)) $generated@@141 $generated@@39) $generated@@141 ($generated@@74 $generated@@141)))))))
 :pattern ( ($generated@@66 $generated@@136 ($generated@@21 $generated@@137) $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@58 $generated@@47 $generated@@143 ($generated@@48 $generated@@142)) (or ($generated@@86 $generated@@143) ($generated@@88 $generated@@143)))
 :pattern ( ($generated@@88 $generated@@143) ($generated@@58 $generated@@47 $generated@@143 ($generated@@48 $generated@@142)))
 :pattern ( ($generated@@86 $generated@@143) ($generated@@58 $generated@@47 $generated@@143 ($generated@@48 $generated@@142)))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@82 ($generated@@91 $generated@@146 $generated@@144) $generated@@145) ($generated@@58 $generated@@146 $generated@@144 $generated@@145))
 :pattern ( ($generated@@82 ($generated@@91 $generated@@146 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (<= 0 ($generated@@34 $generated@@147))
 :pattern ( ($generated@@34 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@38 ($generated@@81 $generated@@148 $generated@@149)) $generated@@2)
 :pattern ( ($generated@@81 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@98 ($generated@@81 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@81 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@74 ($generated@@81 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@81 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@48 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@48 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@90 $generated@@157 ($generated@@91 $generated@@157 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@91 $generated@@157 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (and (and (and (=> ($generated@@29 $generated@@158 $generated@@159) (or (not (= $generated@@158 $generated@@159)) (not true))) (=> (and ($generated@@113 $generated@@158) (not ($generated@@113 $generated@@159))) ($generated@@29 $generated@@158 $generated@@159))) (=> (and ($generated@@113 $generated@@158) ($generated@@113 $generated@@159)) (= ($generated@@29 $generated@@158 $generated@@159) (< ($generated@@34 $generated@@158) ($generated@@34 $generated@@159))))) (=> (and ($generated@@29 $generated@@158 $generated@@159) ($generated@@113 $generated@@159)) ($generated@@113 $generated@@158)))
 :pattern ( ($generated@@29 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@52 $generated@@160 $generated@@161 ($generated@@21 $generated@@162) $generated@@163 $generated@@164) (forall (($generated@@165 T@U) ) (! ($generated@@20 $generated@@160 $generated@@161 $generated@@165 ($generated@@21 $generated@@162) $generated@@163 $generated@@164)
 :pattern ( ($generated@@20 $generated@@160 $generated@@161 $generated@@165 ($generated@@21 $generated@@162) $generated@@163 $generated@@164))
)))
 :pattern ( ($generated@@52 $generated@@160 $generated@@161 ($generated@@21 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and ($generated@@49 $generated@@168) (and ($generated@@88 $generated@@166) ($generated@@46 $generated@@47 $generated@@166 ($generated@@48 $generated@@167) $generated@@168))) ($generated@@105 ($generated@@98 $generated@@166) $generated@@167 $generated@@168))
 :pattern ( ($generated@@105 ($generated@@98 $generated@@166) $generated@@167 $generated@@168))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@169 $generated@@180 $generated@@181 $generated@@182 ($generated@@176 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@185 $generated@@186) $generated@@183)
 :weight 0
)) (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@169 $generated@@187 $generated@@188 $generated@@189 ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@169 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@169 $generated@@196 $generated@@197 $generated@@198 ($generated@@176 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@169 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (= ($generated@@4 $generated@@170) 4)) (= ($generated@@4 $generated@@171) 5)) (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@173 $generated@@205 $generated@@206 ($generated@@177 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@207) $generated@@209) $generated@@207)
 :weight 0
))) (forall (($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@214 $generated@@215) (= ($generated@@173 $generated@@210 $generated@@211 ($generated@@177 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@212) $generated@@215) ($generated@@173 $generated@@210 $generated@@211 $generated@@213 $generated@@215)))
 :weight 0
))) (= ($generated@@4 $generated@@174) 6)) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@4 ($generated@@175 $generated@@216 $generated@@217)) 7))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@178 ($generated@@175 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@175 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@179 ($generated@@175 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@175 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (= ($generated@@9 ($generated@@169 $generated@@170 $generated@@171 $generated@@5 ($generated@@172 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (or (not (= $generated@@226 $generated@@222)) (not true)) ($generated@@9 ($generated@@90 $generated@@5 ($generated@@173 $generated@@171 $generated@@174 ($generated@@173 $generated@@170 ($generated@@175 $generated@@171 $generated@@174) $generated@@223 $generated@@226) $generated@@224)))) $generated@@225))
 :pattern ( ($generated@@169 $generated@@170 $generated@@171 $generated@@5 ($generated@@172 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Int) ) (! (= ($generated@@66 $generated@@228 ($generated@@21 $generated@@229) $generated@@230 $generated@@231) ($generated@@66 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
 :pattern ( ($generated@@66 $generated@@228 ($generated@@21 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> ($generated@@82 $generated@@233 ($generated@@48 $generated@@232)) (and (= ($generated@@91 $generated@@47 ($generated@@90 $generated@@47 $generated@@233)) $generated@@233) ($generated@@58 $generated@@47 ($generated@@90 $generated@@47 $generated@@233) ($generated@@48 $generated@@232))))
 :pattern ( ($generated@@82 $generated@@233 ($generated@@48 $generated@@232)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> ($generated@@113 $generated@@234) (= $generated@@234 ($generated@@22 ($generated@@34 $generated@@234))))
 :pattern ( ($generated@@34 $generated@@234))
 :pattern ( ($generated@@113 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and ($generated@@49 $generated@@237) (and ($generated@@88 $generated@@235) ($generated@@46 $generated@@47 $generated@@235 ($generated@@48 $generated@@236) $generated@@237))) ($generated@@46 $generated@@47 ($generated@@74 $generated@@235) ($generated@@48 $generated@@236) $generated@@237))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@74 $generated@@235) ($generated@@48 $generated@@236) $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and ($generated@@113 $generated@@239) (<= ($generated@@34 $generated@@239) ($generated@@34 $generated@@238))) (or (and (= $generated@@239 ($generated@@22 0)) (= ($generated@@33 $generated@@238 $generated@@239) $generated@@238)) (and (or (not (= $generated@@239 ($generated@@22 0))) (not true)) ($generated@@29 ($generated@@33 $generated@@238 $generated@@239) $generated@@238))))
 :pattern ( ($generated@@33 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and ($generated@@29 $generated@@242 $generated@@246) ($generated@@20 $generated@@240 $generated@@241 $generated@@246 ($generated@@21 $generated@@243) $generated@@244 $generated@@245)) ($generated@@20 $generated@@240 $generated@@241 $generated@@242 ($generated@@21 $generated@@243) $generated@@244 $generated@@245))
 :pattern ( ($generated@@20 $generated@@240 $generated@@241 $generated@@242 ($generated@@21 $generated@@243) $generated@@244 $generated@@245) ($generated@@20 $generated@@240 $generated@@241 $generated@@246 ($generated@@21 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (= ($generated@@52 $generated@@247 $generated@@248 ($generated@@21 $generated@@249) $generated@@250 $generated@@251) ($generated@@52 $generated@@247 $generated@@248 $generated@@249 $generated@@250 $generated@@251))
 :pattern ( ($generated@@52 $generated@@247 $generated@@248 ($generated@@21 $generated@@249) $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@91 $generated@@6 ($generated@@10 ($generated@@60 $generated@@252))) ($generated@@62 $generated@@174 ($generated@@91 $generated@@6 ($generated@@10 $generated@@252))))
 :pattern ( ($generated@@91 $generated@@6 ($generated@@10 ($generated@@60 $generated@@252))))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@T) ) (! (= ($generated@@91 $generated@@254 ($generated@@62 $generated@@254 $generated@@253)) ($generated@@62 $generated@@174 ($generated@@91 $generated@@254 $generated@@253)))
 :pattern ( ($generated@@91 $generated@@254 ($generated@@62 $generated@@254 $generated@@253)))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (forall (($generated@@260 Int) ) (!  (=> (<= 0 $generated@@260) ($generated@@20 $generated@@255 $generated@@256 ($generated@@22 $generated@@260) ($generated@@21 $generated@@257) $generated@@258 $generated@@259))
 :pattern ( ($generated@@20 $generated@@255 $generated@@256 ($generated@@22 $generated@@260) ($generated@@21 $generated@@257) $generated@@258 $generated@@259))
)) ($generated@@52 $generated@@255 $generated@@256 ($generated@@21 $generated@@257) $generated@@258 $generated@@259))
 :pattern ( ($generated@@52 $generated@@255 $generated@@256 ($generated@@21 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> ($generated@@49 $generated@@264) (= ($generated@@46 $generated@@47 ($generated@@81 $generated@@262 $generated@@263) ($generated@@48 $generated@@261) $generated@@264)  (and ($generated@@105 $generated@@262 $generated@@261 $generated@@264) ($generated@@46 $generated@@47 $generated@@263 ($generated@@48 $generated@@261) $generated@@264))))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@81 $generated@@262 $generated@@263) ($generated@@48 $generated@@261) $generated@@264))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@273  (=> (and (= $generated@@265 ($generated@@172 $generated@@266 $generated@@267 $generated false)) ($generated@@72 $generated@@268)) (=> (and (and (and ($generated@@49 $generated@@269) ($generated@@270 $generated@@269)) (= $generated@@267 $generated@@269)) (and (forall (($generated@@274 T@U) ($generated@@275 Int) ) (!  (=> (and (and (and ($generated@@58 $generated@@47 $generated@@274 ($generated@@48 $generated@@271)) (<= ($generated@@60 0) $generated@@275)) (and ($generated@@88 $generated@@274) ($generated@@88 ($generated@@66 $generated@@271 ($generated@@21 $generated@@73) $generated@@274 $generated@@275)))) (and (<= 0 $generated@@275) (< $generated@@275 $generated@@272))) ($generated@@52 $generated@@271 $generated@@271 ($generated@@21 ($generated@@21 $generated@@73)) ($generated@@74 ($generated@@66 $generated@@271 ($generated@@21 $generated@@73) $generated@@274 $generated@@275)) ($generated@@66 $generated@@271 ($generated@@21 $generated@@73) ($generated@@74 $generated@@274) $generated@@275)))
 :pattern ( ($generated@@66 $generated@@271 ($generated@@21 $generated@@73) ($generated@@74 $generated@@274) $generated@@275))
 :pattern ( ($generated@@74 ($generated@@66 $generated@@271 ($generated@@21 $generated@@73) $generated@@274 $generated@@275)))
 :pattern ( ($generated@@88 ($generated@@66 $generated@@271 ($generated@@21 $generated@@73) $generated@@274 $generated@@275)))
)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@52 $generated@@271 $generated@@271 ($generated@@21 ($generated@@21 $generated@@73)) ($generated@@74 ($generated@@66 $generated@@271 ($generated@@21 ($generated@@21 $generated@@73)) $generated@@268 $generated@@272)) ($generated@@66 $generated@@271 ($generated@@21 ($generated@@21 $generated@@73)) ($generated@@74 $generated@@268) $generated@@272))))))
(let (($generated@@276  (=> (and ($generated@@49 $generated@@267) ($generated@@270 $generated@@267)) (=> (and (and (and (and ($generated@@58 $generated@@47 $generated@@268 ($generated@@48 $generated@@271)) ($generated@@46 $generated@@47 $generated@@268 ($generated@@48 $generated@@271) $generated@@267)) ($generated@@72 $generated@@268)) (<= ($generated@@60 0) $generated@@272)) (and (and (= 2 $generated@@65) ($generated@@88 $generated@@268)) (and ($generated@@88 ($generated@@66 $generated@@271 ($generated@@21 ($generated@@21 $generated@@73)) $generated@@268 $generated@@272)) (= (ControlFlow 0 3) 2)))) $generated@@273))))
$generated@@276)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
