(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U T@U T@U) Bool)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@63 (Int) T@U)
(declare-fun $generated@@64 (T@U) Int)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@71 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@77 () Bool)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) Bool)
(declare-fun $generated@@103 (T@U) Bool)
(declare-fun $generated@@106 (T@T T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@129 (T@U) Bool)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@207 (T@U) Int)
(declare-fun $generated@@209 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@210 () T@T)
(declare-fun $generated@@211 () T@T)
(declare-fun $generated@@212 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@213 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@214 (T@T T@T) T@T)
(declare-fun $generated@@215 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27) ($generated@@23 $generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert (= ($generated@@7 $generated@@31) 3))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (or ($generated@@29 $generated@@35 $generated@@37) (and (< 1 $generated@@28) ($generated@@30 $generated@@31 $generated@@37 ($generated@@32 $generated@@35)))) (and (=> (not ($generated@@33 $generated@@37)) (let (($generated@@38 ($generated@@34 $generated@@37)))
($generated@@29 $generated@@35 $generated@@38))) (= ($generated@@23 $generated@@35 ($generated@@24 $generated@@36) $generated@@37) (ite ($generated@@33 $generated@@37) false (let (($generated@@39 ($generated@@34 $generated@@37)))
($generated@@23 $generated@@35 $generated@@36 $generated@@39))))))
 :pattern ( ($generated@@23 $generated@@35 ($generated@@24 $generated@@36) $generated@@37))
))))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (and ($generated@@40 $generated@@41 $generated@@42) ($generated@@40 $generated@@42 $generated@@43)) ($generated@@40 $generated@@41 $generated@@43))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42) ($generated@@40 $generated@@42 $generated@@43))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42) ($generated@@40 $generated@@41 $generated@@43))
)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (or ($generated@@45 $generated@@52) (and (< 2 $generated@@28) ($generated@@30 $generated@@31 $generated@@52 ($generated@@32 $generated@@46)))) (and (=> (not ($generated@@33 $generated@@52)) (let (($generated@@53 ($generated@@34 $generated@@52)))
(let (($generated@@54 ($generated@@47 $generated@@31 ($generated@@48 $generated@@52))))
 (and (and ($generated@@49 $generated@@54) ($generated@@45 ($generated@@50 $generated@@54))) (=> (not ($generated@@44 $generated@@51 ($generated@@50 $generated@@54))) ($generated@@45 $generated@@53)))))) (= ($generated@@44 ($generated@@24 $generated@@51) $generated@@52) (ite ($generated@@33 $generated@@52) false (let (($generated@@55 ($generated@@34 $generated@@52)))
(let (($generated@@56 ($generated@@47 $generated@@31 ($generated@@48 $generated@@52))))
 (or ($generated@@44 $generated@@51 ($generated@@50 $generated@@56)) ($generated@@44 $generated@@51 $generated@@55))))))))
 :pattern ( ($generated@@44 ($generated@@24 $generated@@51) $generated@@52))
))))
(assert  (=> (<= 3 $generated@@28) (forall (($generated@@61 T@U) ) (!  (=> (or ($generated@@59 ($generated@@58 $generated@@31 $generated@@61)) (and (< 3 $generated@@28) ($generated@@30 $generated@@31 $generated@@61 $generated@@46))) (and (and ($generated@@49 ($generated@@58 $generated@@31 $generated@@61)) ($generated@@45 ($generated@@58 $generated@@31 ($generated@@50 ($generated@@58 $generated@@31 $generated@@61))))) (= ($generated@@57 ($generated@@58 $generated@@31 $generated@@61))  (not ($generated@@12 ($generated@@58 $generated@@8 ($generated@@11 ($generated@@44 ($generated@@24 $generated@@60) ($generated@@58 $generated@@31 ($generated@@50 ($generated@@58 $generated@@31 $generated@@61)))))))))))
 :weight 3
 :pattern ( ($generated@@57 ($generated@@58 $generated@@31 $generated@@61)))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 Int) ($generated@@67 Int) ) (!  (=> (and (and (<= 0 $generated@@66) (<= 0 $generated@@67)) (<= (+ $generated@@66 $generated@@67) ($generated@@64 $generated@@65))) (= ($generated@@62 ($generated@@62 $generated@@65 ($generated@@63 $generated@@66)) ($generated@@63 $generated@@67)) ($generated@@62 $generated@@65 ($generated@@63 (+ $generated@@66 $generated@@67)))))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@65 ($generated@@63 $generated@@66)) ($generated@@63 $generated@@67)))
)))
(assert (= ($generated@@68 $generated@@69) $generated@@2))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@70 $generated@@46) ($generated@@49 $generated@@70))
 :pattern ( ($generated@@49 $generated@@70) ($generated@@30 $generated@@31 $generated@@70 $generated@@46))
)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (and ($generated@@30 $generated@@31 $generated@@74 ($generated@@32 $generated@@72)) ($generated@@23 $generated@@72 ($generated@@24 $generated@@73) $generated@@74)) (forall (($generated@@75 T@U) ) (! ($generated@@71 $generated@@72 ($generated@@24 $generated@@73) $generated@@75 $generated@@74)
 :pattern ( ($generated@@71 $generated@@72 ($generated@@24 $generated@@73) $generated@@75 $generated@@74))
)))
 :pattern ( ($generated@@23 $generated@@72 ($generated@@24 $generated@@73) $generated@@74))
))))
(assert (forall (($generated@@76 T@U) ) (! ($generated@@30 $generated@@31 $generated@@69 ($generated@@32 $generated@@76))
 :pattern ( ($generated@@30 $generated@@31 $generated@@69 ($generated@@32 $generated@@76)))
)))
(assert  (=> (<= 3 $generated@@28) (=> (or $generated@@77 (< 3 $generated@@28)) ($generated@@30 $generated@@31 $generated@@78 $generated@@46))))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and ($generated@@30 $generated@@31 $generated@@81 ($generated@@32 $generated@@79)) (forall (($generated@@82 T@U) ) (! ($generated@@71 $generated@@79 ($generated@@24 $generated@@80) $generated@@82 $generated@@81)
 :pattern ( ($generated@@71 $generated@@79 ($generated@@24 $generated@@80) $generated@@82 $generated@@81))
))) ($generated@@23 $generated@@79 ($generated@@24 $generated@@80) $generated@@81))
 :pattern ( ($generated@@23 $generated@@79 ($generated@@24 $generated@@80) $generated@@81))
))))
(assert (forall (($generated@@84 Int) ) (! (= ($generated@@83 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@58 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@58 $generated@@86 $generated@@85))
)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@87 $generated@@88 $generated@@90 $generated@@91) (and (< 2 $generated@@28) ($generated@@30 $generated@@31 $generated@@91 ($generated@@32 $generated@@88)))) (and (and (=> (< 0 ($generated@@64 $generated@@90)) (=> (not ($generated@@33 $generated@@91)) (let (($generated@@92 ($generated@@34 $generated@@91)))
($generated@@87 $generated@@88 ($generated@@62 $generated@@90 ($generated@@63 1)) $generated@@92)))) (=> (=> (< 0 ($generated@@64 $generated@@90)) (ite ($generated@@33 $generated@@91) false (let (($generated@@93 ($generated@@34 $generated@@91)))
($generated@@71 $generated@@88 $generated@@89 ($generated@@62 $generated@@90 ($generated@@63 1)) $generated@@93)))) (=> (= ($generated@@83 0) ($generated@@64 $generated@@90)) (forall (($generated@@94 T@U) ) (!  (=> ($generated@@40 $generated@@94 $generated@@90) ($generated@@87 $generated@@88 $generated@@94 $generated@@91))
 :pattern ( ($generated@@71 $generated@@88 $generated@@89 $generated@@94 $generated@@91))
))))) (= ($generated@@71 $generated@@88 ($generated@@24 $generated@@89) $generated@@90 $generated@@91)  (and (=> (< 0 ($generated@@64 $generated@@90)) (ite ($generated@@33 $generated@@91) false (let (($generated@@95 ($generated@@34 $generated@@91)))
($generated@@71 $generated@@88 $generated@@89 ($generated@@62 $generated@@90 ($generated@@63 1)) $generated@@95)))) (=> (= ($generated@@83 0) ($generated@@64 $generated@@90)) (forall (($generated@@96 T@U) ) (!  (=> ($generated@@40 $generated@@96 $generated@@90) ($generated@@71 $generated@@88 $generated@@89 $generated@@96 $generated@@91))
 :pattern ( ($generated@@71 $generated@@88 $generated@@89 $generated@@96 $generated@@91))
)))))))
 :pattern ( ($generated@@71 $generated@@88 ($generated@@24 $generated@@89) $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@97 $generated@@100 $generated@@101) ($generated@@32 $generated@@99))  (and ($generated@@98 $generated@@100 $generated@@99) ($generated@@30 $generated@@31 $generated@@101 ($generated@@32 $generated@@99))))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@97 $generated@@100 $generated@@101) ($generated@@32 $generated@@99)))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@33 $generated@@102) (= ($generated@@68 $generated@@102) $generated@@2))
 :pattern ( ($generated@@33 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 $generated@@104) (= ($generated@@68 $generated@@104) $generated@@3))
 :pattern ( ($generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@49 $generated@@105) (= ($generated@@68 $generated@@105) $generated@@4))
 :pattern ( ($generated@@49 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@106 $generated@@108 ($generated@@47 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@47 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@103 $generated@@109) (exists (($generated@@110 T@U) ($generated@@111 T@U) ) (= $generated@@109 ($generated@@97 $generated@@110 $generated@@111))))
 :pattern ( ($generated@@103 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@33 $generated@@112) (= $generated@@112 $generated@@69))
 :pattern ( ($generated@@33 $generated@@112))
)))
(assert  (=> (<= 3 $generated@@28) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and ($generated@@30 $generated@@31 $generated@@115 ($generated@@32 $generated@@46)) (= $generated@@116 ($generated@@63 0))) ($generated@@113 $generated@@114 $generated@@116 $generated@@115))
 :pattern ( ($generated@@113 $generated@@114 $generated@@116 $generated@@115))
))))
(assert  (=> (<= 3 $generated@@28) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@30 $generated@@31 $generated@@118 ($generated@@32 $generated@@46)) (forall (($generated@@119 T@U) ) (! ($generated@@113 ($generated@@24 $generated@@117) $generated@@119 $generated@@118)
 :pattern ( ($generated@@113 ($generated@@24 $generated@@117) $generated@@119 $generated@@118))
))) ($generated@@44 ($generated@@24 $generated@@117) $generated@@118))
 :pattern ( ($generated@@44 ($generated@@24 $generated@@117) $generated@@118))
))))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@49 $generated@@121) (exists (($generated@@122 T@U) ) (= $generated@@121 ($generated@@120 $generated@@122))))
 :pattern ( ($generated@@49 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@113 ($generated@@24 $generated@@123) $generated@@124 $generated@@125) ($generated@@113 $generated@@123 $generated@@124 $generated@@125))
 :pattern ( ($generated@@113 ($generated@@24 $generated@@123) $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@128 T@U) ) (!  (and (= ($generated@@126 ($generated@@32 $generated@@128)) $generated@@0) (= ($generated@@127 ($generated@@32 $generated@@128)) $generated@@5))
 :pattern ( ($generated@@32 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and ($generated@@129 $generated@@131) (<= ($generated@@64 $generated@@131) ($generated@@64 $generated@@130))) (and (= ($generated@@129 ($generated@@62 $generated@@130 $generated@@131)) ($generated@@129 $generated@@130)) (= ($generated@@64 ($generated@@62 $generated@@130 $generated@@131)) (- ($generated@@64 $generated@@130) ($generated@@64 $generated@@131)))))
 :pattern ( ($generated@@62 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 Int) ) (!  (=> (<= 0 $generated@@132) (and ($generated@@129 ($generated@@63 $generated@@132)) (= ($generated@@64 ($generated@@63 $generated@@132)) $generated@@132)))
 :pattern ( ($generated@@63 $generated@@132))
)))
(assert  (=> (<= 3 $generated@@28) (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and ($generated@@30 $generated@@31 $generated@@134 ($generated@@32 $generated@@46)) ($generated@@44 ($generated@@24 $generated@@133) $generated@@134)) (forall (($generated@@135 T@U) ) (! ($generated@@113 ($generated@@24 $generated@@133) $generated@@135 $generated@@134)
 :pattern ( ($generated@@113 ($generated@@24 $generated@@133) $generated@@135 $generated@@134))
)))
 :pattern ( ($generated@@44 ($generated@@24 $generated@@133) $generated@@134))
))))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@98 $generated@@136 $generated@@46) (and (= ($generated@@106 $generated@@31 ($generated@@47 $generated@@31 $generated@@136)) $generated@@136) ($generated@@30 $generated@@31 ($generated@@47 $generated@@31 $generated@@136) $generated@@46)))
 :pattern ( ($generated@@98 $generated@@136 $generated@@46))
)))
(assert  (=> (<= 3 $generated@@28) (forall (($generated@@137 T@U) ) (!  (=> (or ($generated@@59 $generated@@137) (and (< 3 $generated@@28) ($generated@@30 $generated@@31 $generated@@137 $generated@@46))) (and (and ($generated@@49 $generated@@137) ($generated@@45 ($generated@@50 $generated@@137))) (= ($generated@@57 $generated@@137)  (not ($generated@@44 ($generated@@24 $generated@@60) ($generated@@50 $generated@@137))))))
 :pattern ( ($generated@@57 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (or ($generated@@40 $generated@@138 $generated@@139) (= $generated@@138 $generated@@139)) ($generated@@40 $generated@@139 $generated@@138))
 :pattern ( ($generated@@40 $generated@@138 $generated@@139) ($generated@@40 $generated@@139 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@120 $generated@@140) $generated@@46) ($generated@@30 $generated@@31 $generated@@140 ($generated@@32 $generated@@46)))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@120 $generated@@140) $generated@@46))
)))
(assert (= ($generated@@7 $generated@@141) 4))
(assert  (=> (<= 3 $generated@@28) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (or ($generated@@142 ($generated@@58 $generated@@141 $generated@@144) ($generated@@58 $generated@@31 $generated@@145)) (and (< 3 $generated@@28) ($generated@@30 $generated@@31 $generated@@145 ($generated@@32 $generated@@46)))) (and (and (=> (< 0 ($generated@@64 $generated@@144)) (=> (not ($generated@@12 ($generated@@58 $generated@@8 ($generated@@11 ($generated@@33 ($generated@@58 $generated@@31 $generated@@145)))))) (let (($generated@@146 ($generated@@58 $generated@@31 ($generated@@34 ($generated@@58 $generated@@31 $generated@@145)))))
(let (($generated@@147 ($generated@@58 $generated@@31 ($generated@@47 $generated@@31 ($generated@@48 ($generated@@58 $generated@@31 $generated@@145))))))
 (and (and ($generated@@49 $generated@@147) ($generated@@142 ($generated@@62 $generated@@144 ($generated@@63 1)) ($generated@@50 $generated@@147))) (=> (not ($generated@@113 ($generated@@24 $generated@@143) ($generated@@62 $generated@@144 ($generated@@63 1)) ($generated@@50 $generated@@147))) ($generated@@142 ($generated@@62 $generated@@144 ($generated@@63 1)) $generated@@146))))))) (=> (=> (< 0 ($generated@@64 $generated@@144)) (ite ($generated@@33 ($generated@@58 $generated@@31 $generated@@145)) false (let (($generated@@148 ($generated@@58 $generated@@31 ($generated@@34 ($generated@@58 $generated@@31 $generated@@145)))))
(let (($generated@@149 ($generated@@58 $generated@@31 ($generated@@47 $generated@@31 ($generated@@48 ($generated@@58 $generated@@31 $generated@@145))))))
 (or ($generated@@113 ($generated@@24 $generated@@143) ($generated@@62 $generated@@144 ($generated@@63 1)) ($generated@@58 $generated@@31 ($generated@@50 $generated@@149))) ($generated@@113 ($generated@@24 $generated@@143) ($generated@@62 $generated@@144 ($generated@@63 1)) $generated@@148)))))) (=> (= ($generated@@83 0) ($generated@@64 $generated@@144)) (forall (($generated@@150 T@U) ) (!  (=> ($generated@@40 $generated@@150 $generated@@144) ($generated@@142 $generated@@150 $generated@@145))
 :pattern ( ($generated@@113 ($generated@@24 $generated@@143) $generated@@150 $generated@@145))
))))) (= ($generated@@113 ($generated@@24 $generated@@143) ($generated@@58 $generated@@141 $generated@@144) ($generated@@58 $generated@@31 $generated@@145))  (and (=> (< 0 ($generated@@64 $generated@@144)) (ite ($generated@@33 ($generated@@58 $generated@@31 $generated@@145)) false (let (($generated@@151 ($generated@@58 $generated@@31 ($generated@@34 ($generated@@58 $generated@@31 $generated@@145)))))
(let (($generated@@152 ($generated@@58 $generated@@31 ($generated@@47 $generated@@31 ($generated@@48 ($generated@@58 $generated@@31 $generated@@145))))))
 (or ($generated@@113 ($generated@@24 $generated@@143) ($generated@@62 $generated@@144 ($generated@@63 1)) ($generated@@58 $generated@@31 ($generated@@50 $generated@@152))) ($generated@@113 ($generated@@24 $generated@@143) ($generated@@62 $generated@@144 ($generated@@63 1)) $generated@@151)))))) (=> (= ($generated@@83 0) ($generated@@64 $generated@@144)) (forall (($generated@@153 T@U) ) (!  (=> ($generated@@40 $generated@@153 $generated@@144) ($generated@@113 ($generated@@24 $generated@@143) $generated@@153 $generated@@145))
 :pattern ( ($generated@@113 ($generated@@24 $generated@@143) $generated@@153 $generated@@145))
)))))))
 :weight 3
 :pattern ( ($generated@@113 ($generated@@24 $generated@@143) ($generated@@58 $generated@@141 $generated@@144) ($generated@@58 $generated@@31 $generated@@145)))
))))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@156 T@U) ) (!  (=> (or $generated@@155 (< 2 $generated@@28)) (and $generated@@155 (= ($generated@@154 ($generated@@24 $generated@@156)) ($generated@@58 $generated@@31 ($generated@@97 ($generated@@106 $generated@@31 ($generated@@58 $generated@@31 ($generated@@120 ($generated@@58 $generated@@31 $generated@@69)))) ($generated@@58 $generated@@31 ($generated@@154 $generated@@156)))))))
 :pattern ( ($generated@@154 ($generated@@24 $generated@@156)))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@158 ($generated@@32 $generated@@157)) (or ($generated@@33 $generated@@158) ($generated@@103 $generated@@158)))
 :pattern ( ($generated@@103 $generated@@158) ($generated@@30 $generated@@31 $generated@@158 ($generated@@32 $generated@@157)))
 :pattern ( ($generated@@33 $generated@@158) ($generated@@30 $generated@@31 $generated@@158 ($generated@@32 $generated@@157)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@44 ($generated@@24 $generated@@159) $generated@@160) ($generated@@44 $generated@@159 $generated@@160))
 :pattern ( ($generated@@44 ($generated@@24 $generated@@159) $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@98 ($generated@@106 $generated@@163 $generated@@161) $generated@@162) ($generated@@30 $generated@@163 $generated@@161 $generated@@162))
 :pattern ( ($generated@@98 ($generated@@106 $generated@@163 $generated@@161) $generated@@162))
)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@30 $generated@@31 $generated@@166 ($generated@@32 $generated@@164)) (= $generated@@167 ($generated@@63 0))) ($generated@@71 $generated@@164 $generated@@165 $generated@@167 $generated@@166))
 :pattern ( ($generated@@71 $generated@@164 $generated@@165 $generated@@167 $generated@@166))
))))
(assert (forall (($generated@@168 T@U) ) (! (<= 0 ($generated@@64 $generated@@168))
 :pattern ( ($generated@@64 $generated@@168))
)))
(assert  (=> (<= 3 $generated@@28) (=> (or $generated@@77 (< 3 $generated@@28)) (and $generated@@155 (= $generated@@78 ($generated@@58 $generated@@31 ($generated@@120 ($generated@@58 $generated@@31 ($generated@@154 ($generated@@24 $generated@@60))))))))))
(assert  (=> (<= 3 $generated@@28) (=> (or $generated@@77 (< 3 $generated@@28)) (and $generated@@155 (= $generated@@78 ($generated@@58 $generated@@31 ($generated@@120 ($generated@@58 $generated@@31 ($generated@@154 ($generated@@24 $generated@@60))))))))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@68 ($generated@@97 $generated@@169 $generated@@170)) $generated@@3)
 :pattern ( ($generated@@97 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@48 ($generated@@97 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@97 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@34 ($generated@@97 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@97 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@175 ($generated@@32 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@32 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@68 ($generated@@120 $generated@@177)) $generated@@4)
 :pattern ( ($generated@@120 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@50 ($generated@@120 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@120 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@47 $generated@@180 ($generated@@106 $generated@@180 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@106 $generated@@180 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (and (and (and (=> ($generated@@40 $generated@@181 $generated@@182) (or (not (= $generated@@181 $generated@@182)) (not true))) (=> (and ($generated@@129 $generated@@181) (not ($generated@@129 $generated@@182))) ($generated@@40 $generated@@181 $generated@@182))) (=> (and ($generated@@129 $generated@@181) ($generated@@129 $generated@@182)) (= ($generated@@40 $generated@@181 $generated@@182) (< ($generated@@64 $generated@@181) ($generated@@64 $generated@@182))))) (=> (and ($generated@@40 $generated@@181 $generated@@182) ($generated@@129 $generated@@182)) ($generated@@129 $generated@@181)))
 :pattern ( ($generated@@40 $generated@@181 $generated@@182))
)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (or ($generated@@87 $generated@@183 ($generated@@58 $generated@@141 $generated@@185) $generated@@186) (and (< 2 $generated@@28) ($generated@@30 $generated@@31 $generated@@186 ($generated@@32 $generated@@183)))) (and (and (=> (< 0 ($generated@@64 $generated@@185)) (=> (not ($generated@@33 $generated@@186)) (let (($generated@@187 ($generated@@34 $generated@@186)))
($generated@@87 $generated@@183 ($generated@@62 $generated@@185 ($generated@@63 1)) $generated@@187)))) (=> (=> (< 0 ($generated@@64 $generated@@185)) (ite ($generated@@33 $generated@@186) false (let (($generated@@188 ($generated@@34 $generated@@186)))
($generated@@71 $generated@@183 ($generated@@24 $generated@@184) ($generated@@62 $generated@@185 ($generated@@63 1)) $generated@@188)))) (=> (= ($generated@@83 0) ($generated@@64 $generated@@185)) (forall (($generated@@189 T@U) ) (!  (=> ($generated@@40 $generated@@189 $generated@@185) ($generated@@87 $generated@@183 $generated@@189 $generated@@186))
 :pattern ( ($generated@@71 $generated@@183 ($generated@@24 $generated@@184) $generated@@189 $generated@@186))
))))) (= ($generated@@71 $generated@@183 ($generated@@24 $generated@@184) ($generated@@58 $generated@@141 $generated@@185) $generated@@186)  (and (=> (< 0 ($generated@@64 $generated@@185)) (ite ($generated@@33 $generated@@186) false (let (($generated@@190 ($generated@@34 $generated@@186)))
($generated@@71 $generated@@183 ($generated@@24 $generated@@184) ($generated@@62 $generated@@185 ($generated@@63 1)) $generated@@190)))) (=> (= ($generated@@83 0) ($generated@@64 $generated@@185)) (forall (($generated@@191 T@U) ) (!  (=> ($generated@@40 $generated@@191 $generated@@185) ($generated@@71 $generated@@183 ($generated@@24 $generated@@184) $generated@@191 $generated@@186))
 :pattern ( ($generated@@71 $generated@@183 ($generated@@24 $generated@@184) $generated@@191 $generated@@186))
)))))))
 :weight 3
 :pattern ( ($generated@@71 $generated@@183 ($generated@@24 $generated@@184) ($generated@@58 $generated@@141 $generated@@185) $generated@@186))
))))
(assert  (=> (<= 3 $generated@@28) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (or ($generated@@142 ($generated@@58 $generated@@141 $generated@@193) $generated@@194) (and (< 3 $generated@@28) ($generated@@30 $generated@@31 $generated@@194 ($generated@@32 $generated@@46)))) (and (and (=> (< 0 ($generated@@64 $generated@@193)) (=> (not ($generated@@33 $generated@@194)) (let (($generated@@195 ($generated@@34 $generated@@194)))
(let (($generated@@196 ($generated@@47 $generated@@31 ($generated@@48 $generated@@194))))
 (and (and ($generated@@49 $generated@@196) ($generated@@142 ($generated@@62 $generated@@193 ($generated@@63 1)) ($generated@@50 $generated@@196))) (=> (not ($generated@@113 ($generated@@24 $generated@@192) ($generated@@62 $generated@@193 ($generated@@63 1)) ($generated@@50 $generated@@196))) ($generated@@142 ($generated@@62 $generated@@193 ($generated@@63 1)) $generated@@195))))))) (=> (=> (< 0 ($generated@@64 $generated@@193)) (ite ($generated@@33 $generated@@194) false (let (($generated@@197 ($generated@@34 $generated@@194)))
(let (($generated@@198 ($generated@@47 $generated@@31 ($generated@@48 $generated@@194))))
 (or ($generated@@113 ($generated@@24 $generated@@192) ($generated@@62 $generated@@193 ($generated@@63 1)) ($generated@@50 $generated@@198)) ($generated@@113 ($generated@@24 $generated@@192) ($generated@@62 $generated@@193 ($generated@@63 1)) $generated@@197)))))) (=> (= ($generated@@83 0) ($generated@@64 $generated@@193)) (forall (($generated@@199 T@U) ) (!  (=> ($generated@@40 $generated@@199 $generated@@193) ($generated@@142 $generated@@199 $generated@@194))
 :pattern ( ($generated@@113 ($generated@@24 $generated@@192) $generated@@199 $generated@@194))
))))) (= ($generated@@113 ($generated@@24 $generated@@192) ($generated@@58 $generated@@141 $generated@@193) $generated@@194)  (and (=> (< 0 ($generated@@64 $generated@@193)) (ite ($generated@@33 $generated@@194) false (let (($generated@@200 ($generated@@34 $generated@@194)))
(let (($generated@@201 ($generated@@47 $generated@@31 ($generated@@48 $generated@@194))))
 (or ($generated@@113 ($generated@@24 $generated@@192) ($generated@@62 $generated@@193 ($generated@@63 1)) ($generated@@50 $generated@@201)) ($generated@@113 ($generated@@24 $generated@@192) ($generated@@62 $generated@@193 ($generated@@63 1)) $generated@@200)))))) (=> (= ($generated@@83 0) ($generated@@64 $generated@@193)) (forall (($generated@@202 T@U) ) (!  (=> ($generated@@40 $generated@@202 $generated@@193) ($generated@@113 ($generated@@24 $generated@@192) $generated@@202 $generated@@194))
 :pattern ( ($generated@@113 ($generated@@24 $generated@@192) $generated@@202 $generated@@194))
)))))))
 :weight 3
 :pattern ( ($generated@@113 ($generated@@24 $generated@@192) ($generated@@58 $generated@@141 $generated@@193) $generated@@194))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@71 $generated@@203 ($generated@@24 $generated@@204) $generated@@205 $generated@@206) ($generated@@71 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
 :pattern ( ($generated@@71 $generated@@203 ($generated@@24 $generated@@204) $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (< ($generated@@207 $generated@@208) ($generated@@207 ($generated@@120 $generated@@208)))
 :pattern ( ($generated@@120 $generated@@208))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ($generated@@221 T@T) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@209 $generated@@219 $generated@@220 $generated@@221 ($generated@@215 $generated@@219 $generated@@220 $generated@@221 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@224 $generated@@225) $generated@@222)
 :weight 0
)) (and (forall (($generated@@226 T@T) ($generated@@227 T@T) ($generated@@228 T@T) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@209 $generated@@226 $generated@@227 $generated@@228 ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@209 $generated@@226 $generated@@227 $generated@@228 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)) (forall (($generated@@235 T@T) ($generated@@236 T@T) ($generated@@237 T@T) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@209 $generated@@235 $generated@@236 $generated@@237 ($generated@@215 $generated@@235 $generated@@236 $generated@@237 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@209 $generated@@235 $generated@@236 $generated@@237 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
)))) (= ($generated@@7 $generated@@210) 5)) (= ($generated@@7 $generated@@211) 6)) (forall (($generated@@244 T@T) ($generated@@245 T@T) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (= ($generated@@213 $generated@@244 $generated@@245 ($generated@@216 $generated@@244 $generated@@245 $generated@@247 $generated@@248 $generated@@246) $generated@@248) $generated@@246)
 :weight 0
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or (= $generated@@253 $generated@@254) (= ($generated@@213 $generated@@249 $generated@@250 ($generated@@216 $generated@@249 $generated@@250 $generated@@252 $generated@@253 $generated@@251) $generated@@254) ($generated@@213 $generated@@249 $generated@@250 $generated@@252 $generated@@254)))
 :weight 0
))) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (= ($generated@@7 ($generated@@214 $generated@@255 $generated@@256)) 7))) (forall (($generated@@257 T@T) ($generated@@258 T@T) ) (! (= ($generated@@217 ($generated@@214 $generated@@257 $generated@@258)) $generated@@257)
 :pattern ( ($generated@@214 $generated@@257 $generated@@258))
))) (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (! (= ($generated@@218 ($generated@@214 $generated@@259 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@214 $generated@@259 $generated@@260))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 Bool) ($generated@@265 T@U) ($generated@@266 T@U) ) (! (= ($generated@@12 ($generated@@209 $generated@@210 $generated@@211 $generated@@8 ($generated@@212 $generated@@261 $generated@@262 $generated@@263 $generated@@264) $generated@@265 $generated@@266))  (=> (and (or (not (= $generated@@265 $generated@@261)) (not true)) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@213 $generated@@211 $generated@@141 ($generated@@213 $generated@@210 ($generated@@214 $generated@@211 $generated@@141) $generated@@262 $generated@@265) $generated@@263)))) $generated@@264))
 :pattern ( ($generated@@209 $generated@@210 $generated@@211 $generated@@8 ($generated@@212 $generated@@261 $generated@@262 $generated@@263 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (! (= ($generated@@154 ($generated@@24 $generated@@267)) ($generated@@154 $generated@@267))
 :pattern ( ($generated@@154 ($generated@@24 $generated@@267)))
)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (or ($generated@@87 $generated@@268 ($generated@@58 $generated@@141 $generated@@270) ($generated@@58 $generated@@31 $generated@@271)) (and (< 2 $generated@@28) ($generated@@30 $generated@@31 $generated@@271 ($generated@@32 $generated@@268)))) (and (and (=> (< 0 ($generated@@64 $generated@@270)) (=> (not ($generated@@12 ($generated@@58 $generated@@8 ($generated@@11 ($generated@@33 ($generated@@58 $generated@@31 $generated@@271)))))) (let (($generated@@272 ($generated@@58 $generated@@31 ($generated@@34 ($generated@@58 $generated@@31 $generated@@271)))))
($generated@@87 $generated@@268 ($generated@@62 $generated@@270 ($generated@@63 1)) $generated@@272)))) (=> (=> (< 0 ($generated@@64 $generated@@270)) (ite ($generated@@33 ($generated@@58 $generated@@31 $generated@@271)) false (let (($generated@@273 ($generated@@58 $generated@@31 ($generated@@34 ($generated@@58 $generated@@31 $generated@@271)))))
($generated@@71 $generated@@268 ($generated@@24 $generated@@269) ($generated@@62 $generated@@270 ($generated@@63 1)) $generated@@273)))) (=> (= ($generated@@83 0) ($generated@@64 $generated@@270)) (forall (($generated@@274 T@U) ) (!  (=> ($generated@@40 $generated@@274 $generated@@270) ($generated@@87 $generated@@268 $generated@@274 $generated@@271))
 :pattern ( ($generated@@71 $generated@@268 ($generated@@24 $generated@@269) $generated@@274 $generated@@271))
))))) (= ($generated@@71 $generated@@268 ($generated@@24 $generated@@269) ($generated@@58 $generated@@141 $generated@@270) ($generated@@58 $generated@@31 $generated@@271))  (and (=> (< 0 ($generated@@64 $generated@@270)) (ite ($generated@@33 ($generated@@58 $generated@@31 $generated@@271)) false (let (($generated@@275 ($generated@@58 $generated@@31 ($generated@@34 ($generated@@58 $generated@@31 $generated@@271)))))
($generated@@71 $generated@@268 ($generated@@24 $generated@@269) ($generated@@62 $generated@@270 ($generated@@63 1)) $generated@@275)))) (=> (= ($generated@@83 0) ($generated@@64 $generated@@270)) (forall (($generated@@276 T@U) ) (!  (=> ($generated@@40 $generated@@276 $generated@@270) ($generated@@71 $generated@@268 ($generated@@24 $generated@@269) $generated@@276 $generated@@271))
 :pattern ( ($generated@@71 $generated@@268 ($generated@@24 $generated@@269) $generated@@276 $generated@@271))
)))))))
 :weight 3
 :pattern ( ($generated@@71 $generated@@268 ($generated@@24 $generated@@269) ($generated@@58 $generated@@141 $generated@@270) ($generated@@58 $generated@@31 $generated@@271)))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> ($generated@@98 $generated@@278 ($generated@@32 $generated@@277)) (and (= ($generated@@106 $generated@@31 ($generated@@47 $generated@@31 $generated@@278)) $generated@@278) ($generated@@30 $generated@@31 ($generated@@47 $generated@@31 $generated@@278) ($generated@@32 $generated@@277))))
 :pattern ( ($generated@@98 $generated@@278 ($generated@@32 $generated@@277)))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> ($generated@@129 $generated@@279) (= $generated@@279 ($generated@@63 ($generated@@64 $generated@@279))))
 :pattern ( ($generated@@64 $generated@@279))
 :pattern ( ($generated@@129 $generated@@279))
)))
(assert (= ($generated@@126 $generated@@46) $generated@@1))
(assert (= ($generated@@127 $generated@@46) $generated@@6))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and ($generated@@129 $generated@@281) (<= ($generated@@64 $generated@@281) ($generated@@64 $generated@@280))) (or (and (= $generated@@281 ($generated@@63 0)) (= ($generated@@62 $generated@@280 $generated@@281) $generated@@280)) (and (or (not (= $generated@@281 ($generated@@63 0))) (not true)) ($generated@@40 ($generated@@62 $generated@@280 $generated@@281) $generated@@280))))
 :pattern ( ($generated@@62 $generated@@280 $generated@@281))
)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@282 T@U) ) (!  (=> (or $generated@@155 (< 2 $generated@@28)) ($generated@@30 $generated@@31 ($generated@@154 $generated@@282) ($generated@@32 $generated@@46)))
 :pattern ( ($generated@@154 $generated@@282))
))))
(assert (forall (($generated@@283 Int) ) (! (= ($generated@@106 $generated@@9 ($generated@@13 ($generated@@83 $generated@@283))) ($generated@@58 $generated@@141 ($generated@@106 $generated@@9 ($generated@@13 $generated@@283))))
 :pattern ( ($generated@@106 $generated@@9 ($generated@@13 ($generated@@83 $generated@@283))))
)))
(assert (forall (($generated@@284 T@U) ) (! (= ($generated@@120 ($generated@@58 $generated@@31 $generated@@284)) ($generated@@58 $generated@@31 ($generated@@120 $generated@@284)))
 :pattern ( ($generated@@120 ($generated@@58 $generated@@31 $generated@@284)))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@T) ) (! (= ($generated@@106 $generated@@286 ($generated@@58 $generated@@286 $generated@@285)) ($generated@@58 $generated@@141 ($generated@@106 $generated@@286 $generated@@285)))
 :pattern ( ($generated@@106 $generated@@286 ($generated@@58 $generated@@286 $generated@@285)))
)))
(assert  (=> (<= 3 $generated@@28) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (or ($generated@@142 $generated@@288 $generated@@289) (and (< 3 $generated@@28) ($generated@@30 $generated@@31 $generated@@289 ($generated@@32 $generated@@46)))) (and (and (=> (< 0 ($generated@@64 $generated@@288)) (=> (not ($generated@@33 $generated@@289)) (let (($generated@@290 ($generated@@34 $generated@@289)))
(let (($generated@@291 ($generated@@47 $generated@@31 ($generated@@48 $generated@@289))))
 (and (and ($generated@@49 $generated@@291) ($generated@@142 ($generated@@62 $generated@@288 ($generated@@63 1)) ($generated@@50 $generated@@291))) (=> (not ($generated@@113 $generated@@287 ($generated@@62 $generated@@288 ($generated@@63 1)) ($generated@@50 $generated@@291))) ($generated@@142 ($generated@@62 $generated@@288 ($generated@@63 1)) $generated@@290))))))) (=> (=> (< 0 ($generated@@64 $generated@@288)) (ite ($generated@@33 $generated@@289) false (let (($generated@@292 ($generated@@34 $generated@@289)))
(let (($generated@@293 ($generated@@47 $generated@@31 ($generated@@48 $generated@@289))))
 (or ($generated@@113 $generated@@287 ($generated@@62 $generated@@288 ($generated@@63 1)) ($generated@@50 $generated@@293)) ($generated@@113 $generated@@287 ($generated@@62 $generated@@288 ($generated@@63 1)) $generated@@292)))))) (=> (= ($generated@@83 0) ($generated@@64 $generated@@288)) (forall (($generated@@294 T@U) ) (!  (=> ($generated@@40 $generated@@294 $generated@@288) ($generated@@142 $generated@@294 $generated@@289))
 :pattern ( ($generated@@113 $generated@@287 $generated@@294 $generated@@289))
))))) (= ($generated@@113 ($generated@@24 $generated@@287) $generated@@288 $generated@@289)  (and (=> (< 0 ($generated@@64 $generated@@288)) (ite ($generated@@33 $generated@@289) false (let (($generated@@295 ($generated@@34 $generated@@289)))
(let (($generated@@296 ($generated@@47 $generated@@31 ($generated@@48 $generated@@289))))
 (or ($generated@@113 $generated@@287 ($generated@@62 $generated@@288 ($generated@@63 1)) ($generated@@50 $generated@@296)) ($generated@@113 $generated@@287 ($generated@@62 $generated@@288 ($generated@@63 1)) $generated@@295)))))) (=> (= ($generated@@83 0) ($generated@@64 $generated@@288)) (forall (($generated@@297 T@U) ) (!  (=> ($generated@@40 $generated@@297 $generated@@288) ($generated@@113 $generated@@287 $generated@@297 $generated@@289))
 :pattern ( ($generated@@113 $generated@@287 $generated@@297 $generated@@289))
)))))))
 :pattern ( ($generated@@113 ($generated@@24 $generated@@287) $generated@@288 $generated@@289))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@298 () T@U)
(declare-fun $generated@@299 () T@U)
(declare-fun $generated@@300 () T@U)
(declare-fun $generated@@301 (T@U) Bool)
(declare-fun $generated@@302 () T@U)
(declare-fun $generated@@303 (T@U) Bool)
(declare-fun $generated@@304 () T@U)
(declare-fun $generated@@305 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@306  (=> (= $generated@@298 ($generated@@212 $generated@@299 $generated@@300 $generated false)) (=> (and ($generated@@301 $generated@@302) ($generated@@303 $generated@@302)) (=> (and (and (and $generated@@155 ($generated@@29 $generated@@46 ($generated@@58 $generated@@31 ($generated@@154 ($generated@@24 $generated@@60))))) (and ($generated@@29 $generated@@46 ($generated@@58 $generated@@31 ($generated@@154 ($generated@@24 $generated@@60)))) (and ($generated@@12 ($generated@@58 $generated@@8 ($generated@@11 ($generated@@23 $generated@@46 ($generated@@24 $generated@@60) ($generated@@58 $generated@@31 ($generated@@154 ($generated@@24 $generated@@60))))))) (ite ($generated@@33 ($generated@@58 $generated@@31 ($generated@@154 ($generated@@24 $generated@@60)))) false ($generated@@12 (let (($generated@@307 ($generated@@58 $generated@@31 ($generated@@34 ($generated@@58 $generated@@31 ($generated@@154 ($generated@@24 $generated@@60)))))))
($generated@@58 $generated@@8 ($generated@@11 ($generated@@23 $generated@@46 ($generated@@24 $generated@@60) $generated@@307))))))))) (and (and (= $generated@@300 $generated@@302) $generated@@155) (and $generated@@155 (= $generated@@304 ($generated@@58 $generated@@31 ($generated@@154 ($generated@@24 $generated@@60))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@29 $generated@@46 $generated@@304) (or ($generated@@23 $generated@@46 ($generated@@24 $generated@@60) $generated@@304) (=> ($generated@@33 $generated@@304) ($generated@@12 ($generated@@58 $generated@@8 ($generated@@11 false))))))) (=> (=> ($generated@@29 $generated@@46 $generated@@304) (or ($generated@@23 $generated@@46 ($generated@@24 $generated@@60) $generated@@304) (=> ($generated@@33 $generated@@304) ($generated@@12 ($generated@@58 $generated@@8 ($generated@@11 false)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@29 $generated@@46 $generated@@304) (or ($generated@@23 $generated@@46 ($generated@@24 $generated@@60) $generated@@304) (=> (not ($generated@@33 $generated@@304)) (let (($generated@@308 ($generated@@34 $generated@@304)))
($generated@@23 $generated@@46 ($generated@@24 ($generated@@24 $generated@@60)) $generated@@308)))))) (=> (=> ($generated@@29 $generated@@46 $generated@@304) (or ($generated@@23 $generated@@46 ($generated@@24 $generated@@60) $generated@@304) (=> (not ($generated@@33 $generated@@304)) (let (($generated@@309 ($generated@@34 $generated@@304)))
($generated@@23 $generated@@46 ($generated@@24 ($generated@@24 $generated@@60)) $generated@@309))))) (=> (and (and (and ($generated@@301 $generated@@305) ($generated@@303 $generated@@305)) ($generated@@45 $generated@@304)) (and (and ($generated@@45 $generated@@304) (and ($generated@@44 ($generated@@24 $generated@@60) $generated@@304) (ite ($generated@@33 $generated@@304) false (let (($generated@@310 ($generated@@34 $generated@@304)))
(let (($generated@@311 ($generated@@47 $generated@@31 ($generated@@48 $generated@@304))))
 (or ($generated@@44 ($generated@@24 $generated@@60) ($generated@@50 $generated@@311)) ($generated@@44 ($generated@@24 $generated@@60) $generated@@310))))))) (and (= $generated@@302 $generated@@305) (= (ControlFlow 0 2) (- 0 1))))) (not ($generated@@12 ($generated@@58 $generated@@8 ($generated@@11 ($generated@@57 ($generated@@58 $generated@@31 $generated@@78))))))))))))))))
(let (($generated@@312  (=> (and (and ($generated@@301 $generated@@300) ($generated@@303 $generated@@300)) (and (= 5 $generated@@28) (= (ControlFlow 0 5) 2))) $generated@@306)))
$generated@@312)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
