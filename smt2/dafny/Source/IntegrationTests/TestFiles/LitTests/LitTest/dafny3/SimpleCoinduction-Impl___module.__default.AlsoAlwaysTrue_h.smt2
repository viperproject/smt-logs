(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (Int) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@37 (Int) Int)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@42 () Int)
(declare-fun $generated@@43 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@U T@U T@U) Bool)
(declare-fun $generated@@53 (T@U T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@114 (T@U) Bool)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@122 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@123 (T@T T@T) T@T)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@127 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@20 T@U) ($generated@@21 T@U) ($generated@@22 T@U) ) (!  (=> (and ($generated@@19 $generated@@20 $generated@@21) ($generated@@19 $generated@@21 $generated@@22)) ($generated@@19 $generated@@20 $generated@@22))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21) ($generated@@19 $generated@@21 $generated@@22))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21) ($generated@@19 $generated@@20 $generated@@22))
)))
(assert (forall (($generated@@25 T@U) ) (!  (=> ($generated@@23 $generated@@25) ($generated@@24 $generated@@25))
 :pattern ( ($generated@@23 $generated@@25))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 Int) ($generated@@31 Int) ) (!  (=> (and (and (<= 0 $generated@@30) (<= 0 $generated@@31)) (<= (+ $generated@@30 $generated@@31) ($generated@@28 $generated@@29))) (= ($generated@@26 ($generated@@26 $generated@@29 ($generated@@27 $generated@@30)) ($generated@@27 $generated@@31)) ($generated@@26 $generated@@29 ($generated@@27 (+ $generated@@30 $generated@@31)))))
 :pattern ( ($generated@@26 ($generated@@26 $generated@@29 ($generated@@27 $generated@@30)) ($generated@@27 $generated@@31)))
)))
(assert (= ($generated@@3 $generated@@33) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35)) ($generated@@24 $generated@@36))
 :pattern ( ($generated@@24 $generated@@36) ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35)))
)))
(assert (forall (($generated@@38 Int) ) (! (= ($generated@@37 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@39 $generated@@41 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@41 $generated@@40))
)))
(assert (= ($generated@@3 $generated@@45) 4))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (or ($generated@@46 $generated@@47 ($generated@@39 $generated@@45 $generated@@49) $generated@@50) (and (< 2 $generated@@42) ($generated@@32 $generated@@33 $generated@@50 ($generated@@34 $generated@@47)))) (and (and (=> (< 0 ($generated@@28 $generated@@49)) ($generated@@46 $generated@@47 ($generated@@26 $generated@@49 ($generated@@27 1)) $generated@@50)) (=> (=> (< 0 ($generated@@28 $generated@@49)) ($generated@@43 $generated@@47 ($generated@@44 $generated@@48) ($generated@@26 $generated@@49 ($generated@@27 1)) $generated@@50)) (=> (= ($generated@@37 0) ($generated@@28 $generated@@49)) (forall (($generated@@51 T@U) ) (!  (=> ($generated@@19 $generated@@51 $generated@@49) ($generated@@46 $generated@@47 $generated@@51 $generated@@50))
 :pattern ( ($generated@@43 $generated@@47 ($generated@@44 $generated@@48) $generated@@51 $generated@@50))
))))) (= ($generated@@43 $generated@@47 ($generated@@44 $generated@@48) ($generated@@39 $generated@@45 $generated@@49) $generated@@50)  (and (=> (< 0 ($generated@@28 $generated@@49)) ($generated@@43 $generated@@47 ($generated@@44 $generated@@48) ($generated@@26 $generated@@49 ($generated@@27 1)) $generated@@50)) (=> (= ($generated@@37 0) ($generated@@28 $generated@@49)) (forall (($generated@@52 T@U) ) (!  (=> ($generated@@19 $generated@@52 $generated@@49) ($generated@@43 $generated@@47 ($generated@@44 $generated@@48) $generated@@52 $generated@@50))
 :pattern ( ($generated@@43 $generated@@47 ($generated@@44 $generated@@48) $generated@@52 $generated@@50))
)))))))
 :weight 3
 :pattern ( ($generated@@43 $generated@@47 ($generated@@44 $generated@@48) ($generated@@39 $generated@@45 $generated@@49) $generated@@50))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@32 $generated@@33 ($generated@@53 $generated@@56 $generated@@57) ($generated@@34 $generated@@55))  (and ($generated@@54 $generated@@56 $generated@@55) ($generated@@32 $generated@@33 $generated@@57 ($generated@@34 $generated@@55))))
 :pattern ( ($generated@@32 $generated@@33 ($generated@@53 $generated@@56 $generated@@57) ($generated@@34 $generated@@55)))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@24 $generated@@59) (= ($generated@@58 $generated@@59) $generated@@1))
 :pattern ( ($generated@@24 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 ($generated@@60 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@60 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@24 $generated@@64) (exists (($generated@@65 T@U) ($generated@@66 T@U) ) (= $generated@@64 ($generated@@53 $generated@@65 $generated@@66))))
 :pattern ( ($generated@@24 $generated@@64))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@67 ($generated@@61 $generated@@72 $generated@@69) $generated@@70 $generated@@71) ($generated@@68 $generated@@72 $generated@@69 $generated@@70 $generated@@71))
 :pattern ( ($generated@@67 ($generated@@61 $generated@@72 $generated@@69) $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@75 T@U) ) (!  (and (= ($generated@@73 ($generated@@34 $generated@@75)) $generated@@0) (= ($generated@@74 ($generated@@34 $generated@@75)) $generated@@2))
 :pattern ( ($generated@@34 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (and ($generated@@76 $generated@@78) (<= ($generated@@28 $generated@@78) ($generated@@28 $generated@@77))) (and (= ($generated@@76 ($generated@@26 $generated@@77 $generated@@78)) ($generated@@76 $generated@@77)) (= ($generated@@28 ($generated@@26 $generated@@77 $generated@@78)) (- ($generated@@28 $generated@@77) ($generated@@28 $generated@@78)))))
 :pattern ( ($generated@@26 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@79 Int) ) (!  (=> (<= 0 $generated@@79) (and ($generated@@76 ($generated@@27 $generated@@79)) (= ($generated@@28 ($generated@@27 $generated@@79)) $generated@@79)))
 :pattern ( ($generated@@27 $generated@@79))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@46 $generated@@80 ($generated@@39 $generated@@45 $generated@@82) ($generated@@39 $generated@@33 $generated@@83)) (and (< 2 $generated@@42) ($generated@@32 $generated@@33 $generated@@83 ($generated@@34 $generated@@80)))) (and (and (=> (< 0 ($generated@@28 $generated@@82)) ($generated@@46 $generated@@80 ($generated@@26 $generated@@82 ($generated@@27 1)) ($generated@@39 $generated@@33 $generated@@83))) (=> (=> (< 0 ($generated@@28 $generated@@82)) ($generated@@43 $generated@@80 ($generated@@44 $generated@@81) ($generated@@26 $generated@@82 ($generated@@27 1)) ($generated@@39 $generated@@33 $generated@@83))) (=> (= ($generated@@37 0) ($generated@@28 $generated@@82)) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@19 $generated@@84 $generated@@82) ($generated@@46 $generated@@80 $generated@@84 $generated@@83))
 :pattern ( ($generated@@43 $generated@@80 ($generated@@44 $generated@@81) $generated@@84 $generated@@83))
))))) (= ($generated@@43 $generated@@80 ($generated@@44 $generated@@81) ($generated@@39 $generated@@45 $generated@@82) ($generated@@39 $generated@@33 $generated@@83))  (and (=> (< 0 ($generated@@28 $generated@@82)) ($generated@@43 $generated@@80 ($generated@@44 $generated@@81) ($generated@@26 $generated@@82 ($generated@@27 1)) ($generated@@39 $generated@@33 $generated@@83))) (=> (= ($generated@@37 0) ($generated@@28 $generated@@82)) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@19 $generated@@85 $generated@@82) ($generated@@43 $generated@@80 ($generated@@44 $generated@@81) $generated@@85 $generated@@83))
 :pattern ( ($generated@@43 $generated@@80 ($generated@@44 $generated@@81) $generated@@85 $generated@@83))
)))))))
 :weight 3
 :pattern ( ($generated@@43 $generated@@80 ($generated@@44 $generated@@81) ($generated@@39 $generated@@45 $generated@@82) ($generated@@39 $generated@@33 $generated@@83)))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (or ($generated@@19 $generated@@86 $generated@@87) (= $generated@@86 $generated@@87)) ($generated@@19 $generated@@87 $generated@@86))
 :pattern ( ($generated@@19 $generated@@86 $generated@@87) ($generated@@19 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@54 ($generated@@61 $generated@@90 $generated@@88) $generated@@89) ($generated@@32 $generated@@90 $generated@@88 $generated@@89))
 :pattern ( ($generated@@54 ($generated@@61 $generated@@90 $generated@@88) $generated@@89))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and ($generated@@32 $generated@@33 $generated@@93 ($generated@@34 $generated@@91)) (= $generated@@94 ($generated@@27 0))) ($generated@@43 $generated@@91 $generated@@92 $generated@@94 $generated@@93))
 :pattern ( ($generated@@43 $generated@@91 $generated@@92 $generated@@94 $generated@@93))
))))
(assert (forall (($generated@@95 T@U) ) (! (<= 0 ($generated@@28 $generated@@95))
 :pattern ( ($generated@@28 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@58 ($generated@@53 $generated@@96 $generated@@97)) $generated@@1)
 :pattern ( ($generated@@53 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@98 ($generated@@53 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@53 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@101 ($generated@@53 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@53 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@104 ($generated@@34 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@34 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@60 $generated@@107 ($generated@@61 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@61 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (and (and (and (=> ($generated@@19 $generated@@108 $generated@@109) (or (not (= $generated@@108 $generated@@109)) (not true))) (=> (and ($generated@@76 $generated@@108) (not ($generated@@76 $generated@@109))) ($generated@@19 $generated@@108 $generated@@109))) (=> (and ($generated@@76 $generated@@108) ($generated@@76 $generated@@109)) (= ($generated@@19 $generated@@108 $generated@@109) (< ($generated@@28 $generated@@108) ($generated@@28 $generated@@109))))) (=> (and ($generated@@19 $generated@@108 $generated@@109) ($generated@@76 $generated@@109)) ($generated@@76 $generated@@108)))
 :pattern ( ($generated@@19 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@43 $generated@@110 ($generated@@44 $generated@@111) $generated@@112 $generated@@113) ($generated@@43 $generated@@110 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@43 $generated@@110 ($generated@@44 $generated@@111) $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and ($generated@@114 $generated@@117) (and ($generated@@24 $generated@@115) ($generated@@68 $generated@@33 $generated@@115 ($generated@@34 $generated@@116) $generated@@117))) ($generated@@67 ($generated@@98 $generated@@115) $generated@@116 $generated@@117))
 :pattern ( ($generated@@67 ($generated@@98 $generated@@115) $generated@@116 $generated@@117))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@118 $generated@@128 $generated@@129 $generated@@130 ($generated@@124 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@133 $generated@@134) $generated@@131)
 :weight 0
)) (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@118 $generated@@135 $generated@@136 $generated@@137 ($generated@@124 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@118 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@118 $generated@@144 $generated@@145 $generated@@146 ($generated@@124 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@118 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)))) (= ($generated@@3 $generated@@119) 5)) (= ($generated@@3 $generated@@120) 6)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@122 $generated@@153 $generated@@154 ($generated@@125 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@155) $generated@@157) $generated@@155)
 :weight 0
))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@162 $generated@@163) (= ($generated@@122 $generated@@158 $generated@@159 ($generated@@125 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@160) $generated@@163) ($generated@@122 $generated@@158 $generated@@159 $generated@@161 $generated@@163)))
 :weight 0
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@3 ($generated@@123 $generated@@164 $generated@@165)) 7))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@126 ($generated@@123 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@123 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@127 ($generated@@123 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@123 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Bool) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@8 ($generated@@118 $generated@@119 $generated@@120 $generated@@4 ($generated@@121 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))  (=> (and (or (not (= $generated@@174 $generated@@170)) (not true)) ($generated@@8 ($generated@@60 $generated@@4 ($generated@@122 $generated@@120 $generated@@45 ($generated@@122 $generated@@119 ($generated@@123 $generated@@120 $generated@@45) $generated@@171 $generated@@174) $generated@@172)))) $generated@@173))
 :pattern ( ($generated@@118 $generated@@119 $generated@@120 $generated@@4 ($generated@@121 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@54 $generated@@177 ($generated@@34 $generated@@176)) (and (= ($generated@@61 $generated@@33 ($generated@@60 $generated@@33 $generated@@177)) $generated@@177) ($generated@@32 $generated@@33 ($generated@@60 $generated@@33 $generated@@177) ($generated@@34 $generated@@176))))
 :pattern ( ($generated@@54 $generated@@177 ($generated@@34 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> ($generated@@76 $generated@@178) (= $generated@@178 ($generated@@27 ($generated@@28 $generated@@178))))
 :pattern ( ($generated@@28 $generated@@178))
 :pattern ( ($generated@@76 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and ($generated@@114 $generated@@181) (and ($generated@@24 $generated@@179) ($generated@@68 $generated@@33 $generated@@179 ($generated@@34 $generated@@180) $generated@@181))) ($generated@@68 $generated@@33 ($generated@@101 $generated@@179) ($generated@@34 $generated@@180) $generated@@181))
 :pattern ( ($generated@@68 $generated@@33 ($generated@@101 $generated@@179) ($generated@@34 $generated@@180) $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@76 $generated@@183) (<= ($generated@@28 $generated@@183) ($generated@@28 $generated@@182))) (or (and (= $generated@@183 ($generated@@27 0)) (= ($generated@@26 $generated@@182 $generated@@183) $generated@@182)) (and (or (not (= $generated@@183 ($generated@@27 0))) (not true)) ($generated@@19 ($generated@@26 $generated@@182 $generated@@183) $generated@@182))))
 :pattern ( ($generated@@26 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@61 $generated@@5 ($generated@@9 ($generated@@37 $generated@@184))) ($generated@@39 $generated@@45 ($generated@@61 $generated@@5 ($generated@@9 $generated@@184))))
 :pattern ( ($generated@@61 $generated@@5 ($generated@@9 ($generated@@37 $generated@@184))))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@T) ) (! (= ($generated@@61 $generated@@186 ($generated@@39 $generated@@186 $generated@@185)) ($generated@@39 $generated@@45 ($generated@@61 $generated@@186 $generated@@185)))
 :pattern ( ($generated@@61 $generated@@186 ($generated@@39 $generated@@186 $generated@@185)))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (or ($generated@@46 $generated@@187 $generated@@189 $generated@@190) (and (< 2 $generated@@42) ($generated@@32 $generated@@33 $generated@@190 ($generated@@34 $generated@@187)))) (and (and (=> (< 0 ($generated@@28 $generated@@189)) ($generated@@46 $generated@@187 ($generated@@26 $generated@@189 ($generated@@27 1)) $generated@@190)) (=> (=> (< 0 ($generated@@28 $generated@@189)) ($generated@@43 $generated@@187 $generated@@188 ($generated@@26 $generated@@189 ($generated@@27 1)) $generated@@190)) (=> (= ($generated@@37 0) ($generated@@28 $generated@@189)) (forall (($generated@@191 T@U) ) (!  (=> ($generated@@19 $generated@@191 $generated@@189) ($generated@@46 $generated@@187 $generated@@191 $generated@@190))
 :pattern ( ($generated@@43 $generated@@187 $generated@@188 $generated@@191 $generated@@190))
))))) (= ($generated@@43 $generated@@187 ($generated@@44 $generated@@188) $generated@@189 $generated@@190)  (and (=> (< 0 ($generated@@28 $generated@@189)) ($generated@@43 $generated@@187 $generated@@188 ($generated@@26 $generated@@189 ($generated@@27 1)) $generated@@190)) (=> (= ($generated@@37 0) ($generated@@28 $generated@@189)) (forall (($generated@@192 T@U) ) (!  (=> ($generated@@19 $generated@@192 $generated@@189) ($generated@@43 $generated@@187 $generated@@188 $generated@@192 $generated@@190))
 :pattern ( ($generated@@43 $generated@@187 $generated@@188 $generated@@192 $generated@@190))
)))))))
 :pattern ( ($generated@@43 $generated@@187 ($generated@@44 $generated@@188) $generated@@189 $generated@@190))
))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@114 $generated@@196) (= ($generated@@68 $generated@@33 ($generated@@53 $generated@@194 $generated@@195) ($generated@@34 $generated@@193) $generated@@196)  (and ($generated@@67 $generated@@194 $generated@@193 $generated@@196) ($generated@@68 $generated@@33 $generated@@195 ($generated@@34 $generated@@193) $generated@@196))))
 :pattern ( ($generated@@68 $generated@@33 ($generated@@53 $generated@@194 $generated@@195) ($generated@@34 $generated@@193) $generated@@196))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@207  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@46 $generated@@197 $generated@@198 $generated@@199) (or ($generated@@43 $generated@@197 ($generated@@44 $generated@@200) $generated@@198 $generated@@199) (=> (< 0 ($generated@@28 $generated@@198)) ($generated@@43 $generated@@197 ($generated@@44 ($generated@@44 $generated@@200)) ($generated@@26 $generated@@198 ($generated@@27 1)) $generated@@199))))) (=> (=> ($generated@@46 $generated@@197 $generated@@198 $generated@@199) (or ($generated@@43 $generated@@197 ($generated@@44 $generated@@200) $generated@@198 $generated@@199) (=> (< 0 ($generated@@28 $generated@@198)) ($generated@@43 $generated@@197 ($generated@@44 ($generated@@44 $generated@@200)) ($generated@@26 $generated@@198 ($generated@@27 1)) $generated@@199)))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@46 $generated@@197 $generated@@198 $generated@@199) (or ($generated@@43 $generated@@197 ($generated@@44 $generated@@200) $generated@@198 $generated@@199) (=> (= ($generated@@37 0) ($generated@@28 $generated@@198)) (forall (($generated@@208 T@U) ) (!  (=> ($generated@@19 $generated@@208 $generated@@198) ($generated@@43 $generated@@197 ($generated@@44 ($generated@@44 $generated@@200)) $generated@@208 $generated@@199))
 :pattern ( ($generated@@43 $generated@@197 ($generated@@44 ($generated@@44 $generated@@200)) $generated@@208 $generated@@199))
))))))))))
(let (($generated@@209  (=> (<= ($generated@@28 $generated@@198) 0) (=> (and (and (and ($generated@@114 $generated@@201) ($generated@@202 $generated@@201)) (= $generated@@203 $generated@@201)) (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@32 $generated@@33 $generated@@211 ($generated@@34 $generated@@197)) ($generated@@19 $generated@@210 $generated@@198)) ($generated@@43 $generated@@197 ($generated@@44 $generated@@200) $generated@@210 $generated@@211))
 :pattern ( ($generated@@43 $generated@@197 ($generated@@44 $generated@@200) $generated@@210 $generated@@211))
)) (= (ControlFlow 0 5) 2))) $generated@@207))))
(let (($generated@@212  (=> (and (< 0 ($generated@@28 $generated@@198)) (= (ControlFlow 0 4) 2)) $generated@@207)))
(let (($generated@@213  (=> (and (= $generated@@204 ($generated@@121 $generated@@205 $generated@@206 $generated false)) ($generated@@23 $generated@@199)) (=> (and (and ($generated@@114 $generated@@203) ($generated@@202 $generated@@203)) (and (= $generated@@206 $generated@@203) (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and ($generated@@32 $generated@@33 $generated@@215 ($generated@@34 $generated@@197)) ($generated@@8 ($generated@@39 $generated@@4 ($generated@@7 true)))) ($generated@@19 $generated@@214 $generated@@198)) ($generated@@43 $generated@@197 ($generated@@44 $generated@@200) $generated@@214 $generated@@215))
 :pattern ( ($generated@@43 $generated@@197 ($generated@@44 $generated@@200) $generated@@214 $generated@@215))
)))) (and (=> (= (ControlFlow 0 6) 4) $generated@@212) (=> (= (ControlFlow 0 6) 5) $generated@@209))))))
(let (($generated@@216  (=> (and ($generated@@114 $generated@@206) ($generated@@202 $generated@@206)) (=> (and (and (and ($generated@@32 $generated@@33 $generated@@199 ($generated@@34 $generated@@197)) ($generated@@68 $generated@@33 $generated@@199 ($generated@@34 $generated@@197) $generated@@206)) ($generated@@23 $generated@@199)) (and (= 3 $generated@@42) (= (ControlFlow 0 7) 6))) $generated@@213))))
$generated@@216))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
