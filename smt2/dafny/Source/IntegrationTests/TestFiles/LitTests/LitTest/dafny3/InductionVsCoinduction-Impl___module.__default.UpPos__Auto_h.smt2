(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (Int) T@U)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@36 (T@U Int) T@U)
(declare-fun $generated@@37 (Int) Bool)
(declare-fun $generated@@38 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (Int) Int)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@102 (T@U) Bool)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@144 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@145 (T@T T@T) T@T)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@T) T@T)
(declare-fun $generated@@149 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@25 $generated@@26)) ($generated@@23 $generated@@24 $generated@@26))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@25 $generated@@26))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 Int) ($generated@@32 Int) ) (!  (=> (and (and (<= 0 $generated@@31) (<= 0 $generated@@32)) (<= (+ $generated@@31 $generated@@32) ($generated@@29 $generated@@30))) (= ($generated@@27 ($generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@28 $generated@@32)) ($generated@@27 $generated@@30 ($generated@@28 (+ $generated@@31 $generated@@32)))))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@28 $generated@@32)))
)))
(assert (= ($generated@@33 $generated@@34) $generated@@3))
(assert (= ($generated@@6 $generated@@39) 3))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (or ($generated@@37 $generated@@42) (< 1 $generated@@35)) ($generated@@38 $generated@@39 ($generated@@36 $generated@@41 $generated@@42) ($generated@@40 $generated)))
 :pattern ( ($generated@@36 $generated@@41 $generated@@42))
))))
(assert (forall (($generated@@43 T@U) ) (! ($generated@@38 $generated@@39 $generated@@34 ($generated@@40 $generated@@43))
 :pattern ( ($generated@@38 $generated@@39 $generated@@34 ($generated@@40 $generated@@43)))
)))
(assert (forall (($generated@@45 Int) ) (! (= ($generated@@44 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@38 $generated@@39 ($generated@@49 $generated@@52 $generated@@53) ($generated@@40 $generated@@51))  (and ($generated@@50 $generated@@52 $generated@@51) ($generated@@38 $generated@@39 $generated@@53 ($generated@@40 $generated@@51))))
 :pattern ( ($generated@@38 $generated@@39 ($generated@@49 $generated@@52 $generated@@53) ($generated@@40 $generated@@51)))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (and ($generated@@38 $generated@@39 $generated@@56 ($generated@@40 $generated)) (= $generated@@57 ($generated@@28 0))) ($generated@@54 $generated@@55 $generated@@57 $generated@@56))
 :pattern ( ($generated@@54 $generated@@55 $generated@@57 $generated@@56))
))))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@58 $generated@@59) (= ($generated@@33 $generated@@59) $generated@@3))
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@60 $generated@@61) (= ($generated@@33 $generated@@61) $generated@@4))
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 ($generated@@62 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@62 $generated@@65 $generated@@64))
)))
(assert (= ($generated@@6 $generated@@67) 4))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or ($generated@@68 ($generated@@46 $generated@@67 $generated@@72) ($generated@@46 $generated@@39 $generated@@73)) (and (< 2 $generated@@35) ($generated@@38 $generated@@39 $generated@@73 ($generated@@40 $generated)))) (and (and (=> (< 0 ($generated@@29 $generated@@72)) (=> (not ($generated@@11 ($generated@@46 $generated@@7 ($generated@@10 ($generated@@58 ($generated@@46 $generated@@39 $generated@@73)))))) (let (($generated@@74 ($generated@@46 $generated@@39 ($generated@@69 ($generated@@46 $generated@@39 $generated@@73)))))
(let (($generated@@75 ($generated@@44 ($generated@@13 ($generated@@62 $generated@@8 ($generated@@70 ($generated@@46 $generated@@39 $generated@@73)))))))
 (=> (> $generated@@75 0) ($generated@@68 ($generated@@27 $generated@@72 ($generated@@28 1)) $generated@@74)))))) (=> (=> (< 0 ($generated@@29 $generated@@72)) (ite ($generated@@58 ($generated@@46 $generated@@39 $generated@@73)) true (let (($generated@@76 ($generated@@46 $generated@@39 ($generated@@69 ($generated@@46 $generated@@39 $generated@@73)))))
(let (($generated@@77 ($generated@@44 ($generated@@13 ($generated@@62 $generated@@8 ($generated@@70 ($generated@@46 $generated@@39 $generated@@73)))))))
 (and (> $generated@@77 0) ($generated@@54 ($generated@@66 $generated@@71) ($generated@@27 $generated@@72 ($generated@@28 1)) $generated@@76)))))) (=> (= ($generated@@44 0) ($generated@@29 $generated@@72)) (forall (($generated@@78 T@U) ) (!  (=> ($generated@@23 $generated@@78 $generated@@72) ($generated@@68 $generated@@78 $generated@@73))
 :pattern ( ($generated@@54 ($generated@@66 $generated@@71) $generated@@78 $generated@@73))
))))) (= ($generated@@54 ($generated@@66 $generated@@71) ($generated@@46 $generated@@67 $generated@@72) ($generated@@46 $generated@@39 $generated@@73))  (and (=> (< 0 ($generated@@29 $generated@@72)) (ite ($generated@@58 ($generated@@46 $generated@@39 $generated@@73)) true (let (($generated@@79 ($generated@@46 $generated@@39 ($generated@@69 ($generated@@46 $generated@@39 $generated@@73)))))
(let (($generated@@80 ($generated@@44 ($generated@@13 ($generated@@62 $generated@@8 ($generated@@70 ($generated@@46 $generated@@39 $generated@@73)))))))
 (and (> $generated@@80 0) ($generated@@54 ($generated@@66 $generated@@71) ($generated@@27 $generated@@72 ($generated@@28 1)) $generated@@79)))))) (=> (= ($generated@@44 0) ($generated@@29 $generated@@72)) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@23 $generated@@81 $generated@@72) ($generated@@54 ($generated@@66 $generated@@71) $generated@@81 $generated@@73))
 :pattern ( ($generated@@54 ($generated@@66 $generated@@71) $generated@@81 $generated@@73))
)))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@66 $generated@@71) ($generated@@46 $generated@@67 $generated@@72) ($generated@@46 $generated@@39 $generated@@73)))
))))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@60 $generated@@82) (exists (($generated@@83 T@U) ($generated@@84 T@U) ) (= $generated@@82 ($generated@@49 $generated@@83 $generated@@84))))
 :pattern ( ($generated@@60 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@58 $generated@@85) (= $generated@@85 $generated@@34))
 :pattern ( ($generated@@58 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@54 ($generated@@66 $generated@@86) $generated@@87 $generated@@88) ($generated@@54 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@54 ($generated@@66 $generated@@86) $generated@@87 $generated@@88))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@68 ($generated@@46 $generated@@67 $generated@@90) $generated@@91) (and (< 2 $generated@@35) ($generated@@38 $generated@@39 $generated@@91 ($generated@@40 $generated)))) (and (and (=> (< 0 ($generated@@29 $generated@@90)) (=> (not ($generated@@58 $generated@@91)) (let (($generated@@92 ($generated@@69 $generated@@91)))
(let (($generated@@93 ($generated@@13 ($generated@@62 $generated@@8 ($generated@@70 $generated@@91)))))
 (=> (> $generated@@93 0) ($generated@@68 ($generated@@27 $generated@@90 ($generated@@28 1)) $generated@@92)))))) (=> (=> (< 0 ($generated@@29 $generated@@90)) (ite ($generated@@58 $generated@@91) true (let (($generated@@94 ($generated@@69 $generated@@91)))
(let (($generated@@95 ($generated@@13 ($generated@@62 $generated@@8 ($generated@@70 $generated@@91)))))
 (and (> $generated@@95 0) ($generated@@54 ($generated@@66 $generated@@89) ($generated@@27 $generated@@90 ($generated@@28 1)) $generated@@94)))))) (=> (= ($generated@@44 0) ($generated@@29 $generated@@90)) (forall (($generated@@96 T@U) ) (!  (=> ($generated@@23 $generated@@96 $generated@@90) ($generated@@68 $generated@@96 $generated@@91))
 :pattern ( ($generated@@54 ($generated@@66 $generated@@89) $generated@@96 $generated@@91))
))))) (= ($generated@@54 ($generated@@66 $generated@@89) ($generated@@46 $generated@@67 $generated@@90) $generated@@91)  (and (=> (< 0 ($generated@@29 $generated@@90)) (ite ($generated@@58 $generated@@91) true (let (($generated@@97 ($generated@@69 $generated@@91)))
(let (($generated@@98 ($generated@@13 ($generated@@62 $generated@@8 ($generated@@70 $generated@@91)))))
 (and (> $generated@@98 0) ($generated@@54 ($generated@@66 $generated@@89) ($generated@@27 $generated@@90 ($generated@@28 1)) $generated@@97)))))) (=> (= ($generated@@44 0) ($generated@@29 $generated@@90)) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@23 $generated@@99 $generated@@90) ($generated@@54 ($generated@@66 $generated@@89) $generated@@99 $generated@@91))
 :pattern ( ($generated@@54 ($generated@@66 $generated@@89) $generated@@99 $generated@@91))
)))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@66 $generated@@89) ($generated@@46 $generated@@67 $generated@@90) $generated@@91))
))))
(assert (forall (($generated@@101 T@U) ) (!  (and (= ($generated@@22 ($generated@@40 $generated@@101)) $generated@@2) (= ($generated@@100 ($generated@@40 $generated@@101)) $generated@@5))
 :pattern ( ($generated@@40 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and ($generated@@102 $generated@@104) (<= ($generated@@29 $generated@@104) ($generated@@29 $generated@@103))) (and (= ($generated@@102 ($generated@@27 $generated@@103 $generated@@104)) ($generated@@102 $generated@@103)) (= ($generated@@29 ($generated@@27 $generated@@103 $generated@@104)) (- ($generated@@29 $generated@@103) ($generated@@29 $generated@@104)))))
 :pattern ( ($generated@@27 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 Int) ) (!  (=> (<= 0 $generated@@105) (and ($generated@@102 ($generated@@28 $generated@@105)) (= ($generated@@29 ($generated@@28 $generated@@105)) $generated@@105)))
 :pattern ( ($generated@@28 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (or ($generated@@23 $generated@@106 $generated@@107) (= $generated@@106 $generated@@107)) ($generated@@23 $generated@@107 $generated@@106))
 :pattern ( ($generated@@23 $generated@@106 $generated@@107) ($generated@@23 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> ($generated@@38 $generated@@39 $generated@@109 ($generated@@40 $generated@@108)) (or ($generated@@58 $generated@@109) ($generated@@60 $generated@@109)))
 :pattern ( ($generated@@60 $generated@@109) ($generated@@38 $generated@@39 $generated@@109 ($generated@@40 $generated@@108)))
 :pattern ( ($generated@@58 $generated@@109) ($generated@@38 $generated@@39 $generated@@109 ($generated@@40 $generated@@108)))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or ($generated@@68 $generated@@111 $generated@@112) (and (< 2 $generated@@35) ($generated@@38 $generated@@39 $generated@@112 ($generated@@40 $generated)))) (and (and (=> (< 0 ($generated@@29 $generated@@111)) (=> (not ($generated@@58 $generated@@112)) (let (($generated@@113 ($generated@@69 $generated@@112)))
(let (($generated@@114 ($generated@@13 ($generated@@62 $generated@@8 ($generated@@70 $generated@@112)))))
 (=> (> $generated@@114 0) ($generated@@68 ($generated@@27 $generated@@111 ($generated@@28 1)) $generated@@113)))))) (=> (=> (< 0 ($generated@@29 $generated@@111)) (ite ($generated@@58 $generated@@112) true (let (($generated@@115 ($generated@@69 $generated@@112)))
(let (($generated@@116 ($generated@@13 ($generated@@62 $generated@@8 ($generated@@70 $generated@@112)))))
 (and (> $generated@@116 0) ($generated@@54 $generated@@110 ($generated@@27 $generated@@111 ($generated@@28 1)) $generated@@115)))))) (=> (= ($generated@@44 0) ($generated@@29 $generated@@111)) (forall (($generated@@117 T@U) ) (!  (=> ($generated@@23 $generated@@117 $generated@@111) ($generated@@68 $generated@@117 $generated@@112))
 :pattern ( ($generated@@54 $generated@@110 $generated@@117 $generated@@112))
))))) (= ($generated@@54 ($generated@@66 $generated@@110) $generated@@111 $generated@@112)  (and (=> (< 0 ($generated@@29 $generated@@111)) (ite ($generated@@58 $generated@@112) true (let (($generated@@118 ($generated@@69 $generated@@112)))
(let (($generated@@119 ($generated@@13 ($generated@@62 $generated@@8 ($generated@@70 $generated@@112)))))
 (and (> $generated@@119 0) ($generated@@54 $generated@@110 ($generated@@27 $generated@@111 ($generated@@28 1)) $generated@@118)))))) (=> (= ($generated@@44 0) ($generated@@29 $generated@@111)) (forall (($generated@@120 T@U) ) (!  (=> ($generated@@23 $generated@@120 $generated@@111) ($generated@@54 $generated@@110 $generated@@120 $generated@@112))
 :pattern ( ($generated@@54 $generated@@110 $generated@@120 $generated@@112))
)))))))
 :pattern ( ($generated@@54 ($generated@@66 $generated@@110) $generated@@111 $generated@@112))
))))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@50 $generated@@121 $generated) (and (= ($generated@@63 $generated@@8 ($generated@@62 $generated@@8 $generated@@121)) $generated@@121) ($generated@@38 $generated@@8 ($generated@@62 $generated@@8 $generated@@121) $generated)))
 :pattern ( ($generated@@50 $generated@@121 $generated))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@50 ($generated@@63 $generated@@124 $generated@@122) $generated@@123) ($generated@@38 $generated@@124 $generated@@122 $generated@@123))
 :pattern ( ($generated@@50 ($generated@@63 $generated@@124 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (! (<= 0 ($generated@@29 $generated@@125))
 :pattern ( ($generated@@29 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@33 ($generated@@49 $generated@@126 $generated@@127)) $generated@@4)
 :pattern ( ($generated@@49 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@70 ($generated@@49 $generated@@128 $generated@@129)) $generated@@128)
 :pattern ( ($generated@@49 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@69 ($generated@@49 $generated@@130 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@49 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@40 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@40 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@62 $generated@@135 ($generated@@63 $generated@@135 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@63 $generated@@135 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (and (and (and (=> ($generated@@23 $generated@@136 $generated@@137) (or (not (= $generated@@136 $generated@@137)) (not true))) (=> (and ($generated@@102 $generated@@136) (not ($generated@@102 $generated@@137))) ($generated@@23 $generated@@136 $generated@@137))) (=> (and ($generated@@102 $generated@@136) ($generated@@102 $generated@@137)) (= ($generated@@23 $generated@@136 $generated@@137) (< ($generated@@29 $generated@@136) ($generated@@29 $generated@@137))))) (=> (and ($generated@@23 $generated@@136 $generated@@137) ($generated@@102 $generated@@137)) ($generated@@102 $generated@@136)))
 :pattern ( ($generated@@23 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 Int) ) (! (= ($generated@@36 ($generated@@66 $generated@@138) $generated@@139) ($generated@@36 $generated@@138 $generated@@139))
 :pattern ( ($generated@@36 ($generated@@66 $generated@@138) $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@140 $generated@@150 $generated@@151 $generated@@152 ($generated@@146 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@155 $generated@@156) $generated@@153)
 :weight 0
)) (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@140 $generated@@157 $generated@@158 $generated@@159 ($generated@@146 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@140 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@140 $generated@@166 $generated@@167 $generated@@168 ($generated@@146 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@140 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))) (= ($generated@@6 $generated@@141) 5)) (= ($generated@@6 $generated@@142) 6)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@144 $generated@@175 $generated@@176 ($generated@@147 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@177) $generated@@179) $generated@@177)
 :weight 0
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@184 $generated@@185) (= ($generated@@144 $generated@@180 $generated@@181 ($generated@@147 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@182) $generated@@185) ($generated@@144 $generated@@180 $generated@@181 $generated@@183 $generated@@185)))
 :weight 0
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@6 ($generated@@145 $generated@@186 $generated@@187)) 7))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@148 ($generated@@145 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@145 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@149 ($generated@@145 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@145 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@11 ($generated@@140 $generated@@141 $generated@@142 $generated@@7 ($generated@@143 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (or (not (= $generated@@196 $generated@@192)) (not true)) ($generated@@11 ($generated@@62 $generated@@7 ($generated@@144 $generated@@142 $generated@@67 ($generated@@144 $generated@@141 ($generated@@145 $generated@@142 $generated@@67) $generated@@193 $generated@@196) $generated@@194)))) $generated@@195))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142 $generated@@7 ($generated@@143 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@50 $generated@@199 ($generated@@40 $generated@@198)) (and (= ($generated@@63 $generated@@39 ($generated@@62 $generated@@39 $generated@@199)) $generated@@199) ($generated@@38 $generated@@39 ($generated@@62 $generated@@39 $generated@@199) ($generated@@40 $generated@@198))))
 :pattern ( ($generated@@50 $generated@@199 ($generated@@40 $generated@@198)))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@200 T@U) ($generated@@201 Int) ) (!  (=> (or ($generated@@37 $generated@@201) (< 1 $generated@@35)) (and ($generated@@37 (+ $generated@@201 1)) (= ($generated@@36 ($generated@@66 $generated@@200) $generated@@201) ($generated@@49 ($generated@@63 $generated@@8 ($generated@@12 $generated@@201)) ($generated@@36 $generated@@200 (+ $generated@@201 1))))))
 :pattern ( ($generated@@36 ($generated@@66 $generated@@200) $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ) (!  (=> ($generated@@102 $generated@@202) (= $generated@@202 ($generated@@28 ($generated@@29 $generated@@202))))
 :pattern ( ($generated@@29 $generated@@202))
 :pattern ( ($generated@@102 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@102 $generated@@204) (<= ($generated@@29 $generated@@204) ($generated@@29 $generated@@203))) (or (and (= $generated@@204 ($generated@@28 0)) (= ($generated@@27 $generated@@203 $generated@@204) $generated@@203)) (and (or (not (= $generated@@204 ($generated@@28 0))) (not true)) ($generated@@23 ($generated@@27 $generated@@203 $generated@@204) $generated@@203))))
 :pattern ( ($generated@@27 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@63 $generated@@8 ($generated@@12 ($generated@@44 $generated@@205))) ($generated@@46 $generated@@67 ($generated@@63 $generated@@8 ($generated@@12 $generated@@205))))
 :pattern ( ($generated@@63 $generated@@8 ($generated@@12 ($generated@@44 $generated@@205))))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@T) ) (! (= ($generated@@63 $generated@@207 ($generated@@46 $generated@@207 $generated@@206)) ($generated@@46 $generated@@67 ($generated@@63 $generated@@207 $generated@@206)))
 :pattern ( ($generated@@63 $generated@@207 ($generated@@46 $generated@@207 $generated@@206)))
)))
(assert (forall (($generated@@208 T@U) ) (! ($generated@@38 $generated@@8 $generated@@208 $generated)
 :pattern ( ($generated@@38 $generated@@8 $generated@@208 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@219  (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@68 $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (or ($generated@@54 ($generated@@66 $generated@@210) $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (=> (< 0 ($generated@@29 $generated@@209)) (=> ($generated@@58 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) ($generated@@11 ($generated@@46 $generated@@7 ($generated@@10 true)))))))) (=> (=> ($generated@@68 $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (or ($generated@@54 ($generated@@66 $generated@@210) $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (=> (< 0 ($generated@@29 $generated@@209)) (=> ($generated@@58 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) ($generated@@11 ($generated@@46 $generated@@7 ($generated@@10 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@68 $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (or ($generated@@54 ($generated@@66 $generated@@210) $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (=> (< 0 ($generated@@29 $generated@@209)) (=> (not ($generated@@58 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211))) (let (($generated@@220 ($generated@@13 ($generated@@62 $generated@@8 ($generated@@70 ($generated@@36 ($generated@@66 ($generated@@66 $generated@@210)) $generated@@211))))))
(> $generated@@220 0))))))) (=> (=> ($generated@@68 $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (or ($generated@@54 ($generated@@66 $generated@@210) $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (=> (< 0 ($generated@@29 $generated@@209)) (=> (not ($generated@@58 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211))) (let (($generated@@221 ($generated@@13 ($generated@@62 $generated@@8 ($generated@@70 ($generated@@36 ($generated@@66 ($generated@@66 $generated@@210)) $generated@@211))))))
(> $generated@@221 0)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@68 $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (or ($generated@@54 ($generated@@66 $generated@@210) $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (=> (< 0 ($generated@@29 $generated@@209)) (=> (not ($generated@@58 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211))) (let (($generated@@222 ($generated@@69 ($generated@@36 ($generated@@66 ($generated@@66 $generated@@210)) $generated@@211))))
($generated@@54 ($generated@@66 ($generated@@66 $generated@@210)) ($generated@@27 $generated@@209 ($generated@@28 1)) $generated@@222))))))) (=> (=> ($generated@@68 $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (or ($generated@@54 ($generated@@66 $generated@@210) $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (=> (< 0 ($generated@@29 $generated@@209)) (=> (not ($generated@@58 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211))) (let (($generated@@223 ($generated@@69 ($generated@@36 ($generated@@66 ($generated@@66 $generated@@210)) $generated@@211))))
($generated@@54 ($generated@@66 ($generated@@66 $generated@@210)) ($generated@@27 $generated@@209 ($generated@@28 1)) $generated@@223)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@68 $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (or ($generated@@54 ($generated@@66 $generated@@210) $generated@@209 ($generated@@36 ($generated@@66 $generated@@210) $generated@@211)) (=> (= ($generated@@44 0) ($generated@@29 $generated@@209)) (forall (($generated@@224 T@U) ) (!  (=> ($generated@@23 $generated@@224 $generated@@209) ($generated@@54 ($generated@@66 ($generated@@66 $generated@@210)) $generated@@224 ($generated@@36 ($generated@@66 ($generated@@66 $generated@@210)) $generated@@211)))
 :pattern ( ($generated@@54 ($generated@@66 ($generated@@66 $generated@@210)) $generated@@224 ($generated@@36 ($generated@@66 ($generated@@66 $generated@@210)) $generated@@211)))
))))))))))))))
(let (($generated@@225  (=> (<= ($generated@@29 $generated@@209) 0) (=> (and (and (and ($generated@@212 $generated@@213) ($generated@@214 $generated@@213)) (= $generated@@215 $generated@@213)) (and (forall (($generated@@226 T@U) ($generated@@227 Int) ) (!  (=> (and ($generated@@23 $generated@@226 $generated@@209) (> $generated@@227 0)) ($generated@@54 ($generated@@66 $generated@@210) $generated@@226 ($generated@@36 ($generated@@66 $generated@@210) $generated@@227)))
 :pattern ( ($generated@@36 ($generated@@66 $generated@@210) $generated@@227) ($generated@@23 $generated@@226 $generated@@209))
)) (= (ControlFlow 0 7) 2))) $generated@@219))))
(let (($generated@@228  (=> (and (< 0 ($generated@@29 $generated@@209)) (= (ControlFlow 0 6) 2)) $generated@@219)))
(let (($generated@@229  (=> (= $generated@@216 ($generated@@143 $generated@@217 $generated@@218 $generated@@1 false)) (=> (and (and ($generated@@212 $generated@@215) ($generated@@214 $generated@@215)) (and (= $generated@@218 $generated@@215) (forall (($generated@@230 T@U) ($generated@@231 Int) ) (!  (=> (and (> $generated@@231 0) (or ($generated@@23 $generated@@230 $generated@@209) (and (= $generated@@230 $generated@@209) (and (<= 0 $generated@@231) (< $generated@@231 $generated@@211))))) ($generated@@54 ($generated@@66 $generated@@210) $generated@@230 ($generated@@36 ($generated@@66 $generated@@210) $generated@@231)))
 :pattern ( ($generated@@54 ($generated@@66 $generated@@210) $generated@@230 ($generated@@36 ($generated@@66 $generated@@210) $generated@@231)))
)))) (and (=> (= (ControlFlow 0 8) 6) $generated@@228) (=> (= (ControlFlow 0 8) 7) $generated@@225))))))
(let (($generated@@232  (=> (and (and (and ($generated@@212 $generated@@218) ($generated@@214 $generated@@218)) (= 3 $generated@@35)) (and (> $generated@@211 0) (= (ControlFlow 0 9) 8))) $generated@@229)))
$generated@@232))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
