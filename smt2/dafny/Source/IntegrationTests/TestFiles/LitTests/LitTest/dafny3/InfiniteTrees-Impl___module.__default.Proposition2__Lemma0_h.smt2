(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (Int) T@U)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 () Bool)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@131 (T@U) Int)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@137 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@138 (T@T T@T) T@T)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> (and ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@25 $generated@@26)) ($generated@@23 $generated@@24 $generated@@26))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@25 $generated@@26))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25) ($generated@@23 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 Int) ($generated@@32 Int) ) (!  (=> (and (and (<= 0 $generated@@31) (<= 0 $generated@@32)) (<= (+ $generated@@31 $generated@@32) ($generated@@29 $generated@@30))) (= ($generated@@27 ($generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@28 $generated@@32)) ($generated@@27 $generated@@30 ($generated@@28 (+ $generated@@31 $generated@@32)))))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@28 $generated@@32)))
)))
(assert (= ($generated@@33 $generated@@34) $generated@@2))
(assert (= ($generated@@7 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ) (! ($generated@@35 $generated@@36 $generated@@34 ($generated@@37 $generated@@38))
 :pattern ( ($generated@@35 $generated@@36 $generated@@34 ($generated@@37 $generated@@38)))
)))
(assert (forall (($generated@@40 Int) ) (! (= ($generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert  (=> (<= 2 $generated@@44) (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or ($generated@@47 $generated@@50 $generated@@52 $generated@@53) (and (< 2 $generated@@44) ($generated@@35 $generated@@36 $generated@@53 ($generated@@37 $generated@@50)))) (and (and (=> (< 0 ($generated@@29 $generated@@52)) (=> (not ($generated@@48 $generated@@53)) (let (($generated@@54 ($generated@@49 $generated@@53)))
($generated@@47 $generated@@50 ($generated@@27 $generated@@52 ($generated@@28 1)) $generated@@54)))) (=> (=> (< 0 ($generated@@29 $generated@@52)) (ite ($generated@@48 $generated@@53) false (let (($generated@@55 ($generated@@49 $generated@@53)))
($generated@@45 $generated@@50 $generated@@51 ($generated@@27 $generated@@52 ($generated@@28 1)) $generated@@55)))) (=> (= ($generated@@39 0) ($generated@@29 $generated@@52)) (forall (($generated@@56 T@U) ) (!  (=> ($generated@@23 $generated@@56 $generated@@52) ($generated@@47 $generated@@50 $generated@@56 $generated@@53))
 :pattern ( ($generated@@45 $generated@@50 $generated@@51 $generated@@56 $generated@@53))
))))) (= ($generated@@45 $generated@@50 ($generated@@46 $generated@@51) $generated@@52 $generated@@53)  (and (=> (< 0 ($generated@@29 $generated@@52)) (ite ($generated@@48 $generated@@53) false (let (($generated@@57 ($generated@@49 $generated@@53)))
($generated@@45 $generated@@50 $generated@@51 ($generated@@27 $generated@@52 ($generated@@28 1)) $generated@@57)))) (=> (= ($generated@@39 0) ($generated@@29 $generated@@52)) (forall (($generated@@58 T@U) ) (!  (=> ($generated@@23 $generated@@58 $generated@@52) ($generated@@45 $generated@@50 $generated@@51 $generated@@58 $generated@@53))
 :pattern ( ($generated@@45 $generated@@50 $generated@@51 $generated@@58 $generated@@53))
)))))))
 :pattern ( ($generated@@45 $generated@@50 ($generated@@46 $generated@@51) $generated@@52 $generated@@53))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@35 $generated@@36 ($generated@@59 $generated@@62 $generated@@63) ($generated@@37 $generated@@61))  (and ($generated@@60 $generated@@62 $generated@@61) ($generated@@35 $generated@@36 $generated@@63 ($generated@@37 $generated@@61))))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@59 $generated@@62 $generated@@63) ($generated@@37 $generated@@61)))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@48 $generated@@64) (= ($generated@@33 $generated@@64) $generated@@2))
 :pattern ( ($generated@@48 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@33 $generated@@66) $generated@@3))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 ($generated@@67 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@67 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@65 $generated@@71) (exists (($generated@@72 T@U) ($generated@@73 T@U) ) (= $generated@@71 ($generated@@59 $generated@@72 $generated@@73))))
 :pattern ( ($generated@@65 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@48 $generated@@74) (= $generated@@74 $generated@@34))
 :pattern ( ($generated@@48 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ) (!  (and (= ($generated@@75 ($generated@@37 $generated@@77)) $generated@@0) (= ($generated@@76 ($generated@@37 $generated@@77)) $generated@@5))
 :pattern ( ($generated@@37 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and ($generated@@78 $generated@@80) (<= ($generated@@29 $generated@@80) ($generated@@29 $generated@@79))) (and (= ($generated@@78 ($generated@@27 $generated@@79 $generated@@80)) ($generated@@78 $generated@@79)) (= ($generated@@29 ($generated@@27 $generated@@79 $generated@@80)) (- ($generated@@29 $generated@@79) ($generated@@29 $generated@@80)))))
 :pattern ( ($generated@@27 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@81 Int) ) (!  (=> (<= 0 $generated@@81) (and ($generated@@78 ($generated@@28 $generated@@81)) (= ($generated@@29 ($generated@@28 $generated@@81)) $generated@@81)))
 :pattern ( ($generated@@28 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@60 $generated@@83 $generated@@82) (and (= ($generated@@68 $generated@@36 ($generated@@67 $generated@@36 $generated@@83)) $generated@@83) ($generated@@35 $generated@@36 ($generated@@67 $generated@@36 $generated@@83) $generated@@82)))
 :pattern ( ($generated@@60 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (or (or ($generated@@23 $generated@@84 $generated@@85) (= $generated@@84 $generated@@85)) ($generated@@23 $generated@@85 $generated@@84))
 :pattern ( ($generated@@23 $generated@@84 $generated@@85) ($generated@@23 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@35 $generated@@36 ($generated@@86 $generated@@87) $generated@@82) ($generated@@35 $generated@@36 $generated@@87 ($generated@@37 $generated@@82)))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@86 $generated@@87) $generated@@82))
)))
(assert  (=> (<= 2 $generated@@44) (forall (($generated@@90 T@U) ) (!  (=> (or $generated@@89 (< 2 $generated@@44)) (and $generated@@89 (= ($generated@@88 ($generated@@46 $generated@@90)) ($generated@@41 $generated@@36 ($generated@@59 ($generated@@68 $generated@@36 ($generated@@41 $generated@@36 ($generated@@86 ($generated@@41 $generated@@36 $generated@@34)))) ($generated@@41 $generated@@36 ($generated@@88 $generated@@90)))))))
 :pattern ( ($generated@@88 ($generated@@46 $generated@@90)))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@35 $generated@@36 $generated@@92 ($generated@@37 $generated@@91)) (or ($generated@@48 $generated@@92) ($generated@@65 $generated@@92)))
 :pattern ( ($generated@@65 $generated@@92) ($generated@@35 $generated@@36 $generated@@92 ($generated@@37 $generated@@91)))
 :pattern ( ($generated@@48 $generated@@92) ($generated@@35 $generated@@36 $generated@@92 ($generated@@37 $generated@@91)))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@60 ($generated@@68 $generated@@95 $generated@@93) $generated@@94) ($generated@@35 $generated@@95 $generated@@93 $generated@@94))
 :pattern ( ($generated@@60 ($generated@@68 $generated@@95 $generated@@93) $generated@@94))
)))
(assert  (=> (<= 2 $generated@@44) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and ($generated@@35 $generated@@36 $generated@@98 ($generated@@37 $generated@@96)) (= $generated@@99 ($generated@@28 0))) ($generated@@45 $generated@@96 $generated@@97 $generated@@99 $generated@@98))
 :pattern ( ($generated@@45 $generated@@96 $generated@@97 $generated@@99 $generated@@98))
))))
(assert (forall (($generated@@100 T@U) ) (! (<= 0 ($generated@@29 $generated@@100))
 :pattern ( ($generated@@29 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@33 ($generated@@59 $generated@@101 $generated@@102)) $generated@@3)
 :pattern ( ($generated@@59 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@103 ($generated@@59 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@59 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@49 ($generated@@59 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@59 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@37 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@37 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@33 ($generated@@86 $generated@@110)) $generated@@4)
 :pattern ( ($generated@@86 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@86 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@86 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@67 $generated@@114 ($generated@@68 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@68 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (and (and (and (=> ($generated@@23 $generated@@115 $generated@@116) (or (not (= $generated@@115 $generated@@116)) (not true))) (=> (and ($generated@@78 $generated@@115) (not ($generated@@78 $generated@@116))) ($generated@@23 $generated@@115 $generated@@116))) (=> (and ($generated@@78 $generated@@115) ($generated@@78 $generated@@116)) (= ($generated@@23 $generated@@115 $generated@@116) (< ($generated@@29 $generated@@115) ($generated@@29 $generated@@116))))) (=> (and ($generated@@23 $generated@@115 $generated@@116) ($generated@@78 $generated@@116)) ($generated@@78 $generated@@115)))
 :pattern ( ($generated@@23 $generated@@115 $generated@@116))
)))
(assert (= ($generated@@7 $generated@@117) 4))
(assert  (=> (<= 2 $generated@@44) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or ($generated@@47 $generated@@118 ($generated@@41 $generated@@117 $generated@@120) $generated@@121) (and (< 2 $generated@@44) ($generated@@35 $generated@@36 $generated@@121 ($generated@@37 $generated@@118)))) (and (and (=> (< 0 ($generated@@29 $generated@@120)) (=> (not ($generated@@48 $generated@@121)) (let (($generated@@122 ($generated@@49 $generated@@121)))
($generated@@47 $generated@@118 ($generated@@27 $generated@@120 ($generated@@28 1)) $generated@@122)))) (=> (=> (< 0 ($generated@@29 $generated@@120)) (ite ($generated@@48 $generated@@121) false (let (($generated@@123 ($generated@@49 $generated@@121)))
($generated@@45 $generated@@118 ($generated@@46 $generated@@119) ($generated@@27 $generated@@120 ($generated@@28 1)) $generated@@123)))) (=> (= ($generated@@39 0) ($generated@@29 $generated@@120)) (forall (($generated@@124 T@U) ) (!  (=> ($generated@@23 $generated@@124 $generated@@120) ($generated@@47 $generated@@118 $generated@@124 $generated@@121))
 :pattern ( ($generated@@45 $generated@@118 ($generated@@46 $generated@@119) $generated@@124 $generated@@121))
))))) (= ($generated@@45 $generated@@118 ($generated@@46 $generated@@119) ($generated@@41 $generated@@117 $generated@@120) $generated@@121)  (and (=> (< 0 ($generated@@29 $generated@@120)) (ite ($generated@@48 $generated@@121) false (let (($generated@@125 ($generated@@49 $generated@@121)))
($generated@@45 $generated@@118 ($generated@@46 $generated@@119) ($generated@@27 $generated@@120 ($generated@@28 1)) $generated@@125)))) (=> (= ($generated@@39 0) ($generated@@29 $generated@@120)) (forall (($generated@@126 T@U) ) (!  (=> ($generated@@23 $generated@@126 $generated@@120) ($generated@@45 $generated@@118 ($generated@@46 $generated@@119) $generated@@126 $generated@@121))
 :pattern ( ($generated@@45 $generated@@118 ($generated@@46 $generated@@119) $generated@@126 $generated@@121))
)))))))
 :weight 3
 :pattern ( ($generated@@45 $generated@@118 ($generated@@46 $generated@@119) ($generated@@41 $generated@@117 $generated@@120) $generated@@121))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@45 $generated@@127 ($generated@@46 $generated@@128) $generated@@129 $generated@@130) ($generated@@45 $generated@@127 $generated@@128 $generated@@129 $generated@@130))
 :pattern ( ($generated@@45 $generated@@127 ($generated@@46 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (< ($generated@@131 $generated@@132) ($generated@@131 ($generated@@86 $generated@@132)))
 :pattern ( ($generated@@86 $generated@@132))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@133 $generated@@143 $generated@@144 $generated@@145 ($generated@@139 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@148 $generated@@149) $generated@@146)
 :weight 0
)) (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@155 $generated@@157) (= ($generated@@133 $generated@@150 $generated@@151 $generated@@152 ($generated@@139 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@133 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@133 $generated@@159 $generated@@160 $generated@@161 ($generated@@139 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@133 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)))) (= ($generated@@7 $generated@@134) 5)) (= ($generated@@7 $generated@@135) 6)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@137 $generated@@168 $generated@@169 ($generated@@140 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@170) $generated@@172) $generated@@170)
 :weight 0
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (or (= $generated@@177 $generated@@178) (= ($generated@@137 $generated@@173 $generated@@174 ($generated@@140 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@175) $generated@@178) ($generated@@137 $generated@@173 $generated@@174 $generated@@176 $generated@@178)))
 :weight 0
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@7 ($generated@@138 $generated@@179 $generated@@180)) 7))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@141 ($generated@@138 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@138 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@142 ($generated@@138 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@138 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 Bool) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@12 ($generated@@133 $generated@@134 $generated@@135 $generated@@8 ($generated@@136 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))  (=> (and (or (not (= $generated@@189 $generated@@185)) (not true)) ($generated@@12 ($generated@@67 $generated@@8 ($generated@@137 $generated@@135 $generated@@117 ($generated@@137 $generated@@134 ($generated@@138 $generated@@135 $generated@@117) $generated@@186 $generated@@189) $generated@@187)))) $generated@@188))
 :pattern ( ($generated@@133 $generated@@134 $generated@@135 $generated@@8 ($generated@@136 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@88 ($generated@@46 $generated@@191)) ($generated@@88 $generated@@191))
 :pattern ( ($generated@@88 ($generated@@46 $generated@@191)))
)))
(assert  (=> (<= 2 $generated@@44) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (or ($generated@@47 $generated@@192 ($generated@@41 $generated@@117 $generated@@194) ($generated@@41 $generated@@36 $generated@@195)) (and (< 2 $generated@@44) ($generated@@35 $generated@@36 $generated@@195 ($generated@@37 $generated@@192)))) (and (and (=> (< 0 ($generated@@29 $generated@@194)) (=> (not ($generated@@12 ($generated@@41 $generated@@8 ($generated@@11 ($generated@@48 ($generated@@41 $generated@@36 $generated@@195)))))) (let (($generated@@196 ($generated@@41 $generated@@36 ($generated@@49 ($generated@@41 $generated@@36 $generated@@195)))))
($generated@@47 $generated@@192 ($generated@@27 $generated@@194 ($generated@@28 1)) $generated@@196)))) (=> (=> (< 0 ($generated@@29 $generated@@194)) (ite ($generated@@48 ($generated@@41 $generated@@36 $generated@@195)) false (let (($generated@@197 ($generated@@41 $generated@@36 ($generated@@49 ($generated@@41 $generated@@36 $generated@@195)))))
($generated@@45 $generated@@192 ($generated@@46 $generated@@193) ($generated@@27 $generated@@194 ($generated@@28 1)) $generated@@197)))) (=> (= ($generated@@39 0) ($generated@@29 $generated@@194)) (forall (($generated@@198 T@U) ) (!  (=> ($generated@@23 $generated@@198 $generated@@194) ($generated@@47 $generated@@192 $generated@@198 $generated@@195))
 :pattern ( ($generated@@45 $generated@@192 ($generated@@46 $generated@@193) $generated@@198 $generated@@195))
))))) (= ($generated@@45 $generated@@192 ($generated@@46 $generated@@193) ($generated@@41 $generated@@117 $generated@@194) ($generated@@41 $generated@@36 $generated@@195))  (and (=> (< 0 ($generated@@29 $generated@@194)) (ite ($generated@@48 ($generated@@41 $generated@@36 $generated@@195)) false (let (($generated@@199 ($generated@@41 $generated@@36 ($generated@@49 ($generated@@41 $generated@@36 $generated@@195)))))
($generated@@45 $generated@@192 ($generated@@46 $generated@@193) ($generated@@27 $generated@@194 ($generated@@28 1)) $generated@@199)))) (=> (= ($generated@@39 0) ($generated@@29 $generated@@194)) (forall (($generated@@200 T@U) ) (!  (=> ($generated@@23 $generated@@200 $generated@@194) ($generated@@45 $generated@@192 ($generated@@46 $generated@@193) $generated@@200 $generated@@195))
 :pattern ( ($generated@@45 $generated@@192 ($generated@@46 $generated@@193) $generated@@200 $generated@@195))
)))))))
 :weight 3
 :pattern ( ($generated@@45 $generated@@192 ($generated@@46 $generated@@193) ($generated@@41 $generated@@117 $generated@@194) ($generated@@41 $generated@@36 $generated@@195)))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@60 $generated@@202 ($generated@@37 $generated@@201)) (and (= ($generated@@68 $generated@@36 ($generated@@67 $generated@@36 $generated@@202)) $generated@@202) ($generated@@35 $generated@@36 ($generated@@67 $generated@@36 $generated@@202) ($generated@@37 $generated@@201))))
 :pattern ( ($generated@@60 $generated@@202 ($generated@@37 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ) (!  (=> ($generated@@78 $generated@@203) (= $generated@@203 ($generated@@28 ($generated@@29 $generated@@203))))
 :pattern ( ($generated@@29 $generated@@203))
 :pattern ( ($generated@@78 $generated@@203))
)))
(assert (= ($generated@@75 $generated@@82) $generated@@1))
(assert (= ($generated@@76 $generated@@82) $generated@@6))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and ($generated@@78 $generated@@205) (<= ($generated@@29 $generated@@205) ($generated@@29 $generated@@204))) (or (and (= $generated@@205 ($generated@@28 0)) (= ($generated@@27 $generated@@204 $generated@@205) $generated@@204)) (and (or (not (= $generated@@205 ($generated@@28 0))) (not true)) ($generated@@23 ($generated@@27 $generated@@204 $generated@@205) $generated@@204))))
 :pattern ( ($generated@@27 $generated@@204 $generated@@205))
)))
(assert  (=> (<= 2 $generated@@44) (forall (($generated@@206 T@U) ) (!  (=> (or $generated@@89 (< 2 $generated@@44)) ($generated@@35 $generated@@36 ($generated@@88 $generated@@206) ($generated@@37 $generated@@82)))
 :pattern ( ($generated@@88 $generated@@206))
))))
(assert (forall (($generated@@207 Int) ) (! (= ($generated@@68 $generated@@9 ($generated@@13 ($generated@@39 $generated@@207))) ($generated@@41 $generated@@117 ($generated@@68 $generated@@9 ($generated@@13 $generated@@207))))
 :pattern ( ($generated@@68 $generated@@9 ($generated@@13 ($generated@@39 $generated@@207))))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@86 ($generated@@41 $generated@@36 $generated@@208)) ($generated@@41 $generated@@36 ($generated@@86 $generated@@208)))
 :pattern ( ($generated@@86 ($generated@@41 $generated@@36 $generated@@208)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@T) ) (! (= ($generated@@68 $generated@@210 ($generated@@41 $generated@@210 $generated@@209)) ($generated@@41 $generated@@117 ($generated@@68 $generated@@210 $generated@@209)))
 :pattern ( ($generated@@68 $generated@@210 ($generated@@41 $generated@@210 $generated@@209)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@220  (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@47 $generated@@82 $generated@@211 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))) (or ($generated@@45 $generated@@82 ($generated@@46 $generated@@212) $generated@@211 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))) (=> (< 0 ($generated@@29 $generated@@211)) (=> ($generated@@12 ($generated@@41 $generated@@8 ($generated@@11 ($generated@@48 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212))))))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@11 false)))))))) (=> (=> ($generated@@47 $generated@@82 $generated@@211 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))) (or ($generated@@45 $generated@@82 ($generated@@46 $generated@@212) $generated@@211 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))) (=> (< 0 ($generated@@29 $generated@@211)) (=> ($generated@@12 ($generated@@41 $generated@@8 ($generated@@11 ($generated@@48 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212))))))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@11 false))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@47 $generated@@82 $generated@@211 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))) (or ($generated@@45 $generated@@82 ($generated@@46 $generated@@212) $generated@@211 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))) (=> (< 0 ($generated@@29 $generated@@211)) (=> (not ($generated@@12 ($generated@@41 $generated@@8 ($generated@@11 ($generated@@48 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))))))) (let (($generated@@221 ($generated@@41 $generated@@36 ($generated@@49 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 ($generated@@46 $generated@@212))))))))
($generated@@45 $generated@@82 ($generated@@46 ($generated@@46 $generated@@212)) ($generated@@27 $generated@@211 ($generated@@28 1)) $generated@@221))))))) (=> (=> ($generated@@47 $generated@@82 $generated@@211 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))) (or ($generated@@45 $generated@@82 ($generated@@46 $generated@@212) $generated@@211 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))) (=> (< 0 ($generated@@29 $generated@@211)) (=> (not ($generated@@12 ($generated@@41 $generated@@8 ($generated@@11 ($generated@@48 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))))))) (let (($generated@@222 ($generated@@41 $generated@@36 ($generated@@49 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 ($generated@@46 $generated@@212))))))))
($generated@@45 $generated@@82 ($generated@@46 ($generated@@46 $generated@@212)) ($generated@@27 $generated@@211 ($generated@@28 1)) $generated@@222)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@47 $generated@@82 $generated@@211 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))) (or ($generated@@45 $generated@@82 ($generated@@46 $generated@@212) $generated@@211 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))) (=> (= ($generated@@39 0) ($generated@@29 $generated@@211)) (forall (($generated@@223 T@U) ) (!  (=> ($generated@@23 $generated@@223 $generated@@211) ($generated@@45 $generated@@82 ($generated@@46 ($generated@@46 $generated@@212)) $generated@@223 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 ($generated@@46 $generated@@212))))))
 :pattern ( ($generated@@45 $generated@@82 ($generated@@46 ($generated@@46 $generated@@212)) $generated@@223 ($generated@@88 ($generated@@46 ($generated@@46 $generated@@212)))))
))))))))))))
(let (($generated@@224  (=> (<= ($generated@@29 $generated@@211) 0) (=> (and (and (and ($generated@@213 $generated@@214) ($generated@@215 $generated@@214)) (= $generated@@216 $generated@@214)) (and (forall (($generated@@225 T@U) ) (!  (=> ($generated@@23 $generated@@225 $generated@@211) ($generated@@45 $generated@@82 ($generated@@46 $generated@@212) $generated@@225 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))))
 :pattern ( ($generated@@45 $generated@@82 ($generated@@46 $generated@@212) $generated@@225 ($generated@@88 ($generated@@46 $generated@@212))))
 :pattern ( ($generated@@23 $generated@@225 $generated@@211))
)) (= (ControlFlow 0 6) 2))) $generated@@220))))
(let (($generated@@226  (=> (and (< 0 ($generated@@29 $generated@@211)) (= (ControlFlow 0 5) 2)) $generated@@220)))
(let (($generated@@227  (=> (= $generated@@217 ($generated@@136 $generated@@218 $generated@@219 $generated false)) (=> (and (and ($generated@@213 $generated@@216) ($generated@@215 $generated@@216)) (and (= $generated@@219 $generated@@216) (forall (($generated@@228 T@U) ) (!  (=> (and ($generated@@12 ($generated@@41 $generated@@8 ($generated@@11 true))) ($generated@@23 $generated@@228 $generated@@211)) ($generated@@45 $generated@@82 ($generated@@46 $generated@@212) $generated@@228 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))))
 :pattern ( ($generated@@45 $generated@@82 ($generated@@46 $generated@@212) $generated@@228 ($generated@@41 $generated@@36 ($generated@@88 ($generated@@46 $generated@@212)))))
)))) (and (=> (= (ControlFlow 0 7) 5) $generated@@226) (=> (= (ControlFlow 0 7) 6) $generated@@224))))))
(let (($generated@@229  (=> (and (and ($generated@@213 $generated@@219) ($generated@@215 $generated@@219)) (and (= 4 $generated@@44) (= (ControlFlow 0 8) 7))) $generated@@227)))
$generated@@229))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
