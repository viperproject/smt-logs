(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U T@U Int) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (Int) Int)
(declare-fun $generated@@30 (T@U T@U Int) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@58 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 () T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@128 (T@T T@T) T@T)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@28) 3))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 Int) ) (!  (=> (or ($generated@@30 $generated@@35 ($generated@@27 $generated@@28 $generated@@37) ($generated@@29 $generated@@38)) (and (< 1 $generated@@24) (and ($generated@@31 $generated@@28 $generated@@37 ($generated@@32 $generated@@35)) (<= ($generated@@29 0) $generated@@38)))) (and (=> (or (not (= ($generated@@29 $generated@@38) ($generated@@29 0))) (not true)) (and ($generated@@33 ($generated@@27 $generated@@28 $generated@@37)) ($generated@@30 $generated@@35 ($generated@@27 $generated@@28 ($generated@@34 ($generated@@27 $generated@@28 $generated@@37))) ($generated@@29 (- $generated@@38 1))))) (= ($generated@@25 $generated@@35 ($generated@@26 $generated@@36) ($generated@@27 $generated@@28 $generated@@37) ($generated@@29 $generated@@38)) (ite (= ($generated@@29 $generated@@38) ($generated@@29 0)) $generated@@37 ($generated@@25 $generated@@35 ($generated@@26 $generated@@36) ($generated@@27 $generated@@28 ($generated@@34 ($generated@@27 $generated@@28 $generated@@37))) ($generated@@29 (- $generated@@38 1)))))))
 :weight 3
 :pattern ( ($generated@@25 $generated@@35 ($generated@@26 $generated@@36) ($generated@@27 $generated@@28 $generated@@37) ($generated@@29 $generated@@38)))
))))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! ($generated@@39 $generated@@9 $generated@@41 $generated@@40 $generated@@42)
 :pattern ( ($generated@@39 $generated@@9 $generated@@41 $generated@@40 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ) (!  (=> ($generated@@43 $generated@@44) ($generated@@33 $generated@@44))
 :pattern ( ($generated@@43 $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> ($generated@@31 $generated@@28 $generated@@46 ($generated@@32 $generated@@45)) ($generated@@33 $generated@@46))
 :pattern ( ($generated@@33 $generated@@46) ($generated@@31 $generated@@28 $generated@@46 ($generated@@32 $generated@@45)))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 Int) ) (!  (=> (or ($generated@@30 $generated@@47 $generated@@49 $generated@@50) (and (< 1 $generated@@24) (and ($generated@@31 $generated@@28 $generated@@49 ($generated@@32 $generated@@47)) (<= ($generated@@29 0) $generated@@50)))) (and (=> (or (not (= $generated@@50 ($generated@@29 0))) (not true)) (and ($generated@@33 $generated@@49) ($generated@@30 $generated@@47 ($generated@@34 $generated@@49) (- $generated@@50 1)))) (= ($generated@@25 $generated@@47 ($generated@@26 $generated@@48) $generated@@49 $generated@@50) (ite (= $generated@@50 ($generated@@29 0)) $generated@@49 ($generated@@25 $generated@@47 $generated@@48 ($generated@@34 $generated@@49) (- $generated@@50 1))))))
 :pattern ( ($generated@@25 $generated@@47 ($generated@@26 $generated@@48) $generated@@49 $generated@@50))
))))
(assert (forall (($generated@@51 Int) ) (! (= ($generated@@29 $generated@@51) $generated@@51)
 :pattern ( ($generated@@29 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@27 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@27 $generated@@53 $generated@@52))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 Int) ) (!  (=> (or ($generated@@30 $generated@@54 $generated@@56 $generated@@57) (and (< 1 $generated@@24) (and ($generated@@31 $generated@@28 $generated@@56 ($generated@@32 $generated@@54)) (<= ($generated@@29 0) $generated@@57)))) ($generated@@31 $generated@@28 ($generated@@25 $generated@@54 $generated@@55 $generated@@56 $generated@@57) ($generated@@32 $generated@@54)))
 :pattern ( ($generated@@25 $generated@@54 $generated@@55 $generated@@56 $generated@@57))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@31 $generated@@28 ($generated@@58 $generated@@61 $generated@@62) ($generated@@32 $generated@@60))  (and ($generated@@59 $generated@@61 $generated@@60) ($generated@@31 $generated@@28 $generated@@62 ($generated@@32 $generated@@60))))
 :pattern ( ($generated@@31 $generated@@28 ($generated@@58 $generated@@61 $generated@@62) ($generated@@32 $generated@@60)))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@33 $generated@@64) (= ($generated@@63 $generated@@64) $generated@@4))
 :pattern ( ($generated@@33 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@65 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@65 $generated@@68 $generated@@67))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 Int) ) (!  (=> (or ($generated@@30 $generated@@69 $generated@@71 ($generated@@29 $generated@@72)) (and (< 1 $generated@@24) (and ($generated@@31 $generated@@28 $generated@@71 ($generated@@32 $generated@@69)) (<= ($generated@@29 0) $generated@@72)))) (and (=> (or (not (= ($generated@@29 $generated@@72) ($generated@@29 0))) (not true)) (and ($generated@@33 $generated@@71) ($generated@@30 $generated@@69 ($generated@@34 $generated@@71) ($generated@@29 (- $generated@@72 1))))) (= ($generated@@25 $generated@@69 ($generated@@26 $generated@@70) $generated@@71 ($generated@@29 $generated@@72)) (ite (= ($generated@@29 $generated@@72) ($generated@@29 0)) $generated@@71 ($generated@@25 $generated@@69 ($generated@@26 $generated@@70) ($generated@@34 $generated@@71) ($generated@@29 (- $generated@@72 1)))))))
 :weight 3
 :pattern ( ($generated@@25 $generated@@69 ($generated@@26 $generated@@70) $generated@@71 ($generated@@29 $generated@@72)))
))))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@33 $generated@@73) (exists (($generated@@74 T@U) ($generated@@75 T@U) ) (= $generated@@73 ($generated@@58 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@33 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@31 $generated@@9 $generated@@76 $generated@@40) (<= ($generated@@29 0) ($generated@@14 $generated@@76)))
 :pattern ( ($generated@@31 $generated@@9 $generated@@76 $generated@@40))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@66 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@39 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@66 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ) (!  (and (= ($generated@@23 ($generated@@32 $generated@@83)) $generated@@3) (= ($generated@@82 ($generated@@32 $generated@@83)) $generated@@6))
 :pattern ( ($generated@@32 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@59 $generated@@84 $generated@@40) (and (= ($generated@@66 $generated@@9 ($generated@@65 $generated@@9 $generated@@84)) $generated@@84) ($generated@@31 $generated@@9 ($generated@@65 $generated@@9 $generated@@84) $generated@@40)))
 :pattern ( ($generated@@59 $generated@@84 $generated@@40))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 Int) ) (!  (=> (and (or ($generated@@30 $generated@@87 $generated@@89 $generated@@90) (and (< 1 $generated@@24) (and (and ($generated@@31 $generated@@28 $generated@@89 ($generated@@32 $generated@@87)) ($generated@@39 $generated@@28 $generated@@89 ($generated@@32 $generated@@87) $generated@@86)) (<= ($generated@@29 0) $generated@@90)))) ($generated@@85 $generated@@86)) ($generated@@39 $generated@@28 ($generated@@25 $generated@@87 $generated@@88 $generated@@89 $generated@@90) ($generated@@32 $generated@@87) $generated@@86))
 :pattern ( ($generated@@39 $generated@@28 ($generated@@25 $generated@@87 $generated@@88 $generated@@89 $generated@@90) ($generated@@32 $generated@@87) $generated@@86))
))))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@92 $generated@@95 $generated@@96 $generated@@97) (and (< 2 $generated@@24) (and ($generated@@59 $generated@@96 $generated@@95) ($generated@@31 $generated@@28 $generated@@97 ($generated@@32 $generated@@95))))) (and (forall (($generated@@98 Int) ) (!  (=> (<= ($generated@@29 0) $generated@@98) (=> (<= ($generated@@29 0) $generated@@98) (and ($generated@@30 $generated@@95 $generated@@97 $generated@@98) ($generated@@33 ($generated@@25 $generated@@95 ($generated@@26 $generated@@93) $generated@@97 $generated@@98)))))
 :pattern ( ($generated@@25 $generated@@95 ($generated@@26 $generated@@93) $generated@@97 $generated@@98))
)) (= ($generated@@91 $generated@@95 $generated@@96 $generated@@97) (exists (($generated@@99 Int) ) (!  (and (<= ($generated@@29 0) $generated@@99) (and (<= ($generated@@29 0) $generated@@99) (= ($generated@@94 ($generated@@25 $generated@@95 ($generated@@26 $generated@@93) $generated@@97 $generated@@99)) $generated@@96)))
 :pattern ( ($generated@@25 $generated@@95 ($generated@@26 $generated@@93) $generated@@97 $generated@@99))
)))))
 :pattern ( ($generated@@91 $generated@@95 $generated@@96 $generated@@97))
))))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@59 $generated@@100 $generated) (and (= ($generated@@66 $generated@@9 ($generated@@65 $generated@@9 $generated@@100)) $generated@@100) ($generated@@31 $generated@@9 ($generated@@65 $generated@@9 $generated@@100) $generated)))
 :pattern ( ($generated@@59 $generated@@100 $generated))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@59 ($generated@@66 $generated@@103 $generated@@101) $generated@@102) ($generated@@31 $generated@@103 $generated@@101 $generated@@102))
 :pattern ( ($generated@@59 ($generated@@66 $generated@@103 $generated@@101) $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@63 ($generated@@58 $generated@@104 $generated@@105)) $generated@@4)
 :pattern ( ($generated@@58 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@94 ($generated@@58 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@58 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@34 ($generated@@58 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@58 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@110 ($generated@@32 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@32 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@65 $generated@@113 ($generated@@66 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@66 $generated@@113 $generated@@112))
)))
(assert (= ($generated@@7 $generated@@114) 4))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or ($generated@@92 $generated@@115 ($generated@@27 $generated@@114 $generated@@116) ($generated@@27 $generated@@28 $generated@@117)) (and (< 2 $generated@@24) (and ($generated@@59 $generated@@116 $generated@@115) ($generated@@31 $generated@@28 $generated@@117 ($generated@@32 $generated@@115))))) (and (forall (($generated@@118 Int) ) (!  (=> (<= ($generated@@29 0) $generated@@118) (=> (<= ($generated@@29 0) $generated@@118) (and ($generated@@30 $generated@@115 ($generated@@27 $generated@@28 $generated@@117) $generated@@118) ($generated@@33 ($generated@@25 $generated@@115 ($generated@@26 $generated@@93) ($generated@@27 $generated@@28 $generated@@117) $generated@@118)))))
 :pattern ( ($generated@@25 $generated@@115 ($generated@@26 $generated@@93) $generated@@117 $generated@@118))
)) (= ($generated@@91 $generated@@115 ($generated@@27 $generated@@114 $generated@@116) ($generated@@27 $generated@@28 $generated@@117)) (exists (($generated@@119 Int) ) (!  (and (<= ($generated@@29 0) $generated@@119) (and (<= ($generated@@29 0) $generated@@119) (= ($generated@@94 ($generated@@25 $generated@@115 ($generated@@26 $generated@@93) ($generated@@27 $generated@@28 $generated@@117) $generated@@119)) ($generated@@27 $generated@@114 $generated@@116))))
 :pattern ( ($generated@@25 $generated@@115 ($generated@@26 $generated@@93) $generated@@117 $generated@@119))
)))))
 :weight 3
 :pattern ( ($generated@@91 $generated@@115 ($generated@@27 $generated@@114 $generated@@116) ($generated@@27 $generated@@28 $generated@@117)))
))))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@85 $generated@@122) (and ($generated@@33 $generated@@120) ($generated@@39 $generated@@28 $generated@@120 ($generated@@32 $generated@@121) $generated@@122))) ($generated@@77 ($generated@@94 $generated@@120) $generated@@121 $generated@@122))
 :pattern ( ($generated@@77 ($generated@@94 $generated@@120) $generated@@121 $generated@@122))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@123 $generated@@133 $generated@@134 $generated@@135 ($generated@@129 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@138 $generated@@139) $generated@@136)
 :weight 0
)) (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@123 $generated@@140 $generated@@141 $generated@@142 ($generated@@129 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@123 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@155 $generated@@157) (= ($generated@@123 $generated@@149 $generated@@150 $generated@@151 ($generated@@129 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@123 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)))) (= ($generated@@7 $generated@@124) 5)) (= ($generated@@7 $generated@@125) 6)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@127 $generated@@158 $generated@@159 ($generated@@130 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@160) $generated@@162) $generated@@160)
 :weight 0
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@167 $generated@@168) (= ($generated@@127 $generated@@163 $generated@@164 ($generated@@130 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@165) $generated@@168) ($generated@@127 $generated@@163 $generated@@164 $generated@@166 $generated@@168)))
 :weight 0
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@7 ($generated@@128 $generated@@169 $generated@@170)) 7))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@131 ($generated@@128 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@128 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@132 ($generated@@128 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@128 $generated@@173 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@12 ($generated@@123 $generated@@124 $generated@@125 $generated@@8 ($generated@@126 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))  (=> (and (or (not (= $generated@@179 $generated@@175)) (not true)) ($generated@@12 ($generated@@65 $generated@@8 ($generated@@127 $generated@@125 $generated@@114 ($generated@@127 $generated@@124 ($generated@@128 $generated@@125 $generated@@114) $generated@@176 $generated@@179) $generated@@177)))) $generated@@178))
 :pattern ( ($generated@@123 $generated@@124 $generated@@125 $generated@@8 ($generated@@126 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Int) ) (! (= ($generated@@25 $generated@@181 ($generated@@26 $generated@@182) $generated@@183 $generated@@184) ($generated@@25 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
 :pattern ( ($generated@@25 $generated@@181 ($generated@@26 $generated@@182) $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@59 $generated@@186 ($generated@@32 $generated@@185)) (and (= ($generated@@66 $generated@@28 ($generated@@65 $generated@@28 $generated@@186)) $generated@@186) ($generated@@31 $generated@@28 ($generated@@65 $generated@@28 $generated@@186) ($generated@@32 $generated@@185))))
 :pattern ( ($generated@@59 $generated@@186 ($generated@@32 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and ($generated@@85 $generated@@189) (and ($generated@@33 $generated@@187) ($generated@@39 $generated@@28 $generated@@187 ($generated@@32 $generated@@188) $generated@@189))) ($generated@@39 $generated@@28 ($generated@@34 $generated@@187) ($generated@@32 $generated@@188) $generated@@189))
 :pattern ( ($generated@@39 $generated@@28 ($generated@@34 $generated@@187) ($generated@@32 $generated@@188) $generated@@189))
)))
(assert (= ($generated@@23 $generated@@40) $generated@@2))
(assert (= ($generated@@82 $generated@@40) $generated@@5))
(assert (forall (($generated@@190 Int) ) (! (= ($generated@@66 $generated@@9 ($generated@@13 ($generated@@29 $generated@@190))) ($generated@@27 $generated@@114 ($generated@@66 $generated@@9 ($generated@@13 $generated@@190))))
 :pattern ( ($generated@@66 $generated@@9 ($generated@@13 ($generated@@29 $generated@@190))))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@T) ) (! (= ($generated@@66 $generated@@192 ($generated@@27 $generated@@192 $generated@@191)) ($generated@@27 $generated@@114 ($generated@@66 $generated@@192 $generated@@191)))
 :pattern ( ($generated@@66 $generated@@192 ($generated@@27 $generated@@192 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! ($generated@@39 $generated@@9 $generated@@194 $generated $generated@@193)
 :pattern ( ($generated@@39 $generated@@9 $generated@@194 $generated $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@85 $generated@@198) (= ($generated@@39 $generated@@28 ($generated@@58 $generated@@196 $generated@@197) ($generated@@32 $generated@@195) $generated@@198)  (and ($generated@@77 $generated@@196 $generated@@195 $generated@@198) ($generated@@39 $generated@@28 $generated@@197 ($generated@@32 $generated@@195) $generated@@198))))
 :pattern ( ($generated@@39 $generated@@28 ($generated@@58 $generated@@196 $generated@@197) ($generated@@32 $generated@@195) $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ) (! ($generated@@31 $generated@@9 $generated@@199 $generated)
 :pattern ( ($generated@@31 $generated@@9 $generated@@199 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@211  (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@92 $generated@@200 $generated@@201 $generated@@202) (or ($generated@@91 $generated@@200 $generated@@201 $generated@@202) (exists (($generated@@212 Int) ) (!  (and (<= ($generated@@29 0) $generated@@212) (and (<= ($generated@@29 0) $generated@@212) (= ($generated@@94 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) $generated@@202 $generated@@212)) $generated@@201)))
 :pattern ( ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) $generated@@202 $generated@@212))
)))))))
(let (($generated@@213  (=> (=> (<= ($generated@@29 0) $generated@@203) (and (and ($generated@@33 $generated@@202) ($generated@@30 $generated@@200 ($generated@@34 $generated@@202) $generated@@203)) ($generated@@33 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) ($generated@@34 $generated@@202) $generated@@203)))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (and ($generated@@31 $generated@@9 ($generated@@13 ($generated@@29 0)) $generated) (and (<= ($generated@@29 0) ($generated@@29 0)) (= ($generated@@94 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) ($generated@@34 $generated@@202) ($generated@@29 0))) $generated@@201))) (or (and ($generated@@31 $generated@@9 ($generated@@13 ($generated@@29 0)) $generated) (and (<= ($generated@@29 0) ($generated@@29 0)) (= ($generated@@94 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) ($generated@@34 $generated@@202) ($generated@@29 0))) $generated@@201))) (exists (($generated@@214 Int) )  (and (<= ($generated@@29 0) $generated@@214) (= ($generated@@94 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) ($generated@@34 $generated@@202) $generated@@214)) $generated@@201)))))) (=> (or (and ($generated@@31 $generated@@9 ($generated@@13 ($generated@@29 0)) $generated) (and (<= ($generated@@29 0) ($generated@@29 0)) (= ($generated@@94 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) ($generated@@34 $generated@@202) ($generated@@29 0))) $generated@@201))) (or (and ($generated@@31 $generated@@9 ($generated@@13 ($generated@@29 0)) $generated) (and (<= ($generated@@29 0) ($generated@@29 0)) (= ($generated@@94 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) ($generated@@34 $generated@@202) ($generated@@29 0))) $generated@@201))) (exists (($generated@@215 Int) )  (and (<= ($generated@@29 0) $generated@@215) (= ($generated@@94 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) ($generated@@34 $generated@@202) $generated@@215)) $generated@@201))))) (=> (and (and (<= ($generated@@29 0) $generated@@204) (= ($generated@@94 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) ($generated@@34 $generated@@202) $generated@@204)) $generated@@201)) ($generated@@39 $generated@@28 $generated@@202 ($generated@@32 $generated@@200) $generated@@205)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@31 $generated@@9 ($generated@@13 (+ $generated@@204 1)) $generated@@40)) (=> ($generated@@31 $generated@@9 ($generated@@13 (+ $generated@@204 1)) $generated@@40) (=> (= $generated@@206 (+ $generated@@204 1)) (=> (and ($generated@@39 $generated@@9 ($generated@@13 $generated@@206) $generated@@40 $generated@@205) ($generated@@30 $generated@@200 $generated@@202 (+ $generated@@204 1))) (=> (and (and ($generated@@33 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) $generated@@202 (+ $generated@@204 1))) ($generated@@33 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) $generated@@202 (+ $generated@@204 1)))) (and ($generated@@30 $generated@@200 $generated@@202 (+ $generated@@204 1)) ($generated@@33 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) $generated@@202 (+ $generated@@204 1))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= ($generated@@94 ($generated@@25 $generated@@200 ($generated@@26 ($generated@@26 $generated@@93)) $generated@@202 (+ $generated@@204 1))) $generated@@201)) (=> (and (= ($generated@@94 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) $generated@@202 (+ $generated@@204 1))) $generated@@201) (= (ControlFlow 0 4) 3)) $generated@@211)))))))))))))
(let (($generated@@216  (=> (and (< $generated@@203 ($generated@@29 0)) (= (ControlFlow 0 10) 4)) $generated@@213)))
(let (($generated@@217  (=> (and (and (<= ($generated@@29 0) $generated@@203) ($generated@@33 $generated@@202)) (and (= $generated@@207 ($generated@@34 $generated@@202)) ($generated@@39 $generated@@28 $generated@@207 ($generated@@32 $generated@@200) $generated@@205))) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@31 $generated@@9 ($generated@@13 $generated@@203) $generated@@40)) (=> ($generated@@31 $generated@@9 ($generated@@13 $generated@@203) $generated@@40) (=> ($generated@@39 $generated@@9 ($generated@@13 $generated@@203) $generated@@40 $generated@@205) (=> (and (and ($generated@@30 $generated@@200 ($generated@@34 $generated@@202) $generated@@203) ($generated@@33 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) ($generated@@34 $generated@@202) $generated@@203))) (and ($generated@@33 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) ($generated@@34 $generated@@202) $generated@@203)) (= (ControlFlow 0 8) 4))) $generated@@213)))))))
(let (($generated@@218  (and (=> (= (ControlFlow 0 11) 8) $generated@@217) (=> (= (ControlFlow 0 11) 10) $generated@@216))))
(let (($generated@@219 true))
(let (($generated@@220  (=> (= $generated@@208 ($generated@@126 $generated@@209 $generated@@205 $generated@@1 false)) (and (=> (= (ControlFlow 0 12) 11) $generated@@218) (=> (= (ControlFlow 0 12) 1) $generated@@219)))))
(let (($generated@@221  (=> (and (and ($generated@@85 $generated@@205) ($generated@@210 $generated@@205)) (and ($generated@@59 $generated@@201 $generated@@200) ($generated@@77 $generated@@201 $generated@@200 $generated@@205))) (=> (and (and (and (and ($generated@@31 $generated@@28 $generated@@202 ($generated@@32 $generated@@200)) ($generated@@39 $generated@@28 $generated@@202 ($generated@@32 $generated@@200) $generated@@205)) ($generated@@43 $generated@@202)) (= 3 $generated@@24)) (and (and ($generated@@92 $generated@@200 $generated@@201 ($generated@@34 $generated@@202)) (and ($generated@@91 $generated@@200 $generated@@201 ($generated@@34 $generated@@202)) (exists (($generated@@222 Int) ) (!  (and (<= ($generated@@29 0) $generated@@222) (and (<= ($generated@@29 0) $generated@@222) (= ($generated@@94 ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) ($generated@@34 $generated@@202) $generated@@222)) $generated@@201)))
 :pattern ( ($generated@@25 $generated@@200 ($generated@@26 $generated@@93) ($generated@@34 $generated@@202) $generated@@222))
)))) (= (ControlFlow 0 13) 12))) $generated@@220))))
$generated@@221)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
