(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (Int) T@U)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@50 () Int)
(declare-fun $generated@@51 (T@U T@U Int) Bool)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (Int) Int)
(declare-fun $generated@@54 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@60 (T@U Int) T@U)
(declare-fun $generated@@61 (Int) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@U T@U Int) Bool)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U) Bool)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@122 (T@U) Bool)
(declare-fun $generated@@125 (T@U Int) T@U)
(declare-fun $generated@@126 (Int) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@193 (T@U) Int)
(declare-fun $generated@@198 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@199 () T@T)
(declare-fun $generated@@200 () T@T)
(declare-fun $generated@@201 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@202 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@205 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@264 (T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@11 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@11 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 Int) ($generated@@38 Int) ) (!  (=> (and (and (<= 0 $generated@@37) (<= 0 $generated@@38)) (<= (+ $generated@@37 $generated@@38) ($generated@@35 $generated@@36))) (= ($generated@@33 ($generated@@33 $generated@@36 ($generated@@34 $generated@@37)) ($generated@@34 $generated@@38)) ($generated@@33 $generated@@36 ($generated@@34 (+ $generated@@37 $generated@@38)))))
 :pattern ( ($generated@@33 ($generated@@33 $generated@@36 ($generated@@34 $generated@@37)) ($generated@@34 $generated@@38)))
)))
(assert (= ($generated@@39 $generated@@40) $generated@@3))
(assert (= ($generated@@9 $generated@@43) 3))
(assert (forall (($generated@@45 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@45 $generated@@44) ($generated@@41 $generated@@45))
 :pattern ( ($generated@@41 $generated@@45) ($generated@@42 $generated@@43 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> ($generated@@47 $generated@@49) ($generated@@29 $generated@@43 $generated@@40 ($generated@@46 $generated@@48) $generated@@49))
 :pattern ( ($generated@@29 $generated@@43 $generated@@40 ($generated@@46 $generated@@48) $generated@@49))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 Int) ) (!  (=> (and (and ($generated@@42 $generated@@43 $generated@@56 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@57)) ($generated@@51 ($generated@@52 $generated@@55) $generated@@56 $generated@@57)) (forall (($generated@@58 T@U) ) (! ($generated@@54 ($generated@@52 $generated@@55) $generated@@58 $generated@@56 $generated@@57)
 :pattern ( ($generated@@54 ($generated@@52 $generated@@55) $generated@@58 $generated@@56 $generated@@57))
)))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@55) $generated@@56 $generated@@57))
))))
(assert (forall (($generated@@59 T@U) ) (! ($generated@@42 $generated@@43 $generated@@40 ($generated@@46 $generated@@59))
 :pattern ( ($generated@@42 $generated@@43 $generated@@40 ($generated@@46 $generated@@59)))
)))
(assert  (=> (<= 4 $generated@@50) (forall (($generated@@62 T@U) ($generated@@63 Int) ) (!  (=> (or ($generated@@61 $generated@@63) (and (< 4 $generated@@50) (<= ($generated@@53 0) $generated@@63))) ($generated@@42 $generated@@43 ($generated@@60 $generated@@62 $generated@@63) ($generated@@46 $generated@@44)))
 :pattern ( ($generated@@60 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@64 Int) ) (! (= ($generated@@53 $generated@@64) $generated@@64)
 :pattern ( ($generated@@53 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@67 $generated@@66))
)))
(assert (= ($generated@@9 $generated@@68) 4))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 Int) ) (!  (=> (or ($generated@@69 ($generated@@65 $generated@@68 $generated@@76) ($generated@@65 $generated@@43 $generated@@77) ($generated@@53 $generated@@78)) (and (< 3 $generated@@50) (and ($generated@@42 $generated@@43 $generated@@77 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@78)))) (and (and (=> (< 0 ($generated@@35 $generated@@76)) (=> (not ($generated@@14 ($generated@@65 $generated@@10 ($generated@@13 ($generated@@70 ($generated@@65 $generated@@43 $generated@@77)))))) (let (($generated@@79 ($generated@@65 $generated@@43 ($generated@@71 ($generated@@65 $generated@@43 $generated@@77)))))
(let (($generated@@80 ($generated@@65 $generated@@43 ($generated@@72 $generated@@43 ($generated@@73 ($generated@@65 $generated@@43 $generated@@77))))))
 (=> (<= ($generated@@53 1) ($generated@@53 $generated@@78)) (and (and ($generated@@41 $generated@@80) ($generated@@69 ($generated@@33 $generated@@76 ($generated@@34 1)) ($generated@@74 $generated@@80) ($generated@@53 (- $generated@@78 1)))) (=> ($generated@@54 ($generated@@52 $generated@@75) ($generated@@33 $generated@@76 ($generated@@34 1)) ($generated@@74 $generated@@80) ($generated@@53 (- $generated@@78 1))) ($generated@@69 ($generated@@33 $generated@@76 ($generated@@34 1)) $generated@@79 ($generated@@53 $generated@@78))))))))) (=> (=> (< 0 ($generated@@35 $generated@@76)) (ite ($generated@@70 ($generated@@65 $generated@@43 $generated@@77)) true (let (($generated@@81 ($generated@@65 $generated@@43 ($generated@@71 ($generated@@65 $generated@@43 $generated@@77)))))
(let (($generated@@82 ($generated@@65 $generated@@43 ($generated@@72 $generated@@43 ($generated@@73 ($generated@@65 $generated@@43 $generated@@77))))))
 (and (and (<= ($generated@@53 1) ($generated@@53 $generated@@78)) ($generated@@54 ($generated@@52 $generated@@75) ($generated@@33 $generated@@76 ($generated@@34 1)) ($generated@@65 $generated@@43 ($generated@@74 $generated@@82)) ($generated@@53 (- $generated@@78 1)))) ($generated@@54 ($generated@@52 $generated@@75) ($generated@@33 $generated@@76 ($generated@@34 1)) $generated@@81 ($generated@@53 $generated@@78))))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@76)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@25 $generated@@83 $generated@@76) ($generated@@69 $generated@@83 $generated@@77 $generated@@78))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@75) $generated@@83 $generated@@77 $generated@@78))
))))) (= ($generated@@54 ($generated@@52 $generated@@75) ($generated@@65 $generated@@68 $generated@@76) ($generated@@65 $generated@@43 $generated@@77) ($generated@@53 $generated@@78))  (and (=> (< 0 ($generated@@35 $generated@@76)) (ite ($generated@@70 ($generated@@65 $generated@@43 $generated@@77)) true (let (($generated@@84 ($generated@@65 $generated@@43 ($generated@@71 ($generated@@65 $generated@@43 $generated@@77)))))
(let (($generated@@85 ($generated@@65 $generated@@43 ($generated@@72 $generated@@43 ($generated@@73 ($generated@@65 $generated@@43 $generated@@77))))))
 (and (and (<= ($generated@@53 1) ($generated@@53 $generated@@78)) ($generated@@54 ($generated@@52 $generated@@75) ($generated@@33 $generated@@76 ($generated@@34 1)) ($generated@@65 $generated@@43 ($generated@@74 $generated@@85)) ($generated@@53 (- $generated@@78 1)))) ($generated@@54 ($generated@@52 $generated@@75) ($generated@@33 $generated@@76 ($generated@@34 1)) $generated@@84 ($generated@@53 $generated@@78))))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@76)) (forall (($generated@@86 T@U) ) (!  (=> ($generated@@25 $generated@@86 $generated@@76) ($generated@@54 ($generated@@52 $generated@@75) $generated@@86 $generated@@77 $generated@@78))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@75) $generated@@86 $generated@@77 $generated@@78))
)))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@52 $generated@@75) ($generated@@65 $generated@@68 $generated@@76) ($generated@@65 $generated@@43 $generated@@77) ($generated@@53 $generated@@78)))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@42 $generated@@43 ($generated@@87 $generated@@90 $generated@@91) ($generated@@46 $generated@@89))  (and ($generated@@88 $generated@@90 $generated@@89) ($generated@@42 $generated@@43 $generated@@91 ($generated@@46 $generated@@89))))
 :pattern ( ($generated@@42 $generated@@43 ($generated@@87 $generated@@90 $generated@@91) ($generated@@46 $generated@@89)))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@70 $generated@@92) (= ($generated@@39 $generated@@92) $generated@@3))
 :pattern ( ($generated@@70 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@93 $generated@@94) (= ($generated@@39 $generated@@94) $generated@@4))
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@41 $generated@@95) (= ($generated@@39 $generated@@95) $generated@@5))
 :pattern ( ($generated@@41 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 ($generated@@72 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@72 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@93 $generated@@99) (exists (($generated@@100 T@U) ($generated@@101 T@U) ) (= $generated@@99 ($generated@@87 $generated@@100 $generated@@101))))
 :pattern ( ($generated@@93 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@70 $generated@@102) (= $generated@@102 $generated@@40))
 :pattern ( ($generated@@70 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@41 $generated@@104) (exists (($generated@@105 T@U) ) (= $generated@@104 ($generated@@103 $generated@@105))))
 :pattern ( ($generated@@41 $generated@@104))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 Int) ) (!  (=> (and (and ($generated@@42 $generated@@43 $generated@@107 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@108)) (forall (($generated@@109 T@U) ) (! ($generated@@54 ($generated@@52 $generated@@106) $generated@@109 $generated@@107 $generated@@108)
 :pattern ( ($generated@@54 ($generated@@52 $generated@@106) $generated@@109 $generated@@107 $generated@@108))
))) ($generated@@51 ($generated@@52 $generated@@106) $generated@@107 $generated@@108))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@106) $generated@@107 $generated@@108))
))))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@42 $generated@@11 $generated@@110 $generated@@30) (<= ($generated@@53 0) ($generated@@16 $generated@@110)))
 :pattern ( ($generated@@42 $generated@@11 $generated@@110 $generated@@30))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 Int) ) (! (= ($generated@@51 ($generated@@52 $generated@@111) $generated@@112 $generated@@113) ($generated@@51 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@111) $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@114 ($generated@@96 $generated@@118 $generated@@115) $generated@@116 $generated@@117) ($generated@@29 $generated@@118 $generated@@115 $generated@@116 $generated@@117))
 :pattern ( ($generated@@114 ($generated@@96 $generated@@118 $generated@@115) $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@121 T@U) ) (!  (and (= ($generated@@119 ($generated@@46 $generated@@121)) $generated@@1) (= ($generated@@120 ($generated@@46 $generated@@121)) $generated@@7))
 :pattern ( ($generated@@46 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (and ($generated@@122 $generated@@124) (<= ($generated@@35 $generated@@124) ($generated@@35 $generated@@123))) (and (= ($generated@@122 ($generated@@33 $generated@@123 $generated@@124)) ($generated@@122 $generated@@123)) (= ($generated@@35 ($generated@@33 $generated@@123 $generated@@124)) (- ($generated@@35 $generated@@123) ($generated@@35 $generated@@124)))))
 :pattern ( ($generated@@33 $generated@@123 $generated@@124))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@127 T@U) ($generated@@128 Int) ) (!  (=> (or ($generated@@126 $generated@@128) (and (< 3 $generated@@50) (<= ($generated@@53 0) $generated@@128))) (and (=> (or (not (= $generated@@128 ($generated@@53 0))) (not true)) ($generated@@126 (- $generated@@128 1))) (= ($generated@@125 ($generated@@52 $generated@@127) $generated@@128) (ite (= $generated@@128 ($generated@@53 0)) ($generated@@103 ($generated@@65 $generated@@43 $generated@@40)) ($generated@@103 ($generated@@87 ($generated@@96 $generated@@43 ($generated@@125 $generated@@127 (- $generated@@128 1))) ($generated@@65 $generated@@43 $generated@@40)))))))
 :pattern ( ($generated@@125 ($generated@@52 $generated@@127) $generated@@128))
))))
(assert (forall (($generated@@129 Int) ) (!  (=> (<= 0 $generated@@129) (and ($generated@@122 ($generated@@34 $generated@@129)) (= ($generated@@35 ($generated@@34 $generated@@129)) $generated@@129)))
 :pattern ( ($generated@@34 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@88 $generated@@130 $generated@@30) (and (= ($generated@@96 $generated@@11 ($generated@@72 $generated@@11 $generated@@130)) $generated@@130) ($generated@@42 $generated@@11 ($generated@@72 $generated@@11 $generated@@130) $generated@@30)))
 :pattern ( ($generated@@88 $generated@@130 $generated@@30))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@88 $generated@@131 $generated@@44) (and (= ($generated@@96 $generated@@43 ($generated@@72 $generated@@43 $generated@@131)) $generated@@131) ($generated@@42 $generated@@43 ($generated@@72 $generated@@43 $generated@@131) $generated@@44)))
 :pattern ( ($generated@@88 $generated@@131 $generated@@44))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (or ($generated@@25 $generated@@132 $generated@@133) (= $generated@@132 $generated@@133)) ($generated@@25 $generated@@133 $generated@@132))
 :pattern ( ($generated@@25 $generated@@132 $generated@@133) ($generated@@25 $generated@@133 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@42 $generated@@43 ($generated@@103 $generated@@134) $generated@@44) ($generated@@42 $generated@@43 $generated@@134 ($generated@@46 $generated@@44)))
 :pattern ( ($generated@@42 $generated@@43 ($generated@@103 $generated@@134) $generated@@44))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (or ($generated@@69 ($generated@@65 $generated@@68 $generated@@136) $generated@@137 $generated@@138) (and (< 3 $generated@@50) (and ($generated@@42 $generated@@43 $generated@@137 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@138)))) (and (and (=> (< 0 ($generated@@35 $generated@@136)) (=> (not ($generated@@70 $generated@@137)) (let (($generated@@139 ($generated@@71 $generated@@137)))
(let (($generated@@140 ($generated@@72 $generated@@43 ($generated@@73 $generated@@137))))
 (=> (<= ($generated@@53 1) $generated@@138) (and (and ($generated@@41 $generated@@140) ($generated@@69 ($generated@@33 $generated@@136 ($generated@@34 1)) ($generated@@74 $generated@@140) (- $generated@@138 1))) (=> ($generated@@54 ($generated@@52 $generated@@135) ($generated@@33 $generated@@136 ($generated@@34 1)) ($generated@@74 $generated@@140) (- $generated@@138 1)) ($generated@@69 ($generated@@33 $generated@@136 ($generated@@34 1)) $generated@@139 $generated@@138)))))))) (=> (=> (< 0 ($generated@@35 $generated@@136)) (ite ($generated@@70 $generated@@137) true (let (($generated@@141 ($generated@@71 $generated@@137)))
(let (($generated@@142 ($generated@@72 $generated@@43 ($generated@@73 $generated@@137))))
 (and (and (<= ($generated@@53 1) $generated@@138) ($generated@@54 ($generated@@52 $generated@@135) ($generated@@33 $generated@@136 ($generated@@34 1)) ($generated@@74 $generated@@142) (- $generated@@138 1))) ($generated@@54 ($generated@@52 $generated@@135) ($generated@@33 $generated@@136 ($generated@@34 1)) $generated@@141 $generated@@138)))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@136)) (forall (($generated@@143 T@U) ) (!  (=> ($generated@@25 $generated@@143 $generated@@136) ($generated@@69 $generated@@143 $generated@@137 $generated@@138))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@135) $generated@@143 $generated@@137 $generated@@138))
))))) (= ($generated@@54 ($generated@@52 $generated@@135) ($generated@@65 $generated@@68 $generated@@136) $generated@@137 $generated@@138)  (and (=> (< 0 ($generated@@35 $generated@@136)) (ite ($generated@@70 $generated@@137) true (let (($generated@@144 ($generated@@71 $generated@@137)))
(let (($generated@@145 ($generated@@72 $generated@@43 ($generated@@73 $generated@@137))))
 (and (and (<= ($generated@@53 1) $generated@@138) ($generated@@54 ($generated@@52 $generated@@135) ($generated@@33 $generated@@136 ($generated@@34 1)) ($generated@@74 $generated@@145) (- $generated@@138 1))) ($generated@@54 ($generated@@52 $generated@@135) ($generated@@33 $generated@@136 ($generated@@34 1)) $generated@@144 $generated@@138)))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@136)) (forall (($generated@@146 T@U) ) (!  (=> ($generated@@25 $generated@@146 $generated@@136) ($generated@@54 ($generated@@52 $generated@@135) $generated@@146 $generated@@137 $generated@@138))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@135) $generated@@146 $generated@@137 $generated@@138))
)))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@52 $generated@@135) ($generated@@65 $generated@@68 $generated@@136) $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@148 ($generated@@46 $generated@@147)) (or ($generated@@70 $generated@@148) ($generated@@93 $generated@@148)))
 :pattern ( ($generated@@93 $generated@@148) ($generated@@42 $generated@@43 $generated@@148 ($generated@@46 $generated@@147)))
 :pattern ( ($generated@@70 $generated@@148) ($generated@@42 $generated@@43 $generated@@148 ($generated@@46 $generated@@147)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@88 ($generated@@96 $generated@@151 $generated@@149) $generated@@150) ($generated@@42 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@88 ($generated@@96 $generated@@151 $generated@@149) $generated@@150))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 Int) ) (!  (=> (or ($generated@@69 $generated@@153 $generated@@154 $generated@@155) (and (< 3 $generated@@50) (and ($generated@@42 $generated@@43 $generated@@154 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@155)))) (and (and (=> (< 0 ($generated@@35 $generated@@153)) (=> (not ($generated@@70 $generated@@154)) (let (($generated@@156 ($generated@@71 $generated@@154)))
(let (($generated@@157 ($generated@@72 $generated@@43 ($generated@@73 $generated@@154))))
 (=> (<= ($generated@@53 1) $generated@@155) (and (and ($generated@@41 $generated@@157) ($generated@@69 ($generated@@33 $generated@@153 ($generated@@34 1)) ($generated@@74 $generated@@157) (- $generated@@155 1))) (=> ($generated@@54 $generated@@152 ($generated@@33 $generated@@153 ($generated@@34 1)) ($generated@@74 $generated@@157) (- $generated@@155 1)) ($generated@@69 ($generated@@33 $generated@@153 ($generated@@34 1)) $generated@@156 $generated@@155)))))))) (=> (=> (< 0 ($generated@@35 $generated@@153)) (ite ($generated@@70 $generated@@154) true (let (($generated@@158 ($generated@@71 $generated@@154)))
(let (($generated@@159 ($generated@@72 $generated@@43 ($generated@@73 $generated@@154))))
 (and (and (<= ($generated@@53 1) $generated@@155) ($generated@@54 $generated@@152 ($generated@@33 $generated@@153 ($generated@@34 1)) ($generated@@74 $generated@@159) (- $generated@@155 1))) ($generated@@54 $generated@@152 ($generated@@33 $generated@@153 ($generated@@34 1)) $generated@@158 $generated@@155)))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@153)) (forall (($generated@@160 T@U) ) (!  (=> ($generated@@25 $generated@@160 $generated@@153) ($generated@@69 $generated@@160 $generated@@154 $generated@@155))
 :pattern ( ($generated@@54 $generated@@152 $generated@@160 $generated@@154 $generated@@155))
))))) (= ($generated@@54 ($generated@@52 $generated@@152) $generated@@153 $generated@@154 $generated@@155)  (and (=> (< 0 ($generated@@35 $generated@@153)) (ite ($generated@@70 $generated@@154) true (let (($generated@@161 ($generated@@71 $generated@@154)))
(let (($generated@@162 ($generated@@72 $generated@@43 ($generated@@73 $generated@@154))))
 (and (and (<= ($generated@@53 1) $generated@@155) ($generated@@54 $generated@@152 ($generated@@33 $generated@@153 ($generated@@34 1)) ($generated@@74 $generated@@162) (- $generated@@155 1))) ($generated@@54 $generated@@152 ($generated@@33 $generated@@153 ($generated@@34 1)) $generated@@161 $generated@@155)))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@153)) (forall (($generated@@163 T@U) ) (!  (=> ($generated@@25 $generated@@163 $generated@@153) ($generated@@54 $generated@@152 $generated@@163 $generated@@154 $generated@@155))
 :pattern ( ($generated@@54 $generated@@152 $generated@@163 $generated@@154 $generated@@155))
)))))))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@152) $generated@@153 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Int) ) (! (= ($generated@@54 ($generated@@52 $generated@@164) $generated@@165 $generated@@166 $generated@@167) ($generated@@54 $generated@@164 $generated@@165 $generated@@166 $generated@@167))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@164) $generated@@165 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (! (<= 0 ($generated@@35 $generated@@168))
 :pattern ( ($generated@@35 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@39 ($generated@@87 $generated@@169 $generated@@170)) $generated@@4)
 :pattern ( ($generated@@87 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@73 ($generated@@87 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@87 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@71 ($generated@@87 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@87 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@175 ($generated@@46 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@46 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@39 ($generated@@103 $generated@@177)) $generated@@5)
 :pattern ( ($generated@@103 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@74 ($generated@@103 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@103 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@72 $generated@@180 ($generated@@96 $generated@@180 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@96 $generated@@180 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@181 $generated@@182) (or (not (= $generated@@181 $generated@@182)) (not true))) (=> (and ($generated@@122 $generated@@181) (not ($generated@@122 $generated@@182))) ($generated@@25 $generated@@181 $generated@@182))) (=> (and ($generated@@122 $generated@@181) ($generated@@122 $generated@@182)) (= ($generated@@25 $generated@@181 $generated@@182) (< ($generated@@35 $generated@@181) ($generated@@35 $generated@@182))))) (=> (and ($generated@@25 $generated@@181 $generated@@182) ($generated@@122 $generated@@182)) ($generated@@122 $generated@@181)))
 :pattern ( ($generated@@25 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 Int) ) (! (= ($generated@@125 ($generated@@52 $generated@@183) $generated@@184) ($generated@@125 $generated@@183 $generated@@184))
 :pattern ( ($generated@@125 ($generated@@52 $generated@@183) $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ) (! (= ($generated@@60 ($generated@@52 $generated@@185) $generated@@186) ($generated@@60 $generated@@185 $generated@@186))
 :pattern ( ($generated@@60 ($generated@@52 $generated@@185) $generated@@186))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@188 T@U) ($generated@@189 Int) ) (!  (=> (or ($generated@@126 $generated@@189) (and (< 3 $generated@@50) (<= ($generated@@53 0) $generated@@189))) (and (forall (($generated@@190 Int) ) (!  (=> (<= ($generated@@53 0) $generated@@190) (= ($generated@@51 ($generated@@52 $generated@@187) ($generated@@74 ($generated@@125 $generated@@188 $generated@@189)) $generated@@190) (<= $generated@@189 $generated@@190)))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@187) ($generated@@74 ($generated@@125 $generated@@188 $generated@@189)) $generated@@190))
)) ($generated@@42 $generated@@43 ($generated@@125 $generated@@188 $generated@@189) $generated@@44)))
 :pattern ( ($generated@@125 $generated@@188 $generated@@189))
))))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@191 T@U) ($generated@@192 Int) ) (!  (=> (or ($generated@@126 ($generated@@53 $generated@@192)) (and (< 3 $generated@@50) (<= ($generated@@53 0) $generated@@192))) (and (=> (or (not (= ($generated@@53 $generated@@192) ($generated@@53 0))) (not true)) ($generated@@126 ($generated@@53 (- $generated@@192 1)))) (= ($generated@@125 ($generated@@52 $generated@@191) ($generated@@53 $generated@@192)) (ite (= ($generated@@53 $generated@@192) ($generated@@53 0)) ($generated@@103 ($generated@@65 $generated@@43 $generated@@40)) ($generated@@103 ($generated@@65 $generated@@43 ($generated@@87 ($generated@@96 $generated@@43 ($generated@@65 $generated@@43 ($generated@@125 ($generated@@52 $generated@@191) ($generated@@53 (- $generated@@192 1))))) ($generated@@65 $generated@@43 $generated@@40))))))))
 :weight 3
 :pattern ( ($generated@@125 ($generated@@52 $generated@@191) ($generated@@53 $generated@@192)))
))))
(assert (forall (($generated@@194 T@U) ) (! (< ($generated@@193 $generated@@194) ($generated@@193 ($generated@@103 $generated@@194)))
 :pattern ( ($generated@@103 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@47 $generated@@197) (and ($generated@@93 $generated@@195) ($generated@@29 $generated@@43 $generated@@195 ($generated@@46 $generated@@196) $generated@@197))) ($generated@@114 ($generated@@73 $generated@@195) $generated@@196 $generated@@197))
 :pattern ( ($generated@@114 ($generated@@73 $generated@@195) $generated@@196 $generated@@197))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@208 T@T) ($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@198 $generated@@208 $generated@@209 $generated@@210 ($generated@@204 $generated@@208 $generated@@209 $generated@@210 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@213 $generated@@214) $generated@@211)
 :weight 0
)) (and (forall (($generated@@215 T@T) ($generated@@216 T@T) ($generated@@217 T@T) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@198 $generated@@215 $generated@@216 $generated@@217 ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@T) ($generated@@225 T@T) ($generated@@226 T@T) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@198 $generated@@224 $generated@@225 $generated@@226 ($generated@@204 $generated@@224 $generated@@225 $generated@@226 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@198 $generated@@224 $generated@@225 $generated@@226 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (= ($generated@@9 $generated@@199) 5)) (= ($generated@@9 $generated@@200) 6)) (forall (($generated@@233 T@T) ($generated@@234 T@T) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (= ($generated@@202 $generated@@233 $generated@@234 ($generated@@205 $generated@@233 $generated@@234 $generated@@236 $generated@@237 $generated@@235) $generated@@237) $generated@@235)
 :weight 0
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@242 $generated@@243) (= ($generated@@202 $generated@@238 $generated@@239 ($generated@@205 $generated@@238 $generated@@239 $generated@@241 $generated@@242 $generated@@240) $generated@@243) ($generated@@202 $generated@@238 $generated@@239 $generated@@241 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (= ($generated@@9 ($generated@@203 $generated@@244 $generated@@245)) 7))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= ($generated@@206 ($generated@@203 $generated@@246 $generated@@247)) $generated@@246)
 :pattern ( ($generated@@203 $generated@@246 $generated@@247))
))) (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (! (= ($generated@@207 ($generated@@203 $generated@@248 $generated@@249)) $generated@@249)
 :pattern ( ($generated@@203 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (= ($generated@@14 ($generated@@198 $generated@@199 $generated@@200 $generated@@10 ($generated@@201 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (or (not (= $generated@@254 $generated@@250)) (not true)) ($generated@@14 ($generated@@72 $generated@@10 ($generated@@202 $generated@@200 $generated@@68 ($generated@@202 $generated@@199 ($generated@@203 $generated@@200 $generated@@68) $generated@@251 $generated@@254) $generated@@252)))) $generated@@253))
 :pattern ( ($generated@@198 $generated@@199 $generated@@200 $generated@@10 ($generated@@201 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> ($generated@@88 $generated@@257 ($generated@@46 $generated@@256)) (and (= ($generated@@96 $generated@@43 ($generated@@72 $generated@@43 $generated@@257)) $generated@@257) ($generated@@42 $generated@@43 ($generated@@72 $generated@@43 $generated@@257) ($generated@@46 $generated@@256))))
 :pattern ( ($generated@@88 $generated@@257 ($generated@@46 $generated@@256)))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> ($generated@@122 $generated@@258) (= $generated@@258 ($generated@@34 ($generated@@35 $generated@@258))))
 :pattern ( ($generated@@35 $generated@@258))
 :pattern ( ($generated@@122 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and ($generated@@47 $generated@@261) (and ($generated@@93 $generated@@259) ($generated@@29 $generated@@43 $generated@@259 ($generated@@46 $generated@@260) $generated@@261))) ($generated@@29 $generated@@43 ($generated@@71 $generated@@259) ($generated@@46 $generated@@260) $generated@@261))
 :pattern ( ($generated@@29 $generated@@43 ($generated@@71 $generated@@259) ($generated@@46 $generated@@260) $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and ($generated@@47 $generated@@263) ($generated@@42 $generated@@43 $generated@@262 $generated@@44)) ($generated@@29 $generated@@43 $generated@@262 $generated@@44 $generated@@263))
 :pattern ( ($generated@@29 $generated@@43 $generated@@262 $generated@@44 $generated@@263))
)))
(assert (= ($generated@@119 $generated@@30) $generated@@0))
(assert (= ($generated@@120 $generated@@30) $generated@@6))
(assert (= ($generated@@119 $generated@@44) $generated@@2))
(assert (= ($generated@@120 $generated@@44) $generated@@8))
(assert  (=> (<= 2 $generated@@50) (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Int) ) (!  (=> (or ($generated@@264 $generated@@266 $generated@@267) (and (< 2 $generated@@50) (and ($generated@@42 $generated@@43 $generated@@266 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@267)))) (and (=> (not ($generated@@70 $generated@@266)) (let (($generated@@268 ($generated@@71 $generated@@266)))
(let (($generated@@269 ($generated@@72 $generated@@43 ($generated@@73 $generated@@266))))
 (=> (<= ($generated@@53 1) $generated@@267) (and (and ($generated@@41 $generated@@269) ($generated@@264 ($generated@@74 $generated@@269) (- $generated@@267 1))) (=> ($generated@@51 $generated@@265 ($generated@@74 $generated@@269) (- $generated@@267 1)) ($generated@@264 $generated@@268 $generated@@267))))))) (= ($generated@@51 ($generated@@52 $generated@@265) $generated@@266 $generated@@267) (ite ($generated@@70 $generated@@266) true (let (($generated@@270 ($generated@@71 $generated@@266)))
(let (($generated@@271 ($generated@@72 $generated@@43 ($generated@@73 $generated@@266))))
 (and (and (<= ($generated@@53 1) $generated@@267) ($generated@@51 $generated@@265 ($generated@@74 $generated@@271) (- $generated@@267 1))) ($generated@@51 $generated@@265 $generated@@270 $generated@@267))))))))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@265) $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and ($generated@@122 $generated@@273) (<= ($generated@@35 $generated@@273) ($generated@@35 $generated@@272))) (or (and (= $generated@@273 ($generated@@34 0)) (= ($generated@@33 $generated@@272 $generated@@273) $generated@@272)) (and (or (not (= $generated@@273 ($generated@@34 0))) (not true)) ($generated@@25 ($generated@@33 $generated@@272 $generated@@273) $generated@@272))))
 :pattern ( ($generated@@33 $generated@@272 $generated@@273))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 Int) ($generated@@277 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@43 $generated@@275 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@276)) (= $generated@@277 ($generated@@34 0))) ($generated@@54 $generated@@274 $generated@@277 $generated@@275 $generated@@276))
 :pattern ( ($generated@@54 $generated@@274 $generated@@277 $generated@@275 $generated@@276))
))))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@96 $generated@@11 ($generated@@15 ($generated@@53 $generated@@278))) ($generated@@65 $generated@@68 ($generated@@96 $generated@@11 ($generated@@15 $generated@@278))))
 :pattern ( ($generated@@96 $generated@@11 ($generated@@15 ($generated@@53 $generated@@278))))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@103 ($generated@@65 $generated@@43 $generated@@279)) ($generated@@65 $generated@@43 ($generated@@103 $generated@@279)))
 :pattern ( ($generated@@103 ($generated@@65 $generated@@43 $generated@@279)))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@T) ) (! (= ($generated@@96 $generated@@281 ($generated@@65 $generated@@281 $generated@@280)) ($generated@@65 $generated@@68 ($generated@@96 $generated@@281 $generated@@280)))
 :pattern ( ($generated@@96 $generated@@281 ($generated@@65 $generated@@281 $generated@@280)))
)))
(assert  (=> (<= 4 $generated@@50) (forall (($generated@@282 T@U) ($generated@@283 Int) ) (!  (=> (or ($generated@@61 $generated@@283) (and (< 4 $generated@@50) (<= ($generated@@53 0) $generated@@283))) (and (and ($generated@@126 $generated@@283) ($generated@@61 (+ $generated@@283 1))) (= ($generated@@60 ($generated@@52 $generated@@282) $generated@@283) ($generated@@87 ($generated@@96 $generated@@43 ($generated@@125 ($generated@@52 $generated@@187) $generated@@283)) ($generated@@60 $generated@@282 (+ $generated@@283 1))))))
 :pattern ( ($generated@@60 ($generated@@52 $generated@@282) $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and ($generated@@47 $generated@@285) (and ($generated@@41 $generated@@284) ($generated@@29 $generated@@43 $generated@@284 $generated@@44 $generated@@285))) ($generated@@29 $generated@@43 ($generated@@74 $generated@@284) ($generated@@46 $generated@@44) $generated@@285))
 :pattern ( ($generated@@29 $generated@@43 ($generated@@74 $generated@@284) ($generated@@46 $generated@@44) $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> ($generated@@47 $generated@@289) (= ($generated@@29 $generated@@43 ($generated@@87 $generated@@287 $generated@@288) ($generated@@46 $generated@@286) $generated@@289)  (and ($generated@@114 $generated@@287 $generated@@286 $generated@@289) ($generated@@29 $generated@@43 $generated@@288 ($generated@@46 $generated@@286) $generated@@289))))
 :pattern ( ($generated@@29 $generated@@43 ($generated@@87 $generated@@287 $generated@@288) ($generated@@46 $generated@@286) $generated@@289))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@290 () Int)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 () T@U)
(declare-fun $generated@@293 () T@U)
(declare-fun $generated@@294 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@295  (=> (and (and ($generated@@29 $generated@@11 ($generated@@15 $generated@@290) $generated@@30 $generated@@291) ($generated@@126 $generated@@290)) (and ($generated@@41 ($generated@@125 ($generated@@52 $generated@@187) $generated@@290)) (= (ControlFlow 0 3) (- 0 2)))) ($generated@@42 $generated@@11 ($generated@@15 (+ $generated@@290 1)) $generated@@30))))
(let (($generated@@296 true))
(let (($generated@@297  (=> (= $generated@@292 ($generated@@201 $generated@@293 $generated@@291 $generated false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@296) (=> (= (ControlFlow 0 4) 3) $generated@@295)))))
(let (($generated@@298  (=> (and (and (and ($generated@@47 $generated@@291) ($generated@@294 $generated@@291)) (<= ($generated@@53 0) $generated@@290)) (and (= 4 $generated@@50) (= (ControlFlow 0 5) 4))) $generated@@297)))
$generated@@298)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
