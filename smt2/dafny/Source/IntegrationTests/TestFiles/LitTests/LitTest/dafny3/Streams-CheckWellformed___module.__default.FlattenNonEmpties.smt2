(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U T@U T@U) Bool)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (Int) T@U)
(declare-fun $generated@@57 (T@U) Int)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@67 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@72 (Int) Int)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@U T@U T@U) Bool)
(declare-fun $generated@@131 (T@U T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@200 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@201 () T@T)
(declare-fun $generated@@202 () T@T)
(declare-fun $generated@@203 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@204 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@205 (T@T T@T) T@T)
(declare-fun $generated@@206 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (! (= ($generated@@20 $generated@@22 ($generated@@21 $generated@@23) $generated@@24) ($generated@@20 $generated@@22 $generated@@23 $generated@@24))
 :pattern ( ($generated@@20 $generated@@22 ($generated@@21 $generated@@23) $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@26 $generated@@28))
)))
(assert (= ($generated@@4 $generated@@32) 3))
(assert  (=> (<= 3 $generated@@29) (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or ($generated@@33 $generated@@40 ($generated@@31 $generated@@32 $generated@@41)) (and (< 3 $generated@@29) (and ($generated@@34 $generated@@32 $generated@@41 ($generated@@35 ($generated@@35 $generated@@40))) ($generated@@9 ($generated@@31 $generated@@5 ($generated@@8 ($generated@@20 $generated@@40 ($generated@@21 $generated@@36) ($generated@@31 $generated@@32 $generated@@41)))))))) (and ($generated@@37 $generated@@40 ($generated@@31 $generated@@32 $generated@@38) ($generated@@31 $generated@@32 $generated@@41)) (= ($generated@@30 $generated@@40 ($generated@@31 $generated@@32 $generated@@41)) ($generated@@31 $generated@@32 ($generated@@39 $generated@@40 ($generated@@21 $generated@@36) ($generated@@31 $generated@@32 $generated@@38) ($generated@@31 $generated@@32 $generated@@41))))))
 :weight 3
 :pattern ( ($generated@@30 $generated@@40 ($generated@@31 $generated@@32 $generated@@41)))
))))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (or ($generated@@42 $generated@@48 $generated@@50) (and (< 1 $generated@@29) ($generated@@34 $generated@@32 $generated@@50 ($generated@@35 ($generated@@35 $generated@@48))))) (and (=> (not ($generated@@43 $generated@@50)) (let (($generated@@51 ($generated@@44 $generated@@50)))
(let (($generated@@52 ($generated@@45 $generated@@32 ($generated@@46 $generated@@50))))
 (=> ($generated@@47 $generated@@52) ($generated@@42 $generated@@48 $generated@@51))))) (= ($generated@@20 $generated@@48 ($generated@@21 $generated@@49) $generated@@50) (ite ($generated@@43 $generated@@50) true (let (($generated@@53 ($generated@@44 $generated@@50)))
(let (($generated@@54 ($generated@@45 $generated@@32 ($generated@@46 $generated@@50))))
 (and ($generated@@47 $generated@@54) ($generated@@20 $generated@@48 $generated@@49 $generated@@53))))))))
 :pattern ( ($generated@@20 $generated@@48 ($generated@@21 $generated@@49) $generated@@50))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 Int) ($generated@@60 Int) ) (!  (=> (and (and (<= 0 $generated@@59) (<= 0 $generated@@60)) (<= (+ $generated@@59 $generated@@60) ($generated@@57 $generated@@58))) (= ($generated@@55 ($generated@@55 $generated@@58 ($generated@@56 $generated@@59)) ($generated@@56 $generated@@60)) ($generated@@55 $generated@@58 ($generated@@56 (+ $generated@@59 $generated@@60)))))
 :pattern ( ($generated@@55 ($generated@@55 $generated@@58 ($generated@@56 $generated@@59)) ($generated@@56 $generated@@60)))
)))
(assert (= ($generated@@61 $generated@@38) $generated@@1))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@63 $generated@@65) ($generated@@62 $generated@@32 $generated@@38 ($generated@@35 $generated@@64) $generated@@65))
 :pattern ( ($generated@@62 $generated@@32 $generated@@38 ($generated@@35 $generated@@64) $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ) (! ($generated@@34 $generated@@32 $generated@@38 ($generated@@35 $generated@@66))
 :pattern ( ($generated@@34 $generated@@32 $generated@@38 ($generated@@35 $generated@@66)))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and ($generated@@34 $generated@@32 $generated@@70 ($generated@@35 ($generated@@35 $generated@@68))) ($generated@@20 $generated@@68 ($generated@@21 $generated@@69) $generated@@70)) (forall (($generated@@71 T@U) ) (! ($generated@@67 $generated@@68 ($generated@@21 $generated@@69) $generated@@71 $generated@@70)
 :pattern ( ($generated@@67 $generated@@68 ($generated@@21 $generated@@69) $generated@@71 $generated@@70))
)))
 :pattern ( ($generated@@20 $generated@@68 ($generated@@21 $generated@@69) $generated@@70))
))))
(assert (forall (($generated@@73 Int) ) (! (= ($generated@@72 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@31 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@31 $generated@@75 $generated@@74))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (and ($generated@@34 $generated@@32 $generated@@78 ($generated@@35 ($generated@@35 $generated@@76))) (forall (($generated@@79 T@U) ) (! ($generated@@67 $generated@@76 ($generated@@21 $generated@@77) $generated@@79 $generated@@78)
 :pattern ( ($generated@@67 $generated@@76 ($generated@@21 $generated@@77) $generated@@79 $generated@@78))
))) ($generated@@20 $generated@@76 ($generated@@21 $generated@@77) $generated@@78))
 :pattern ( ($generated@@20 $generated@@76 ($generated@@21 $generated@@77) $generated@@78))
))))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or ($generated@@37 $generated@@81 $generated@@83 $generated@@84) (and (< 2 $generated@@29) (and (and ($generated@@34 $generated@@32 $generated@@83 ($generated@@35 $generated@@81)) ($generated@@34 $generated@@32 $generated@@84 ($generated@@35 ($generated@@35 $generated@@81)))) ($generated@@20 $generated@@81 ($generated@@21 $generated@@36) $generated@@84)))) (and (and (=> ($generated@@43 $generated@@83) (=> (not ($generated@@43 $generated@@84)) (let (($generated@@85 ($generated@@44 $generated@@84)))
(let (($generated@@86 ($generated@@45 $generated@@32 ($generated@@46 $generated@@84))))
($generated@@37 $generated@@81 ($generated@@44 $generated@@86) $generated@@85))))) (=> (not ($generated@@43 $generated@@83)) (let (($generated@@87 ($generated@@44 $generated@@83)))
($generated@@37 $generated@@81 $generated@@87 $generated@@84)))) (= ($generated@@39 $generated@@81 ($generated@@21 $generated@@82) $generated@@83 $generated@@84) (ite ($generated@@43 $generated@@83) (ite ($generated@@43 $generated@@84) $generated@@38 (let (($generated@@88 ($generated@@44 $generated@@84)))
(let (($generated@@89 ($generated@@45 $generated@@32 ($generated@@46 $generated@@84))))
($generated@@80 ($generated@@46 $generated@@89) ($generated@@39 $generated@@81 $generated@@82 ($generated@@44 $generated@@89) $generated@@88))))) (let (($generated@@90 ($generated@@44 $generated@@83)))
(let (($generated@@91 ($generated@@46 $generated@@83)))
($generated@@80 $generated@@91 ($generated@@39 $generated@@81 $generated@@82 $generated@@90 $generated@@84))))))))
 :pattern ( ($generated@@39 $generated@@81 ($generated@@21 $generated@@82) $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@34 $generated@@32 ($generated@@80 $generated@@94 $generated@@95) ($generated@@35 $generated@@93))  (and ($generated@@92 $generated@@94 $generated@@93) ($generated@@34 $generated@@32 $generated@@95 ($generated@@35 $generated@@93))))
 :pattern ( ($generated@@34 $generated@@32 ($generated@@80 $generated@@94 $generated@@95) ($generated@@35 $generated@@93)))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@43 $generated@@96) (= ($generated@@61 $generated@@96) $generated@@1))
 :pattern ( ($generated@@43 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@47 $generated@@97) (= ($generated@@61 $generated@@97) $generated@@2))
 :pattern ( ($generated@@47 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 ($generated@@45 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@45 $generated@@100 $generated@@99))
)))
(assert (= ($generated@@4 $generated@@101) 4))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or ($generated@@102 $generated@@103 ($generated@@31 $generated@@101 $generated@@105) ($generated@@31 $generated@@32 $generated@@106)) (and (< 2 $generated@@29) ($generated@@34 $generated@@32 $generated@@106 ($generated@@35 ($generated@@35 $generated@@103))))) (and (and (=> (< 0 ($generated@@57 $generated@@105)) (=> (not ($generated@@9 ($generated@@31 $generated@@5 ($generated@@8 ($generated@@43 ($generated@@31 $generated@@32 $generated@@106)))))) (let (($generated@@107 ($generated@@31 $generated@@32 ($generated@@44 ($generated@@31 $generated@@32 $generated@@106)))))
(let (($generated@@108 ($generated@@31 $generated@@32 ($generated@@45 $generated@@32 ($generated@@46 ($generated@@31 $generated@@32 $generated@@106))))))
 (=> ($generated@@47 $generated@@108) ($generated@@102 $generated@@103 ($generated@@55 $generated@@105 ($generated@@56 1)) $generated@@107)))))) (=> (=> (< 0 ($generated@@57 $generated@@105)) (ite ($generated@@43 ($generated@@31 $generated@@32 $generated@@106)) true (let (($generated@@109 ($generated@@31 $generated@@32 ($generated@@44 ($generated@@31 $generated@@32 $generated@@106)))))
(let (($generated@@110 ($generated@@31 $generated@@32 ($generated@@45 $generated@@32 ($generated@@46 ($generated@@31 $generated@@32 $generated@@106))))))
 (and ($generated@@47 $generated@@110) ($generated@@67 $generated@@103 ($generated@@21 $generated@@104) ($generated@@55 $generated@@105 ($generated@@56 1)) $generated@@109)))))) (=> (= ($generated@@72 0) ($generated@@57 $generated@@105)) (forall (($generated@@111 T@U) ) (!  (=> ($generated@@25 $generated@@111 $generated@@105) ($generated@@102 $generated@@103 $generated@@111 $generated@@106))
 :pattern ( ($generated@@67 $generated@@103 ($generated@@21 $generated@@104) $generated@@111 $generated@@106))
))))) (= ($generated@@67 $generated@@103 ($generated@@21 $generated@@104) ($generated@@31 $generated@@101 $generated@@105) ($generated@@31 $generated@@32 $generated@@106))  (and (=> (< 0 ($generated@@57 $generated@@105)) (ite ($generated@@43 ($generated@@31 $generated@@32 $generated@@106)) true (let (($generated@@112 ($generated@@31 $generated@@32 ($generated@@44 ($generated@@31 $generated@@32 $generated@@106)))))
(let (($generated@@113 ($generated@@31 $generated@@32 ($generated@@45 $generated@@32 ($generated@@46 ($generated@@31 $generated@@32 $generated@@106))))))
 (and ($generated@@47 $generated@@113) ($generated@@67 $generated@@103 ($generated@@21 $generated@@104) ($generated@@55 $generated@@105 ($generated@@56 1)) $generated@@112)))))) (=> (= ($generated@@72 0) ($generated@@57 $generated@@105)) (forall (($generated@@114 T@U) ) (!  (=> ($generated@@25 $generated@@114 $generated@@105) ($generated@@67 $generated@@103 ($generated@@21 $generated@@104) $generated@@114 $generated@@106))
 :pattern ( ($generated@@67 $generated@@103 ($generated@@21 $generated@@104) $generated@@114 $generated@@106))
)))))))
 :weight 3
 :pattern ( ($generated@@67 $generated@@103 ($generated@@21 $generated@@104) ($generated@@31 $generated@@101 $generated@@105) ($generated@@31 $generated@@32 $generated@@106)))
))))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@47 $generated@@115) (exists (($generated@@116 T@U) ($generated@@117 T@U) ) (= $generated@@115 ($generated@@80 $generated@@116 $generated@@117))))
 :pattern ( ($generated@@47 $generated@@115))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@43 $generated@@118) (= $generated@@118 $generated@@38))
 :pattern ( ($generated@@43 $generated@@118))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or ($generated@@102 $generated@@119 ($generated@@31 $generated@@101 $generated@@121) $generated@@122) (and (< 2 $generated@@29) ($generated@@34 $generated@@32 $generated@@122 ($generated@@35 ($generated@@35 $generated@@119))))) (and (and (=> (< 0 ($generated@@57 $generated@@121)) (=> (not ($generated@@43 $generated@@122)) (let (($generated@@123 ($generated@@44 $generated@@122)))
(let (($generated@@124 ($generated@@45 $generated@@32 ($generated@@46 $generated@@122))))
 (=> ($generated@@47 $generated@@124) ($generated@@102 $generated@@119 ($generated@@55 $generated@@121 ($generated@@56 1)) $generated@@123)))))) (=> (=> (< 0 ($generated@@57 $generated@@121)) (ite ($generated@@43 $generated@@122) true (let (($generated@@125 ($generated@@44 $generated@@122)))
(let (($generated@@126 ($generated@@45 $generated@@32 ($generated@@46 $generated@@122))))
 (and ($generated@@47 $generated@@126) ($generated@@67 $generated@@119 ($generated@@21 $generated@@120) ($generated@@55 $generated@@121 ($generated@@56 1)) $generated@@125)))))) (=> (= ($generated@@72 0) ($generated@@57 $generated@@121)) (forall (($generated@@127 T@U) ) (!  (=> ($generated@@25 $generated@@127 $generated@@121) ($generated@@102 $generated@@119 $generated@@127 $generated@@122))
 :pattern ( ($generated@@67 $generated@@119 ($generated@@21 $generated@@120) $generated@@127 $generated@@122))
))))) (= ($generated@@67 $generated@@119 ($generated@@21 $generated@@120) ($generated@@31 $generated@@101 $generated@@121) $generated@@122)  (and (=> (< 0 ($generated@@57 $generated@@121)) (ite ($generated@@43 $generated@@122) true (let (($generated@@128 ($generated@@44 $generated@@122)))
(let (($generated@@129 ($generated@@45 $generated@@32 ($generated@@46 $generated@@122))))
 (and ($generated@@47 $generated@@129) ($generated@@67 $generated@@119 ($generated@@21 $generated@@120) ($generated@@55 $generated@@121 ($generated@@56 1)) $generated@@128)))))) (=> (= ($generated@@72 0) ($generated@@57 $generated@@121)) (forall (($generated@@130 T@U) ) (!  (=> ($generated@@25 $generated@@130 $generated@@121) ($generated@@67 $generated@@119 ($generated@@21 $generated@@120) $generated@@130 $generated@@122))
 :pattern ( ($generated@@67 $generated@@119 ($generated@@21 $generated@@120) $generated@@130 $generated@@122))
)))))))
 :weight 3
 :pattern ( ($generated@@67 $generated@@119 ($generated@@21 $generated@@120) ($generated@@31 $generated@@101 $generated@@121) $generated@@122))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@131 ($generated@@98 $generated@@135 $generated@@132) $generated@@133 $generated@@134) ($generated@@62 $generated@@135 $generated@@132 $generated@@133 $generated@@134))
 :pattern ( ($generated@@131 ($generated@@98 $generated@@135 $generated@@132) $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@138 T@U) ) (!  (and (= ($generated@@136 ($generated@@35 $generated@@138)) $generated@@0) (= ($generated@@137 ($generated@@35 $generated@@138)) $generated@@3))
 :pattern ( ($generated@@35 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and ($generated@@139 $generated@@141) (<= ($generated@@57 $generated@@141) ($generated@@57 $generated@@140))) (and (= ($generated@@139 ($generated@@55 $generated@@140 $generated@@141)) ($generated@@139 $generated@@140)) (= ($generated@@57 ($generated@@55 $generated@@140 $generated@@141)) (- ($generated@@57 $generated@@140) ($generated@@57 $generated@@141)))))
 :pattern ( ($generated@@55 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 Int) ) (!  (=> (<= 0 $generated@@142) (and ($generated@@139 ($generated@@56 $generated@@142)) (= ($generated@@57 ($generated@@56 $generated@@142)) $generated@@142)))
 :pattern ( ($generated@@56 $generated@@142))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (or ($generated@@37 $generated@@144 $generated@@146 $generated@@147) (and (< 2 $generated@@29) (and (and (and ($generated@@34 $generated@@32 $generated@@146 ($generated@@35 $generated@@144)) ($generated@@62 $generated@@32 $generated@@146 ($generated@@35 $generated@@144) $generated@@143)) (and ($generated@@34 $generated@@32 $generated@@147 ($generated@@35 ($generated@@35 $generated@@144))) ($generated@@62 $generated@@32 $generated@@147 ($generated@@35 ($generated@@35 $generated@@144)) $generated@@143))) ($generated@@20 $generated@@144 ($generated@@21 $generated@@36) $generated@@147)))) ($generated@@63 $generated@@143)) ($generated@@62 $generated@@32 ($generated@@39 $generated@@144 $generated@@145 $generated@@146 $generated@@147) ($generated@@35 $generated@@144) $generated@@143))
 :pattern ( ($generated@@62 $generated@@32 ($generated@@39 $generated@@144 $generated@@145 $generated@@146 $generated@@147) ($generated@@35 $generated@@144) $generated@@143))
))))
(assert  (=> (<= 3 $generated@@29) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (or ($generated@@33 $generated@@148 $generated@@149) (and (< 3 $generated@@29) (and ($generated@@34 $generated@@32 $generated@@149 ($generated@@35 ($generated@@35 $generated@@148))) ($generated@@20 $generated@@148 ($generated@@21 $generated@@36) $generated@@149)))) (and ($generated@@37 $generated@@148 ($generated@@31 $generated@@32 $generated@@38) $generated@@149) (= ($generated@@30 $generated@@148 $generated@@149) ($generated@@39 $generated@@148 ($generated@@21 $generated@@36) ($generated@@31 $generated@@32 $generated@@38) $generated@@149))))
 :pattern ( ($generated@@30 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (or ($generated@@25 $generated@@150 $generated@@151) (= $generated@@150 $generated@@151)) ($generated@@25 $generated@@151 $generated@@150))
 :pattern ( ($generated@@25 $generated@@150 $generated@@151) ($generated@@25 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@34 $generated@@32 $generated@@153 ($generated@@35 $generated@@152)) (or ($generated@@43 $generated@@153) ($generated@@47 $generated@@153)))
 :pattern ( ($generated@@47 $generated@@153) ($generated@@34 $generated@@32 $generated@@153 ($generated@@35 $generated@@152)))
 :pattern ( ($generated@@43 $generated@@153) ($generated@@34 $generated@@32 $generated@@153 ($generated@@35 $generated@@152)))
)))
(assert  (=> (<= 3 $generated@@29) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (or ($generated@@33 $generated@@155 $generated@@156) (and (< 3 $generated@@29) (and (and ($generated@@34 $generated@@32 $generated@@156 ($generated@@35 ($generated@@35 $generated@@155))) ($generated@@62 $generated@@32 $generated@@156 ($generated@@35 ($generated@@35 $generated@@155)) $generated@@154)) ($generated@@20 $generated@@155 ($generated@@21 $generated@@36) $generated@@156)))) ($generated@@63 $generated@@154)) ($generated@@62 $generated@@32 ($generated@@30 $generated@@155 $generated@@156) ($generated@@35 $generated@@155) $generated@@154))
 :pattern ( ($generated@@62 $generated@@32 ($generated@@30 $generated@@155 $generated@@156) ($generated@@35 $generated@@155) $generated@@154))
))))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (or ($generated@@102 $generated@@157 $generated@@159 $generated@@160) (and (< 2 $generated@@29) ($generated@@34 $generated@@32 $generated@@160 ($generated@@35 ($generated@@35 $generated@@157))))) (and (and (=> (< 0 ($generated@@57 $generated@@159)) (=> (not ($generated@@43 $generated@@160)) (let (($generated@@161 ($generated@@44 $generated@@160)))
(let (($generated@@162 ($generated@@45 $generated@@32 ($generated@@46 $generated@@160))))
 (=> ($generated@@47 $generated@@162) ($generated@@102 $generated@@157 ($generated@@55 $generated@@159 ($generated@@56 1)) $generated@@161)))))) (=> (=> (< 0 ($generated@@57 $generated@@159)) (ite ($generated@@43 $generated@@160) true (let (($generated@@163 ($generated@@44 $generated@@160)))
(let (($generated@@164 ($generated@@45 $generated@@32 ($generated@@46 $generated@@160))))
 (and ($generated@@47 $generated@@164) ($generated@@67 $generated@@157 $generated@@158 ($generated@@55 $generated@@159 ($generated@@56 1)) $generated@@163)))))) (=> (= ($generated@@72 0) ($generated@@57 $generated@@159)) (forall (($generated@@165 T@U) ) (!  (=> ($generated@@25 $generated@@165 $generated@@159) ($generated@@102 $generated@@157 $generated@@165 $generated@@160))
 :pattern ( ($generated@@67 $generated@@157 $generated@@158 $generated@@165 $generated@@160))
))))) (= ($generated@@67 $generated@@157 ($generated@@21 $generated@@158) $generated@@159 $generated@@160)  (and (=> (< 0 ($generated@@57 $generated@@159)) (ite ($generated@@43 $generated@@160) true (let (($generated@@166 ($generated@@44 $generated@@160)))
(let (($generated@@167 ($generated@@45 $generated@@32 ($generated@@46 $generated@@160))))
 (and ($generated@@47 $generated@@167) ($generated@@67 $generated@@157 $generated@@158 ($generated@@55 $generated@@159 ($generated@@56 1)) $generated@@166)))))) (=> (= ($generated@@72 0) ($generated@@57 $generated@@159)) (forall (($generated@@168 T@U) ) (!  (=> ($generated@@25 $generated@@168 $generated@@159) ($generated@@67 $generated@@157 $generated@@158 $generated@@168 $generated@@160))
 :pattern ( ($generated@@67 $generated@@157 $generated@@158 $generated@@168 $generated@@160))
)))))))
 :pattern ( ($generated@@67 $generated@@157 ($generated@@21 $generated@@158) $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@92 ($generated@@98 $generated@@171 $generated@@169) $generated@@170) ($generated@@34 $generated@@171 $generated@@169 $generated@@170))
 :pattern ( ($generated@@92 ($generated@@98 $generated@@171 $generated@@169) $generated@@170))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (or ($generated@@37 $generated@@172 $generated@@174 $generated@@175) (and (< 2 $generated@@29) (and (and ($generated@@34 $generated@@32 $generated@@174 ($generated@@35 $generated@@172)) ($generated@@34 $generated@@32 $generated@@175 ($generated@@35 ($generated@@35 $generated@@172)))) ($generated@@20 $generated@@172 ($generated@@21 $generated@@36) $generated@@175)))) ($generated@@34 $generated@@32 ($generated@@39 $generated@@172 $generated@@173 $generated@@174 $generated@@175) ($generated@@35 $generated@@172)))
 :pattern ( ($generated@@39 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ) (! (<= 0 ($generated@@57 $generated@@176))
 :pattern ( ($generated@@57 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@61 ($generated@@80 $generated@@177 $generated@@178)) $generated@@2)
 :pattern ( ($generated@@80 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@46 ($generated@@80 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@80 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@44 ($generated@@80 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@80 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@183 ($generated@@35 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@35 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@T) ) (! (= ($generated@@45 $generated@@186 ($generated@@98 $generated@@186 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@98 $generated@@186 $generated@@185))
)))
(assert  (=> (<= 2 $generated@@29) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and ($generated@@34 $generated@@32 $generated@@189 ($generated@@35 ($generated@@35 $generated@@187))) (= $generated@@190 ($generated@@56 0))) ($generated@@67 $generated@@187 $generated@@188 $generated@@190 $generated@@189))
 :pattern ( ($generated@@67 $generated@@187 $generated@@188 $generated@@190 $generated@@189))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@191 $generated@@192) (or (not (= $generated@@191 $generated@@192)) (not true))) (=> (and ($generated@@139 $generated@@191) (not ($generated@@139 $generated@@192))) ($generated@@25 $generated@@191 $generated@@192))) (=> (and ($generated@@139 $generated@@191) ($generated@@139 $generated@@192)) (= ($generated@@25 $generated@@191 $generated@@192) (< ($generated@@57 $generated@@191) ($generated@@57 $generated@@192))))) (=> (and ($generated@@25 $generated@@191 $generated@@192) ($generated@@139 $generated@@192)) ($generated@@139 $generated@@191)))
 :pattern ( ($generated@@25 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@67 $generated@@193 ($generated@@21 $generated@@194) $generated@@195 $generated@@196) ($generated@@67 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
 :pattern ( ($generated@@67 $generated@@193 ($generated@@21 $generated@@194) $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@63 $generated@@199) (and ($generated@@47 $generated@@197) ($generated@@62 $generated@@32 $generated@@197 ($generated@@35 $generated@@198) $generated@@199))) ($generated@@131 ($generated@@46 $generated@@197) $generated@@198 $generated@@199))
 :pattern ( ($generated@@131 ($generated@@46 $generated@@197) $generated@@198 $generated@@199))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@200 $generated@@210 $generated@@211 $generated@@212 ($generated@@206 $generated@@210 $generated@@211 $generated@@212 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@215 $generated@@216) $generated@@213)
 :weight 0
)) (and (forall (($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@200 $generated@@217 $generated@@218 $generated@@219 ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@T) ($generated@@227 T@T) ($generated@@228 T@T) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@200 $generated@@226 $generated@@227 $generated@@228 ($generated@@206 $generated@@226 $generated@@227 $generated@@228 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@200 $generated@@226 $generated@@227 $generated@@228 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)))) (= ($generated@@4 $generated@@201) 5)) (= ($generated@@4 $generated@@202) 6)) (forall (($generated@@235 T@T) ($generated@@236 T@T) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (= ($generated@@204 $generated@@235 $generated@@236 ($generated@@207 $generated@@235 $generated@@236 $generated@@238 $generated@@239 $generated@@237) $generated@@239) $generated@@237)
 :weight 0
))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or (= $generated@@244 $generated@@245) (= ($generated@@204 $generated@@240 $generated@@241 ($generated@@207 $generated@@240 $generated@@241 $generated@@243 $generated@@244 $generated@@242) $generated@@245) ($generated@@204 $generated@@240 $generated@@241 $generated@@243 $generated@@245)))
 :weight 0
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (= ($generated@@4 ($generated@@205 $generated@@246 $generated@@247)) 7))) (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (! (= ($generated@@208 ($generated@@205 $generated@@248 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@205 $generated@@248 $generated@@249))
))) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@209 ($generated@@205 $generated@@250 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@205 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (= ($generated@@9 ($generated@@200 $generated@@201 $generated@@202 $generated@@5 ($generated@@203 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))  (=> (and (or (not (= $generated@@256 $generated@@252)) (not true)) ($generated@@9 ($generated@@45 $generated@@5 ($generated@@204 $generated@@202 $generated@@101 ($generated@@204 $generated@@201 ($generated@@205 $generated@@202 $generated@@101) $generated@@253 $generated@@256) $generated@@254)))) $generated@@255))
 :pattern ( ($generated@@200 $generated@@201 $generated@@202 $generated@@5 ($generated@@203 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (= ($generated@@39 $generated@@258 ($generated@@21 $generated@@259) $generated@@260 $generated@@261) ($generated@@39 $generated@@258 $generated@@259 $generated@@260 $generated@@261))
 :pattern ( ($generated@@39 $generated@@258 ($generated@@21 $generated@@259) $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> ($generated@@92 $generated@@263 ($generated@@35 $generated@@262)) (and (= ($generated@@98 $generated@@32 ($generated@@45 $generated@@32 $generated@@263)) $generated@@263) ($generated@@34 $generated@@32 ($generated@@45 $generated@@32 $generated@@263) ($generated@@35 $generated@@262))))
 :pattern ( ($generated@@92 $generated@@263 ($generated@@35 $generated@@262)))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> ($generated@@139 $generated@@264) (= $generated@@264 ($generated@@56 ($generated@@57 $generated@@264))))
 :pattern ( ($generated@@57 $generated@@264))
 :pattern ( ($generated@@139 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and ($generated@@63 $generated@@267) (and ($generated@@47 $generated@@265) ($generated@@62 $generated@@32 $generated@@265 ($generated@@35 $generated@@266) $generated@@267))) ($generated@@62 $generated@@32 ($generated@@44 $generated@@265) ($generated@@35 $generated@@266) $generated@@267))
 :pattern ( ($generated@@62 $generated@@32 ($generated@@44 $generated@@265) ($generated@@35 $generated@@266) $generated@@267))
)))
(assert  (=> (<= 3 $generated@@29) (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (or ($generated@@33 $generated@@268 $generated@@269) (and (< 3 $generated@@29) (and ($generated@@34 $generated@@32 $generated@@269 ($generated@@35 ($generated@@35 $generated@@268))) ($generated@@20 $generated@@268 ($generated@@21 $generated@@36) $generated@@269)))) ($generated@@34 $generated@@32 ($generated@@30 $generated@@268 $generated@@269) ($generated@@35 $generated@@268)))
 :pattern ( ($generated@@30 $generated@@268 $generated@@269))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and ($generated@@139 $generated@@271) (<= ($generated@@57 $generated@@271) ($generated@@57 $generated@@270))) (or (and (= $generated@@271 ($generated@@56 0)) (= ($generated@@55 $generated@@270 $generated@@271) $generated@@270)) (and (or (not (= $generated@@271 ($generated@@56 0))) (not true)) ($generated@@25 ($generated@@55 $generated@@270 $generated@@271) $generated@@270))))
 :pattern ( ($generated@@55 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@98 $generated@@6 ($generated@@10 ($generated@@72 $generated@@272))) ($generated@@31 $generated@@101 ($generated@@98 $generated@@6 ($generated@@10 $generated@@272))))
 :pattern ( ($generated@@98 $generated@@6 ($generated@@10 ($generated@@72 $generated@@272))))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@T) ) (! (= ($generated@@98 $generated@@274 ($generated@@31 $generated@@274 $generated@@273)) ($generated@@31 $generated@@101 ($generated@@98 $generated@@274 $generated@@273)))
 :pattern ( ($generated@@98 $generated@@274 ($generated@@31 $generated@@274 $generated@@273)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> ($generated@@63 $generated@@278) (= ($generated@@62 $generated@@32 ($generated@@80 $generated@@276 $generated@@277) ($generated@@35 $generated@@275) $generated@@278)  (and ($generated@@131 $generated@@276 $generated@@275 $generated@@278) ($generated@@62 $generated@@32 $generated@@277 ($generated@@35 $generated@@275) $generated@@278))))
 :pattern ( ($generated@@62 $generated@@32 ($generated@@80 $generated@@276 $generated@@277) ($generated@@35 $generated@@275) $generated@@278))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@286  (=> (= $generated@@279 ($generated@@31 $generated@@32 $generated@@38)) (=> (and ($generated@@62 $generated@@32 $generated@@279 ($generated@@35 $generated@@280) $generated@@281) ($generated@@62 $generated@@32 $generated@@282 ($generated@@35 ($generated@@35 $generated@@280)) $generated@@281)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@42 $generated@@280 $generated@@282) (or ($generated@@20 $generated@@280 ($generated@@21 $generated@@36) $generated@@282) (=> ($generated@@43 $generated@@282) ($generated@@9 ($generated@@31 $generated@@5 ($generated@@8 true))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@42 $generated@@280 $generated@@282) (or ($generated@@20 $generated@@280 ($generated@@21 $generated@@36) $generated@@282) (=> (not ($generated@@43 $generated@@282)) (let (($generated@@287 ($generated@@45 $generated@@32 ($generated@@46 $generated@@282))))
($generated@@47 $generated@@287)))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@42 $generated@@280 $generated@@282) (or ($generated@@20 $generated@@280 ($generated@@21 $generated@@36) $generated@@282) (=> (not ($generated@@43 $generated@@282)) (let (($generated@@288 ($generated@@44 $generated@@282)))
($generated@@20 $generated@@280 ($generated@@21 ($generated@@21 $generated@@36)) $generated@@288))))))))))))
(let (($generated@@289 true))
(let (($generated@@290  (=> (and (and (= $generated@@283 ($generated@@203 $generated@@284 $generated@@281 $generated false)) ($generated@@62 $generated@@32 $generated@@282 ($generated@@35 ($generated@@35 $generated@@280)) $generated@@281)) (and ($generated@@42 $generated@@280 $generated@@282) ($generated@@20 $generated@@280 ($generated@@21 $generated@@36) $generated@@282))) (and (=> (= (ControlFlow 0 6) 1) $generated@@289) (=> (= (ControlFlow 0 6) 3) $generated@@286)))))
(let (($generated@@291  (=> (and (and (and ($generated@@63 $generated@@281) ($generated@@285 $generated@@281)) ($generated@@34 $generated@@32 $generated@@282 ($generated@@35 ($generated@@35 $generated@@280)))) (and (= 3 $generated@@29) (= (ControlFlow 0 7) 6))) $generated@@290)))
$generated@@291)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
