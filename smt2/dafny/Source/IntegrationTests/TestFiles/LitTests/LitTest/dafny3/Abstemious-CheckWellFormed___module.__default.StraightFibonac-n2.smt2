(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (Int) Int)
(declare-fun $generated@@27 (T@U Int T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U Int) Int)
(declare-fun $generated@@40 (Int) Bool)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@64 (T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@92 (T@U Int) T@U)
(declare-fun $generated@@93 (Int) Bool)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@T) T@T)
(declare-fun $generated@@133 (T@T) T@T)
(declare-fun $generated@@194 () T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@29) 3))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 Int) ($generated@@37 T@U) ) (!  (=> (or ($generated@@27 $generated@@34 ($generated@@26 $generated@@36) $generated@@37) (and (< 1 $generated@@23) (and (<= ($generated@@26 0) $generated@@36) ($generated@@28 $generated@@29 $generated@@37 ($generated@@30 $generated@@34))))) (and (and (=> (= ($generated@@26 $generated@@36) ($generated@@26 0)) ($generated@@31 $generated@@37)) (=> (or (not (= ($generated@@26 $generated@@36) ($generated@@26 0))) (not true)) (and ($generated@@31 $generated@@37) ($generated@@27 $generated@@34 ($generated@@26 (- $generated@@36 1)) ($generated@@32 $generated@@37))))) (= ($generated@@24 $generated@@34 ($generated@@25 $generated@@35) ($generated@@26 $generated@@36) $generated@@37) (ite (= ($generated@@26 $generated@@36) ($generated@@26 0)) ($generated@@33 $generated@@37) ($generated@@24 $generated@@34 ($generated@@25 $generated@@35) ($generated@@26 (- $generated@@36 1)) ($generated@@32 $generated@@37))))))
 :weight 3
 :pattern ( ($generated@@24 $generated@@34 ($generated@@25 $generated@@35) ($generated@@26 $generated@@36) $generated@@37))
))))
(assert (= ($generated@@38 $generated) $generated@@0))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (or ($generated@@40 $generated@@42) (and (< 0 $generated@@23) (<= ($generated@@26 0) $generated@@42))) (and (=> (<= 2 $generated@@42) (and ($generated@@40 (- $generated@@42 2)) ($generated@@40 (- $generated@@42 1)))) (= ($generated@@39 ($generated@@25 $generated@@41) $generated@@42) (ite (< $generated@@42 2) $generated@@42 (+ ($generated@@39 $generated@@41 (- $generated@@42 2)) ($generated@@39 $generated@@41 (- $generated@@42 1)))))))
 :pattern ( ($generated@@39 ($generated@@25 $generated@@41) $generated@@42))
))))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! ($generated@@43 $generated@@9 $generated@@45 $generated@@44 $generated@@46)
 :pattern ( ($generated@@43 $generated@@9 $generated@@45 $generated@@44 $generated@@46))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@47 T@U) ($generated@@48 Int) ) (!  (=> (or ($generated@@40 $generated@@48) (and (< 0 $generated@@23) (<= ($generated@@26 0) $generated@@48))) (<= ($generated@@26 0) ($generated@@39 $generated@@47 $generated@@48)))
 :pattern ( ($generated@@39 $generated@@47 $generated@@48))
))))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@50 ($generated@@30 $generated@@49)) ($generated@@31 $generated@@50))
 :pattern ( ($generated@@31 $generated@@50) ($generated@@28 $generated@@29 $generated@@50 ($generated@@30 $generated@@49)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 Int) ($generated@@54 T@U) ) (!  (=> (or ($generated@@27 $generated@@51 $generated@@53 $generated@@54) (and (< 1 $generated@@23) (and (<= ($generated@@26 0) $generated@@53) ($generated@@28 $generated@@29 $generated@@54 ($generated@@30 $generated@@51))))) (and (and (=> (= $generated@@53 ($generated@@26 0)) ($generated@@31 $generated@@54)) (=> (or (not (= $generated@@53 ($generated@@26 0))) (not true)) (and ($generated@@31 $generated@@54) ($generated@@27 $generated@@51 (- $generated@@53 1) ($generated@@32 $generated@@54))))) (= ($generated@@24 $generated@@51 ($generated@@25 $generated@@52) $generated@@53 $generated@@54) (ite (= $generated@@53 ($generated@@26 0)) ($generated@@33 $generated@@54) ($generated@@24 $generated@@51 $generated@@52 (- $generated@@53 1) ($generated@@32 $generated@@54))))))
 :pattern ( ($generated@@24 $generated@@51 ($generated@@25 $generated@@52) $generated@@53 $generated@@54))
))))
(assert (forall (($generated@@55 Int) ) (! (= ($generated@@26 $generated@@55) $generated@@55)
 :pattern ( ($generated@@26 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@56 $generated@@58 $generated@@57))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 Int) ($generated@@63 T@U) ) (!  (=> (or ($generated@@27 $generated@@60 $generated@@62 $generated@@63) (and (< 1 $generated@@23) (and (<= ($generated@@26 0) $generated@@62) ($generated@@28 $generated@@29 $generated@@63 ($generated@@30 $generated@@60))))) ($generated@@59 ($generated@@24 $generated@@60 $generated@@61 $generated@@62 $generated@@63) $generated@@60))
 :pattern ( ($generated@@24 $generated@@60 $generated@@61 $generated@@62 $generated@@63))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 Int) ($generated@@70 T@U) ) (!  (=> (and (or ($generated@@27 $generated@@67 $generated@@69 $generated@@70) (and (< 1 $generated@@23) (and (<= ($generated@@26 0) $generated@@69) (and ($generated@@28 $generated@@29 $generated@@70 ($generated@@30 $generated@@67)) ($generated@@43 $generated@@29 $generated@@70 ($generated@@30 $generated@@67) $generated@@66))))) ($generated@@65 $generated@@66)) ($generated@@64 ($generated@@24 $generated@@67 $generated@@68 $generated@@69 $generated@@70) $generated@@67 $generated@@66))
 :pattern ( ($generated@@64 ($generated@@24 $generated@@67 $generated@@68 $generated@@69 $generated@@70) $generated@@67 $generated@@66))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@71 $generated@@73 $generated@@74) ($generated@@30 $generated@@72))  (and ($generated@@59 $generated@@73 $generated@@72) ($generated@@28 $generated@@29 $generated@@74 ($generated@@30 $generated@@72))))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@71 $generated@@73 $generated@@74) ($generated@@30 $generated@@72)))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@31 $generated@@76) (= ($generated@@75 $generated@@76) $generated@@4))
 :pattern ( ($generated@@31 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@77 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@31 $generated@@81) (exists (($generated@@82 T@U) ($generated@@83 T@U) ) (= $generated@@81 ($generated@@71 $generated@@82 $generated@@83))))
 :pattern ( ($generated@@31 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@28 $generated@@9 $generated@@84 $generated@@44) (<= ($generated@@26 0) ($generated@@14 $generated@@84)))
 :pattern ( ($generated@@28 $generated@@9 $generated@@84 $generated@@44))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@64 ($generated@@78 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@43 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@64 ($generated@@78 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ) (!  (and (= ($generated@@38 ($generated@@30 $generated@@90)) $generated@@3) (= ($generated@@89 ($generated@@30 $generated@@90)) $generated@@6))
 :pattern ( ($generated@@30 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@59 $generated@@91 $generated@@44) (and (= ($generated@@78 $generated@@9 ($generated@@77 $generated@@9 $generated@@91)) $generated@@91) ($generated@@28 $generated@@9 ($generated@@77 $generated@@9 $generated@@91) $generated@@44)))
 :pattern ( ($generated@@59 $generated@@91 $generated@@44))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@94 T@U) ($generated@@95 Int) ) (!  (=> (or ($generated@@93 $generated@@95) (and (< 1 $generated@@23) (<= ($generated@@26 0) $generated@@95))) ($generated@@28 $generated@@29 ($generated@@92 $generated@@94 $generated@@95) ($generated@@30 $generated)))
 :pattern ( ($generated@@92 $generated@@94 $generated@@95))
))))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@96 T@U) ($generated@@97 Int) ) (!  (=> (or ($generated@@40 ($generated@@26 $generated@@97)) (and (< 0 $generated@@23) (<= ($generated@@26 0) $generated@@97))) (and (=> (not ($generated@@12 ($generated@@56 $generated@@8 ($generated@@11 (< $generated@@97 2))))) (and ($generated@@40 ($generated@@26 (- $generated@@97 2))) ($generated@@40 ($generated@@26 (- $generated@@97 1))))) (= ($generated@@39 ($generated@@25 $generated@@96) ($generated@@26 $generated@@97)) (ite (< $generated@@97 2) $generated@@97 (+ ($generated@@39 ($generated@@25 $generated@@96) ($generated@@26 (- $generated@@97 2))) ($generated@@39 ($generated@@25 $generated@@96) ($generated@@26 (- $generated@@97 1))))))))
 :weight 3
 :pattern ( ($generated@@39 ($generated@@25 $generated@@96) ($generated@@26 $generated@@97)))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 Int) ($generated@@101 T@U) ) (!  (=> (or ($generated@@27 $generated@@98 ($generated@@26 $generated@@100) ($generated@@56 $generated@@29 $generated@@101)) (and (< 1 $generated@@23) (and (<= ($generated@@26 0) $generated@@100) ($generated@@28 $generated@@29 $generated@@101 ($generated@@30 $generated@@98))))) (and (and (=> (= ($generated@@26 $generated@@100) ($generated@@26 0)) ($generated@@31 ($generated@@56 $generated@@29 $generated@@101))) (=> (or (not (= ($generated@@26 $generated@@100) ($generated@@26 0))) (not true)) (and ($generated@@31 ($generated@@56 $generated@@29 $generated@@101)) ($generated@@27 $generated@@98 ($generated@@26 (- $generated@@100 1)) ($generated@@56 $generated@@29 ($generated@@32 ($generated@@56 $generated@@29 $generated@@101))))))) (= ($generated@@24 $generated@@98 ($generated@@25 $generated@@99) ($generated@@26 $generated@@100) ($generated@@56 $generated@@29 $generated@@101)) (ite (= ($generated@@26 $generated@@100) ($generated@@26 0)) ($generated@@33 ($generated@@56 $generated@@29 $generated@@101)) ($generated@@24 $generated@@98 ($generated@@25 $generated@@99) ($generated@@26 (- $generated@@100 1)) ($generated@@56 $generated@@29 ($generated@@32 ($generated@@56 $generated@@29 $generated@@101))))))))
 :weight 3
 :pattern ( ($generated@@24 $generated@@98 ($generated@@25 $generated@@99) ($generated@@26 $generated@@100) ($generated@@56 $generated@@29 $generated@@101)))
))))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@59 $generated@@102 $generated) (and (= ($generated@@78 $generated@@9 ($generated@@77 $generated@@9 $generated@@102)) $generated@@102) ($generated@@28 $generated@@9 ($generated@@77 $generated@@9 $generated@@102) $generated)))
 :pattern ( ($generated@@59 $generated@@102 $generated))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@59 ($generated@@78 $generated@@105 $generated@@103) $generated@@104) ($generated@@28 $generated@@105 $generated@@103 $generated@@104))
 :pattern ( ($generated@@59 ($generated@@78 $generated@@105 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@75 ($generated@@71 $generated@@106 $generated@@107)) $generated@@4)
 :pattern ( ($generated@@71 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@33 ($generated@@71 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@71 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@32 ($generated@@71 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@71 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@112 ($generated@@30 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@30 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@77 $generated@@115 ($generated@@78 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@78 $generated@@115 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 Int) ) (! (= ($generated@@39 ($generated@@25 $generated@@116) $generated@@117) ($generated@@39 $generated@@116 $generated@@117))
 :pattern ( ($generated@@39 ($generated@@25 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 Int) ) (! (= ($generated@@92 ($generated@@25 $generated@@118) $generated@@119) ($generated@@92 $generated@@118 $generated@@119))
 :pattern ( ($generated@@92 ($generated@@25 $generated@@118) $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@65 $generated@@122) (and ($generated@@31 $generated@@120) ($generated@@43 $generated@@29 $generated@@120 ($generated@@30 $generated@@121) $generated@@122))) ($generated@@64 ($generated@@33 $generated@@120) $generated@@121 $generated@@122))
 :pattern ( ($generated@@64 ($generated@@33 $generated@@120) $generated@@121 $generated@@122))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@123 $generated@@134 $generated@@135 $generated@@136 ($generated@@130 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@123 $generated@@141 $generated@@142 $generated@@143 ($generated@@130 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@123 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@123 $generated@@150 $generated@@151 $generated@@152 ($generated@@130 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))) (= ($generated@@7 $generated@@124) 4)) (= ($generated@@7 $generated@@125) 5)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@127 $generated@@159 $generated@@160 ($generated@@131 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@163) $generated@@161)
 :weight 0
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@168 $generated@@169) (= ($generated@@127 $generated@@164 $generated@@165 ($generated@@131 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@127 $generated@@164 $generated@@165 $generated@@167 $generated@@169)))
 :weight 0
))) (= ($generated@@7 $generated@@128) 6)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@7 ($generated@@129 $generated@@170 $generated@@171)) 7))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@132 ($generated@@129 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@129 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@133 ($generated@@129 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@129 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@12 ($generated@@123 $generated@@124 $generated@@125 $generated@@8 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (or (not (= $generated@@180 $generated@@176)) (not true)) ($generated@@12 ($generated@@77 $generated@@8 ($generated@@127 $generated@@125 $generated@@128 ($generated@@127 $generated@@124 ($generated@@129 $generated@@125 $generated@@128) $generated@@177 $generated@@180) $generated@@178)))) $generated@@179))
 :pattern ( ($generated@@123 $generated@@124 $generated@@125 $generated@@8 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Int) ($generated@@185 T@U) ) (! (= ($generated@@24 $generated@@182 ($generated@@25 $generated@@183) $generated@@184 $generated@@185) ($generated@@24 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
 :pattern ( ($generated@@24 $generated@@182 ($generated@@25 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@59 $generated@@187 ($generated@@30 $generated@@186)) (and (= ($generated@@78 $generated@@29 ($generated@@77 $generated@@29 $generated@@187)) $generated@@187) ($generated@@28 $generated@@29 ($generated@@77 $generated@@29 $generated@@187) ($generated@@30 $generated@@186))))
 :pattern ( ($generated@@59 $generated@@187 ($generated@@30 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and ($generated@@65 $generated@@190) (and ($generated@@31 $generated@@188) ($generated@@43 $generated@@29 $generated@@188 ($generated@@30 $generated@@189) $generated@@190))) ($generated@@43 $generated@@29 ($generated@@32 $generated@@188) ($generated@@30 $generated@@189) $generated@@190))
 :pattern ( ($generated@@43 $generated@@29 ($generated@@32 $generated@@188) ($generated@@30 $generated@@189) $generated@@190))
)))
(assert (= ($generated@@38 $generated@@44) $generated@@2))
(assert (= ($generated@@89 $generated@@44) $generated@@5))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@78 $generated@@9 ($generated@@13 ($generated@@26 $generated@@191))) ($generated@@56 $generated@@128 ($generated@@78 $generated@@9 ($generated@@13 $generated@@191))))
 :pattern ( ($generated@@78 $generated@@9 ($generated@@13 ($generated@@26 $generated@@191))))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@78 $generated@@193 ($generated@@56 $generated@@193 $generated@@192)) ($generated@@56 $generated@@128 ($generated@@78 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@78 $generated@@193 ($generated@@56 $generated@@193 $generated@@192)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@195 T@U) ($generated@@196 Int) ) (!  (=> (or ($generated@@93 $generated@@196) (and (< 1 $generated@@23) (<= ($generated@@26 0) $generated@@196))) (and (and ($generated@@40 $generated@@196) ($generated@@93 (+ $generated@@196 1))) (= ($generated@@92 ($generated@@25 $generated@@195) $generated@@196) ($generated@@71 ($generated@@78 $generated@@9 ($generated@@13 ($generated@@39 ($generated@@25 $generated@@194) $generated@@196))) ($generated@@92 $generated@@195 (+ $generated@@196 1))))))
 :pattern ( ($generated@@92 ($generated@@25 $generated@@195) $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! ($generated@@43 $generated@@9 $generated@@198 $generated $generated@@197)
 :pattern ( ($generated@@43 $generated@@9 $generated@@198 $generated $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@65 $generated@@202) (= ($generated@@43 $generated@@29 ($generated@@71 $generated@@200 $generated@@201) ($generated@@30 $generated@@199) $generated@@202)  (and ($generated@@64 $generated@@200 $generated@@199 $generated@@202) ($generated@@43 $generated@@29 $generated@@201 ($generated@@30 $generated@@199) $generated@@202))))
 :pattern ( ($generated@@43 $generated@@29 ($generated@@71 $generated@@200 $generated@@201) ($generated@@30 $generated@@199) $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ) (! ($generated@@28 $generated@@9 $generated@@203 $generated)
 :pattern ( ($generated@@28 $generated@@9 $generated@@203 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 (T@U) Bool)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@212  (=> (= $generated@@204 ($generated@@126 $generated@@205 $generated@@206 $generated@@1 false)) (=> (and (and ($generated@@65 $generated@@207) ($generated@@208 $generated@@207)) (= $generated@@206 $generated@@207)) (=> (and (and (and ($generated@@43 $generated@@9 ($generated@@13 $generated@@209) $generated@@44 $generated@@207) ($generated@@43 $generated@@9 ($generated@@13 $generated@@210) $generated@@44 $generated@@207)) (and ($generated@@93 $generated@@210) ($generated@@31 ($generated@@92 ($generated@@25 $generated@@194) $generated@@210)))) (and (and (= $generated@@211 ($generated@@92 ($generated@@25 $generated@@194) $generated@@210)) ($generated@@43 $generated@@29 $generated@@211 ($generated@@30 $generated) $generated@@207)) (and ($generated@@27 $generated $generated@@209 ($generated@@92 ($generated@@25 $generated@@194) $generated@@210)) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@28 $generated@@9 ($generated@@13 (+ $generated@@210 $generated@@209)) $generated@@44))))))
(let (($generated@@213  (=> (and ($generated@@65 $generated@@206) ($generated@@208 $generated@@206)) (=> (and (and (<= ($generated@@26 0) $generated@@209) (<= ($generated@@26 0) $generated@@210)) (and (= 2 $generated@@23) (= (ControlFlow 0 3) 2))) $generated@@212))))
$generated@@213)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
