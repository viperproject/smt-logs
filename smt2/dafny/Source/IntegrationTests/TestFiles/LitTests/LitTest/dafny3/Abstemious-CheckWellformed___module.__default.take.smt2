(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@42 () Int)
(declare-fun $generated@@43 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (Int) Int)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U Int T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@132 (T@U) Int)
(declare-fun $generated@@133 (T@U) Int)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@148 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@149 (T@T T@T) T@T)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! ($generated@@25 $generated@@11 $generated@@27 $generated@@26 $generated@@28)
 :pattern ( ($generated@@25 $generated@@11 $generated@@27 $generated@@26 $generated@@28))
)))
(assert (= ($generated@@29 $generated@@30) $generated@@3))
(assert (= ($generated@@9 $generated@@33) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35)) ($generated@@31 $generated@@36))
 :pattern ( ($generated@@31 $generated@@36) ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35)))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@38 $generated@@40) ($generated@@25 $generated@@33 $generated@@30 ($generated@@37 $generated@@39) $generated@@40))
 :pattern ( ($generated@@25 $generated@@33 $generated@@30 ($generated@@37 $generated@@39) $generated@@40))
)))
(assert (forall (($generated@@41 T@U) ) (! ($generated@@32 $generated@@33 $generated@@30 ($generated@@37 $generated@@41))
 :pattern ( ($generated@@32 $generated@@33 $generated@@30 ($generated@@37 $generated@@41)))
)))
(assert (= ($generated@@9 $generated@@50) 4))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 Int) ($generated@@55 T@U) ) (!  (=> (or ($generated@@47 $generated@@52 ($generated@@45 $generated@@54) ($generated@@46 $generated@@33 $generated@@55)) (and (< 1 $generated@@42) (and (<= ($generated@@45 0) $generated@@54) ($generated@@32 $generated@@33 $generated@@55 ($generated@@34 $generated@@52))))) (and (=> (or (not (= ($generated@@45 $generated@@54) ($generated@@45 0))) (not true)) (and ($generated@@31 ($generated@@46 $generated@@33 $generated@@55)) (and ($generated@@31 ($generated@@46 $generated@@33 $generated@@55)) ($generated@@47 $generated@@52 ($generated@@45 (- $generated@@54 1)) ($generated@@46 $generated@@33 ($generated@@48 ($generated@@46 $generated@@33 $generated@@55))))))) (= ($generated@@43 $generated@@52 ($generated@@44 $generated@@53) ($generated@@45 $generated@@54) ($generated@@46 $generated@@33 $generated@@55)) (ite (= ($generated@@45 $generated@@54) ($generated@@45 0)) $generated@@30 ($generated@@49 ($generated@@46 $generated@@50 ($generated@@51 ($generated@@46 $generated@@33 $generated@@55))) ($generated@@46 $generated@@33 ($generated@@43 $generated@@52 ($generated@@44 $generated@@53) ($generated@@45 (- $generated@@54 1)) ($generated@@46 $generated@@33 ($generated@@48 ($generated@@46 $generated@@33 $generated@@55))))))))))
 :weight 3
 :pattern ( ($generated@@43 $generated@@52 ($generated@@44 $generated@@53) ($generated@@45 $generated@@54) ($generated@@46 $generated@@33 $generated@@55)))
))))
(assert (forall (($generated@@56 Int) ) (! (= ($generated@@45 $generated@@56) $generated@@56)
 :pattern ( ($generated@@45 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@46 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@46 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@32 $generated@@33 ($generated@@49 $generated@@61 $generated@@62) ($generated@@37 $generated@@60))  (and ($generated@@59 $generated@@61 $generated@@60) ($generated@@32 $generated@@33 $generated@@62 ($generated@@37 $generated@@60))))
 :pattern ( ($generated@@32 $generated@@33 ($generated@@49 $generated@@61 $generated@@62) ($generated@@37 $generated@@60)))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@32 $generated@@33 ($generated@@63 $generated@@65 $generated@@66) ($generated@@34 $generated@@64))  (and ($generated@@59 $generated@@65 $generated@@64) ($generated@@32 $generated@@33 $generated@@66 ($generated@@34 $generated@@64))))
 :pattern ( ($generated@@32 $generated@@33 ($generated@@63 $generated@@65 $generated@@66) ($generated@@34 $generated@@64)))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@29 $generated@@68) $generated@@3))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@29 $generated@@70) $generated@@4))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@31 $generated@@71) (= ($generated@@29 $generated@@71) $generated@@5))
 :pattern ( ($generated@@31 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@72 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@72 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@69 $generated@@76) (exists (($generated@@77 T@U) ($generated@@78 T@U) ) (= $generated@@76 ($generated@@49 $generated@@77 $generated@@78))))
 :pattern ( ($generated@@69 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@31 $generated@@79) (exists (($generated@@80 T@U) ($generated@@81 T@U) ) (= $generated@@79 ($generated@@63 $generated@@80 $generated@@81))))
 :pattern ( ($generated@@31 $generated@@79))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 Int) ($generated@@86 T@U) ) (!  (=> (and (or ($generated@@47 $generated@@83 $generated@@85 $generated@@86) (and (< 1 $generated@@42) (and (<= ($generated@@45 0) $generated@@85) (and ($generated@@32 $generated@@33 $generated@@86 ($generated@@34 $generated@@83)) ($generated@@25 $generated@@33 $generated@@86 ($generated@@34 $generated@@83) $generated@@82))))) ($generated@@38 $generated@@82)) ($generated@@25 $generated@@33 ($generated@@43 $generated@@83 $generated@@84 $generated@@85 $generated@@86) ($generated@@37 $generated@@83) $generated@@82))
 :pattern ( ($generated@@25 $generated@@33 ($generated@@43 $generated@@83 $generated@@84 $generated@@85 $generated@@86) ($generated@@37 $generated@@83) $generated@@82))
))))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ($generated@@90 T@U) ) (!  (=> (or ($generated@@47 $generated@@87 $generated@@89 $generated@@90) (and (< 1 $generated@@42) (and (<= ($generated@@45 0) $generated@@89) ($generated@@32 $generated@@33 $generated@@90 ($generated@@34 $generated@@87))))) ($generated@@32 $generated@@33 ($generated@@43 $generated@@87 $generated@@88 $generated@@89 $generated@@90) ($generated@@37 $generated@@87)))
 :pattern ( ($generated@@43 $generated@@87 $generated@@88 $generated@@89 $generated@@90))
))))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@67 $generated@@91) (= $generated@@91 $generated@@30))
 :pattern ( ($generated@@67 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@32 $generated@@11 $generated@@92 $generated@@26) (<= ($generated@@45 0) ($generated@@16 $generated@@92)))
 :pattern ( ($generated@@32 $generated@@11 $generated@@92 $generated@@26))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@93 ($generated@@73 $generated@@97 $generated@@94) $generated@@95 $generated@@96) ($generated@@25 $generated@@97 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@93 ($generated@@73 $generated@@97 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@100 T@U) ) (!  (and (= ($generated@@98 ($generated@@34 $generated@@100)) $generated@@1) (= ($generated@@99 ($generated@@34 $generated@@100)) $generated@@7))
 :pattern ( ($generated@@34 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (!  (and (= ($generated@@98 ($generated@@37 $generated@@101)) $generated@@2) (= ($generated@@99 ($generated@@37 $generated@@101)) $generated@@8))
 :pattern ( ($generated@@37 $generated@@101))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 Int) ($generated@@105 T@U) ) (!  (=> (or ($generated@@47 $generated@@102 ($generated@@45 $generated@@104) $generated@@105) (and (< 1 $generated@@42) (and (<= ($generated@@45 0) $generated@@104) ($generated@@32 $generated@@33 $generated@@105 ($generated@@34 $generated@@102))))) (and (=> (or (not (= ($generated@@45 $generated@@104) ($generated@@45 0))) (not true)) (and ($generated@@31 $generated@@105) (and ($generated@@31 $generated@@105) ($generated@@47 $generated@@102 ($generated@@45 (- $generated@@104 1)) ($generated@@48 $generated@@105))))) (= ($generated@@43 $generated@@102 ($generated@@44 $generated@@103) ($generated@@45 $generated@@104) $generated@@105) (ite (= ($generated@@45 $generated@@104) ($generated@@45 0)) $generated@@30 ($generated@@49 ($generated@@51 $generated@@105) ($generated@@43 $generated@@102 ($generated@@44 $generated@@103) ($generated@@45 (- $generated@@104 1)) ($generated@@48 $generated@@105)))))))
 :weight 3
 :pattern ( ($generated@@43 $generated@@102 ($generated@@44 $generated@@103) ($generated@@45 $generated@@104) $generated@@105))
))))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@59 $generated@@106 $generated@@26) (and (= ($generated@@73 $generated@@11 ($generated@@72 $generated@@11 $generated@@106)) $generated@@106) ($generated@@32 $generated@@11 ($generated@@72 $generated@@11 $generated@@106) $generated@@26)))
 :pattern ( ($generated@@59 $generated@@106 $generated@@26))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@108 ($generated@@37 $generated@@107)) (or ($generated@@67 $generated@@108) ($generated@@69 $generated@@108)))
 :pattern ( ($generated@@69 $generated@@108) ($generated@@32 $generated@@33 $generated@@108 ($generated@@37 $generated@@107)))
 :pattern ( ($generated@@67 $generated@@108) ($generated@@32 $generated@@33 $generated@@108 ($generated@@37 $generated@@107)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@59 ($generated@@73 $generated@@111 $generated@@109) $generated@@110) ($generated@@32 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@59 ($generated@@73 $generated@@111 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@29 ($generated@@49 $generated@@112 $generated@@113)) $generated@@4)
 :pattern ( ($generated@@49 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@114 ($generated@@49 $generated@@115 $generated@@116)) $generated@@115)
 :pattern ( ($generated@@49 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@117 ($generated@@49 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@49 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@29 ($generated@@63 $generated@@120 $generated@@121)) $generated@@5)
 :pattern ( ($generated@@63 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@51 ($generated@@63 $generated@@122 $generated@@123)) $generated@@122)
 :pattern ( ($generated@@63 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@48 ($generated@@63 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@63 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@34 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@34 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@37 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@37 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@72 $generated@@131 ($generated@@73 $generated@@131 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@73 $generated@@131 $generated@@130))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (< ($generated@@132 $generated@@134) ($generated@@133 ($generated@@49 $generated@@134 $generated@@135)))
 :pattern ( ($generated@@49 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (< ($generated@@133 $generated@@137) ($generated@@133 ($generated@@49 $generated@@136 $generated@@137)))
 :pattern ( ($generated@@49 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and ($generated@@38 $generated@@140) (and ($generated@@69 $generated@@138) ($generated@@25 $generated@@33 $generated@@138 ($generated@@37 $generated@@139) $generated@@140))) ($generated@@93 ($generated@@114 $generated@@138) $generated@@139 $generated@@140))
 :pattern ( ($generated@@93 ($generated@@114 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and ($generated@@38 $generated@@143) (and ($generated@@31 $generated@@141) ($generated@@25 $generated@@33 $generated@@141 ($generated@@34 $generated@@142) $generated@@143))) ($generated@@93 ($generated@@51 $generated@@141) $generated@@142 $generated@@143))
 :pattern ( ($generated@@93 ($generated@@51 $generated@@141) $generated@@142 $generated@@143))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@144 $generated@@154 $generated@@155 $generated@@156 ($generated@@150 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@159 $generated@@160) $generated@@157)
 :weight 0
)) (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@144 $generated@@161 $generated@@162 $generated@@163 ($generated@@150 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (or (= $generated@@176 $generated@@178) (= ($generated@@144 $generated@@170 $generated@@171 $generated@@172 ($generated@@150 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@177 $generated@@178) ($generated@@144 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@177 $generated@@178)))
 :weight 0
)))) (= ($generated@@9 $generated@@145) 5)) (= ($generated@@9 $generated@@146) 6)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@148 $generated@@179 $generated@@180 ($generated@@151 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@181) $generated@@183) $generated@@181)
 :weight 0
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@188 $generated@@189) (= ($generated@@148 $generated@@184 $generated@@185 ($generated@@151 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@186) $generated@@189) ($generated@@148 $generated@@184 $generated@@185 $generated@@187 $generated@@189)))
 :weight 0
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (= ($generated@@9 ($generated@@149 $generated@@190 $generated@@191)) 7))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@152 ($generated@@149 $generated@@192 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@149 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@153 ($generated@@149 $generated@@194 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@149 $generated@@194 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 Bool) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@14 ($generated@@144 $generated@@145 $generated@@146 $generated@@10 ($generated@@147 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))  (=> (and (or (not (= $generated@@200 $generated@@196)) (not true)) ($generated@@14 ($generated@@72 $generated@@10 ($generated@@148 $generated@@146 $generated@@50 ($generated@@148 $generated@@145 ($generated@@149 $generated@@146 $generated@@50) $generated@@197 $generated@@200) $generated@@198)))) $generated@@199))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146 $generated@@10 ($generated@@147 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@132 ($generated@@73 $generated@@33 $generated@@202)) ($generated@@133 $generated@@202))
 :pattern ( ($generated@@132 ($generated@@73 $generated@@33 $generated@@202)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Int) ($generated@@206 T@U) ) (! (= ($generated@@43 $generated@@203 ($generated@@44 $generated@@204) $generated@@205 $generated@@206) ($generated@@43 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
 :pattern ( ($generated@@43 $generated@@203 ($generated@@44 $generated@@204) $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@59 $generated@@208 ($generated@@34 $generated@@207)) (and (= ($generated@@73 $generated@@33 ($generated@@72 $generated@@33 $generated@@208)) $generated@@208) ($generated@@32 $generated@@33 ($generated@@72 $generated@@33 $generated@@208) ($generated@@34 $generated@@207))))
 :pattern ( ($generated@@59 $generated@@208 ($generated@@34 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@59 $generated@@210 ($generated@@37 $generated@@209)) (and (= ($generated@@73 $generated@@33 ($generated@@72 $generated@@33 $generated@@210)) $generated@@210) ($generated@@32 $generated@@33 ($generated@@72 $generated@@33 $generated@@210) ($generated@@37 $generated@@209))))
 :pattern ( ($generated@@59 $generated@@210 ($generated@@37 $generated@@209)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@38 $generated@@213) (and ($generated@@69 $generated@@211) ($generated@@25 $generated@@33 $generated@@211 ($generated@@37 $generated@@212) $generated@@213))) ($generated@@25 $generated@@33 ($generated@@117 $generated@@211) ($generated@@37 $generated@@212) $generated@@213))
 :pattern ( ($generated@@25 $generated@@33 ($generated@@117 $generated@@211) ($generated@@37 $generated@@212) $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and ($generated@@38 $generated@@216) (and ($generated@@31 $generated@@214) ($generated@@25 $generated@@33 $generated@@214 ($generated@@34 $generated@@215) $generated@@216))) ($generated@@25 $generated@@33 ($generated@@48 $generated@@214) ($generated@@34 $generated@@215) $generated@@216))
 :pattern ( ($generated@@25 $generated@@33 ($generated@@48 $generated@@214) ($generated@@34 $generated@@215) $generated@@216))
)))
(assert (= ($generated@@98 $generated@@26) $generated@@0))
(assert (= ($generated@@99 $generated@@26) $generated@@6))
(assert (= $generated@@30 ($generated@@46 $generated@@33 $generated@@30)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= ($generated@@49 ($generated@@46 $generated@@50 $generated@@217) ($generated@@46 $generated@@33 $generated@@218)) ($generated@@46 $generated@@33 ($generated@@49 $generated@@217 $generated@@218)))
 :pattern ( ($generated@@49 ($generated@@46 $generated@@50 $generated@@217) ($generated@@46 $generated@@33 $generated@@218)))
)))
(assert (forall (($generated@@219 Int) ) (! (= ($generated@@73 $generated@@11 ($generated@@15 ($generated@@45 $generated@@219))) ($generated@@46 $generated@@50 ($generated@@73 $generated@@11 ($generated@@15 $generated@@219))))
 :pattern ( ($generated@@73 $generated@@11 ($generated@@15 ($generated@@45 $generated@@219))))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@T) ) (! (= ($generated@@73 $generated@@221 ($generated@@46 $generated@@221 $generated@@220)) ($generated@@46 $generated@@50 ($generated@@73 $generated@@221 $generated@@220)))
 :pattern ( ($generated@@73 $generated@@221 ($generated@@46 $generated@@221 $generated@@220)))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Int) ($generated@@225 T@U) ) (!  (=> (or ($generated@@47 $generated@@222 $generated@@224 $generated@@225) (and (< 1 $generated@@42) (and (<= ($generated@@45 0) $generated@@224) ($generated@@32 $generated@@33 $generated@@225 ($generated@@34 $generated@@222))))) (and (=> (or (not (= $generated@@224 ($generated@@45 0))) (not true)) (and ($generated@@31 $generated@@225) (and ($generated@@31 $generated@@225) ($generated@@47 $generated@@222 (- $generated@@224 1) ($generated@@48 $generated@@225))))) (= ($generated@@43 $generated@@222 ($generated@@44 $generated@@223) $generated@@224 $generated@@225) (ite (= $generated@@224 ($generated@@45 0)) $generated@@30 ($generated@@49 ($generated@@51 $generated@@225) ($generated@@43 $generated@@222 $generated@@223 (- $generated@@224 1) ($generated@@48 $generated@@225)))))))
 :pattern ( ($generated@@43 $generated@@222 ($generated@@44 $generated@@223) $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> ($generated@@38 $generated@@229) (= ($generated@@25 $generated@@33 ($generated@@49 $generated@@227 $generated@@228) ($generated@@37 $generated@@226) $generated@@229)  (and ($generated@@93 $generated@@227 $generated@@226 $generated@@229) ($generated@@25 $generated@@33 $generated@@228 ($generated@@37 $generated@@226) $generated@@229))))
 :pattern ( ($generated@@25 $generated@@33 ($generated@@49 $generated@@227 $generated@@228) ($generated@@37 $generated@@226) $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> ($generated@@38 $generated@@233) (= ($generated@@25 $generated@@33 ($generated@@63 $generated@@231 $generated@@232) ($generated@@34 $generated@@230) $generated@@233)  (and ($generated@@93 $generated@@231 $generated@@230 $generated@@233) ($generated@@25 $generated@@33 $generated@@232 ($generated@@34 $generated@@230) $generated@@233))))
 :pattern ( ($generated@@25 $generated@@33 ($generated@@63 $generated@@231 $generated@@232) ($generated@@34 $generated@@230) $generated@@233))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@243  (=> (and (or (not (= $generated@@234 ($generated@@45 0))) (not true)) ($generated@@31 $generated@@235)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@32 $generated@@11 ($generated@@15 (- $generated@@234 1)) $generated@@26)) (=> ($generated@@32 $generated@@11 ($generated@@15 (- $generated@@234 1)) $generated@@26) (=> (= $generated@@236 (- $generated@@234 1)) (=> (and (and ($generated@@25 $generated@@11 ($generated@@15 $generated@@236) $generated@@26 $generated@@237) ($generated@@31 $generated@@235)) (and (= $generated@@238 ($generated@@48 $generated@@235)) ($generated@@25 $generated@@33 $generated@@238 ($generated@@34 $generated@@239) $generated@@237))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@234) (= $generated@@236 $generated@@234))) (=> (or (<= 0 $generated@@234) (= $generated@@236 $generated@@234)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@236 $generated@@234)))))))))))
(let (($generated@@244 true))
(let (($generated@@245 true))
(let (($generated@@246  (=> (= $generated@@240 ($generated@@147 $generated@@241 $generated@@237 $generated false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@245) (=> (= (ControlFlow 0 7) 2) $generated@@244)) (=> (= (ControlFlow 0 7) 4) $generated@@243)))))
(let (($generated@@247  (=> (and ($generated@@38 $generated@@237) ($generated@@242 $generated@@237)) (=> (and (and (<= ($generated@@45 0) $generated@@234) ($generated@@32 $generated@@33 $generated@@235 ($generated@@34 $generated@@239))) (and (= 1 $generated@@42) (= (ControlFlow 0 8) 7))) $generated@@246))))
$generated@@247))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
