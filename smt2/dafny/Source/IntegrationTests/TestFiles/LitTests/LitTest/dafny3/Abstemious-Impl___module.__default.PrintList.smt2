(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@131 (T@U Int) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@208 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@24 $generated@@25) 0))
(assert (= ($generated@@26 $generated@@27) $generated@@4))
(assert (= ($generated@@7 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@31 $generated@@33) ($generated@@28 $generated@@29 $generated@@27 ($generated@@30 $generated@@32) $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@27 ($generated@@30 $generated@@32) $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ) (! ($generated@@34 $generated@@29 $generated@@27 ($generated@@30 $generated@@35))
 :pattern ( ($generated@@34 $generated@@29 $generated@@27 ($generated@@30 $generated@@35)))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@38) (= $generated@@37 $generated@@38))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@40 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@40 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@40 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@7 $generated@@41) 4)) (= ($generated@@7 $generated@@42) 5)) (= ($generated@@7 $generated@@43) 6)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@7 ($generated@@44 $generated@@60 $generated@@61)) 7))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@44 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@44 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@44 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@39 $generated@@66 $generated@@67) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@12 ($generated@@45 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@43 ($generated@@44 $generated@@41 $generated@@42) $generated@@66 $generated@@68) $generated@@2))) ($generated@@12 ($generated@@45 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@43 ($generated@@44 $generated@@41 $generated@@42) $generated@@67 $generated@@68) $generated@@2))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@43 ($generated@@44 $generated@@41 $generated@@42) $generated@@67 $generated@@68) $generated@@2))
)))
 :pattern ( ($generated@@39 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and ($generated@@69 $generated@@72) ($generated@@69 $generated@@73)) (= ($generated@@36 $generated@@72 $generated@@73)  (and (= ($generated@@70 $generated@@72) ($generated@@70 $generated@@73)) ($generated@@36 ($generated@@71 $generated@@72) ($generated@@71 $generated@@73)))))
 :pattern ( ($generated@@36 $generated@@72 $generated@@73) ($generated@@69 $generated@@72))
 :pattern ( ($generated@@36 $generated@@72 $generated@@73) ($generated@@69 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@34 $generated@@29 ($generated@@77 $generated@@80 $generated@@81) ($generated@@30 $generated@@79))  (and ($generated@@78 $generated@@80 $generated@@79) ($generated@@34 $generated@@29 $generated@@81 ($generated@@30 $generated@@79))))
 :pattern ( ($generated@@34 $generated@@29 ($generated@@77 $generated@@80 $generated@@81) ($generated@@30 $generated@@79)))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 $generated@@83) (= ($generated@@26 $generated@@83) $generated@@4))
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@69 $generated@@84) (= ($generated@@26 $generated@@84) $generated@@5))
 :pattern ( ($generated@@69 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@45 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@45 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@69 $generated@@88) (exists (($generated@@89 T@U) ($generated@@90 T@U) ) (= $generated@@88 ($generated@@77 $generated@@89 $generated@@90))))
 :pattern ( ($generated@@69 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@82 $generated@@91) (= $generated@@91 $generated@@27))
 :pattern ( ($generated@@82 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@92 ($generated@@85 $generated@@96 $generated@@93) $generated@@94 $generated@@95) ($generated@@28 $generated@@96 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@92 ($generated@@85 $generated@@96 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@39 $generated@@97 $generated@@98) (=> ($generated@@92 $generated@@99 $generated@@100 $generated@@97) ($generated@@92 $generated@@99 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@39 $generated@@97 $generated@@98) ($generated@@92 $generated@@99 $generated@@100 $generated@@97))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (!  (=> ($generated@@39 $generated@@101 $generated@@102) (=> ($generated@@28 $generated@@105 $generated@@103 $generated@@104 $generated@@101) ($generated@@28 $generated@@105 $generated@@103 $generated@@104 $generated@@102)))
 :pattern ( ($generated@@39 $generated@@101 $generated@@102) ($generated@@28 $generated@@105 $generated@@103 $generated@@104 $generated@@101))
)))
(assert (forall (($generated@@107 T@U) ) (!  (and (= ($generated@@23 ($generated@@30 $generated@@107)) $generated@@3) (= ($generated@@106 ($generated@@30 $generated@@107)) $generated@@6))
 :pattern ( ($generated@@30 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@108 $generated@@109) (or ($generated@@82 $generated@@109) ($generated@@69 $generated@@109)))
 :pattern ( ($generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@34 $generated@@29 $generated@@111 ($generated@@30 $generated@@110)) (or ($generated@@82 $generated@@111) ($generated@@69 $generated@@111)))
 :pattern ( ($generated@@69 $generated@@111) ($generated@@34 $generated@@29 $generated@@111 ($generated@@30 $generated@@110)))
 :pattern ( ($generated@@82 $generated@@111) ($generated@@34 $generated@@29 $generated@@111 ($generated@@30 $generated@@110)))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or (not (= $generated@@112 $generated@@114)) (not true)) (=> (and ($generated@@39 $generated@@112 $generated@@113) ($generated@@39 $generated@@113 $generated@@114)) ($generated@@39 $generated@@112 $generated@@114)))
 :pattern ( ($generated@@39 $generated@@112 $generated@@113) ($generated@@39 $generated@@113 $generated@@114))
)))
(assert (= ($generated@@7 $generated@@115) 8))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@78 $generated@@116 $generated) (and (= ($generated@@85 $generated@@115 ($generated@@45 $generated@@115 $generated@@116)) $generated@@116) ($generated@@34 $generated@@115 ($generated@@45 $generated@@115 $generated@@116) $generated)))
 :pattern ( ($generated@@78 $generated@@116 $generated))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@78 ($generated@@85 $generated@@119 $generated@@117) $generated@@118) ($generated@@34 $generated@@119 $generated@@117 $generated@@118))
 :pattern ( ($generated@@78 ($generated@@85 $generated@@119 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (<= 0 ($generated@@24 $generated@@120))
 :pattern ( ($generated@@24 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@82 $generated@@121) ($generated@@82 $generated@@122)) ($generated@@36 $generated@@121 $generated@@122))
 :pattern ( ($generated@@36 $generated@@121 $generated@@122) ($generated@@82 $generated@@121))
 :pattern ( ($generated@@36 $generated@@121 $generated@@122) ($generated@@82 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@26 ($generated@@77 $generated@@123 $generated@@124)) $generated@@5)
 :pattern ( ($generated@@77 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@70 ($generated@@77 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@77 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@71 ($generated@@77 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@77 $generated@@127 $generated@@128))
)))
(assert (= ($generated@@7 $generated@@129) 9))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@28 $generated@@129 $generated@@132 ($generated@@130 $generated@@133) $generated@@134) (forall (($generated@@135 Int) ) (!  (=> (and (<= 0 $generated@@135) (< $generated@@135 ($generated@@24 $generated@@132))) ($generated@@92 ($generated@@131 $generated@@132 $generated@@135) $generated@@133 $generated@@134))
 :pattern ( ($generated@@131 $generated@@132 $generated@@135))
)))
 :pattern ( ($generated@@28 $generated@@129 $generated@@132 ($generated@@130 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@136 ($generated@@130 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@130 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@23 ($generated@@130 $generated@@138)) $generated@@1)
 :pattern ( ($generated@@130 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@30 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@30 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@45 $generated@@142 ($generated@@85 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@85 $generated@@142 $generated@@141))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (< ($generated@@143 $generated@@145) ($generated@@144 ($generated@@77 $generated@@145 $generated@@146)))
 :pattern ( ($generated@@77 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (< ($generated@@144 $generated@@148) ($generated@@144 ($generated@@77 $generated@@147 $generated@@148)))
 :pattern ( ($generated@@77 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@31 $generated@@151) (and ($generated@@69 $generated@@149) ($generated@@28 $generated@@29 $generated@@149 ($generated@@30 $generated@@150) $generated@@151))) ($generated@@92 ($generated@@70 $generated@@149) $generated@@150 $generated@@151))
 :pattern ( ($generated@@92 ($generated@@70 $generated@@149) $generated@@150 $generated@@151))
)))
(assert  (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@152 $generated@@155 $generated@@156 $generated@@157 ($generated@@154 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@160 $generated@@161) $generated@@158)
 :weight 0
)) (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@152 $generated@@162 $generated@@163 $generated@@164 ($generated@@154 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@152 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@152 $generated@@171 $generated@@172 $generated@@173 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@152 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@12 ($generated@@152 $generated@@43 $generated@@41 $generated@@8 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@12 ($generated@@45 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@43 ($generated@@44 $generated@@41 $generated@@42) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@152 $generated@@43 $generated@@41 $generated@@8 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@143 ($generated@@85 $generated@@29 $generated@@186)) ($generated@@144 $generated@@186))
 :pattern ( ($generated@@143 ($generated@@85 $generated@@29 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@78 $generated@@187 ($generated@@130 $generated@@188)) (and (= ($generated@@85 $generated@@129 ($generated@@45 $generated@@129 $generated@@187)) $generated@@187) ($generated@@34 $generated@@129 ($generated@@45 $generated@@129 $generated@@187) ($generated@@130 $generated@@188))))
 :pattern ( ($generated@@78 $generated@@187 ($generated@@130 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@78 $generated@@190 ($generated@@30 $generated@@189)) (and (= ($generated@@85 $generated@@29 ($generated@@45 $generated@@29 $generated@@190)) $generated@@190) ($generated@@34 $generated@@29 ($generated@@45 $generated@@29 $generated@@190) ($generated@@30 $generated@@189))))
 :pattern ( ($generated@@78 $generated@@190 ($generated@@30 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and ($generated@@31 $generated@@193) (and ($generated@@69 $generated@@191) ($generated@@28 $generated@@29 $generated@@191 ($generated@@30 $generated@@192) $generated@@193))) ($generated@@28 $generated@@29 ($generated@@71 $generated@@191) ($generated@@30 $generated@@192) $generated@@193))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@71 $generated@@191) ($generated@@30 $generated@@192) $generated@@193))
)))
(assert (= $generated@@27 ($generated@@74 $generated@@29 $generated@@27)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@77 ($generated@@74 $generated@@42 $generated@@194) ($generated@@74 $generated@@29 $generated@@195)) ($generated@@74 $generated@@29 ($generated@@77 $generated@@194 $generated@@195)))
 :pattern ( ($generated@@77 ($generated@@74 $generated@@42 $generated@@194) ($generated@@74 $generated@@29 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@T) ) (! (= ($generated@@85 $generated@@197 ($generated@@74 $generated@@197 $generated@@196)) ($generated@@74 $generated@@42 ($generated@@85 $generated@@197 $generated@@196)))
 :pattern ( ($generated@@85 $generated@@197 ($generated@@74 $generated@@197 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ) (!  (=> (= ($generated@@24 $generated@@198) 0) (= $generated@@198 $generated@@25))
 :pattern ( ($generated@@24 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! ($generated@@28 $generated@@115 $generated@@200 $generated $generated@@199)
 :pattern ( ($generated@@28 $generated@@115 $generated@@200 $generated $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@31 $generated@@204) (= ($generated@@28 $generated@@29 ($generated@@77 $generated@@202 $generated@@203) ($generated@@30 $generated@@201) $generated@@204)  (and ($generated@@92 $generated@@202 $generated@@201 $generated@@204) ($generated@@28 $generated@@29 $generated@@203 ($generated@@30 $generated@@201) $generated@@204))))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@77 $generated@@202 $generated@@203) ($generated@@30 $generated@@201) $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@34 $generated@@129 $generated@@205 ($generated@@130 $generated@@206)) (forall (($generated@@207 Int) ) (!  (=> (and (<= 0 $generated@@207) (< $generated@@207 ($generated@@24 $generated@@205))) ($generated@@78 ($generated@@131 $generated@@205 $generated@@207) $generated@@206))
 :pattern ( ($generated@@131 $generated@@205 $generated@@207))
)))
 :pattern ( ($generated@@34 $generated@@129 $generated@@205 ($generated@@130 $generated@@206)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 Int) ) (!  (=> (and (<= 0 $generated@@210) (< $generated@@210 ($generated@@24 $generated@@209))) (< ($generated@@144 ($generated@@45 $generated@@29 ($generated@@131 $generated@@209 $generated@@210))) ($generated@@208 $generated@@209)))
 :pattern ( ($generated@@144 ($generated@@45 $generated@@29 ($generated@@131 $generated@@209 $generated@@210))))
)))
(assert (forall (($generated@@211 T@U) ) (! ($generated@@34 $generated@@115 $generated@@211 $generated)
 :pattern ( ($generated@@34 $generated@@115 $generated@@211 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@224  (=> (not ($generated@@36 $generated@@212 $generated@@27)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@69 $generated@@212)) (=> ($generated@@69 $generated@@212) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@69 $generated@@212)) (=> ($generated@@69 $generated@@212) (=> (and (= $generated@@213 ($generated@@71 $generated@@212)) (= (ControlFlow 0 5) (- 0 4))) (< ($generated@@144 $generated@@213) ($generated@@144 $generated@@212))))))))))
(let (($generated@@225 true))
(let (($generated@@226  (=> (and $generated@@214 ($generated@@108 $generated@@212)) (and (=> (= (ControlFlow 0 8) 3) $generated@@225) (=> (= (ControlFlow 0 8) 5) $generated@@224)))))
(let (($generated@@227 true))
(let (($generated@@228  (and (=> (= (ControlFlow 0 9) 2) $generated@@227) (=> (= (ControlFlow 0 9) 8) $generated@@226))))
(let (($generated@@229 true))
(let (($generated@@230  (=> (and (and (and ($generated@@34 $generated@@29 $generated@@212 ($generated@@30 $generated@@215)) ($generated@@28 $generated@@29 $generated@@212 ($generated@@30 $generated@@215) $generated@@216)) (not false)) (and (and (forall (($generated@@231 T@U) ) (!  (=> (and (or (not (= $generated@@231 $generated@@217)) (not true)) ($generated@@12 ($generated@@45 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@43 ($generated@@44 $generated@@41 $generated@@42) $generated@@216 $generated@@231) $generated@@2)))) (= ($generated@@40 $generated@@43 ($generated@@44 $generated@@41 $generated@@42) $generated@@216 $generated@@231) ($generated@@40 $generated@@43 ($generated@@44 $generated@@41 $generated@@42) $generated@@216 $generated@@231)))
 :pattern ( ($generated@@40 $generated@@43 ($generated@@44 $generated@@41 $generated@@42) $generated@@216 $generated@@231))
)) ($generated@@39 $generated@@216 $generated@@216)) (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (or (not (= $generated@@232 $generated@@217)) (not true)) ($generated@@12 ($generated@@45 $generated@@8 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@43 ($generated@@44 $generated@@41 $generated@@42) $generated@@216 $generated@@232) $generated@@2)))) (or (= ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@43 ($generated@@44 $generated@@41 $generated@@42) $generated@@216 $generated@@232) $generated@@233) ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@43 ($generated@@44 $generated@@41 $generated@@42) $generated@@216 $generated@@232) $generated@@233)) ($generated@@12 ($generated@@152 $generated@@43 $generated@@41 $generated@@8 $generated@@218 $generated@@232 $generated@@233))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@43 ($generated@@44 $generated@@41 $generated@@42) $generated@@216 $generated@@232) $generated@@233))
)) (<= ($generated@@144 $generated@@212) ($generated@@144 $generated@@219))))) (and (=> (= (ControlFlow 0 10) 1) $generated@@229) (=> (= (ControlFlow 0 10) 9) $generated@@228)))))
(let (($generated@@234  (=> (and (= $generated@@218 ($generated@@153 $generated@@217 $generated@@216 $generated@@2 false)) (= (ControlFlow 0 11) 10)) $generated@@230)))
(let (($generated@@235  (=> (and (and (and (and ($generated@@31 $generated@@216) ($generated@@220 $generated@@216)) (and ($generated@@34 $generated@@129 $generated@@221 ($generated@@130 $generated)) ($generated@@28 $generated@@129 $generated@@221 ($generated@@130 $generated) $generated@@216))) (and (and ($generated@@34 $generated@@29 $generated@@219 ($generated@@30 $generated@@215)) ($generated@@28 $generated@@29 $generated@@219 ($generated@@30 $generated@@215) $generated@@216)) ($generated@@108 $generated@@219))) (and (and (and ($generated@@34 $generated@@29 $generated@@222 ($generated@@30 $generated@@215)) ($generated@@28 $generated@@29 $generated@@222 ($generated@@30 $generated@@215) $generated@@216)) true) (and (= 1 $generated@@223) (= (ControlFlow 0 12) 11)))) $generated@@234)))
$generated@@235))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
