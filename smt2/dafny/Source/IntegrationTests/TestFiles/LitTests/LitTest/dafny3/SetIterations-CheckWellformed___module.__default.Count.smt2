(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@U T@U T@U) Int)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@45 () Int)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@50 (T@T T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@61 (Int) Int)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@107 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T T@T) T@T)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@113 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@21 ($generated@@20 $generated@@22 $generated@@23) $generated@@23)
 :pattern ( ($generated@@20 $generated@@22 $generated@@23))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@21 $generated@@24 $generated@@26) ($generated@@21 ($generated@@20 $generated@@24 $generated@@25) $generated@@26))
 :pattern ( ($generated@@20 $generated@@24 $generated@@25) ($generated@@21 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@21 ($generated@@20 $generated@@27 $generated@@28) $generated@@29)  (or (= $generated@@29 $generated@@28) ($generated@@21 $generated@@27 $generated@@29)))
 :pattern ( ($generated@@21 ($generated@@20 $generated@@27 $generated@@28) $generated@@29))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@21 $generated@@32 $generated@@33) (not ($generated@@21 ($generated@@30 $generated@@31 $generated@@32) $generated@@33)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32) ($generated@@21 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@35 $generated@@36 $generated@@37) ($generated@@21 $generated@@37 ($generated@@34 $generated@@36 $generated@@37)))
 :pattern ( ($generated@@34 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ) (!  (not ($generated@@21 $generated@@38 $generated@@39))
 :pattern ( ($generated@@21 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@40 $generated@@42 ($generated@@41 $generated@@43) $generated@@44) ($generated@@40 $generated@@42 $generated@@43 $generated@@44))
 :pattern ( ($generated@@40 $generated@@42 ($generated@@41 $generated@@43) $generated@@44))
)))
(assert (= ($generated@@3 $generated@@47) 3))
(assert  (=> (<= 0 $generated@@45) (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (or ($generated@@49 $generated@@53 ($generated@@46 $generated@@47 $generated@@56)) (and (< 0 $generated@@45) (and ($generated@@48 $generated@@55) ($generated@@50 $generated@@47 $generated@@56 ($generated@@51 $generated@@53))))) (and (=> (not ($generated@@52 $generated@@56 $generated@@38)) (and ($generated@@35 $generated@@53 ($generated@@46 $generated@@47 $generated@@56)) ($generated@@49 $generated@@53 ($generated@@30 $generated@@56 ($generated@@20 $generated@@38 ($generated@@34 $generated@@53 ($generated@@46 $generated@@47 $generated@@56))))))) (= ($generated@@40 $generated@@53 ($generated@@41 $generated@@54) ($generated@@46 $generated@@47 $generated@@56)) (ite ($generated@@52 $generated@@56 $generated@@38) 0 (let (($generated@@57 ($generated@@34 $generated@@53 ($generated@@46 $generated@@47 $generated@@56))))
(+ 1 ($generated@@40 $generated@@53 ($generated@@41 $generated@@54) ($generated@@30 $generated@@56 ($generated@@20 $generated@@38 $generated@@57)))))))))
 :weight 3
 :pattern ( ($generated@@40 $generated@@53 ($generated@@41 $generated@@54) ($generated@@46 $generated@@47 $generated@@56)) ($generated@@48 $generated@@55))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@21 ($generated@@30 $generated@@58 $generated@@59) $generated@@60)  (and ($generated@@21 $generated@@58 $generated@@60) (not ($generated@@21 $generated@@59 $generated@@60))))
 :pattern ( ($generated@@21 ($generated@@30 $generated@@58 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@62 Int) ) (! (= ($generated@@61 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@46 $generated@@64 $generated@@63) $generated@@63)
 :pattern ( ($generated@@46 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@65 $generated@@66 $generated@@67) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@21 $generated@@66 $generated@@68) ($generated@@21 $generated@@67 $generated@@68))
 :pattern ( ($generated@@21 $generated@@66 $generated@@68))
 :pattern ( ($generated@@21 $generated@@67 $generated@@68))
)))
 :pattern ( ($generated@@65 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@69 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@69 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@50 $generated@@47 $generated@@74 ($generated@@51 $generated@@75)) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@21 $generated@@74 $generated@@76) ($generated@@73 $generated@@76 $generated@@75))
 :pattern ( ($generated@@21 $generated@@74 $generated@@76))
)))
 :pattern ( ($generated@@50 $generated@@47 $generated@@74 ($generated@@51 $generated@@75)))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@77 ($generated@@70 $generated@@82 $generated@@79) $generated@@80 $generated@@81) ($generated@@78 $generated@@82 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@77 ($generated@@70 $generated@@82 $generated@@79) $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@52 $generated@@83 $generated@@84) (= $generated@@83 $generated@@84))
 :pattern ( ($generated@@52 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@73 $generated@@85 $generated) (and (= ($generated@@70 $generated@@5 ($generated@@69 $generated@@5 $generated@@85)) $generated@@85) ($generated@@50 $generated@@5 ($generated@@69 $generated@@5 $generated@@85) $generated)))
 :pattern ( ($generated@@73 $generated@@85 $generated))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@73 ($generated@@70 $generated@@88 $generated@@86) $generated@@87) ($generated@@50 $generated@@88 $generated@@86 $generated@@87))
 :pattern ( ($generated@@73 ($generated@@70 $generated@@88 $generated@@86) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@78 $generated@@47 $generated@@89 ($generated@@51 $generated@@90) $generated@@91) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@21 $generated@@89 $generated@@92) ($generated@@77 $generated@@92 $generated@@90 $generated@@91))
 :pattern ( ($generated@@21 $generated@@89 $generated@@92))
)))
 :pattern ( ($generated@@78 $generated@@47 $generated@@89 ($generated@@51 $generated@@90) $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@93 ($generated@@51 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@51 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@19 ($generated@@51 $generated@@95)) $generated@@1)
 :pattern ( ($generated@@51 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@69 $generated@@97 ($generated@@70 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@70 $generated@@97 $generated@@96))
)))
(assert  (=> (<= 0 $generated@@45) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@49 $generated@@98 $generated@@101) (and (< 0 $generated@@45) (and ($generated@@48 $generated@@100) ($generated@@50 $generated@@47 $generated@@101 ($generated@@51 $generated@@98))))) (and (=> (not ($generated@@52 $generated@@101 $generated@@38)) (and ($generated@@35 $generated@@98 $generated@@101) ($generated@@49 $generated@@98 ($generated@@30 $generated@@101 ($generated@@20 $generated@@38 ($generated@@34 $generated@@98 $generated@@101)))))) (= ($generated@@40 $generated@@98 ($generated@@41 $generated@@99) $generated@@101) (ite ($generated@@52 $generated@@101 $generated@@38) 0 (let (($generated@@102 ($generated@@34 $generated@@98 $generated@@101)))
(+ 1 ($generated@@40 $generated@@98 $generated@@99 ($generated@@30 $generated@@101 ($generated@@20 $generated@@38 $generated@@102)))))))))
 :pattern ( ($generated@@40 $generated@@98 ($generated@@41 $generated@@99) $generated@@101) ($generated@@48 $generated@@100))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@103 $generated@@114 $generated@@115 $generated@@116 ($generated@@110 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@119 $generated@@120) $generated@@117)
 :weight 0
)) (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@103 $generated@@121 $generated@@122 $generated@@123 ($generated@@110 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@103 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@103 $generated@@130 $generated@@131 $generated@@132 ($generated@@110 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)))) (= ($generated@@3 $generated@@104) 4)) (= ($generated@@3 $generated@@105) 5)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@107 $generated@@139 $generated@@140 ($generated@@111 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@143) $generated@@141)
 :weight 0
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@148 $generated@@149) (= ($generated@@107 $generated@@144 $generated@@145 ($generated@@111 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@107 $generated@@144 $generated@@145 $generated@@147 $generated@@149)))
 :weight 0
))) (= ($generated@@3 $generated@@108) 6)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (= ($generated@@3 ($generated@@109 $generated@@150 $generated@@151)) 7))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@112 ($generated@@109 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@109 $generated@@152 $generated@@153))
))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@113 ($generated@@109 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@109 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Bool) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@8 ($generated@@103 $generated@@104 $generated@@105 $generated@@4 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@8 ($generated@@69 $generated@@4 ($generated@@107 $generated@@105 $generated@@108 ($generated@@107 $generated@@104 ($generated@@109 $generated@@105 $generated@@108) $generated@@157 $generated@@160) $generated@@158)))) $generated@@159))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105 $generated@@4 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@73 $generated@@162 ($generated@@51 $generated@@163)) (and (= ($generated@@70 $generated@@47 ($generated@@69 $generated@@47 $generated@@162)) $generated@@162) ($generated@@50 $generated@@47 ($generated@@69 $generated@@47 $generated@@162) ($generated@@51 $generated@@163))))
 :pattern ( ($generated@@73 $generated@@162 ($generated@@51 $generated@@163)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@52 $generated@@164 $generated@@165) (forall (($generated@@166 T@U) ) (! (= ($generated@@21 $generated@@164 $generated@@166) ($generated@@21 $generated@@165 $generated@@166))
 :pattern ( ($generated@@21 $generated@@164 $generated@@166))
 :pattern ( ($generated@@21 $generated@@165 $generated@@166))
)))
 :pattern ( ($generated@@52 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@70 $generated@@5 ($generated@@9 ($generated@@61 $generated@@167))) ($generated@@46 $generated@@108 ($generated@@70 $generated@@5 ($generated@@9 $generated@@167))))
 :pattern ( ($generated@@70 $generated@@5 ($generated@@9 ($generated@@61 $generated@@167))))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@70 $generated@@169 ($generated@@46 $generated@@169 $generated@@168)) ($generated@@46 $generated@@108 ($generated@@70 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@70 $generated@@169 ($generated@@46 $generated@@169 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! ($generated@@78 $generated@@5 $generated@@171 $generated $generated@@170)
 :pattern ( ($generated@@78 $generated@@5 $generated@@171 $generated $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (! ($generated@@50 $generated@@5 $generated@@172 $generated)
 :pattern ( ($generated@@50 $generated@@5 $generated@@172 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@181  (and (=> (= (ControlFlow 0 4) (- 0 5)) (exists (($generated@@182 T@U) )  (and ($generated@@73 $generated@@182 $generated@@173) ($generated@@21 $generated@@174 $generated@@182)))) (=> (exists (($generated@@183 T@U) )  (and ($generated@@73 $generated@@183 $generated@@173) ($generated@@21 $generated@@174 $generated@@183))) (=> (and ($generated@@73 $generated@@175 $generated@@173) ($generated@@77 $generated@@175 $generated@@173 $generated@@176)) (=> (and (and ($generated@@21 $generated@@174 $generated@@175) (= $generated@@177 ($generated@@30 $generated@@174 ($generated@@20 $generated@@38 $generated@@175)))) (and ($generated@@78 $generated@@47 $generated@@177 ($generated@@51 $generated@@173) $generated@@176) (= (ControlFlow 0 4) (- 0 3)))) (and ($generated@@65 $generated@@177 $generated@@174) (not ($generated@@65 $generated@@174 $generated@@177)))))))))
(let (($generated@@184  (=> (and (not (and ($generated@@73 $generated@@175 $generated@@173) ($generated@@77 $generated@@175 $generated@@173 $generated@@176))) (= (ControlFlow 0 7) 4)) $generated@@181)))
(let (($generated@@185  (=> (and (and ($generated@@73 $generated@@175 $generated@@173) ($generated@@77 $generated@@175 $generated@@173 $generated@@176)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@186  (=> (not ($generated@@52 $generated@@174 $generated@@38)) (and (=> (= (ControlFlow 0 8) 6) $generated@@185) (=> (= (ControlFlow 0 8) 7) $generated@@184)))))
(let (($generated@@187 true))
(let (($generated@@188 true))
(let (($generated@@189  (=> (= $generated@@178 ($generated@@106 $generated@@179 $generated@@176 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@188) (=> (= (ControlFlow 0 9) 2) $generated@@187)) (=> (= (ControlFlow 0 9) 8) $generated@@186)))))
(let (($generated@@190  (=> (and (and (and ($generated@@48 $generated@@176) ($generated@@180 $generated@@176)) ($generated@@50 $generated@@47 $generated@@174 ($generated@@51 $generated@@173))) (and (= 0 $generated@@45) (= (ControlFlow 0 10) 9))) $generated@@189)))
$generated@@190)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
