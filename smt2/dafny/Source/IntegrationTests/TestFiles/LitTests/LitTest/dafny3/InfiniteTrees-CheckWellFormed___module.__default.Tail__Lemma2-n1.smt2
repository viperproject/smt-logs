(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (Int) T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@57 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@T T@U T@U) Bool)
(declare-fun $generated@@65 (Int) Int)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 () Int)
(declare-fun $generated@@71 (T@U T@U T@U Int) T@U)
(declare-fun $generated@@72 (T@U T@U Int) Bool)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@119 (T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@176 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@181 () T@T)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (or (not (= $generated@@27 ($generated@@24 0))) (not true)) (= ($generated@@22 $generated@@25 $generated@@26 $generated@@27 ($generated@@23 $generated@@28) $generated@@29 $generated@@30) ($generated@@22 $generated@@25 $generated@@26 $generated@@27 $generated@@28 $generated@@29 $generated@@30)))
 :pattern ( ($generated@@22 $generated@@25 $generated@@26 $generated@@27 ($generated@@23 $generated@@28) $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and ($generated@@31 $generated@@32 $generated@@33) ($generated@@31 $generated@@33 $generated@@34)) ($generated@@31 $generated@@32 $generated@@34))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33) ($generated@@31 $generated@@33 $generated@@34))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33) ($generated@@31 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! ($generated@@35 $generated@@8 $generated@@37 $generated@@36 $generated@@38)
 :pattern ( ($generated@@35 $generated@@8 $generated@@37 $generated@@36 $generated@@38))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 Int) ($generated@@43 Int) ) (!  (=> (and (and (<= 0 $generated@@42) (<= 0 $generated@@43)) (<= (+ $generated@@42 $generated@@43) ($generated@@40 $generated@@41))) (= ($generated@@39 ($generated@@39 $generated@@41 ($generated@@24 $generated@@42)) ($generated@@24 $generated@@43)) ($generated@@39 $generated@@41 ($generated@@24 (+ $generated@@42 $generated@@43)))))
 :pattern ( ($generated@@39 ($generated@@39 $generated@@41 ($generated@@24 $generated@@42)) ($generated@@24 $generated@@43)))
)))
(assert (= ($generated@@44 $generated@@45) $generated@@2))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (= $generated@@50 $generated@@51) ($generated@@22 $generated@@46 $generated@@47 $generated@@48 ($generated@@23 $generated@@49) $generated@@50 $generated@@51))
 :pattern ( ($generated@@22 $generated@@46 $generated@@47 $generated@@48 ($generated@@23 $generated@@49) $generated@@50 $generated@@51))
)))
(assert (= ($generated@@6 $generated@@52) 3))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@54 $generated@@56) ($generated@@35 $generated@@52 $generated@@45 ($generated@@53 $generated@@55) $generated@@56))
 :pattern ( ($generated@@35 $generated@@52 $generated@@45 ($generated@@53 $generated@@55) $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@57 $generated@@58 $generated@@59 ($generated@@23 $generated@@60) $generated@@61 $generated@@62) (= $generated@@61 $generated@@62))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59 ($generated@@23 $generated@@60) $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! ($generated@@63 $generated@@52 $generated@@45 ($generated@@53 $generated@@64))
 :pattern ( ($generated@@63 $generated@@52 $generated@@45 ($generated@@53 $generated@@64)))
)))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@65 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert  (=> (<= 1 $generated@@70) (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 Int) ) (!  (=> (or ($generated@@72 $generated@@73 $generated@@75 $generated@@76) (and (< 1 $generated@@70) (and ($generated@@63 $generated@@52 $generated@@75 ($generated@@53 $generated@@73)) (<= ($generated@@65 0) $generated@@76)))) ($generated@@63 $generated@@52 ($generated@@71 $generated@@73 $generated@@74 $generated@@75 $generated@@76) ($generated@@53 $generated@@73)))
 :pattern ( ($generated@@71 $generated@@73 $generated@@74 $generated@@75 $generated@@76))
))))
(assert  (=> (<= 1 $generated@@70) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 Int) ) (!  (=> (or ($generated@@72 $generated@@80 $generated@@82 ($generated@@65 $generated@@83)) (and (< 1 $generated@@70) (and ($generated@@63 $generated@@52 $generated@@82 ($generated@@53 $generated@@80)) (<= ($generated@@65 0) $generated@@83)))) (and (=> (or (not (= ($generated@@65 $generated@@83) ($generated@@65 0))) (not true)) (and ($generated@@72 $generated@@80 $generated@@82 ($generated@@65 (- $generated@@83 1))) (let (($generated@@84 ($generated@@71 $generated@@80 ($generated@@23 $generated@@81) $generated@@82 ($generated@@65 (- $generated@@83 1)))))
($generated@@77 $generated@@84)))) (= ($generated@@71 $generated@@80 ($generated@@23 $generated@@81) $generated@@82 ($generated@@65 $generated@@83)) (ite (= ($generated@@65 $generated@@83) ($generated@@65 0)) $generated@@82 (let (($generated@@85 ($generated@@71 $generated@@80 ($generated@@23 $generated@@81) $generated@@82 ($generated@@65 (- $generated@@83 1)))))
(ite ($generated@@57 $generated@@80 $generated@@80 ($generated@@23 ($generated@@23 $generated@@78)) $generated@@85 $generated@@45) $generated@@85 ($generated@@79 $generated@@85)))))))
 :weight 3
 :pattern ( ($generated@@71 $generated@@80 ($generated@@23 $generated@@81) $generated@@82 ($generated@@65 $generated@@83)))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@63 $generated@@52 ($generated@@86 $generated@@89 $generated@@90) ($generated@@53 $generated@@88))  (and ($generated@@87 $generated@@89 $generated@@88) ($generated@@63 $generated@@52 $generated@@90 ($generated@@53 $generated@@88))))
 :pattern ( ($generated@@63 $generated@@52 ($generated@@86 $generated@@89 $generated@@90) ($generated@@53 $generated@@88)))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@91 $generated@@92) (= ($generated@@44 $generated@@92) $generated@@2))
 :pattern ( ($generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@93 $generated@@94) (= ($generated@@44 $generated@@94) $generated@@3))
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 ($generated@@95 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@95 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@93 $generated@@99) (exists (($generated@@100 T@U) ($generated@@101 T@U) ) (= $generated@@99 ($generated@@86 $generated@@100 $generated@@101))))
 :pattern ( ($generated@@93 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@91 $generated@@102) (= $generated@@102 $generated@@45))
 :pattern ( ($generated@@91 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (and ($generated@@63 $generated@@52 $generated@@108 ($generated@@53 $generated@@104)) ($generated@@63 $generated@@52 $generated@@109 ($generated@@53 $generated@@105))) (= ($generated@@22 $generated@@104 $generated@@105 $generated@@106 ($generated@@23 $generated@@107) $generated@@108 $generated@@109)  (and (=> (< 0 ($generated@@40 $generated@@106)) (or (and ($generated@@91 $generated@@108) ($generated@@91 $generated@@109)) (and (and ($generated@@93 $generated@@108) ($generated@@93 $generated@@109)) (=> (and ($generated@@93 $generated@@108) ($generated@@93 $generated@@109)) (and (= ($generated@@103 $generated@@108) ($generated@@103 $generated@@109)) ($generated@@22 $generated@@104 $generated@@105 ($generated@@39 $generated@@106 ($generated@@24 1)) $generated@@107 ($generated@@79 $generated@@108) ($generated@@79 $generated@@109))))))) (=> (and (or (not (= $generated@@106 ($generated@@24 0))) (not true)) (= ($generated@@40 $generated@@106) 0)) ($generated@@57 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109)))))
 :pattern ( ($generated@@22 $generated@@104 $generated@@105 $generated@@106 ($generated@@23 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@63 $generated@@8 $generated@@110 $generated@@36) (<= ($generated@@65 0) ($generated@@13 $generated@@110)))
 :pattern ( ($generated@@63 $generated@@8 $generated@@110 $generated@@36))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@111 ($generated@@96 $generated@@115 $generated@@112) $generated@@113 $generated@@114) ($generated@@35 $generated@@115 $generated@@112 $generated@@113 $generated@@114))
 :pattern ( ($generated@@111 ($generated@@96 $generated@@115 $generated@@112) $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@118 T@U) ) (!  (and (= ($generated@@116 ($generated@@53 $generated@@118)) $generated@@1) (= ($generated@@117 ($generated@@53 $generated@@118)) $generated@@5))
 :pattern ( ($generated@@53 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (and ($generated@@119 $generated@@121) (<= ($generated@@40 $generated@@121) ($generated@@40 $generated@@120))) (and (= ($generated@@119 ($generated@@39 $generated@@120 $generated@@121)) ($generated@@119 $generated@@120)) (= ($generated@@40 ($generated@@39 $generated@@120 $generated@@121)) (- ($generated@@40 $generated@@120) ($generated@@40 $generated@@121)))))
 :pattern ( ($generated@@39 $generated@@120 $generated@@121))
)))
(assert  (=> (<= 1 $generated@@70) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 Int) ) (!  (=> (or ($generated@@72 $generated@@122 ($generated@@67 $generated@@52 $generated@@124) ($generated@@65 $generated@@125)) (and (< 1 $generated@@70) (and ($generated@@63 $generated@@52 $generated@@124 ($generated@@53 $generated@@122)) (<= ($generated@@65 0) $generated@@125)))) (and (=> (or (not (= ($generated@@65 $generated@@125) ($generated@@65 0))) (not true)) (and ($generated@@72 $generated@@122 ($generated@@67 $generated@@52 $generated@@124) ($generated@@65 (- $generated@@125 1))) (let (($generated@@126 ($generated@@67 $generated@@52 ($generated@@71 $generated@@122 ($generated@@23 $generated@@123) ($generated@@67 $generated@@52 $generated@@124) ($generated@@65 (- $generated@@125 1))))))
($generated@@77 $generated@@126)))) (= ($generated@@71 $generated@@122 ($generated@@23 $generated@@123) ($generated@@67 $generated@@52 $generated@@124) ($generated@@65 $generated@@125)) (ite (= ($generated@@65 $generated@@125) ($generated@@65 0)) $generated@@124 (let (($generated@@127 ($generated@@67 $generated@@52 ($generated@@71 $generated@@122 ($generated@@23 $generated@@123) ($generated@@67 $generated@@52 $generated@@124) ($generated@@65 (- $generated@@125 1))))))
(ite ($generated@@57 $generated@@122 $generated@@122 ($generated@@23 ($generated@@23 $generated@@78)) $generated@@127 $generated@@45) $generated@@127 ($generated@@79 $generated@@127)))))))
 :weight 3
 :pattern ( ($generated@@71 $generated@@122 ($generated@@23 $generated@@123) ($generated@@67 $generated@@52 $generated@@124) ($generated@@65 $generated@@125)))
))))
(assert (forall (($generated@@128 Int) ) (!  (=> (<= 0 $generated@@128) (and ($generated@@119 ($generated@@24 $generated@@128)) (= ($generated@@40 ($generated@@24 $generated@@128)) $generated@@128)))
 :pattern ( ($generated@@24 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@87 $generated@@129 $generated@@36) (and (= ($generated@@96 $generated@@8 ($generated@@95 $generated@@8 $generated@@129)) $generated@@129) ($generated@@63 $generated@@8 ($generated@@95 $generated@@8 $generated@@129) $generated@@36)))
 :pattern ( ($generated@@87 $generated@@129 $generated@@36))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and ($generated@@63 $generated@@52 $generated@@133 ($generated@@53 $generated@@130)) ($generated@@63 $generated@@52 $generated@@134 ($generated@@53 $generated@@131))) (= ($generated@@57 $generated@@130 $generated@@131 ($generated@@23 $generated@@132) $generated@@133 $generated@@134)  (or (and ($generated@@91 $generated@@133) ($generated@@91 $generated@@134)) (and (and ($generated@@93 $generated@@133) ($generated@@93 $generated@@134)) (=> (and ($generated@@93 $generated@@133) ($generated@@93 $generated@@134)) (and (= ($generated@@103 $generated@@133) ($generated@@103 $generated@@134)) ($generated@@57 $generated@@130 $generated@@131 $generated@@132 ($generated@@79 $generated@@133) ($generated@@79 $generated@@134))))))))
 :pattern ( ($generated@@57 $generated@@130 $generated@@131 ($generated@@23 $generated@@132) $generated@@133 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@70) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 Int) ) (!  (=> (and (or ($generated@@72 $generated@@136 $generated@@138 $generated@@139) (and (< 1 $generated@@70) (and (and ($generated@@63 $generated@@52 $generated@@138 ($generated@@53 $generated@@136)) ($generated@@35 $generated@@52 $generated@@138 ($generated@@53 $generated@@136) $generated@@135)) (<= ($generated@@65 0) $generated@@139)))) ($generated@@54 $generated@@135)) ($generated@@35 $generated@@52 ($generated@@71 $generated@@136 $generated@@137 $generated@@138 $generated@@139) ($generated@@53 $generated@@136) $generated@@135))
 :pattern ( ($generated@@35 $generated@@52 ($generated@@71 $generated@@136 $generated@@137 $generated@@138 $generated@@139) ($generated@@53 $generated@@136) $generated@@135))
))))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@77 $generated@@140) (or ($generated@@91 $generated@@140) ($generated@@93 $generated@@140)))
 :pattern ( ($generated@@77 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (or ($generated@@31 $generated@@141 $generated@@142) (= $generated@@141 $generated@@142)) ($generated@@31 $generated@@142 $generated@@141))
 :pattern ( ($generated@@31 $generated@@141 $generated@@142) ($generated@@31 $generated@@142 $generated@@141))
)))
(assert  (=> (<= 1 $generated@@70) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Int) ) (!  (=> (or ($generated@@72 $generated@@143 $generated@@145 $generated@@146) (and (< 1 $generated@@70) (and ($generated@@63 $generated@@52 $generated@@145 ($generated@@53 $generated@@143)) (<= ($generated@@65 0) $generated@@146)))) (and (=> (or (not (= $generated@@146 ($generated@@65 0))) (not true)) (and ($generated@@72 $generated@@143 $generated@@145 (- $generated@@146 1)) (let (($generated@@147 ($generated@@71 $generated@@143 $generated@@144 $generated@@145 (- $generated@@146 1))))
($generated@@77 $generated@@147)))) (= ($generated@@71 $generated@@143 ($generated@@23 $generated@@144) $generated@@145 $generated@@146) (ite (= $generated@@146 ($generated@@65 0)) $generated@@145 (let (($generated@@148 ($generated@@71 $generated@@143 $generated@@144 $generated@@145 (- $generated@@146 1))))
(ite ($generated@@57 $generated@@143 $generated@@143 ($generated@@23 ($generated@@23 $generated@@78)) $generated@@148 $generated@@45) $generated@@148 ($generated@@79 $generated@@148)))))))
 :pattern ( ($generated@@71 $generated@@143 ($generated@@23 $generated@@144) $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> ($generated@@63 $generated@@52 $generated@@150 ($generated@@53 $generated@@149)) (or ($generated@@91 $generated@@150) ($generated@@93 $generated@@150)))
 :pattern ( ($generated@@93 $generated@@150) ($generated@@63 $generated@@52 $generated@@150 ($generated@@53 $generated@@149)))
 :pattern ( ($generated@@91 $generated@@150) ($generated@@63 $generated@@52 $generated@@150 ($generated@@53 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@87 ($generated@@96 $generated@@153 $generated@@151) $generated@@152) ($generated@@63 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@87 ($generated@@96 $generated@@153 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (<= 0 ($generated@@40 $generated@@154))
 :pattern ( ($generated@@40 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@44 ($generated@@86 $generated@@155 $generated@@156)) $generated@@3)
 :pattern ( ($generated@@86 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@103 ($generated@@86 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@86 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@79 ($generated@@86 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@86 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@161 ($generated@@53 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@53 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@95 $generated@@164 ($generated@@96 $generated@@164 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@96 $generated@@164 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (and (and (and (=> ($generated@@31 $generated@@165 $generated@@166) (or (not (= $generated@@165 $generated@@166)) (not true))) (=> (and ($generated@@119 $generated@@165) (not ($generated@@119 $generated@@166))) ($generated@@31 $generated@@165 $generated@@166))) (=> (and ($generated@@119 $generated@@165) ($generated@@119 $generated@@166)) (= ($generated@@31 $generated@@165 $generated@@166) (< ($generated@@40 $generated@@165) ($generated@@40 $generated@@166))))) (=> (and ($generated@@31 $generated@@165 $generated@@166) ($generated@@119 $generated@@166)) ($generated@@119 $generated@@165)))
 :pattern ( ($generated@@31 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@57 $generated@@167 $generated@@168 ($generated@@23 $generated@@169) $generated@@170 $generated@@171) (forall (($generated@@172 T@U) ) (! ($generated@@22 $generated@@167 $generated@@168 $generated@@172 ($generated@@23 $generated@@169) $generated@@170 $generated@@171)
 :pattern ( ($generated@@22 $generated@@167 $generated@@168 $generated@@172 ($generated@@23 $generated@@169) $generated@@170 $generated@@171))
)))
 :pattern ( ($generated@@57 $generated@@167 $generated@@168 ($generated@@23 $generated@@169) $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and ($generated@@54 $generated@@175) (and ($generated@@93 $generated@@173) ($generated@@35 $generated@@52 $generated@@173 ($generated@@53 $generated@@174) $generated@@175))) ($generated@@111 ($generated@@103 $generated@@173) $generated@@174 $generated@@175))
 :pattern ( ($generated@@111 ($generated@@103 $generated@@173) $generated@@174 $generated@@175))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@176 $generated@@187 $generated@@188 $generated@@189 ($generated@@183 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@192 $generated@@193) $generated@@190)
 :weight 0
)) (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@176 $generated@@194 $generated@@195 $generated@@196 ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@176 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@176 $generated@@203 $generated@@204 $generated@@205 ($generated@@183 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@176 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (= ($generated@@6 $generated@@177) 4)) (= ($generated@@6 $generated@@178) 5)) (forall (($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@180 $generated@@212 $generated@@213 ($generated@@184 $generated@@212 $generated@@213 $generated@@215 $generated@@216 $generated@@214) $generated@@216) $generated@@214)
 :weight 0
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@221 $generated@@222) (= ($generated@@180 $generated@@217 $generated@@218 ($generated@@184 $generated@@217 $generated@@218 $generated@@220 $generated@@221 $generated@@219) $generated@@222) ($generated@@180 $generated@@217 $generated@@218 $generated@@220 $generated@@222)))
 :weight 0
))) (= ($generated@@6 $generated@@181) 6)) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (= ($generated@@6 ($generated@@182 $generated@@223 $generated@@224)) 7))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (! (= ($generated@@185 ($generated@@182 $generated@@225 $generated@@226)) $generated@@225)
 :pattern ( ($generated@@182 $generated@@225 $generated@@226))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@186 ($generated@@182 $generated@@227 $generated@@228)) $generated@@228)
 :pattern ( ($generated@@182 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (= ($generated@@11 ($generated@@176 $generated@@177 $generated@@178 $generated@@7 ($generated@@179 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (or (not (= $generated@@233 $generated@@229)) (not true)) ($generated@@11 ($generated@@95 $generated@@7 ($generated@@180 $generated@@178 $generated@@181 ($generated@@180 $generated@@177 ($generated@@182 $generated@@178 $generated@@181) $generated@@230 $generated@@233) $generated@@231)))) $generated@@232))
 :pattern ( ($generated@@176 $generated@@177 $generated@@178 $generated@@7 ($generated@@179 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Int) ) (! (= ($generated@@71 $generated@@235 ($generated@@23 $generated@@236) $generated@@237 $generated@@238) ($generated@@71 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
 :pattern ( ($generated@@71 $generated@@235 ($generated@@23 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> ($generated@@87 $generated@@240 ($generated@@53 $generated@@239)) (and (= ($generated@@96 $generated@@52 ($generated@@95 $generated@@52 $generated@@240)) $generated@@240) ($generated@@63 $generated@@52 ($generated@@95 $generated@@52 $generated@@240) ($generated@@53 $generated@@239))))
 :pattern ( ($generated@@87 $generated@@240 ($generated@@53 $generated@@239)))
)))
(assert (forall (($generated@@241 T@U) ) (!  (=> ($generated@@119 $generated@@241) (= $generated@@241 ($generated@@24 ($generated@@40 $generated@@241))))
 :pattern ( ($generated@@40 $generated@@241))
 :pattern ( ($generated@@119 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and ($generated@@54 $generated@@244) (and ($generated@@93 $generated@@242) ($generated@@35 $generated@@52 $generated@@242 ($generated@@53 $generated@@243) $generated@@244))) ($generated@@35 $generated@@52 ($generated@@79 $generated@@242) ($generated@@53 $generated@@243) $generated@@244))
 :pattern ( ($generated@@35 $generated@@52 ($generated@@79 $generated@@242) ($generated@@53 $generated@@243) $generated@@244))
)))
(assert (= ($generated@@116 $generated@@36) $generated@@0))
(assert (= ($generated@@117 $generated@@36) $generated@@4))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and ($generated@@119 $generated@@246) (<= ($generated@@40 $generated@@246) ($generated@@40 $generated@@245))) (or (and (= $generated@@246 ($generated@@24 0)) (= ($generated@@39 $generated@@245 $generated@@246) $generated@@245)) (and (or (not (= $generated@@246 ($generated@@24 0))) (not true)) ($generated@@31 ($generated@@39 $generated@@245 $generated@@246) $generated@@245))))
 :pattern ( ($generated@@39 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and ($generated@@31 $generated@@249 $generated@@253) ($generated@@22 $generated@@247 $generated@@248 $generated@@253 ($generated@@23 $generated@@250) $generated@@251 $generated@@252)) ($generated@@22 $generated@@247 $generated@@248 $generated@@249 ($generated@@23 $generated@@250) $generated@@251 $generated@@252))
 :pattern ( ($generated@@22 $generated@@247 $generated@@248 $generated@@249 ($generated@@23 $generated@@250) $generated@@251 $generated@@252) ($generated@@22 $generated@@247 $generated@@248 $generated@@253 ($generated@@23 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (! (= ($generated@@57 $generated@@254 $generated@@255 ($generated@@23 $generated@@256) $generated@@257 $generated@@258) ($generated@@57 $generated@@254 $generated@@255 $generated@@256 $generated@@257 $generated@@258))
 :pattern ( ($generated@@57 $generated@@254 $generated@@255 ($generated@@23 $generated@@256) $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@96 $generated@@8 ($generated@@12 ($generated@@65 $generated@@259))) ($generated@@67 $generated@@181 ($generated@@96 $generated@@8 ($generated@@12 $generated@@259))))
 :pattern ( ($generated@@96 $generated@@8 ($generated@@12 ($generated@@65 $generated@@259))))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@T) ) (! (= ($generated@@96 $generated@@261 ($generated@@67 $generated@@261 $generated@@260)) ($generated@@67 $generated@@181 ($generated@@96 $generated@@261 $generated@@260)))
 :pattern ( ($generated@@96 $generated@@261 ($generated@@67 $generated@@261 $generated@@260)))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (forall (($generated@@267 Int) ) (!  (=> (<= 0 $generated@@267) ($generated@@22 $generated@@262 $generated@@263 ($generated@@24 $generated@@267) ($generated@@23 $generated@@264) $generated@@265 $generated@@266))
 :pattern ( ($generated@@22 $generated@@262 $generated@@263 ($generated@@24 $generated@@267) ($generated@@23 $generated@@264) $generated@@265 $generated@@266))
)) ($generated@@57 $generated@@262 $generated@@263 ($generated@@23 $generated@@264) $generated@@265 $generated@@266))
 :pattern ( ($generated@@57 $generated@@262 $generated@@263 ($generated@@23 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> ($generated@@54 $generated@@271) (= ($generated@@35 $generated@@52 ($generated@@86 $generated@@269 $generated@@270) ($generated@@53 $generated@@268) $generated@@271)  (and ($generated@@111 $generated@@269 $generated@@268 $generated@@271) ($generated@@35 $generated@@52 $generated@@270 ($generated@@53 $generated@@268) $generated@@271))))
 :pattern ( ($generated@@35 $generated@@52 ($generated@@86 $generated@@269 $generated@@270) ($generated@@53 $generated@@268) $generated@@271))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@279  (=> (= $generated@@272 ($generated@@179 $generated@@273 $generated@@274 $generated false)) (=> (and ($generated@@93 $generated@@275) (= (ControlFlow 0 2) (- 0 1))) ($generated@@93 $generated@@275)))))
(let (($generated@@280  (=> (and ($generated@@54 $generated@@274) ($generated@@276 $generated@@274)) (=> (and (and (and (and ($generated@@63 $generated@@52 $generated@@275 ($generated@@53 $generated@@277)) ($generated@@35 $generated@@52 $generated@@275 ($generated@@53 $generated@@277) $generated@@274)) ($generated@@77 $generated@@275)) (<= ($generated@@65 0) $generated@@278)) (and (= 3 $generated@@70) (= (ControlFlow 0 3) 2))) $generated@@279))))
$generated@@280)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
