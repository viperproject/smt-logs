(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U T@U) Bool)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@0) 0))
(assert (= ($generated@@27 $generated@@0) $generated@@1))
(assert (= ($generated@@10 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@33 ($generated@@30 $generated@@32) $generated@@34) ($generated@@28 $generated@@29 $generated@@33 ($generated@@31 $generated@@32) $generated@@34))
 :pattern ( ($generated@@28 $generated@@29 $generated@@33 ($generated@@30 $generated@@32) $generated@@34))
 :pattern ( ($generated@@28 $generated@@29 $generated@@33 ($generated@@31 $generated@@32) $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@37 $generated@@35 $generated@@38) ($generated@@28 $generated@@29 $generated@@37 $generated@@36 $generated@@38))
 :pattern ( ($generated@@28 $generated@@29 $generated@@37 $generated@@35 $generated@@38))
 :pattern ( ($generated@@28 $generated@@29 $generated@@37 $generated@@36 $generated@@38))
)))
(assert (= ($generated@@26 $generated@@39) 0))
(assert (= ($generated@@40 $generated@@4 $generated@@9) $generated@@39))
(assert ($generated@@41 $generated@@39))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@10 $generated@@45) 4)) (= ($generated@@10 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@10 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@69 ($generated@@31 $generated@@68) $generated@@70)  (or (= $generated@@69 $generated@@42) ($generated@@15 ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@70 $generated@@69) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@69 ($generated@@31 $generated@@68) $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@71 $generated@@36 $generated@@72)  (or (= $generated@@71 $generated@@42) ($generated@@15 ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@72 $generated@@71) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@71 $generated@@36 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@43 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@43 $generated@@75 $generated@@74))
)))
(assert (= ($generated@@10 $generated@@77) 7))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@76 $generated@@77 $generated@@81 ($generated@@78 $generated@@82)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@79 $generated@@81 $generated@@83) ($generated@@80 $generated@@83 $generated@@82))
 :pattern ( ($generated@@79 $generated@@81 $generated@@83))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@81 ($generated@@78 $generated@@82)))
)))
(assert  (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@84 $generated@@87 $generated@@88 $generated@@89 ($generated@@86 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@93 $generated@@90) $generated@@92 $generated@@93) $generated@@90)
 :weight 0
)) (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@99 $generated@@101) (= ($generated@@84 $generated@@94 $generated@@95 $generated@@96 ($generated@@86 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@99 $generated@@100 $generated@@97) $generated@@101 $generated@@102) ($generated@@84 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@101 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@84 $generated@@103 $generated@@104 $generated@@105 ($generated@@86 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@84 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)))))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@15 ($generated@@84 $generated@@29 $generated@@45 $generated@@11 ($generated@@85 $generated@@112 $generated@@113 $generated@@114 $generated@@115 $generated@@116) $generated@@117 $generated@@118))  (=> (and (or (not (= $generated@@117 $generated@@112)) (not true)) ($generated@@15 ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@113 $generated@@117) $generated@@114)))) (or (= $generated@@117 $generated@@115) ($generated@@79 $generated@@116 ($generated@@73 $generated@@29 $generated@@117)))))
 :pattern ( ($generated@@84 $generated@@29 $generated@@45 $generated@@11 ($generated@@85 $generated@@112 $generated@@113 $generated@@114 $generated@@115 $generated@@116) $generated@@117 $generated@@118))
)))
(assert ($generated@@41 $generated@@0))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@76 $generated@@29 $generated@@120 ($generated@@30 $generated@@119))  (and ($generated@@76 $generated@@29 $generated@@120 ($generated@@31 $generated@@119)) (or (not (= $generated@@120 $generated@@42)) (not true))))
 :pattern ( ($generated@@76 $generated@@29 $generated@@120 ($generated@@30 $generated@@119)))
 :pattern ( ($generated@@76 $generated@@29 $generated@@120 ($generated@@31 $generated@@119)))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@121 ($generated@@73 $generated@@125 $generated@@122) $generated@@123 $generated@@124) ($generated@@28 $generated@@125 $generated@@122 $generated@@123 $generated@@124))
 :pattern ( ($generated@@121 ($generated@@73 $generated@@125 $generated@@122) $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@128 T@U) ) (!  (and (= ($generated@@126 ($generated@@31 $generated@@128)) $generated@@5) (= ($generated@@127 ($generated@@31 $generated@@128)) $generated@@8))
 :pattern ( ($generated@@31 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (and (= ($generated@@126 ($generated@@30 $generated@@129)) $generated@@6) (= ($generated@@127 ($generated@@30 $generated@@129)) $generated@@8))
 :pattern ( ($generated@@30 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@80 $generated@@130 $generated@@36) (and (= ($generated@@73 $generated@@29 ($generated@@43 $generated@@29 $generated@@130)) $generated@@130) ($generated@@76 $generated@@29 ($generated@@43 $generated@@29 $generated@@130) $generated@@36)))
 :pattern ( ($generated@@80 $generated@@130 $generated@@36))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@80 $generated@@131 $generated@@35) (and (= ($generated@@73 $generated@@29 ($generated@@43 $generated@@29 $generated@@131)) $generated@@131) ($generated@@76 $generated@@29 ($generated@@43 $generated@@29 $generated@@131) $generated@@35)))
 :pattern ( ($generated@@80 $generated@@131 $generated@@35))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@76 $generated@@29 $generated@@134 ($generated@@31 $generated@@133))  (or (= $generated@@134 $generated@@42) (= ($generated@@132 $generated@@134) ($generated@@31 $generated@@133))))
 :pattern ( ($generated@@76 $generated@@29 $generated@@134 ($generated@@31 $generated@@133)))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@76 $generated@@29 $generated@@135 $generated@@35)  (and ($generated@@76 $generated@@29 $generated@@135 $generated@@36) (or (not (= $generated@@135 $generated@@42)) (not true))))
 :pattern ( ($generated@@76 $generated@@29 $generated@@135 $generated@@35))
 :pattern ( ($generated@@76 $generated@@29 $generated@@135 $generated@@36))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and ($generated@@136 $generated@@138) (and (or (not (= $generated@@139 $generated@@42)) (not true)) (= ($generated@@132 $generated@@139) ($generated@@31 $generated@@137)))) ($generated@@76 $generated@@77 ($generated@@43 $generated@@77 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@138 $generated@@139) $generated@@39)) ($generated@@78 $generated@@36)))
 :pattern ( ($generated@@43 $generated@@77 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@138 $generated@@139) $generated@@39)) ($generated@@31 $generated@@137))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and ($generated@@136 $generated@@141) (and (or (not (= $generated@@142 $generated@@42)) (not true)) (= ($generated@@132 $generated@@142) ($generated@@31 $generated@@140)))) ($generated@@15 ($generated@@43 $generated@@11 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@141 $generated@@142) $generated@@0)))) ($generated@@28 $generated@@77 ($generated@@43 $generated@@77 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@141 $generated@@142) $generated@@39)) ($generated@@78 $generated@@36) $generated@@141))
 :pattern ( ($generated@@43 $generated@@77 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@141 $generated@@142) $generated@@39)) ($generated@@31 $generated@@140))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (and (= ($generated@@143 ($generated@@40 $generated@@144 $generated@@145)) $generated@@144) (= ($generated@@27 ($generated@@40 $generated@@144 $generated@@145)) $generated@@145))
 :pattern ( ($generated@@40 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@80 ($generated@@73 $generated@@148 $generated@@146) $generated@@147) ($generated@@76 $generated@@148 $generated@@146 $generated@@147))
 :pattern ( ($generated@@80 ($generated@@73 $generated@@148 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@28 $generated@@77 $generated@@149 ($generated@@78 $generated@@150) $generated@@151) (forall (($generated@@152 T@U) ) (!  (=> ($generated@@79 $generated@@149 $generated@@152) ($generated@@121 $generated@@152 $generated@@150 $generated@@151))
 :pattern ( ($generated@@79 $generated@@149 $generated@@152))
)))
 :pattern ( ($generated@@28 $generated@@77 $generated@@149 ($generated@@78 $generated@@150) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! ($generated@@76 $generated@@29 $generated@@153 $generated@@36)
 :pattern ( ($generated@@76 $generated@@29 $generated@@153 $generated@@36))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@78 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@78 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@126 ($generated@@78 $generated@@156)) $generated)
 :pattern ( ($generated@@78 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@31 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@31 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@159 ($generated@@30 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@30 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@43 $generated@@162 ($generated@@73 $generated@@162 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@73 $generated@@162 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@80 $generated@@163 ($generated@@78 $generated@@164)) (and (= ($generated@@73 $generated@@77 ($generated@@43 $generated@@77 $generated@@163)) $generated@@163) ($generated@@76 $generated@@77 ($generated@@43 $generated@@77 $generated@@163) ($generated@@78 $generated@@164))))
 :pattern ( ($generated@@80 $generated@@163 ($generated@@78 $generated@@164)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@80 $generated@@166 ($generated@@31 $generated@@165)) (and (= ($generated@@73 $generated@@29 ($generated@@43 $generated@@29 $generated@@166)) $generated@@166) ($generated@@76 $generated@@29 ($generated@@43 $generated@@29 $generated@@166) ($generated@@31 $generated@@165))))
 :pattern ( ($generated@@80 $generated@@166 ($generated@@31 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@80 $generated@@168 ($generated@@30 $generated@@167)) (and (= ($generated@@73 $generated@@29 ($generated@@43 $generated@@29 $generated@@168)) $generated@@168) ($generated@@76 $generated@@29 ($generated@@43 $generated@@29 $generated@@168) ($generated@@30 $generated@@167))))
 :pattern ( ($generated@@80 $generated@@168 ($generated@@30 $generated@@167)))
)))
(assert (= ($generated@@126 $generated@@36) $generated@@2))
(assert (= ($generated@@127 $generated@@36) $generated@@7))
(assert (= ($generated@@126 $generated@@35) $generated@@3))
(assert (= ($generated@@127 $generated@@35) $generated@@7))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () Bool)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@176 true))
(let (($generated@@177 true))
(let (($generated@@178  (=> (and (= $generated@@169 ($generated@@85 $generated@@42 $generated@@170 $generated@@0 $generated@@171 ($generated@@43 $generated@@77 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@29 ($generated@@47 $generated@@45 $generated@@46) $generated@@170 $generated@@171) $generated@@39)))) (= $generated@@172 ($generated@@15 ($generated@@84 $generated@@29 $generated@@45 $generated@@11 $generated@@169 $generated@@171 $generated@@39)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@172) (=> $generated@@172 (and (=> (= (ControlFlow 0 3) 1) $generated@@177) (=> (= (ControlFlow 0 3) 2) $generated@@176)))))))
(let (($generated@@179  (=> (and ($generated@@136 $generated@@170) ($generated@@173 $generated@@170)) (=> (and (and (or (not (= $generated@@171 $generated@@42)) (not true)) (and ($generated@@76 $generated@@29 $generated@@171 ($generated@@30 $generated@@174)) ($generated@@28 $generated@@29 $generated@@171 ($generated@@30 $generated@@174) $generated@@170))) (and (= 0 $generated@@175) (= (ControlFlow 0 5) 3))) $generated@@178))))
$generated@@179)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
