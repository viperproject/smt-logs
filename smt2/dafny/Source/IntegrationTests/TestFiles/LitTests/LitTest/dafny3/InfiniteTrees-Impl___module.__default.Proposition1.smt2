(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 () Int)
(declare-fun $generated@@34 (T@U T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@48 (Int) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 (Int) Int)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@78 (T@U T@U Int) Bool)
(declare-fun $generated@@79 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@U T@U Int) Bool)
(declare-fun $generated@@108 (T@U T@U) Bool)
(declare-fun $generated@@113 (T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@238 (T@U) Int)
(declare-fun $generated@@243 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@245 () T@T)
(declare-fun $generated@@246 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@247 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@248 (T@T T@T) T@T)
(declare-fun $generated@@249 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@252 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@11 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@11 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (= ($generated@@9 $generated@@38) 3))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or ($generated@@36 $generated@@52 $generated@@53) (and (< 3 $generated@@33) ($generated@@37 $generated@@38 $generated@@53 ($generated@@39 $generated@@40)))) (and (and (=> (< 0 ($generated@@41 $generated@@52)) (=> (not ($generated@@42 $generated@@53)) (let (($generated@@54 ($generated@@43 $generated@@53)))
(let (($generated@@55 ($generated@@44 $generated@@38 ($generated@@45 $generated@@53))))
 (and (and ($generated@@46 $generated@@55) ($generated@@36 ($generated@@47 $generated@@52 ($generated@@48 1)) ($generated@@49 $generated@@55))) (=> ($generated@@34 $generated@@51 ($generated@@47 $generated@@52 ($generated@@48 1)) ($generated@@49 $generated@@55)) ($generated@@36 ($generated@@47 $generated@@52 ($generated@@48 1)) $generated@@54))))))) (=> (=> (< 0 ($generated@@41 $generated@@52)) (ite ($generated@@42 $generated@@53) false (let (($generated@@56 ($generated@@43 $generated@@53)))
(let (($generated@@57 ($generated@@44 $generated@@38 ($generated@@45 $generated@@53))))
 (and ($generated@@34 $generated@@51 ($generated@@47 $generated@@52 ($generated@@48 1)) ($generated@@49 $generated@@57)) ($generated@@34 $generated@@51 ($generated@@47 $generated@@52 ($generated@@48 1)) $generated@@56)))))) (=> (= ($generated@@50 0) ($generated@@41 $generated@@52)) (forall (($generated@@58 T@U) ) (!  (=> ($generated@@25 $generated@@58 $generated@@52) ($generated@@36 $generated@@58 $generated@@53))
 :pattern ( ($generated@@34 $generated@@51 $generated@@58 $generated@@53))
))))) (= ($generated@@34 ($generated@@35 $generated@@51) $generated@@52 $generated@@53)  (and (=> (< 0 ($generated@@41 $generated@@52)) (ite ($generated@@42 $generated@@53) false (let (($generated@@59 ($generated@@43 $generated@@53)))
(let (($generated@@60 ($generated@@44 $generated@@38 ($generated@@45 $generated@@53))))
 (and ($generated@@34 $generated@@51 ($generated@@47 $generated@@52 ($generated@@48 1)) ($generated@@49 $generated@@60)) ($generated@@34 $generated@@51 ($generated@@47 $generated@@52 ($generated@@48 1)) $generated@@59)))))) (=> (= ($generated@@50 0) ($generated@@41 $generated@@52)) (forall (($generated@@61 T@U) ) (!  (=> ($generated@@25 $generated@@61 $generated@@52) ($generated@@34 $generated@@51 $generated@@61 $generated@@53))
 :pattern ( ($generated@@34 $generated@@51 $generated@@61 $generated@@53))
)))))))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@51) $generated@@52 $generated@@53))
))))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@68 T@U) ) (!  (=> (or ($generated@@64 ($generated@@63 $generated@@38 $generated@@68)) (and (< 3 $generated@@33) ($generated@@37 $generated@@38 $generated@@68 $generated@@40))) (and (and ($generated@@46 ($generated@@63 $generated@@38 $generated@@68)) ($generated@@65 ($generated@@63 $generated@@38 ($generated@@49 ($generated@@63 $generated@@38 $generated@@68))))) (= ($generated@@62 ($generated@@63 $generated@@38 $generated@@68))  (not ($generated@@14 ($generated@@63 $generated@@10 ($generated@@13 ($generated@@66 ($generated@@35 $generated@@67) ($generated@@63 $generated@@38 ($generated@@49 ($generated@@63 $generated@@38 $generated@@68)))))))))))
 :weight 3
 :pattern ( ($generated@@62 ($generated@@63 $generated@@38 $generated@@68)))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 Int) ($generated@@71 Int) ) (!  (=> (and (and (<= 0 $generated@@70) (<= 0 $generated@@71)) (<= (+ $generated@@70 $generated@@71) ($generated@@41 $generated@@69))) (= ($generated@@47 ($generated@@47 $generated@@69 ($generated@@48 $generated@@70)) ($generated@@48 $generated@@71)) ($generated@@47 $generated@@69 ($generated@@48 (+ $generated@@70 $generated@@71)))))
 :pattern ( ($generated@@47 ($generated@@47 $generated@@69 ($generated@@48 $generated@@70)) ($generated@@48 $generated@@71)))
)))
(assert (= ($generated@@72 $generated@@73) $generated@@3))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@74 $generated@@40) ($generated@@46 $generated@@74))
 :pattern ( ($generated@@46 $generated@@74) ($generated@@37 $generated@@38 $generated@@74 $generated@@40))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> ($generated@@75 $generated@@77) ($generated@@29 $generated@@38 $generated@@73 ($generated@@39 $generated@@76) $generated@@77))
 :pattern ( ($generated@@29 $generated@@38 $generated@@73 ($generated@@39 $generated@@76) $generated@@77))
)))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 Int) ) (!  (=> (and (and ($generated@@37 $generated@@38 $generated@@81 ($generated@@39 $generated@@40)) (<= ($generated@@50 0) $generated@@82)) ($generated@@78 ($generated@@35 $generated@@80) $generated@@81 $generated@@82)) (forall (($generated@@83 T@U) ) (! ($generated@@79 ($generated@@35 $generated@@80) $generated@@83 $generated@@81 $generated@@82)
 :pattern ( ($generated@@79 ($generated@@35 $generated@@80) $generated@@83 $generated@@81 $generated@@82))
)))
 :pattern ( ($generated@@78 ($generated@@35 $generated@@80) $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@84 T@U) ) (! ($generated@@37 $generated@@38 $generated@@73 ($generated@@39 $generated@@84))
 :pattern ( ($generated@@37 $generated@@38 $generated@@73 ($generated@@39 $generated@@84)))
)))
(assert  (=> (<= 2 $generated@@33) (forall (($generated@@90 T@U) ) (!  (=> (or $generated@@86 (< 2 $generated@@33)) (and $generated@@86 (= ($generated@@85 ($generated@@35 $generated@@90)) ($generated@@63 $generated@@38 ($generated@@87 ($generated@@63 $generated@@38 ($generated@@88 ($generated@@89 $generated@@38 ($generated@@63 $generated@@38 ($generated@@85 $generated@@90))) ($generated@@63 $generated@@38 $generated@@73))))))))
 :pattern ( ($generated@@85 ($generated@@35 $generated@@90)))
))))
(assert (forall (($generated@@91 Int) ) (! (= ($generated@@50 $generated@@91) $generated@@91)
 :pattern ( ($generated@@50 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@63 $generated@@93 $generated@@92) $generated@@92)
 :pattern ( ($generated@@63 $generated@@93 $generated@@92))
)))
(assert (= ($generated@@9 $generated@@94) 4))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 Int) ) (!  (=> (or ($generated@@95 ($generated@@63 $generated@@94 $generated@@97) ($generated@@63 $generated@@38 $generated@@98) ($generated@@50 $generated@@99)) (and (< 3 $generated@@33) (and ($generated@@37 $generated@@38 $generated@@98 ($generated@@39 $generated@@40)) (<= ($generated@@50 0) $generated@@99)))) (and (and (=> (< 0 ($generated@@41 $generated@@97)) (=> (not ($generated@@14 ($generated@@63 $generated@@10 ($generated@@13 ($generated@@42 ($generated@@63 $generated@@38 $generated@@98)))))) (let (($generated@@100 ($generated@@63 $generated@@38 ($generated@@43 ($generated@@63 $generated@@38 $generated@@98)))))
(let (($generated@@101 ($generated@@63 $generated@@38 ($generated@@44 $generated@@38 ($generated@@45 ($generated@@63 $generated@@38 $generated@@98))))))
 (=> (<= ($generated@@50 1) ($generated@@50 $generated@@99)) (and (and ($generated@@46 $generated@@101) ($generated@@95 ($generated@@47 $generated@@97 ($generated@@48 1)) ($generated@@49 $generated@@101) ($generated@@50 (- $generated@@99 1)))) (=> ($generated@@79 ($generated@@35 $generated@@96) ($generated@@47 $generated@@97 ($generated@@48 1)) ($generated@@49 $generated@@101) ($generated@@50 (- $generated@@99 1))) ($generated@@95 ($generated@@47 $generated@@97 ($generated@@48 1)) $generated@@100 ($generated@@50 $generated@@99))))))))) (=> (=> (< 0 ($generated@@41 $generated@@97)) (ite ($generated@@42 ($generated@@63 $generated@@38 $generated@@98)) true (let (($generated@@102 ($generated@@63 $generated@@38 ($generated@@43 ($generated@@63 $generated@@38 $generated@@98)))))
(let (($generated@@103 ($generated@@63 $generated@@38 ($generated@@44 $generated@@38 ($generated@@45 ($generated@@63 $generated@@38 $generated@@98))))))
 (and (and (<= ($generated@@50 1) ($generated@@50 $generated@@99)) ($generated@@79 ($generated@@35 $generated@@96) ($generated@@47 $generated@@97 ($generated@@48 1)) ($generated@@63 $generated@@38 ($generated@@49 $generated@@103)) ($generated@@50 (- $generated@@99 1)))) ($generated@@79 ($generated@@35 $generated@@96) ($generated@@47 $generated@@97 ($generated@@48 1)) $generated@@102 ($generated@@50 $generated@@99))))))) (=> (= ($generated@@50 0) ($generated@@41 $generated@@97)) (forall (($generated@@104 T@U) ) (!  (=> ($generated@@25 $generated@@104 $generated@@97) ($generated@@95 $generated@@104 $generated@@98 $generated@@99))
 :pattern ( ($generated@@79 ($generated@@35 $generated@@96) $generated@@104 $generated@@98 $generated@@99))
))))) (= ($generated@@79 ($generated@@35 $generated@@96) ($generated@@63 $generated@@94 $generated@@97) ($generated@@63 $generated@@38 $generated@@98) ($generated@@50 $generated@@99))  (and (=> (< 0 ($generated@@41 $generated@@97)) (ite ($generated@@42 ($generated@@63 $generated@@38 $generated@@98)) true (let (($generated@@105 ($generated@@63 $generated@@38 ($generated@@43 ($generated@@63 $generated@@38 $generated@@98)))))
(let (($generated@@106 ($generated@@63 $generated@@38 ($generated@@44 $generated@@38 ($generated@@45 ($generated@@63 $generated@@38 $generated@@98))))))
 (and (and (<= ($generated@@50 1) ($generated@@50 $generated@@99)) ($generated@@79 ($generated@@35 $generated@@96) ($generated@@47 $generated@@97 ($generated@@48 1)) ($generated@@63 $generated@@38 ($generated@@49 $generated@@106)) ($generated@@50 (- $generated@@99 1)))) ($generated@@79 ($generated@@35 $generated@@96) ($generated@@47 $generated@@97 ($generated@@48 1)) $generated@@105 ($generated@@50 $generated@@99))))))) (=> (= ($generated@@50 0) ($generated@@41 $generated@@97)) (forall (($generated@@107 T@U) ) (!  (=> ($generated@@25 $generated@@107 $generated@@97) ($generated@@79 ($generated@@35 $generated@@96) $generated@@107 $generated@@98 $generated@@99))
 :pattern ( ($generated@@79 ($generated@@35 $generated@@96) $generated@@107 $generated@@98 $generated@@99))
)))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@35 $generated@@96) ($generated@@63 $generated@@94 $generated@@97) ($generated@@63 $generated@@38 $generated@@98) ($generated@@50 $generated@@99)))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@37 $generated@@38 ($generated@@88 $generated@@110 $generated@@111) ($generated@@39 $generated@@109))  (and ($generated@@108 $generated@@110 $generated@@109) ($generated@@37 $generated@@38 $generated@@111 ($generated@@39 $generated@@109))))
 :pattern ( ($generated@@37 $generated@@38 ($generated@@88 $generated@@110 $generated@@111) ($generated@@39 $generated@@109)))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@42 $generated@@112) (= ($generated@@72 $generated@@112) $generated@@3))
 :pattern ( ($generated@@42 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 $generated@@114) (= ($generated@@72 $generated@@114) $generated@@4))
 :pattern ( ($generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@46 $generated@@115) (= ($generated@@72 $generated@@115) $generated@@5))
 :pattern ( ($generated@@46 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@89 $generated@@117 ($generated@@44 $generated@@117 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@44 $generated@@117 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@113 $generated@@118) (exists (($generated@@119 T@U) ($generated@@120 T@U) ) (= $generated@@118 ($generated@@88 $generated@@119 $generated@@120))))
 :pattern ( ($generated@@113 $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@42 $generated@@121) (= $generated@@121 $generated@@73))
 :pattern ( ($generated@@42 $generated@@121))
)))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (and ($generated@@37 $generated@@38 $generated@@123 ($generated@@39 $generated@@40)) (= $generated@@124 ($generated@@48 0))) ($generated@@34 $generated@@122 $generated@@124 $generated@@123))
 :pattern ( ($generated@@34 $generated@@122 $generated@@124 $generated@@123))
))))
(assert  (=> (<= 2 $generated@@33) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (or ($generated@@65 $generated@@126) (and (< 2 $generated@@33) ($generated@@37 $generated@@38 $generated@@126 ($generated@@39 $generated@@40)))) (and (=> (not ($generated@@42 $generated@@126)) (let (($generated@@127 ($generated@@43 $generated@@126)))
(let (($generated@@128 ($generated@@44 $generated@@38 ($generated@@45 $generated@@126))))
 (and (and ($generated@@46 $generated@@128) ($generated@@65 ($generated@@49 $generated@@128))) (=> ($generated@@66 $generated@@125 ($generated@@49 $generated@@128)) ($generated@@65 $generated@@127)))))) (= ($generated@@66 ($generated@@35 $generated@@125) $generated@@126) (ite ($generated@@42 $generated@@126) false (let (($generated@@129 ($generated@@43 $generated@@126)))
(let (($generated@@130 ($generated@@44 $generated@@38 ($generated@@45 $generated@@126))))
 (and ($generated@@66 $generated@@125 ($generated@@49 $generated@@130)) ($generated@@66 $generated@@125 $generated@@129))))))))
 :pattern ( ($generated@@66 ($generated@@35 $generated@@125) $generated@@126))
))))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@37 $generated@@38 $generated@@132 ($generated@@39 $generated@@40)) (forall (($generated@@133 T@U) ) (! ($generated@@34 ($generated@@35 $generated@@131) $generated@@133 $generated@@132)
 :pattern ( ($generated@@34 ($generated@@35 $generated@@131) $generated@@133 $generated@@132))
))) ($generated@@66 ($generated@@35 $generated@@131) $generated@@132))
 :pattern ( ($generated@@66 ($generated@@35 $generated@@131) $generated@@132))
))))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@46 $generated@@134) (exists (($generated@@135 T@U) ) (= $generated@@134 ($generated@@87 $generated@@135))))
 :pattern ( ($generated@@46 $generated@@134))
)))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (and ($generated@@37 $generated@@38 $generated@@137 ($generated@@39 $generated@@40)) (<= ($generated@@50 0) $generated@@138)) (forall (($generated@@139 T@U) ) (! ($generated@@79 ($generated@@35 $generated@@136) $generated@@139 $generated@@137 $generated@@138)
 :pattern ( ($generated@@79 ($generated@@35 $generated@@136) $generated@@139 $generated@@137 $generated@@138))
))) ($generated@@78 ($generated@@35 $generated@@136) $generated@@137 $generated@@138))
 :pattern ( ($generated@@78 ($generated@@35 $generated@@136) $generated@@137 $generated@@138))
))))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@143 T@U) ) (!  (=> (or ($generated@@141 $generated@@143) (and (< 3 $generated@@33) ($generated@@37 $generated@@38 $generated@@143 $generated@@40))) (and (forall (($generated@@144 Int) ) (!  (=> (<= ($generated@@50 0) $generated@@144) (=> (<= ($generated@@50 0) $generated@@144) (and ($generated@@46 $generated@@143) ($generated@@142 ($generated@@49 $generated@@143) $generated@@144))))
 :pattern ( ($generated@@78 ($generated@@35 $generated@@67) ($generated@@49 $generated@@143) $generated@@144))
)) (= ($generated@@140 $generated@@143) (exists (($generated@@145 Int) ) (!  (and (<= ($generated@@50 0) $generated@@145) (and (<= ($generated@@50 0) $generated@@145) ($generated@@78 ($generated@@35 $generated@@67) ($generated@@49 $generated@@143) $generated@@145)))
 :pattern ( ($generated@@78 ($generated@@35 $generated@@67) ($generated@@49 $generated@@143) $generated@@145))
)))))
 :pattern ( ($generated@@140 $generated@@143))
))))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@37 $generated@@11 $generated@@146 $generated@@30) (<= ($generated@@50 0) ($generated@@16 $generated@@146)))
 :pattern ( ($generated@@37 $generated@@11 $generated@@146 $generated@@30))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Int) ) (! (= ($generated@@78 ($generated@@35 $generated@@147) $generated@@148 $generated@@149) ($generated@@78 $generated@@147 $generated@@148 $generated@@149))
 :pattern ( ($generated@@78 ($generated@@35 $generated@@147) $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@34 ($generated@@35 $generated@@150) $generated@@151 $generated@@152) ($generated@@34 $generated@@150 $generated@@151 $generated@@152))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@150) $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@153 ($generated@@89 $generated@@157 $generated@@154) $generated@@155 $generated@@156) ($generated@@29 $generated@@157 $generated@@154 $generated@@155 $generated@@156))
 :pattern ( ($generated@@153 ($generated@@89 $generated@@157 $generated@@154) $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@160 T@U) ) (!  (and (= ($generated@@158 ($generated@@39 $generated@@160)) $generated@@1) (= ($generated@@159 ($generated@@39 $generated@@160)) $generated@@7))
 :pattern ( ($generated@@39 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@161 $generated@@163) (<= ($generated@@41 $generated@@163) ($generated@@41 $generated@@162))) (and (= ($generated@@161 ($generated@@47 $generated@@162 $generated@@163)) ($generated@@161 $generated@@162)) (= ($generated@@41 ($generated@@47 $generated@@162 $generated@@163)) (- ($generated@@41 $generated@@162) ($generated@@41 $generated@@163)))))
 :pattern ( ($generated@@47 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 Int) ) (!  (=> (<= 0 $generated@@164) (and ($generated@@161 ($generated@@48 $generated@@164)) (= ($generated@@41 ($generated@@48 $generated@@164)) $generated@@164)))
 :pattern ( ($generated@@48 $generated@@164))
)))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@37 $generated@@38 $generated@@166 ($generated@@39 $generated@@40)) ($generated@@66 ($generated@@35 $generated@@165) $generated@@166)) (forall (($generated@@167 T@U) ) (! ($generated@@34 ($generated@@35 $generated@@165) $generated@@167 $generated@@166)
 :pattern ( ($generated@@34 ($generated@@35 $generated@@165) $generated@@167 $generated@@166))
)))
 :pattern ( ($generated@@66 ($generated@@35 $generated@@165) $generated@@166))
))))
(assert (forall (($generated@@168 T@U) ) (!  (=> ($generated@@108 $generated@@168 $generated@@30) (and (= ($generated@@89 $generated@@11 ($generated@@44 $generated@@11 $generated@@168)) $generated@@168) ($generated@@37 $generated@@11 ($generated@@44 $generated@@11 $generated@@168) $generated@@30)))
 :pattern ( ($generated@@108 $generated@@168 $generated@@30))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> ($generated@@108 $generated@@169 $generated@@40) (and (= ($generated@@89 $generated@@38 ($generated@@44 $generated@@38 $generated@@169)) $generated@@169) ($generated@@37 $generated@@38 ($generated@@44 $generated@@38 $generated@@169) $generated@@40)))
 :pattern ( ($generated@@108 $generated@@169 $generated@@40))
)))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@170 T@U) ) (!  (=> (or ($generated@@64 $generated@@170) (and (< 3 $generated@@33) ($generated@@37 $generated@@38 $generated@@170 $generated@@40))) (and (and ($generated@@46 $generated@@170) ($generated@@65 ($generated@@49 $generated@@170))) (= ($generated@@62 $generated@@170)  (not ($generated@@66 ($generated@@35 $generated@@67) ($generated@@49 $generated@@170))))))
 :pattern ( ($generated@@62 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (or ($generated@@25 $generated@@171 $generated@@172) (= $generated@@171 $generated@@172)) ($generated@@25 $generated@@172 $generated@@171))
 :pattern ( ($generated@@25 $generated@@171 $generated@@172) ($generated@@25 $generated@@172 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@37 $generated@@38 ($generated@@87 $generated@@173) $generated@@40) ($generated@@37 $generated@@38 $generated@@173 ($generated@@39 $generated@@40)))
 :pattern ( ($generated@@37 $generated@@38 ($generated@@87 $generated@@173) $generated@@40))
)))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 Int) ) (!  (=> (or ($generated@@95 ($generated@@63 $generated@@94 $generated@@175) $generated@@176 $generated@@177) (and (< 3 $generated@@33) (and ($generated@@37 $generated@@38 $generated@@176 ($generated@@39 $generated@@40)) (<= ($generated@@50 0) $generated@@177)))) (and (and (=> (< 0 ($generated@@41 $generated@@175)) (=> (not ($generated@@42 $generated@@176)) (let (($generated@@178 ($generated@@43 $generated@@176)))
(let (($generated@@179 ($generated@@44 $generated@@38 ($generated@@45 $generated@@176))))
 (=> (<= ($generated@@50 1) $generated@@177) (and (and ($generated@@46 $generated@@179) ($generated@@95 ($generated@@47 $generated@@175 ($generated@@48 1)) ($generated@@49 $generated@@179) (- $generated@@177 1))) (=> ($generated@@79 ($generated@@35 $generated@@174) ($generated@@47 $generated@@175 ($generated@@48 1)) ($generated@@49 $generated@@179) (- $generated@@177 1)) ($generated@@95 ($generated@@47 $generated@@175 ($generated@@48 1)) $generated@@178 $generated@@177)))))))) (=> (=> (< 0 ($generated@@41 $generated@@175)) (ite ($generated@@42 $generated@@176) true (let (($generated@@180 ($generated@@43 $generated@@176)))
(let (($generated@@181 ($generated@@44 $generated@@38 ($generated@@45 $generated@@176))))
 (and (and (<= ($generated@@50 1) $generated@@177) ($generated@@79 ($generated@@35 $generated@@174) ($generated@@47 $generated@@175 ($generated@@48 1)) ($generated@@49 $generated@@181) (- $generated@@177 1))) ($generated@@79 ($generated@@35 $generated@@174) ($generated@@47 $generated@@175 ($generated@@48 1)) $generated@@180 $generated@@177)))))) (=> (= ($generated@@50 0) ($generated@@41 $generated@@175)) (forall (($generated@@182 T@U) ) (!  (=> ($generated@@25 $generated@@182 $generated@@175) ($generated@@95 $generated@@182 $generated@@176 $generated@@177))
 :pattern ( ($generated@@79 ($generated@@35 $generated@@174) $generated@@182 $generated@@176 $generated@@177))
))))) (= ($generated@@79 ($generated@@35 $generated@@174) ($generated@@63 $generated@@94 $generated@@175) $generated@@176 $generated@@177)  (and (=> (< 0 ($generated@@41 $generated@@175)) (ite ($generated@@42 $generated@@176) true (let (($generated@@183 ($generated@@43 $generated@@176)))
(let (($generated@@184 ($generated@@44 $generated@@38 ($generated@@45 $generated@@176))))
 (and (and (<= ($generated@@50 1) $generated@@177) ($generated@@79 ($generated@@35 $generated@@174) ($generated@@47 $generated@@175 ($generated@@48 1)) ($generated@@49 $generated@@184) (- $generated@@177 1))) ($generated@@79 ($generated@@35 $generated@@174) ($generated@@47 $generated@@175 ($generated@@48 1)) $generated@@183 $generated@@177)))))) (=> (= ($generated@@50 0) ($generated@@41 $generated@@175)) (forall (($generated@@185 T@U) ) (!  (=> ($generated@@25 $generated@@185 $generated@@175) ($generated@@79 ($generated@@35 $generated@@174) $generated@@185 $generated@@176 $generated@@177))
 :pattern ( ($generated@@79 ($generated@@35 $generated@@174) $generated@@185 $generated@@176 $generated@@177))
)))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@35 $generated@@174) ($generated@@63 $generated@@94 $generated@@175) $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@187 ($generated@@39 $generated@@186)) (or ($generated@@42 $generated@@187) ($generated@@113 $generated@@187)))
 :pattern ( ($generated@@113 $generated@@187) ($generated@@37 $generated@@38 $generated@@187 ($generated@@39 $generated@@186)))
 :pattern ( ($generated@@42 $generated@@187) ($generated@@37 $generated@@38 $generated@@187 ($generated@@39 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@66 ($generated@@35 $generated@@188) $generated@@189) ($generated@@66 $generated@@188 $generated@@189))
 :pattern ( ($generated@@66 ($generated@@35 $generated@@188) $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@T) ) (! (= ($generated@@108 ($generated@@89 $generated@@192 $generated@@190) $generated@@191) ($generated@@37 $generated@@192 $generated@@190 $generated@@191))
 :pattern ( ($generated@@108 ($generated@@89 $generated@@192 $generated@@190) $generated@@191))
)))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 Int) ) (!  (=> (or ($generated@@95 $generated@@194 $generated@@195 $generated@@196) (and (< 3 $generated@@33) (and ($generated@@37 $generated@@38 $generated@@195 ($generated@@39 $generated@@40)) (<= ($generated@@50 0) $generated@@196)))) (and (and (=> (< 0 ($generated@@41 $generated@@194)) (=> (not ($generated@@42 $generated@@195)) (let (($generated@@197 ($generated@@43 $generated@@195)))
(let (($generated@@198 ($generated@@44 $generated@@38 ($generated@@45 $generated@@195))))
 (=> (<= ($generated@@50 1) $generated@@196) (and (and ($generated@@46 $generated@@198) ($generated@@95 ($generated@@47 $generated@@194 ($generated@@48 1)) ($generated@@49 $generated@@198) (- $generated@@196 1))) (=> ($generated@@79 $generated@@193 ($generated@@47 $generated@@194 ($generated@@48 1)) ($generated@@49 $generated@@198) (- $generated@@196 1)) ($generated@@95 ($generated@@47 $generated@@194 ($generated@@48 1)) $generated@@197 $generated@@196)))))))) (=> (=> (< 0 ($generated@@41 $generated@@194)) (ite ($generated@@42 $generated@@195) true (let (($generated@@199 ($generated@@43 $generated@@195)))
(let (($generated@@200 ($generated@@44 $generated@@38 ($generated@@45 $generated@@195))))
 (and (and (<= ($generated@@50 1) $generated@@196) ($generated@@79 $generated@@193 ($generated@@47 $generated@@194 ($generated@@48 1)) ($generated@@49 $generated@@200) (- $generated@@196 1))) ($generated@@79 $generated@@193 ($generated@@47 $generated@@194 ($generated@@48 1)) $generated@@199 $generated@@196)))))) (=> (= ($generated@@50 0) ($generated@@41 $generated@@194)) (forall (($generated@@201 T@U) ) (!  (=> ($generated@@25 $generated@@201 $generated@@194) ($generated@@95 $generated@@201 $generated@@195 $generated@@196))
 :pattern ( ($generated@@79 $generated@@193 $generated@@201 $generated@@195 $generated@@196))
))))) (= ($generated@@79 ($generated@@35 $generated@@193) $generated@@194 $generated@@195 $generated@@196)  (and (=> (< 0 ($generated@@41 $generated@@194)) (ite ($generated@@42 $generated@@195) true (let (($generated@@202 ($generated@@43 $generated@@195)))
(let (($generated@@203 ($generated@@44 $generated@@38 ($generated@@45 $generated@@195))))
 (and (and (<= ($generated@@50 1) $generated@@196) ($generated@@79 $generated@@193 ($generated@@47 $generated@@194 ($generated@@48 1)) ($generated@@49 $generated@@203) (- $generated@@196 1))) ($generated@@79 $generated@@193 ($generated@@47 $generated@@194 ($generated@@48 1)) $generated@@202 $generated@@196)))))) (=> (= ($generated@@50 0) ($generated@@41 $generated@@194)) (forall (($generated@@204 T@U) ) (!  (=> ($generated@@25 $generated@@204 $generated@@194) ($generated@@79 $generated@@193 $generated@@204 $generated@@195 $generated@@196))
 :pattern ( ($generated@@79 $generated@@193 $generated@@204 $generated@@195 $generated@@196))
)))))))
 :pattern ( ($generated@@79 ($generated@@35 $generated@@193) $generated@@194 $generated@@195 $generated@@196))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Int) ) (! (= ($generated@@79 ($generated@@35 $generated@@205) $generated@@206 $generated@@207 $generated@@208) ($generated@@79 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
 :pattern ( ($generated@@79 ($generated@@35 $generated@@205) $generated@@206 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ) (! (<= 0 ($generated@@41 $generated@@209))
 :pattern ( ($generated@@41 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@72 ($generated@@88 $generated@@210 $generated@@211)) $generated@@4)
 :pattern ( ($generated@@88 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (= ($generated@@45 ($generated@@88 $generated@@212 $generated@@213)) $generated@@212)
 :pattern ( ($generated@@88 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@43 ($generated@@88 $generated@@214 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@88 $generated@@214 $generated@@215))
)))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (or ($generated@@36 ($generated@@63 $generated@@94 $generated@@217) ($generated@@63 $generated@@38 $generated@@218)) (and (< 3 $generated@@33) ($generated@@37 $generated@@38 $generated@@218 ($generated@@39 $generated@@40)))) (and (and (=> (< 0 ($generated@@41 $generated@@217)) (=> (not ($generated@@14 ($generated@@63 $generated@@10 ($generated@@13 ($generated@@42 ($generated@@63 $generated@@38 $generated@@218)))))) (let (($generated@@219 ($generated@@63 $generated@@38 ($generated@@43 ($generated@@63 $generated@@38 $generated@@218)))))
(let (($generated@@220 ($generated@@63 $generated@@38 ($generated@@44 $generated@@38 ($generated@@45 ($generated@@63 $generated@@38 $generated@@218))))))
 (and (and ($generated@@46 $generated@@220) ($generated@@36 ($generated@@47 $generated@@217 ($generated@@48 1)) ($generated@@49 $generated@@220))) (=> ($generated@@34 ($generated@@35 $generated@@216) ($generated@@47 $generated@@217 ($generated@@48 1)) ($generated@@49 $generated@@220)) ($generated@@36 ($generated@@47 $generated@@217 ($generated@@48 1)) $generated@@219))))))) (=> (=> (< 0 ($generated@@41 $generated@@217)) (ite ($generated@@42 ($generated@@63 $generated@@38 $generated@@218)) false (let (($generated@@221 ($generated@@63 $generated@@38 ($generated@@43 ($generated@@63 $generated@@38 $generated@@218)))))
(let (($generated@@222 ($generated@@63 $generated@@38 ($generated@@44 $generated@@38 ($generated@@45 ($generated@@63 $generated@@38 $generated@@218))))))
 (and ($generated@@34 ($generated@@35 $generated@@216) ($generated@@47 $generated@@217 ($generated@@48 1)) ($generated@@63 $generated@@38 ($generated@@49 $generated@@222))) ($generated@@34 ($generated@@35 $generated@@216) ($generated@@47 $generated@@217 ($generated@@48 1)) $generated@@221)))))) (=> (= ($generated@@50 0) ($generated@@41 $generated@@217)) (forall (($generated@@223 T@U) ) (!  (=> ($generated@@25 $generated@@223 $generated@@217) ($generated@@36 $generated@@223 $generated@@218))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@216) $generated@@223 $generated@@218))
))))) (= ($generated@@34 ($generated@@35 $generated@@216) ($generated@@63 $generated@@94 $generated@@217) ($generated@@63 $generated@@38 $generated@@218))  (and (=> (< 0 ($generated@@41 $generated@@217)) (ite ($generated@@42 ($generated@@63 $generated@@38 $generated@@218)) false (let (($generated@@224 ($generated@@63 $generated@@38 ($generated@@43 ($generated@@63 $generated@@38 $generated@@218)))))
(let (($generated@@225 ($generated@@63 $generated@@38 ($generated@@44 $generated@@38 ($generated@@45 ($generated@@63 $generated@@38 $generated@@218))))))
 (and ($generated@@34 ($generated@@35 $generated@@216) ($generated@@47 $generated@@217 ($generated@@48 1)) ($generated@@63 $generated@@38 ($generated@@49 $generated@@225))) ($generated@@34 ($generated@@35 $generated@@216) ($generated@@47 $generated@@217 ($generated@@48 1)) $generated@@224)))))) (=> (= ($generated@@50 0) ($generated@@41 $generated@@217)) (forall (($generated@@226 T@U) ) (!  (=> ($generated@@25 $generated@@226 $generated@@217) ($generated@@34 ($generated@@35 $generated@@216) $generated@@226 $generated@@218))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@216) $generated@@226 $generated@@218))
)))))))
 :weight 3
 :pattern ( ($generated@@34 ($generated@@35 $generated@@216) ($generated@@63 $generated@@94 $generated@@217) ($generated@@63 $generated@@38 $generated@@218)))
))))
(assert (forall (($generated@@228 T@U) ) (! (= ($generated@@227 ($generated@@39 $generated@@228)) $generated@@228)
 :pattern ( ($generated@@39 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (! (= ($generated@@72 ($generated@@87 $generated@@229)) $generated@@5)
 :pattern ( ($generated@@87 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ) (! (= ($generated@@49 ($generated@@87 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@87 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@T) ) (! (= ($generated@@44 $generated@@232 ($generated@@89 $generated@@232 $generated@@231)) $generated@@231)
 :pattern ( ($generated@@89 $generated@@232 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@233 $generated@@234) (or (not (= $generated@@233 $generated@@234)) (not true))) (=> (and ($generated@@161 $generated@@233) (not ($generated@@161 $generated@@234))) ($generated@@25 $generated@@233 $generated@@234))) (=> (and ($generated@@161 $generated@@233) ($generated@@161 $generated@@234)) (= ($generated@@25 $generated@@233 $generated@@234) (< ($generated@@41 $generated@@233) ($generated@@41 $generated@@234))))) (=> (and ($generated@@25 $generated@@233 $generated@@234) ($generated@@161 $generated@@234)) ($generated@@161 $generated@@233)))
 :pattern ( ($generated@@25 $generated@@233 $generated@@234))
)))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@235 T@U) ) (!  (=> (or ($generated@@141 ($generated@@63 $generated@@38 $generated@@235)) (and (< 3 $generated@@33) ($generated@@37 $generated@@38 $generated@@235 $generated@@40))) (and (forall (($generated@@236 Int) ) (!  (=> (<= ($generated@@50 0) $generated@@236) (=> (<= ($generated@@50 0) $generated@@236) (and ($generated@@46 ($generated@@63 $generated@@38 $generated@@235)) ($generated@@142 ($generated@@63 $generated@@38 ($generated@@49 ($generated@@63 $generated@@38 $generated@@235))) $generated@@236))))
 :pattern ( ($generated@@78 ($generated@@35 $generated@@67) ($generated@@49 $generated@@235) $generated@@236))
)) (= ($generated@@140 ($generated@@63 $generated@@38 $generated@@235)) (exists (($generated@@237 Int) ) (!  (and (<= ($generated@@50 0) $generated@@237) (and (<= ($generated@@50 0) $generated@@237) ($generated@@78 ($generated@@35 $generated@@67) ($generated@@63 $generated@@38 ($generated@@49 ($generated@@63 $generated@@38 $generated@@235))) $generated@@237)))
 :pattern ( ($generated@@78 ($generated@@35 $generated@@67) ($generated@@49 $generated@@235) $generated@@237))
)))))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@63 $generated@@38 $generated@@235)))
))))
(assert (forall (($generated@@239 T@U) ) (! (< ($generated@@238 $generated@@239) ($generated@@238 ($generated@@87 $generated@@239)))
 :pattern ( ($generated@@87 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and ($generated@@75 $generated@@242) (and ($generated@@113 $generated@@240) ($generated@@29 $generated@@38 $generated@@240 ($generated@@39 $generated@@241) $generated@@242))) ($generated@@153 ($generated@@45 $generated@@240) $generated@@241 $generated@@242))
 :pattern ( ($generated@@153 ($generated@@45 $generated@@240) $generated@@241 $generated@@242))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@253 T@T) ($generated@@254 T@T) ($generated@@255 T@T) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (= ($generated@@243 $generated@@253 $generated@@254 $generated@@255 ($generated@@249 $generated@@253 $generated@@254 $generated@@255 $generated@@257 $generated@@258 $generated@@259 $generated@@256) $generated@@258 $generated@@259) $generated@@256)
 :weight 0
)) (and (forall (($generated@@260 T@T) ($generated@@261 T@T) ($generated@@262 T@T) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (or (= $generated@@265 $generated@@267) (= ($generated@@243 $generated@@260 $generated@@261 $generated@@262 ($generated@@249 $generated@@260 $generated@@261 $generated@@262 $generated@@264 $generated@@265 $generated@@266 $generated@@263) $generated@@267 $generated@@268) ($generated@@243 $generated@@260 $generated@@261 $generated@@262 $generated@@264 $generated@@267 $generated@@268)))
 :weight 0
)) (forall (($generated@@269 T@T) ($generated@@270 T@T) ($generated@@271 T@T) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (or (= $generated@@275 $generated@@277) (= ($generated@@243 $generated@@269 $generated@@270 $generated@@271 ($generated@@249 $generated@@269 $generated@@270 $generated@@271 $generated@@273 $generated@@274 $generated@@275 $generated@@272) $generated@@276 $generated@@277) ($generated@@243 $generated@@269 $generated@@270 $generated@@271 $generated@@273 $generated@@276 $generated@@277)))
 :weight 0
)))) (= ($generated@@9 $generated@@244) 5)) (= ($generated@@9 $generated@@245) 6)) (forall (($generated@@278 T@T) ($generated@@279 T@T) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (! (= ($generated@@247 $generated@@278 $generated@@279 ($generated@@250 $generated@@278 $generated@@279 $generated@@281 $generated@@282 $generated@@280) $generated@@282) $generated@@280)
 :weight 0
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (or (= $generated@@287 $generated@@288) (= ($generated@@247 $generated@@283 $generated@@284 ($generated@@250 $generated@@283 $generated@@284 $generated@@286 $generated@@287 $generated@@285) $generated@@288) ($generated@@247 $generated@@283 $generated@@284 $generated@@286 $generated@@288)))
 :weight 0
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (= ($generated@@9 ($generated@@248 $generated@@289 $generated@@290)) 7))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@251 ($generated@@248 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@248 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@252 ($generated@@248 $generated@@293 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@248 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 Bool) ($generated@@299 T@U) ($generated@@300 T@U) ) (! (= ($generated@@14 ($generated@@243 $generated@@244 $generated@@245 $generated@@10 ($generated@@246 $generated@@295 $generated@@296 $generated@@297 $generated@@298) $generated@@299 $generated@@300))  (=> (and (or (not (= $generated@@299 $generated@@295)) (not true)) ($generated@@14 ($generated@@44 $generated@@10 ($generated@@247 $generated@@245 $generated@@94 ($generated@@247 $generated@@244 ($generated@@248 $generated@@245 $generated@@94) $generated@@296 $generated@@299) $generated@@297)))) $generated@@298))
 :pattern ( ($generated@@243 $generated@@244 $generated@@245 $generated@@10 ($generated@@246 $generated@@295 $generated@@296 $generated@@297 $generated@@298) $generated@@299 $generated@@300))
)))
(assert  (=> (<= 2 $generated@@33) (forall (($generated@@301 T@U) ) (!  (=> (or $generated@@86 (< 2 $generated@@33)) ($generated@@37 $generated@@38 ($generated@@85 $generated@@301) $generated@@40))
 :pattern ( ($generated@@85 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ) (! (= ($generated@@85 ($generated@@35 $generated@@302)) ($generated@@85 $generated@@302))
 :pattern ( ($generated@@85 ($generated@@35 $generated@@302)))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> ($generated@@108 $generated@@304 ($generated@@39 $generated@@303)) (and (= ($generated@@89 $generated@@38 ($generated@@44 $generated@@38 $generated@@304)) $generated@@304) ($generated@@37 $generated@@38 ($generated@@44 $generated@@38 $generated@@304) ($generated@@39 $generated@@303))))
 :pattern ( ($generated@@108 $generated@@304 ($generated@@39 $generated@@303)))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> ($generated@@161 $generated@@305) (= $generated@@305 ($generated@@48 ($generated@@41 $generated@@305))))
 :pattern ( ($generated@@41 $generated@@305))
 :pattern ( ($generated@@161 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and ($generated@@75 $generated@@308) (and ($generated@@113 $generated@@306) ($generated@@29 $generated@@38 $generated@@306 ($generated@@39 $generated@@307) $generated@@308))) ($generated@@29 $generated@@38 ($generated@@43 $generated@@306) ($generated@@39 $generated@@307) $generated@@308))
 :pattern ( ($generated@@29 $generated@@38 ($generated@@43 $generated@@306) ($generated@@39 $generated@@307) $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and ($generated@@75 $generated@@310) ($generated@@37 $generated@@38 $generated@@309 $generated@@40)) ($generated@@29 $generated@@38 $generated@@309 $generated@@40 $generated@@310))
 :pattern ( ($generated@@29 $generated@@38 $generated@@309 $generated@@40 $generated@@310))
)))
(assert (= ($generated@@158 $generated@@30) $generated@@0))
(assert (= ($generated@@159 $generated@@30) $generated@@6))
(assert (= ($generated@@158 $generated@@40) $generated@@2))
(assert (= ($generated@@159 $generated@@40) $generated@@8))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (or ($generated@@36 ($generated@@63 $generated@@94 $generated@@312) $generated@@313) (and (< 3 $generated@@33) ($generated@@37 $generated@@38 $generated@@313 ($generated@@39 $generated@@40)))) (and (and (=> (< 0 ($generated@@41 $generated@@312)) (=> (not ($generated@@42 $generated@@313)) (let (($generated@@314 ($generated@@43 $generated@@313)))
(let (($generated@@315 ($generated@@44 $generated@@38 ($generated@@45 $generated@@313))))
 (and (and ($generated@@46 $generated@@315) ($generated@@36 ($generated@@47 $generated@@312 ($generated@@48 1)) ($generated@@49 $generated@@315))) (=> ($generated@@34 ($generated@@35 $generated@@311) ($generated@@47 $generated@@312 ($generated@@48 1)) ($generated@@49 $generated@@315)) ($generated@@36 ($generated@@47 $generated@@312 ($generated@@48 1)) $generated@@314))))))) (=> (=> (< 0 ($generated@@41 $generated@@312)) (ite ($generated@@42 $generated@@313) false (let (($generated@@316 ($generated@@43 $generated@@313)))
(let (($generated@@317 ($generated@@44 $generated@@38 ($generated@@45 $generated@@313))))
 (and ($generated@@34 ($generated@@35 $generated@@311) ($generated@@47 $generated@@312 ($generated@@48 1)) ($generated@@49 $generated@@317)) ($generated@@34 ($generated@@35 $generated@@311) ($generated@@47 $generated@@312 ($generated@@48 1)) $generated@@316)))))) (=> (= ($generated@@50 0) ($generated@@41 $generated@@312)) (forall (($generated@@318 T@U) ) (!  (=> ($generated@@25 $generated@@318 $generated@@312) ($generated@@36 $generated@@318 $generated@@313))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@311) $generated@@318 $generated@@313))
))))) (= ($generated@@34 ($generated@@35 $generated@@311) ($generated@@63 $generated@@94 $generated@@312) $generated@@313)  (and (=> (< 0 ($generated@@41 $generated@@312)) (ite ($generated@@42 $generated@@313) false (let (($generated@@319 ($generated@@43 $generated@@313)))
(let (($generated@@320 ($generated@@44 $generated@@38 ($generated@@45 $generated@@313))))
 (and ($generated@@34 ($generated@@35 $generated@@311) ($generated@@47 $generated@@312 ($generated@@48 1)) ($generated@@49 $generated@@320)) ($generated@@34 ($generated@@35 $generated@@311) ($generated@@47 $generated@@312 ($generated@@48 1)) $generated@@319)))))) (=> (= ($generated@@50 0) ($generated@@41 $generated@@312)) (forall (($generated@@321 T@U) ) (!  (=> ($generated@@25 $generated@@321 $generated@@312) ($generated@@34 ($generated@@35 $generated@@311) $generated@@321 $generated@@313))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@311) $generated@@321 $generated@@313))
)))))))
 :weight 3
 :pattern ( ($generated@@34 ($generated@@35 $generated@@311) ($generated@@63 $generated@@94 $generated@@312) $generated@@313))
))))
(assert  (=> (<= 2 $generated@@33) (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 Int) ) (!  (=> (or ($generated@@142 $generated@@323 $generated@@324) (and (< 2 $generated@@33) (and ($generated@@37 $generated@@38 $generated@@323 ($generated@@39 $generated@@40)) (<= ($generated@@50 0) $generated@@324)))) (and (=> (not ($generated@@42 $generated@@323)) (let (($generated@@325 ($generated@@43 $generated@@323)))
(let (($generated@@326 ($generated@@44 $generated@@38 ($generated@@45 $generated@@323))))
 (=> (<= ($generated@@50 1) $generated@@324) (and (and ($generated@@46 $generated@@326) ($generated@@142 ($generated@@49 $generated@@326) (- $generated@@324 1))) (=> ($generated@@78 $generated@@322 ($generated@@49 $generated@@326) (- $generated@@324 1)) ($generated@@142 $generated@@325 $generated@@324))))))) (= ($generated@@78 ($generated@@35 $generated@@322) $generated@@323 $generated@@324) (ite ($generated@@42 $generated@@323) true (let (($generated@@327 ($generated@@43 $generated@@323)))
(let (($generated@@328 ($generated@@44 $generated@@38 ($generated@@45 $generated@@323))))
 (and (and (<= ($generated@@50 1) $generated@@324) ($generated@@78 $generated@@322 ($generated@@49 $generated@@328) (- $generated@@324 1))) ($generated@@78 $generated@@322 $generated@@327 $generated@@324))))))))
 :pattern ( ($generated@@78 ($generated@@35 $generated@@322) $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and ($generated@@161 $generated@@330) (<= ($generated@@41 $generated@@330) ($generated@@41 $generated@@329))) (or (and (= $generated@@330 ($generated@@48 0)) (= ($generated@@47 $generated@@329 $generated@@330) $generated@@329)) (and (or (not (= $generated@@330 ($generated@@48 0))) (not true)) ($generated@@25 ($generated@@47 $generated@@329 $generated@@330) $generated@@329))))
 :pattern ( ($generated@@47 $generated@@329 $generated@@330))
)))
(assert  (=> (<= 3 $generated@@33) (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 Int) ($generated@@334 T@U) ) (!  (=> (and (and ($generated@@37 $generated@@38 $generated@@332 ($generated@@39 $generated@@40)) (<= ($generated@@50 0) $generated@@333)) (= $generated@@334 ($generated@@48 0))) ($generated@@79 $generated@@331 $generated@@334 $generated@@332 $generated@@333))
 :pattern ( ($generated@@79 $generated@@331 $generated@@334 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@335 Int) ) (! (= ($generated@@89 $generated@@11 ($generated@@15 ($generated@@50 $generated@@335))) ($generated@@63 $generated@@94 ($generated@@89 $generated@@11 ($generated@@15 $generated@@335))))
 :pattern ( ($generated@@89 $generated@@11 ($generated@@15 ($generated@@50 $generated@@335))))
)))
(assert (forall (($generated@@336 T@U) ) (! (= ($generated@@87 ($generated@@63 $generated@@38 $generated@@336)) ($generated@@63 $generated@@38 ($generated@@87 $generated@@336)))
 :pattern ( ($generated@@87 ($generated@@63 $generated@@38 $generated@@336)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (= ($generated@@89 $generated@@338 ($generated@@63 $generated@@338 $generated@@337)) ($generated@@63 $generated@@94 ($generated@@89 $generated@@338 $generated@@337)))
 :pattern ( ($generated@@89 $generated@@338 ($generated@@63 $generated@@338 $generated@@337)))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and ($generated@@75 $generated@@340) (and ($generated@@46 $generated@@339) ($generated@@29 $generated@@38 $generated@@339 $generated@@40 $generated@@340))) ($generated@@29 $generated@@38 ($generated@@49 $generated@@339) ($generated@@39 $generated@@40) $generated@@340))
 :pattern ( ($generated@@29 $generated@@38 ($generated@@49 $generated@@339) ($generated@@39 $generated@@40) $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> ($generated@@75 $generated@@344) (= ($generated@@29 $generated@@38 ($generated@@88 $generated@@342 $generated@@343) ($generated@@39 $generated@@341) $generated@@344)  (and ($generated@@153 $generated@@342 $generated@@341 $generated@@344) ($generated@@29 $generated@@38 $generated@@343 ($generated@@39 $generated@@341) $generated@@344))))
 :pattern ( ($generated@@29 $generated@@38 ($generated@@88 $generated@@342 $generated@@343) ($generated@@39 $generated@@341) $generated@@344))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@345 () Int)
(declare-fun $generated@@346 () T@U)
(declare-fun $generated@@347 () T@U)
(declare-fun $generated@@348 () T@U)
(declare-fun $generated@@349 () T@U)
(declare-fun $generated@@350 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@351  (=> (forall (($generated@@352 Int) ) (!  (=> (<= ($generated@@50 0) $generated@@352) (=> (<= ($generated@@50 0) $generated@@352) (and (and $generated@@86 ($generated@@46 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 $generated@@67))))) ($generated@@142 ($generated@@63 $generated@@38 ($generated@@49 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 $generated@@67))))) $generated@@352))))
 :pattern ( ($generated@@78 ($generated@@35 $generated@@67) ($generated@@49 ($generated@@85 ($generated@@35 $generated@@67))) $generated@@352))
)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (forall (($generated@@353 Int) ) (!  (=> (and (and (<= ($generated@@50 0) $generated@@353) (forall (($generated@@354 Int) ) (!  (=> (<= ($generated@@50 0) $generated@@354) (=> (and (<= 0 $generated@@354) (< $generated@@354 $generated@@353)) (=> (<= ($generated@@50 0) $generated@@354) (not ($generated@@78 ($generated@@35 $generated@@67) ($generated@@63 $generated@@38 ($generated@@49 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 $generated@@67))))) $generated@@354)))))
 :pattern ( ($generated@@78 ($generated@@35 $generated@@67) ($generated@@49 ($generated@@85 ($generated@@35 $generated@@67))) $generated@@354))
))) true) (=> (<= ($generated@@50 0) $generated@@353) (not ($generated@@78 ($generated@@35 ($generated@@35 $generated@@67)) ($generated@@63 $generated@@38 ($generated@@49 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 ($generated@@35 $generated@@67)))))) $generated@@353))))
 :pattern ( ($generated@@78 ($generated@@35 ($generated@@35 $generated@@67)) ($generated@@49 ($generated@@85 ($generated@@35 ($generated@@35 $generated@@67)))) $generated@@353))
))) (=> (forall (($generated@@355 Int) ) (!  (=> (<= ($generated@@50 0) $generated@@355) (=> (<= ($generated@@50 0) $generated@@355) (not ($generated@@78 ($generated@@35 $generated@@67) ($generated@@63 $generated@@38 ($generated@@49 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 $generated@@67))))) $generated@@355))))
 :pattern ( ($generated@@78 ($generated@@35 $generated@@67) ($generated@@49 ($generated@@85 ($generated@@35 $generated@@67))) $generated@@355))
)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@64 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 $generated@@67)))) (or ($generated@@14 ($generated@@63 $generated@@10 ($generated@@13 ($generated@@62 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 $generated@@67))))))) (not ($generated@@14 ($generated@@63 $generated@@10 ($generated@@13 ($generated@@66 ($generated@@35 ($generated@@35 $generated@@67)) ($generated@@63 $generated@@38 ($generated@@49 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 ($generated@@35 $generated@@67)))))))))))))) (=> (=> ($generated@@64 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 $generated@@67)))) (or ($generated@@14 ($generated@@63 $generated@@10 ($generated@@13 ($generated@@62 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 $generated@@67))))))) (not ($generated@@14 ($generated@@63 $generated@@10 ($generated@@13 ($generated@@66 ($generated@@35 ($generated@@35 $generated@@67)) ($generated@@63 $generated@@38 ($generated@@49 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 ($generated@@35 $generated@@67))))))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (not ($generated@@14 ($generated@@63 $generated@@10 ($generated@@13 ($generated@@140 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 ($generated@@35 $generated@@67)))))))))))))))))
(let (($generated@@356  (=> (and (< $generated@@345 ($generated@@50 0)) (= (ControlFlow 0 7) 2)) $generated@@351)))
(let (($generated@@357  (=> (<= ($generated@@50 0) $generated@@345) (=> (and (and (and $generated@@86 ($generated@@46 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 $generated@@67))))) (and ($generated@@46 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 $generated@@67)))) (= $generated@@346 ($generated@@63 $generated@@38 ($generated@@49 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 $generated@@67)))))))) (and (and ($generated@@29 $generated@@38 $generated@@346 ($generated@@39 $generated@@40) $generated@@347) ($generated@@29 $generated@@11 ($generated@@15 $generated@@345) $generated@@30 $generated@@347)) (and ($generated@@142 ($generated@@63 $generated@@38 ($generated@@49 ($generated@@63 $generated@@38 ($generated@@85 ($generated@@35 $generated@@67))))) $generated@@345) (= (ControlFlow 0 6) 2)))) $generated@@351))))
(let (($generated@@358  (=> (<= ($generated@@50 0) $generated@@345) (and (=> (= (ControlFlow 0 8) 6) $generated@@357) (=> (= (ControlFlow 0 8) 7) $generated@@356)))))
(let (($generated@@359  (=> (and (< $generated@@345 ($generated@@50 0)) (= (ControlFlow 0 5) 2)) $generated@@351)))
(let (($generated@@360  (=> (= $generated@@348 ($generated@@246 $generated@@349 $generated@@347 $generated false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@358) (=> (= (ControlFlow 0 9) 5) $generated@@359)))))
(let (($generated@@361  (=> (and (and ($generated@@75 $generated@@347) ($generated@@350 $generated@@347)) (and (= 4 $generated@@33) (= (ControlFlow 0 10) 9))) $generated@@360)))
$generated@@361))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
