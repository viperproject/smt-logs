(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (Int) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U Int) T@U)
(declare-fun $generated@@39 (Int) Bool)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@50 (T@U Int) T@U)
(declare-fun $generated@@51 (Int) Bool)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U T@U Int) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@102 () T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@107 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 Int) ($generated@@34 Int) ) (!  (=> (and (and (<= 0 $generated@@33) (<= 0 $generated@@34)) (<= (+ $generated@@33 $generated@@34) ($generated@@31 $generated@@32))) (= ($generated@@29 ($generated@@29 $generated@@32 ($generated@@30 $generated@@33)) ($generated@@30 $generated@@34)) ($generated@@29 $generated@@32 ($generated@@30 (+ $generated@@33 $generated@@34)))))
 :pattern ( ($generated@@29 ($generated@@29 $generated@@32 ($generated@@30 $generated@@33)) ($generated@@30 $generated@@34)))
)))
(assert (= ($generated@@35 $generated@@36) $generated@@3))
(assert (= ($generated@@9 $generated@@42) 3))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@44 T@U) ($generated@@45 Int) ) (!  (=> (or ($generated@@39 $generated@@45) (and (< 2 $generated@@37) (<= ($generated@@40 0) $generated@@45))) ($generated@@41 $generated@@42 ($generated@@38 $generated@@44 $generated@@45) $generated@@43))
 :pattern ( ($generated@@38 $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@47 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@47 $generated@@43) ($generated@@46 $generated@@47))
 :pattern ( ($generated@@46 $generated@@47) ($generated@@41 $generated@@42 $generated@@47 $generated@@43))
)))
(assert (forall (($generated@@49 T@U) ) (! ($generated@@41 $generated@@42 $generated@@36 ($generated@@48 $generated@@49))
 :pattern ( ($generated@@41 $generated@@42 $generated@@36 ($generated@@48 $generated@@49)))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@52 T@U) ($generated@@53 Int) ) (!  (=> (or ($generated@@51 $generated@@53) (and (< 2 $generated@@37) (<= ($generated@@40 0) $generated@@53))) ($generated@@41 $generated@@42 ($generated@@50 $generated@@52 $generated@@53) ($generated@@48 $generated@@43)))
 :pattern ( ($generated@@50 $generated@@52 $generated@@53))
))))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@57 T@U) ($generated@@58 Int) ) (!  (=> (or ($generated@@51 $generated@@58) (and (< 2 $generated@@37) (<= ($generated@@40 0) $generated@@58))) (and (=> (or (not (= $generated@@58 ($generated@@40 0))) (not true)) (and ($generated@@39 (- $generated@@58 1)) ($generated@@51 $generated@@58))) (= ($generated@@50 ($generated@@54 $generated@@57) $generated@@58) (ite (= $generated@@58 ($generated@@40 0)) $generated@@36 ($generated@@55 ($generated@@56 $generated@@42 ($generated@@38 $generated@@57 (- $generated@@58 1))) ($generated@@50 $generated@@57 $generated@@58))))))
 :pattern ( ($generated@@50 ($generated@@54 $generated@@57) $generated@@58))
))))
(assert (forall (($generated@@59 Int) ) (! (= ($generated@@40 $generated@@59) $generated@@59)
 :pattern ( ($generated@@40 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@62 $generated@@61))
)))
(assert (= ($generated@@9 $generated@@64) 4))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 Int) ) (!  (=> (or ($generated@@65 ($generated@@60 $generated@@64 $generated@@72) ($generated@@60 $generated@@42 $generated@@73) ($generated@@40 $generated@@74)) (and (< 3 $generated@@37) (and ($generated@@41 $generated@@42 $generated@@73 ($generated@@48 $generated@@43)) (<= ($generated@@40 0) $generated@@74)))) (and (and (=> (< 0 ($generated@@31 $generated@@72)) (=> (not ($generated@@14 ($generated@@60 $generated@@10 ($generated@@13 ($generated@@66 ($generated@@60 $generated@@42 $generated@@73)))))) (let (($generated@@75 ($generated@@60 $generated@@42 ($generated@@67 ($generated@@60 $generated@@42 $generated@@73)))))
(let (($generated@@76 ($generated@@60 $generated@@42 ($generated@@68 $generated@@42 ($generated@@69 ($generated@@60 $generated@@42 $generated@@73))))))
 (=> (<= ($generated@@40 1) ($generated@@40 $generated@@74)) (and (and ($generated@@46 $generated@@76) ($generated@@65 ($generated@@29 $generated@@72 ($generated@@30 1)) ($generated@@70 $generated@@76) ($generated@@40 (- $generated@@74 1)))) (=> ($generated@@63 ($generated@@54 $generated@@71) ($generated@@29 $generated@@72 ($generated@@30 1)) ($generated@@70 $generated@@76) ($generated@@40 (- $generated@@74 1))) ($generated@@65 ($generated@@29 $generated@@72 ($generated@@30 1)) $generated@@75 ($generated@@40 $generated@@74))))))))) (=> (=> (< 0 ($generated@@31 $generated@@72)) (ite ($generated@@66 ($generated@@60 $generated@@42 $generated@@73)) true (let (($generated@@77 ($generated@@60 $generated@@42 ($generated@@67 ($generated@@60 $generated@@42 $generated@@73)))))
(let (($generated@@78 ($generated@@60 $generated@@42 ($generated@@68 $generated@@42 ($generated@@69 ($generated@@60 $generated@@42 $generated@@73))))))
 (and (and (<= ($generated@@40 1) ($generated@@40 $generated@@74)) ($generated@@63 ($generated@@54 $generated@@71) ($generated@@29 $generated@@72 ($generated@@30 1)) ($generated@@60 $generated@@42 ($generated@@70 $generated@@78)) ($generated@@40 (- $generated@@74 1)))) ($generated@@63 ($generated@@54 $generated@@71) ($generated@@29 $generated@@72 ($generated@@30 1)) $generated@@77 ($generated@@40 $generated@@74))))))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@72)) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@25 $generated@@79 $generated@@72) ($generated@@65 $generated@@79 $generated@@73 $generated@@74))
 :pattern ( ($generated@@63 ($generated@@54 $generated@@71) $generated@@79 $generated@@73 $generated@@74))
))))) (= ($generated@@63 ($generated@@54 $generated@@71) ($generated@@60 $generated@@64 $generated@@72) ($generated@@60 $generated@@42 $generated@@73) ($generated@@40 $generated@@74))  (and (=> (< 0 ($generated@@31 $generated@@72)) (ite ($generated@@66 ($generated@@60 $generated@@42 $generated@@73)) true (let (($generated@@80 ($generated@@60 $generated@@42 ($generated@@67 ($generated@@60 $generated@@42 $generated@@73)))))
(let (($generated@@81 ($generated@@60 $generated@@42 ($generated@@68 $generated@@42 ($generated@@69 ($generated@@60 $generated@@42 $generated@@73))))))
 (and (and (<= ($generated@@40 1) ($generated@@40 $generated@@74)) ($generated@@63 ($generated@@54 $generated@@71) ($generated@@29 $generated@@72 ($generated@@30 1)) ($generated@@60 $generated@@42 ($generated@@70 $generated@@81)) ($generated@@40 (- $generated@@74 1)))) ($generated@@63 ($generated@@54 $generated@@71) ($generated@@29 $generated@@72 ($generated@@30 1)) $generated@@80 ($generated@@40 $generated@@74))))))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@72)) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@25 $generated@@82 $generated@@72) ($generated@@63 ($generated@@54 $generated@@71) $generated@@82 $generated@@73 $generated@@74))
 :pattern ( ($generated@@63 ($generated@@54 $generated@@71) $generated@@82 $generated@@73 $generated@@74))
)))))))
 :weight 3
 :pattern ( ($generated@@63 ($generated@@54 $generated@@71) ($generated@@60 $generated@@64 $generated@@72) ($generated@@60 $generated@@42 $generated@@73) ($generated@@40 $generated@@74)))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@41 $generated@@42 ($generated@@55 $generated@@85 $generated@@86) ($generated@@48 $generated@@84))  (and ($generated@@83 $generated@@85 $generated@@84) ($generated@@41 $generated@@42 $generated@@86 ($generated@@48 $generated@@84))))
 :pattern ( ($generated@@41 $generated@@42 ($generated@@55 $generated@@85 $generated@@86) ($generated@@48 $generated@@84)))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@66 $generated@@87) (= ($generated@@35 $generated@@87) $generated@@3))
 :pattern ( ($generated@@66 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 $generated@@89) (= ($generated@@35 $generated@@89) $generated@@4))
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@46 $generated@@90) (= ($generated@@35 $generated@@90) $generated@@5))
 :pattern ( ($generated@@46 $generated@@90))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@92 T@U) ($generated@@93 Int) ) (!  (=> (or ($generated@@39 $generated@@93) (and (< 2 $generated@@37) (<= ($generated@@40 0) $generated@@93))) (and ($generated@@51 $generated@@93) (= ($generated@@38 ($generated@@54 $generated@@92) $generated@@93) ($generated@@91 ($generated@@50 $generated@@92 $generated@@93)))))
 :pattern ( ($generated@@38 ($generated@@54 $generated@@92) $generated@@93))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@56 $generated@@95 ($generated@@68 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@68 $generated@@95 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@88 $generated@@96) (exists (($generated@@97 T@U) ($generated@@98 T@U) ) (= $generated@@96 ($generated@@55 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@88 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@66 $generated@@99) (= $generated@@99 $generated@@36))
 :pattern ( ($generated@@66 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@46 $generated@@100) (exists (($generated@@101 T@U) ) (= $generated@@100 ($generated@@91 $generated@@101))))
 :pattern ( ($generated@@46 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@41 $generated@@11 $generated@@103 $generated@@102) (<= ($generated@@40 0) ($generated@@16 $generated@@103)))
 :pattern ( ($generated@@41 $generated@@11 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@104 ($generated@@48 $generated@@106)) $generated@@2) (= ($generated@@105 ($generated@@48 $generated@@106)) $generated@@8))
 :pattern ( ($generated@@48 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (and ($generated@@107 $generated@@109) (<= ($generated@@31 $generated@@109) ($generated@@31 $generated@@108))) (and (= ($generated@@107 ($generated@@29 $generated@@108 $generated@@109)) ($generated@@107 $generated@@108)) (= ($generated@@31 ($generated@@29 $generated@@108 $generated@@109)) (- ($generated@@31 $generated@@108) ($generated@@31 $generated@@109)))))
 :pattern ( ($generated@@29 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 Int) ) (!  (=> (<= 0 $generated@@110) (and ($generated@@107 ($generated@@30 $generated@@110)) (= ($generated@@31 ($generated@@30 $generated@@110)) $generated@@110)))
 :pattern ( ($generated@@30 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@83 $generated@@111 $generated@@102) (and (= ($generated@@56 $generated@@11 ($generated@@68 $generated@@11 $generated@@111)) $generated@@111) ($generated@@41 $generated@@11 ($generated@@68 $generated@@11 $generated@@111) $generated@@102)))
 :pattern ( ($generated@@83 $generated@@111 $generated@@102))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@83 $generated@@112 $generated@@43) (and (= ($generated@@56 $generated@@42 ($generated@@68 $generated@@42 $generated@@112)) $generated@@112) ($generated@@41 $generated@@42 ($generated@@68 $generated@@42 $generated@@112) $generated@@43)))
 :pattern ( ($generated@@83 $generated@@112 $generated@@43))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (or ($generated@@25 $generated@@113 $generated@@114) (= $generated@@113 $generated@@114)) ($generated@@25 $generated@@114 $generated@@113))
 :pattern ( ($generated@@25 $generated@@113 $generated@@114) ($generated@@25 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@41 $generated@@42 ($generated@@91 $generated@@115) $generated@@43) ($generated@@41 $generated@@42 $generated@@115 ($generated@@48 $generated@@43)))
 :pattern ( ($generated@@41 $generated@@42 ($generated@@91 $generated@@115) $generated@@43))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 Int) ) (!  (=> (or ($generated@@65 ($generated@@60 $generated@@64 $generated@@117) $generated@@118 $generated@@119) (and (< 3 $generated@@37) (and ($generated@@41 $generated@@42 $generated@@118 ($generated@@48 $generated@@43)) (<= ($generated@@40 0) $generated@@119)))) (and (and (=> (< 0 ($generated@@31 $generated@@117)) (=> (not ($generated@@66 $generated@@118)) (let (($generated@@120 ($generated@@67 $generated@@118)))
(let (($generated@@121 ($generated@@68 $generated@@42 ($generated@@69 $generated@@118))))
 (=> (<= ($generated@@40 1) $generated@@119) (and (and ($generated@@46 $generated@@121) ($generated@@65 ($generated@@29 $generated@@117 ($generated@@30 1)) ($generated@@70 $generated@@121) (- $generated@@119 1))) (=> ($generated@@63 ($generated@@54 $generated@@116) ($generated@@29 $generated@@117 ($generated@@30 1)) ($generated@@70 $generated@@121) (- $generated@@119 1)) ($generated@@65 ($generated@@29 $generated@@117 ($generated@@30 1)) $generated@@120 $generated@@119)))))))) (=> (=> (< 0 ($generated@@31 $generated@@117)) (ite ($generated@@66 $generated@@118) true (let (($generated@@122 ($generated@@67 $generated@@118)))
(let (($generated@@123 ($generated@@68 $generated@@42 ($generated@@69 $generated@@118))))
 (and (and (<= ($generated@@40 1) $generated@@119) ($generated@@63 ($generated@@54 $generated@@116) ($generated@@29 $generated@@117 ($generated@@30 1)) ($generated@@70 $generated@@123) (- $generated@@119 1))) ($generated@@63 ($generated@@54 $generated@@116) ($generated@@29 $generated@@117 ($generated@@30 1)) $generated@@122 $generated@@119)))))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@117)) (forall (($generated@@124 T@U) ) (!  (=> ($generated@@25 $generated@@124 $generated@@117) ($generated@@65 $generated@@124 $generated@@118 $generated@@119))
 :pattern ( ($generated@@63 ($generated@@54 $generated@@116) $generated@@124 $generated@@118 $generated@@119))
))))) (= ($generated@@63 ($generated@@54 $generated@@116) ($generated@@60 $generated@@64 $generated@@117) $generated@@118 $generated@@119)  (and (=> (< 0 ($generated@@31 $generated@@117)) (ite ($generated@@66 $generated@@118) true (let (($generated@@125 ($generated@@67 $generated@@118)))
(let (($generated@@126 ($generated@@68 $generated@@42 ($generated@@69 $generated@@118))))
 (and (and (<= ($generated@@40 1) $generated@@119) ($generated@@63 ($generated@@54 $generated@@116) ($generated@@29 $generated@@117 ($generated@@30 1)) ($generated@@70 $generated@@126) (- $generated@@119 1))) ($generated@@63 ($generated@@54 $generated@@116) ($generated@@29 $generated@@117 ($generated@@30 1)) $generated@@125 $generated@@119)))))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@117)) (forall (($generated@@127 T@U) ) (!  (=> ($generated@@25 $generated@@127 $generated@@117) ($generated@@63 ($generated@@54 $generated@@116) $generated@@127 $generated@@118 $generated@@119))
 :pattern ( ($generated@@63 ($generated@@54 $generated@@116) $generated@@127 $generated@@118 $generated@@119))
)))))))
 :weight 3
 :pattern ( ($generated@@63 ($generated@@54 $generated@@116) ($generated@@60 $generated@@64 $generated@@117) $generated@@118 $generated@@119))
))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@129 ($generated@@48 $generated@@128)) (or ($generated@@66 $generated@@129) ($generated@@88 $generated@@129)))
 :pattern ( ($generated@@88 $generated@@129) ($generated@@41 $generated@@42 $generated@@129 ($generated@@48 $generated@@128)))
 :pattern ( ($generated@@66 $generated@@129) ($generated@@41 $generated@@42 $generated@@129 ($generated@@48 $generated@@128)))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@83 ($generated@@56 $generated@@132 $generated@@130) $generated@@131) ($generated@@41 $generated@@132 $generated@@130 $generated@@131))
 :pattern ( ($generated@@83 ($generated@@56 $generated@@132 $generated@@130) $generated@@131))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 Int) ) (!  (=> (or ($generated@@65 $generated@@134 $generated@@135 $generated@@136) (and (< 3 $generated@@37) (and ($generated@@41 $generated@@42 $generated@@135 ($generated@@48 $generated@@43)) (<= ($generated@@40 0) $generated@@136)))) (and (and (=> (< 0 ($generated@@31 $generated@@134)) (=> (not ($generated@@66 $generated@@135)) (let (($generated@@137 ($generated@@67 $generated@@135)))
(let (($generated@@138 ($generated@@68 $generated@@42 ($generated@@69 $generated@@135))))
 (=> (<= ($generated@@40 1) $generated@@136) (and (and ($generated@@46 $generated@@138) ($generated@@65 ($generated@@29 $generated@@134 ($generated@@30 1)) ($generated@@70 $generated@@138) (- $generated@@136 1))) (=> ($generated@@63 $generated@@133 ($generated@@29 $generated@@134 ($generated@@30 1)) ($generated@@70 $generated@@138) (- $generated@@136 1)) ($generated@@65 ($generated@@29 $generated@@134 ($generated@@30 1)) $generated@@137 $generated@@136)))))))) (=> (=> (< 0 ($generated@@31 $generated@@134)) (ite ($generated@@66 $generated@@135) true (let (($generated@@139 ($generated@@67 $generated@@135)))
(let (($generated@@140 ($generated@@68 $generated@@42 ($generated@@69 $generated@@135))))
 (and (and (<= ($generated@@40 1) $generated@@136) ($generated@@63 $generated@@133 ($generated@@29 $generated@@134 ($generated@@30 1)) ($generated@@70 $generated@@140) (- $generated@@136 1))) ($generated@@63 $generated@@133 ($generated@@29 $generated@@134 ($generated@@30 1)) $generated@@139 $generated@@136)))))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@134)) (forall (($generated@@141 T@U) ) (!  (=> ($generated@@25 $generated@@141 $generated@@134) ($generated@@65 $generated@@141 $generated@@135 $generated@@136))
 :pattern ( ($generated@@63 $generated@@133 $generated@@141 $generated@@135 $generated@@136))
))))) (= ($generated@@63 ($generated@@54 $generated@@133) $generated@@134 $generated@@135 $generated@@136)  (and (=> (< 0 ($generated@@31 $generated@@134)) (ite ($generated@@66 $generated@@135) true (let (($generated@@142 ($generated@@67 $generated@@135)))
(let (($generated@@143 ($generated@@68 $generated@@42 ($generated@@69 $generated@@135))))
 (and (and (<= ($generated@@40 1) $generated@@136) ($generated@@63 $generated@@133 ($generated@@29 $generated@@134 ($generated@@30 1)) ($generated@@70 $generated@@143) (- $generated@@136 1))) ($generated@@63 $generated@@133 ($generated@@29 $generated@@134 ($generated@@30 1)) $generated@@142 $generated@@136)))))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@134)) (forall (($generated@@144 T@U) ) (!  (=> ($generated@@25 $generated@@144 $generated@@134) ($generated@@63 $generated@@133 $generated@@144 $generated@@135 $generated@@136))
 :pattern ( ($generated@@63 $generated@@133 $generated@@144 $generated@@135 $generated@@136))
)))))))
 :pattern ( ($generated@@63 ($generated@@54 $generated@@133) $generated@@134 $generated@@135 $generated@@136))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Int) ) (! (= ($generated@@63 ($generated@@54 $generated@@145) $generated@@146 $generated@@147 $generated@@148) ($generated@@63 $generated@@145 $generated@@146 $generated@@147 $generated@@148))
 :pattern ( ($generated@@63 ($generated@@54 $generated@@145) $generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (<= 0 ($generated@@31 $generated@@149))
 :pattern ( ($generated@@31 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@35 ($generated@@55 $generated@@150 $generated@@151)) $generated@@4)
 :pattern ( ($generated@@55 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@69 ($generated@@55 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@55 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@67 ($generated@@55 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@55 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@156 ($generated@@48 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@48 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@35 ($generated@@91 $generated@@158)) $generated@@5)
 :pattern ( ($generated@@91 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@70 ($generated@@91 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@91 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@68 $generated@@161 ($generated@@56 $generated@@161 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@56 $generated@@161 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@162 $generated@@163) (or (not (= $generated@@162 $generated@@163)) (not true))) (=> (and ($generated@@107 $generated@@162) (not ($generated@@107 $generated@@163))) ($generated@@25 $generated@@162 $generated@@163))) (=> (and ($generated@@107 $generated@@162) ($generated@@107 $generated@@163)) (= ($generated@@25 $generated@@162 $generated@@163) (< ($generated@@31 $generated@@162) ($generated@@31 $generated@@163))))) (=> (and ($generated@@25 $generated@@162 $generated@@163) ($generated@@107 $generated@@163)) ($generated@@107 $generated@@162)))
 :pattern ( ($generated@@25 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 Int) ) (! (= ($generated@@38 ($generated@@54 $generated@@164) $generated@@165) ($generated@@38 $generated@@164 $generated@@165))
 :pattern ( ($generated@@38 ($generated@@54 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 Int) ) (! (= ($generated@@50 ($generated@@54 $generated@@166) $generated@@167) ($generated@@50 $generated@@166 $generated@@167))
 :pattern ( ($generated@@50 ($generated@@54 $generated@@166) $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (< ($generated@@168 $generated@@169) ($generated@@168 ($generated@@91 $generated@@169)))
 :pattern ( ($generated@@91 $generated@@169))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@170 $generated@@180 $generated@@181 $generated@@182 ($generated@@176 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@185 $generated@@186) $generated@@183)
 :weight 0
)) (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@170 $generated@@187 $generated@@188 $generated@@189 ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@170 $generated@@196 $generated@@197 $generated@@198 ($generated@@176 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@170 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (= ($generated@@9 $generated@@171) 5)) (= ($generated@@9 $generated@@172) 6)) (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@174 $generated@@205 $generated@@206 ($generated@@177 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@207) $generated@@209) $generated@@207)
 :weight 0
))) (forall (($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@214 $generated@@215) (= ($generated@@174 $generated@@210 $generated@@211 ($generated@@177 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@212) $generated@@215) ($generated@@174 $generated@@210 $generated@@211 $generated@@213 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@9 ($generated@@175 $generated@@216 $generated@@217)) 7))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@178 ($generated@@175 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@175 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@179 ($generated@@175 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@175 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (= ($generated@@14 ($generated@@170 $generated@@171 $generated@@172 $generated@@10 ($generated@@173 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (or (not (= $generated@@226 $generated@@222)) (not true)) ($generated@@14 ($generated@@68 $generated@@10 ($generated@@174 $generated@@172 $generated@@64 ($generated@@174 $generated@@171 ($generated@@175 $generated@@172 $generated@@64) $generated@@223 $generated@@226) $generated@@224)))) $generated@@225))
 :pattern ( ($generated@@170 $generated@@171 $generated@@172 $generated@@10 ($generated@@173 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> ($generated@@83 $generated@@229 ($generated@@48 $generated@@228)) (and (= ($generated@@56 $generated@@42 ($generated@@68 $generated@@42 $generated@@229)) $generated@@229) ($generated@@41 $generated@@42 ($generated@@68 $generated@@42 $generated@@229) ($generated@@48 $generated@@228))))
 :pattern ( ($generated@@83 $generated@@229 ($generated@@48 $generated@@228)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> ($generated@@107 $generated@@230) (= $generated@@230 ($generated@@30 ($generated@@31 $generated@@230))))
 :pattern ( ($generated@@31 $generated@@230))
 :pattern ( ($generated@@107 $generated@@230))
)))
(assert (= ($generated@@104 $generated@@102) $generated@@0))
(assert (= ($generated@@105 $generated@@102) $generated@@6))
(assert (= ($generated@@104 $generated@@43) $generated@@1))
(assert (= ($generated@@105 $generated@@43) $generated@@7))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and ($generated@@107 $generated@@232) (<= ($generated@@31 $generated@@232) ($generated@@31 $generated@@231))) (or (and (= $generated@@232 ($generated@@30 0)) (= ($generated@@29 $generated@@231 $generated@@232) $generated@@231)) (and (or (not (= $generated@@232 ($generated@@30 0))) (not true)) ($generated@@25 ($generated@@29 $generated@@231 $generated@@232) $generated@@231))))
 :pattern ( ($generated@@29 $generated@@231 $generated@@232))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Int) ($generated@@236 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@42 $generated@@234 ($generated@@48 $generated@@43)) (<= ($generated@@40 0) $generated@@235)) (= $generated@@236 ($generated@@30 0))) ($generated@@63 $generated@@233 $generated@@236 $generated@@234 $generated@@235))
 :pattern ( ($generated@@63 $generated@@233 $generated@@236 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@56 $generated@@11 ($generated@@15 ($generated@@40 $generated@@237))) ($generated@@60 $generated@@64 ($generated@@56 $generated@@11 ($generated@@15 $generated@@237))))
 :pattern ( ($generated@@56 $generated@@11 ($generated@@15 ($generated@@40 $generated@@237))))
)))
(assert (forall (($generated@@238 T@U) ) (! (= ($generated@@91 ($generated@@60 $generated@@42 $generated@@238)) ($generated@@60 $generated@@42 ($generated@@91 $generated@@238)))
 :pattern ( ($generated@@91 ($generated@@60 $generated@@42 $generated@@238)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@T) ) (! (= ($generated@@56 $generated@@240 ($generated@@60 $generated@@240 $generated@@239)) ($generated@@60 $generated@@64 ($generated@@56 $generated@@240 $generated@@239)))
 :pattern ( ($generated@@56 $generated@@240 ($generated@@60 $generated@@240 $generated@@239)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@254  (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@65 $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (or ($generated@@63 ($generated@@54 $generated@@242) $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (=> (< 0 ($generated@@31 $generated@@241)) (=> ($generated@@66 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243)) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@13 true)))))))) (=> (=> ($generated@@65 $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (or ($generated@@63 ($generated@@54 $generated@@242) $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (=> (< 0 ($generated@@31 $generated@@241)) (=> ($generated@@66 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243)) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@13 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@65 $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (or ($generated@@63 ($generated@@54 $generated@@242) $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (=> (< 0 ($generated@@31 $generated@@241)) (=> (not ($generated@@66 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243))) (<= ($generated@@40 1) $generated@@243)))))) (=> (=> ($generated@@65 $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (or ($generated@@63 ($generated@@54 $generated@@242) $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (=> (< 0 ($generated@@31 $generated@@241)) (=> (not ($generated@@66 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243))) (<= ($generated@@40 1) $generated@@243))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@65 $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (or ($generated@@63 ($generated@@54 $generated@@242) $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (=> (< 0 ($generated@@31 $generated@@241)) (=> (not ($generated@@66 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243))) (let (($generated@@255 ($generated@@68 $generated@@42 ($generated@@69 ($generated@@50 ($generated@@54 ($generated@@54 $generated@@242)) $generated@@243)))))
($generated@@63 ($generated@@54 ($generated@@54 $generated@@242)) ($generated@@29 $generated@@241 ($generated@@30 1)) ($generated@@70 $generated@@255) (- $generated@@243 1)))))))) (=> (=> ($generated@@65 $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (or ($generated@@63 ($generated@@54 $generated@@242) $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (=> (< 0 ($generated@@31 $generated@@241)) (=> (not ($generated@@66 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243))) (let (($generated@@256 ($generated@@68 $generated@@42 ($generated@@69 ($generated@@50 ($generated@@54 ($generated@@54 $generated@@242)) $generated@@243)))))
($generated@@63 ($generated@@54 ($generated@@54 $generated@@242)) ($generated@@29 $generated@@241 ($generated@@30 1)) ($generated@@70 $generated@@256) (- $generated@@243 1))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@65 $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (or ($generated@@63 ($generated@@54 $generated@@242) $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (=> (< 0 ($generated@@31 $generated@@241)) (=> (not ($generated@@66 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243))) (let (($generated@@257 ($generated@@67 ($generated@@50 ($generated@@54 ($generated@@54 $generated@@242)) $generated@@243))))
($generated@@63 ($generated@@54 ($generated@@54 $generated@@242)) ($generated@@29 $generated@@241 ($generated@@30 1)) $generated@@257 $generated@@243))))))) (=> (=> ($generated@@65 $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (or ($generated@@63 ($generated@@54 $generated@@242) $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (=> (< 0 ($generated@@31 $generated@@241)) (=> (not ($generated@@66 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243))) (let (($generated@@258 ($generated@@67 ($generated@@50 ($generated@@54 ($generated@@54 $generated@@242)) $generated@@243))))
($generated@@63 ($generated@@54 ($generated@@54 $generated@@242)) ($generated@@29 $generated@@241 ($generated@@30 1)) $generated@@258 $generated@@243)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@65 $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (or ($generated@@63 ($generated@@54 $generated@@242) $generated@@241 ($generated@@50 ($generated@@54 $generated@@242) $generated@@243) $generated@@243) (=> (= ($generated@@40 0) ($generated@@31 $generated@@241)) (forall (($generated@@259 T@U) ) (!  (=> ($generated@@25 $generated@@259 $generated@@241) ($generated@@63 ($generated@@54 ($generated@@54 $generated@@242)) $generated@@259 ($generated@@50 ($generated@@54 ($generated@@54 $generated@@242)) $generated@@243) $generated@@243))
 :pattern ( ($generated@@63 ($generated@@54 ($generated@@54 $generated@@242)) $generated@@259 ($generated@@50 ($generated@@54 ($generated@@54 $generated@@242)) $generated@@243) $generated@@243))
))))))))))))))))
(let (($generated@@260  (=> (and (<= $generated@@243 0) (= (ControlFlow 0 12) 2)) $generated@@254)))
(let (($generated@@261  (=> (< 0 $generated@@243) (and (=> (= (ControlFlow 0 8) (- 0 11)) ($generated@@107 ($generated@@60 $generated@@64 ($generated@@30 1)))) (=> ($generated@@107 ($generated@@60 $generated@@64 ($generated@@30 1))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (<= ($generated@@31 ($generated@@60 $generated@@64 ($generated@@30 1))) ($generated@@31 $generated@@241))) (=> (<= ($generated@@31 ($generated@@60 $generated@@64 ($generated@@30 1))) ($generated@@31 $generated@@241)) (=> (= $generated@@244 ($generated@@29 $generated@@241 ($generated@@30 1))) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@41 $generated@@11 ($generated@@15 (- $generated@@243 1)) $generated@@102)) (=> ($generated@@41 $generated@@11 ($generated@@15 (- $generated@@243 1)) $generated@@102) (=> (= $generated@@245 (- $generated@@243 1)) (=> (and (and (and ($generated@@246 $generated@@247) ($generated@@248 $generated@@247)) (and ($generated@@51 $generated@@245) ($generated@@65 $generated@@244 ($generated@@50 ($generated@@54 $generated@@242) $generated@@245) $generated@@245))) (and (and ($generated@@65 $generated@@244 ($generated@@50 ($generated@@54 $generated@@242) $generated@@245) $generated@@245) (and ($generated@@63 ($generated@@54 $generated@@242) $generated@@244 ($generated@@50 ($generated@@54 $generated@@242) $generated@@245) $generated@@245) (and (=> (< 0 ($generated@@31 $generated@@244)) (ite ($generated@@66 ($generated@@50 ($generated@@54 $generated@@242) $generated@@245)) true (let (($generated@@262 ($generated@@67 ($generated@@50 ($generated@@54 $generated@@242) $generated@@245))))
(let (($generated@@263 ($generated@@68 $generated@@42 ($generated@@69 ($generated@@50 ($generated@@54 $generated@@242) $generated@@245)))))
 (and (and (<= ($generated@@40 1) $generated@@245) ($generated@@63 ($generated@@54 $generated@@242) ($generated@@29 $generated@@244 ($generated@@30 1)) ($generated@@70 $generated@@263) (- $generated@@245 1))) ($generated@@63 ($generated@@54 $generated@@242) ($generated@@29 $generated@@244 ($generated@@30 1)) $generated@@262 $generated@@245)))))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@244)) (forall (($generated@@264 T@U) ) (!  (=> ($generated@@25 $generated@@264 $generated@@244) ($generated@@63 ($generated@@54 $generated@@242) $generated@@264 ($generated@@50 ($generated@@54 $generated@@242) $generated@@245) $generated@@245))
 :pattern ( ($generated@@63 ($generated@@54 $generated@@242) $generated@@264 ($generated@@50 ($generated@@54 $generated@@242) $generated@@245) $generated@@245))
)))))) (and (= $generated@@249 $generated@@247) (= (ControlFlow 0 8) 2)))) $generated@@254))))))))))))
(let (($generated@@265  (=> (< 0 ($generated@@31 $generated@@241)) (and (=> (= (ControlFlow 0 13) 8) $generated@@261) (=> (= (ControlFlow 0 13) 12) $generated@@260)))))
(let (($generated@@266  (=> (<= ($generated@@31 $generated@@241) 0) (=> (and (and (and ($generated@@246 $generated@@250) ($generated@@248 $generated@@250)) (= $generated@@249 $generated@@250)) (and (forall (($generated@@267 T@U) ($generated@@268 Int) ) (!  (=> (and (<= ($generated@@40 0) $generated@@268) ($generated@@25 $generated@@267 $generated@@241)) ($generated@@63 ($generated@@54 $generated@@242) $generated@@267 ($generated@@50 ($generated@@54 $generated@@242) $generated@@268) $generated@@268))
 :pattern ( ($generated@@50 ($generated@@54 $generated@@242) $generated@@268) ($generated@@25 $generated@@267 $generated@@241))
)) (= (ControlFlow 0 7) 2))) $generated@@254))))
(let (($generated@@269  (=> (= $generated@@251 ($generated@@173 $generated@@252 $generated@@253 $generated false)) (=> (and (and ($generated@@246 $generated@@249) ($generated@@248 $generated@@249)) (and (= $generated@@253 $generated@@249) (forall (($generated@@270 T@U) ($generated@@271 Int) ) (!  (=> (and (and (<= ($generated@@40 0) $generated@@271) ($generated@@14 ($generated@@60 $generated@@10 ($generated@@13 true)))) (or ($generated@@25 $generated@@270 $generated@@241) (and (= $generated@@270 $generated@@241) (and (<= 0 $generated@@271) (< $generated@@271 $generated@@243))))) ($generated@@63 ($generated@@54 $generated@@242) $generated@@270 ($generated@@50 ($generated@@54 $generated@@242) $generated@@271) $generated@@271))
 :pattern ( ($generated@@63 ($generated@@54 $generated@@242) $generated@@270 ($generated@@50 ($generated@@54 $generated@@242) $generated@@271) $generated@@271))
)))) (and (=> (= (ControlFlow 0 14) 13) $generated@@265) (=> (= (ControlFlow 0 14) 7) $generated@@266))))))
(let (($generated@@272  (=> (and (and (and ($generated@@246 $generated@@253) ($generated@@248 $generated@@253)) (<= ($generated@@40 0) $generated@@243)) (and (= 4 $generated@@37) (= (ControlFlow 0 15) 14))) $generated@@269)))
$generated@@272))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
