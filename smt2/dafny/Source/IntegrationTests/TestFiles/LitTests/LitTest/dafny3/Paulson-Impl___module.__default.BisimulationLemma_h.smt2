(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun alloc () T@U)
(declare-fun Tagclass._System.nat () T@U)
(declare-fun Tagclass._module.FunctionHandle () T@U)
(declare-fun Tagclass._module.LList () T@U)
(declare-fun |##_module.LList.Nil| () T@U)
(declare-fun |##_module.LList.Cons| () T@U)
(declare-fun |##_module.FunctionHandle.FH| () T@U)
(declare-fun tytagFamily$nat () T@U)
(declare-fun tytagFamily$FunctionHandle () T@U)
(declare-fun tytagFamily$LList () T@U)
(declare-fun Ctor (T@T) Int)
(declare-fun boolType () T@T)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun |$PrefixEq#_module.LList| (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $LS (T@U) T@U)
(declare-fun |ORD#FromNat| (Int) T@U)
(declare-fun |ORD#Less| (T@U T@U) Bool)
(declare-fun $IsAlloc (T@T T@U T@U T@U) Bool)
(declare-fun Tclass._System.nat () T@U)
(declare-fun |$IsA#_module.FunctionHandle| (T@U) Bool)
(declare-fun _module.FunctionHandle.FH_q (T@U) Bool)
(declare-fun |ORD#Minus| (T@U T@U) T@U)
(declare-fun |ORD#Offset| (T@U) Int)
(declare-fun DatatypeCtorId (T@U) T@U)
(declare-fun |#_module.LList.Nil| () T@U)
(declare-fun $Is (T@T T@U T@U) Bool)
(declare-fun DatatypeTypeType () T@T)
(declare-fun Tclass._module.FunctionHandle (T@U) T@U)
(declare-fun Tclass._module.LList (T@U) T@U)
(declare-fun $IsGoodHeap (T@U) Bool)
(declare-fun $FunctionContextHeight () Int)
(declare-fun _module.__default.Iter (T@U T@U Int T@U T@U) T@U)
(declare-fun |_module.__default.Iter#canCall| (T@U Int T@U T@U) Bool)
(declare-fun LitInt (Int) Int)
(declare-fun $IsBox (T@U T@U) Bool)
(declare-fun |$Eq#_module.LList| (T@U T@U T@U T@U T@U) Bool)
(declare-fun _module.__default.LmapIter (T@U T@U Int T@U T@U) T@U)
(declare-fun Lit (T@T T@U) T@U)
(declare-fun |_module.__default.LmapIter#canCall| (T@U Int T@U T@U) Bool)
(declare-fun |_module.__default.Lmap#canCall| (T@U T@U T@U) Bool)
(declare-fun _module.__default.Lmap (T@U T@U T@U T@U) T@U)
(declare-fun $LZ () T@U)
(declare-fun |_module.__default.Apply#canCall| (T@U T@U T@U) Bool)
(declare-fun _module.__default.Apply (T@U T@U T@U) T@U)
(declare-fun |#_module.LList.Cons| (T@U T@U) T@U)
(declare-fun $IsAllocBox (T@U T@U T@U) Bool)
(declare-fun _module.LList.Nil_q (T@U) Bool)
(declare-fun _module.LList.Cons_q (T@U) Bool)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun $Box (T@T T@U) T@U)
(declare-fun _module.LList.head (T@U) T@U)
(declare-fun _module.LList.tail (T@U) T@U)
(declare-fun |#_module.FunctionHandle.FH| (T@U) T@U)
(declare-fun _module.__default.h (T@U T@U T@U) T@U)
(declare-fun |_module.__default.h#canCall| (T@U T@U T@U) Bool)
(declare-fun Tag (T@U) T@U)
(declare-fun TagFamily (T@U) T@U)
(declare-fun |ORD#IsNat| (T@U) Bool)
(declare-fun |$IsA#_module.LList| (T@U) Bool)
(declare-fun _module.__default.Iterates (T@U T@U T@U T@U) T@U)
(declare-fun |_module.__default.Iterates#canCall| (T@U T@U T@U) Bool)
(declare-fun BoxType () T@T)
(declare-fun Tclass._module.FunctionHandle_0 (T@U) T@U)
(declare-fun Tclass._module.LList_0 (T@U) T@U)
(declare-fun _module.FunctionHandle._h0 (T@U) T@U)
(declare-fun BoxRank (T@U) Int)
(declare-fun DtRank (T@U) Int)
(declare-fun MapType0Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun refType () T@T)
(declare-fun FieldType () T@T)
(declare-fun |lambda#0| (T@U T@U T@U Bool) T@U)
(declare-fun MapType1Select (T@T T@T T@U T@U) T@U)
(declare-fun MapType1Type (T@T T@T) T@T)
(declare-fun MapType0Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun MapType1Store (T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType1TypeInv0 (T@T) T@T)
(declare-fun MapType1TypeInv1 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= (Ctor boolType) 0) (= (Ctor intType) 1)) (= (Ctor realType) 2)) (forall ((arg0 Bool) ) (! (= (U_2_bool (bool_2_U arg0)) arg0)
 :pattern ( (bool_2_U arg0))
))) (forall ((x T@U) ) (! (= (bool_2_U (U_2_bool x)) x)
 :pattern ( (U_2_bool x))
))) (forall ((arg0@@0 Int) ) (! (= (U_2_int (int_2_U arg0@@0)) arg0@@0)
 :pattern ( (int_2_U arg0@@0))
))) (forall ((x@@0 T@U) ) (! (= (int_2_U (U_2_int x@@0)) x@@0)
 :pattern ( (U_2_int x@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@1 T@U) ) (! (= (real_2_U (U_2_real x@@1)) x@@1)
 :pattern ( (U_2_real x@@1))
))))
(assert (distinct alloc Tagclass._System.nat Tagclass._module.FunctionHandle Tagclass._module.LList |##_module.LList.Nil| |##_module.LList.Cons| |##_module.FunctionHandle.FH| tytagFamily$nat tytagFamily$FunctionHandle tytagFamily$LList)
)
(assert (forall ((|_module.LList$T#l| T@U) (|_module.LList$T#r| T@U) (k T@U) (ly T@U) (d0 T@U) (d1 T@U) ) (!  (=> (or (not (= k (|ORD#FromNat| 0))) (not true)) (= (|$PrefixEq#_module.LList| |_module.LList$T#l| |_module.LList$T#r| k ($LS ly) d0 d1) (|$PrefixEq#_module.LList| |_module.LList$T#l| |_module.LList$T#r| k ly d0 d1)))
 :pattern ( (|$PrefixEq#_module.LList| |_module.LList$T#l| |_module.LList$T#r| k ($LS ly) d0 d1))
)))
(assert (forall ((o T@U) (p T@U) (r T@U) ) (!  (=> (and (|ORD#Less| o p) (|ORD#Less| p r)) (|ORD#Less| o r))
 :pattern ( (|ORD#Less| o p) (|ORD#Less| p r))
 :pattern ( (|ORD#Less| o p) (|ORD#Less| o r))
)))
(assert (forall ((|x#0| T@U) ($h T@U) ) (! ($IsAlloc intType |x#0| Tclass._System.nat $h)
 :pattern ( ($IsAlloc intType |x#0| Tclass._System.nat $h))
)))
(assert (forall ((d T@U) ) (!  (=> (|$IsA#_module.FunctionHandle| d) (_module.FunctionHandle.FH_q d))
 :pattern ( (|$IsA#_module.FunctionHandle| d))
)))
(assert (forall ((o@@0 T@U) (m Int) (n Int) ) (!  (=> (and (and (<= 0 m) (<= 0 n)) (<= (+ m n) (|ORD#Offset| o@@0))) (= (|ORD#Minus| (|ORD#Minus| o@@0 (|ORD#FromNat| m)) (|ORD#FromNat| n)) (|ORD#Minus| o@@0 (|ORD#FromNat| (+ m n)))))
 :pattern ( (|ORD#Minus| (|ORD#Minus| o@@0 (|ORD#FromNat| m)) (|ORD#FromNat| n)))
)))
(assert (= (DatatypeCtorId |#_module.LList.Nil|) |##_module.LList.Nil|))
(assert (= (Ctor DatatypeTypeType) 3))
(assert (forall ((_module.FunctionHandle$T T@U) (d@@0 T@U) ) (!  (=> ($Is DatatypeTypeType d@@0 (Tclass._module.FunctionHandle _module.FunctionHandle$T)) (_module.FunctionHandle.FH_q d@@0))
 :pattern ( (_module.FunctionHandle.FH_q d@@0) ($Is DatatypeTypeType d@@0 (Tclass._module.FunctionHandle _module.FunctionHandle$T)))
)))
(assert (forall ((|_module.LList$T#l@@0| T@U) (|_module.LList$T#r@@0| T@U) (k@@0 T@U) (ly@@0 T@U) (d0@@0 T@U) (d1@@0 T@U) ) (!  (=> (= d0@@0 d1@@0) (|$PrefixEq#_module.LList| |_module.LList$T#l@@0| |_module.LList$T#r@@0| k@@0 ($LS ly@@0) d0@@0 d1@@0))
 :pattern ( (|$PrefixEq#_module.LList| |_module.LList$T#l@@0| |_module.LList$T#r@@0| k@@0 ($LS ly@@0) d0@@0 d1@@0))
)))
(assert (forall ((_module.LList$T T@U) ($h@@0 T@U) ) (!  (=> ($IsGoodHeap $h@@0) ($IsAlloc DatatypeTypeType |#_module.LList.Nil| (Tclass._module.LList _module.LList$T) $h@@0))
 :pattern ( ($IsAlloc DatatypeTypeType |#_module.LList.Nil| (Tclass._module.LList _module.LList$T) $h@@0))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall ((_module._default.Iter$A T@U) ($ly T@U) (|n#0| Int) (|f#0| T@U) (|arg#0| T@U) ) (!  (=> (or (|_module.__default.Iter#canCall| _module._default.Iter$A |n#0| |f#0| |arg#0|) (and (< 2 $FunctionContextHeight) (and (and (<= (LitInt 0) |n#0|) ($Is DatatypeTypeType |f#0| (Tclass._module.FunctionHandle _module._default.Iter$A))) ($IsBox |arg#0| _module._default.Iter$A)))) ($IsBox (_module.__default.Iter _module._default.Iter$A $ly |n#0| |f#0| |arg#0|) _module._default.Iter$A))
 :pattern ( (_module.__default.Iter _module._default.Iter$A $ly |n#0| |f#0| |arg#0|))
))))
(assert (forall ((|_module.LList$T#l@@1| T@U) (|_module.LList$T#r@@1| T@U) (ly@@1 T@U) (d0@@1 T@U) (d1@@1 T@U) ) (! (= (|$Eq#_module.LList| |_module.LList$T#l@@1| |_module.LList$T#r@@1| ($LS ly@@1) d0@@1 d1@@1) (= d0@@1 d1@@1))
 :pattern ( (|$Eq#_module.LList| |_module.LList$T#l@@1| |_module.LList$T#r@@1| ($LS ly@@1) d0@@1 d1@@1))
)))
(assert (forall ((_module.LList$T@@0 T@U) ) (! ($Is DatatypeTypeType |#_module.LList.Nil| (Tclass._module.LList _module.LList$T@@0))
 :pattern ( ($Is DatatypeTypeType |#_module.LList.Nil| (Tclass._module.LList _module.LList$T@@0)))
)))
(assert  (=> (<= 3 $FunctionContextHeight) (forall ((_module._default.LmapIter$_T0 T@U) ($ly@@0 T@U) (|n#0@@0| Int) (|f#0@@0| T@U) (|arg#0@@0| T@U) ) (!  (=> (or (|_module.__default.LmapIter#canCall| _module._default.LmapIter$_T0 (LitInt |n#0@@0|) (Lit DatatypeTypeType |f#0@@0|) (Lit DatatypeTypeType |arg#0@@0|)) (and (< 3 $FunctionContextHeight) (and (and (<= (LitInt 0) |n#0@@0|) ($Is DatatypeTypeType |f#0@@0| (Tclass._module.FunctionHandle _module._default.LmapIter$_T0))) ($Is DatatypeTypeType |arg#0@@0| (Tclass._module.LList _module._default.LmapIter$_T0))))) (and (=> (or (not (= (LitInt |n#0@@0|) (LitInt 0))) (not true)) (and (|_module.__default.LmapIter#canCall| _module._default.LmapIter$_T0 (LitInt (- |n#0@@0| 1)) (Lit DatatypeTypeType |f#0@@0|) (Lit DatatypeTypeType |arg#0@@0|)) (|_module.__default.Lmap#canCall| _module._default.LmapIter$_T0 (Lit DatatypeTypeType |f#0@@0|) (Lit DatatypeTypeType (_module.__default.LmapIter _module._default.LmapIter$_T0 ($LS $ly@@0) (LitInt (- |n#0@@0| 1)) (Lit DatatypeTypeType |f#0@@0|) (Lit DatatypeTypeType |arg#0@@0|)))))) (= (_module.__default.LmapIter _module._default.LmapIter$_T0 ($LS $ly@@0) (LitInt |n#0@@0|) (Lit DatatypeTypeType |f#0@@0|) (Lit DatatypeTypeType |arg#0@@0|)) (ite (= (LitInt |n#0@@0|) (LitInt 0)) |arg#0@@0| (_module.__default.Lmap _module._default.LmapIter$_T0 ($LS $LZ) (Lit DatatypeTypeType |f#0@@0|) (Lit DatatypeTypeType (_module.__default.LmapIter _module._default.LmapIter$_T0 ($LS $ly@@0) (LitInt (- |n#0@@0| 1)) (Lit DatatypeTypeType |f#0@@0|) (Lit DatatypeTypeType |arg#0@@0|))))))))
 :weight 3
 :pattern ( (_module.__default.LmapIter _module._default.LmapIter$_T0 ($LS $ly@@0) (LitInt |n#0@@0|) (Lit DatatypeTypeType |f#0@@0|) (Lit DatatypeTypeType |arg#0@@0|)))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall ((_module._default.Iter$A@@0 T@U) ($ly@@1 T@U) (|n#0@@1| Int) (|f#0@@1| T@U) (|arg#0@@1| T@U) ) (!  (=> (or (|_module.__default.Iter#canCall| _module._default.Iter$A@@0 (LitInt |n#0@@1|) (Lit DatatypeTypeType |f#0@@1|) |arg#0@@1|) (and (< 2 $FunctionContextHeight) (and (and (<= (LitInt 0) |n#0@@1|) ($Is DatatypeTypeType |f#0@@1| (Tclass._module.FunctionHandle _module._default.Iter$A@@0))) ($IsBox |arg#0@@1| _module._default.Iter$A@@0)))) (and (=> (or (not (= (LitInt |n#0@@1|) (LitInt 0))) (not true)) (and (|_module.__default.Iter#canCall| _module._default.Iter$A@@0 (LitInt (- |n#0@@1| 1)) (Lit DatatypeTypeType |f#0@@1|) |arg#0@@1|) (|_module.__default.Apply#canCall| _module._default.Iter$A@@0 (Lit DatatypeTypeType |f#0@@1|) (_module.__default.Iter _module._default.Iter$A@@0 ($LS $ly@@1) (LitInt (- |n#0@@1| 1)) (Lit DatatypeTypeType |f#0@@1|) |arg#0@@1|)))) (= (_module.__default.Iter _module._default.Iter$A@@0 ($LS $ly@@1) (LitInt |n#0@@1|) (Lit DatatypeTypeType |f#0@@1|) |arg#0@@1|) (ite (= (LitInt |n#0@@1|) (LitInt 0)) |arg#0@@1| (_module.__default.Apply _module._default.Iter$A@@0 (Lit DatatypeTypeType |f#0@@1|) (_module.__default.Iter _module._default.Iter$A@@0 ($LS $ly@@1) (LitInt (- |n#0@@1| 1)) (Lit DatatypeTypeType |f#0@@1|) |arg#0@@1|))))))
 :weight 3
 :pattern ( (_module.__default.Iter _module._default.Iter$A@@0 ($LS $ly@@1) (LitInt |n#0@@1|) (Lit DatatypeTypeType |f#0@@1|) |arg#0@@1|))
))))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($Heap T@U) (_module._default.LmapIter$_T0@@0 T@U) ($ly@@2 T@U) (|n#0@@2| Int) (|f#0@@2| T@U) (|arg#0@@2| T@U) ) (!  (=> (and (or (|_module.__default.LmapIter#canCall| _module._default.LmapIter$_T0@@0 |n#0@@2| |f#0@@2| |arg#0@@2|) (and (< 3 $FunctionContextHeight) (and (and (<= (LitInt 0) |n#0@@2|) (and ($Is DatatypeTypeType |f#0@@2| (Tclass._module.FunctionHandle _module._default.LmapIter$_T0@@0)) ($IsAlloc DatatypeTypeType |f#0@@2| (Tclass._module.FunctionHandle _module._default.LmapIter$_T0@@0) $Heap))) (and ($Is DatatypeTypeType |arg#0@@2| (Tclass._module.LList _module._default.LmapIter$_T0@@0)) ($IsAlloc DatatypeTypeType |arg#0@@2| (Tclass._module.LList _module._default.LmapIter$_T0@@0) $Heap))))) ($IsGoodHeap $Heap)) ($IsAlloc DatatypeTypeType (_module.__default.LmapIter _module._default.LmapIter$_T0@@0 $ly@@2 |n#0@@2| |f#0@@2| |arg#0@@2|) (Tclass._module.LList _module._default.LmapIter$_T0@@0) $Heap))
 :pattern ( ($IsAlloc DatatypeTypeType (_module.__default.LmapIter _module._default.LmapIter$_T0@@0 $ly@@2 |n#0@@2| |f#0@@2| |arg#0@@2|) (Tclass._module.LList _module._default.LmapIter$_T0@@0) $Heap))
))))
(assert (forall ((x@@2 Int) ) (! (= (LitInt x@@2) x@@2)
 :pattern ( (LitInt x@@2))
)))
(assert (forall ((x@@3 T@U) (T T@T) ) (! (= (Lit T x@@3) x@@3)
 :pattern ( (Lit T x@@3))
)))
(assert  (=> (<= 3 $FunctionContextHeight) (forall ((_module._default.LmapIter$_T0@@1 T@U) ($ly@@3 T@U) (|n#0@@3| Int) (|f#0@@3| T@U) (|arg#0@@3| T@U) ) (!  (=> (or (|_module.__default.LmapIter#canCall| _module._default.LmapIter$_T0@@1 |n#0@@3| |f#0@@3| |arg#0@@3|) (and (< 3 $FunctionContextHeight) (and (and (<= (LitInt 0) |n#0@@3|) ($Is DatatypeTypeType |f#0@@3| (Tclass._module.FunctionHandle _module._default.LmapIter$_T0@@1))) ($Is DatatypeTypeType |arg#0@@3| (Tclass._module.LList _module._default.LmapIter$_T0@@1))))) (and (=> (or (not (= |n#0@@3| (LitInt 0))) (not true)) (and (|_module.__default.LmapIter#canCall| _module._default.LmapIter$_T0@@1 (- |n#0@@3| 1) |f#0@@3| |arg#0@@3|) (|_module.__default.Lmap#canCall| _module._default.LmapIter$_T0@@1 |f#0@@3| (_module.__default.LmapIter _module._default.LmapIter$_T0@@1 $ly@@3 (- |n#0@@3| 1) |f#0@@3| |arg#0@@3|)))) (= (_module.__default.LmapIter _module._default.LmapIter$_T0@@1 ($LS $ly@@3) |n#0@@3| |f#0@@3| |arg#0@@3|) (ite (= |n#0@@3| (LitInt 0)) |arg#0@@3| (_module.__default.Lmap _module._default.LmapIter$_T0@@1 ($LS $LZ) |f#0@@3| (_module.__default.LmapIter _module._default.LmapIter$_T0@@1 $ly@@3 (- |n#0@@3| 1) |f#0@@3| |arg#0@@3|))))))
 :pattern ( (_module.__default.LmapIter _module._default.LmapIter$_T0@@1 ($LS $ly@@3) |n#0@@3| |f#0@@3| |arg#0@@3|))
))))
(assert (forall ((_module.LList$T@@1 T@U) (|a#5#0#0| T@U) (|a#5#1#0| T@U) ) (! (= ($Is DatatypeTypeType (|#_module.LList.Cons| |a#5#0#0| |a#5#1#0|) (Tclass._module.LList _module.LList$T@@1))  (and ($IsBox |a#5#0#0| _module.LList$T@@1) ($Is DatatypeTypeType |a#5#1#0| (Tclass._module.LList _module.LList$T@@1))))
 :pattern ( ($Is DatatypeTypeType (|#_module.LList.Cons| |a#5#0#0| |a#5#1#0|) (Tclass._module.LList _module.LList$T@@1)))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@0 T@U) (_module._default.Iter$A@@1 T@U) ($ly@@4 T@U) (|n#0@@4| Int) (|f#0@@4| T@U) (|arg#0@@4| T@U) ) (!  (=> (and (or (|_module.__default.Iter#canCall| _module._default.Iter$A@@1 |n#0@@4| |f#0@@4| |arg#0@@4|) (and (< 2 $FunctionContextHeight) (and (and (<= (LitInt 0) |n#0@@4|) (and ($Is DatatypeTypeType |f#0@@4| (Tclass._module.FunctionHandle _module._default.Iter$A@@1)) ($IsAlloc DatatypeTypeType |f#0@@4| (Tclass._module.FunctionHandle _module._default.Iter$A@@1) $Heap@@0))) (and ($IsBox |arg#0@@4| _module._default.Iter$A@@1) ($IsAllocBox |arg#0@@4| _module._default.Iter$A@@1 $Heap@@0))))) ($IsGoodHeap $Heap@@0)) ($IsAllocBox (_module.__default.Iter _module._default.Iter$A@@1 $ly@@4 |n#0@@4| |f#0@@4| |arg#0@@4|) _module._default.Iter$A@@1 $Heap@@0))
 :pattern ( ($IsAllocBox (_module.__default.Iter _module._default.Iter$A@@1 $ly@@4 |n#0@@4| |f#0@@4| |arg#0@@4|) _module._default.Iter$A@@1 $Heap@@0))
))))
(assert (forall ((d@@1 T@U) ) (! (= (_module.LList.Nil_q d@@1) (= (DatatypeCtorId d@@1) |##_module.LList.Nil|))
 :pattern ( (_module.LList.Nil_q d@@1))
)))
(assert (forall ((d@@2 T@U) ) (! (= (_module.LList.Cons_q d@@2) (= (DatatypeCtorId d@@2) |##_module.LList.Cons|))
 :pattern ( (_module.LList.Cons_q d@@2))
)))
(assert (forall ((d@@3 T@U) ) (! (= (_module.FunctionHandle.FH_q d@@3) (= (DatatypeCtorId d@@3) |##_module.FunctionHandle.FH|))
 :pattern ( (_module.FunctionHandle.FH_q d@@3))
)))
(assert (forall ((x@@4 T@U) (T@@0 T@T) ) (! (= ($Box T@@0 ($Unbox T@@0 x@@4)) x@@4)
 :pattern ( ($Unbox T@@0 x@@4))
)))
(assert  (=> (<= 3 $FunctionContextHeight) (forall ((_module._default.LmapIter$_T0@@2 T@U) ($ly@@5 T@U) (|n#0@@5| Int) (|f#0@@5| T@U) (|arg#0@@5| T@U) ) (!  (=> (or (|_module.__default.LmapIter#canCall| _module._default.LmapIter$_T0@@2 |n#0@@5| |f#0@@5| |arg#0@@5|) (and (< 3 $FunctionContextHeight) (and (and (<= (LitInt 0) |n#0@@5|) ($Is DatatypeTypeType |f#0@@5| (Tclass._module.FunctionHandle _module._default.LmapIter$_T0@@2))) ($Is DatatypeTypeType |arg#0@@5| (Tclass._module.LList _module._default.LmapIter$_T0@@2))))) ($Is DatatypeTypeType (_module.__default.LmapIter _module._default.LmapIter$_T0@@2 $ly@@5 |n#0@@5| |f#0@@5| |arg#0@@5|) (Tclass._module.LList _module._default.LmapIter$_T0@@2)))
 :pattern ( (_module.__default.LmapIter _module._default.LmapIter$_T0@@2 $ly@@5 |n#0@@5| |f#0@@5| |arg#0@@5|))
))))
(assert (forall ((d@@4 T@U) ) (!  (=> (_module.LList.Cons_q d@@4) (exists ((|a#4#0#0| T@U) (|a#4#1#0| T@U) ) (= d@@4 (|#_module.LList.Cons| |a#4#0#0| |a#4#1#0|))))
 :pattern ( (_module.LList.Cons_q d@@4))
)))
(assert (forall ((d@@5 T@U) ) (!  (=> (_module.LList.Nil_q d@@5) (= d@@5 |#_module.LList.Nil|))
 :pattern ( (_module.LList.Nil_q d@@5))
)))
(assert (forall ((|_module.LList$T#l@@2| T@U) (|_module.LList$T#r@@2| T@U) (k@@1 T@U) (ly@@2 T@U) (d0@@2 T@U) (d1@@2 T@U) ) (!  (=> (and ($Is DatatypeTypeType d0@@2 (Tclass._module.LList |_module.LList$T#l@@2|)) ($Is DatatypeTypeType d1@@2 (Tclass._module.LList |_module.LList$T#r@@2|))) (= (|$PrefixEq#_module.LList| |_module.LList$T#l@@2| |_module.LList$T#r@@2| k@@1 ($LS ly@@2) d0@@2 d1@@2)  (and (=> (< 0 (|ORD#Offset| k@@1)) (or (and (_module.LList.Nil_q d0@@2) (_module.LList.Nil_q d1@@2)) (and (and (_module.LList.Cons_q d0@@2) (_module.LList.Cons_q d1@@2)) (=> (and (_module.LList.Cons_q d0@@2) (_module.LList.Cons_q d1@@2)) (and (= (_module.LList.head d0@@2) (_module.LList.head d1@@2)) (|$PrefixEq#_module.LList| |_module.LList$T#l@@2| |_module.LList$T#r@@2| (|ORD#Minus| k@@1 (|ORD#FromNat| 1)) ly@@2 (_module.LList.tail d0@@2) (_module.LList.tail d1@@2))))))) (=> (and (or (not (= k@@1 (|ORD#FromNat| 0))) (not true)) (= (|ORD#Offset| k@@1) 0)) (|$Eq#_module.LList| |_module.LList$T#l@@2| |_module.LList$T#r@@2| ly@@2 d0@@2 d1@@2)))))
 :pattern ( (|$PrefixEq#_module.LList| |_module.LList$T#l@@2| |_module.LList$T#r@@2| k@@1 ($LS ly@@2) d0@@2 d1@@2))
)))
(assert (forall ((d@@6 T@U) ) (!  (=> (_module.FunctionHandle.FH_q d@@6) (exists ((|a#9#0#0| T@U) ) (= d@@6 (|#_module.FunctionHandle.FH| |a#9#0#0|))))
 :pattern ( (_module.FunctionHandle.FH_q d@@6))
)))
(assert (forall ((|x#0@@0| T@U) ) (! (= ($Is intType |x#0@@0| Tclass._System.nat) (<= (LitInt 0) (U_2_int |x#0@@0|)))
 :pattern ( ($Is intType |x#0@@0| Tclass._System.nat))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@1 T@U) (_module._default.h$A T@U) (|f#0@@6| T@U) (|M#0| T@U) ) (!  (=> (and (or (|_module.__default.h#canCall| _module._default.h$A |f#0@@6| |M#0|) (and (< 1 $FunctionContextHeight) (and (and ($Is DatatypeTypeType |f#0@@6| (Tclass._module.FunctionHandle (Tclass._module.LList _module._default.h$A))) ($IsAlloc DatatypeTypeType |f#0@@6| (Tclass._module.FunctionHandle (Tclass._module.LList _module._default.h$A)) $Heap@@1)) (and ($Is DatatypeTypeType |M#0| (Tclass._module.LList _module._default.h$A)) ($IsAlloc DatatypeTypeType |M#0| (Tclass._module.LList _module._default.h$A) $Heap@@1))))) ($IsGoodHeap $Heap@@1)) ($IsAlloc DatatypeTypeType (_module.__default.h _module._default.h$A |f#0@@6| |M#0|) (Tclass._module.LList (Tclass._module.LList _module._default.h$A)) $Heap@@1))
 :pattern ( ($IsAlloc DatatypeTypeType (_module.__default.h _module._default.h$A |f#0@@6| |M#0|) (Tclass._module.LList (Tclass._module.LList _module._default.h$A)) $Heap@@1))
))))
(assert (forall ((v T@U) (t T@U) (h T@U) (T@@1 T@T) ) (! (= ($IsAllocBox ($Box T@@1 v) t h) ($IsAlloc T@@1 v t h))
 :pattern ( ($IsAllocBox ($Box T@@1 v) t h))
)))
(assert (forall ((_module.FunctionHandle$T@@0 T@U) ) (!  (and (= (Tag (Tclass._module.FunctionHandle _module.FunctionHandle$T@@0)) Tagclass._module.FunctionHandle) (= (TagFamily (Tclass._module.FunctionHandle _module.FunctionHandle$T@@0)) tytagFamily$FunctionHandle))
 :pattern ( (Tclass._module.FunctionHandle _module.FunctionHandle$T@@0))
)))
(assert (forall ((_module.LList$T@@2 T@U) ) (!  (and (= (Tag (Tclass._module.LList _module.LList$T@@2)) Tagclass._module.LList) (= (TagFamily (Tclass._module.LList _module.LList$T@@2)) tytagFamily$LList))
 :pattern ( (Tclass._module.LList _module.LList$T@@2))
)))
(assert (forall ((o@@1 T@U) (p@@0 T@U) ) (!  (=> (and (|ORD#IsNat| p@@0) (<= (|ORD#Offset| p@@0) (|ORD#Offset| o@@1))) (and (= (|ORD#IsNat| (|ORD#Minus| o@@1 p@@0)) (|ORD#IsNat| o@@1)) (= (|ORD#Offset| (|ORD#Minus| o@@1 p@@0)) (- (|ORD#Offset| o@@1) (|ORD#Offset| p@@0)))))
 :pattern ( (|ORD#Minus| o@@1 p@@0))
)))
(assert (forall ((n@@0 Int) ) (!  (=> (<= 0 n@@0) (and (|ORD#IsNat| (|ORD#FromNat| n@@0)) (= (|ORD#Offset| (|ORD#FromNat| n@@0)) n@@0)))
 :pattern ( (|ORD#FromNat| n@@0))
)))
(assert (forall ((bx T@U) ) (!  (=> ($IsBox bx Tclass._System.nat) (and (= ($Box intType ($Unbox intType bx)) bx) ($Is intType ($Unbox intType bx) Tclass._System.nat)))
 :pattern ( ($IsBox bx Tclass._System.nat))
)))
(assert (forall ((_module.FunctionHandle$T@@1 T@U) (|a#10#0#0| T@U) ($h@@1 T@U) ) (!  (=> ($IsGoodHeap $h@@1) (= ($IsAlloc DatatypeTypeType (|#_module.FunctionHandle.FH| |a#10#0#0|) (Tclass._module.FunctionHandle _module.FunctionHandle$T@@1) $h@@1) ($IsAllocBox |a#10#0#0| _module.FunctionHandle$T@@1 $h@@1)))
 :pattern ( ($IsAlloc DatatypeTypeType (|#_module.FunctionHandle.FH| |a#10#0#0|) (Tclass._module.FunctionHandle _module.FunctionHandle$T@@1) $h@@1))
)))
(assert (forall ((|_module.LList$T#l@@3| T@U) (|_module.LList$T#r@@3| T@U) (ly@@3 T@U) (d0@@3 T@U) (d1@@3 T@U) ) (!  (=> (and ($Is DatatypeTypeType d0@@3 (Tclass._module.LList |_module.LList$T#l@@3|)) ($Is DatatypeTypeType d1@@3 (Tclass._module.LList |_module.LList$T#r@@3|))) (= (|$Eq#_module.LList| |_module.LList$T#l@@3| |_module.LList$T#r@@3| ($LS ly@@3) d0@@3 d1@@3)  (or (and (_module.LList.Nil_q d0@@3) (_module.LList.Nil_q d1@@3)) (and (and (_module.LList.Cons_q d0@@3) (_module.LList.Cons_q d1@@3)) (=> (and (_module.LList.Cons_q d0@@3) (_module.LList.Cons_q d1@@3)) (and (= (_module.LList.head d0@@3) (_module.LList.head d1@@3)) (|$Eq#_module.LList| |_module.LList$T#l@@3| |_module.LList$T#r@@3| ly@@3 (_module.LList.tail d0@@3) (_module.LList.tail d1@@3))))))))
 :pattern ( (|$Eq#_module.LList| |_module.LList$T#l@@3| |_module.LList$T#r@@3| ($LS ly@@3) d0@@3 d1@@3))
)))
(assert (forall ((d@@7 T@U) ) (!  (=> (|$IsA#_module.LList| d@@7) (or (_module.LList.Nil_q d@@7) (_module.LList.Cons_q d@@7)))
 :pattern ( (|$IsA#_module.LList| d@@7))
)))
(assert (forall ((o@@2 T@U) (p@@1 T@U) ) (!  (or (or (|ORD#Less| o@@2 p@@1) (= o@@2 p@@1)) (|ORD#Less| p@@1 o@@2))
 :pattern ( (|ORD#Less| o@@2 p@@1) (|ORD#Less| p@@1 o@@2))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@2 T@U) (_module._default.Iterates$A T@U) ($ly@@6 T@U) (|f#0@@7| T@U) (|M#0@@0| T@U) ) (!  (=> (and (or (|_module.__default.Iterates#canCall| _module._default.Iterates$A |f#0@@7| |M#0@@0|) (and (< 2 $FunctionContextHeight) (and (and ($Is DatatypeTypeType |f#0@@7| (Tclass._module.FunctionHandle (Tclass._module.LList _module._default.Iterates$A))) ($IsAlloc DatatypeTypeType |f#0@@7| (Tclass._module.FunctionHandle (Tclass._module.LList _module._default.Iterates$A)) $Heap@@2)) (and ($Is DatatypeTypeType |M#0@@0| (Tclass._module.LList _module._default.Iterates$A)) ($IsAlloc DatatypeTypeType |M#0@@0| (Tclass._module.LList _module._default.Iterates$A) $Heap@@2))))) ($IsGoodHeap $Heap@@2)) ($IsAlloc DatatypeTypeType (_module.__default.Iterates _module._default.Iterates$A $ly@@6 |f#0@@7| |M#0@@0|) (Tclass._module.LList (Tclass._module.LList _module._default.Iterates$A)) $Heap@@2))
 :pattern ( ($IsAlloc DatatypeTypeType (_module.__default.Iterates _module._default.Iterates$A $ly@@6 |f#0@@7| |M#0@@0|) (Tclass._module.LList (Tclass._module.LList _module._default.Iterates$A)) $Heap@@2))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((_module._default.Apply$T T@U) (|f#0@@8| T@U) (|argument#0| T@U) ) (!  (=> (or (|_module.__default.Apply#canCall| _module._default.Apply$T |f#0@@8| |argument#0|) (and (< 1 $FunctionContextHeight) (and ($Is DatatypeTypeType |f#0@@8| (Tclass._module.FunctionHandle _module._default.Apply$T)) ($IsBox |argument#0| _module._default.Apply$T)))) ($IsBox (_module.__default.Apply _module._default.Apply$T |f#0@@8| |argument#0|) _module._default.Apply$T))
 :pattern ( (_module.__default.Apply _module._default.Apply$T |f#0@@8| |argument#0|))
))))
(assert (forall ((_module.LList$T@@3 T@U) (d@@8 T@U) ) (!  (=> ($Is DatatypeTypeType d@@8 (Tclass._module.LList _module.LList$T@@3)) (or (_module.LList.Nil_q d@@8) (_module.LList.Cons_q d@@8)))
 :pattern ( (_module.LList.Cons_q d@@8) ($Is DatatypeTypeType d@@8 (Tclass._module.LList _module.LList$T@@3)))
 :pattern ( (_module.LList.Nil_q d@@8) ($Is DatatypeTypeType d@@8 (Tclass._module.LList _module.LList$T@@3)))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@3 T@U) (_module._default.Apply$T@@0 T@U) (|f#0@@9| T@U) (|argument#0@@0| T@U) ) (!  (=> (and (or (|_module.__default.Apply#canCall| _module._default.Apply$T@@0 |f#0@@9| |argument#0@@0|) (and (< 1 $FunctionContextHeight) (and (and ($Is DatatypeTypeType |f#0@@9| (Tclass._module.FunctionHandle _module._default.Apply$T@@0)) ($IsAlloc DatatypeTypeType |f#0@@9| (Tclass._module.FunctionHandle _module._default.Apply$T@@0) $Heap@@3)) (and ($IsBox |argument#0@@0| _module._default.Apply$T@@0) ($IsAllocBox |argument#0@@0| _module._default.Apply$T@@0 $Heap@@3))))) ($IsGoodHeap $Heap@@3)) ($IsAllocBox (_module.__default.Apply _module._default.Apply$T@@0 |f#0@@9| |argument#0@@0|) _module._default.Apply$T@@0 $Heap@@3))
 :pattern ( ($IsAllocBox (_module.__default.Apply _module._default.Apply$T@@0 |f#0@@9| |argument#0@@0|) _module._default.Apply$T@@0 $Heap@@3))
))))
(assert (forall ((v@@0 T@U) (t@@0 T@U) (T@@2 T@T) ) (! (= ($IsBox ($Box T@@2 v@@0) t@@0) ($Is T@@2 v@@0 t@@0))
 :pattern ( ($IsBox ($Box T@@2 v@@0) t@@0))
)))
(assert (forall ((o@@3 T@U) ) (! (<= 0 (|ORD#Offset| o@@3))
 :pattern ( (|ORD#Offset| o@@3))
)))
(assert (forall ((|a#3#0#0| T@U) (|a#3#1#0| T@U) ) (! (= (DatatypeCtorId (|#_module.LList.Cons| |a#3#0#0| |a#3#1#0|)) |##_module.LList.Cons|)
 :pattern ( (|#_module.LList.Cons| |a#3#0#0| |a#3#1#0|))
)))
(assert (forall ((|a#6#0#0| T@U) (|a#6#1#0| T@U) ) (! (= (_module.LList.head (|#_module.LList.Cons| |a#6#0#0| |a#6#1#0|)) |a#6#0#0|)
 :pattern ( (|#_module.LList.Cons| |a#6#0#0| |a#6#1#0|))
)))
(assert (forall ((|a#7#0#0| T@U) (|a#7#1#0| T@U) ) (! (= (_module.LList.tail (|#_module.LList.Cons| |a#7#0#0| |a#7#1#0|)) |a#7#1#0|)
 :pattern ( (|#_module.LList.Cons| |a#7#0#0| |a#7#1#0|))
)))
(assert (= (Ctor BoxType) 4))
(assert  (=> (<= 2 $FunctionContextHeight) (forall ((_module._default.Iter$A@@2 T@U) ($ly@@7 T@U) (|n#0@@6| Int) (|f#0@@10| T@U) (|arg#0@@6| T@U) ) (!  (=> (or (|_module.__default.Iter#canCall| _module._default.Iter$A@@2 (LitInt |n#0@@6|) (Lit DatatypeTypeType |f#0@@10|) (Lit BoxType |arg#0@@6|)) (and (< 2 $FunctionContextHeight) (and (and (<= (LitInt 0) |n#0@@6|) ($Is DatatypeTypeType |f#0@@10| (Tclass._module.FunctionHandle _module._default.Iter$A@@2))) ($IsBox |arg#0@@6| _module._default.Iter$A@@2)))) (and (=> (or (not (= (LitInt |n#0@@6|) (LitInt 0))) (not true)) (and (|_module.__default.Iter#canCall| _module._default.Iter$A@@2 (LitInt (- |n#0@@6| 1)) (Lit DatatypeTypeType |f#0@@10|) (Lit BoxType |arg#0@@6|)) (|_module.__default.Apply#canCall| _module._default.Iter$A@@2 (Lit DatatypeTypeType |f#0@@10|) (Lit BoxType (_module.__default.Iter _module._default.Iter$A@@2 ($LS $ly@@7) (LitInt (- |n#0@@6| 1)) (Lit DatatypeTypeType |f#0@@10|) (Lit BoxType |arg#0@@6|)))))) (= (_module.__default.Iter _module._default.Iter$A@@2 ($LS $ly@@7) (LitInt |n#0@@6|) (Lit DatatypeTypeType |f#0@@10|) (Lit BoxType |arg#0@@6|)) (ite (= (LitInt |n#0@@6|) (LitInt 0)) |arg#0@@6| (_module.__default.Apply _module._default.Iter$A@@2 (Lit DatatypeTypeType |f#0@@10|) (Lit BoxType (_module.__default.Iter _module._default.Iter$A@@2 ($LS $ly@@7) (LitInt (- |n#0@@6| 1)) (Lit DatatypeTypeType |f#0@@10|) (Lit BoxType |arg#0@@6|))))))))
 :weight 3
 :pattern ( (_module.__default.Iter _module._default.Iter$A@@2 ($LS $ly@@7) (LitInt |n#0@@6|) (Lit DatatypeTypeType |f#0@@10|) (Lit BoxType |arg#0@@6|)))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall ((_module._default.Lmap$_T0 T@U) ($ly@@8 T@U) (|f#0@@11| T@U) (|a#0| T@U) ) (!  (=> (or (|_module.__default.Lmap#canCall| _module._default.Lmap$_T0 |f#0@@11| |a#0|) (and (< 2 $FunctionContextHeight) (and ($Is DatatypeTypeType |f#0@@11| (Tclass._module.FunctionHandle _module._default.Lmap$_T0)) ($Is DatatypeTypeType |a#0| (Tclass._module.LList _module._default.Lmap$_T0))))) ($Is DatatypeTypeType (_module.__default.Lmap _module._default.Lmap$_T0 $ly@@8 |f#0@@11| |a#0|) (Tclass._module.LList _module._default.Lmap$_T0)))
 :pattern ( (_module.__default.Lmap _module._default.Lmap$_T0 $ly@@8 |f#0@@11| |a#0|))
))))
(assert  (=> (<= 3 $FunctionContextHeight) (forall ((_module._default.LmapIter$_T0@@3 T@U) ($ly@@9 T@U) (|n#0@@7| Int) (|f#0@@12| T@U) (|arg#0@@7| T@U) ) (!  (=> (or (|_module.__default.LmapIter#canCall| _module._default.LmapIter$_T0@@3 (LitInt |n#0@@7|) (Lit DatatypeTypeType |f#0@@12|) |arg#0@@7|) (and (< 3 $FunctionContextHeight) (and (and (<= (LitInt 0) |n#0@@7|) ($Is DatatypeTypeType |f#0@@12| (Tclass._module.FunctionHandle _module._default.LmapIter$_T0@@3))) ($Is DatatypeTypeType |arg#0@@7| (Tclass._module.LList _module._default.LmapIter$_T0@@3))))) (and (=> (or (not (= (LitInt |n#0@@7|) (LitInt 0))) (not true)) (and (|_module.__default.LmapIter#canCall| _module._default.LmapIter$_T0@@3 (LitInt (- |n#0@@7| 1)) (Lit DatatypeTypeType |f#0@@12|) |arg#0@@7|) (|_module.__default.Lmap#canCall| _module._default.LmapIter$_T0@@3 (Lit DatatypeTypeType |f#0@@12|) (_module.__default.LmapIter _module._default.LmapIter$_T0@@3 ($LS $ly@@9) (LitInt (- |n#0@@7| 1)) (Lit DatatypeTypeType |f#0@@12|) |arg#0@@7|)))) (= (_module.__default.LmapIter _module._default.LmapIter$_T0@@3 ($LS $ly@@9) (LitInt |n#0@@7|) (Lit DatatypeTypeType |f#0@@12|) |arg#0@@7|) (ite (= (LitInt |n#0@@7|) (LitInt 0)) |arg#0@@7| (_module.__default.Lmap _module._default.LmapIter$_T0@@3 ($LS $LZ) (Lit DatatypeTypeType |f#0@@12|) (_module.__default.LmapIter _module._default.LmapIter$_T0@@3 ($LS $ly@@9) (LitInt (- |n#0@@7| 1)) (Lit DatatypeTypeType |f#0@@12|) |arg#0@@7|))))))
 :weight 3
 :pattern ( (_module.__default.LmapIter _module._default.LmapIter$_T0@@3 ($LS $ly@@9) (LitInt |n#0@@7|) (Lit DatatypeTypeType |f#0@@12|) |arg#0@@7|))
))))
(assert (forall ((_module.FunctionHandle$T@@2 T@U) ) (! (= (Tclass._module.FunctionHandle_0 (Tclass._module.FunctionHandle _module.FunctionHandle$T@@2)) _module.FunctionHandle$T@@2)
 :pattern ( (Tclass._module.FunctionHandle _module.FunctionHandle$T@@2))
)))
(assert (forall ((_module.LList$T@@4 T@U) ) (! (= (Tclass._module.LList_0 (Tclass._module.LList _module.LList$T@@4)) _module.LList$T@@4)
 :pattern ( (Tclass._module.LList _module.LList$T@@4))
)))
(assert (forall ((|a#8#0#0| T@U) ) (! (= (DatatypeCtorId (|#_module.FunctionHandle.FH| |a#8#0#0|)) |##_module.FunctionHandle.FH|)
 :pattern ( (|#_module.FunctionHandle.FH| |a#8#0#0|))
)))
(assert (forall ((|a#12#0#0| T@U) ) (! (= (_module.FunctionHandle._h0 (|#_module.FunctionHandle.FH| |a#12#0#0|)) |a#12#0#0|)
 :pattern ( (|#_module.FunctionHandle.FH| |a#12#0#0|))
)))
(assert (forall ((x@@5 T@U) (T@@3 T@T) ) (! (= ($Unbox T@@3 ($Box T@@3 x@@5)) x@@5)
 :pattern ( ($Box T@@3 x@@5))
)))
(assert (forall ((o@@4 T@U) (p@@2 T@U) ) (!  (and (and (and (=> (|ORD#Less| o@@4 p@@2) (or (not (= o@@4 p@@2)) (not true))) (=> (and (|ORD#IsNat| o@@4) (not (|ORD#IsNat| p@@2))) (|ORD#Less| o@@4 p@@2))) (=> (and (|ORD#IsNat| o@@4) (|ORD#IsNat| p@@2)) (= (|ORD#Less| o@@4 p@@2) (< (|ORD#Offset| o@@4) (|ORD#Offset| p@@2))))) (=> (and (|ORD#Less| o@@4 p@@2) (|ORD#IsNat| p@@2)) (|ORD#IsNat| o@@4)))
 :pattern ( (|ORD#Less| o@@4 p@@2))
)))
(assert (forall ((_module.FunctionHandle$T@@3 T@U) (|a#10#0#0@@0| T@U) ) (! (= ($Is DatatypeTypeType (|#_module.FunctionHandle.FH| |a#10#0#0@@0|) (Tclass._module.FunctionHandle _module.FunctionHandle$T@@3)) ($IsBox |a#10#0#0@@0| _module.FunctionHandle$T@@3))
 :pattern ( ($Is DatatypeTypeType (|#_module.FunctionHandle.FH| |a#10#0#0@@0|) (Tclass._module.FunctionHandle _module.FunctionHandle$T@@3)))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall ((_module._default.Lmap$_T0@@0 T@U) ($ly@@10 T@U) (|f#0@@13| T@U) (|a#0@@0| T@U) ) (!  (=> (or (|_module.__default.Lmap#canCall| _module._default.Lmap$_T0@@0 |f#0@@13| |a#0@@0|) (and (< 2 $FunctionContextHeight) (and ($Is DatatypeTypeType |f#0@@13| (Tclass._module.FunctionHandle _module._default.Lmap$_T0@@0)) ($Is DatatypeTypeType |a#0@@0| (Tclass._module.LList _module._default.Lmap$_T0@@0))))) (and (=> (not (_module.LList.Nil_q |a#0@@0|)) (let ((|xs#1| (_module.LList.tail |a#0@@0|)))
(let ((|x#1| (_module.LList.head |a#0@@0|)))
 (and (|_module.__default.Apply#canCall| _module._default.Lmap$_T0@@0 |f#0@@13| |x#1|) (|_module.__default.Lmap#canCall| _module._default.Lmap$_T0@@0 |f#0@@13| |xs#1|))))) (= (_module.__default.Lmap _module._default.Lmap$_T0@@0 ($LS $ly@@10) |f#0@@13| |a#0@@0|) (ite (_module.LList.Nil_q |a#0@@0|) |#_module.LList.Nil| (let ((|xs#0| (_module.LList.tail |a#0@@0|)))
(let ((|x#0@@1| (_module.LList.head |a#0@@0|)))
(|#_module.LList.Cons| (_module.__default.Apply _module._default.Lmap$_T0@@0 |f#0@@13| |x#0@@1|) (_module.__default.Lmap _module._default.Lmap$_T0@@0 $ly@@10 |f#0@@13| |xs#0|))))))))
 :pattern ( (_module.__default.Lmap _module._default.Lmap$_T0@@0 ($LS $ly@@10) |f#0@@13| |a#0@@0|))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall ((_module._default.Iter$A@@3 T@U) ($ly@@11 T@U) (|n#0@@8| Int) (|f#0@@14| T@U) (|arg#0@@8| T@U) ) (!  (=> (or (|_module.__default.Iter#canCall| _module._default.Iter$A@@3 |n#0@@8| |f#0@@14| |arg#0@@8|) (and (< 2 $FunctionContextHeight) (and (and (<= (LitInt 0) |n#0@@8|) ($Is DatatypeTypeType |f#0@@14| (Tclass._module.FunctionHandle _module._default.Iter$A@@3))) ($IsBox |arg#0@@8| _module._default.Iter$A@@3)))) (and (=> (or (not (= |n#0@@8| (LitInt 0))) (not true)) (and (|_module.__default.Iter#canCall| _module._default.Iter$A@@3 (- |n#0@@8| 1) |f#0@@14| |arg#0@@8|) (|_module.__default.Apply#canCall| _module._default.Iter$A@@3 |f#0@@14| (_module.__default.Iter _module._default.Iter$A@@3 $ly@@11 (- |n#0@@8| 1) |f#0@@14| |arg#0@@8|)))) (= (_module.__default.Iter _module._default.Iter$A@@3 ($LS $ly@@11) |n#0@@8| |f#0@@14| |arg#0@@8|) (ite (= |n#0@@8| (LitInt 0)) |arg#0@@8| (_module.__default.Apply _module._default.Iter$A@@3 |f#0@@14| (_module.__default.Iter _module._default.Iter$A@@3 $ly@@11 (- |n#0@@8| 1) |f#0@@14| |arg#0@@8|))))))
 :pattern ( (_module.__default.Iter _module._default.Iter$A@@3 ($LS $ly@@11) |n#0@@8| |f#0@@14| |arg#0@@8|))
))))
(assert (forall ((|_module.LList$T#l@@4| T@U) (|_module.LList$T#r@@4| T@U) (ly@@4 T@U) (d0@@4 T@U) (d1@@4 T@U) ) (! (= (|$Eq#_module.LList| |_module.LList$T#l@@4| |_module.LList$T#r@@4| ($LS ly@@4) d0@@4 d1@@4) (forall ((k@@2 T@U) ) (! (|$PrefixEq#_module.LList| |_module.LList$T#l@@4| |_module.LList$T#r@@4| k@@2 ($LS ly@@4) d0@@4 d1@@4)
 :pattern ( (|$PrefixEq#_module.LList| |_module.LList$T#l@@4| |_module.LList$T#r@@4| k@@2 ($LS ly@@4) d0@@4 d1@@4))
)))
 :pattern ( (|$Eq#_module.LList| |_module.LList$T#l@@4| |_module.LList$T#r@@4| ($LS ly@@4) d0@@4 d1@@4))
)))
(assert (forall ((|a#13#0#0| T@U) ) (! (< (BoxRank |a#13#0#0|) (DtRank (|#_module.FunctionHandle.FH| |a#13#0#0|)))
 :pattern ( (|#_module.FunctionHandle.FH| |a#13#0#0|))
)))
(assert (forall ((d@@9 T@U) (_module.LList$T@@5 T@U) ($h@@2 T@U) ) (!  (=> (and ($IsGoodHeap $h@@2) (and (_module.LList.Cons_q d@@9) ($IsAlloc DatatypeTypeType d@@9 (Tclass._module.LList _module.LList$T@@5) $h@@2))) ($IsAllocBox (_module.LList.head d@@9) _module.LList$T@@5 $h@@2))
 :pattern ( ($IsAllocBox (_module.LList.head d@@9) _module.LList$T@@5 $h@@2))
)))
(assert (forall ((d@@10 T@U) (_module.FunctionHandle$T@@4 T@U) ($h@@3 T@U) ) (!  (=> (and ($IsGoodHeap $h@@3) (and (_module.FunctionHandle.FH_q d@@10) ($IsAlloc DatatypeTypeType d@@10 (Tclass._module.FunctionHandle _module.FunctionHandle$T@@4) $h@@3))) ($IsAllocBox (_module.FunctionHandle._h0 d@@10) _module.FunctionHandle$T@@4 $h@@3))
 :pattern ( ($IsAllocBox (_module.FunctionHandle._h0 d@@10) _module.FunctionHandle$T@@4 $h@@3))
)))
(assert  (and (and (and (and (and (and (and (and (forall ((t0 T@T) (t1 T@T) (t2 T@T) (val T@U) (m@@0 T@U) (x0 T@U) (x1 T@U) ) (! (= (MapType0Select t0 t1 t2 (MapType0Store t0 t1 t2 m@@0 x0 x1 val) x0 x1) val)
 :weight 0
)) (and (forall ((u0 T@T) (u1 T@T) (u2 T@T) (val@@0 T@U) (m@@1 T@U) (x0@@0 T@U) (x1@@0 T@U) (y0 T@U) (y1 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select u0 u1 u2 (MapType0Store u0 u1 u2 m@@1 x0@@0 x1@@0 val@@0) y0 y1) (MapType0Select u0 u1 u2 m@@1 y0 y1)))
 :weight 0
)) (forall ((u0@@0 T@T) (u1@@0 T@T) (u2@@0 T@T) (val@@1 T@U) (m@@2 T@U) (x0@@1 T@U) (x1@@1 T@U) (y0@@0 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType0Select u0@@0 u1@@0 u2@@0 (MapType0Store u0@@0 u1@@0 u2@@0 m@@2 x0@@1 x1@@1 val@@1) y0@@0 y1@@0) (MapType0Select u0@@0 u1@@0 u2@@0 m@@2 y0@@0 y1@@0)))
 :weight 0
)))) (= (Ctor refType) 5)) (= (Ctor FieldType) 6)) (forall ((t0@@0 T@T) (t1@@0 T@T) (val@@2 T@U) (m@@3 T@U) (x0@@2 T@U) ) (! (= (MapType1Select t0@@0 t1@@0 (MapType1Store t0@@0 t1@@0 m@@3 x0@@2 val@@2) x0@@2) val@@2)
 :weight 0
))) (forall ((u0@@1 T@T) (u1@@1 T@T) (val@@3 T@U) (m@@4 T@U) (x0@@3 T@U) (y0@@1 T@U) ) (!  (or (= x0@@3 y0@@1) (= (MapType1Select u0@@1 u1@@1 (MapType1Store u0@@1 u1@@1 m@@4 x0@@3 val@@3) y0@@1) (MapType1Select u0@@1 u1@@1 m@@4 y0@@1)))
 :weight 0
))) (forall ((arg0@@2 T@T) (arg1 T@T) ) (= (Ctor (MapType1Type arg0@@2 arg1)) 7))) (forall ((arg0@@3 T@T) (arg1@@0 T@T) ) (! (= (MapType1TypeInv0 (MapType1Type arg0@@3 arg1@@0)) arg0@@3)
 :pattern ( (MapType1Type arg0@@3 arg1@@0))
))) (forall ((arg0@@4 T@T) (arg1@@1 T@T) ) (! (= (MapType1TypeInv1 (MapType1Type arg0@@4 arg1@@1)) arg1@@1)
 :pattern ( (MapType1Type arg0@@4 arg1@@1))
))))
(assert (forall ((|l#0| T@U) (|l#1| T@U) (|l#2| T@U) (|l#3| Bool) ($o T@U) ($f T@U) ) (! (= (U_2_bool (MapType0Select refType FieldType boolType (|lambda#0| |l#0| |l#1| |l#2| |l#3|) $o $f))  (=> (and (or (not (= $o |l#0|)) (not true)) (U_2_bool ($Unbox boolType (MapType1Select FieldType BoxType (MapType1Select refType (MapType1Type FieldType BoxType) |l#1| $o) |l#2|)))) |l#3|))
 :pattern ( (MapType0Select refType FieldType boolType (|lambda#0| |l#0| |l#1| |l#2| |l#3|) $o $f))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@4 T@U) (_module._default.Lmap$_T0@@1 T@U) ($ly@@12 T@U) (|f#0@@15| T@U) (|a#0@@1| T@U) ) (!  (=> (and (or (|_module.__default.Lmap#canCall| _module._default.Lmap$_T0@@1 |f#0@@15| |a#0@@1|) (and (< 2 $FunctionContextHeight) (and (and ($Is DatatypeTypeType |f#0@@15| (Tclass._module.FunctionHandle _module._default.Lmap$_T0@@1)) ($IsAlloc DatatypeTypeType |f#0@@15| (Tclass._module.FunctionHandle _module._default.Lmap$_T0@@1) $Heap@@4)) (and ($Is DatatypeTypeType |a#0@@1| (Tclass._module.LList _module._default.Lmap$_T0@@1)) ($IsAlloc DatatypeTypeType |a#0@@1| (Tclass._module.LList _module._default.Lmap$_T0@@1) $Heap@@4))))) ($IsGoodHeap $Heap@@4)) ($IsAlloc DatatypeTypeType (_module.__default.Lmap _module._default.Lmap$_T0@@1 $ly@@12 |f#0@@15| |a#0@@1|) (Tclass._module.LList _module._default.Lmap$_T0@@1) $Heap@@4))
 :pattern ( ($IsAlloc DatatypeTypeType (_module.__default.Lmap _module._default.Lmap$_T0@@1 $ly@@12 |f#0@@15| |a#0@@1|) (Tclass._module.LList _module._default.Lmap$_T0@@1) $Heap@@4))
))))
(assert (forall ((d@@11 T@U) ) (! (= (BoxRank ($Box DatatypeTypeType d@@11)) (DtRank d@@11))
 :pattern ( (BoxRank ($Box DatatypeTypeType d@@11)))
)))
(assert (forall ((_module._default.Lmap$_T0@@2 T@U) ($ly@@13 T@U) (|f#0@@16| T@U) (|a#0@@2| T@U) ) (! (= (_module.__default.Lmap _module._default.Lmap$_T0@@2 ($LS $ly@@13) |f#0@@16| |a#0@@2|) (_module.__default.Lmap _module._default.Lmap$_T0@@2 $ly@@13 |f#0@@16| |a#0@@2|))
 :pattern ( (_module.__default.Lmap _module._default.Lmap$_T0@@2 ($LS $ly@@13) |f#0@@16| |a#0@@2|))
)))
(assert (forall ((_module._default.Iterates$A@@0 T@U) ($ly@@14 T@U) (|f#0@@17| T@U) (|M#0@@1| T@U) ) (! (= (_module.__default.Iterates _module._default.Iterates$A@@0 ($LS $ly@@14) |f#0@@17| |M#0@@1|) (_module.__default.Iterates _module._default.Iterates$A@@0 $ly@@14 |f#0@@17| |M#0@@1|))
 :pattern ( (_module.__default.Iterates _module._default.Iterates$A@@0 ($LS $ly@@14) |f#0@@17| |M#0@@1|))
)))
(assert (forall ((_module.FunctionHandle$T@@5 T@U) (bx@@0 T@U) ) (!  (=> ($IsBox bx@@0 (Tclass._module.FunctionHandle _module.FunctionHandle$T@@5)) (and (= ($Box DatatypeTypeType ($Unbox DatatypeTypeType bx@@0)) bx@@0) ($Is DatatypeTypeType ($Unbox DatatypeTypeType bx@@0) (Tclass._module.FunctionHandle _module.FunctionHandle$T@@5))))
 :pattern ( ($IsBox bx@@0 (Tclass._module.FunctionHandle _module.FunctionHandle$T@@5)))
)))
(assert (forall ((_module.LList$T@@6 T@U) (bx@@1 T@U) ) (!  (=> ($IsBox bx@@1 (Tclass._module.LList _module.LList$T@@6)) (and (= ($Box DatatypeTypeType ($Unbox DatatypeTypeType bx@@1)) bx@@1) ($Is DatatypeTypeType ($Unbox DatatypeTypeType bx@@1) (Tclass._module.LList _module.LList$T@@6))))
 :pattern ( ($IsBox bx@@1 (Tclass._module.LList _module.LList$T@@6)))
)))
(assert (forall ((o@@5 T@U) ) (!  (=> (|ORD#IsNat| o@@5) (= o@@5 (|ORD#FromNat| (|ORD#Offset| o@@5))))
 :pattern ( (|ORD#Offset| o@@5))
 :pattern ( (|ORD#IsNat| o@@5))
)))
(assert (forall ((d@@12 T@U) (_module.LList$T@@7 T@U) ($h@@4 T@U) ) (!  (=> (and ($IsGoodHeap $h@@4) (and (_module.LList.Cons_q d@@12) ($IsAlloc DatatypeTypeType d@@12 (Tclass._module.LList _module.LList$T@@7) $h@@4))) ($IsAlloc DatatypeTypeType (_module.LList.tail d@@12) (Tclass._module.LList _module.LList$T@@7) $h@@4))
 :pattern ( ($IsAlloc DatatypeTypeType (_module.LList.tail d@@12) (Tclass._module.LList _module.LList$T@@7) $h@@4))
)))
(assert (= (Tag Tclass._System.nat) Tagclass._System.nat))
(assert (= (TagFamily Tclass._System.nat) tytagFamily$nat))
(assert  (=> (<= 2 $FunctionContextHeight) (forall ((_module._default.Iterates$A@@1 T@U) ($ly@@15 T@U) (|f#0@@18| T@U) (|M#0@@2| T@U) ) (!  (=> (or (|_module.__default.Iterates#canCall| _module._default.Iterates$A@@1 |f#0@@18| |M#0@@2|) (and (< 2 $FunctionContextHeight) (and ($Is DatatypeTypeType |f#0@@18| (Tclass._module.FunctionHandle (Tclass._module.LList _module._default.Iterates$A@@1))) ($Is DatatypeTypeType |M#0@@2| (Tclass._module.LList _module._default.Iterates$A@@1))))) ($Is DatatypeTypeType (_module.__default.Iterates _module._default.Iterates$A@@1 $ly@@15 |f#0@@18| |M#0@@2|) (Tclass._module.LList (Tclass._module.LList _module._default.Iterates$A@@1))))
 :pattern ( (_module.__default.Iterates _module._default.Iterates$A@@1 $ly@@15 |f#0@@18| |M#0@@2|))
))))
(assert (forall ((o@@6 T@U) (p@@3 T@U) ) (!  (=> (and (|ORD#IsNat| p@@3) (<= (|ORD#Offset| p@@3) (|ORD#Offset| o@@6))) (or (and (= p@@3 (|ORD#FromNat| 0)) (= (|ORD#Minus| o@@6 p@@3) o@@6)) (and (or (not (= p@@3 (|ORD#FromNat| 0))) (not true)) (|ORD#Less| (|ORD#Minus| o@@6 p@@3) o@@6))))
 :pattern ( (|ORD#Minus| o@@6 p@@3))
)))
(assert (forall ((|_module.LList$T#l@@5| T@U) (|_module.LList$T#r@@5| T@U) (k@@3 T@U) (ly@@5 T@U) (d0@@5 T@U) (d1@@5 T@U) (m@@5 T@U) ) (!  (=> (and (|ORD#Less| k@@3 m@@5) (|$PrefixEq#_module.LList| |_module.LList$T#l@@5| |_module.LList$T#r@@5| m@@5 ($LS ly@@5) d0@@5 d1@@5)) (|$PrefixEq#_module.LList| |_module.LList$T#l@@5| |_module.LList$T#r@@5| k@@3 ($LS ly@@5) d0@@5 d1@@5))
 :pattern ( (|$PrefixEq#_module.LList| |_module.LList$T#l@@5| |_module.LList$T#r@@5| k@@3 ($LS ly@@5) d0@@5 d1@@5) (|$PrefixEq#_module.LList| |_module.LList$T#l@@5| |_module.LList$T#r@@5| m@@5 ($LS ly@@5) d0@@5 d1@@5))
)))
(assert (forall ((|_module.LList$T#l@@6| T@U) (|_module.LList$T#r@@6| T@U) (ly@@6 T@U) (d0@@6 T@U) (d1@@6 T@U) ) (! (= (|$Eq#_module.LList| |_module.LList$T#l@@6| |_module.LList$T#r@@6| ($LS ly@@6) d0@@6 d1@@6) (|$Eq#_module.LList| |_module.LList$T#l@@6| |_module.LList$T#r@@6| ly@@6 d0@@6 d1@@6))
 :pattern ( (|$Eq#_module.LList| |_module.LList$T#l@@6| |_module.LList$T#r@@6| ($LS ly@@6) d0@@6 d1@@6))
)))
(assert (forall ((_module._default.Iter$A@@4 T@U) ($ly@@16 T@U) (|n#0@@9| Int) (|f#0@@19| T@U) (|arg#0@@9| T@U) ) (! (= (_module.__default.Iter _module._default.Iter$A@@4 ($LS $ly@@16) |n#0@@9| |f#0@@19| |arg#0@@9|) (_module.__default.Iter _module._default.Iter$A@@4 $ly@@16 |n#0@@9| |f#0@@19| |arg#0@@9|))
 :pattern ( (_module.__default.Iter _module._default.Iter$A@@4 ($LS $ly@@16) |n#0@@9| |f#0@@19| |arg#0@@9|))
)))
(assert (forall ((_module._default.LmapIter$_T0@@4 T@U) ($ly@@17 T@U) (|n#0@@10| Int) (|f#0@@20| T@U) (|arg#0@@10| T@U) ) (! (= (_module.__default.LmapIter _module._default.LmapIter$_T0@@4 ($LS $ly@@17) |n#0@@10| |f#0@@20| |arg#0@@10|) (_module.__default.LmapIter _module._default.LmapIter$_T0@@4 $ly@@17 |n#0@@10| |f#0@@20| |arg#0@@10|))
 :pattern ( (_module.__default.LmapIter _module._default.LmapIter$_T0@@4 ($LS $ly@@17) |n#0@@10| |f#0@@20| |arg#0@@10|))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall ((_module._default.h$A@@0 T@U) (|f#0@@21| T@U) (|M#0@@3| T@U) ) (!  (=> (or (|_module.__default.h#canCall| _module._default.h$A@@0 |f#0@@21| |M#0@@3|) (and (< 1 $FunctionContextHeight) (and ($Is DatatypeTypeType |f#0@@21| (Tclass._module.FunctionHandle (Tclass._module.LList _module._default.h$A@@0))) ($Is DatatypeTypeType |M#0@@3| (Tclass._module.LList _module._default.h$A@@0))))) ($Is DatatypeTypeType (_module.__default.h _module._default.h$A@@0 |f#0@@21| |M#0@@3|) (Tclass._module.LList (Tclass._module.LList _module._default.h$A@@0))))
 :pattern ( (_module.__default.h _module._default.h$A@@0 |f#0@@21| |M#0@@3|))
))))
(assert (forall ((x@@6 Int) ) (! (= ($Box intType (int_2_U (LitInt x@@6))) (Lit BoxType ($Box intType (int_2_U x@@6))))
 :pattern ( ($Box intType (int_2_U (LitInt x@@6))))
)))
(assert (forall ((|a#11#0#0| T@U) ) (! (= (|#_module.FunctionHandle.FH| (Lit BoxType |a#11#0#0|)) (Lit DatatypeTypeType (|#_module.FunctionHandle.FH| |a#11#0#0|)))
 :pattern ( (|#_module.FunctionHandle.FH| (Lit BoxType |a#11#0#0|)))
)))
(assert (forall ((x@@7 T@U) (T@@4 T@T) ) (! (= ($Box T@@4 (Lit T@@4 x@@7)) (Lit BoxType ($Box T@@4 x@@7)))
 :pattern ( ($Box T@@4 (Lit T@@4 x@@7)))
)))
(assert (forall ((|_module.LList$T#l@@7| T@U) (|_module.LList$T#r@@7| T@U) (ly@@7 T@U) (d0@@7 T@U) (d1@@7 T@U) ) (!  (=> (forall ((k@@4 Int) ) (!  (=> (<= 0 k@@4) (|$PrefixEq#_module.LList| |_module.LList$T#l@@7| |_module.LList$T#r@@7| (|ORD#FromNat| k@@4) ($LS ly@@7) d0@@7 d1@@7))
 :pattern ( (|$PrefixEq#_module.LList| |_module.LList$T#l@@7| |_module.LList$T#r@@7| (|ORD#FromNat| k@@4) ($LS ly@@7) d0@@7 d1@@7))
)) (|$Eq#_module.LList| |_module.LList$T#l@@7| |_module.LList$T#r@@7| ($LS ly@@7) d0@@7 d1@@7))
 :pattern ( (|$Eq#_module.LList| |_module.LList$T#l@@7| |_module.LList$T#r@@7| ($LS ly@@7) d0@@7 d1@@7))
)))
(assert (forall ((_module.LList$T@@8 T@U) (|a#5#0#0@@0| T@U) (|a#5#1#0@@0| T@U) ($h@@5 T@U) ) (!  (=> ($IsGoodHeap $h@@5) (= ($IsAlloc DatatypeTypeType (|#_module.LList.Cons| |a#5#0#0@@0| |a#5#1#0@@0|) (Tclass._module.LList _module.LList$T@@8) $h@@5)  (and ($IsAllocBox |a#5#0#0@@0| _module.LList$T@@8 $h@@5) ($IsAlloc DatatypeTypeType |a#5#1#0@@0| (Tclass._module.LList _module.LList$T@@8) $h@@5))))
 :pattern ( ($IsAlloc DatatypeTypeType (|#_module.LList.Cons| |a#5#0#0@@0| |a#5#1#0@@0|) (Tclass._module.LList _module.LList$T@@8) $h@@5))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall ((_module._default.Iterates$A@@2 T@U) ($ly@@18 T@U) (|f#0@@22| T@U) (|M#0@@4| T@U) ) (!  (=> (or (|_module.__default.Iterates#canCall| _module._default.Iterates$A@@2 |f#0@@22| |M#0@@4|) (and (< 2 $FunctionContextHeight) (and ($Is DatatypeTypeType |f#0@@22| (Tclass._module.FunctionHandle (Tclass._module.LList _module._default.Iterates$A@@2))) ($Is DatatypeTypeType |M#0@@4| (Tclass._module.LList _module._default.Iterates$A@@2))))) (and (and (|_module.__default.Apply#canCall| (Tclass._module.LList _module._default.Iterates$A@@2) |f#0@@22| ($Box DatatypeTypeType |M#0@@4|)) (|_module.__default.Iterates#canCall| _module._default.Iterates$A@@2 |f#0@@22| ($Unbox DatatypeTypeType (_module.__default.Apply (Tclass._module.LList _module._default.Iterates$A@@2) |f#0@@22| ($Box DatatypeTypeType |M#0@@4|))))) (= (_module.__default.Iterates _module._default.Iterates$A@@2 ($LS $ly@@18) |f#0@@22| |M#0@@4|) (|#_module.LList.Cons| ($Box DatatypeTypeType |M#0@@4|) (_module.__default.Iterates _module._default.Iterates$A@@2 $ly@@18 |f#0@@22| ($Unbox DatatypeTypeType (_module.__default.Apply (Tclass._module.LList _module._default.Iterates$A@@2) |f#0@@22| ($Box DatatypeTypeType |M#0@@4|))))))))
 :pattern ( (_module.__default.Iterates _module._default.Iterates$A@@2 ($LS $ly@@18) |f#0@@22| |M#0@@4|))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun |_module._default.BisimulationLemma#$A| () T@U)
(declare-fun |_k#0| () T@U)
(declare-fun |n#1| () Int)
(declare-fun |f#1| () T@U)
(declare-fun |u#1| () T@U)
(declare-fun $Heap@0 () T@U)
(declare-fun |##n#17@0| () Int)
(declare-fun |##arg#17@0| () T@U)
(declare-fun |##n#13@0| () Int)
(declare-fun |##arg#13@0| () T@U)
(declare-fun |##n#14@0| () Int)
(declare-fun |##arg#14@0| () T@U)
(declare-fun |##n#12@0| () Int)
(declare-fun |##arg#12@0| () T@U)
(declare-fun |##a#0@0| () T@U)
(declare-fun |##arg#2@0| () T@U)
(declare-fun $Heap@7 () T@U)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun |##arg#3@0| () T@U)
(declare-fun |##a#1@0| () T@U)
(declare-fun |##arg#5@0| () T@U)
(declare-fun |##a#2@0| () T@U)
(declare-fun |M##1@0| () T@U)
(declare-fun call0formal@_module._default.Lemma25$A@0 () T@U)
(declare-fun |call3formal@b#0@0| () T@U)
(declare-fun $Heap@6 () T@U)
(declare-fun |##a#3@0| () T@U)
(declare-fun |##arg#6@0| () T@U)
(declare-fun |##n#8@0| () Int)
(declare-fun |##arg#8@0| () T@U)
(declare-fun |x##0@0| () T@U)
(declare-fun call0formal@_module._default.Lemma26$A@0 () T@U)
(declare-fun $Heap@5 () T@U)
(declare-fun |##a#4@0| () T@U)
(declare-fun |##arg#10@0| () T@U)
(declare-fun |##a#5@0| () T@U)
(declare-fun |##arg#19@0| () T@U)
(declare-fun |x##1@0| () T@U)
(declare-fun call0formal@_module._default.Lemma26$A@0@@0 () T@U)
(declare-fun $Heap@4 () T@U)
(declare-fun |##n#21@0| () Int)
(declare-fun |##arg#21@0| () T@U)
(declare-fun |##a#6@0| () T@U)
(declare-fun |##arg#22@0| () T@U)
(declare-fun |##a#7@0| () T@U)
(declare-fun |M##2@0| () T@U)
(declare-fun call0formal@_module._default.Lemma25$A@0@@0 () T@U)
(declare-fun |call3formal@b#0@0@@0| () T@U)
(declare-fun $Heap@3 () T@U)
(declare-fun |##a#8@0| () T@U)
(declare-fun |##arg#24@0| () T@U)
(declare-fun |##arg#25@0| () T@U)
(declare-fun $Heap@2 () T@U)
(declare-fun |##a#9@0| () T@U)
(declare-fun |##arg#26@0| () T@U)
(declare-fun $Heap@1 () T@U)
(declare-fun $_ModifiesFrame@0 () T@U)
(declare-fun null () T@U)
(declare-fun $Heap@@5 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 38) (let ((anon22_Else_correct  (=> (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)) ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (=> (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0) (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)))) (and (=> (= (ControlFlow 0 31) (- 0 34)) ($Is intType (int_2_U (+ |n#1| 1)) Tclass._System.nat)) (=> ($Is intType (int_2_U (+ |n#1| 1)) Tclass._System.nat) (=> (= |##n#17@0| (+ |n#1| 1)) (=> (and ($IsAlloc intType (int_2_U |##n#17@0|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (=> (and (and (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0)) (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (= |##arg#17@0| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))) (and (and ($IsAlloc DatatypeTypeType |##arg#17@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (and (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))))) (and (=> (= (ControlFlow 0 31) (- 0 33)) (or (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |_k#0| ($LS ($LS $LZ)) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))) (=> (< 0 (|ORD#Offset| |_k#0|)) (=> (_module.LList.Nil_q (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (_module.LList.Nil_q (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))))))) (and (=> (= (ControlFlow 0 31) (- 0 32)) (or (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |_k#0| ($LS ($LS $LZ)) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))) (=> (< 0 (|ORD#Offset| |_k#0|)) (=> (_module.LList.Cons_q (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (and (_module.LList.Cons_q (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))) (and (|$Eq#_module.LList| |_module._default.BisimulationLemma#$A| |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) ($Unbox DatatypeTypeType (_module.LList.head (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))) ($Unbox DatatypeTypeType (_module.LList.head (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))))) (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)) ($LS ($LS $LZ)) (_module.LList.tail (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (_module.LList.tail (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))))))))) (=> (= (ControlFlow 0 31) (- 0 30)) (or (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |_k#0| ($LS ($LS $LZ)) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))) (or (=> (< 0 (|ORD#Offset| |_k#0|)) (and (=> (_module.LList.Nil_q (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (_module.LList.Nil_q (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))) (=> (_module.LList.Cons_q (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (and (_module.LList.Cons_q (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))) (and (|$Eq#_module.LList| |_module._default.BisimulationLemma#$A| |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) ($Unbox DatatypeTypeType (_module.LList.head (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))) ($Unbox DatatypeTypeType (_module.LList.head (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))))) (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)) ($LS ($LS $LZ)) (_module.LList.tail (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (_module.LList.tail (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))))))))) (=> (and (or (not (= |_k#0| (|ORD#FromNat| 0))) (not true)) (= (|ORD#Offset| |_k#0|) 0)) (|$Eq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))))))))))))))))))
(let ((anon22_Then_correct  (=> (and (and ($Is intType (int_2_U (+ |n#1| 1)) Tclass._System.nat) (= |##n#13@0| (+ |n#1| 1))) (and ($IsAlloc intType (int_2_U |##n#13@0|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0))) (=> (and (and (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0)) (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (= |##arg#13@0| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (and (and ($IsAlloc DatatypeTypeType |##arg#13@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))) (and (=> (= (ControlFlow 0 24) (- 0 29)) (|ORD#IsNat| (Lit BoxType (|ORD#FromNat| 1)))) (=> (|ORD#IsNat| (Lit BoxType (|ORD#FromNat| 1))) (and (=> (= (ControlFlow 0 24) (- 0 28)) (<= (|ORD#Offset| (Lit BoxType (|ORD#FromNat| 1))) (|ORD#Offset| |_k#0|))) (=> (<= (|ORD#Offset| (Lit BoxType (|ORD#FromNat| 1))) (|ORD#Offset| |_k#0|)) (and (=> (= (ControlFlow 0 24) (- 0 27)) ($Is intType (int_2_U (+ |n#1| 1)) Tclass._System.nat)) (=> ($Is intType (int_2_U (+ |n#1| 1)) Tclass._System.nat) (=> (= |##n#14@0| (+ |n#1| 1)) (=> (and ($IsAlloc intType (int_2_U |##n#14@0|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (=> (and (and (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0)) (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (= |##arg#14@0| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))) (and (and ($IsAlloc DatatypeTypeType |##arg#14@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))) (and (=> (= (ControlFlow 0 24) (- 0 26)) (or (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)) ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (=> (< 0 (|ORD#Offset| (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)))) (=> (_module.LList.Nil_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (_module.LList.Nil_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))))) (and (=> (= (ControlFlow 0 24) (- 0 25)) (or (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)) ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (=> (< 0 (|ORD#Offset| (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)))) (=> (_module.LList.Cons_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and (_module.LList.Cons_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))) (and (|$Eq#_module.LList| |_module._default.BisimulationLemma#$A| |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) ($Unbox DatatypeTypeType (_module.LList.head (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) ($Unbox DatatypeTypeType (_module.LList.head (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))) (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (|ORD#Minus| (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)) (|ORD#FromNat| 1)) ($LS ($LS $LZ)) (_module.LList.tail (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (_module.LList.tail (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))))))))) (=> (= (ControlFlow 0 24) (- 0 23)) (or (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)) ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (or (=> (< 0 (|ORD#Offset| (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)))) (and (=> (_module.LList.Nil_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (_module.LList.Nil_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))) (=> (_module.LList.Cons_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and (_module.LList.Cons_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))) (and (|$Eq#_module.LList| |_module._default.BisimulationLemma#$A| |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) ($Unbox DatatypeTypeType (_module.LList.head (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) ($Unbox DatatypeTypeType (_module.LList.head (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))) (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (|ORD#Minus| (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)) (|ORD#FromNat| 1)) ($LS ($LS $LZ)) (_module.LList.tail (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (_module.LList.tail (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))))))) (=> (and (or (not (= (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)) (|ORD#FromNat| 0))) (not true)) (= (|ORD#Offset| (|ORD#Minus| |_k#0| (|ORD#FromNat| 1))) 0)) (|$Eq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))))))))))))))))))))
(let ((anon21_Then_correct  (=> (= (ControlFlow 0 22) (- 0 21)) ($Is intType (int_2_U (+ |n#1| 1)) Tclass._System.nat))))
(let ((anon20_Then_correct  (=> (and (and (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0) (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)))) (and (and ($Is intType (int_2_U (+ |n#1| 1)) Tclass._System.nat) (= |##n#12@0| (+ |n#1| 1))) (and ($IsAlloc intType (int_2_U |##n#12@0|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)))) (and (and (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0)) (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (= |##arg#12@0| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (and (and ($IsAlloc DatatypeTypeType |##arg#12@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))))) (and (and (=> (= (ControlFlow 0 35) 22) anon21_Then_correct) (=> (= (ControlFlow 0 35) 24) anon22_Then_correct)) (=> (= (ControlFlow 0 35) 31) anon22_Else_correct)))))
(let ((anon25_Then_correct  (=> (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0))) (=> (and (and (and (and (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0) (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (and (= |##a#0@0| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)) ($IsAlloc DatatypeTypeType |##a#0@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0))) (and (and (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)) (= |##arg#2@0| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))) (and ($IsAlloc DatatypeTypeType |##arg#2@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))))) (and (and (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))) (and ($IsGoodHeap $Heap@7) ($IsHeapAnchor $Heap@7)))) (and (and (and (and (|$IsA#_module.LList| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)) (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))) (and (|$Eq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|) (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))) (= $Heap@0 $Heap@7))) (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@7) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@7)) (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@7) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@7)))) (and (and (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (= |##arg#3@0| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (and ($IsAlloc DatatypeTypeType |##arg#3@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@7) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))) (and (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (= (ControlFlow 0 19) (- 0 18)))))) (|$Eq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))))))
(let ((anon24_Then_correct  (=> (and (and (and (and (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0) (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)))) (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)))) (and (and (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0) (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (and (= |##a#1@0| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)) ($IsAlloc DatatypeTypeType |##a#1@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0))) (and (and (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)) (= |##arg#5@0| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))) (and ($IsAlloc DatatypeTypeType |##arg#5@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))))) (and (and (and (and (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (and (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0))) (and (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (= |##a#2@0| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (and ($IsAlloc DatatypeTypeType |##a#2@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))))) (and (and (and (and (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (= |M##1@0| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))) (and (and (= call0formal@_module._default.Lemma25$A@0 (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) (= |call3formal@b#0@0| ($Box DatatypeTypeType |u#1|))) (and ($IsGoodHeap $Heap@6) ($IsHeapAnchor $Heap@6)))) (and (and (and (|$IsA#_module.LList| (_module.__default.LmapIter call0formal@_module._default.Lemma25$A@0 ($LS $LZ) |n#1| |f#1| (|#_module.LList.Cons| |call3formal@b#0@0| |M##1@0|))) (and (|_module.__default.LmapIter#canCall| call0formal@_module._default.Lemma25$A@0 |n#1| |f#1| (|#_module.LList.Cons| |call3formal@b#0@0| |M##1@0|)) (and (|_module.__default.Iter#canCall| call0formal@_module._default.Lemma25$A@0 |n#1| |f#1| |call3formal@b#0@0|) (|_module.__default.LmapIter#canCall| call0formal@_module._default.Lemma25$A@0 |n#1| |f#1| |M##1@0|)))) (and (|$Eq#_module.LList| call0formal@_module._default.Lemma25$A@0 call0formal@_module._default.Lemma25$A@0 ($LS ($LS $LZ)) (_module.__default.LmapIter call0formal@_module._default.Lemma25$A@0 ($LS ($LS $LZ)) |n#1| |f#1| (|#_module.LList.Cons| |call3formal@b#0@0| |M##1@0|)) (|#_module.LList.Cons| (_module.__default.Iter call0formal@_module._default.Lemma25$A@0 ($LS ($LS $LZ)) |n#1| |f#1| |call3formal@b#0@0|) (_module.__default.LmapIter call0formal@_module._default.Lemma25$A@0 ($LS ($LS $LZ)) |n#1| |f#1| |M##1@0|))) (= $Heap@0 $Heap@6))) (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@6) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@6)) (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@6) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@6))))) (and (and (and (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@6) (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (and (= |##a#3@0| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)) ($IsAlloc DatatypeTypeType |##a#3@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@6))) (and (and (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)) (= |##arg#6@0| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))) (and ($IsAlloc DatatypeTypeType |##arg#6@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@6) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))))) (and (and (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))) (= (ControlFlow 0 17) (- 0 16)))))) (|$Eq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))))))
(let ((anon23_Then_correct  (=> (and (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0) (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)))) (and (and ($Is intType (int_2_U (+ |n#1| 1)) Tclass._System.nat) (= |##n#8@0| (+ |n#1| 1))) (and ($IsAlloc intType (int_2_U |##n#8@0|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)))) (=> (and (and (and (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0)) (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (= |##arg#8@0| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))) (and (and ($IsAlloc DatatypeTypeType |##arg#8@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (and (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))))) (and (and (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0)) (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and (and (= |x##0@0| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)) (= call0formal@_module._default.Lemma26$A@0 (Tclass._module.LList |_module._default.BisimulationLemma#$A|))) (and ($IsGoodHeap $Heap@5) ($IsHeapAnchor $Heap@5))))) (=> (and (and (and (and (and (|$IsA#_module.LList| (_module.__default.LmapIter call0formal@_module._default.Lemma26$A@0 ($LS $LZ) |n#1| |f#1| (_module.__default.Lmap call0formal@_module._default.Lemma26$A@0 ($LS $LZ) |f#1| |x##0@0|))) (|$IsA#_module.LList| (_module.__default.LmapIter call0formal@_module._default.Lemma26$A@0 ($LS $LZ) (+ |n#1| 1) |f#1| |x##0@0|))) (and (and (|_module.__default.Lmap#canCall| call0formal@_module._default.Lemma26$A@0 |f#1| |x##0@0|) (|_module.__default.LmapIter#canCall| call0formal@_module._default.Lemma26$A@0 |n#1| |f#1| (_module.__default.Lmap call0formal@_module._default.Lemma26$A@0 ($LS $LZ) |f#1| |x##0@0|))) (|_module.__default.LmapIter#canCall| call0formal@_module._default.Lemma26$A@0 (+ |n#1| 1) |f#1| |x##0@0|))) (and (|$Eq#_module.LList| call0formal@_module._default.Lemma26$A@0 call0formal@_module._default.Lemma26$A@0 ($LS ($LS $LZ)) (_module.__default.LmapIter call0formal@_module._default.Lemma26$A@0 ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Lmap call0formal@_module._default.Lemma26$A@0 ($LS ($LS $LZ)) |f#1| |x##0@0|)) (_module.__default.LmapIter call0formal@_module._default.Lemma26$A@0 ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| |x##0@0|)) (= $Heap@0 $Heap@5))) (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@5) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@5)) (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@5) (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|))))) (and (and (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@5) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@5)) (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@5) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@5))) (and (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@5) (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (and (= |##a#4@0| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)) ($IsAlloc DatatypeTypeType |##a#4@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@5)))) (and (and (and (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)) (= |##arg#10@0| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))) (and ($IsAlloc DatatypeTypeType |##arg#10@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@5) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))) (and (and (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (and (and (|_module.__default.Iterates#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))))) (= (ControlFlow 0 15) (- 0 14)))))) (|$Eq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))))))))
(let ((anon19_Then_correct  (=> (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (=> (and (and (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0) (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|))) (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0))) (and (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0) (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (=> (and (and (and (and (and (= |##a#5@0| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) ($IsAlloc DatatypeTypeType |##a#5@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (and (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (= |##arg#19@0| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))) (and (and ($IsAlloc DatatypeTypeType |##arg#19@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (and (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (and (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))))) (and (and (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0)) (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and (and (= |x##1@0| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (= call0formal@_module._default.Lemma26$A@0@@0 (Tclass._module.LList |_module._default.BisimulationLemma#$A|))) (and ($IsGoodHeap $Heap@4) ($IsHeapAnchor $Heap@4))))) (and (and (and (and (|$IsA#_module.LList| (_module.__default.LmapIter call0formal@_module._default.Lemma26$A@0@@0 ($LS $LZ) |n#1| |f#1| (_module.__default.Lmap call0formal@_module._default.Lemma26$A@0@@0 ($LS $LZ) |f#1| |x##1@0|))) (|$IsA#_module.LList| (_module.__default.LmapIter call0formal@_module._default.Lemma26$A@0@@0 ($LS $LZ) (+ |n#1| 1) |f#1| |x##1@0|))) (and (and (|_module.__default.Lmap#canCall| call0formal@_module._default.Lemma26$A@0@@0 |f#1| |x##1@0|) (|_module.__default.LmapIter#canCall| call0formal@_module._default.Lemma26$A@0@@0 |n#1| |f#1| (_module.__default.Lmap call0formal@_module._default.Lemma26$A@0@@0 ($LS $LZ) |f#1| |x##1@0|))) (|_module.__default.LmapIter#canCall| call0formal@_module._default.Lemma26$A@0@@0 (+ |n#1| 1) |f#1| |x##1@0|))) (and (|$Eq#_module.LList| call0formal@_module._default.Lemma26$A@0@@0 call0formal@_module._default.Lemma26$A@0@@0 ($LS ($LS $LZ)) (_module.__default.LmapIter call0formal@_module._default.Lemma26$A@0@@0 ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Lmap call0formal@_module._default.Lemma26$A@0@@0 ($LS ($LS $LZ)) |f#1| |x##1@0|)) (_module.__default.LmapIter call0formal@_module._default.Lemma26$A@0@@0 ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| |x##1@0|)) (= $Heap@0 $Heap@4))) (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@4) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@4)) (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@4) (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)))))) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($Is intType (int_2_U (+ |n#1| 1)) Tclass._System.nat)) (=> ($Is intType (int_2_U (+ |n#1| 1)) Tclass._System.nat) (=> (= |##n#21@0| (+ |n#1| 1)) (=> (and (and ($IsAlloc intType (int_2_U |##n#21@0|) Tclass._System.nat $Heap@4) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@4)) (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@4) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@4))) (=> (and (and (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (= |##arg#21@0| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and ($IsAlloc DatatypeTypeType |##arg#21@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@4) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (and (and (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (= (ControlFlow 0 12) (- 0 11)))) (|$Eq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (+ |n#1| 1) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))))))))))))
(let ((anon18_Then_correct  (=> (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0))) (=> (and (and (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0) (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (and (= |##a#6@0| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) ($IsAlloc DatatypeTypeType |##a#6@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0))) (and (and (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (= |##arg#22@0| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))) (and ($IsAlloc DatatypeTypeType |##arg#22@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))))) (=> (and (and (and (and (and (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0))) (and (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (= |##a#7@0| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and ($IsAlloc DatatypeTypeType |##a#7@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))) (and (and (and (and (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (= |M##2@0| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (and (and (= call0formal@_module._default.Lemma25$A@0@@0 (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) (= |call3formal@b#0@0@@0| ($Box DatatypeTypeType |u#1|))) (and ($IsGoodHeap $Heap@3) ($IsHeapAnchor $Heap@3)))) (and (and (and (|$IsA#_module.LList| (_module.__default.LmapIter call0formal@_module._default.Lemma25$A@0@@0 ($LS $LZ) |n#1| |f#1| (|#_module.LList.Cons| |call3formal@b#0@0@@0| |M##2@0|))) (and (|_module.__default.LmapIter#canCall| call0formal@_module._default.Lemma25$A@0@@0 |n#1| |f#1| (|#_module.LList.Cons| |call3formal@b#0@0@@0| |M##2@0|)) (and (|_module.__default.Iter#canCall| call0formal@_module._default.Lemma25$A@0@@0 |n#1| |f#1| |call3formal@b#0@0@@0|) (|_module.__default.LmapIter#canCall| call0formal@_module._default.Lemma25$A@0@@0 |n#1| |f#1| |M##2@0|)))) (and (|$Eq#_module.LList| call0formal@_module._default.Lemma25$A@0@@0 call0formal@_module._default.Lemma25$A@0@@0 ($LS ($LS $LZ)) (_module.__default.LmapIter call0formal@_module._default.Lemma25$A@0@@0 ($LS ($LS $LZ)) |n#1| |f#1| (|#_module.LList.Cons| |call3formal@b#0@0@@0| |M##2@0|)) (|#_module.LList.Cons| (_module.__default.Iter call0formal@_module._default.Lemma25$A@0@@0 ($LS ($LS $LZ)) |n#1| |f#1| |call3formal@b#0@0@@0|) (_module.__default.LmapIter call0formal@_module._default.Lemma25$A@0@@0 ($LS ($LS $LZ)) |n#1| |f#1| |M##2@0|))) (= $Heap@0 $Heap@3))) (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@3) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@3)) (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@3) (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)))))) (and (and (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@3) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@3)) (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@3) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@3))) (and (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@3) (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (and (= |##a#8@0| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) ($IsAlloc DatatypeTypeType |##a#8@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@3)))) (and (and (and (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (= |##arg#24@0| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (and ($IsAlloc DatatypeTypeType |##arg#24@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@3) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))) (and (and (|_module.__default.Iter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (and (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))) (= (ControlFlow 0 10) (- 0 9))))))) (|$Eq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (|#_module.LList.Cons| (_module.__default.Iter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| ($Box DatatypeTypeType |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))))))))
(let ((anon17_Then_correct  (=> (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@0) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0)) (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@0))) (=> (and (and (and (and (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (= |##arg#25@0| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and ($IsAlloc DatatypeTypeType |##arg#25@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@0) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (and (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and ($IsGoodHeap $Heap@2) ($IsHeapAnchor $Heap@2)))) (and (and (and (|$IsA#_module.LList| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))) (and (|$Eq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) (= $Heap@0 $Heap@2))) (and (and ($IsAlloc intType (int_2_U |n#1|) Tclass._System.nat $Heap@2) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@2)) (and ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@2) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@2))))) (and (and (and (and ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@2) (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (and (= |##a#9@0| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) ($IsAlloc DatatypeTypeType |##a#9@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@2))) (and (and (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (= |##arg#26@0| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))) (and ($IsAlloc DatatypeTypeType |##arg#26@0| (Tclass._module.LList (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@2) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))))) (and (and (and (|_module.__default.h#canCall| |_module._default.BisimulationLemma#$A| |f#1| |u#1|) (|_module.__default.Lmap#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (|_module.__default.LmapIter#canCall| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |n#1| |f#1| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))))) (= (ControlFlow 0 8) (- 0 7))))) (|$Eq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (|#_module.LList.Cons| ($Box DatatypeTypeType |u#1|) (_module.__default.Lmap (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))))))))
(let ((anon16_Then_correct true))
(let ((GeneratedUnifiedExit_correct  (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |_k#0| ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (=> (< 0 (|ORD#Offset| |_k#0|)) (=> (_module.LList.Nil_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (_module.LList.Nil_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))))) (=> (or (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |_k#0| ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (=> (< 0 (|ORD#Offset| |_k#0|)) (=> (_module.LList.Nil_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (_module.LList.Nil_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |_k#0| ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (=> (< 0 (|ORD#Offset| |_k#0|)) (=> (_module.LList.Cons_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and (_module.LList.Cons_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))) (and (|$Eq#_module.LList| |_module._default.BisimulationLemma#$A| |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) ($Unbox DatatypeTypeType (_module.LList.head (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) ($Unbox DatatypeTypeType (_module.LList.head (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))) (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)) ($LS ($LS $LZ)) (_module.LList.tail (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (_module.LList.tail (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))))))))) (=> (or (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |_k#0| ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (=> (< 0 (|ORD#Offset| |_k#0|)) (=> (_module.LList.Cons_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and (_module.LList.Cons_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))) (and (|$Eq#_module.LList| |_module._default.BisimulationLemma#$A| |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) ($Unbox DatatypeTypeType (_module.LList.head (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) ($Unbox DatatypeTypeType (_module.LList.head (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))) (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)) ($LS ($LS $LZ)) (_module.LList.tail (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (_module.LList.tail (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (or (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |_k#0| ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (or (=> (< 0 (|ORD#Offset| |_k#0|)) (and (=> (_module.LList.Nil_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (_module.LList.Nil_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|)))) (=> (_module.LList.Cons_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (and (_module.LList.Cons_q (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))) (and (|$Eq#_module.LList| |_module._default.BisimulationLemma#$A| |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) ($Unbox DatatypeTypeType (_module.LList.head (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)))) ($Unbox DatatypeTypeType (_module.LList.head (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))) (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (|ORD#Minus| |_k#0| (|ORD#FromNat| 1)) ($LS ($LS $LZ)) (_module.LList.tail (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|))) (_module.LList.tail (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS ($LS $LZ)) |f#1| |u#1|))))))))) (=> (and (or (not (= |_k#0| (|ORD#FromNat| 0))) (not true)) (= (|ORD#Offset| |_k#0|) 0)) (|$Eq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|)))))))))))))
(let ((anon25_Else_correct  (=> (and (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |_k#0| ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#1| |u#1|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#1| |f#1| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#1| |u#1|))) (= (ControlFlow 0 20) 2)) GeneratedUnifiedExit_correct)))
(let ((anon15_Then_correct  (=> (< 0 (|ORD#Offset| |_k#0|)) (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 36) 6) anon16_Then_correct) (=> (= (ControlFlow 0 36) 8) anon17_Then_correct)) (=> (= (ControlFlow 0 36) 10) anon18_Then_correct)) (=> (= (ControlFlow 0 36) 12) anon19_Then_correct)) (=> (= (ControlFlow 0 36) 35) anon20_Then_correct)) (=> (= (ControlFlow 0 36) 15) anon23_Then_correct)) (=> (= (ControlFlow 0 36) 17) anon24_Then_correct)) (=> (= (ControlFlow 0 36) 19) anon25_Then_correct)) (=> (= (ControlFlow 0 36) 20) anon25_Else_correct)))))
(let ((anon15_Else_correct  (=> (<= (|ORD#Offset| |_k#0|) 0) (=> (and (and (and ($IsGoodHeap $Heap@1) ($IsHeapAnchor $Heap@1)) (= $Heap@0 $Heap@1)) (and (forall ((|_k'#0| T@U) (|n#2| Int) (|f#2| T@U) (|u#2| T@U) ) (!  (=> (and (and (and (<= (LitInt 0) |n#2|) ($Is DatatypeTypeType |f#2| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)))) ($Is DatatypeTypeType |u#2| (Tclass._module.LList |_module._default.BisimulationLemma#$A|))) (|ORD#Less| |_k'#0| |_k#0|)) (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |_k'#0| ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#2| |f#2| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#2| |u#2|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#2| |f#2| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#2| |u#2|))))
 :pattern ( (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#2| |f#2| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |f#2| |u#2|)) (|ORD#Less| |_k'#0| |_k#0|))
 :pattern ( (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |n#2| |f#2| (_module.__default.h |_module._default.BisimulationLemma#$A| |f#2| |u#2|)) (|ORD#Less| |_k'#0| |_k#0|))
)) (= (ControlFlow 0 5) 2))) GeneratedUnifiedExit_correct))))
(let ((anon0_correct  (=> (= $_ModifiesFrame@0 (|lambda#0| null $Heap@@5 alloc false)) (=> (and (|$IsA#_module.FunctionHandle| |f#1|) (|$IsA#_module.LList| |u#1|)) (=> (and (and ($IsGoodHeap $Heap@0) ($IsHeapAnchor $Heap@0)) (and (= $Heap@@5 $Heap@0) (forall ((|$ih#_k0#0| T@U) (|$ih#n0#0| Int) (|$ih#f0#0| T@U) (|$ih#u0#0| T@U) ) (!  (=> (and (and (and (and (<= (LitInt 0) |$ih#n0#0|) ($Is DatatypeTypeType |$ih#f0#0| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)))) ($Is DatatypeTypeType |$ih#u0#0| (Tclass._module.LList |_module._default.BisimulationLemma#$A|))) (U_2_bool (Lit boolType (bool_2_U true)))) (or (|ORD#Less| |$ih#_k0#0| |_k#0|) (and (= |$ih#_k0#0| |_k#0|) (or (and (<= 0 |$ih#n0#0|) (< |$ih#n0#0| |n#1|)) (and (= |$ih#n0#0| |n#1|) (< (DtRank |$ih#f0#0|) (DtRank |f#1|))))))) (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |$ih#_k0#0| ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |$ih#n0#0| |$ih#f0#0| (_module.__default.h |_module._default.BisimulationLemma#$A| |$ih#f0#0| |$ih#u0#0|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |$ih#n0#0| |$ih#f0#0| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |$ih#f0#0| |$ih#u0#0|))))
 :pattern ( (|$PrefixEq#_module.LList| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) (Tclass._module.LList |_module._default.BisimulationLemma#$A|) |$ih#_k0#0| ($LS ($LS $LZ)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |$ih#n0#0| |$ih#f0#0| (_module.__default.h |_module._default.BisimulationLemma#$A| |$ih#f0#0| |$ih#u0#0|)) (_module.__default.LmapIter (Tclass._module.LList |_module._default.BisimulationLemma#$A|) ($LS $LZ) |$ih#n0#0| |$ih#f0#0| (_module.__default.Iterates |_module._default.BisimulationLemma#$A| ($LS $LZ) |$ih#f0#0| |$ih#u0#0|))))
)))) (and (=> (= (ControlFlow 0 37) 36) anon15_Then_correct) (=> (= (ControlFlow 0 37) 5) anon15_Else_correct)))))))
(let ((PreconditionGeneratedEntry_correct  (=> (and (and (and (and ($IsGoodHeap $Heap@@5) ($IsHeapAnchor $Heap@@5)) (<= (LitInt 0) |n#1|)) (and (and ($Is DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|))) ($IsAlloc DatatypeTypeType |f#1| (Tclass._module.FunctionHandle (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) $Heap@@5)) (|$IsA#_module.FunctionHandle| |f#1|))) (and (and (and ($Is DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|)) ($IsAlloc DatatypeTypeType |u#1| (Tclass._module.LList |_module._default.BisimulationLemma#$A|) $Heap@@5)) (|$IsA#_module.LList| |u#1|)) (and (= 6 $FunctionContextHeight) (= (ControlFlow 0 38) 37)))) anon0_correct)))
PreconditionGeneratedEntry_correct))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
