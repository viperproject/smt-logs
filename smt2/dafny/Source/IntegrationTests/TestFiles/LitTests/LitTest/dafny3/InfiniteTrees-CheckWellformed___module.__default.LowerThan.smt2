(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@37 (Int) T@U)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@53 () Int)
(declare-fun $generated@@54 (T@U T@U Int) Bool)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (Int) Int)
(declare-fun $generated@@57 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@U T@U Int) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) Bool)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@120 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Int)
(declare-fun $generated@@183 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@186 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@187 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@249 (T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@30) ($generated@@28 $generated@@30 $generated@@31)) ($generated@@28 $generated@@29 $generated@@31))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30) ($generated@@28 $generated@@30 $generated@@31))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30) ($generated@@28 $generated@@29 $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! ($generated@@32 $generated@@13 $generated@@34 $generated@@33 $generated@@35)
 :pattern ( ($generated@@32 $generated@@13 $generated@@34 $generated@@33 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 Int) ($generated@@41 Int) ) (!  (=> (and (and (<= 0 $generated@@40) (<= 0 $generated@@41)) (<= (+ $generated@@40 $generated@@41) ($generated@@38 $generated@@39))) (= ($generated@@36 ($generated@@36 $generated@@39 ($generated@@37 $generated@@40)) ($generated@@37 $generated@@41)) ($generated@@36 $generated@@39 ($generated@@37 (+ $generated@@40 $generated@@41)))))
 :pattern ( ($generated@@36 ($generated@@36 $generated@@39 ($generated@@37 $generated@@40)) ($generated@@37 $generated@@41)))
)))
(assert (= ($generated@@42 $generated@@43) $generated@@5))
(assert (= ($generated@@11 $generated@@46) 3))
(assert (forall (($generated@@48 T@U) ) (!  (=> ($generated@@45 $generated@@46 $generated@@48 $generated@@47) ($generated@@44 $generated@@48))
 :pattern ( ($generated@@44 $generated@@48) ($generated@@45 $generated@@46 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@50 $generated@@52) ($generated@@32 $generated@@46 $generated@@43 ($generated@@49 $generated@@51) $generated@@52))
 :pattern ( ($generated@@32 $generated@@46 $generated@@43 ($generated@@49 $generated@@51) $generated@@52))
)))
(assert  (=> (<= 3 $generated@@53) (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 Int) ) (!  (=> (and (and ($generated@@45 $generated@@46 $generated@@59 ($generated@@49 $generated@@47)) (<= ($generated@@56 0) $generated@@60)) ($generated@@54 ($generated@@55 $generated@@58) $generated@@59 $generated@@60)) (forall (($generated@@61 T@U) ) (! ($generated@@57 ($generated@@55 $generated@@58) $generated@@61 $generated@@59 $generated@@60)
 :pattern ( ($generated@@57 ($generated@@55 $generated@@58) $generated@@61 $generated@@59 $generated@@60))
)))
 :pattern ( ($generated@@54 ($generated@@55 $generated@@58) $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@62 T@U) ) (! ($generated@@45 $generated@@46 $generated@@43 ($generated@@49 $generated@@62))
 :pattern ( ($generated@@45 $generated@@46 $generated@@43 ($generated@@49 $generated@@62)))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@56 $generated@@63) $generated@@63)
 :pattern ( ($generated@@56 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (= ($generated@@11 $generated@@67) 4))
(assert  (=> (<= 3 $generated@@53) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 Int) ) (!  (=> (or ($generated@@68 ($generated@@64 $generated@@67 $generated@@75) ($generated@@64 $generated@@46 $generated@@76) ($generated@@56 $generated@@77)) (and (< 3 $generated@@53) (and ($generated@@45 $generated@@46 $generated@@76 ($generated@@49 $generated@@47)) (<= ($generated@@56 0) $generated@@77)))) (and (and (=> (< 0 ($generated@@38 $generated@@75)) (=> (not ($generated@@16 ($generated@@64 $generated@@12 ($generated@@15 ($generated@@69 ($generated@@64 $generated@@46 $generated@@76)))))) (let (($generated@@78 ($generated@@64 $generated@@46 ($generated@@70 ($generated@@64 $generated@@46 $generated@@76)))))
(let (($generated@@79 ($generated@@64 $generated@@46 ($generated@@71 $generated@@46 ($generated@@72 ($generated@@64 $generated@@46 $generated@@76))))))
 (=> (<= ($generated@@56 1) ($generated@@56 $generated@@77)) (and (and ($generated@@44 $generated@@79) ($generated@@68 ($generated@@36 $generated@@75 ($generated@@37 1)) ($generated@@73 $generated@@79) ($generated@@56 (- $generated@@77 1)))) (=> ($generated@@57 ($generated@@55 $generated@@74) ($generated@@36 $generated@@75 ($generated@@37 1)) ($generated@@73 $generated@@79) ($generated@@56 (- $generated@@77 1))) ($generated@@68 ($generated@@36 $generated@@75 ($generated@@37 1)) $generated@@78 ($generated@@56 $generated@@77))))))))) (=> (=> (< 0 ($generated@@38 $generated@@75)) (ite ($generated@@69 ($generated@@64 $generated@@46 $generated@@76)) true (let (($generated@@80 ($generated@@64 $generated@@46 ($generated@@70 ($generated@@64 $generated@@46 $generated@@76)))))
(let (($generated@@81 ($generated@@64 $generated@@46 ($generated@@71 $generated@@46 ($generated@@72 ($generated@@64 $generated@@46 $generated@@76))))))
 (and (and (<= ($generated@@56 1) ($generated@@56 $generated@@77)) ($generated@@57 ($generated@@55 $generated@@74) ($generated@@36 $generated@@75 ($generated@@37 1)) ($generated@@64 $generated@@46 ($generated@@73 $generated@@81)) ($generated@@56 (- $generated@@77 1)))) ($generated@@57 ($generated@@55 $generated@@74) ($generated@@36 $generated@@75 ($generated@@37 1)) $generated@@80 ($generated@@56 $generated@@77))))))) (=> (= ($generated@@56 0) ($generated@@38 $generated@@75)) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@28 $generated@@82 $generated@@75) ($generated@@68 $generated@@82 $generated@@76 $generated@@77))
 :pattern ( ($generated@@57 ($generated@@55 $generated@@74) $generated@@82 $generated@@76 $generated@@77))
))))) (= ($generated@@57 ($generated@@55 $generated@@74) ($generated@@64 $generated@@67 $generated@@75) ($generated@@64 $generated@@46 $generated@@76) ($generated@@56 $generated@@77))  (and (=> (< 0 ($generated@@38 $generated@@75)) (ite ($generated@@69 ($generated@@64 $generated@@46 $generated@@76)) true (let (($generated@@83 ($generated@@64 $generated@@46 ($generated@@70 ($generated@@64 $generated@@46 $generated@@76)))))
(let (($generated@@84 ($generated@@64 $generated@@46 ($generated@@71 $generated@@46 ($generated@@72 ($generated@@64 $generated@@46 $generated@@76))))))
 (and (and (<= ($generated@@56 1) ($generated@@56 $generated@@77)) ($generated@@57 ($generated@@55 $generated@@74) ($generated@@36 $generated@@75 ($generated@@37 1)) ($generated@@64 $generated@@46 ($generated@@73 $generated@@84)) ($generated@@56 (- $generated@@77 1)))) ($generated@@57 ($generated@@55 $generated@@74) ($generated@@36 $generated@@75 ($generated@@37 1)) $generated@@83 ($generated@@56 $generated@@77))))))) (=> (= ($generated@@56 0) ($generated@@38 $generated@@75)) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@28 $generated@@85 $generated@@75) ($generated@@57 ($generated@@55 $generated@@74) $generated@@85 $generated@@76 $generated@@77))
 :pattern ( ($generated@@57 ($generated@@55 $generated@@74) $generated@@85 $generated@@76 $generated@@77))
)))))))
 :weight 3
 :pattern ( ($generated@@57 ($generated@@55 $generated@@74) ($generated@@64 $generated@@67 $generated@@75) ($generated@@64 $generated@@46 $generated@@76) ($generated@@56 $generated@@77)))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@45 $generated@@46 ($generated@@86 $generated@@89 $generated@@90) ($generated@@49 $generated@@88))  (and ($generated@@87 $generated@@89 $generated@@88) ($generated@@45 $generated@@46 $generated@@90 ($generated@@49 $generated@@88))))
 :pattern ( ($generated@@45 $generated@@46 ($generated@@86 $generated@@89 $generated@@90) ($generated@@49 $generated@@88)))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@69 $generated@@91) (= ($generated@@42 $generated@@91) $generated@@5))
 :pattern ( ($generated@@69 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@92 $generated@@93) (= ($generated@@42 $generated@@93) $generated@@6))
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@44 $generated@@94) (= ($generated@@42 $generated@@94) $generated@@7))
 :pattern ( ($generated@@44 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 ($generated@@71 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@71 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@92 $generated@@98) (exists (($generated@@99 T@U) ($generated@@100 T@U) ) (= $generated@@98 ($generated@@86 $generated@@99 $generated@@100))))
 :pattern ( ($generated@@92 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@69 $generated@@101) (= $generated@@101 $generated@@43))
 :pattern ( ($generated@@69 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@44 $generated@@103) (exists (($generated@@104 T@U) ) (= $generated@@103 ($generated@@102 $generated@@104))))
 :pattern ( ($generated@@44 $generated@@103))
)))
(assert  (=> (<= 3 $generated@@53) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 Int) ) (!  (=> (and (and ($generated@@45 $generated@@46 $generated@@106 ($generated@@49 $generated@@47)) (<= ($generated@@56 0) $generated@@107)) (forall (($generated@@108 T@U) ) (! ($generated@@57 ($generated@@55 $generated@@105) $generated@@108 $generated@@106 $generated@@107)
 :pattern ( ($generated@@57 ($generated@@55 $generated@@105) $generated@@108 $generated@@106 $generated@@107))
))) ($generated@@54 ($generated@@55 $generated@@105) $generated@@106 $generated@@107))
 :pattern ( ($generated@@54 ($generated@@55 $generated@@105) $generated@@106 $generated@@107))
))))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@45 $generated@@13 $generated@@109 $generated@@33) (<= ($generated@@56 0) ($generated@@18 $generated@@109)))
 :pattern ( ($generated@@45 $generated@@13 $generated@@109 $generated@@33))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 Int) ) (! (= ($generated@@54 ($generated@@55 $generated@@110) $generated@@111 $generated@@112) ($generated@@54 $generated@@110 $generated@@111 $generated@@112))
 :pattern ( ($generated@@54 ($generated@@55 $generated@@110) $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@113 ($generated@@95 $generated@@117 $generated@@114) $generated@@115 $generated@@116) ($generated@@32 $generated@@117 $generated@@114 $generated@@115 $generated@@116))
 :pattern ( ($generated@@113 ($generated@@95 $generated@@117 $generated@@114) $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ) (!  (and (= ($generated@@27 ($generated@@49 $generated@@119)) $generated@@3) (= ($generated@@118 ($generated@@49 $generated@@119)) $generated@@9))
 :pattern ( ($generated@@49 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@120 $generated@@122) (<= ($generated@@38 $generated@@122) ($generated@@38 $generated@@121))) (and (= ($generated@@120 ($generated@@36 $generated@@121 $generated@@122)) ($generated@@120 $generated@@121)) (= ($generated@@38 ($generated@@36 $generated@@121 $generated@@122)) (- ($generated@@38 $generated@@121) ($generated@@38 $generated@@122)))))
 :pattern ( ($generated@@36 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 Int) ) (!  (=> (<= 0 $generated@@123) (and ($generated@@120 ($generated@@37 $generated@@123)) (= ($generated@@38 ($generated@@37 $generated@@123)) $generated@@123)))
 :pattern ( ($generated@@37 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@87 $generated@@124 $generated@@33) (and (= ($generated@@95 $generated@@13 ($generated@@71 $generated@@13 $generated@@124)) $generated@@124) ($generated@@45 $generated@@13 ($generated@@71 $generated@@13 $generated@@124) $generated@@33)))
 :pattern ( ($generated@@87 $generated@@124 $generated@@33))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@87 $generated@@125 $generated@@47) (and (= ($generated@@95 $generated@@46 ($generated@@71 $generated@@46 $generated@@125)) $generated@@125) ($generated@@45 $generated@@46 ($generated@@71 $generated@@46 $generated@@125) $generated@@47)))
 :pattern ( ($generated@@87 $generated@@125 $generated@@47))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (or ($generated@@28 $generated@@126 $generated@@127) (= $generated@@126 $generated@@127)) ($generated@@28 $generated@@127 $generated@@126))
 :pattern ( ($generated@@28 $generated@@126 $generated@@127) ($generated@@28 $generated@@127 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@45 $generated@@46 ($generated@@102 $generated@@128) $generated@@47) ($generated@@45 $generated@@46 $generated@@128 ($generated@@49 $generated@@47)))
 :pattern ( ($generated@@45 $generated@@46 ($generated@@102 $generated@@128) $generated@@47))
)))
(assert  (=> (<= 3 $generated@@53) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 Int) ) (!  (=> (or ($generated@@68 ($generated@@64 $generated@@67 $generated@@130) $generated@@131 $generated@@132) (and (< 3 $generated@@53) (and ($generated@@45 $generated@@46 $generated@@131 ($generated@@49 $generated@@47)) (<= ($generated@@56 0) $generated@@132)))) (and (and (=> (< 0 ($generated@@38 $generated@@130)) (=> (not ($generated@@69 $generated@@131)) (let (($generated@@133 ($generated@@70 $generated@@131)))
(let (($generated@@134 ($generated@@71 $generated@@46 ($generated@@72 $generated@@131))))
 (=> (<= ($generated@@56 1) $generated@@132) (and (and ($generated@@44 $generated@@134) ($generated@@68 ($generated@@36 $generated@@130 ($generated@@37 1)) ($generated@@73 $generated@@134) (- $generated@@132 1))) (=> ($generated@@57 ($generated@@55 $generated@@129) ($generated@@36 $generated@@130 ($generated@@37 1)) ($generated@@73 $generated@@134) (- $generated@@132 1)) ($generated@@68 ($generated@@36 $generated@@130 ($generated@@37 1)) $generated@@133 $generated@@132)))))))) (=> (=> (< 0 ($generated@@38 $generated@@130)) (ite ($generated@@69 $generated@@131) true (let (($generated@@135 ($generated@@70 $generated@@131)))
(let (($generated@@136 ($generated@@71 $generated@@46 ($generated@@72 $generated@@131))))
 (and (and (<= ($generated@@56 1) $generated@@132) ($generated@@57 ($generated@@55 $generated@@129) ($generated@@36 $generated@@130 ($generated@@37 1)) ($generated@@73 $generated@@136) (- $generated@@132 1))) ($generated@@57 ($generated@@55 $generated@@129) ($generated@@36 $generated@@130 ($generated@@37 1)) $generated@@135 $generated@@132)))))) (=> (= ($generated@@56 0) ($generated@@38 $generated@@130)) (forall (($generated@@137 T@U) ) (!  (=> ($generated@@28 $generated@@137 $generated@@130) ($generated@@68 $generated@@137 $generated@@131 $generated@@132))
 :pattern ( ($generated@@57 ($generated@@55 $generated@@129) $generated@@137 $generated@@131 $generated@@132))
))))) (= ($generated@@57 ($generated@@55 $generated@@129) ($generated@@64 $generated@@67 $generated@@130) $generated@@131 $generated@@132)  (and (=> (< 0 ($generated@@38 $generated@@130)) (ite ($generated@@69 $generated@@131) true (let (($generated@@138 ($generated@@70 $generated@@131)))
(let (($generated@@139 ($generated@@71 $generated@@46 ($generated@@72 $generated@@131))))
 (and (and (<= ($generated@@56 1) $generated@@132) ($generated@@57 ($generated@@55 $generated@@129) ($generated@@36 $generated@@130 ($generated@@37 1)) ($generated@@73 $generated@@139) (- $generated@@132 1))) ($generated@@57 ($generated@@55 $generated@@129) ($generated@@36 $generated@@130 ($generated@@37 1)) $generated@@138 $generated@@132)))))) (=> (= ($generated@@56 0) ($generated@@38 $generated@@130)) (forall (($generated@@140 T@U) ) (!  (=> ($generated@@28 $generated@@140 $generated@@130) ($generated@@57 ($generated@@55 $generated@@129) $generated@@140 $generated@@131 $generated@@132))
 :pattern ( ($generated@@57 ($generated@@55 $generated@@129) $generated@@140 $generated@@131 $generated@@132))
)))))))
 :weight 3
 :pattern ( ($generated@@57 ($generated@@55 $generated@@129) ($generated@@64 $generated@@67 $generated@@130) $generated@@131 $generated@@132))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@45 $generated@@46 $generated@@142 ($generated@@49 $generated@@141)) (or ($generated@@69 $generated@@142) ($generated@@92 $generated@@142)))
 :pattern ( ($generated@@92 $generated@@142) ($generated@@45 $generated@@46 $generated@@142 ($generated@@49 $generated@@141)))
 :pattern ( ($generated@@69 $generated@@142) ($generated@@45 $generated@@46 $generated@@142 ($generated@@49 $generated@@141)))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@87 $generated@@143 $generated) (and (= ($generated@@95 $generated@@12 ($generated@@71 $generated@@12 $generated@@143)) $generated@@143) ($generated@@45 $generated@@12 ($generated@@71 $generated@@12 $generated@@143) $generated)))
 :pattern ( ($generated@@87 $generated@@143 $generated))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@87 ($generated@@95 $generated@@146 $generated@@144) $generated@@145) ($generated@@45 $generated@@146 $generated@@144 $generated@@145))
 :pattern ( ($generated@@87 ($generated@@95 $generated@@146 $generated@@144) $generated@@145))
)))
(assert  (=> (<= 3 $generated@@53) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 Int) ) (!  (=> (or ($generated@@68 $generated@@148 $generated@@149 $generated@@150) (and (< 3 $generated@@53) (and ($generated@@45 $generated@@46 $generated@@149 ($generated@@49 $generated@@47)) (<= ($generated@@56 0) $generated@@150)))) (and (and (=> (< 0 ($generated@@38 $generated@@148)) (=> (not ($generated@@69 $generated@@149)) (let (($generated@@151 ($generated@@70 $generated@@149)))
(let (($generated@@152 ($generated@@71 $generated@@46 ($generated@@72 $generated@@149))))
 (=> (<= ($generated@@56 1) $generated@@150) (and (and ($generated@@44 $generated@@152) ($generated@@68 ($generated@@36 $generated@@148 ($generated@@37 1)) ($generated@@73 $generated@@152) (- $generated@@150 1))) (=> ($generated@@57 $generated@@147 ($generated@@36 $generated@@148 ($generated@@37 1)) ($generated@@73 $generated@@152) (- $generated@@150 1)) ($generated@@68 ($generated@@36 $generated@@148 ($generated@@37 1)) $generated@@151 $generated@@150)))))))) (=> (=> (< 0 ($generated@@38 $generated@@148)) (ite ($generated@@69 $generated@@149) true (let (($generated@@153 ($generated@@70 $generated@@149)))
(let (($generated@@154 ($generated@@71 $generated@@46 ($generated@@72 $generated@@149))))
 (and (and (<= ($generated@@56 1) $generated@@150) ($generated@@57 $generated@@147 ($generated@@36 $generated@@148 ($generated@@37 1)) ($generated@@73 $generated@@154) (- $generated@@150 1))) ($generated@@57 $generated@@147 ($generated@@36 $generated@@148 ($generated@@37 1)) $generated@@153 $generated@@150)))))) (=> (= ($generated@@56 0) ($generated@@38 $generated@@148)) (forall (($generated@@155 T@U) ) (!  (=> ($generated@@28 $generated@@155 $generated@@148) ($generated@@68 $generated@@155 $generated@@149 $generated@@150))
 :pattern ( ($generated@@57 $generated@@147 $generated@@155 $generated@@149 $generated@@150))
))))) (= ($generated@@57 ($generated@@55 $generated@@147) $generated@@148 $generated@@149 $generated@@150)  (and (=> (< 0 ($generated@@38 $generated@@148)) (ite ($generated@@69 $generated@@149) true (let (($generated@@156 ($generated@@70 $generated@@149)))
(let (($generated@@157 ($generated@@71 $generated@@46 ($generated@@72 $generated@@149))))
 (and (and (<= ($generated@@56 1) $generated@@150) ($generated@@57 $generated@@147 ($generated@@36 $generated@@148 ($generated@@37 1)) ($generated@@73 $generated@@157) (- $generated@@150 1))) ($generated@@57 $generated@@147 ($generated@@36 $generated@@148 ($generated@@37 1)) $generated@@156 $generated@@150)))))) (=> (= ($generated@@56 0) ($generated@@38 $generated@@148)) (forall (($generated@@158 T@U) ) (!  (=> ($generated@@28 $generated@@158 $generated@@148) ($generated@@57 $generated@@147 $generated@@158 $generated@@149 $generated@@150))
 :pattern ( ($generated@@57 $generated@@147 $generated@@158 $generated@@149 $generated@@150))
)))))))
 :pattern ( ($generated@@57 ($generated@@55 $generated@@147) $generated@@148 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Int) ) (! (= ($generated@@57 ($generated@@55 $generated@@159) $generated@@160 $generated@@161 $generated@@162) ($generated@@57 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
 :pattern ( ($generated@@57 ($generated@@55 $generated@@159) $generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (! (<= 0 ($generated@@38 $generated@@163))
 :pattern ( ($generated@@38 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@42 ($generated@@86 $generated@@164 $generated@@165)) $generated@@6)
 :pattern ( ($generated@@86 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@72 ($generated@@86 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@86 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@70 ($generated@@86 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@86 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@170 ($generated@@49 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@49 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@42 ($generated@@102 $generated@@172)) $generated@@7)
 :pattern ( ($generated@@102 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@73 ($generated@@102 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@102 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@71 $generated@@175 ($generated@@95 $generated@@175 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@95 $generated@@175 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (and (and (and (=> ($generated@@28 $generated@@176 $generated@@177) (or (not (= $generated@@176 $generated@@177)) (not true))) (=> (and ($generated@@120 $generated@@176) (not ($generated@@120 $generated@@177))) ($generated@@28 $generated@@176 $generated@@177))) (=> (and ($generated@@120 $generated@@176) ($generated@@120 $generated@@177)) (= ($generated@@28 $generated@@176 $generated@@177) (< ($generated@@38 $generated@@176) ($generated@@38 $generated@@177))))) (=> (and ($generated@@28 $generated@@176 $generated@@177) ($generated@@120 $generated@@177)) ($generated@@120 $generated@@176)))
 :pattern ( ($generated@@28 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (< ($generated@@178 $generated@@179) ($generated@@178 ($generated@@102 $generated@@179)))
 :pattern ( ($generated@@102 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and ($generated@@50 $generated@@182) (and ($generated@@92 $generated@@180) ($generated@@32 $generated@@46 $generated@@180 ($generated@@49 $generated@@181) $generated@@182))) ($generated@@113 ($generated@@72 $generated@@180) $generated@@181 $generated@@182))
 :pattern ( ($generated@@113 ($generated@@72 $generated@@180) $generated@@181 $generated@@182))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@183 $generated@@193 $generated@@194 $generated@@195 ($generated@@189 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@198 $generated@@199) $generated@@196)
 :weight 0
)) (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@183 $generated@@200 $generated@@201 $generated@@202 ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@183 $generated@@209 $generated@@210 $generated@@211 ($generated@@189 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@183 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (= ($generated@@11 $generated@@184) 5)) (= ($generated@@11 $generated@@185) 6)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@187 $generated@@218 $generated@@219 ($generated@@190 $generated@@218 $generated@@219 $generated@@221 $generated@@222 $generated@@220) $generated@@222) $generated@@220)
 :weight 0
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@227 $generated@@228) (= ($generated@@187 $generated@@223 $generated@@224 ($generated@@190 $generated@@223 $generated@@224 $generated@@226 $generated@@227 $generated@@225) $generated@@228) ($generated@@187 $generated@@223 $generated@@224 $generated@@226 $generated@@228)))
 :weight 0
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (= ($generated@@11 ($generated@@188 $generated@@229 $generated@@230)) 7))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@191 ($generated@@188 $generated@@231 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@188 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@192 ($generated@@188 $generated@@233 $generated@@234)) $generated@@234)
 :pattern ( ($generated@@188 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (= ($generated@@16 ($generated@@183 $generated@@184 $generated@@185 $generated@@12 ($generated@@186 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (or (not (= $generated@@239 $generated@@235)) (not true)) ($generated@@16 ($generated@@71 $generated@@12 ($generated@@187 $generated@@185 $generated@@67 ($generated@@187 $generated@@184 ($generated@@188 $generated@@185 $generated@@67) $generated@@236 $generated@@239) $generated@@237)))) $generated@@238))
 :pattern ( ($generated@@183 $generated@@184 $generated@@185 $generated@@12 ($generated@@186 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> ($generated@@87 $generated@@242 ($generated@@49 $generated@@241)) (and (= ($generated@@95 $generated@@46 ($generated@@71 $generated@@46 $generated@@242)) $generated@@242) ($generated@@45 $generated@@46 ($generated@@71 $generated@@46 $generated@@242) ($generated@@49 $generated@@241))))
 :pattern ( ($generated@@87 $generated@@242 ($generated@@49 $generated@@241)))
)))
(assert (forall (($generated@@243 T@U) ) (!  (=> ($generated@@120 $generated@@243) (= $generated@@243 ($generated@@37 ($generated@@38 $generated@@243))))
 :pattern ( ($generated@@38 $generated@@243))
 :pattern ( ($generated@@120 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and ($generated@@50 $generated@@246) (and ($generated@@92 $generated@@244) ($generated@@32 $generated@@46 $generated@@244 ($generated@@49 $generated@@245) $generated@@246))) ($generated@@32 $generated@@46 ($generated@@70 $generated@@244) ($generated@@49 $generated@@245) $generated@@246))
 :pattern ( ($generated@@32 $generated@@46 ($generated@@70 $generated@@244) ($generated@@49 $generated@@245) $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and ($generated@@50 $generated@@248) ($generated@@45 $generated@@46 $generated@@247 $generated@@47)) ($generated@@32 $generated@@46 $generated@@247 $generated@@47 $generated@@248))
 :pattern ( ($generated@@32 $generated@@46 $generated@@247 $generated@@47 $generated@@248))
)))
(assert (= ($generated@@27 $generated@@33) $generated@@2))
(assert (= ($generated@@118 $generated@@33) $generated@@8))
(assert (= ($generated@@27 $generated@@47) $generated@@4))
(assert (= ($generated@@118 $generated@@47) $generated@@10))
(assert  (=> (<= 2 $generated@@53) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 Int) ) (!  (=> (or ($generated@@249 $generated@@251 $generated@@252) (and (< 2 $generated@@53) (and ($generated@@45 $generated@@46 $generated@@251 ($generated@@49 $generated@@47)) (<= ($generated@@56 0) $generated@@252)))) (and (=> (not ($generated@@69 $generated@@251)) (let (($generated@@253 ($generated@@70 $generated@@251)))
(let (($generated@@254 ($generated@@71 $generated@@46 ($generated@@72 $generated@@251))))
 (=> (<= ($generated@@56 1) $generated@@252) (and (and ($generated@@44 $generated@@254) ($generated@@249 ($generated@@73 $generated@@254) (- $generated@@252 1))) (=> ($generated@@54 $generated@@250 ($generated@@73 $generated@@254) (- $generated@@252 1)) ($generated@@249 $generated@@253 $generated@@252))))))) (= ($generated@@54 ($generated@@55 $generated@@250) $generated@@251 $generated@@252) (ite ($generated@@69 $generated@@251) true (let (($generated@@255 ($generated@@70 $generated@@251)))
(let (($generated@@256 ($generated@@71 $generated@@46 ($generated@@72 $generated@@251))))
 (and (and (<= ($generated@@56 1) $generated@@252) ($generated@@54 $generated@@250 ($generated@@73 $generated@@256) (- $generated@@252 1))) ($generated@@54 $generated@@250 $generated@@255 $generated@@252))))))))
 :pattern ( ($generated@@54 ($generated@@55 $generated@@250) $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and ($generated@@120 $generated@@258) (<= ($generated@@38 $generated@@258) ($generated@@38 $generated@@257))) (or (and (= $generated@@258 ($generated@@37 0)) (= ($generated@@36 $generated@@257 $generated@@258) $generated@@257)) (and (or (not (= $generated@@258 ($generated@@37 0))) (not true)) ($generated@@28 ($generated@@36 $generated@@257 $generated@@258) $generated@@257))))
 :pattern ( ($generated@@36 $generated@@257 $generated@@258))
)))
(assert  (=> (<= 3 $generated@@53) (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Int) ($generated@@262 T@U) ) (!  (=> (and (and ($generated@@45 $generated@@46 $generated@@260 ($generated@@49 $generated@@47)) (<= ($generated@@56 0) $generated@@261)) (= $generated@@262 ($generated@@37 0))) ($generated@@57 $generated@@259 $generated@@262 $generated@@260 $generated@@261))
 :pattern ( ($generated@@57 $generated@@259 $generated@@262 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@263 Int) ) (! (= ($generated@@95 $generated@@13 ($generated@@17 ($generated@@56 $generated@@263))) ($generated@@64 $generated@@67 ($generated@@95 $generated@@13 ($generated@@17 $generated@@263))))
 :pattern ( ($generated@@95 $generated@@13 ($generated@@17 ($generated@@56 $generated@@263))))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@102 ($generated@@64 $generated@@46 $generated@@264)) ($generated@@64 $generated@@46 ($generated@@102 $generated@@264)))
 :pattern ( ($generated@@102 ($generated@@64 $generated@@46 $generated@@264)))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@T) ) (! (= ($generated@@95 $generated@@266 ($generated@@64 $generated@@266 $generated@@265)) ($generated@@64 $generated@@67 ($generated@@95 $generated@@266 $generated@@265)))
 :pattern ( ($generated@@95 $generated@@266 ($generated@@64 $generated@@266 $generated@@265)))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and ($generated@@50 $generated@@268) (and ($generated@@44 $generated@@267) ($generated@@32 $generated@@46 $generated@@267 $generated@@47 $generated@@268))) ($generated@@32 $generated@@46 ($generated@@73 $generated@@267) ($generated@@49 $generated@@47) $generated@@268))
 :pattern ( ($generated@@32 $generated@@46 ($generated@@73 $generated@@267) ($generated@@49 $generated@@47) $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! ($generated@@32 $generated@@12 $generated@@270 $generated $generated@@269)
 :pattern ( ($generated@@32 $generated@@12 $generated@@270 $generated $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> ($generated@@50 $generated@@274) (= ($generated@@32 $generated@@46 ($generated@@86 $generated@@272 $generated@@273) ($generated@@49 $generated@@271) $generated@@274)  (and ($generated@@113 $generated@@272 $generated@@271 $generated@@274) ($generated@@32 $generated@@46 $generated@@273 ($generated@@49 $generated@@271) $generated@@274))))
 :pattern ( ($generated@@32 $generated@@46 ($generated@@86 $generated@@272 $generated@@273) ($generated@@49 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (! ($generated@@45 $generated@@12 $generated@@275 $generated)
 :pattern ( ($generated@@45 $generated@@12 $generated@@275 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@276 () Int)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () Int)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 () T@U)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@291 true))
(let (($generated@@292  (=> (and (not (and (<= ($generated@@56 1) $generated@@276) ($generated@@54 ($generated@@55 $generated@@277) ($generated@@73 $generated@@278) (- $generated@@276 1)))) (= (ControlFlow 0 6) 4)) $generated@@291)))
(let (($generated@@293  (=> (and (<= ($generated@@56 1) $generated@@276) ($generated@@54 ($generated@@55 $generated@@277) ($generated@@73 $generated@@278) (- $generated@@276 1))) (=> (and (and ($generated@@32 $generated@@46 $generated@@279 ($generated@@49 $generated@@47) $generated@@280) ($generated@@32 $generated@@13 ($generated@@17 $generated@@276) $generated@@33 $generated@@280)) (and ($generated@@249 $generated@@279 $generated@@276) (= (ControlFlow 0 5) 4))) $generated@@291))))
(let (($generated@@294  (=> (< $generated@@276 ($generated@@56 1)) (and (=> (= (ControlFlow 0 9) 5) $generated@@293) (=> (= (ControlFlow 0 9) 6) $generated@@292)))))
(let (($generated@@295  (=> (and (and (<= ($generated@@56 1) $generated@@276) ($generated@@44 $generated@@278)) (and (= $generated@@281 ($generated@@73 $generated@@278)) ($generated@@32 $generated@@46 $generated@@281 ($generated@@49 $generated@@47) $generated@@280))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@45 $generated@@13 ($generated@@17 (- $generated@@276 1)) $generated@@33)) (=> ($generated@@45 $generated@@13 ($generated@@17 (- $generated@@276 1)) $generated@@33) (=> (= $generated@@282 (- $generated@@276 1)) (=> (and ($generated@@32 $generated@@13 ($generated@@17 $generated@@282) $generated@@33 $generated@@280) ($generated@@249 ($generated@@73 $generated@@278) (- $generated@@276 1))) (and (=> (= (ControlFlow 0 7) 5) $generated@@293) (=> (= (ControlFlow 0 7) 6) $generated@@292)))))))))
(let (($generated@@296  (=> (= $generated@@283 ($generated@@86 ($generated@@95 $generated@@46 $generated@@284) $generated@@285)) (=> (and (and (and ($generated@@45 $generated@@46 $generated@@284 $generated@@47) ($generated@@45 $generated@@46 $generated@@285 ($generated@@49 $generated@@47))) (and (= $generated@@286 $generated@@285) ($generated@@45 $generated@@46 $generated@@286 ($generated@@49 $generated@@47)))) (and (and (= $generated@@279 $generated@@286) (= $generated@@287 $generated@@284)) (and ($generated@@45 $generated@@46 $generated@@287 $generated@@47) (= $generated@@278 $generated@@287)))) (and (=> (= (ControlFlow 0 10) 7) $generated@@295) (=> (= (ControlFlow 0 10) 9) $generated@@294))))))
(let (($generated@@297 true))
(let (($generated@@298  (=> (or (not (= $generated@@283 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 11) 10) $generated@@296) (=> (= (ControlFlow 0 11) 3) $generated@@297)))))
(let (($generated@@299 true))
(let (($generated@@300 true))
(let (($generated@@301  (=> (= $generated@@288 ($generated@@186 $generated@@289 $generated@@280 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 12) 1) $generated@@300) (=> (= (ControlFlow 0 12) 2) $generated@@299)) (=> (= (ControlFlow 0 12) 11) $generated@@298)))))
(let (($generated@@302  (=> (and ($generated@@50 $generated@@280) ($generated@@290 $generated@@280)) (=> (and (and ($generated@@45 $generated@@46 $generated@@283 ($generated@@49 $generated@@47)) (<= ($generated@@56 0) $generated@@276)) (and (= 2 $generated@@53) (= (ControlFlow 0 13) 12))) $generated@@301))))
$generated@@302)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
