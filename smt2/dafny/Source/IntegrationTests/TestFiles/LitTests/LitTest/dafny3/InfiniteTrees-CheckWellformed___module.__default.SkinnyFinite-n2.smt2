(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (Int) T@U)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@50 () Int)
(declare-fun $generated@@51 (T@U T@U Int) Bool)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (Int) Int)
(declare-fun $generated@@54 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U T@U Int) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) Bool)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@118 (T@U) Bool)
(declare-fun $generated@@121 (T@U Int) T@U)
(declare-fun $generated@@122 (Int) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@187 (T@U) Int)
(declare-fun $generated@@192 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@193 () T@T)
(declare-fun $generated@@194 () T@T)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@258 (T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@11 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@11 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 Int) ($generated@@38 Int) ) (!  (=> (and (and (<= 0 $generated@@37) (<= 0 $generated@@38)) (<= (+ $generated@@37 $generated@@38) ($generated@@35 $generated@@36))) (= ($generated@@33 ($generated@@33 $generated@@36 ($generated@@34 $generated@@37)) ($generated@@34 $generated@@38)) ($generated@@33 $generated@@36 ($generated@@34 (+ $generated@@37 $generated@@38)))))
 :pattern ( ($generated@@33 ($generated@@33 $generated@@36 ($generated@@34 $generated@@37)) ($generated@@34 $generated@@38)))
)))
(assert (= ($generated@@39 $generated@@40) $generated@@3))
(assert (= ($generated@@9 $generated@@43) 3))
(assert (forall (($generated@@45 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@45 $generated@@44) ($generated@@41 $generated@@45))
 :pattern ( ($generated@@41 $generated@@45) ($generated@@42 $generated@@43 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> ($generated@@47 $generated@@49) ($generated@@29 $generated@@43 $generated@@40 ($generated@@46 $generated@@48) $generated@@49))
 :pattern ( ($generated@@29 $generated@@43 $generated@@40 ($generated@@46 $generated@@48) $generated@@49))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 Int) ) (!  (=> (and (and ($generated@@42 $generated@@43 $generated@@56 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@57)) ($generated@@51 ($generated@@52 $generated@@55) $generated@@56 $generated@@57)) (forall (($generated@@58 T@U) ) (! ($generated@@54 ($generated@@52 $generated@@55) $generated@@58 $generated@@56 $generated@@57)
 :pattern ( ($generated@@54 ($generated@@52 $generated@@55) $generated@@58 $generated@@56 $generated@@57))
)))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@55) $generated@@56 $generated@@57))
))))
(assert (forall (($generated@@59 T@U) ) (! ($generated@@42 $generated@@43 $generated@@40 ($generated@@46 $generated@@59))
 :pattern ( ($generated@@42 $generated@@43 $generated@@40 ($generated@@46 $generated@@59)))
)))
(assert (forall (($generated@@60 Int) ) (! (= ($generated@@53 $generated@@60) $generated@@60)
 :pattern ( ($generated@@53 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@63 $generated@@62))
)))
(assert (= ($generated@@9 $generated@@64) 4))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 Int) ) (!  (=> (or ($generated@@65 ($generated@@61 $generated@@64 $generated@@72) ($generated@@61 $generated@@43 $generated@@73) ($generated@@53 $generated@@74)) (and (< 3 $generated@@50) (and ($generated@@42 $generated@@43 $generated@@73 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@74)))) (and (and (=> (< 0 ($generated@@35 $generated@@72)) (=> (not ($generated@@14 ($generated@@61 $generated@@10 ($generated@@13 ($generated@@66 ($generated@@61 $generated@@43 $generated@@73)))))) (let (($generated@@75 ($generated@@61 $generated@@43 ($generated@@67 ($generated@@61 $generated@@43 $generated@@73)))))
(let (($generated@@76 ($generated@@61 $generated@@43 ($generated@@68 $generated@@43 ($generated@@69 ($generated@@61 $generated@@43 $generated@@73))))))
 (=> (<= ($generated@@53 1) ($generated@@53 $generated@@74)) (and (and ($generated@@41 $generated@@76) ($generated@@65 ($generated@@33 $generated@@72 ($generated@@34 1)) ($generated@@70 $generated@@76) ($generated@@53 (- $generated@@74 1)))) (=> ($generated@@54 ($generated@@52 $generated@@71) ($generated@@33 $generated@@72 ($generated@@34 1)) ($generated@@70 $generated@@76) ($generated@@53 (- $generated@@74 1))) ($generated@@65 ($generated@@33 $generated@@72 ($generated@@34 1)) $generated@@75 ($generated@@53 $generated@@74))))))))) (=> (=> (< 0 ($generated@@35 $generated@@72)) (ite ($generated@@66 ($generated@@61 $generated@@43 $generated@@73)) true (let (($generated@@77 ($generated@@61 $generated@@43 ($generated@@67 ($generated@@61 $generated@@43 $generated@@73)))))
(let (($generated@@78 ($generated@@61 $generated@@43 ($generated@@68 $generated@@43 ($generated@@69 ($generated@@61 $generated@@43 $generated@@73))))))
 (and (and (<= ($generated@@53 1) ($generated@@53 $generated@@74)) ($generated@@54 ($generated@@52 $generated@@71) ($generated@@33 $generated@@72 ($generated@@34 1)) ($generated@@61 $generated@@43 ($generated@@70 $generated@@78)) ($generated@@53 (- $generated@@74 1)))) ($generated@@54 ($generated@@52 $generated@@71) ($generated@@33 $generated@@72 ($generated@@34 1)) $generated@@77 ($generated@@53 $generated@@74))))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@72)) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@25 $generated@@79 $generated@@72) ($generated@@65 $generated@@79 $generated@@73 $generated@@74))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@71) $generated@@79 $generated@@73 $generated@@74))
))))) (= ($generated@@54 ($generated@@52 $generated@@71) ($generated@@61 $generated@@64 $generated@@72) ($generated@@61 $generated@@43 $generated@@73) ($generated@@53 $generated@@74))  (and (=> (< 0 ($generated@@35 $generated@@72)) (ite ($generated@@66 ($generated@@61 $generated@@43 $generated@@73)) true (let (($generated@@80 ($generated@@61 $generated@@43 ($generated@@67 ($generated@@61 $generated@@43 $generated@@73)))))
(let (($generated@@81 ($generated@@61 $generated@@43 ($generated@@68 $generated@@43 ($generated@@69 ($generated@@61 $generated@@43 $generated@@73))))))
 (and (and (<= ($generated@@53 1) ($generated@@53 $generated@@74)) ($generated@@54 ($generated@@52 $generated@@71) ($generated@@33 $generated@@72 ($generated@@34 1)) ($generated@@61 $generated@@43 ($generated@@70 $generated@@81)) ($generated@@53 (- $generated@@74 1)))) ($generated@@54 ($generated@@52 $generated@@71) ($generated@@33 $generated@@72 ($generated@@34 1)) $generated@@80 ($generated@@53 $generated@@74))))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@72)) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@25 $generated@@82 $generated@@72) ($generated@@54 ($generated@@52 $generated@@71) $generated@@82 $generated@@73 $generated@@74))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@71) $generated@@82 $generated@@73 $generated@@74))
)))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@52 $generated@@71) ($generated@@61 $generated@@64 $generated@@72) ($generated@@61 $generated@@43 $generated@@73) ($generated@@53 $generated@@74)))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@42 $generated@@43 ($generated@@83 $generated@@86 $generated@@87) ($generated@@46 $generated@@85))  (and ($generated@@84 $generated@@86 $generated@@85) ($generated@@42 $generated@@43 $generated@@87 ($generated@@46 $generated@@85))))
 :pattern ( ($generated@@42 $generated@@43 ($generated@@83 $generated@@86 $generated@@87) ($generated@@46 $generated@@85)))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@66 $generated@@88) (= ($generated@@39 $generated@@88) $generated@@3))
 :pattern ( ($generated@@66 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@89 $generated@@90) (= ($generated@@39 $generated@@90) $generated@@4))
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@41 $generated@@91) (= ($generated@@39 $generated@@91) $generated@@5))
 :pattern ( ($generated@@41 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@68 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@68 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@89 $generated@@95) (exists (($generated@@96 T@U) ($generated@@97 T@U) ) (= $generated@@95 ($generated@@83 $generated@@96 $generated@@97))))
 :pattern ( ($generated@@89 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@66 $generated@@98) (= $generated@@98 $generated@@40))
 :pattern ( ($generated@@66 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@41 $generated@@100) (exists (($generated@@101 T@U) ) (= $generated@@100 ($generated@@99 $generated@@101))))
 :pattern ( ($generated@@41 $generated@@100))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 Int) ) (!  (=> (and (and ($generated@@42 $generated@@43 $generated@@103 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@104)) (forall (($generated@@105 T@U) ) (! ($generated@@54 ($generated@@52 $generated@@102) $generated@@105 $generated@@103 $generated@@104)
 :pattern ( ($generated@@54 ($generated@@52 $generated@@102) $generated@@105 $generated@@103 $generated@@104))
))) ($generated@@51 ($generated@@52 $generated@@102) $generated@@103 $generated@@104))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@102) $generated@@103 $generated@@104))
))))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@42 $generated@@11 $generated@@106 $generated@@30) (<= ($generated@@53 0) ($generated@@16 $generated@@106)))
 :pattern ( ($generated@@42 $generated@@11 $generated@@106 $generated@@30))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 Int) ) (! (= ($generated@@51 ($generated@@52 $generated@@107) $generated@@108 $generated@@109) ($generated@@51 $generated@@107 $generated@@108 $generated@@109))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@110 ($generated@@92 $generated@@114 $generated@@111) $generated@@112 $generated@@113) ($generated@@29 $generated@@114 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@110 ($generated@@92 $generated@@114 $generated@@111) $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@117 T@U) ) (!  (and (= ($generated@@115 ($generated@@46 $generated@@117)) $generated@@1) (= ($generated@@116 ($generated@@46 $generated@@117)) $generated@@7))
 :pattern ( ($generated@@46 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and ($generated@@118 $generated@@120) (<= ($generated@@35 $generated@@120) ($generated@@35 $generated@@119))) (and (= ($generated@@118 ($generated@@33 $generated@@119 $generated@@120)) ($generated@@118 $generated@@119)) (= ($generated@@35 ($generated@@33 $generated@@119 $generated@@120)) (- ($generated@@35 $generated@@119) ($generated@@35 $generated@@120)))))
 :pattern ( ($generated@@33 $generated@@119 $generated@@120))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@123 T@U) ($generated@@124 Int) ) (!  (=> (or ($generated@@122 $generated@@124) (and (< 3 $generated@@50) (<= ($generated@@53 0) $generated@@124))) (and (=> (or (not (= $generated@@124 ($generated@@53 0))) (not true)) ($generated@@122 (- $generated@@124 1))) (= ($generated@@121 ($generated@@52 $generated@@123) $generated@@124) (ite (= $generated@@124 ($generated@@53 0)) ($generated@@99 ($generated@@61 $generated@@43 $generated@@40)) ($generated@@99 ($generated@@83 ($generated@@92 $generated@@43 ($generated@@121 $generated@@123 (- $generated@@124 1))) ($generated@@61 $generated@@43 $generated@@40)))))))
 :pattern ( ($generated@@121 ($generated@@52 $generated@@123) $generated@@124))
))))
(assert (forall (($generated@@125 Int) ) (!  (=> (<= 0 $generated@@125) (and ($generated@@118 ($generated@@34 $generated@@125)) (= ($generated@@35 ($generated@@34 $generated@@125)) $generated@@125)))
 :pattern ( ($generated@@34 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@84 $generated@@126 $generated@@30) (and (= ($generated@@92 $generated@@11 ($generated@@68 $generated@@11 $generated@@126)) $generated@@126) ($generated@@42 $generated@@11 ($generated@@68 $generated@@11 $generated@@126) $generated@@30)))
 :pattern ( ($generated@@84 $generated@@126 $generated@@30))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@84 $generated@@127 $generated@@44) (and (= ($generated@@92 $generated@@43 ($generated@@68 $generated@@43 $generated@@127)) $generated@@127) ($generated@@42 $generated@@43 ($generated@@68 $generated@@43 $generated@@127) $generated@@44)))
 :pattern ( ($generated@@84 $generated@@127 $generated@@44))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (or ($generated@@25 $generated@@128 $generated@@129) (= $generated@@128 $generated@@129)) ($generated@@25 $generated@@129 $generated@@128))
 :pattern ( ($generated@@25 $generated@@128 $generated@@129) ($generated@@25 $generated@@129 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@42 $generated@@43 ($generated@@99 $generated@@130) $generated@@44) ($generated@@42 $generated@@43 $generated@@130 ($generated@@46 $generated@@44)))
 :pattern ( ($generated@@42 $generated@@43 ($generated@@99 $generated@@130) $generated@@44))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 Int) ) (!  (=> (or ($generated@@65 ($generated@@61 $generated@@64 $generated@@132) $generated@@133 $generated@@134) (and (< 3 $generated@@50) (and ($generated@@42 $generated@@43 $generated@@133 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@134)))) (and (and (=> (< 0 ($generated@@35 $generated@@132)) (=> (not ($generated@@66 $generated@@133)) (let (($generated@@135 ($generated@@67 $generated@@133)))
(let (($generated@@136 ($generated@@68 $generated@@43 ($generated@@69 $generated@@133))))
 (=> (<= ($generated@@53 1) $generated@@134) (and (and ($generated@@41 $generated@@136) ($generated@@65 ($generated@@33 $generated@@132 ($generated@@34 1)) ($generated@@70 $generated@@136) (- $generated@@134 1))) (=> ($generated@@54 ($generated@@52 $generated@@131) ($generated@@33 $generated@@132 ($generated@@34 1)) ($generated@@70 $generated@@136) (- $generated@@134 1)) ($generated@@65 ($generated@@33 $generated@@132 ($generated@@34 1)) $generated@@135 $generated@@134)))))))) (=> (=> (< 0 ($generated@@35 $generated@@132)) (ite ($generated@@66 $generated@@133) true (let (($generated@@137 ($generated@@67 $generated@@133)))
(let (($generated@@138 ($generated@@68 $generated@@43 ($generated@@69 $generated@@133))))
 (and (and (<= ($generated@@53 1) $generated@@134) ($generated@@54 ($generated@@52 $generated@@131) ($generated@@33 $generated@@132 ($generated@@34 1)) ($generated@@70 $generated@@138) (- $generated@@134 1))) ($generated@@54 ($generated@@52 $generated@@131) ($generated@@33 $generated@@132 ($generated@@34 1)) $generated@@137 $generated@@134)))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@132)) (forall (($generated@@139 T@U) ) (!  (=> ($generated@@25 $generated@@139 $generated@@132) ($generated@@65 $generated@@139 $generated@@133 $generated@@134))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@131) $generated@@139 $generated@@133 $generated@@134))
))))) (= ($generated@@54 ($generated@@52 $generated@@131) ($generated@@61 $generated@@64 $generated@@132) $generated@@133 $generated@@134)  (and (=> (< 0 ($generated@@35 $generated@@132)) (ite ($generated@@66 $generated@@133) true (let (($generated@@140 ($generated@@67 $generated@@133)))
(let (($generated@@141 ($generated@@68 $generated@@43 ($generated@@69 $generated@@133))))
 (and (and (<= ($generated@@53 1) $generated@@134) ($generated@@54 ($generated@@52 $generated@@131) ($generated@@33 $generated@@132 ($generated@@34 1)) ($generated@@70 $generated@@141) (- $generated@@134 1))) ($generated@@54 ($generated@@52 $generated@@131) ($generated@@33 $generated@@132 ($generated@@34 1)) $generated@@140 $generated@@134)))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@132)) (forall (($generated@@142 T@U) ) (!  (=> ($generated@@25 $generated@@142 $generated@@132) ($generated@@54 ($generated@@52 $generated@@131) $generated@@142 $generated@@133 $generated@@134))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@131) $generated@@142 $generated@@133 $generated@@134))
)))))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@52 $generated@@131) ($generated@@61 $generated@@64 $generated@@132) $generated@@133 $generated@@134))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@144 ($generated@@46 $generated@@143)) (or ($generated@@66 $generated@@144) ($generated@@89 $generated@@144)))
 :pattern ( ($generated@@89 $generated@@144) ($generated@@42 $generated@@43 $generated@@144 ($generated@@46 $generated@@143)))
 :pattern ( ($generated@@66 $generated@@144) ($generated@@42 $generated@@43 $generated@@144 ($generated@@46 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@84 ($generated@@92 $generated@@147 $generated@@145) $generated@@146) ($generated@@42 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@84 ($generated@@92 $generated@@147 $generated@@145) $generated@@146))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Int) ) (!  (=> (or ($generated@@65 $generated@@149 $generated@@150 $generated@@151) (and (< 3 $generated@@50) (and ($generated@@42 $generated@@43 $generated@@150 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@151)))) (and (and (=> (< 0 ($generated@@35 $generated@@149)) (=> (not ($generated@@66 $generated@@150)) (let (($generated@@152 ($generated@@67 $generated@@150)))
(let (($generated@@153 ($generated@@68 $generated@@43 ($generated@@69 $generated@@150))))
 (=> (<= ($generated@@53 1) $generated@@151) (and (and ($generated@@41 $generated@@153) ($generated@@65 ($generated@@33 $generated@@149 ($generated@@34 1)) ($generated@@70 $generated@@153) (- $generated@@151 1))) (=> ($generated@@54 $generated@@148 ($generated@@33 $generated@@149 ($generated@@34 1)) ($generated@@70 $generated@@153) (- $generated@@151 1)) ($generated@@65 ($generated@@33 $generated@@149 ($generated@@34 1)) $generated@@152 $generated@@151)))))))) (=> (=> (< 0 ($generated@@35 $generated@@149)) (ite ($generated@@66 $generated@@150) true (let (($generated@@154 ($generated@@67 $generated@@150)))
(let (($generated@@155 ($generated@@68 $generated@@43 ($generated@@69 $generated@@150))))
 (and (and (<= ($generated@@53 1) $generated@@151) ($generated@@54 $generated@@148 ($generated@@33 $generated@@149 ($generated@@34 1)) ($generated@@70 $generated@@155) (- $generated@@151 1))) ($generated@@54 $generated@@148 ($generated@@33 $generated@@149 ($generated@@34 1)) $generated@@154 $generated@@151)))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@149)) (forall (($generated@@156 T@U) ) (!  (=> ($generated@@25 $generated@@156 $generated@@149) ($generated@@65 $generated@@156 $generated@@150 $generated@@151))
 :pattern ( ($generated@@54 $generated@@148 $generated@@156 $generated@@150 $generated@@151))
))))) (= ($generated@@54 ($generated@@52 $generated@@148) $generated@@149 $generated@@150 $generated@@151)  (and (=> (< 0 ($generated@@35 $generated@@149)) (ite ($generated@@66 $generated@@150) true (let (($generated@@157 ($generated@@67 $generated@@150)))
(let (($generated@@158 ($generated@@68 $generated@@43 ($generated@@69 $generated@@150))))
 (and (and (<= ($generated@@53 1) $generated@@151) ($generated@@54 $generated@@148 ($generated@@33 $generated@@149 ($generated@@34 1)) ($generated@@70 $generated@@158) (- $generated@@151 1))) ($generated@@54 $generated@@148 ($generated@@33 $generated@@149 ($generated@@34 1)) $generated@@157 $generated@@151)))))) (=> (= ($generated@@53 0) ($generated@@35 $generated@@149)) (forall (($generated@@159 T@U) ) (!  (=> ($generated@@25 $generated@@159 $generated@@149) ($generated@@54 $generated@@148 $generated@@159 $generated@@150 $generated@@151))
 :pattern ( ($generated@@54 $generated@@148 $generated@@159 $generated@@150 $generated@@151))
)))))))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@148) $generated@@149 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Int) ) (! (= ($generated@@54 ($generated@@52 $generated@@160) $generated@@161 $generated@@162 $generated@@163) ($generated@@54 $generated@@160 $generated@@161 $generated@@162 $generated@@163))
 :pattern ( ($generated@@54 ($generated@@52 $generated@@160) $generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (! (<= 0 ($generated@@35 $generated@@164))
 :pattern ( ($generated@@35 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@39 ($generated@@83 $generated@@165 $generated@@166)) $generated@@4)
 :pattern ( ($generated@@83 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@69 ($generated@@83 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@83 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@67 ($generated@@83 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@83 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@171 ($generated@@46 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@46 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@39 ($generated@@99 $generated@@173)) $generated@@5)
 :pattern ( ($generated@@99 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@70 ($generated@@99 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@99 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@68 $generated@@176 ($generated@@92 $generated@@176 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@92 $generated@@176 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@177 $generated@@178) (or (not (= $generated@@177 $generated@@178)) (not true))) (=> (and ($generated@@118 $generated@@177) (not ($generated@@118 $generated@@178))) ($generated@@25 $generated@@177 $generated@@178))) (=> (and ($generated@@118 $generated@@177) ($generated@@118 $generated@@178)) (= ($generated@@25 $generated@@177 $generated@@178) (< ($generated@@35 $generated@@177) ($generated@@35 $generated@@178))))) (=> (and ($generated@@25 $generated@@177 $generated@@178) ($generated@@118 $generated@@178)) ($generated@@118 $generated@@177)))
 :pattern ( ($generated@@25 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ) (! (= ($generated@@121 ($generated@@52 $generated@@179) $generated@@180) ($generated@@121 $generated@@179 $generated@@180))
 :pattern ( ($generated@@121 ($generated@@52 $generated@@179) $generated@@180))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@182 T@U) ($generated@@183 Int) ) (!  (=> (or ($generated@@122 $generated@@183) (and (< 3 $generated@@50) (<= ($generated@@53 0) $generated@@183))) (and (forall (($generated@@184 Int) ) (!  (=> (<= ($generated@@53 0) $generated@@184) (= ($generated@@51 ($generated@@52 $generated@@181) ($generated@@70 ($generated@@121 $generated@@182 $generated@@183)) $generated@@184) (<= $generated@@183 $generated@@184)))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@181) ($generated@@70 ($generated@@121 $generated@@182 $generated@@183)) $generated@@184))
)) ($generated@@42 $generated@@43 ($generated@@121 $generated@@182 $generated@@183) $generated@@44)))
 :pattern ( ($generated@@121 $generated@@182 $generated@@183))
))))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@185 T@U) ($generated@@186 Int) ) (!  (=> (or ($generated@@122 ($generated@@53 $generated@@186)) (and (< 3 $generated@@50) (<= ($generated@@53 0) $generated@@186))) (and (=> (or (not (= ($generated@@53 $generated@@186) ($generated@@53 0))) (not true)) ($generated@@122 ($generated@@53 (- $generated@@186 1)))) (= ($generated@@121 ($generated@@52 $generated@@185) ($generated@@53 $generated@@186)) (ite (= ($generated@@53 $generated@@186) ($generated@@53 0)) ($generated@@99 ($generated@@61 $generated@@43 $generated@@40)) ($generated@@99 ($generated@@61 $generated@@43 ($generated@@83 ($generated@@92 $generated@@43 ($generated@@61 $generated@@43 ($generated@@121 ($generated@@52 $generated@@185) ($generated@@53 (- $generated@@186 1))))) ($generated@@61 $generated@@43 $generated@@40))))))))
 :weight 3
 :pattern ( ($generated@@121 ($generated@@52 $generated@@185) ($generated@@53 $generated@@186)))
))))
(assert (forall (($generated@@188 T@U) ) (! (< ($generated@@187 $generated@@188) ($generated@@187 ($generated@@99 $generated@@188)))
 :pattern ( ($generated@@99 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and ($generated@@47 $generated@@191) (and ($generated@@89 $generated@@189) ($generated@@29 $generated@@43 $generated@@189 ($generated@@46 $generated@@190) $generated@@191))) ($generated@@110 ($generated@@69 $generated@@189) $generated@@190 $generated@@191))
 :pattern ( ($generated@@110 ($generated@@69 $generated@@189) $generated@@190 $generated@@191))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@192 $generated@@202 $generated@@203 $generated@@204 ($generated@@198 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@207 $generated@@208) $generated@@205)
 :weight 0
)) (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@192 $generated@@209 $generated@@210 $generated@@211 ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@T) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@192 $generated@@218 $generated@@219 $generated@@220 ($generated@@198 $generated@@218 $generated@@219 $generated@@220 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@192 $generated@@218 $generated@@219 $generated@@220 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (= ($generated@@9 $generated@@193) 5)) (= ($generated@@9 $generated@@194) 6)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (= ($generated@@196 $generated@@227 $generated@@228 ($generated@@199 $generated@@227 $generated@@228 $generated@@230 $generated@@231 $generated@@229) $generated@@231) $generated@@229)
 :weight 0
))) (forall (($generated@@232 T@T) ($generated@@233 T@T) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@236 $generated@@237) (= ($generated@@196 $generated@@232 $generated@@233 ($generated@@199 $generated@@232 $generated@@233 $generated@@235 $generated@@236 $generated@@234) $generated@@237) ($generated@@196 $generated@@232 $generated@@233 $generated@@235 $generated@@237)))
 :weight 0
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (= ($generated@@9 ($generated@@197 $generated@@238 $generated@@239)) 7))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@200 ($generated@@197 $generated@@240 $generated@@241)) $generated@@240)
 :pattern ( ($generated@@197 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@201 ($generated@@197 $generated@@242 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@197 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (= ($generated@@14 ($generated@@192 $generated@@193 $generated@@194 $generated@@10 ($generated@@195 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (or (not (= $generated@@248 $generated@@244)) (not true)) ($generated@@14 ($generated@@68 $generated@@10 ($generated@@196 $generated@@194 $generated@@64 ($generated@@196 $generated@@193 ($generated@@197 $generated@@194 $generated@@64) $generated@@245 $generated@@248) $generated@@246)))) $generated@@247))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@10 ($generated@@195 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> ($generated@@84 $generated@@251 ($generated@@46 $generated@@250)) (and (= ($generated@@92 $generated@@43 ($generated@@68 $generated@@43 $generated@@251)) $generated@@251) ($generated@@42 $generated@@43 ($generated@@68 $generated@@43 $generated@@251) ($generated@@46 $generated@@250))))
 :pattern ( ($generated@@84 $generated@@251 ($generated@@46 $generated@@250)))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> ($generated@@118 $generated@@252) (= $generated@@252 ($generated@@34 ($generated@@35 $generated@@252))))
 :pattern ( ($generated@@35 $generated@@252))
 :pattern ( ($generated@@118 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and ($generated@@47 $generated@@255) (and ($generated@@89 $generated@@253) ($generated@@29 $generated@@43 $generated@@253 ($generated@@46 $generated@@254) $generated@@255))) ($generated@@29 $generated@@43 ($generated@@67 $generated@@253) ($generated@@46 $generated@@254) $generated@@255))
 :pattern ( ($generated@@29 $generated@@43 ($generated@@67 $generated@@253) ($generated@@46 $generated@@254) $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and ($generated@@47 $generated@@257) ($generated@@42 $generated@@43 $generated@@256 $generated@@44)) ($generated@@29 $generated@@43 $generated@@256 $generated@@44 $generated@@257))
 :pattern ( ($generated@@29 $generated@@43 $generated@@256 $generated@@44 $generated@@257))
)))
(assert (= ($generated@@115 $generated@@30) $generated@@0))
(assert (= ($generated@@116 $generated@@30) $generated@@6))
(assert (= ($generated@@115 $generated@@44) $generated@@2))
(assert (= ($generated@@116 $generated@@44) $generated@@8))
(assert  (=> (<= 2 $generated@@50) (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Int) ) (!  (=> (or ($generated@@258 $generated@@260 $generated@@261) (and (< 2 $generated@@50) (and ($generated@@42 $generated@@43 $generated@@260 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@261)))) (and (=> (not ($generated@@66 $generated@@260)) (let (($generated@@262 ($generated@@67 $generated@@260)))
(let (($generated@@263 ($generated@@68 $generated@@43 ($generated@@69 $generated@@260))))
 (=> (<= ($generated@@53 1) $generated@@261) (and (and ($generated@@41 $generated@@263) ($generated@@258 ($generated@@70 $generated@@263) (- $generated@@261 1))) (=> ($generated@@51 $generated@@259 ($generated@@70 $generated@@263) (- $generated@@261 1)) ($generated@@258 $generated@@262 $generated@@261))))))) (= ($generated@@51 ($generated@@52 $generated@@259) $generated@@260 $generated@@261) (ite ($generated@@66 $generated@@260) true (let (($generated@@264 ($generated@@67 $generated@@260)))
(let (($generated@@265 ($generated@@68 $generated@@43 ($generated@@69 $generated@@260))))
 (and (and (<= ($generated@@53 1) $generated@@261) ($generated@@51 $generated@@259 ($generated@@70 $generated@@265) (- $generated@@261 1))) ($generated@@51 $generated@@259 $generated@@264 $generated@@261))))))))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@259) $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and ($generated@@118 $generated@@267) (<= ($generated@@35 $generated@@267) ($generated@@35 $generated@@266))) (or (and (= $generated@@267 ($generated@@34 0)) (= ($generated@@33 $generated@@266 $generated@@267) $generated@@266)) (and (or (not (= $generated@@267 ($generated@@34 0))) (not true)) ($generated@@25 ($generated@@33 $generated@@266 $generated@@267) $generated@@266))))
 :pattern ( ($generated@@33 $generated@@266 $generated@@267))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Int) ($generated@@271 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@43 $generated@@269 ($generated@@46 $generated@@44)) (<= ($generated@@53 0) $generated@@270)) (= $generated@@271 ($generated@@34 0))) ($generated@@54 $generated@@268 $generated@@271 $generated@@269 $generated@@270))
 :pattern ( ($generated@@54 $generated@@268 $generated@@271 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@92 $generated@@11 ($generated@@15 ($generated@@53 $generated@@272))) ($generated@@61 $generated@@64 ($generated@@92 $generated@@11 ($generated@@15 $generated@@272))))
 :pattern ( ($generated@@92 $generated@@11 ($generated@@15 ($generated@@53 $generated@@272))))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@99 ($generated@@61 $generated@@43 $generated@@273)) ($generated@@61 $generated@@43 ($generated@@99 $generated@@273)))
 :pattern ( ($generated@@99 ($generated@@61 $generated@@43 $generated@@273)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@T) ) (! (= ($generated@@92 $generated@@275 ($generated@@61 $generated@@275 $generated@@274)) ($generated@@61 $generated@@64 ($generated@@92 $generated@@275 $generated@@274)))
 :pattern ( ($generated@@92 $generated@@275 ($generated@@61 $generated@@275 $generated@@274)))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and ($generated@@47 $generated@@277) (and ($generated@@41 $generated@@276) ($generated@@29 $generated@@43 $generated@@276 $generated@@44 $generated@@277))) ($generated@@29 $generated@@43 ($generated@@70 $generated@@276) ($generated@@46 $generated@@44) $generated@@277))
 :pattern ( ($generated@@29 $generated@@43 ($generated@@70 $generated@@276) ($generated@@46 $generated@@44) $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> ($generated@@47 $generated@@281) (= ($generated@@29 $generated@@43 ($generated@@83 $generated@@279 $generated@@280) ($generated@@46 $generated@@278) $generated@@281)  (and ($generated@@110 $generated@@279 $generated@@278 $generated@@281) ($generated@@29 $generated@@43 $generated@@280 ($generated@@46 $generated@@278) $generated@@281))))
 :pattern ( ($generated@@29 $generated@@43 ($generated@@83 $generated@@279 $generated@@280) ($generated@@46 $generated@@278) $generated@@281))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@282 () Int)
(declare-fun $generated@@283 () Int)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 () Int)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 () T@U)
(declare-fun $generated@@288 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@289  (=> (= (ControlFlow 0 5) (- 0 4)) (forall (($generated@@290 Int) ) (!  (=> (<= ($generated@@53 0) $generated@@290) (= ($generated@@51 ($generated@@52 ($generated@@52 $generated@@181)) ($generated@@70 ($generated@@121 ($generated@@52 ($generated@@52 $generated@@181)) $generated@@282)) $generated@@290) (<= $generated@@282 $generated@@290)))
 :pattern ( ($generated@@51 ($generated@@52 ($generated@@52 $generated@@181)) ($generated@@70 ($generated@@121 ($generated@@52 ($generated@@52 $generated@@181)) $generated@@282)) $generated@@290))
)))))
(let (($generated@@291  (=> (or (not (= $generated@@282 ($generated@@53 0))) (not true)) (and (=> (= (ControlFlow 0 7) (- 0 10)) ($generated@@42 $generated@@11 ($generated@@15 (- $generated@@282 1)) $generated@@30)) (=> ($generated@@42 $generated@@11 ($generated@@15 (- $generated@@282 1)) $generated@@30) (=> (and (= $generated@@283 (- $generated@@282 1)) ($generated@@29 $generated@@11 ($generated@@15 $generated@@283) $generated@@30 $generated@@284)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (<= 0 $generated@@282) (= $generated@@283 $generated@@282))) (=> (or (<= 0 $generated@@282) (= $generated@@283 $generated@@282)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (< $generated@@283 $generated@@282)) (=> (< $generated@@283 $generated@@282) (=> (and ($generated@@122 (- $generated@@282 1)) ($generated@@41 ($generated@@121 ($generated@@52 $generated@@181) (- $generated@@282 1)))) (=> (and (and (= ($generated@@121 ($generated@@52 $generated@@181) $generated@@282) ($generated@@99 ($generated@@83 ($generated@@92 $generated@@43 ($generated@@121 ($generated@@52 $generated@@181) (- $generated@@282 1))) ($generated@@61 $generated@@43 $generated@@40)))) ($generated@@122 (- $generated@@282 1))) (and ($generated@@42 $generated@@43 ($generated@@121 ($generated@@52 $generated@@181) $generated@@282) $generated@@44) (= (ControlFlow 0 7) 5))) $generated@@289))))))))))))
(let (($generated@@292  (=> (and (and (= $generated@@282 ($generated@@53 0)) (= ($generated@@121 ($generated@@52 $generated@@181) $generated@@282) ($generated@@61 $generated@@43 ($generated@@99 ($generated@@61 $generated@@43 $generated@@40))))) (and ($generated@@42 $generated@@43 ($generated@@121 ($generated@@52 $generated@@181) $generated@@282) $generated@@44) (= (ControlFlow 0 6) 5))) $generated@@289)))
(let (($generated@@293  (=> ($generated@@42 $generated@@43 ($generated@@121 ($generated@@52 $generated@@181) $generated@@282) $generated@@44) (=> (and (<= ($generated@@53 0) $generated@@285) ($generated@@29 $generated@@11 ($generated@@15 $generated@@282) $generated@@30 $generated@@284)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@282) (= $generated@@282 $generated@@282))) (=> (or (<= 0 $generated@@282) (= $generated@@282 $generated@@282)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (= $generated@@282 $generated@@282) (< $generated@@282 $generated@@282)))))))))
(let (($generated@@294  (=> (= $generated@@286 ($generated@@195 $generated@@287 $generated@@284 $generated false)) (and (and (=> (= (ControlFlow 0 11) 2) $generated@@293) (=> (= (ControlFlow 0 11) 6) $generated@@292)) (=> (= (ControlFlow 0 11) 7) $generated@@291)))))
(let (($generated@@295  (=> (and (and (and ($generated@@47 $generated@@284) ($generated@@288 $generated@@284)) (<= ($generated@@53 0) $generated@@282)) (and (= 3 $generated@@50) (= (ControlFlow 0 12) 11))) $generated@@294)))
$generated@@295)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
