(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 () Int)
(declare-fun $generated@@70 (T@U T@U Int Int) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@72 (T@U T@U Int Int) Bool)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 (Int) T@U)
(declare-fun $generated@@75 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U T@U Int Int) Bool)
(declare-fun $generated@@94 (T@U T@U Int Int) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) Bool)
(declare-fun $generated@@119 (T@U) Int)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert (= ($generated@@5 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35) ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@37 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@37 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@37 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@5 $generated@@38) 4)) (= ($generated@@5 $generated@@39) 5)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@5 ($generated@@40 $generated@@55 $generated@@56)) 6))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@40 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@40 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@40 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@62 ($generated@@24 $generated@@61) $generated@@63)  (or (= $generated@@62 $generated@@25) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@63 $generated@@62) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@62 ($generated@@24 $generated@@61) $generated@@63))
)))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@64 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert  (=> (<= 0 $generated@@69) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 Int) ($generated@@80 Int) ) (!  (=> (or ($generated@@72 $generated@@77 $generated@@78 $generated@@79 $generated@@80) (and (< 0 $generated@@69) (and (and ($generated@@71 $generated@@77) ($generated@@27 $generated@@31 $generated@@78 ($generated@@32 $generated@@73))) (and (and (<= ($generated@@64 0) $generated@@79) (<= $generated@@79 $generated@@80)) (<= $generated@@80 ($generated@@23 $generated@@78)))))) (and (forall (($generated@@81 Int) ($generated@@82 Int) ) (!  (=> (= $generated@@82 (- $generated@@81 1)) (=> (< $generated@@79 $generated@@81) (=> (< $generated@@81 $generated@@80) ($generated@@75 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@78) ($generated@@74 $generated@@82)) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@78) ($generated@@74 $generated@@81))))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@78) ($generated@@74 $generated@@81)) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@78) ($generated@@74 $generated@@82)))
)) (= ($generated@@70 $generated@@77 $generated@@78 $generated@@79 $generated@@80) (forall (($generated@@83 Int) ($generated@@84 Int) ) (!  (=> (= $generated@@84 (- $generated@@83 1)) (=> (and (< $generated@@79 $generated@@83) (< $generated@@83 $generated@@80)) ($generated@@76 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@78) ($generated@@74 $generated@@84)) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@78) ($generated@@74 $generated@@83)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@78) ($generated@@74 $generated@@83)) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@77 $generated@@78) ($generated@@74 $generated@@84)))
)))))
 :pattern ( ($generated@@70 $generated@@77 $generated@@78 $generated@@79 $generated@@80) ($generated@@71 $generated@@77))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ) (!  (=> (and (and (and ($generated@@71 $generated@@87) (and (or (not (= $generated@@88 $generated@@25)) (not true)) (= ($generated@@26 $generated@@88) ($generated@@24 $generated@@86)))) (and (<= 0 $generated@@89) (< $generated@@89 ($generated@@23 $generated@@88)))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@87 $generated@@88) $generated@@1)))) ($generated@@85 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@87 $generated@@88) ($generated@@74 $generated@@89)) $generated@@86 $generated@@87))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@87 $generated@@88) ($generated@@74 $generated@@89)) ($generated@@24 $generated@@86))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@36 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@36 $generated@@92 $generated@@91))
)))
(assert  (=> (<= 0 $generated@@69) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 Int) ($generated@@98 Int) ) (!  (=> (or ($generated@@94 $generated@@95 $generated@@96 $generated@@97 $generated@@98) (and (< 0 $generated@@69) (and (and ($generated@@71 $generated@@95) (and ($generated@@27 $generated@@31 $generated@@96 ($generated@@32 $generated@@73)) ($generated@@30 $generated@@31 $generated@@96 ($generated@@32 $generated@@73) $generated@@95))) (and (and (<= ($generated@@64 0) $generated@@97) (<= $generated@@97 $generated@@98)) (<= $generated@@98 ($generated@@23 $generated@@96)))))) (=> ($generated@@93 $generated@@95 $generated@@96 $generated@@97 $generated@@98) (forall (($generated@@99 Int) ($generated@@100 Int) ) (!  (=> (and (and (<= $generated@@97 $generated@@99) (< $generated@@99 $generated@@100)) (< $generated@@100 $generated@@98)) ($generated@@76 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@95 $generated@@96) ($generated@@74 $generated@@99)) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@95 $generated@@96) ($generated@@74 $generated@@100))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@95 $generated@@96) ($generated@@74 $generated@@100)) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@95 $generated@@96) ($generated@@74 $generated@@99)))
))))
 :pattern ( ($generated@@93 $generated@@95 $generated@@96 $generated@@97 $generated@@98))
))))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@102 ($generated@@32 $generated@@101))  (and ($generated@@27 $generated@@31 $generated@@102 ($generated@@24 $generated@@101)) (or (not (= $generated@@102 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@102 ($generated@@32 $generated@@101)))
 :pattern ( ($generated@@27 $generated@@31 $generated@@102 ($generated@@24 $generated@@101)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@85 ($generated@@90 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@30 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@85 ($generated@@90 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@108)) $generated@@2) (= ($generated@@107 ($generated@@24 $generated@@108)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (!  (and (= ($generated@@22 ($generated@@32 $generated@@109)) $generated@@3) (= ($generated@@107 ($generated@@32 $generated@@109)) $generated@@4))
 :pattern ( ($generated@@32 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@111 ($generated@@24 $generated@@110))  (or (= $generated@@111 $generated@@25) (= ($generated@@26 $generated@@111) ($generated@@24 $generated@@110))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@111 ($generated@@24 $generated@@110)))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@112 $generated@@113 $generated) (and (= ($generated@@90 $generated@@7 ($generated@@36 $generated@@7 $generated@@113)) $generated@@113) ($generated@@27 $generated@@7 ($generated@@36 $generated@@7 $generated@@113) $generated)))
 :pattern ( ($generated@@112 $generated@@113 $generated))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@112 ($generated@@90 $generated@@116 $generated@@114) $generated@@115) ($generated@@27 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@112 ($generated@@90 $generated@@116 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (<= 0 ($generated@@23 $generated@@117))
 :pattern ( ($generated@@23 $generated@@117))
)))
(assert (forall (($generated@@118 Int) ) (! (= ($generated@@21 ($generated@@74 $generated@@118)) 1)
 :pattern ( ($generated@@74 $generated@@118))
)))
(assert (forall (($generated@@120 Int) ) (! (= ($generated@@119 ($generated@@74 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@74 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@24 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@24 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@32 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@32 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@36 $generated@@126 ($generated@@90 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@90 $generated@@126 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and ($generated@@71 $generated@@128) (and (or (not (= $generated@@129 $generated@@25)) (not true)) (= ($generated@@26 $generated@@129) ($generated@@24 $generated@@127)))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@128 $generated@@129) $generated@@1)))) ($generated@@30 $generated@@7 ($generated@@11 ($generated@@23 $generated@@129)) $generated $generated@@128))
 :pattern ( ($generated@@23 $generated@@129) ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@128 $generated@@129) $generated@@1)) ($generated@@24 $generated@@127))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Int) ) (!  (=> (and (and ($generated@@71 $generated@@131) (and (or (not (= $generated@@132 $generated@@25)) (not true)) (= ($generated@@26 $generated@@132) ($generated@@24 $generated@@130)))) (and (<= 0 $generated@@133) (< $generated@@133 ($generated@@23 $generated@@132)))) ($generated@@112 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@131 $generated@@132) ($generated@@74 $generated@@133)) $generated@@130))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@131 $generated@@132) ($generated@@74 $generated@@133)) ($generated@@24 $generated@@130))
)))
(assert  (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@134 $generated@@137 $generated@@138 $generated@@139 ($generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@142 $generated@@143) $generated@@140)
 :weight 0
)) (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@134 $generated@@144 $generated@@145 $generated@@146 ($generated@@136 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@134 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@134 $generated@@153 $generated@@154 $generated@@155 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@134 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Bool) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@10 ($generated@@134 $generated@@31 $generated@@38 $generated@@6 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@163 $generated@@166) $generated@@164)))) $generated@@165))
 :pattern ( ($generated@@134 $generated@@31 $generated@@38 $generated@@6 ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@112 $generated@@169 ($generated@@24 $generated@@168)) (and (= ($generated@@90 $generated@@31 ($generated@@36 $generated@@31 $generated@@169)) $generated@@169) ($generated@@27 $generated@@31 ($generated@@36 $generated@@31 $generated@@169) ($generated@@24 $generated@@168))))
 :pattern ( ($generated@@112 $generated@@169 ($generated@@24 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@112 $generated@@171 ($generated@@32 $generated@@170)) (and (= ($generated@@90 $generated@@31 ($generated@@36 $generated@@31 $generated@@171)) $generated@@171) ($generated@@27 $generated@@31 ($generated@@36 $generated@@31 $generated@@171) ($generated@@32 $generated@@170))))
 :pattern ( ($generated@@112 $generated@@171 ($generated@@32 $generated@@170)))
)))
(assert  (=> (<= 0 $generated@@69) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Int) ($generated@@175 Int) ) (!  (=> (or ($generated@@94 $generated@@172 $generated@@173 $generated@@174 $generated@@175) (and (< 0 $generated@@69) (and (and ($generated@@71 $generated@@172) ($generated@@27 $generated@@31 $generated@@173 ($generated@@32 $generated@@73))) (and (and (<= ($generated@@64 0) $generated@@174) (<= $generated@@174 $generated@@175)) (<= $generated@@175 ($generated@@23 $generated@@173)))))) (and (forall (($generated@@176 Int) ($generated@@177 Int) ) (!  (=> (<= $generated@@174 $generated@@176) (=> (< $generated@@176 $generated@@177) (=> (< $generated@@177 $generated@@175) ($generated@@75 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@172 $generated@@173) ($generated@@74 $generated@@176)) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@172 $generated@@173) ($generated@@74 $generated@@177))))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@172 $generated@@173) ($generated@@74 $generated@@177)) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@172 $generated@@173) ($generated@@74 $generated@@176)))
)) (= ($generated@@93 $generated@@172 $generated@@173 $generated@@174 $generated@@175) (forall (($generated@@178 Int) ($generated@@179 Int) ) (!  (=> (and (and (<= $generated@@174 $generated@@178) (< $generated@@178 $generated@@179)) (< $generated@@179 $generated@@175)) ($generated@@76 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@172 $generated@@173) ($generated@@74 $generated@@178)) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@172 $generated@@173) ($generated@@74 $generated@@179))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@172 $generated@@173) ($generated@@74 $generated@@179)) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@172 $generated@@173) ($generated@@74 $generated@@178)))
)))))
 :pattern ( ($generated@@93 $generated@@172 $generated@@173 $generated@@174 $generated@@175) ($generated@@71 $generated@@172))
))))
(assert (forall (($generated@@180 Int) ) (! (= ($generated@@90 $generated@@7 ($generated@@11 ($generated@@64 $generated@@180))) ($generated@@66 $generated@@39 ($generated@@90 $generated@@7 ($generated@@11 $generated@@180))))
 :pattern ( ($generated@@90 $generated@@7 ($generated@@11 ($generated@@64 $generated@@180))))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@90 $generated@@182 ($generated@@66 $generated@@182 $generated@@181)) ($generated@@66 $generated@@39 ($generated@@90 $generated@@182 $generated@@181)))
 :pattern ( ($generated@@90 $generated@@182 ($generated@@66 $generated@@182 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! ($generated@@30 $generated@@7 $generated@@184 $generated $generated@@183)
 :pattern ( ($generated@@30 $generated@@7 $generated@@184 $generated $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ) (! ($generated@@27 $generated@@7 $generated@@185 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@185 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@193  (=> (and (and (and (and (<= ($generated@@64 0) $generated@@186) (<= $generated@@186 $generated@@187)) (<= $generated@@187 ($generated@@23 $generated@@188))) ($generated@@30 $generated@@31 $generated@@188 ($generated@@32 $generated@@73) $generated@@189)) (and ($generated@@30 $generated@@7 ($generated@@11 $generated@@186) $generated $generated@@189) ($generated@@30 $generated@@7 ($generated@@11 $generated@@187) $generated $generated@@189))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (<= ($generated@@64 0) $generated@@186)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= $generated@@186 $generated@@187)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= $generated@@187 ($generated@@23 $generated@@188))) (=> (and (and (<= ($generated@@64 0) $generated@@186) (<= $generated@@186 $generated@@187)) (<= $generated@@187 ($generated@@23 $generated@@188))) (=> (and (and (and ($generated@@72 $generated@@189 $generated@@188 $generated@@186 $generated@@187) ($generated@@70 $generated@@189 $generated@@188 $generated@@186 $generated@@187)) (and ($generated@@71 $generated@@190) ($generated@@191 $generated@@190))) (and (and (= $generated@@189 $generated@@190) ($generated@@30 $generated@@31 $generated@@188 ($generated@@32 $generated@@73) $generated@@190)) (and ($generated@@30 $generated@@7 ($generated@@11 $generated@@186) $generated $generated@@190) ($generated@@30 $generated@@7 ($generated@@11 $generated@@187) $generated $generated@@190)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@64 0) $generated@@186)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@186 $generated@@187)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@187 ($generated@@23 $generated@@188)))))))))))))
(let (($generated@@194  (=> (and (not (and (<= ($generated@@64 0) $generated@@186) (<= $generated@@186 $generated@@187))) (= (ControlFlow 0 10) 2)) $generated@@193)))
(let (($generated@@195  (=> (and (<= ($generated@@64 0) $generated@@186) (<= $generated@@186 $generated@@187)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= $generated@@188 $generated@@25)) (not true))) (=> (or (not (= $generated@@188 $generated@@25)) (not true)) (=> (= (ControlFlow 0 8) 2) $generated@@193))))))
(let (($generated@@196  (=> (< $generated@@186 ($generated@@64 0)) (and (=> (= (ControlFlow 0 12) 8) $generated@@195) (=> (= (ControlFlow 0 12) 10) $generated@@194)))))
(let (($generated@@197  (=> (<= ($generated@@64 0) $generated@@186) (and (=> (= (ControlFlow 0 11) 8) $generated@@195) (=> (= (ControlFlow 0 11) 10) $generated@@194)))))
(let (($generated@@198  (=> (= $generated@@192 ($generated@@135 $generated@@25 $generated@@189 $generated@@1 false)) (and (=> (= (ControlFlow 0 13) 11) $generated@@197) (=> (= (ControlFlow 0 13) 12) $generated@@196)))))
(let (($generated@@199  (=> (and ($generated@@71 $generated@@189) ($generated@@191 $generated@@189)) (=> (and (and ($generated@@27 $generated@@31 $generated@@188 ($generated@@32 $generated@@73)) ($generated@@30 $generated@@31 $generated@@188 ($generated@@32 $generated@@73) $generated@@189)) (and (= 1 $generated@@69) (= (ControlFlow 0 14) 13))) $generated@@198))))
$generated@@199))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
