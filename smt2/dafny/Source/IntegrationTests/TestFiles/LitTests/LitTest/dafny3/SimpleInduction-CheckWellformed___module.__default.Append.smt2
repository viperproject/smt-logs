(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@105 (T@U) Int)
(declare-fun $generated@@106 (T@U) Int)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@118 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@119 (T@T T@T) T@T)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@122 (T@T) T@T)
(declare-fun $generated@@123 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (and (= ($generated@@4 $generated@@24) 3) (= ($generated@@4 $generated@@30) 4)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@25 $generated@@33 ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@35 ($generated@@27 $generated@@33)) ($generated@@26 $generated@@24 $generated@@36 ($generated@@27 $generated@@33))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)))))) (let (($generated@@37 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@25 $generated@@33 $generated@@37 ($generated@@23 $generated@@24 $generated@@36)))) (= ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)) $generated@@36 (let (($generated@@38 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
(let (($generated@@39 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@23 $generated@@24 ($generated@@32 $generated@@39 ($generated@@23 $generated@@24 ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) $generated@@38 ($generated@@23 $generated@@24 $generated@@36)))))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)))
))))
(assert (= ($generated@@40 $generated@@41) $generated@@1))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> ($generated@@43 $generated@@45) ($generated@@42 $generated@@24 $generated@@41 ($generated@@27 $generated@@44) $generated@@45))
 :pattern ( ($generated@@42 $generated@@24 $generated@@41 ($generated@@27 $generated@@44) $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ) (! ($generated@@26 $generated@@24 $generated@@41 ($generated@@27 $generated@@46))
 :pattern ( ($generated@@26 $generated@@24 $generated@@41 ($generated@@27 $generated@@46)))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@23 $generated@@48 $generated@@47) $generated@@47)
 :pattern ( ($generated@@23 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@26 $generated@@24 ($generated@@32 $generated@@51 $generated@@52) ($generated@@27 $generated@@50))  (and ($generated@@49 $generated@@51 $generated@@50) ($generated@@26 $generated@@24 $generated@@52 ($generated@@27 $generated@@50))))
 :pattern ( ($generated@@26 $generated@@24 ($generated@@32 $generated@@51 $generated@@52) ($generated@@27 $generated@@50)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (or ($generated@@25 $generated@@53 $generated@@55 $generated@@56) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@55 ($generated@@27 $generated@@53)) ($generated@@26 $generated@@24 $generated@@56 ($generated@@27 $generated@@53))))) (and (=> (not ($generated@@28 $generated@@55)) (let (($generated@@57 ($generated@@29 $generated@@55)))
($generated@@25 $generated@@53 $generated@@57 $generated@@56))) (= ($generated@@21 $generated@@53 ($generated@@22 $generated@@54) $generated@@55 $generated@@56) (ite ($generated@@28 $generated@@55) $generated@@56 (let (($generated@@58 ($generated@@29 $generated@@55)))
(let (($generated@@59 ($generated@@31 $generated@@55)))
($generated@@32 $generated@@59 ($generated@@21 $generated@@53 $generated@@54 $generated@@58 $generated@@56))))))))
 :pattern ( ($generated@@21 $generated@@53 ($generated@@22 $generated@@54) $generated@@55 $generated@@56))
))))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@28 $generated@@60) (= ($generated@@40 $generated@@60) $generated@@1))
 :pattern ( ($generated@@28 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@61 $generated@@62) (= ($generated@@40 $generated@@62) $generated@@2))
 :pattern ( ($generated@@61 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 ($generated@@63 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@63 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@61 $generated@@67) (exists (($generated@@68 T@U) ($generated@@69 T@U) ) (= $generated@@67 ($generated@@32 $generated@@68 $generated@@69))))
 :pattern ( ($generated@@61 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@28 $generated@@70) (= $generated@@70 $generated@@41))
 :pattern ( ($generated@@28 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@64 $generated@@75 $generated@@72) $generated@@73 $generated@@74) ($generated@@42 $generated@@75 $generated@@72 $generated@@73 $generated@@74))
 :pattern ( ($generated@@71 ($generated@@64 $generated@@75 $generated@@72) $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@78 T@U) ) (!  (and (= ($generated@@76 ($generated@@27 $generated@@78)) $generated@@0) (= ($generated@@77 ($generated@@27 $generated@@78)) $generated@@3))
 :pattern ( ($generated@@27 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> ($generated@@26 $generated@@24 $generated@@80 ($generated@@27 $generated@@79)) (or ($generated@@28 $generated@@80) ($generated@@61 $generated@@80)))
 :pattern ( ($generated@@61 $generated@@80) ($generated@@26 $generated@@24 $generated@@80 ($generated@@27 $generated@@79)))
 :pattern ( ($generated@@28 $generated@@80) ($generated@@26 $generated@@24 $generated@@80 ($generated@@27 $generated@@79)))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@49 ($generated@@64 $generated@@83 $generated@@81) $generated@@82) ($generated@@26 $generated@@83 $generated@@81 $generated@@82))
 :pattern ( ($generated@@49 ($generated@@64 $generated@@83 $generated@@81) $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@40 ($generated@@32 $generated@@84 $generated@@85)) $generated@@2)
 :pattern ( ($generated@@32 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@31 ($generated@@32 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@32 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@29 ($generated@@32 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@32 $generated@@88 $generated@@89))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@25 $generated@@90 $generated@@92 $generated@@93) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@92 ($generated@@27 $generated@@90)) ($generated@@26 $generated@@24 $generated@@93 ($generated@@27 $generated@@90))))) ($generated@@26 $generated@@24 ($generated@@21 $generated@@90 $generated@@91 $generated@@92 $generated@@93) ($generated@@27 $generated@@90)))
 :pattern ( ($generated@@21 $generated@@90 $generated@@91 $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@94 ($generated@@27 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@27 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@63 $generated@@97 ($generated@@64 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@64 $generated@@97 $generated@@96))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@25 $generated@@98 ($generated@@23 $generated@@24 $generated@@100) $generated@@101) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@100 ($generated@@27 $generated@@98)) ($generated@@26 $generated@@24 $generated@@101 ($generated@@27 $generated@@98))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@100)))))) (let (($generated@@102 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@100)))))
($generated@@25 $generated@@98 $generated@@102 $generated@@101))) (= ($generated@@21 $generated@@98 ($generated@@22 $generated@@99) ($generated@@23 $generated@@24 $generated@@100) $generated@@101) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@100)) $generated@@101 (let (($generated@@103 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@100)))))
(let (($generated@@104 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@100)))))
($generated@@32 $generated@@104 ($generated@@21 $generated@@98 ($generated@@22 $generated@@99) $generated@@103 $generated@@101))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@98 ($generated@@22 $generated@@99) ($generated@@23 $generated@@24 $generated@@100) $generated@@101))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (< ($generated@@105 $generated@@107) ($generated@@106 ($generated@@32 $generated@@107 $generated@@108)))
 :pattern ( ($generated@@32 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (< ($generated@@106 $generated@@110) ($generated@@106 ($generated@@32 $generated@@109 $generated@@110)))
 :pattern ( ($generated@@32 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and ($generated@@43 $generated@@113) (and ($generated@@61 $generated@@111) ($generated@@42 $generated@@24 $generated@@111 ($generated@@27 $generated@@112) $generated@@113))) ($generated@@71 ($generated@@31 $generated@@111) $generated@@112 $generated@@113))
 :pattern ( ($generated@@71 ($generated@@31 $generated@@111) $generated@@112 $generated@@113))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@114 $generated@@124 $generated@@125 $generated@@126 ($generated@@120 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@129 $generated@@130) $generated@@127)
 :weight 0
)) (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@114 $generated@@131 $generated@@132 $generated@@133 ($generated@@120 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@114 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@114 $generated@@140 $generated@@141 $generated@@142 ($generated@@120 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@114 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)))) (= ($generated@@4 $generated@@115) 5)) (= ($generated@@4 $generated@@116) 6)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@118 $generated@@149 $generated@@150 ($generated@@121 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@151) $generated@@153) $generated@@151)
 :weight 0
))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@158 $generated@@159) (= ($generated@@118 $generated@@154 $generated@@155 ($generated@@121 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@156) $generated@@159) ($generated@@118 $generated@@154 $generated@@155 $generated@@157 $generated@@159)))
 :weight 0
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (= ($generated@@4 ($generated@@119 $generated@@160 $generated@@161)) 7))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@122 ($generated@@119 $generated@@162 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@119 $generated@@162 $generated@@163))
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (! (= ($generated@@123 ($generated@@119 $generated@@164 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@119 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Bool) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@9 ($generated@@114 $generated@@115 $generated@@116 $generated@@5 ($generated@@117 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))  (=> (and (or (not (= $generated@@170 $generated@@166)) (not true)) ($generated@@9 ($generated@@63 $generated@@5 ($generated@@118 $generated@@116 $generated@@30 ($generated@@118 $generated@@115 ($generated@@119 $generated@@116 $generated@@30) $generated@@167 $generated@@170) $generated@@168)))) $generated@@169))
 :pattern ( ($generated@@114 $generated@@115 $generated@@116 $generated@@5 ($generated@@117 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@173 $generated@@175 $generated@@176) (and (< 1 $generated@@20) (and (and ($generated@@26 $generated@@24 $generated@@175 ($generated@@27 $generated@@173)) ($generated@@42 $generated@@24 $generated@@175 ($generated@@27 $generated@@173) $generated@@172)) (and ($generated@@26 $generated@@24 $generated@@176 ($generated@@27 $generated@@173)) ($generated@@42 $generated@@24 $generated@@176 ($generated@@27 $generated@@173) $generated@@172))))) ($generated@@43 $generated@@172)) ($generated@@42 $generated@@24 ($generated@@21 $generated@@173 $generated@@174 $generated@@175 $generated@@176) ($generated@@27 $generated@@173) $generated@@172))
 :pattern ( ($generated@@42 $generated@@24 ($generated@@21 $generated@@173 $generated@@174 $generated@@175 $generated@@176) ($generated@@27 $generated@@173) $generated@@172))
))))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@105 ($generated@@64 $generated@@24 $generated@@177)) ($generated@@106 $generated@@177))
 :pattern ( ($generated@@105 ($generated@@64 $generated@@24 $generated@@177)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@21 $generated@@178 ($generated@@22 $generated@@179) $generated@@180 $generated@@181) ($generated@@21 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
 :pattern ( ($generated@@21 $generated@@178 ($generated@@22 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@49 $generated@@183 ($generated@@27 $generated@@182)) (and (= ($generated@@64 $generated@@24 ($generated@@63 $generated@@24 $generated@@183)) $generated@@183) ($generated@@26 $generated@@24 ($generated@@63 $generated@@24 $generated@@183) ($generated@@27 $generated@@182))))
 :pattern ( ($generated@@49 $generated@@183 ($generated@@27 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and ($generated@@43 $generated@@186) (and ($generated@@61 $generated@@184) ($generated@@42 $generated@@24 $generated@@184 ($generated@@27 $generated@@185) $generated@@186))) ($generated@@42 $generated@@24 ($generated@@29 $generated@@184) ($generated@@27 $generated@@185) $generated@@186))
 :pattern ( ($generated@@42 $generated@@24 ($generated@@29 $generated@@184) ($generated@@27 $generated@@185) $generated@@186))
)))
(assert (= $generated@@41 ($generated@@23 $generated@@24 $generated@@41)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@32 ($generated@@23 $generated@@30 $generated@@187) ($generated@@23 $generated@@24 $generated@@188)) ($generated@@23 $generated@@24 ($generated@@32 $generated@@187 $generated@@188)))
 :pattern ( ($generated@@32 ($generated@@23 $generated@@30 $generated@@187) ($generated@@23 $generated@@24 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@T) ) (! (= ($generated@@64 $generated@@190 ($generated@@23 $generated@@190 $generated@@189)) ($generated@@23 $generated@@30 ($generated@@64 $generated@@190 $generated@@189)))
 :pattern ( ($generated@@64 $generated@@190 ($generated@@23 $generated@@190 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@43 $generated@@194) (= ($generated@@42 $generated@@24 ($generated@@32 $generated@@192 $generated@@193) ($generated@@27 $generated@@191) $generated@@194)  (and ($generated@@71 $generated@@192 $generated@@191 $generated@@194) ($generated@@42 $generated@@24 $generated@@193 ($generated@@27 $generated@@191) $generated@@194))))
 :pattern ( ($generated@@42 $generated@@24 ($generated@@32 $generated@@192 $generated@@193) ($generated@@27 $generated@@191) $generated@@194))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@208 true))
(let (($generated@@209  (=> (and (and (= $generated@@195 ($generated@@32 $generated@@196 $generated@@197)) ($generated@@49 $generated@@196 $generated@@198)) (and ($generated@@26 $generated@@24 $generated@@197 ($generated@@27 $generated@@198)) (= $generated@@199 $generated@@197))) (=> (and (and (and ($generated@@26 $generated@@24 $generated@@199 ($generated@@27 $generated@@198)) (= $generated@@200 $generated@@199)) (and (= $generated@@201 $generated@@196) ($generated@@49 $generated@@201 $generated@@198))) (and (and (= $generated@@202 $generated@@201) ($generated@@42 $generated@@24 $generated@@200 ($generated@@27 $generated@@198) $generated@@203)) (and ($generated@@42 $generated@@24 $generated@@204 ($generated@@27 $generated@@198) $generated@@203) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@106 $generated@@200) ($generated@@106 $generated@@195))))))
(let (($generated@@210  (=> (or (not (= $generated@@195 $generated@@41)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@209) (=> (= (ControlFlow 0 6) 5) $generated@@208)))))
(let (($generated@@211 true))
(let (($generated@@212 true))
(let (($generated@@213  (=> (= $generated@@205 ($generated@@117 $generated@@206 $generated@@203 $generated false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@212) (=> (= (ControlFlow 0 7) 2) $generated@@211)) (=> (= (ControlFlow 0 7) 6) $generated@@210)))))
(let (($generated@@214  (=> (and ($generated@@43 $generated@@203) ($generated@@207 $generated@@203)) (=> (and (and ($generated@@26 $generated@@24 $generated@@195 ($generated@@27 $generated@@198)) ($generated@@26 $generated@@24 $generated@@204 ($generated@@27 $generated@@198))) (and (= 1 $generated@@20) (= (ControlFlow 0 8) 7))) $generated@@213))))
$generated@@214))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
