(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 (T@U Int) T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U Int) T@U)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@51 (T@U Int) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@110 (T@U T@U T@U) Bool)
(declare-fun $generated@@111 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@126 () Int)
(declare-fun $generated@@127 (T@U Int T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@129 (Int T@U) Bool)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@142 (T@U Int T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (Int T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@219 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@220 () T@T)
(declare-fun $generated@@221 () T@T)
(declare-fun $generated@@222 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@225 (T@T T@T) T@T)
(declare-fun $generated@@226 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@11 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@32 $generated@@33) $generated@@31)  (and ($generated@@28 $generated@@29 $generated@@32 $generated@@31) ($generated@@28 $generated@@29 $generated@@33 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@32 $generated@@33) $generated@@31))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 Int) ) (!  (=> (and (<= 0 $generated@@41) (< $generated@@41 ($generated@@36 $generated@@40))) (< ($generated@@37 ($generated@@38 $generated@@29 ($generated@@34 $generated@@40 $generated@@41))) ($generated@@37 ($generated@@35 $generated@@39 $generated@@40))))
 :pattern ( ($generated@@34 $generated@@40 $generated@@41) ($generated@@35 $generated@@39 $generated@@40))
)))
(assert (= ($generated@@36 $generated@@42) 0))
(assert (= ($generated@@43 $generated@@44) $generated@@5))
(assert (= ($generated@@43 $generated@@45) $generated@@7))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 Int) ) (!  (=> (and (<= 0 $generated@@50) (<= $generated@@50 ($generated@@36 $generated@@48))) (= ($generated@@46 ($generated@@47 $generated@@48 $generated@@49) $generated@@50) ($generated@@47 ($generated@@46 $generated@@48 $generated@@50) $generated@@49)))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@48 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 Int) ) (!  (=> (= $generated@@55 ($generated@@36 $generated@@53)) (and (= ($generated@@51 ($generated@@52 $generated@@53 $generated@@54) $generated@@55) $generated@@53) (= ($generated@@46 ($generated@@52 $generated@@53 $generated@@54) $generated@@55) $generated@@54)))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@53 $generated@@54) $generated@@55))
 :pattern ( ($generated@@46 ($generated@@52 $generated@@53 $generated@@54) $generated@@55))
)))
(assert ($generated@@28 $generated@@29 $generated@@44 $generated@@31))
(assert ($generated@@28 $generated@@29 $generated@@45 $generated@@56))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@57 $generated@@58 $generated@@59) (= $generated@@58 $generated@@59))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 Int) ) (!  (=> (= $generated@@61 0) (= ($generated@@46 $generated@@60 $generated@@61) $generated@@60))
 :pattern ( ($generated@@46 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@62 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (= ($generated@@11 $generated@@67) 4))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (and ($generated@@28 $generated@@67 $generated@@70 ($generated@@68 $generated@@72)) ($generated@@69 $generated@@71 $generated@@72)) ($generated@@28 $generated@@67 ($generated@@47 $generated@@70 $generated@@71) ($generated@@68 $generated@@72)))
 :pattern ( ($generated@@28 $generated@@67 ($generated@@47 $generated@@70 $generated@@71) ($generated@@68 $generated@@72)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 Int) ($generated@@75 Int) ) (!  (=> (and (and (<= 0 $generated@@75) (< $generated@@75 $generated@@74)) (< $generated@@75 ($generated@@36 $generated@@73))) (= ($generated@@34 ($generated@@51 $generated@@73 $generated@@74) $generated@@75) ($generated@@34 $generated@@73 $generated@@75)))
 :weight 25
 :pattern ( ($generated@@34 ($generated@@51 $generated@@73 $generated@@74) $generated@@75))
 :pattern ( ($generated@@34 $generated@@73 $generated@@75) ($generated@@51 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 Int) ) (!  (=> (and (<= 0 $generated@@77) (<= $generated@@77 ($generated@@36 $generated@@76))) (= ($generated@@36 ($generated@@46 $generated@@76 $generated@@77)) (- ($generated@@36 $generated@@76) $generated@@77)))
 :pattern ( ($generated@@36 ($generated@@46 $generated@@76 $generated@@77)))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@78 $generated@@79) (= ($generated@@43 $generated@@79) $generated@@5))
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@80 $generated@@81) (= ($generated@@43 $generated@@81) $generated@@6))
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 $generated@@83) (= ($generated@@43 $generated@@83) $generated@@7))
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 $generated@@85) (= ($generated@@43 $generated@@85) $generated@@8))
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@86 $generated@@87 $generated@@88)  (and (= ($generated@@36 $generated@@87) ($generated@@36 $generated@@88)) (forall (($generated@@89 Int) ) (!  (=> (and (<= 0 $generated@@89) (< $generated@@89 ($generated@@36 $generated@@87))) (= ($generated@@34 $generated@@87 $generated@@89) ($generated@@34 $generated@@88 $generated@@89)))
 :pattern ( ($generated@@34 $generated@@87 $generated@@89))
 :pattern ( ($generated@@34 $generated@@88 $generated@@89))
))))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@38 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@38 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 Int) ) (!  (=> (and (<= 0 $generated@@95) (< $generated@@95 ($generated@@36 $generated@@94))) (< ($generated@@93 ($generated@@51 $generated@@94 $generated@@95)) ($generated@@93 $generated@@94)))
 :pattern ( ($generated@@93 ($generated@@51 $generated@@94 $generated@@95)))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@80 $generated@@96) (exists (($generated@@97 T@U) ($generated@@98 T@U) ) (= $generated@@96 ($generated@@30 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@80 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@84 $generated@@99) (exists (($generated@@100 T@U) ($generated@@101 T@U) ) (= $generated@@99 ($generated@@35 $generated@@100 $generated@@101))))
 :pattern ( ($generated@@84 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@78 $generated@@102) (= $generated@@102 $generated@@44))
 :pattern ( ($generated@@78 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@82 $generated@@103) (= $generated@@103 $generated@@45))
 :pattern ( ($generated@@82 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 Int) ) (!  (=> (and (< 0 $generated@@105) (<= $generated@@105 ($generated@@36 $generated@@104))) (< ($generated@@93 ($generated@@46 $generated@@104 $generated@@105)) ($generated@@93 $generated@@104)))
 :pattern ( ($generated@@93 ($generated@@46 $generated@@104 $generated@@105)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@36 ($generated@@47 $generated@@106 $generated@@107)) (+ 1 ($generated@@36 $generated@@106)))
 :pattern ( ($generated@@47 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@35 $generated@@108 $generated@@109) $generated@@56)  (and ($generated@@28 $generated@@29 $generated@@108 $generated@@31) ($generated@@28 $generated@@67 $generated@@109 ($generated@@68 $generated))))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@35 $generated@@108 $generated@@109) $generated@@56))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@110 ($generated@@90 $generated@@115 $generated@@112) $generated@@113 $generated@@114) ($generated@@111 $generated@@115 $generated@@112 $generated@@113 $generated@@114))
 :pattern ( ($generated@@110 ($generated@@90 $generated@@115 $generated@@112) $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 Int) ($generated@@118 Int) ) (!  (=> (and (and (<= 0 $generated@@117) (<= 0 $generated@@118)) (< $generated@@118 (- ($generated@@36 $generated@@116) $generated@@117))) (= ($generated@@34 ($generated@@46 $generated@@116 $generated@@117) $generated@@118) ($generated@@34 $generated@@116 (+ $generated@@118 $generated@@117))))
 :weight 25
 :pattern ( ($generated@@34 ($generated@@46 $generated@@116 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@36 ($generated@@52 $generated@@119 $generated@@120)) (+ ($generated@@36 $generated@@119) ($generated@@36 $generated@@120)))
 :pattern ( ($generated@@36 ($generated@@52 $generated@@119 $generated@@120)))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@69 $generated@@121 $generated@@31) (and (= ($generated@@90 $generated@@29 ($generated@@38 $generated@@29 $generated@@121)) $generated@@121) ($generated@@28 $generated@@29 ($generated@@38 $generated@@29 $generated@@121) $generated@@31)))
 :pattern ( ($generated@@69 $generated@@121 $generated@@31))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@69 $generated@@122 $generated@@56) (and (= ($generated@@90 $generated@@29 ($generated@@38 $generated@@29 $generated@@122)) $generated@@122) ($generated@@28 $generated@@29 ($generated@@38 $generated@@29 $generated@@122) $generated@@56)))
 :pattern ( ($generated@@69 $generated@@122 $generated@@56))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 Int) ($generated@@125 T@U) ) (!  (and (=> (= $generated@@124 ($generated@@36 $generated@@123)) (= ($generated@@34 ($generated@@47 $generated@@123 $generated@@125) $generated@@124) $generated@@125)) (=> (or (not (= $generated@@124 ($generated@@36 $generated@@123))) (not true)) (= ($generated@@34 ($generated@@47 $generated@@123 $generated@@125) $generated@@124) ($generated@@34 $generated@@123 $generated@@124))))
 :pattern ( ($generated@@34 ($generated@@47 $generated@@123 $generated@@125) $generated@@124))
)))
(assert  (=> (<= 1 $generated@@126) (forall (($generated@@132 T@U) ($generated@@133 Int) ($generated@@134 T@U) ) (!  (=> (or ($generated@@129 $generated@@133 ($generated@@64 $generated@@29 $generated@@134)) (and (< 1 $generated@@126) ($generated@@28 $generated@@29 $generated@@134 $generated@@31))) (and (=> (not ($generated@@16 ($generated@@64 $generated@@12 ($generated@@15 ($generated@@78 ($generated@@64 $generated@@29 $generated@@134)))))) (let (($generated@@135 ($generated@@64 $generated@@29 ($generated@@130 ($generated@@64 $generated@@29 $generated@@134)))))
(let (($generated@@136 ($generated@@64 $generated@@29 ($generated@@131 ($generated@@64 $generated@@29 $generated@@134)))))
 (and ($generated@@129 (+ $generated@@133 1) $generated@@136) ($generated@@129 (+ $generated@@133 1) $generated@@135))))) (= ($generated@@127 ($generated@@128 $generated@@132) $generated@@133 ($generated@@64 $generated@@29 $generated@@134)) (ite ($generated@@78 ($generated@@64 $generated@@29 $generated@@134)) ($generated@@47 $generated@@42 ($generated@@90 $generated@@13 ($generated@@17 $generated@@133))) (let (($generated@@137 ($generated@@64 $generated@@29 ($generated@@130 ($generated@@64 $generated@@29 $generated@@134)))))
(let (($generated@@138 ($generated@@64 $generated@@29 ($generated@@131 ($generated@@64 $generated@@29 $generated@@134)))))
($generated@@52 ($generated@@127 ($generated@@128 $generated@@132) (+ $generated@@133 1) $generated@@138) ($generated@@127 ($generated@@128 $generated@@132) (+ $generated@@133 1) $generated@@137))))))))
 :weight 3
 :pattern ( ($generated@@127 ($generated@@128 $generated@@132) $generated@@133 ($generated@@64 $generated@@29 $generated@@134)))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 T@U) ) (! (= ($generated@@127 ($generated@@128 $generated@@139) $generated@@140 $generated@@141) ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 Int) ($generated@@145 T@U) ) (! (= ($generated@@142 ($generated@@128 $generated@@143) $generated@@144 $generated@@145) ($generated@@142 $generated@@143 $generated@@144 $generated@@145))
 :pattern ( ($generated@@142 ($generated@@128 $generated@@143) $generated@@144 $generated@@145))
)))
(assert  (=> (<= 3 $generated@@126) (forall (($generated@@151 T@U) ) (!  (=> (or ($generated@@147 $generated@@151) (and (< 3 $generated@@126) ($generated@@28 $generated@@67 $generated@@151 ($generated@@68 $generated)))) (and ($generated@@148 ($generated@@62 0) $generated@@151) (= ($generated@@146 $generated@@151) (let (($generated@@152 ($generated@@142 ($generated@@128 $generated@@149) ($generated@@62 0) $generated@@151)))
(ite  (and ($generated@@84 $generated@@152) ($generated@@86 ($generated@@150 $generated@@152) $generated@@42)) $generated@@152 $generated@@45)))))
 :pattern ( ($generated@@146 $generated@@151))
))))
(assert  (=> (<= 3 $generated@@126) (forall (($generated@@154 T@U) ) (!  (=> (or ($generated@@147 $generated@@154) (and (< 3 $generated@@126) ($generated@@28 $generated@@67 $generated@@154 ($generated@@68 $generated)))) (and (=> ($generated@@84 ($generated@@146 $generated@@154)) ($generated@@86 ($generated@@127 ($generated@@128 $generated@@149) ($generated@@62 0) ($generated@@153 ($generated@@146 $generated@@154))) $generated@@154)) ($generated@@28 $generated@@29 ($generated@@146 $generated@@154) $generated@@56)))
 :pattern ( ($generated@@146 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@86 $generated@@155 $generated@@156) (= $generated@@155 $generated@@156))
 :pattern ( ($generated@@86 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (and (<= 0 $generated@@158) (<= $generated@@158 ($generated@@36 $generated@@157))) (= ($generated@@36 ($generated@@51 $generated@@157 $generated@@158)) $generated@@158))
 :pattern ( ($generated@@36 ($generated@@51 $generated@@157 $generated@@158)))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@159 $generated@@31) (or ($generated@@78 $generated@@159) ($generated@@80 $generated@@159)))
 :pattern ( ($generated@@80 $generated@@159) ($generated@@28 $generated@@29 $generated@@159 $generated@@31))
 :pattern ( ($generated@@78 $generated@@159) ($generated@@28 $generated@@29 $generated@@159 $generated@@31))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@160 $generated@@56) (or ($generated@@82 $generated@@160) ($generated@@84 $generated@@160)))
 :pattern ( ($generated@@84 $generated@@160) ($generated@@28 $generated@@29 $generated@@160 $generated@@56))
 :pattern ( ($generated@@82 $generated@@160) ($generated@@28 $generated@@29 $generated@@160 $generated@@56))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> ($generated@@69 $generated@@161 $generated) (and (= ($generated@@90 $generated@@13 ($generated@@38 $generated@@13 $generated@@161)) $generated@@161) ($generated@@28 $generated@@13 ($generated@@38 $generated@@13 $generated@@161) $generated)))
 :pattern ( ($generated@@69 $generated@@161 $generated))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@80 $generated@@162) ($generated@@80 $generated@@163)) (= ($generated@@57 $generated@@162 $generated@@163)  (and ($generated@@57 ($generated@@131 $generated@@162) ($generated@@131 $generated@@163)) ($generated@@57 ($generated@@130 $generated@@162) ($generated@@130 $generated@@163)))))
 :pattern ( ($generated@@57 $generated@@162 $generated@@163) ($generated@@80 $generated@@162))
 :pattern ( ($generated@@57 $generated@@162 $generated@@163) ($generated@@80 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@69 ($generated@@90 $generated@@166 $generated@@164) $generated@@165) ($generated@@28 $generated@@166 $generated@@164 $generated@@165))
 :pattern ( ($generated@@69 ($generated@@90 $generated@@166 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (<= 0 ($generated@@36 $generated@@167))
 :pattern ( ($generated@@36 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 Int) ($generated@@170 Int) ) (!  (=> (and (and (<= 0 $generated@@169) (< $generated@@169 $generated@@170)) (<= $generated@@170 ($generated@@36 $generated@@168))) (< ($generated@@93 ($generated@@52 ($generated@@51 $generated@@168 $generated@@169) ($generated@@46 $generated@@168 $generated@@170))) ($generated@@93 $generated@@168)))
 :pattern ( ($generated@@93 ($generated@@52 ($generated@@51 $generated@@168 $generated@@169) ($generated@@46 $generated@@168 $generated@@170))))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and ($generated@@78 $generated@@171) ($generated@@78 $generated@@172)) ($generated@@57 $generated@@171 $generated@@172))
 :pattern ( ($generated@@57 $generated@@171 $generated@@172) ($generated@@78 $generated@@171))
 :pattern ( ($generated@@57 $generated@@171 $generated@@172) ($generated@@78 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@43 ($generated@@30 $generated@@173 $generated@@174)) $generated@@6)
 :pattern ( ($generated@@30 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@131 ($generated@@30 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@30 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@130 ($generated@@30 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@30 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@43 ($generated@@35 $generated@@179 $generated@@180)) $generated@@8)
 :pattern ( ($generated@@35 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@153 ($generated@@35 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@35 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@150 ($generated@@35 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@35 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@111 $generated@@67 $generated@@185 ($generated@@68 $generated@@186) $generated@@187) (forall (($generated@@188 Int) ) (!  (=> (and (<= 0 $generated@@188) (< $generated@@188 ($generated@@36 $generated@@185))) ($generated@@110 ($generated@@34 $generated@@185 $generated@@188) $generated@@186 $generated@@187))
 :pattern ( ($generated@@34 $generated@@185 $generated@@188))
)))
 :pattern ( ($generated@@111 $generated@@67 $generated@@185 ($generated@@68 $generated@@186) $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@189 ($generated@@68 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@68 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@27 ($generated@@68 $generated@@191)) $generated@@1)
 :pattern ( ($generated@@68 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@38 $generated@@193 ($generated@@90 $generated@@193 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@90 $generated@@193 $generated@@192))
)))
(assert  (=> (<= 2 $generated@@126) (forall (($generated@@194 T@U) ($generated@@195 Int) ($generated@@196 T@U) ) (!  (=> (or ($generated@@148 $generated@@195 $generated@@196) (and (< 2 $generated@@126) ($generated@@28 $generated@@67 $generated@@196 ($generated@@68 $generated)))) (and (and (=> ($generated@@84 ($generated@@142 $generated@@194 $generated@@195 $generated@@196)) (and (< ($generated@@36 ($generated@@150 ($generated@@142 $generated@@194 $generated@@195 $generated@@196))) ($generated@@36 $generated@@196)) ($generated@@86 ($generated@@150 ($generated@@142 $generated@@194 $generated@@195 $generated@@196)) ($generated@@46 $generated@@196 (- ($generated@@36 $generated@@196) ($generated@@36 ($generated@@150 ($generated@@142 $generated@@194 $generated@@195 $generated@@196)))))))) (=> ($generated@@84 ($generated@@142 $generated@@194 $generated@@195 $generated@@196)) ($generated@@86 ($generated@@127 ($generated@@128 $generated@@149) $generated@@195 ($generated@@153 ($generated@@142 $generated@@194 $generated@@195 $generated@@196))) ($generated@@51 $generated@@196 (- ($generated@@36 $generated@@196) ($generated@@36 ($generated@@150 ($generated@@142 $generated@@194 $generated@@195 $generated@@196)))))))) ($generated@@28 $generated@@29 ($generated@@142 $generated@@194 $generated@@195 $generated@@196) $generated@@56)))
 :pattern ( ($generated@@142 $generated@@194 $generated@@195 $generated@@196))
))))
(assert  (=> (<= 1 $generated@@126) (forall (($generated@@197 T@U) ($generated@@198 Int) ($generated@@199 T@U) ) (!  (=> (or ($generated@@129 $generated@@198 $generated@@199) (and (< 1 $generated@@126) ($generated@@28 $generated@@29 $generated@@199 $generated@@31))) (and (=> (not ($generated@@78 $generated@@199)) (let (($generated@@200 ($generated@@130 $generated@@199)))
(let (($generated@@201 ($generated@@131 $generated@@199)))
 (and ($generated@@129 (+ $generated@@198 1) $generated@@201) ($generated@@129 (+ $generated@@198 1) $generated@@200))))) (= ($generated@@127 ($generated@@128 $generated@@197) $generated@@198 $generated@@199) (ite ($generated@@78 $generated@@199) ($generated@@47 $generated@@42 ($generated@@90 $generated@@13 ($generated@@17 $generated@@198))) (let (($generated@@202 ($generated@@130 $generated@@199)))
(let (($generated@@203 ($generated@@131 $generated@@199)))
($generated@@52 ($generated@@127 $generated@@197 (+ $generated@@198 1) $generated@@203) ($generated@@127 $generated@@197 (+ $generated@@198 1) $generated@@202))))))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@197) $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! (< ($generated@@37 $generated@@204) ($generated@@37 ($generated@@30 $generated@@204 $generated@@205)))
 :pattern ( ($generated@@30 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (< ($generated@@37 $generated@@207) ($generated@@37 ($generated@@30 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@30 $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (< ($generated@@37 $generated@@208) ($generated@@37 ($generated@@35 $generated@@208 $generated@@209)))
 :pattern ( ($generated@@35 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (< ($generated@@93 $generated@@211) ($generated@@37 ($generated@@35 $generated@@210 $generated@@211)))
 :pattern ( ($generated@@35 $generated@@210 $generated@@211))
)))
(assert  (=> (<= 1 $generated@@126) (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 T@U) ) (!  (=> (or ($generated@@129 ($generated@@62 $generated@@213) ($generated@@64 $generated@@29 $generated@@214)) (and (< 1 $generated@@126) ($generated@@28 $generated@@29 $generated@@214 $generated@@31))) (and (=> (not ($generated@@16 ($generated@@64 $generated@@12 ($generated@@15 ($generated@@78 ($generated@@64 $generated@@29 $generated@@214)))))) (let (($generated@@215 ($generated@@64 $generated@@29 ($generated@@130 ($generated@@64 $generated@@29 $generated@@214)))))
(let (($generated@@216 ($generated@@64 $generated@@29 ($generated@@131 ($generated@@64 $generated@@29 $generated@@214)))))
 (and ($generated@@129 ($generated@@62 (+ $generated@@213 1)) $generated@@216) ($generated@@129 ($generated@@62 (+ $generated@@213 1)) $generated@@215))))) (= ($generated@@127 ($generated@@128 $generated@@212) ($generated@@62 $generated@@213) ($generated@@64 $generated@@29 $generated@@214)) (ite ($generated@@78 ($generated@@64 $generated@@29 $generated@@214)) ($generated@@47 $generated@@42 ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 $generated@@213)))) (let (($generated@@217 ($generated@@64 $generated@@29 ($generated@@130 ($generated@@64 $generated@@29 $generated@@214)))))
(let (($generated@@218 ($generated@@64 $generated@@29 ($generated@@131 ($generated@@64 $generated@@29 $generated@@214)))))
($generated@@52 ($generated@@127 ($generated@@128 $generated@@212) ($generated@@62 (+ $generated@@213 1)) $generated@@218) ($generated@@127 ($generated@@128 $generated@@212) ($generated@@62 (+ $generated@@213 1)) $generated@@217))))))))
 :weight 3
 :pattern ( ($generated@@127 ($generated@@128 $generated@@212) ($generated@@62 $generated@@213) ($generated@@64 $generated@@29 $generated@@214)))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@230 T@T) ($generated@@231 T@T) ($generated@@232 T@T) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (= ($generated@@219 $generated@@230 $generated@@231 $generated@@232 ($generated@@226 $generated@@230 $generated@@231 $generated@@232 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@235 $generated@@236) $generated@@233)
 :weight 0
)) (and (forall (($generated@@237 T@T) ($generated@@238 T@T) ($generated@@239 T@T) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@219 $generated@@237 $generated@@238 $generated@@239 ($generated@@226 $generated@@237 $generated@@238 $generated@@239 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@219 $generated@@237 $generated@@238 $generated@@239 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)) (forall (($generated@@246 T@T) ($generated@@247 T@T) ($generated@@248 T@T) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or (= $generated@@252 $generated@@254) (= ($generated@@219 $generated@@246 $generated@@247 $generated@@248 ($generated@@226 $generated@@246 $generated@@247 $generated@@248 $generated@@250 $generated@@251 $generated@@252 $generated@@249) $generated@@253 $generated@@254) ($generated@@219 $generated@@246 $generated@@247 $generated@@248 $generated@@250 $generated@@253 $generated@@254)))
 :weight 0
)))) (= ($generated@@11 $generated@@220) 5)) (= ($generated@@11 $generated@@221) 6)) (forall (($generated@@255 T@T) ($generated@@256 T@T) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (= ($generated@@223 $generated@@255 $generated@@256 ($generated@@227 $generated@@255 $generated@@256 $generated@@258 $generated@@259 $generated@@257) $generated@@259) $generated@@257)
 :weight 0
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (or (= $generated@@264 $generated@@265) (= ($generated@@223 $generated@@260 $generated@@261 ($generated@@227 $generated@@260 $generated@@261 $generated@@263 $generated@@264 $generated@@262) $generated@@265) ($generated@@223 $generated@@260 $generated@@261 $generated@@263 $generated@@265)))
 :weight 0
))) (= ($generated@@11 $generated@@224) 7)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (= ($generated@@11 ($generated@@225 $generated@@266 $generated@@267)) 8))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@228 ($generated@@225 $generated@@268 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@225 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= ($generated@@229 ($generated@@225 $generated@@270 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@225 $generated@@270 $generated@@271))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 Bool) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (= ($generated@@16 ($generated@@219 $generated@@220 $generated@@221 $generated@@12 ($generated@@222 $generated@@272 $generated@@273 $generated@@274 $generated@@275) $generated@@276 $generated@@277))  (=> (and (or (not (= $generated@@276 $generated@@272)) (not true)) ($generated@@16 ($generated@@38 $generated@@12 ($generated@@223 $generated@@221 $generated@@224 ($generated@@223 $generated@@220 ($generated@@225 $generated@@221 $generated@@224) $generated@@273 $generated@@276) $generated@@274)))) $generated@@275))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221 $generated@@12 ($generated@@222 $generated@@272 $generated@@273 $generated@@274 $generated@@275) $generated@@276 $generated@@277))
)))
(assert  (=> (<= 1 $generated@@126) (forall (($generated@@278 T@U) ($generated@@279 Int) ($generated@@280 T@U) ) (!  (=> (or ($generated@@129 $generated@@279 $generated@@280) (and (< 1 $generated@@126) ($generated@@28 $generated@@29 $generated@@280 $generated@@31))) (and (and (and (not ($generated@@86 ($generated@@127 $generated@@278 $generated@@279 $generated@@280) $generated@@42)) (>= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@127 $generated@@278 $generated@@279 $generated@@280) ($generated@@62 0)))) $generated@@279)) (= (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@127 $generated@@278 $generated@@279 $generated@@280) ($generated@@62 0)))) $generated@@279) ($generated@@57 $generated@@280 $generated@@44))) ($generated@@28 $generated@@67 ($generated@@127 $generated@@278 $generated@@279 $generated@@280) ($generated@@68 $generated))))
 :pattern ( ($generated@@127 $generated@@278 $generated@@279 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (= ($generated@@281 ($generated@@47 $generated@@283 $generated@@284)) $generated@@283) (= ($generated@@282 ($generated@@47 $generated@@283 $generated@@284)) $generated@@284))
 :pattern ( ($generated@@47 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> ($generated@@69 $generated@@285 ($generated@@68 $generated@@286)) (and (= ($generated@@90 $generated@@67 ($generated@@38 $generated@@67 $generated@@285)) $generated@@285) ($generated@@28 $generated@@67 ($generated@@38 $generated@@67 $generated@@285) ($generated@@68 $generated@@286))))
 :pattern ( ($generated@@69 $generated@@285 ($generated@@68 $generated@@286)))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and ($generated@@287 $generated@@289) ($generated@@28 $generated@@29 $generated@@288 $generated@@31)) ($generated@@111 $generated@@29 $generated@@288 $generated@@31 $generated@@289))
 :pattern ( ($generated@@111 $generated@@29 $generated@@288 $generated@@31 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and ($generated@@287 $generated@@291) ($generated@@28 $generated@@29 $generated@@290 $generated@@56)) ($generated@@111 $generated@@29 $generated@@290 $generated@@56 $generated@@291))
 :pattern ( ($generated@@111 $generated@@29 $generated@@290 $generated@@56 $generated@@291))
)))
(assert (= ($generated@@27 $generated@@31) $generated@@3))
(assert (= ($generated@@292 $generated@@31) $generated@@9))
(assert (= ($generated@@27 $generated@@56) $generated@@4))
(assert (= ($generated@@292 $generated@@56) $generated@@10))
(assert (forall (($generated@@293 T@U) ($generated@@294 Int) ($generated@@295 Int) ) (!  (=> (and (and (<= 0 $generated@@294) (<= $generated@@294 $generated@@295)) (< $generated@@295 ($generated@@36 $generated@@293))) (= ($generated@@34 ($generated@@46 $generated@@293 $generated@@294) (- $generated@@295 $generated@@294)) ($generated@@34 $generated@@293 $generated@@295)))
 :weight 25
 :pattern ( ($generated@@34 $generated@@293 $generated@@295) ($generated@@46 $generated@@293 $generated@@294))
)))
(assert (= $generated@@44 ($generated@@64 $generated@@29 $generated@@44)))
(assert (= $generated@@45 ($generated@@64 $generated@@29 $generated@@45)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and ($generated@@287 $generated@@297) (and ($generated@@84 $generated@@296) ($generated@@111 $generated@@29 $generated@@296 $generated@@56 $generated@@297))) ($generated@@111 $generated@@67 ($generated@@150 $generated@@296) ($generated@@68 $generated) $generated@@297))
 :pattern ( ($generated@@111 $generated@@67 ($generated@@150 $generated@@296) ($generated@@68 $generated) $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 Int) ($generated@@300 Int) ) (!  (=> (and (and (<= 0 $generated@@299) (<= 0 $generated@@300)) (<= (+ $generated@@299 $generated@@300) ($generated@@36 $generated@@298))) (= ($generated@@46 ($generated@@46 $generated@@298 $generated@@299) $generated@@300) ($generated@@46 $generated@@298 (+ $generated@@299 $generated@@300))))
 :pattern ( ($generated@@46 ($generated@@46 $generated@@298 $generated@@299) $generated@@300))
)))
(assert  (=> (<= 2 $generated@@126) (forall (($generated@@301 T@U) ($generated@@302 Int) ($generated@@303 T@U) ) (!  (=> (or ($generated@@148 $generated@@302 $generated@@303) (and (< 2 $generated@@126) ($generated@@28 $generated@@67 $generated@@303 ($generated@@68 $generated)))) (and (=> (not (or ($generated@@86 $generated@@303 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@303 ($generated@@62 0)))) $generated@@302))) (=> (or (not (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@303 ($generated@@62 0)))) $generated@@302)) (not true)) (and ($generated@@148 (+ $generated@@302 1) $generated@@303) (let (($generated@@304 ($generated@@142 $generated@@301 (+ $generated@@302 1) $generated@@303)))
 (=> (not ($generated@@82 $generated@@304)) ($generated@@148 (+ $generated@@302 1) ($generated@@150 $generated@@304))))))) (= ($generated@@142 ($generated@@128 $generated@@301) $generated@@302 $generated@@303) (ite  (or ($generated@@86 $generated@@303 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@303 ($generated@@62 0)))) $generated@@302)) $generated@@45 (ite (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@303 ($generated@@62 0)))) $generated@@302) ($generated@@35 ($generated@@64 $generated@@29 $generated@@44) ($generated@@46 $generated@@303 ($generated@@62 1))) (let (($generated@@305 ($generated@@142 $generated@@301 (+ $generated@@302 1) $generated@@303)))
(ite ($generated@@82 $generated@@305) $generated@@45 (let (($generated@@306 ($generated@@142 $generated@@301 (+ $generated@@302 1) ($generated@@150 $generated@@305))))
(ite ($generated@@82 $generated@@306) $generated@@45 ($generated@@35 ($generated@@30 ($generated@@153 $generated@@305) ($generated@@153 $generated@@306)) ($generated@@150 $generated@@306)))))))))))
 :pattern ( ($generated@@142 ($generated@@128 $generated@@301) $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 Int) ) (!  (and (=> (< $generated@@309 ($generated@@36 $generated@@307)) (= ($generated@@34 ($generated@@52 $generated@@307 $generated@@308) $generated@@309) ($generated@@34 $generated@@307 $generated@@309))) (=> (<= ($generated@@36 $generated@@307) $generated@@309) (= ($generated@@34 ($generated@@52 $generated@@307 $generated@@308) $generated@@309) ($generated@@34 $generated@@308 (- $generated@@309 ($generated@@36 $generated@@307))))))
 :pattern ( ($generated@@34 ($generated@@52 $generated@@307 $generated@@308) $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and ($generated@@287 $generated@@311) (and ($generated@@80 $generated@@310) ($generated@@111 $generated@@29 $generated@@310 $generated@@31 $generated@@311))) ($generated@@111 $generated@@29 ($generated@@131 $generated@@310) $generated@@31 $generated@@311))
 :pattern ( ($generated@@111 $generated@@29 ($generated@@131 $generated@@310) $generated@@31 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and ($generated@@287 $generated@@313) (and ($generated@@80 $generated@@312) ($generated@@111 $generated@@29 $generated@@312 $generated@@31 $generated@@313))) ($generated@@111 $generated@@29 ($generated@@130 $generated@@312) $generated@@31 $generated@@313))
 :pattern ( ($generated@@111 $generated@@29 ($generated@@130 $generated@@312) $generated@@31 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and ($generated@@287 $generated@@315) (and ($generated@@84 $generated@@314) ($generated@@111 $generated@@29 $generated@@314 $generated@@56 $generated@@315))) ($generated@@111 $generated@@29 ($generated@@153 $generated@@314) $generated@@31 $generated@@315))
 :pattern ( ($generated@@111 $generated@@29 ($generated@@153 $generated@@314) $generated@@31 $generated@@315))
)))
(assert  (=> (<= 2 $generated@@126) (forall (($generated@@316 T@U) ($generated@@317 Int) ($generated@@318 T@U) ) (!  (=> (or ($generated@@148 ($generated@@62 $generated@@317) ($generated@@64 $generated@@67 $generated@@318)) (and (< 2 $generated@@126) ($generated@@28 $generated@@67 $generated@@318 ($generated@@68 $generated)))) (and (=> (not (or ($generated@@86 $generated@@318 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@64 $generated@@67 $generated@@318) ($generated@@62 0)))) $generated@@317))) (=> (or (not (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@64 $generated@@67 $generated@@318) ($generated@@62 0)))) ($generated@@62 $generated@@317))) (not true)) (and ($generated@@148 ($generated@@62 (+ $generated@@317 1)) ($generated@@64 $generated@@67 $generated@@318)) (let (($generated@@319 ($generated@@64 $generated@@29 ($generated@@142 ($generated@@128 $generated@@316) ($generated@@62 (+ $generated@@317 1)) ($generated@@64 $generated@@67 $generated@@318)))))
 (=> (not ($generated@@82 $generated@@319)) ($generated@@148 ($generated@@62 (+ $generated@@317 1)) ($generated@@150 $generated@@319))))))) (= ($generated@@142 ($generated@@128 $generated@@316) ($generated@@62 $generated@@317) ($generated@@64 $generated@@67 $generated@@318)) (ite  (or ($generated@@86 $generated@@318 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@64 $generated@@67 $generated@@318) ($generated@@62 0)))) $generated@@317)) $generated@@45 (ite (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@64 $generated@@67 $generated@@318) ($generated@@62 0)))) ($generated@@62 $generated@@317)) ($generated@@35 ($generated@@64 $generated@@29 $generated@@44) ($generated@@64 $generated@@67 ($generated@@46 ($generated@@64 $generated@@67 $generated@@318) ($generated@@62 1)))) (let (($generated@@320 ($generated@@64 $generated@@29 ($generated@@142 ($generated@@128 $generated@@316) ($generated@@62 (+ $generated@@317 1)) ($generated@@64 $generated@@67 $generated@@318)))))
(ite ($generated@@82 $generated@@320) $generated@@45 (let (($generated@@321 ($generated@@64 $generated@@29 ($generated@@142 ($generated@@128 $generated@@316) ($generated@@62 (+ $generated@@317 1)) ($generated@@64 $generated@@67 ($generated@@150 $generated@@320))))))
(ite ($generated@@82 $generated@@321) $generated@@45 ($generated@@35 ($generated@@64 $generated@@29 ($generated@@30 ($generated@@64 $generated@@29 ($generated@@153 $generated@@320)) ($generated@@64 $generated@@29 ($generated@@153 $generated@@321)))) ($generated@@64 $generated@@67 ($generated@@150 $generated@@321))))))))))))
 :weight 3
 :pattern ( ($generated@@142 ($generated@@128 $generated@@316) ($generated@@62 $generated@@317) ($generated@@64 $generated@@67 $generated@@318)))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (! (= ($generated@@30 ($generated@@64 $generated@@29 $generated@@322) ($generated@@64 $generated@@29 $generated@@323)) ($generated@@64 $generated@@29 ($generated@@30 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@30 ($generated@@64 $generated@@29 $generated@@322) ($generated@@64 $generated@@29 $generated@@323)))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (! (= ($generated@@35 ($generated@@64 $generated@@29 $generated@@324) ($generated@@64 $generated@@67 $generated@@325)) ($generated@@64 $generated@@29 ($generated@@35 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@35 ($generated@@64 $generated@@29 $generated@@324) ($generated@@64 $generated@@67 $generated@@325)))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 $generated@@326))) ($generated@@64 $generated@@224 ($generated@@90 $generated@@13 ($generated@@17 $generated@@326))))
 :pattern ( ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 $generated@@326))))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (= ($generated@@90 $generated@@328 ($generated@@64 $generated@@328 $generated@@327)) ($generated@@64 $generated@@224 ($generated@@90 $generated@@328 $generated@@327)))
 :pattern ( ($generated@@90 $generated@@328 ($generated@@64 $generated@@328 $generated@@327)))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= ($generated@@36 $generated@@329) 0) (= $generated@@329 $generated@@42))
 :pattern ( ($generated@@36 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 Int) ) (!  (=> (= $generated@@331 0) (= ($generated@@51 $generated@@330 $generated@@331) $generated@@42))
 :pattern ( ($generated@@51 $generated@@330 $generated@@331))
)))
(assert  (=> (<= 3 $generated@@126) (forall (($generated@@332 T@U) ) (!  (=> (or ($generated@@147 ($generated@@64 $generated@@67 $generated@@332)) (and (< 3 $generated@@126) ($generated@@28 $generated@@67 $generated@@332 ($generated@@68 $generated)))) (and ($generated@@148 ($generated@@62 0) ($generated@@64 $generated@@67 $generated@@332)) (= ($generated@@146 ($generated@@64 $generated@@67 $generated@@332)) (let (($generated@@333 ($generated@@64 $generated@@29 ($generated@@142 ($generated@@128 $generated@@149) ($generated@@62 0) ($generated@@64 $generated@@67 $generated@@332)))))
(ite  (and ($generated@@84 $generated@@333) ($generated@@86 ($generated@@150 $generated@@333) $generated@@42)) $generated@@333 $generated@@45)))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@64 $generated@@67 $generated@@332)))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (! ($generated@@111 $generated@@13 $generated@@335 $generated $generated@@334)
 :pattern ( ($generated@@111 $generated@@13 $generated@@335 $generated $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (! (= ($generated@@28 $generated@@67 $generated@@336 ($generated@@68 $generated@@337)) (forall (($generated@@338 Int) ) (!  (=> (and (<= 0 $generated@@338) (< $generated@@338 ($generated@@36 $generated@@336))) ($generated@@69 ($generated@@34 $generated@@336 $generated@@338) $generated@@337))
 :pattern ( ($generated@@34 $generated@@336 $generated@@338))
)))
 :pattern ( ($generated@@28 $generated@@67 $generated@@336 ($generated@@68 $generated@@337)))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 Int) ) (!  (=> (and (<= 0 $generated@@340) (< $generated@@340 ($generated@@36 $generated@@339))) (< ($generated@@37 ($generated@@38 $generated@@29 ($generated@@34 $generated@@339 $generated@@340))) ($generated@@93 $generated@@339)))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@29 ($generated@@34 $generated@@339 $generated@@340))))
)))
(assert (forall (($generated@@341 T@U) ) (! ($generated@@28 $generated@@13 $generated@@341 $generated)
 :pattern ( ($generated@@28 $generated@@13 $generated@@341 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@342 () T@U)
(declare-fun $generated@@343 () T@U)
(declare-fun $generated@@344 () Int)
(declare-fun $generated@@345 () T@U)
(declare-fun $generated@@346 () T@U)
(declare-fun $generated@@347 () Int)
(declare-fun $generated@@348 () T@U)
(declare-fun $generated@@349 () T@U)
(declare-fun $generated@@350 () T@U)
(declare-fun $generated@@351 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@352 true))
(let (($generated@@353  (=> (and (=> ($generated@@84 ($generated@@146 $generated@@342)) ($generated@@86 ($generated@@127 ($generated@@128 $generated@@149) ($generated@@62 0) ($generated@@153 ($generated@@146 $generated@@342))) $generated@@342)) (= (ControlFlow 0 14) 9)) $generated@@352)))
(let (($generated@@354  (=> ($generated@@111 $generated@@67 $generated@@342 ($generated@@68 $generated) $generated@@343) (and (=> (= (ControlFlow 0 10) (- 0 13)) (or ($generated@@86 $generated@@342 $generated@@342) (< ($generated@@93 $generated@@342) ($generated@@93 $generated@@342)))) (=> (or ($generated@@86 $generated@@342 $generated@@342) (< ($generated@@93 $generated@@342) ($generated@@93 $generated@@342))) (=> (or ($generated@@86 $generated@@342 $generated@@342) ($generated@@147 $generated@@342)) (=> (and (and ($generated@@84 ($generated@@146 $generated@@342)) (= $generated@@344 ($generated@@62 0))) (and ($generated@@111 $generated@@13 ($generated@@17 $generated@@344) $generated $generated@@343) ($generated@@111 $generated@@67 $generated@@342 ($generated@@68 $generated) $generated@@343))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or ($generated@@86 $generated@@342 $generated@@342) (< ($generated@@93 $generated@@342) ($generated@@93 $generated@@342)))) (=> (or ($generated@@86 $generated@@342 $generated@@342) (< ($generated@@93 $generated@@342) ($generated@@93 $generated@@342))) (=> (or ($generated@@86 $generated@@342 $generated@@342) ($generated@@147 $generated@@342)) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@84 ($generated@@146 $generated@@342))) (=> ($generated@@84 ($generated@@146 $generated@@342)) (=> (= $generated@@345 ($generated@@153 ($generated@@146 $generated@@342))) (=> (and (and ($generated@@111 $generated@@29 $generated@@345 $generated@@31 $generated@@343) ($generated@@129 ($generated@@62 0) ($generated@@153 ($generated@@146 $generated@@342)))) (and ($generated@@86 ($generated@@127 ($generated@@128 $generated@@149) ($generated@@62 0) ($generated@@153 ($generated@@146 $generated@@342))) $generated@@342) (= (ControlFlow 0 10) 9))) $generated@@352))))))))))))))
(let (($generated@@355  (=> ($generated@@28 $generated@@29 ($generated@@146 $generated@@342) $generated@@56) (and (=> (= (ControlFlow 0 15) 10) $generated@@354) (=> (= (ControlFlow 0 15) 14) $generated@@353)))))
(let (($generated@@356  (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@84 ($generated@@146 $generated@@342)) ($generated@@86 ($generated@@127 ($generated@@128 ($generated@@128 $generated@@149)) ($generated@@62 0) ($generated@@153 ($generated@@146 $generated@@342))) $generated@@342)))))
(let (($generated@@357  (=> (and (and (not (and ($generated@@84 $generated@@346) ($generated@@86 ($generated@@150 $generated@@346) $generated@@42))) (= ($generated@@146 $generated@@342) ($generated@@64 $generated@@29 $generated@@45))) (and ($generated@@28 $generated@@29 ($generated@@146 $generated@@342) $generated@@56) (= (ControlFlow 0 4) 2))) $generated@@356)))
(let (($generated@@358  (=> (and (and (and ($generated@@84 $generated@@346) ($generated@@86 ($generated@@150 $generated@@346) $generated@@42)) (= ($generated@@146 $generated@@342) $generated@@346)) (and ($generated@@28 $generated@@29 ($generated@@146 $generated@@342) $generated@@56) (= (ControlFlow 0 3) 2))) $generated@@356)))
(let (($generated@@359  (=> (not ($generated@@84 $generated@@346)) (and (=> (= (ControlFlow 0 7) 3) $generated@@358) (=> (= (ControlFlow 0 7) 4) $generated@@357)))))
(let (($generated@@360  (=> ($generated@@84 $generated@@346) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@84 $generated@@346)) (=> ($generated@@84 $generated@@346) (and (=> (= (ControlFlow 0 5) 3) $generated@@358) (=> (= (ControlFlow 0 5) 4) $generated@@357)))))))
(let (($generated@@361  (=> (and (and (and (= $generated@@347 ($generated@@62 0)) ($generated@@111 $generated@@13 ($generated@@17 $generated@@347) $generated $generated@@343)) (and ($generated@@111 $generated@@67 $generated@@342 ($generated@@68 $generated) $generated@@343) ($generated@@148 ($generated@@62 0) $generated@@342))) (and (and (= $generated@@348 ($generated@@142 ($generated@@128 $generated@@149) ($generated@@62 0) $generated@@342)) ($generated@@148 ($generated@@62 0) $generated@@342)) (and ($generated@@28 $generated@@29 $generated@@348 $generated@@56) (= $generated@@346 $generated@@348)))) (and (=> (= (ControlFlow 0 8) 5) $generated@@360) (=> (= (ControlFlow 0 8) 7) $generated@@359)))))
(let (($generated@@362  (=> (= $generated@@349 ($generated@@222 $generated@@350 $generated@@343 $generated@@2 false)) (and (=> (= (ControlFlow 0 16) 15) $generated@@355) (=> (= (ControlFlow 0 16) 8) $generated@@361)))))
(let (($generated@@363  (=> (and (and (and ($generated@@287 $generated@@343) ($generated@@351 $generated@@343)) ($generated@@28 $generated@@67 $generated@@342 ($generated@@68 $generated))) (and (= 3 $generated@@126) (= (ControlFlow 0 17) 16))) $generated@@362)))
$generated@@363)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
