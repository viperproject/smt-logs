(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@70 (T@T T@U T@U) Bool)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 () Int)
(declare-fun $generated@@81 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@103 (T@T T@U) T@U)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U) Bool)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Int)
(declare-fun $generated@@180 (T@U) Int)
(declare-fun $generated@@188 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@10 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@31) $generated@@33) ($generated@@27 $generated@@28 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@31) $generated@@33))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
)))
(assert (= ($generated@@34 $generated@@35) $generated@@6))
(assert (= ($generated@@10 $generated@@36) 4))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@38 $generated@@40) ($generated@@27 $generated@@36 $generated@@35 ($generated@@37 $generated@@39) $generated@@40))
 :pattern ( ($generated@@27 $generated@@36 $generated@@35 ($generated@@37 $generated@@39) $generated@@40))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@10 $generated@@44) 5)) (= ($generated@@10 $generated@@45) 6)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@10 ($generated@@46 $generated@@61 $generated@@62)) 7))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@68 ($generated@@30 $generated@@67) $generated@@69)  (or (= $generated@@68 $generated@@41) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@28 ($generated@@46 $generated@@44 $generated@@45) $generated@@69 $generated@@68) $generated@@2)))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@68 ($generated@@30 $generated@@67) $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! ($generated@@70 $generated@@36 $generated@@35 ($generated@@37 $generated@@71))
 :pattern ( ($generated@@70 $generated@@36 $generated@@35 ($generated@@37 $generated@@71)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@70 $generated@@36 ($generated@@75 $generated@@78 $generated@@79) ($generated@@37 $generated@@77))  (and ($generated@@76 $generated@@78 $generated@@77) ($generated@@70 $generated@@36 $generated@@79 ($generated@@37 $generated@@77))))
 :pattern ( ($generated@@70 $generated@@36 ($generated@@75 $generated@@78 $generated@@79) ($generated@@37 $generated@@77)))
)))
(assert  (=> (<= 1 $generated@@80) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or ($generated@@83 $generated@@90 $generated@@92 $generated@@93 $generated@@94 ($generated@@72 $generated@@36 $generated@@95)) (and (< 1 $generated@@80) (and (and (and (and (or (not (= $generated@@92 $generated@@41)) (not true)) ($generated@@70 $generated@@28 $generated@@92 ($generated@@29 $generated@@90))) ($generated@@76 $generated@@93 $generated@@90)) ($generated@@76 $generated@@94 $generated@@90)) ($generated@@70 $generated@@36 $generated@@95 ($generated@@37 $generated@@90))))) (and (=> (not ($generated@@15 ($generated@@72 $generated@@11 ($generated@@14 ($generated@@84 ($generated@@72 $generated@@36 $generated@@95)))))) (let (($generated@@96 ($generated@@72 $generated@@36 ($generated@@85 ($generated@@72 $generated@@36 $generated@@95)))))
(let (($generated@@97 ($generated@@72 $generated@@45 ($generated@@86 ($generated@@72 $generated@@36 $generated@@95)))))
 (and ($generated@@87 $generated@@90 $generated@@92 $generated@@97) (=> ($generated@@88 ($generated@@89 $generated@@90 $generated@@92 $generated@@97) $generated@@94) ($generated@@83 $generated@@90 $generated@@92 $generated@@93 $generated@@97 $generated@@96)))))) (= ($generated@@81 $generated@@90 ($generated@@82 $generated@@91) $generated@@92 $generated@@93 $generated@@94 ($generated@@72 $generated@@36 $generated@@95)) (ite ($generated@@84 ($generated@@72 $generated@@36 $generated@@95)) (= $generated@@93 $generated@@94) (let (($generated@@98 ($generated@@72 $generated@@36 ($generated@@85 ($generated@@72 $generated@@36 $generated@@95)))))
(let (($generated@@99 ($generated@@72 $generated@@45 ($generated@@86 ($generated@@72 $generated@@36 $generated@@95)))))
 (and ($generated@@88 ($generated@@89 $generated@@90 $generated@@92 $generated@@99) $generated@@94) ($generated@@81 $generated@@90 ($generated@@82 $generated@@91) $generated@@92 $generated@@93 $generated@@99 $generated@@98))))))))
 :weight 3
 :pattern ( ($generated@@81 $generated@@90 ($generated@@82 $generated@@91) $generated@@92 $generated@@93 $generated@@94 ($generated@@72 $generated@@36 $generated@@95)))
))))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@84 $generated@@100) (= ($generated@@34 $generated@@100) $generated@@6))
 :pattern ( ($generated@@84 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@101 $generated@@102) (= ($generated@@34 $generated@@102) $generated@@7))
 :pattern ( ($generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@103 $generated@@105 ($generated@@42 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@42 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@101 $generated@@106) (exists (($generated@@107 T@U) ($generated@@108 T@U) ) (= $generated@@106 ($generated@@75 $generated@@107 $generated@@108))))
 :pattern ( ($generated@@101 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@84 $generated@@109) (= $generated@@109 $generated@@35))
 :pattern ( ($generated@@84 $generated@@109))
)))
(assert (= ($generated@@10 $generated@@110) 8))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@70 $generated@@110 $generated@@112 ($generated@@111 $generated@@113)) (forall (($generated@@114 T@U) ) (!  (=> ($generated@@88 $generated@@112 $generated@@114) ($generated@@76 $generated@@114 $generated@@113))
 :pattern ( ($generated@@88 $generated@@112 $generated@@114))
)))
 :pattern ( ($generated@@70 $generated@@110 $generated@@112 ($generated@@111 $generated@@113)))
)))
(assert  (=> (<= 0 $generated@@80) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or ($generated@@87 $generated@@115 $generated@@116 $generated@@117) (and (< 0 $generated@@80) (and (and (or (not (= $generated@@116 $generated@@41)) (not true)) ($generated@@70 $generated@@28 $generated@@116 ($generated@@29 $generated@@115))) ($generated@@76 $generated@@117 $generated@@115)))) ($generated@@70 $generated@@110 ($generated@@89 $generated@@115 $generated@@116 $generated@@117) ($generated@@111 $generated@@115)))
 :pattern ( ($generated@@89 $generated@@115 $generated@@116 $generated@@117))
))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@70 $generated@@28 $generated@@119 ($generated@@29 $generated@@118))  (and ($generated@@70 $generated@@28 $generated@@119 ($generated@@30 $generated@@118)) (or (not (= $generated@@119 $generated@@41)) (not true))))
 :pattern ( ($generated@@70 $generated@@28 $generated@@119 ($generated@@29 $generated@@118)))
 :pattern ( ($generated@@70 $generated@@28 $generated@@119 ($generated@@30 $generated@@118)))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@120 ($generated@@103 $generated@@124 $generated@@121) $generated@@122 $generated@@123) ($generated@@27 $generated@@124 $generated@@121 $generated@@122 $generated@@123))
 :pattern ( ($generated@@120 ($generated@@103 $generated@@124 $generated@@121) $generated@@122 $generated@@123))
)))
(assert  (=> (<= 1 $generated@@80) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (or ($generated@@83 $generated@@125 ($generated@@72 $generated@@28 $generated@@127) ($generated@@72 $generated@@45 $generated@@128) ($generated@@72 $generated@@45 $generated@@129) ($generated@@72 $generated@@36 $generated@@130)) (and (< 1 $generated@@80) (and (and (and (and (or (not (= $generated@@127 $generated@@41)) (not true)) ($generated@@70 $generated@@28 $generated@@127 ($generated@@29 $generated@@125))) ($generated@@76 $generated@@128 $generated@@125)) ($generated@@76 $generated@@129 $generated@@125)) ($generated@@70 $generated@@36 $generated@@130 ($generated@@37 $generated@@125))))) (and (=> (not ($generated@@15 ($generated@@72 $generated@@11 ($generated@@14 ($generated@@84 ($generated@@72 $generated@@36 $generated@@130)))))) (let (($generated@@131 ($generated@@72 $generated@@36 ($generated@@85 ($generated@@72 $generated@@36 $generated@@130)))))
(let (($generated@@132 ($generated@@72 $generated@@45 ($generated@@86 ($generated@@72 $generated@@36 $generated@@130)))))
 (and ($generated@@87 $generated@@125 ($generated@@72 $generated@@28 $generated@@127) $generated@@132) (=> ($generated@@88 ($generated@@89 $generated@@125 ($generated@@72 $generated@@28 $generated@@127) $generated@@132) ($generated@@72 $generated@@45 $generated@@129)) ($generated@@83 $generated@@125 ($generated@@72 $generated@@28 $generated@@127) ($generated@@72 $generated@@45 $generated@@128) $generated@@132 $generated@@131)))))) (= ($generated@@81 $generated@@125 ($generated@@82 $generated@@126) ($generated@@72 $generated@@28 $generated@@127) ($generated@@72 $generated@@45 $generated@@128) ($generated@@72 $generated@@45 $generated@@129) ($generated@@72 $generated@@36 $generated@@130)) (ite ($generated@@84 ($generated@@72 $generated@@36 $generated@@130)) (= ($generated@@72 $generated@@45 $generated@@128) ($generated@@72 $generated@@45 $generated@@129)) (let (($generated@@133 ($generated@@72 $generated@@36 ($generated@@85 ($generated@@72 $generated@@36 $generated@@130)))))
(let (($generated@@134 ($generated@@72 $generated@@45 ($generated@@86 ($generated@@72 $generated@@36 $generated@@130)))))
 (and ($generated@@88 ($generated@@89 $generated@@125 ($generated@@72 $generated@@28 $generated@@127) $generated@@134) ($generated@@72 $generated@@45 $generated@@129)) ($generated@@81 $generated@@125 ($generated@@82 $generated@@126) ($generated@@72 $generated@@28 $generated@@127) ($generated@@72 $generated@@45 $generated@@128) $generated@@134 $generated@@133))))))))
 :weight 3
 :pattern ( ($generated@@81 $generated@@125 ($generated@@82 $generated@@126) ($generated@@72 $generated@@28 $generated@@127) ($generated@@72 $generated@@45 $generated@@128) ($generated@@72 $generated@@45 $generated@@129) ($generated@@72 $generated@@36 $generated@@130)))
))))
(assert (forall (($generated@@136 T@U) ) (!  (and (= ($generated@@26 ($generated@@37 $generated@@136)) $generated@@3) (= ($generated@@135 ($generated@@37 $generated@@136)) $generated@@8))
 :pattern ( ($generated@@37 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ) (!  (and (= ($generated@@26 ($generated@@30 $generated@@137)) $generated@@4) (= ($generated@@135 ($generated@@30 $generated@@137)) $generated@@9))
 :pattern ( ($generated@@30 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (!  (and (= ($generated@@26 ($generated@@29 $generated@@138)) $generated@@5) (= ($generated@@135 ($generated@@29 $generated@@138)) $generated@@9))
 :pattern ( ($generated@@29 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@70 $generated@@28 $generated@@141 ($generated@@30 $generated@@140))  (or (= $generated@@141 $generated@@41) (= ($generated@@139 $generated@@141) ($generated@@30 $generated@@140))))
 :pattern ( ($generated@@70 $generated@@28 $generated@@141 ($generated@@30 $generated@@140)))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@81 $generated@@142 ($generated@@82 $generated@@143) $generated@@144 $generated@@145 $generated@@146 $generated@@147) ($generated@@81 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147))
 :pattern ( ($generated@@81 $generated@@142 ($generated@@82 $generated@@143) $generated@@144 $generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@70 $generated@@36 $generated@@149 ($generated@@37 $generated@@148)) (or ($generated@@84 $generated@@149) ($generated@@101 $generated@@149)))
 :pattern ( ($generated@@101 $generated@@149) ($generated@@70 $generated@@36 $generated@@149 ($generated@@37 $generated@@148)))
 :pattern ( ($generated@@84 $generated@@149) ($generated@@70 $generated@@36 $generated@@149 ($generated@@37 $generated@@148)))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> ($generated@@76 $generated@@150 $generated) (and (= ($generated@@103 $generated@@11 ($generated@@42 $generated@@11 $generated@@150)) $generated@@150) ($generated@@70 $generated@@11 ($generated@@42 $generated@@11 $generated@@150) $generated)))
 :pattern ( ($generated@@76 $generated@@150 $generated))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@76 ($generated@@103 $generated@@153 $generated@@151) $generated@@152) ($generated@@70 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@76 ($generated@@103 $generated@@153 $generated@@151) $generated@@152))
)))
(assert  (=> (<= 0 $generated@@80) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (or ($generated@@87 $generated@@155 $generated@@156 $generated@@157) (and (< 0 $generated@@80) (and (and (or (not (= $generated@@156 $generated@@41)) (not true)) ($generated@@27 $generated@@28 $generated@@156 ($generated@@29 $generated@@155) $generated@@154)) (and ($generated@@76 $generated@@157 $generated@@155) ($generated@@120 $generated@@157 $generated@@155 $generated@@154))))) ($generated@@38 $generated@@154)) ($generated@@27 $generated@@110 ($generated@@89 $generated@@155 $generated@@156 $generated@@157) ($generated@@111 $generated@@155) $generated@@154))
 :pattern ( ($generated@@27 $generated@@110 ($generated@@89 $generated@@155 $generated@@156 $generated@@157) ($generated@@111 $generated@@155) $generated@@154))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@27 $generated@@110 $generated@@158 ($generated@@111 $generated@@159) $generated@@160) (forall (($generated@@161 T@U) ) (!  (=> ($generated@@88 $generated@@158 $generated@@161) ($generated@@120 $generated@@161 $generated@@159 $generated@@160))
 :pattern ( ($generated@@88 $generated@@158 $generated@@161))
)))
 :pattern ( ($generated@@27 $generated@@110 $generated@@158 ($generated@@111 $generated@@159) $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@34 ($generated@@75 $generated@@162 $generated@@163)) $generated@@7)
 :pattern ( ($generated@@75 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@86 ($generated@@75 $generated@@164 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@75 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@85 ($generated@@75 $generated@@166 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@75 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@168 ($generated@@111 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@111 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (! (= ($generated@@26 ($generated@@111 $generated@@170)) $generated@@1)
 :pattern ( ($generated@@111 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@171 ($generated@@37 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@37 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@173 ($generated@@30 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@30 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@175 ($generated@@29 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@29 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@42 $generated@@178 ($generated@@103 $generated@@178 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@103 $generated@@178 $generated@@177))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (< ($generated@@179 $generated@@181) ($generated@@180 ($generated@@75 $generated@@181 $generated@@182)))
 :pattern ( ($generated@@75 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (< ($generated@@180 $generated@@184) ($generated@@180 ($generated@@75 $generated@@183 $generated@@184)))
 :pattern ( ($generated@@75 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and ($generated@@38 $generated@@187) (and ($generated@@101 $generated@@185) ($generated@@27 $generated@@36 $generated@@185 ($generated@@37 $generated@@186) $generated@@187))) ($generated@@120 ($generated@@86 $generated@@185) $generated@@186 $generated@@187))
 :pattern ( ($generated@@120 ($generated@@86 $generated@@185) $generated@@186 $generated@@187))
)))
(assert  (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@188 $generated@@191 $generated@@192 $generated@@193 ($generated@@190 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@196 $generated@@197) $generated@@194)
 :weight 0
)) (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@T) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@188 $generated@@198 $generated@@199 $generated@@200 ($generated@@190 $generated@@198 $generated@@199 $generated@@200 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@188 $generated@@198 $generated@@199 $generated@@200 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@T) ($generated@@208 T@T) ($generated@@209 T@T) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@188 $generated@@207 $generated@@208 $generated@@209 ($generated@@190 $generated@@207 $generated@@208 $generated@@209 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@188 $generated@@207 $generated@@208 $generated@@209 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@15 ($generated@@188 $generated@@28 $generated@@44 $generated@@11 ($generated@@189 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (or (not (= $generated@@220 $generated@@216)) (not true)) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@28 ($generated@@46 $generated@@44 $generated@@45) $generated@@217 $generated@@220) $generated@@218)))) $generated@@219))
 :pattern ( ($generated@@188 $generated@@28 $generated@@44 $generated@@11 ($generated@@189 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (=> (<= 1 $generated@@80) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (or ($generated@@83 $generated@@222 $generated@@224 $generated@@225 $generated@@226 $generated@@227) (and (< 1 $generated@@80) (and (and (and (and (or (not (= $generated@@224 $generated@@41)) (not true)) ($generated@@70 $generated@@28 $generated@@224 ($generated@@29 $generated@@222))) ($generated@@76 $generated@@225 $generated@@222)) ($generated@@76 $generated@@226 $generated@@222)) ($generated@@70 $generated@@36 $generated@@227 ($generated@@37 $generated@@222))))) (and (=> (not ($generated@@84 $generated@@227)) (let (($generated@@228 ($generated@@85 $generated@@227)))
(let (($generated@@229 ($generated@@86 $generated@@227)))
 (and ($generated@@87 $generated@@222 $generated@@224 $generated@@229) (=> ($generated@@88 ($generated@@89 $generated@@222 $generated@@224 $generated@@229) $generated@@226) ($generated@@83 $generated@@222 $generated@@224 $generated@@225 $generated@@229 $generated@@228)))))) (= ($generated@@81 $generated@@222 ($generated@@82 $generated@@223) $generated@@224 $generated@@225 $generated@@226 $generated@@227) (ite ($generated@@84 $generated@@227) (= $generated@@225 $generated@@226) (let (($generated@@230 ($generated@@85 $generated@@227)))
(let (($generated@@231 ($generated@@86 $generated@@227)))
 (and ($generated@@88 ($generated@@89 $generated@@222 $generated@@224 $generated@@231) $generated@@226) ($generated@@81 $generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@231 $generated@@230))))))))
 :pattern ( ($generated@@81 $generated@@222 ($generated@@82 $generated@@223) $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@232 T@U) ) (! (= ($generated@@179 ($generated@@103 $generated@@36 $generated@@232)) ($generated@@180 $generated@@232))
 :pattern ( ($generated@@179 ($generated@@103 $generated@@36 $generated@@232)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> ($generated@@76 $generated@@233 ($generated@@111 $generated@@234)) (and (= ($generated@@103 $generated@@110 ($generated@@42 $generated@@110 $generated@@233)) $generated@@233) ($generated@@70 $generated@@110 ($generated@@42 $generated@@110 $generated@@233) ($generated@@111 $generated@@234))))
 :pattern ( ($generated@@76 $generated@@233 ($generated@@111 $generated@@234)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> ($generated@@76 $generated@@236 ($generated@@37 $generated@@235)) (and (= ($generated@@103 $generated@@36 ($generated@@42 $generated@@36 $generated@@236)) $generated@@236) ($generated@@70 $generated@@36 ($generated@@42 $generated@@36 $generated@@236) ($generated@@37 $generated@@235))))
 :pattern ( ($generated@@76 $generated@@236 ($generated@@37 $generated@@235)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> ($generated@@76 $generated@@238 ($generated@@30 $generated@@237)) (and (= ($generated@@103 $generated@@28 ($generated@@42 $generated@@28 $generated@@238)) $generated@@238) ($generated@@70 $generated@@28 ($generated@@42 $generated@@28 $generated@@238) ($generated@@30 $generated@@237))))
 :pattern ( ($generated@@76 $generated@@238 ($generated@@30 $generated@@237)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> ($generated@@76 $generated@@240 ($generated@@29 $generated@@239)) (and (= ($generated@@103 $generated@@28 ($generated@@42 $generated@@28 $generated@@240)) $generated@@240) ($generated@@70 $generated@@28 ($generated@@42 $generated@@28 $generated@@240) ($generated@@29 $generated@@239))))
 :pattern ( ($generated@@76 $generated@@240 ($generated@@29 $generated@@239)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and ($generated@@38 $generated@@243) (and ($generated@@101 $generated@@241) ($generated@@27 $generated@@36 $generated@@241 ($generated@@37 $generated@@242) $generated@@243))) ($generated@@27 $generated@@36 ($generated@@85 $generated@@241) ($generated@@37 $generated@@242) $generated@@243))
 :pattern ( ($generated@@27 $generated@@36 ($generated@@85 $generated@@241) ($generated@@37 $generated@@242) $generated@@243))
)))
(assert (= $generated@@35 ($generated@@72 $generated@@36 $generated@@35)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= ($generated@@75 ($generated@@72 $generated@@45 $generated@@244) ($generated@@72 $generated@@36 $generated@@245)) ($generated@@72 $generated@@36 ($generated@@75 $generated@@244 $generated@@245)))
 :pattern ( ($generated@@75 ($generated@@72 $generated@@45 $generated@@244) ($generated@@72 $generated@@36 $generated@@245)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@T) ) (! (= ($generated@@103 $generated@@247 ($generated@@72 $generated@@247 $generated@@246)) ($generated@@72 $generated@@45 ($generated@@103 $generated@@247 $generated@@246)))
 :pattern ( ($generated@@103 $generated@@247 ($generated@@72 $generated@@247 $generated@@246)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! ($generated@@27 $generated@@11 $generated@@249 $generated $generated@@248)
 :pattern ( ($generated@@27 $generated@@11 $generated@@249 $generated $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> ($generated@@38 $generated@@253) (= ($generated@@27 $generated@@36 ($generated@@75 $generated@@251 $generated@@252) ($generated@@37 $generated@@250) $generated@@253)  (and ($generated@@120 $generated@@251 $generated@@250 $generated@@253) ($generated@@27 $generated@@36 $generated@@252 ($generated@@37 $generated@@250) $generated@@253))))
 :pattern ( ($generated@@27 $generated@@36 ($generated@@75 $generated@@251 $generated@@252) ($generated@@37 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (! ($generated@@70 $generated@@11 $generated@@254 $generated)
 :pattern ( ($generated@@70 $generated@@11 $generated@@254 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@269 true))
(let (($generated@@270  (=> (and (not ($generated@@88 ($generated@@89 $generated@@255 $generated@@256 $generated@@257) $generated@@258)) (= (ControlFlow 0 7) 4)) $generated@@269)))
(let (($generated@@271  (=> ($generated@@88 ($generated@@89 $generated@@255 $generated@@256 $generated@@257) $generated@@258) (=> (and (and ($generated@@120 ($generated@@103 $generated@@28 $generated@@256) ($generated@@30 $generated@@255) $generated@@259) ($generated@@120 $generated@@260 $generated@@255 $generated@@259)) (and ($generated@@120 $generated@@257 $generated@@255 $generated@@259) ($generated@@27 $generated@@36 $generated@@261 ($generated@@37 $generated@@255) $generated@@259))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@180 $generated@@261) ($generated@@180 $generated@@262))) (=> (< ($generated@@180 $generated@@261) ($generated@@180 $generated@@262)) (=> (and ($generated@@83 $generated@@255 $generated@@256 $generated@@260 $generated@@257 $generated@@261) (= (ControlFlow 0 5) 4)) $generated@@269)))))))
(let (($generated@@272  (=> (and (and (= $generated@@262 ($generated@@75 $generated@@263 $generated@@264)) ($generated@@76 $generated@@263 $generated@@255)) (and ($generated@@70 $generated@@36 $generated@@264 ($generated@@37 $generated@@255)) (= $generated@@265 $generated@@264))) (=> (and (and (and ($generated@@70 $generated@@36 $generated@@265 ($generated@@37 $generated@@255)) (= $generated@@261 $generated@@265)) (and (= $generated@@266 $generated@@263) ($generated@@76 $generated@@266 $generated@@255))) (and (and (= $generated@@257 $generated@@266) ($generated@@120 ($generated@@103 $generated@@28 $generated@@256) ($generated@@30 $generated@@255) $generated@@259)) (and ($generated@@120 $generated@@257 $generated@@255 $generated@@259) ($generated@@87 $generated@@255 $generated@@256 $generated@@257)))) (and (=> (= (ControlFlow 0 8) 5) $generated@@271) (=> (= (ControlFlow 0 8) 7) $generated@@270))))))
(let (($generated@@273 true))
(let (($generated@@274  (=> (or (not (= $generated@@262 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 9) 8) $generated@@272) (=> (= (ControlFlow 0 9) 3) $generated@@273)))))
(let (($generated@@275 true))
(let (($generated@@276 true))
(let (($generated@@277  (=> (= $generated@@267 ($generated@@189 $generated@@41 $generated@@259 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@276) (=> (= (ControlFlow 0 10) 2) $generated@@275)) (=> (= (ControlFlow 0 10) 9) $generated@@274)))))
(let (($generated@@278  (=> (and ($generated@@38 $generated@@259) ($generated@@268 $generated@@259)) (=> (and (and (and (or (not (= $generated@@256 $generated@@41)) (not true)) (and ($generated@@70 $generated@@28 $generated@@256 ($generated@@29 $generated@@255)) ($generated@@27 $generated@@28 $generated@@256 ($generated@@29 $generated@@255) $generated@@259))) ($generated@@76 $generated@@260 $generated@@255)) (and (and ($generated@@76 $generated@@258 $generated@@255) ($generated@@70 $generated@@36 $generated@@262 ($generated@@37 $generated@@255))) (and (= 1 $generated@@80) (= (ControlFlow 0 11) 10)))) $generated@@277))))
$generated@@278)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
