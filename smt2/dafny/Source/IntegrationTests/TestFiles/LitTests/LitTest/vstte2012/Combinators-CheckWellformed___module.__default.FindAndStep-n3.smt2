(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) Int)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@U) Bool)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@230 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@25) 3))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@41 T@U) ) (!  (=> (or ($generated@@23 $generated@@41) (and (< 2 $generated@@21) ($generated@@24 $generated@@25 $generated@@41 $generated@@26))) (and (=> (not ($generated@@27 $generated@@41)) (=> (not ($generated@@28 $generated@@41)) (let (($generated@@42 ($generated@@29 $generated@@41)))
(let (($generated@@43 ($generated@@30 $generated@@41)))
 (=> (not ($generated@@27 $generated@@43)) (=> (not ($generated@@28 $generated@@43)) (let (($generated@@44 ($generated@@29 $generated@@43)))
(let (($generated@@45 ($generated@@30 $generated@@43)))
 (and (and ($generated@@31 $generated@@45) (=> ($generated@@32 $generated@@45 $generated@@33) (and ($generated@@34 $generated@@44) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@44) ($generated@@34 $generated@@42))))) (=> (not (and (and ($generated@@32 $generated@@45 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@44)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@42))) (=> ($generated@@38 $generated@@45) (and ($generated@@31 ($generated@@30 $generated@@45)) (=> ($generated@@32 ($generated@@30 $generated@@45) $generated@@39) (and ($generated@@34 ($generated@@29 $generated@@45)) (=> ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@45)) (and ($generated@@34 $generated@@44) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@44) ($generated@@34 $generated@@42)))))))))))))))))) (= ($generated@@22 $generated@@41) (ite ($generated@@27 $generated@@41) $generated@@41 (ite ($generated@@28 $generated@@41) $generated@@41 (let (($generated@@46 ($generated@@29 $generated@@41)))
(let (($generated@@47 ($generated@@30 $generated@@41)))
(ite ($generated@@27 $generated@@47) $generated@@41 (ite ($generated@@28 $generated@@47) $generated@@41 (let (($generated@@48 ($generated@@29 $generated@@47)))
(let (($generated@@49 ($generated@@30 $generated@@47)))
(ite  (and (and ($generated@@32 $generated@@49 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@48)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@46)) $generated@@48 (ite  (and (and (and (and ($generated@@38 $generated@@49) ($generated@@32 ($generated@@30 $generated@@49) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@49))) ($generated@@35 ($generated@@36 $generated@@37) $generated@@48)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@46)) ($generated@@40 ($generated@@40 ($generated@@29 $generated@@49) $generated@@46) ($generated@@40 $generated@@48 $generated@@46)) $generated@@41)))))))))))))
 :pattern ( ($generated@@22 $generated@@41))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or ($generated@@51 $generated@@53) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@53 $generated@@26))) (and (=> (not ($generated@@27 $generated@@53)) (=> (not ($generated@@28 $generated@@53)) (let (($generated@@54 ($generated@@29 $generated@@53)))
(let (($generated@@55 ($generated@@30 $generated@@53)))
 (and ($generated@@51 $generated@@55) (=> (not ($generated@@50 $generated@@52 $generated@@55)) ($generated@@51 $generated@@54))))))) (= ($generated@@50 ($generated@@36 $generated@@52) $generated@@53) (ite ($generated@@27 $generated@@53) true (ite ($generated@@28 $generated@@53) false (let (($generated@@56 ($generated@@29 $generated@@53)))
(let (($generated@@57 ($generated@@30 $generated@@53)))
 (or ($generated@@50 $generated@@52 $generated@@57) ($generated@@50 $generated@@52 $generated@@56)))))))))
 :pattern ( ($generated@@50 ($generated@@36 $generated@@52) $generated@@53))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@40 $generated@@58 $generated@@59) $generated@@26)  (and ($generated@@24 $generated@@25 $generated@@58 $generated@@26) ($generated@@24 $generated@@25 $generated@@59 $generated@@26)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@40 $generated@@58 $generated@@59) $generated@@26))
)))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@61 $generated@@64) (and (< 3 $generated@@21) ($generated@@24 $generated@@25 $generated@@64 $generated@@26))) (and (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@64)) (and (not ($generated@@50 ($generated@@36 $generated@@37) ($generated@@60 $generated@@63 $generated@@64))) (or ($generated@@32 ($generated@@60 $generated@@63 $generated@@64) $generated@@64) (< ($generated@@62 ($generated@@36 $generated@@37) ($generated@@60 $generated@@63 $generated@@64)) ($generated@@62 ($generated@@36 $generated@@37) $generated@@64))))) ($generated@@24 $generated@@25 ($generated@@60 $generated@@63 $generated@@64) $generated@@26)))
 :pattern ( ($generated@@60 $generated@@63 $generated@@64))
))))
(assert (= ($generated@@65 $generated@@39) $generated@@1))
(assert (= ($generated@@65 $generated@@33) $generated@@2))
(assert ($generated@@24 $generated@@25 $generated@@39 $generated@@26))
(assert ($generated@@24 $generated@@25 $generated@@33 $generated@@26))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@34 $generated@@67) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@67 $generated@@26))) (=> (and ($generated@@35 $generated@@66 $generated@@67) ($generated@@38 $generated@@67)) (and ($generated@@35 $generated@@66 ($generated@@30 $generated@@67)) ($generated@@35 $generated@@66 ($generated@@29 $generated@@67)))))
 :pattern ( ($generated@@35 $generated@@66 $generated@@67))
))))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@69 T@U) ) (!  (=> (or ($generated@@23 ($generated@@68 $generated@@25 $generated@@69)) (and (< 2 $generated@@21) ($generated@@24 $generated@@25 $generated@@69 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@68 $generated@@25 $generated@@69)))))) (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@68 $generated@@25 $generated@@69)))))) (let (($generated@@70 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@69)))))
(let (($generated@@71 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@69)))))
 (=> (not ($generated@@27 $generated@@71)) (=> (not ($generated@@28 $generated@@71)) (let (($generated@@72 ($generated@@29 $generated@@71)))
(let (($generated@@73 ($generated@@30 $generated@@71)))
 (and (and ($generated@@31 $generated@@73) (=> ($generated@@32 $generated@@73 $generated@@33) (and ($generated@@34 $generated@@72) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@72) ($generated@@34 $generated@@70))))) (=> (not (and (and ($generated@@32 $generated@@73 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@72)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@70))) (=> ($generated@@38 $generated@@73) (and ($generated@@31 ($generated@@30 $generated@@73)) (=> ($generated@@32 ($generated@@30 $generated@@73) $generated@@39) (and ($generated@@34 ($generated@@29 $generated@@73)) (=> ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@73)) (and ($generated@@34 $generated@@72) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@72) ($generated@@34 $generated@@70)))))))))))))))))) (= ($generated@@22 ($generated@@68 $generated@@25 $generated@@69)) (ite ($generated@@27 ($generated@@68 $generated@@25 $generated@@69)) $generated@@69 (ite ($generated@@28 ($generated@@68 $generated@@25 $generated@@69)) $generated@@69 (let (($generated@@74 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@69)))))
(let (($generated@@75 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@69)))))
(ite ($generated@@27 $generated@@75) $generated@@69 (ite ($generated@@28 $generated@@75) $generated@@69 (let (($generated@@76 ($generated@@68 $generated@@25 ($generated@@29 $generated@@75))))
(let (($generated@@77 ($generated@@68 $generated@@25 ($generated@@30 $generated@@75))))
(ite  (and (and ($generated@@32 $generated@@77 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@76)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@74)) $generated@@76 (ite  (and (and (and (and ($generated@@38 $generated@@77) ($generated@@32 ($generated@@30 $generated@@77) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 ($generated@@29 $generated@@77)))) ($generated@@35 ($generated@@36 $generated@@37) $generated@@76)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@74)) ($generated@@40 ($generated@@68 $generated@@25 ($generated@@40 ($generated@@68 $generated@@25 ($generated@@29 $generated@@77)) $generated@@74)) ($generated@@68 $generated@@25 ($generated@@40 $generated@@76 $generated@@74))) $generated@@69)))))))))))))
 :weight 3
 :pattern ( ($generated@@22 ($generated@@68 $generated@@25 $generated@@69)))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@32 $generated@@78 $generated@@79) (= $generated@@78 $generated@@79))
 :pattern ( ($generated@@32 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@80 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@68 $generated@@83 $generated@@82) $generated@@82)
 :pattern ( ($generated@@68 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@27 $generated@@84) (= ($generated@@65 $generated@@84) $generated@@1))
 :pattern ( ($generated@@27 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@28 $generated@@85) (= ($generated@@65 $generated@@85) $generated@@2))
 :pattern ( ($generated@@28 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@38 $generated@@86) (= ($generated@@65 $generated@@86) $generated@@3))
 :pattern ( ($generated@@38 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@87 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@87 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@38 $generated@@91) (exists (($generated@@92 T@U) ($generated@@93 T@U) ) (= $generated@@91 ($generated@@40 $generated@@92 $generated@@93))))
 :pattern ( ($generated@@38 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@27 $generated@@94) (= $generated@@94 $generated@@39))
 :pattern ( ($generated@@27 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@28 $generated@@95) (= $generated@@95 $generated@@33))
 :pattern ( ($generated@@28 $generated@@95))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@96 T@U) ) (!  (=> (or ($generated@@23 $generated@@96) (and (< 2 $generated@@21) ($generated@@24 $generated@@25 $generated@@96 $generated@@26))) (and (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@96)) (and (not ($generated@@50 ($generated@@36 $generated@@37) ($generated@@22 $generated@@96))) (or ($generated@@32 ($generated@@22 $generated@@96) $generated@@96) (< ($generated@@62 ($generated@@36 $generated@@37) ($generated@@22 $generated@@96)) ($generated@@62 ($generated@@36 $generated@@37) $generated@@96))))) ($generated@@24 $generated@@25 ($generated@@22 $generated@@96) $generated@@26)))
 :pattern ( ($generated@@22 $generated@@96))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or ($generated@@51 ($generated@@68 $generated@@25 $generated@@98)) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@98 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@68 $generated@@25 $generated@@98)))))) (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@68 $generated@@25 $generated@@98)))))) (let (($generated@@99 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@98)))))
(let (($generated@@100 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@98)))))
 (and ($generated@@51 $generated@@100) (=> (not ($generated@@50 ($generated@@36 $generated@@97) $generated@@100)) ($generated@@51 $generated@@99))))))) (= ($generated@@50 ($generated@@36 $generated@@97) ($generated@@68 $generated@@25 $generated@@98)) (ite ($generated@@27 ($generated@@68 $generated@@25 $generated@@98)) true (ite ($generated@@28 ($generated@@68 $generated@@25 $generated@@98)) false ($generated@@10 (let (($generated@@101 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@98)))))
(let (($generated@@102 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@98)))))
($generated@@68 $generated@@6 ($generated@@9  (or ($generated@@50 ($generated@@36 $generated@@97) $generated@@102) ($generated@@50 ($generated@@36 $generated@@97) $generated@@101))))))))))))
 :weight 3
 :pattern ( ($generated@@50 ($generated@@36 $generated@@97) ($generated@@68 $generated@@25 $generated@@98)))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or ($generated@@103 ($generated@@68 $generated@@25 $generated@@105)) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@105 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@68 $generated@@25 $generated@@105)))))) (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@68 $generated@@25 $generated@@105)))))) (let (($generated@@106 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@105)))))
(let (($generated@@107 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@105)))))
 (and ($generated@@103 $generated@@107) ($generated@@103 $generated@@106)))))) (= ($generated@@62 ($generated@@36 $generated@@104) ($generated@@68 $generated@@25 $generated@@105)) (ite ($generated@@27 ($generated@@68 $generated@@25 $generated@@105)) 1 (ite ($generated@@28 ($generated@@68 $generated@@25 $generated@@105)) 1 (let (($generated@@108 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@105)))))
(let (($generated@@109 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@105)))))
($generated@@80 (+ (+ 1 ($generated@@62 ($generated@@36 $generated@@104) $generated@@109)) ($generated@@62 ($generated@@36 $generated@@104) $generated@@108))))))))))
 :weight 3
 :pattern ( ($generated@@62 ($generated@@36 $generated@@104) ($generated@@68 $generated@@25 $generated@@105)))
))))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or ($generated@@61 $generated@@111) (and (< 3 $generated@@21) ($generated@@24 $generated@@25 $generated@@111 $generated@@26))) (and (and (and (and (and ($generated@@31 ($generated@@22 $generated@@111)) ($generated@@31 $generated@@111)) ($generated@@23 $generated@@111)) (=> (not ($generated@@32 ($generated@@22 $generated@@111) $generated@@111)) ($generated@@23 $generated@@111))) (=> ($generated@@32 ($generated@@22 $generated@@111) $generated@@111) (=> ($generated@@38 $generated@@111) (and (and (and (and ($generated@@31 ($generated@@60 $generated@@110 ($generated@@30 $generated@@111))) ($generated@@31 ($generated@@30 $generated@@111))) ($generated@@61 ($generated@@30 $generated@@111))) (=> (not ($generated@@32 ($generated@@60 $generated@@110 ($generated@@30 $generated@@111)) ($generated@@30 $generated@@111))) ($generated@@61 ($generated@@30 $generated@@111)))) (=> ($generated@@32 ($generated@@60 $generated@@110 ($generated@@30 $generated@@111)) ($generated@@30 $generated@@111)) (and (and ($generated@@34 ($generated@@30 $generated@@111)) (=> ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@111)) (and (and ($generated@@31 ($generated@@60 $generated@@110 ($generated@@29 $generated@@111))) ($generated@@31 ($generated@@29 $generated@@111))) ($generated@@61 ($generated@@29 $generated@@111))))) (=> (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@111)) (not ($generated@@32 ($generated@@60 $generated@@110 ($generated@@29 $generated@@111)) ($generated@@29 $generated@@111)))) ($generated@@61 ($generated@@29 $generated@@111))))))))) (= ($generated@@60 ($generated@@36 $generated@@110) $generated@@111) (ite  (not ($generated@@32 ($generated@@22 $generated@@111) $generated@@111)) ($generated@@22 $generated@@111) (ite  (not ($generated@@38 $generated@@111)) $generated@@111 (ite  (not ($generated@@32 ($generated@@60 $generated@@110 ($generated@@30 $generated@@111)) ($generated@@30 $generated@@111))) ($generated@@40 ($generated@@60 $generated@@110 ($generated@@30 $generated@@111)) ($generated@@29 $generated@@111)) (ite  (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@111)) (not ($generated@@32 ($generated@@60 $generated@@110 ($generated@@29 $generated@@111)) ($generated@@29 $generated@@111)))) ($generated@@40 ($generated@@30 $generated@@111) ($generated@@60 $generated@@110 ($generated@@29 $generated@@111))) $generated@@111)))))))
 :pattern ( ($generated@@60 ($generated@@36 $generated@@110) $generated@@111))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@103 $generated@@113) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@113 $generated@@26))) (<= ($generated@@80 0) ($generated@@62 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@62 $generated@@112 $generated@@113))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or ($generated@@34 $generated@@115) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@115 $generated@@26))) (and (=> (not ($generated@@27 $generated@@115)) (=> (not ($generated@@28 $generated@@115)) (let (($generated@@116 ($generated@@29 $generated@@115)))
(let (($generated@@117 ($generated@@30 $generated@@115)))
 (and (=> ($generated@@27 $generated@@117) ($generated@@34 $generated@@116)) (=> (not ($generated@@27 $generated@@117)) (and (=> ($generated@@28 $generated@@117) ($generated@@34 $generated@@116)) (=> (not ($generated@@28 $generated@@117)) (let (($generated@@118 ($generated@@29 $generated@@117)))
(let (($generated@@119 ($generated@@30 $generated@@117)))
 (and ($generated@@31 $generated@@119) (=> ($generated@@32 $generated@@119 $generated@@39) (and ($generated@@34 $generated@@118) (=> ($generated@@35 $generated@@114 $generated@@118) ($generated@@34 $generated@@116))))))))))))))) (= ($generated@@35 ($generated@@36 $generated@@114) $generated@@115) (ite ($generated@@27 $generated@@115) true (ite ($generated@@28 $generated@@115) true (let (($generated@@120 ($generated@@29 $generated@@115)))
(let (($generated@@121 ($generated@@30 $generated@@115)))
(ite ($generated@@27 $generated@@121) ($generated@@35 $generated@@114 $generated@@120) (ite ($generated@@28 $generated@@121) ($generated@@35 $generated@@114 $generated@@120) (let (($generated@@122 ($generated@@29 $generated@@121)))
(let (($generated@@123 ($generated@@30 $generated@@121)))
 (and (and ($generated@@32 $generated@@123 $generated@@39) ($generated@@35 $generated@@114 $generated@@122)) ($generated@@35 $generated@@114 $generated@@120)))))))))))))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@114) $generated@@115))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (or ($generated@@103 $generated@@125) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@125 $generated@@26))) (and (=> (not ($generated@@27 $generated@@125)) (=> (not ($generated@@28 $generated@@125)) (let (($generated@@126 ($generated@@29 $generated@@125)))
(let (($generated@@127 ($generated@@30 $generated@@125)))
 (and ($generated@@103 $generated@@127) ($generated@@103 $generated@@126)))))) (= ($generated@@62 ($generated@@36 $generated@@124) $generated@@125) (ite ($generated@@27 $generated@@125) 1 (ite ($generated@@28 $generated@@125) 1 (let (($generated@@128 ($generated@@29 $generated@@125)))
(let (($generated@@129 ($generated@@30 $generated@@125)))
(+ (+ 1 ($generated@@62 $generated@@124 $generated@@129)) ($generated@@62 $generated@@124 $generated@@128)))))))))
 :pattern ( ($generated@@62 ($generated@@36 $generated@@124) $generated@@125))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and ($generated@@38 $generated@@130) ($generated@@38 $generated@@131)) (= ($generated@@32 $generated@@130 $generated@@131)  (and ($generated@@32 ($generated@@30 $generated@@130) ($generated@@30 $generated@@131)) ($generated@@32 ($generated@@29 $generated@@130) ($generated@@29 $generated@@131)))))
 :pattern ( ($generated@@32 $generated@@130 $generated@@131) ($generated@@38 $generated@@130))
 :pattern ( ($generated@@32 $generated@@130 $generated@@131) ($generated@@38 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@35 ($generated@@36 $generated@@132) $generated@@133) ($generated@@35 $generated@@132 $generated@@133))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@50 ($generated@@36 $generated@@134) $generated@@135) ($generated@@50 $generated@@134 $generated@@135))
 :pattern ( ($generated@@50 ($generated@@36 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and ($generated@@27 $generated@@136) ($generated@@27 $generated@@137)) ($generated@@32 $generated@@136 $generated@@137))
 :pattern ( ($generated@@32 $generated@@136 $generated@@137) ($generated@@27 $generated@@136))
 :pattern ( ($generated@@32 $generated@@136 $generated@@137) ($generated@@27 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and ($generated@@28 $generated@@138) ($generated@@28 $generated@@139)) ($generated@@32 $generated@@138 $generated@@139))
 :pattern ( ($generated@@32 $generated@@138 $generated@@139) ($generated@@28 $generated@@138))
 :pattern ( ($generated@@32 $generated@@138 $generated@@139) ($generated@@28 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@65 ($generated@@40 $generated@@140 $generated@@141)) $generated@@3)
 :pattern ( ($generated@@40 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@30 ($generated@@40 $generated@@142 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@40 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@29 ($generated@@40 $generated@@144 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@40 $generated@@144 $generated@@145))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (or ($generated@@34 ($generated@@68 $generated@@25 $generated@@147)) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@147 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@68 $generated@@25 $generated@@147)))))) (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@68 $generated@@25 $generated@@147)))))) (let (($generated@@148 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@147)))))
(let (($generated@@149 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@147)))))
 (and (=> ($generated@@27 $generated@@149) ($generated@@34 $generated@@148)) (=> (not ($generated@@27 $generated@@149)) (and (=> ($generated@@28 $generated@@149) ($generated@@34 $generated@@148)) (=> (not ($generated@@28 $generated@@149)) (let (($generated@@150 ($generated@@29 $generated@@149)))
(let (($generated@@151 ($generated@@30 $generated@@149)))
 (and ($generated@@31 $generated@@151) (=> ($generated@@32 $generated@@151 $generated@@39) (and ($generated@@34 $generated@@150) (=> ($generated@@35 ($generated@@36 $generated@@146) $generated@@150) ($generated@@34 $generated@@148))))))))))))))) (= ($generated@@35 ($generated@@36 $generated@@146) ($generated@@68 $generated@@25 $generated@@147)) (ite ($generated@@27 ($generated@@68 $generated@@25 $generated@@147)) true (ite ($generated@@28 ($generated@@68 $generated@@25 $generated@@147)) true (let (($generated@@152 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@147)))))
(let (($generated@@153 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@147)))))
(ite ($generated@@27 $generated@@153) ($generated@@35 ($generated@@36 $generated@@146) $generated@@152) (ite ($generated@@28 $generated@@153) ($generated@@35 ($generated@@36 $generated@@146) $generated@@152) (let (($generated@@154 ($generated@@68 $generated@@25 ($generated@@29 $generated@@153))))
(let (($generated@@155 ($generated@@68 $generated@@25 ($generated@@30 $generated@@153))))
 (and (and ($generated@@32 $generated@@155 $generated@@39) ($generated@@35 ($generated@@36 $generated@@146) $generated@@154)) ($generated@@35 ($generated@@36 $generated@@146) $generated@@152)))))))))))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@36 $generated@@146) ($generated@@68 $generated@@25 $generated@@147)))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@87 $generated@@157 ($generated@@88 $generated@@157 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@88 $generated@@157 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> ($generated@@31 $generated@@158) (or (or ($generated@@27 $generated@@158) ($generated@@28 $generated@@158)) ($generated@@38 $generated@@158)))
 :pattern ( ($generated@@31 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (< ($generated@@159 $generated@@160) ($generated@@159 ($generated@@40 $generated@@160 $generated@@161)))
 :pattern ( ($generated@@40 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (< ($generated@@159 $generated@@163) ($generated@@159 ($generated@@40 $generated@@162 $generated@@163)))
 :pattern ( ($generated@@40 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@60 ($generated@@36 $generated@@164) $generated@@165) ($generated@@60 $generated@@164 $generated@@165))
 :pattern ( ($generated@@60 ($generated@@36 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@62 ($generated@@36 $generated@@166) $generated@@167) ($generated@@62 $generated@@166 $generated@@167))
 :pattern ( ($generated@@62 ($generated@@36 $generated@@166) $generated@@167))
)))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (or ($generated@@61 ($generated@@68 $generated@@25 $generated@@169)) (and (< 3 $generated@@21) ($generated@@24 $generated@@25 $generated@@169 $generated@@26))) (and (and (and (and (and ($generated@@31 ($generated@@68 $generated@@25 ($generated@@22 ($generated@@68 $generated@@25 $generated@@169)))) ($generated@@31 ($generated@@68 $generated@@25 $generated@@169))) ($generated@@23 ($generated@@68 $generated@@25 $generated@@169))) (=> (not ($generated@@32 ($generated@@22 ($generated@@68 $generated@@25 $generated@@169)) $generated@@169)) ($generated@@23 ($generated@@68 $generated@@25 $generated@@169)))) (=> ($generated@@32 ($generated@@22 ($generated@@68 $generated@@25 $generated@@169)) $generated@@169) (=> ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@38 ($generated@@68 $generated@@25 $generated@@169))))) (and (and (and (and ($generated@@31 ($generated@@68 $generated@@25 ($generated@@60 ($generated@@36 $generated@@168) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169)))))) ($generated@@31 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169))))) ($generated@@61 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169))))) (=> (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@168) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169)))) ($generated@@30 ($generated@@68 $generated@@25 $generated@@169)))) ($generated@@61 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169)))))) (=> ($generated@@32 ($generated@@60 ($generated@@36 $generated@@168) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169)))) ($generated@@30 ($generated@@68 $generated@@25 $generated@@169))) (and (and ($generated@@34 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169)))) (=> ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@35 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169))))))) (and (and ($generated@@31 ($generated@@68 $generated@@25 ($generated@@60 ($generated@@36 $generated@@168) ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@169)))))) ($generated@@31 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@169))))) ($generated@@61 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@169))))))) (=> (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169)))) (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@168) ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@169)))) ($generated@@29 ($generated@@68 $generated@@25 $generated@@169))))) ($generated@@61 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@169))))))))))) (= ($generated@@60 ($generated@@36 $generated@@168) ($generated@@68 $generated@@25 $generated@@169)) (ite  (not ($generated@@32 ($generated@@22 ($generated@@68 $generated@@25 $generated@@169)) $generated@@169)) ($generated@@22 ($generated@@68 $generated@@25 $generated@@169)) (ite  (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@38 ($generated@@68 $generated@@25 $generated@@169)))))) $generated@@169 (ite  (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@168) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169)))) ($generated@@30 ($generated@@68 $generated@@25 $generated@@169)))) ($generated@@40 ($generated@@68 $generated@@25 ($generated@@60 ($generated@@36 $generated@@168) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169))))) ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@169)))) (ite  (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169)))) (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@168) ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@169)))) ($generated@@29 ($generated@@68 $generated@@25 $generated@@169))))) ($generated@@40 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@169))) ($generated@@68 $generated@@25 ($generated@@60 ($generated@@36 $generated@@168) ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@169)))))) $generated@@169)))))))
 :weight 3
 :pattern ( ($generated@@60 ($generated@@36 $generated@@168) ($generated@@68 $generated@@25 $generated@@169)))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@170 $generated@@181 $generated@@182 $generated@@183 ($generated@@177 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@186 $generated@@187) $generated@@184)
 :weight 0
)) (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@170 $generated@@188 $generated@@189 $generated@@190 ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@170 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@170 $generated@@197 $generated@@198 $generated@@199 ($generated@@177 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@170 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (= ($generated@@5 $generated@@171) 4)) (= ($generated@@5 $generated@@172) 5)) (forall (($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@174 $generated@@206 $generated@@207 ($generated@@178 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@208) $generated@@210) $generated@@208)
 :weight 0
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@215 $generated@@216) (= ($generated@@174 $generated@@211 $generated@@212 ($generated@@178 $generated@@211 $generated@@212 $generated@@214 $generated@@215 $generated@@213) $generated@@216) ($generated@@174 $generated@@211 $generated@@212 $generated@@214 $generated@@216)))
 :weight 0
))) (= ($generated@@5 $generated@@175) 6)) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (= ($generated@@5 ($generated@@176 $generated@@217 $generated@@218)) 7))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@179 ($generated@@176 $generated@@219 $generated@@220)) $generated@@219)
 :pattern ( ($generated@@176 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@180 ($generated@@176 $generated@@221 $generated@@222)) $generated@@222)
 :pattern ( ($generated@@176 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@10 ($generated@@170 $generated@@171 $generated@@172 $generated@@6 ($generated@@173 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (or (not (= $generated@@227 $generated@@223)) (not true)) ($generated@@10 ($generated@@87 $generated@@6 ($generated@@174 $generated@@172 $generated@@175 ($generated@@174 $generated@@171 ($generated@@176 $generated@@172 $generated@@175) $generated@@224 $generated@@227) $generated@@225)))) $generated@@226))
 :pattern ( ($generated@@170 $generated@@171 $generated@@172 $generated@@6 ($generated@@173 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@229 $generated@@26) (or (or ($generated@@27 $generated@@229) ($generated@@28 $generated@@229)) ($generated@@38 $generated@@229)))
 :pattern ( ($generated@@38 $generated@@229) ($generated@@24 $generated@@25 $generated@@229 $generated@@26))
 :pattern ( ($generated@@28 $generated@@229) ($generated@@24 $generated@@25 $generated@@229 $generated@@26))
 :pattern ( ($generated@@27 $generated@@229) ($generated@@24 $generated@@25 $generated@@229 $generated@@26))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and ($generated@@231 $generated@@233) ($generated@@24 $generated@@25 $generated@@232 $generated@@26)) ($generated@@230 $generated@@25 $generated@@232 $generated@@26 $generated@@233))
 :pattern ( ($generated@@230 $generated@@25 $generated@@232 $generated@@26 $generated@@233))
)))
(assert (= ($generated@@234 $generated@@26) $generated@@0))
(assert (= ($generated@@235 $generated@@26) $generated@@4))
(assert (= $generated@@39 ($generated@@68 $generated@@25 $generated@@39)))
(assert (= $generated@@33 ($generated@@68 $generated@@25 $generated@@33)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and ($generated@@231 $generated@@237) (and ($generated@@38 $generated@@236) ($generated@@230 $generated@@25 $generated@@236 $generated@@26 $generated@@237))) ($generated@@230 $generated@@25 ($generated@@30 $generated@@236) $generated@@26 $generated@@237))
 :pattern ( ($generated@@230 $generated@@25 ($generated@@30 $generated@@236) $generated@@26 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and ($generated@@231 $generated@@239) (and ($generated@@38 $generated@@238) ($generated@@230 $generated@@25 $generated@@238 $generated@@26 $generated@@239))) ($generated@@230 $generated@@25 ($generated@@29 $generated@@238) $generated@@26 $generated@@239))
 :pattern ( ($generated@@230 $generated@@25 ($generated@@29 $generated@@238) $generated@@26 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= ($generated@@40 ($generated@@68 $generated@@25 $generated@@240) ($generated@@68 $generated@@25 $generated@@241)) ($generated@@68 $generated@@25 ($generated@@40 $generated@@240 $generated@@241)))
 :pattern ( ($generated@@40 ($generated@@68 $generated@@25 $generated@@240) ($generated@@68 $generated@@25 $generated@@241)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@88 $generated@@7 ($generated@@11 ($generated@@80 $generated@@242))) ($generated@@68 $generated@@175 ($generated@@88 $generated@@7 ($generated@@11 $generated@@242))))
 :pattern ( ($generated@@88 $generated@@7 ($generated@@11 ($generated@@80 $generated@@242))))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@T) ) (! (= ($generated@@88 $generated@@244 ($generated@@68 $generated@@244 $generated@@243)) ($generated@@68 $generated@@175 ($generated@@88 $generated@@244 $generated@@243)))
 :pattern ( ($generated@@88 $generated@@244 ($generated@@68 $generated@@244 $generated@@243)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 39) (let (($generated@@257 true))
(let (($generated@@258  (=> (and (or ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) $generated@@245) (< ($generated@@62 ($generated@@36 $generated@@37) ($generated@@60 ($generated@@36 $generated@@37) $generated@@245)) ($generated@@62 ($generated@@36 $generated@@37) $generated@@245))) (= (ControlFlow 0 30) 28)) $generated@@257)))
(let (($generated@@259  (=> (and ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) $generated@@245) (= (ControlFlow 0 33) 30)) $generated@@258)))
(let (($generated@@260  (=> (and (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) $generated@@245)) ($generated@@230 $generated@@25 $generated@@245 $generated@@26 $generated@@246)) (and (=> (= (ControlFlow 0 31) (- 0 32)) (or ($generated@@32 $generated@@245 $generated@@245) (< ($generated@@159 $generated@@245) ($generated@@159 $generated@@245)))) (=> (or ($generated@@32 $generated@@245 $generated@@245) (< ($generated@@159 $generated@@245) ($generated@@159 $generated@@245))) (=> (or ($generated@@32 $generated@@245 $generated@@245) ($generated@@61 $generated@@245)) (=> (and (= $generated@@247 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245)) ($generated@@230 $generated@@25 $generated@@247 $generated@@26 $generated@@246)) (=> (and (and ($generated@@103 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245)) ($generated@@230 $generated@@25 $generated@@245 $generated@@26 $generated@@246)) (and ($generated@@103 $generated@@245) (= (ControlFlow 0 31) 30))) $generated@@258))))))))
(let (($generated@@261  (=> (and (and ($generated@@230 $generated@@25 $generated@@245 $generated@@26 $generated@@246) ($generated@@51 $generated@@245)) (and (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@245)) ($generated@@230 $generated@@25 $generated@@245 $generated@@26 $generated@@246))) (and (=> (= (ControlFlow 0 34) (- 0 36)) (or ($generated@@32 $generated@@245 $generated@@245) (< ($generated@@159 $generated@@245) ($generated@@159 $generated@@245)))) (=> (or ($generated@@32 $generated@@245 $generated@@245) (< ($generated@@159 $generated@@245) ($generated@@159 $generated@@245))) (=> (and (or ($generated@@32 $generated@@245 $generated@@245) ($generated@@61 $generated@@245)) (= $generated@@248 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245))) (=> (and (and ($generated@@230 $generated@@25 $generated@@248 $generated@@26 $generated@@246) ($generated@@51 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245))) (and (not ($generated@@50 ($generated@@36 $generated@@37) ($generated@@60 ($generated@@36 $generated@@37) $generated@@245))) ($generated@@230 $generated@@25 $generated@@245 $generated@@26 $generated@@246))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (or ($generated@@32 $generated@@245 $generated@@245) (< ($generated@@159 $generated@@245) ($generated@@159 $generated@@245)))) (=> (or ($generated@@32 $generated@@245 $generated@@245) (< ($generated@@159 $generated@@245) ($generated@@159 $generated@@245))) (=> (or ($generated@@32 $generated@@245 $generated@@245) ($generated@@61 $generated@@245)) (and (=> (= (ControlFlow 0 34) 31) $generated@@260) (=> (= (ControlFlow 0 34) 33) $generated@@259))))))))))))
(let (($generated@@262  (=> (and (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@245)) (and (not ($generated@@50 ($generated@@36 $generated@@37) ($generated@@60 ($generated@@36 $generated@@37) $generated@@245))) (or ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) $generated@@245) (< ($generated@@62 ($generated@@36 $generated@@37) ($generated@@60 ($generated@@36 $generated@@37) $generated@@245)) ($generated@@62 ($generated@@36 $generated@@37) $generated@@245))))) (= (ControlFlow 0 29) 28)) $generated@@257)))
(let (($generated@@263  (=> ($generated@@24 $generated@@25 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) $generated@@26) (and (=> (= (ControlFlow 0 37) 34) $generated@@261) (=> (= (ControlFlow 0 37) 29) $generated@@262)))))
(let (($generated@@264  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@245)) (not ($generated@@50 ($generated@@36 ($generated@@36 $generated@@37)) ($generated@@60 ($generated@@36 ($generated@@36 $generated@@37)) $generated@@245))))) (=> (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@245)) (not ($generated@@50 ($generated@@36 ($generated@@36 $generated@@37)) ($generated@@60 ($generated@@36 ($generated@@36 $generated@@37)) $generated@@245)))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@245)) (or ($generated@@32 ($generated@@60 ($generated@@36 ($generated@@36 $generated@@37)) $generated@@245) $generated@@245) (< ($generated@@62 ($generated@@36 ($generated@@36 $generated@@37)) ($generated@@60 ($generated@@36 ($generated@@36 $generated@@37)) $generated@@245)) ($generated@@62 ($generated@@36 ($generated@@36 $generated@@37)) $generated@@245)))))))))
(let (($generated@@265  (=> (and (and (not (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@245)) (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@29 $generated@@245)) ($generated@@29 $generated@@245))))) (= ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) $generated@@245)) (and ($generated@@24 $generated@@25 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) $generated@@26) (= (ControlFlow 0 14) 2))) $generated@@264)))
(let (($generated@@266  (=> (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@245)) (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@29 $generated@@245)) ($generated@@29 $generated@@245)))) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@38 $generated@@245)) (=> ($generated@@38 $generated@@245) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@38 $generated@@245)) (=> ($generated@@38 $generated@@245) (=> (and (= $generated@@249 ($generated@@29 $generated@@245)) ($generated@@230 $generated@@25 $generated@@249 $generated@@26 $generated@@246)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (< ($generated@@159 $generated@@249) ($generated@@159 $generated@@245))) (=> (< ($generated@@159 $generated@@249) ($generated@@159 $generated@@245)) (=> ($generated@@61 ($generated@@29 $generated@@245)) (=> (and (and (= ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) ($generated@@40 ($generated@@30 $generated@@245) ($generated@@60 ($generated@@36 $generated@@37) ($generated@@29 $generated@@245)))) ($generated@@61 ($generated@@29 $generated@@245))) (and ($generated@@24 $generated@@25 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) $generated@@26) (= (ControlFlow 0 10) 2))) $generated@@264))))))))))))
(let (($generated@@267  (=> (not ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@245))) (and (=> (= (ControlFlow 0 19) 10) $generated@@266) (=> (= (ControlFlow 0 19) 14) $generated@@265)))))
(let (($generated@@268  (=> ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@245)) (and (=> (= (ControlFlow 0 15) (- 0 18)) ($generated@@38 $generated@@245)) (=> ($generated@@38 $generated@@245) (=> (and (= $generated@@250 ($generated@@29 $generated@@245)) ($generated@@230 $generated@@25 $generated@@250 $generated@@26 $generated@@246)) (and (=> (= (ControlFlow 0 15) (- 0 17)) (< ($generated@@159 $generated@@250) ($generated@@159 $generated@@245))) (=> (< ($generated@@159 $generated@@250) ($generated@@159 $generated@@245)) (=> ($generated@@61 ($generated@@29 $generated@@245)) (and (=> (= (ControlFlow 0 15) (- 0 16)) ($generated@@38 $generated@@245)) (=> ($generated@@38 $generated@@245) (and (=> (= (ControlFlow 0 15) 10) $generated@@266) (=> (= (ControlFlow 0 15) 14) $generated@@265)))))))))))))
(let (($generated@@269  (=> ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@30 $generated@@245)) ($generated@@30 $generated@@245)) (and (=> (= (ControlFlow 0 20) (- 0 21)) ($generated@@38 $generated@@245)) (=> ($generated@@38 $generated@@245) (=> (= $generated@@251 ($generated@@30 $generated@@245)) (=> (and ($generated@@230 $generated@@25 $generated@@251 $generated@@26 $generated@@246) ($generated@@34 ($generated@@30 $generated@@245))) (and (=> (= (ControlFlow 0 20) 15) $generated@@268) (=> (= (ControlFlow 0 20) 19) $generated@@267)))))))))
(let (($generated@@270  (=> (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@30 $generated@@245)) ($generated@@30 $generated@@245))) (and (=> (= (ControlFlow 0 6) (- 0 9)) ($generated@@38 $generated@@245)) (=> ($generated@@38 $generated@@245) (=> (and (= $generated@@252 ($generated@@30 $generated@@245)) ($generated@@230 $generated@@25 $generated@@252 $generated@@26 $generated@@246)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (< ($generated@@159 $generated@@252) ($generated@@159 $generated@@245))) (=> (< ($generated@@159 $generated@@252) ($generated@@159 $generated@@245)) (=> ($generated@@61 ($generated@@30 $generated@@245)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@38 $generated@@245)) (=> ($generated@@38 $generated@@245) (=> (and (and (= ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) ($generated@@40 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@30 $generated@@245)) ($generated@@29 $generated@@245))) ($generated@@61 ($generated@@30 $generated@@245))) (and ($generated@@24 $generated@@25 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) $generated@@26) (= (ControlFlow 0 6) 2))) $generated@@264))))))))))))
(let (($generated@@271  (=> ($generated@@38 $generated@@245) (and (=> (= (ControlFlow 0 22) (- 0 25)) ($generated@@38 $generated@@245)) (=> ($generated@@38 $generated@@245) (=> (and (= $generated@@253 ($generated@@30 $generated@@245)) ($generated@@230 $generated@@25 $generated@@253 $generated@@26 $generated@@246)) (and (=> (= (ControlFlow 0 22) (- 0 24)) (< ($generated@@159 $generated@@253) ($generated@@159 $generated@@245))) (=> (< ($generated@@159 $generated@@253) ($generated@@159 $generated@@245)) (=> ($generated@@61 ($generated@@30 $generated@@245)) (and (=> (= (ControlFlow 0 22) (- 0 23)) ($generated@@38 $generated@@245)) (=> ($generated@@38 $generated@@245) (and (=> (= (ControlFlow 0 22) 6) $generated@@270) (=> (= (ControlFlow 0 22) 20) $generated@@269)))))))))))))
(let (($generated@@272  (=> (and (and (not ($generated@@38 $generated@@245)) (= ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) $generated@@245)) (and ($generated@@24 $generated@@25 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) $generated@@26) (= (ControlFlow 0 5) 2))) $generated@@264)))
(let (($generated@@273  (=> ($generated@@32 ($generated@@22 $generated@@245) $generated@@245) (and (=> (= (ControlFlow 0 26) 5) $generated@@272) (=> (= (ControlFlow 0 26) 22) $generated@@271)))))
(let (($generated@@274  (=> (not ($generated@@32 ($generated@@22 $generated@@245) $generated@@245)) (=> (and ($generated@@230 $generated@@25 $generated@@245 $generated@@26 $generated@@246) ($generated@@23 $generated@@245)) (=> (and (and (= ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) ($generated@@22 $generated@@245)) ($generated@@23 $generated@@245)) (and ($generated@@24 $generated@@25 ($generated@@60 ($generated@@36 $generated@@37) $generated@@245) $generated@@26) (= (ControlFlow 0 4) 2))) $generated@@264)))))
(let (($generated@@275  (=> (and ($generated@@230 $generated@@25 $generated@@245 $generated@@26 $generated@@246) ($generated@@23 $generated@@245)) (and (=> (= (ControlFlow 0 27) 4) $generated@@274) (=> (= (ControlFlow 0 27) 26) $generated@@273)))))
(let (($generated@@276  (=> (= $generated@@254 ($generated@@173 $generated@@255 $generated@@246 $generated false)) (and (=> (= (ControlFlow 0 38) 37) $generated@@263) (=> (= (ControlFlow 0 38) 27) $generated@@275)))))
(let (($generated@@277  (=> (and (and (and ($generated@@231 $generated@@246) ($generated@@256 $generated@@246)) ($generated@@24 $generated@@25 $generated@@245 $generated@@26)) (and (= 3 $generated@@21) (= (ControlFlow 0 39) 38))) $generated@@276)))
$generated@@277))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
