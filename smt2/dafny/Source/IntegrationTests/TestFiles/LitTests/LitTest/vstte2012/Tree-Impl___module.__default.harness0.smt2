(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 (T@U Int) T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U Int) T@U)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@51 (T@U Int) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 (T@U Int T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@123 (Int T@U) Bool)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@136 (T@U Int T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (Int T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@209 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@210 () T@T)
(declare-fun $generated@@211 () T@T)
(declare-fun $generated@@212 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@213 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@214 () T@T)
(declare-fun $generated@@215 (T@T T@T) T@T)
(declare-fun $generated@@216 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@11 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@32 $generated@@33) $generated@@31)  (and ($generated@@28 $generated@@29 $generated@@32 $generated@@31) ($generated@@28 $generated@@29 $generated@@33 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@32 $generated@@33) $generated@@31))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 Int) ) (!  (=> (and (<= 0 $generated@@41) (< $generated@@41 ($generated@@36 $generated@@40))) (< ($generated@@37 ($generated@@38 $generated@@29 ($generated@@34 $generated@@40 $generated@@41))) ($generated@@37 ($generated@@35 $generated@@39 $generated@@40))))
 :pattern ( ($generated@@34 $generated@@40 $generated@@41) ($generated@@35 $generated@@39 $generated@@40))
)))
(assert (= ($generated@@36 $generated@@42) 0))
(assert (= ($generated@@43 $generated@@44) $generated@@5))
(assert (= ($generated@@43 $generated@@45) $generated@@7))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 Int) ) (!  (=> (and (<= 0 $generated@@50) (<= $generated@@50 ($generated@@36 $generated@@48))) (= ($generated@@46 ($generated@@47 $generated@@48 $generated@@49) $generated@@50) ($generated@@47 ($generated@@46 $generated@@48 $generated@@50) $generated@@49)))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@48 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 Int) ) (!  (=> (= $generated@@55 ($generated@@36 $generated@@53)) (and (= ($generated@@51 ($generated@@52 $generated@@53 $generated@@54) $generated@@55) $generated@@53) (= ($generated@@46 ($generated@@52 $generated@@53 $generated@@54) $generated@@55) $generated@@54)))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@53 $generated@@54) $generated@@55))
 :pattern ( ($generated@@46 ($generated@@52 $generated@@53 $generated@@54) $generated@@55))
)))
(assert ($generated@@28 $generated@@29 $generated@@44 $generated@@31))
(assert ($generated@@28 $generated@@29 $generated@@45 $generated@@56))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@57 $generated@@58 $generated@@59) (= $generated@@58 $generated@@59))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 Int) ) (!  (=> (= $generated@@61 0) (= ($generated@@46 $generated@@60 $generated@@61) $generated@@60))
 :pattern ( ($generated@@46 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@62 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (= ($generated@@11 $generated@@67) 4))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (and ($generated@@28 $generated@@67 $generated@@70 ($generated@@68 $generated@@72)) ($generated@@69 $generated@@71 $generated@@72)) ($generated@@28 $generated@@67 ($generated@@47 $generated@@70 $generated@@71) ($generated@@68 $generated@@72)))
 :pattern ( ($generated@@28 $generated@@67 ($generated@@47 $generated@@70 $generated@@71) ($generated@@68 $generated@@72)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 Int) ($generated@@75 Int) ) (!  (=> (and (and (<= 0 $generated@@75) (< $generated@@75 $generated@@74)) (< $generated@@75 ($generated@@36 $generated@@73))) (= ($generated@@34 ($generated@@51 $generated@@73 $generated@@74) $generated@@75) ($generated@@34 $generated@@73 $generated@@75)))
 :weight 25
 :pattern ( ($generated@@34 ($generated@@51 $generated@@73 $generated@@74) $generated@@75))
 :pattern ( ($generated@@34 $generated@@73 $generated@@75) ($generated@@51 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 Int) ) (!  (=> (and (<= 0 $generated@@77) (<= $generated@@77 ($generated@@36 $generated@@76))) (= ($generated@@36 ($generated@@46 $generated@@76 $generated@@77)) (- ($generated@@36 $generated@@76) $generated@@77)))
 :pattern ( ($generated@@36 ($generated@@46 $generated@@76 $generated@@77)))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@78 $generated@@79) (= ($generated@@43 $generated@@79) $generated@@5))
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@80 $generated@@81) (= ($generated@@43 $generated@@81) $generated@@6))
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 $generated@@83) (= ($generated@@43 $generated@@83) $generated@@7))
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 $generated@@85) (= ($generated@@43 $generated@@85) $generated@@8))
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@86 $generated@@87 $generated@@88)  (and (= ($generated@@36 $generated@@87) ($generated@@36 $generated@@88)) (forall (($generated@@89 Int) ) (!  (=> (and (<= 0 $generated@@89) (< $generated@@89 ($generated@@36 $generated@@87))) (= ($generated@@34 $generated@@87 $generated@@89) ($generated@@34 $generated@@88 $generated@@89)))
 :pattern ( ($generated@@34 $generated@@87 $generated@@89))
 :pattern ( ($generated@@34 $generated@@88 $generated@@89))
))))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@38 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@38 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 Int) ) (!  (=> (and (<= 0 $generated@@95) (< $generated@@95 ($generated@@36 $generated@@94))) (< ($generated@@93 ($generated@@51 $generated@@94 $generated@@95)) ($generated@@93 $generated@@94)))
 :pattern ( ($generated@@93 ($generated@@51 $generated@@94 $generated@@95)))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@80 $generated@@96) (exists (($generated@@97 T@U) ($generated@@98 T@U) ) (= $generated@@96 ($generated@@30 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@80 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@84 $generated@@99) (exists (($generated@@100 T@U) ($generated@@101 T@U) ) (= $generated@@99 ($generated@@35 $generated@@100 $generated@@101))))
 :pattern ( ($generated@@84 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@78 $generated@@102) (= $generated@@102 $generated@@44))
 :pattern ( ($generated@@78 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@82 $generated@@103) (= $generated@@103 $generated@@45))
 :pattern ( ($generated@@82 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 Int) ) (!  (=> (and (< 0 $generated@@105) (<= $generated@@105 ($generated@@36 $generated@@104))) (< ($generated@@93 ($generated@@46 $generated@@104 $generated@@105)) ($generated@@93 $generated@@104)))
 :pattern ( ($generated@@93 ($generated@@46 $generated@@104 $generated@@105)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@36 ($generated@@47 $generated@@106 $generated@@107)) (+ 1 ($generated@@36 $generated@@106)))
 :pattern ( ($generated@@47 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@35 $generated@@108 $generated@@109) $generated@@56)  (and ($generated@@28 $generated@@29 $generated@@108 $generated@@31) ($generated@@28 $generated@@67 $generated@@109 ($generated@@68 $generated))))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@35 $generated@@108 $generated@@109) $generated@@56))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 Int) ($generated@@112 Int) ) (!  (=> (and (and (<= 0 $generated@@111) (<= 0 $generated@@112)) (< $generated@@112 (- ($generated@@36 $generated@@110) $generated@@111))) (= ($generated@@34 ($generated@@46 $generated@@110 $generated@@111) $generated@@112) ($generated@@34 $generated@@110 (+ $generated@@112 $generated@@111))))
 :weight 25
 :pattern ( ($generated@@34 ($generated@@46 $generated@@110 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@36 ($generated@@52 $generated@@113 $generated@@114)) (+ ($generated@@36 $generated@@113) ($generated@@36 $generated@@114)))
 :pattern ( ($generated@@36 ($generated@@52 $generated@@113 $generated@@114)))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@69 $generated@@115 $generated@@31) (and (= ($generated@@90 $generated@@29 ($generated@@38 $generated@@29 $generated@@115)) $generated@@115) ($generated@@28 $generated@@29 ($generated@@38 $generated@@29 $generated@@115) $generated@@31)))
 :pattern ( ($generated@@69 $generated@@115 $generated@@31))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@69 $generated@@116 $generated@@56) (and (= ($generated@@90 $generated@@29 ($generated@@38 $generated@@29 $generated@@116)) $generated@@116) ($generated@@28 $generated@@29 ($generated@@38 $generated@@29 $generated@@116) $generated@@56)))
 :pattern ( ($generated@@69 $generated@@116 $generated@@56))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 Int) ($generated@@119 T@U) ) (!  (and (=> (= $generated@@118 ($generated@@36 $generated@@117)) (= ($generated@@34 ($generated@@47 $generated@@117 $generated@@119) $generated@@118) $generated@@119)) (=> (or (not (= $generated@@118 ($generated@@36 $generated@@117))) (not true)) (= ($generated@@34 ($generated@@47 $generated@@117 $generated@@119) $generated@@118) ($generated@@34 $generated@@117 $generated@@118))))
 :pattern ( ($generated@@34 ($generated@@47 $generated@@117 $generated@@119) $generated@@118))
)))
(assert  (=> (<= 1 $generated@@120) (forall (($generated@@126 T@U) ($generated@@127 Int) ($generated@@128 T@U) ) (!  (=> (or ($generated@@123 $generated@@127 ($generated@@64 $generated@@29 $generated@@128)) (and (< 1 $generated@@120) ($generated@@28 $generated@@29 $generated@@128 $generated@@31))) (and (=> (not ($generated@@16 ($generated@@64 $generated@@12 ($generated@@15 ($generated@@78 ($generated@@64 $generated@@29 $generated@@128)))))) (let (($generated@@129 ($generated@@64 $generated@@29 ($generated@@124 ($generated@@64 $generated@@29 $generated@@128)))))
(let (($generated@@130 ($generated@@64 $generated@@29 ($generated@@125 ($generated@@64 $generated@@29 $generated@@128)))))
 (and ($generated@@123 (+ $generated@@127 1) $generated@@130) ($generated@@123 (+ $generated@@127 1) $generated@@129))))) (= ($generated@@121 ($generated@@122 $generated@@126) $generated@@127 ($generated@@64 $generated@@29 $generated@@128)) (ite ($generated@@78 ($generated@@64 $generated@@29 $generated@@128)) ($generated@@47 $generated@@42 ($generated@@90 $generated@@13 ($generated@@17 $generated@@127))) (let (($generated@@131 ($generated@@64 $generated@@29 ($generated@@124 ($generated@@64 $generated@@29 $generated@@128)))))
(let (($generated@@132 ($generated@@64 $generated@@29 ($generated@@125 ($generated@@64 $generated@@29 $generated@@128)))))
($generated@@52 ($generated@@121 ($generated@@122 $generated@@126) (+ $generated@@127 1) $generated@@132) ($generated@@121 ($generated@@122 $generated@@126) (+ $generated@@127 1) $generated@@131))))))))
 :weight 3
 :pattern ( ($generated@@121 ($generated@@122 $generated@@126) $generated@@127 ($generated@@64 $generated@@29 $generated@@128)))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 Int) ($generated@@135 T@U) ) (! (= ($generated@@121 ($generated@@122 $generated@@133) $generated@@134 $generated@@135) ($generated@@121 $generated@@133 $generated@@134 $generated@@135))
 :pattern ( ($generated@@121 ($generated@@122 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 Int) ($generated@@139 T@U) ) (! (= ($generated@@136 ($generated@@122 $generated@@137) $generated@@138 $generated@@139) ($generated@@136 $generated@@137 $generated@@138 $generated@@139))
 :pattern ( ($generated@@136 ($generated@@122 $generated@@137) $generated@@138 $generated@@139))
)))
(assert  (=> (<= 3 $generated@@120) (forall (($generated@@145 T@U) ) (!  (=> (or ($generated@@141 $generated@@145) (and (< 3 $generated@@120) ($generated@@28 $generated@@67 $generated@@145 ($generated@@68 $generated)))) (and ($generated@@142 ($generated@@62 0) $generated@@145) (= ($generated@@140 $generated@@145) (let (($generated@@146 ($generated@@136 ($generated@@122 $generated@@143) ($generated@@62 0) $generated@@145)))
(ite  (and ($generated@@84 $generated@@146) ($generated@@86 ($generated@@144 $generated@@146) $generated@@42)) $generated@@146 $generated@@45)))))
 :pattern ( ($generated@@140 $generated@@145))
))))
(assert  (=> (<= 3 $generated@@120) (forall (($generated@@148 T@U) ) (!  (=> (or ($generated@@141 $generated@@148) (and (< 3 $generated@@120) ($generated@@28 $generated@@67 $generated@@148 ($generated@@68 $generated)))) (and (=> ($generated@@84 ($generated@@140 $generated@@148)) ($generated@@86 ($generated@@121 ($generated@@122 $generated@@143) ($generated@@62 0) ($generated@@147 ($generated@@140 $generated@@148))) $generated@@148)) ($generated@@28 $generated@@29 ($generated@@140 $generated@@148) $generated@@56)))
 :pattern ( ($generated@@140 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> ($generated@@86 $generated@@149 $generated@@150) (= $generated@@149 $generated@@150))
 :pattern ( ($generated@@86 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (<= 0 $generated@@152) (<= $generated@@152 ($generated@@36 $generated@@151))) (= ($generated@@36 ($generated@@51 $generated@@151 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@36 ($generated@@51 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@153 $generated@@31) (or ($generated@@78 $generated@@153) ($generated@@80 $generated@@153)))
 :pattern ( ($generated@@80 $generated@@153) ($generated@@28 $generated@@29 $generated@@153 $generated@@31))
 :pattern ( ($generated@@78 $generated@@153) ($generated@@28 $generated@@29 $generated@@153 $generated@@31))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@154 $generated@@56) (or ($generated@@82 $generated@@154) ($generated@@84 $generated@@154)))
 :pattern ( ($generated@@84 $generated@@154) ($generated@@28 $generated@@29 $generated@@154 $generated@@56))
 :pattern ( ($generated@@82 $generated@@154) ($generated@@28 $generated@@29 $generated@@154 $generated@@56))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> ($generated@@69 $generated@@155 $generated) (and (= ($generated@@90 $generated@@13 ($generated@@38 $generated@@13 $generated@@155)) $generated@@155) ($generated@@28 $generated@@13 ($generated@@38 $generated@@13 $generated@@155) $generated)))
 :pattern ( ($generated@@69 $generated@@155 $generated))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and ($generated@@80 $generated@@156) ($generated@@80 $generated@@157)) (= ($generated@@57 $generated@@156 $generated@@157)  (and ($generated@@57 ($generated@@125 $generated@@156) ($generated@@125 $generated@@157)) ($generated@@57 ($generated@@124 $generated@@156) ($generated@@124 $generated@@157)))))
 :pattern ( ($generated@@57 $generated@@156 $generated@@157) ($generated@@80 $generated@@156))
 :pattern ( ($generated@@57 $generated@@156 $generated@@157) ($generated@@80 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@69 ($generated@@90 $generated@@160 $generated@@158) $generated@@159) ($generated@@28 $generated@@160 $generated@@158 $generated@@159))
 :pattern ( ($generated@@69 ($generated@@90 $generated@@160 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (<= 0 ($generated@@36 $generated@@161))
 :pattern ( ($generated@@36 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 Int) ($generated@@164 Int) ) (!  (=> (and (and (<= 0 $generated@@163) (< $generated@@163 $generated@@164)) (<= $generated@@164 ($generated@@36 $generated@@162))) (< ($generated@@93 ($generated@@52 ($generated@@51 $generated@@162 $generated@@163) ($generated@@46 $generated@@162 $generated@@164))) ($generated@@93 $generated@@162)))
 :pattern ( ($generated@@93 ($generated@@52 ($generated@@51 $generated@@162 $generated@@163) ($generated@@46 $generated@@162 $generated@@164))))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@78 $generated@@165) ($generated@@78 $generated@@166)) ($generated@@57 $generated@@165 $generated@@166))
 :pattern ( ($generated@@57 $generated@@165 $generated@@166) ($generated@@78 $generated@@165))
 :pattern ( ($generated@@57 $generated@@165 $generated@@166) ($generated@@78 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@43 ($generated@@30 $generated@@167 $generated@@168)) $generated@@6)
 :pattern ( ($generated@@30 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@125 ($generated@@30 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@30 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@124 ($generated@@30 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@30 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@43 ($generated@@35 $generated@@173 $generated@@174)) $generated@@8)
 :pattern ( ($generated@@35 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@147 ($generated@@35 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@35 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@144 ($generated@@35 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@35 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@179 ($generated@@68 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@68 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@27 ($generated@@68 $generated@@181)) $generated@@1)
 :pattern ( ($generated@@68 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@38 $generated@@183 ($generated@@90 $generated@@183 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@90 $generated@@183 $generated@@182))
)))
(assert  (=> (<= 2 $generated@@120) (forall (($generated@@184 T@U) ($generated@@185 Int) ($generated@@186 T@U) ) (!  (=> (or ($generated@@142 $generated@@185 $generated@@186) (and (< 2 $generated@@120) ($generated@@28 $generated@@67 $generated@@186 ($generated@@68 $generated)))) (and (and (=> ($generated@@84 ($generated@@136 $generated@@184 $generated@@185 $generated@@186)) (and (< ($generated@@36 ($generated@@144 ($generated@@136 $generated@@184 $generated@@185 $generated@@186))) ($generated@@36 $generated@@186)) ($generated@@86 ($generated@@144 ($generated@@136 $generated@@184 $generated@@185 $generated@@186)) ($generated@@46 $generated@@186 (- ($generated@@36 $generated@@186) ($generated@@36 ($generated@@144 ($generated@@136 $generated@@184 $generated@@185 $generated@@186)))))))) (=> ($generated@@84 ($generated@@136 $generated@@184 $generated@@185 $generated@@186)) ($generated@@86 ($generated@@121 ($generated@@122 $generated@@143) $generated@@185 ($generated@@147 ($generated@@136 $generated@@184 $generated@@185 $generated@@186))) ($generated@@51 $generated@@186 (- ($generated@@36 $generated@@186) ($generated@@36 ($generated@@144 ($generated@@136 $generated@@184 $generated@@185 $generated@@186)))))))) ($generated@@28 $generated@@29 ($generated@@136 $generated@@184 $generated@@185 $generated@@186) $generated@@56)))
 :pattern ( ($generated@@136 $generated@@184 $generated@@185 $generated@@186))
))))
(assert  (=> (<= 1 $generated@@120) (forall (($generated@@187 T@U) ($generated@@188 Int) ($generated@@189 T@U) ) (!  (=> (or ($generated@@123 $generated@@188 $generated@@189) (and (< 1 $generated@@120) ($generated@@28 $generated@@29 $generated@@189 $generated@@31))) (and (=> (not ($generated@@78 $generated@@189)) (let (($generated@@190 ($generated@@124 $generated@@189)))
(let (($generated@@191 ($generated@@125 $generated@@189)))
 (and ($generated@@123 (+ $generated@@188 1) $generated@@191) ($generated@@123 (+ $generated@@188 1) $generated@@190))))) (= ($generated@@121 ($generated@@122 $generated@@187) $generated@@188 $generated@@189) (ite ($generated@@78 $generated@@189) ($generated@@47 $generated@@42 ($generated@@90 $generated@@13 ($generated@@17 $generated@@188))) (let (($generated@@192 ($generated@@124 $generated@@189)))
(let (($generated@@193 ($generated@@125 $generated@@189)))
($generated@@52 ($generated@@121 $generated@@187 (+ $generated@@188 1) $generated@@193) ($generated@@121 $generated@@187 (+ $generated@@188 1) $generated@@192))))))))
 :pattern ( ($generated@@121 ($generated@@122 $generated@@187) $generated@@188 $generated@@189))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (< ($generated@@37 $generated@@194) ($generated@@37 ($generated@@30 $generated@@194 $generated@@195)))
 :pattern ( ($generated@@30 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (< ($generated@@37 $generated@@197) ($generated@@37 ($generated@@30 $generated@@196 $generated@@197)))
 :pattern ( ($generated@@30 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (< ($generated@@37 $generated@@198) ($generated@@37 ($generated@@35 $generated@@198 $generated@@199)))
 :pattern ( ($generated@@35 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (< ($generated@@93 $generated@@201) ($generated@@37 ($generated@@35 $generated@@200 $generated@@201)))
 :pattern ( ($generated@@35 $generated@@200 $generated@@201))
)))
(assert  (=> (<= 1 $generated@@120) (forall (($generated@@202 T@U) ($generated@@203 Int) ($generated@@204 T@U) ) (!  (=> (or ($generated@@123 ($generated@@62 $generated@@203) ($generated@@64 $generated@@29 $generated@@204)) (and (< 1 $generated@@120) ($generated@@28 $generated@@29 $generated@@204 $generated@@31))) (and (=> (not ($generated@@16 ($generated@@64 $generated@@12 ($generated@@15 ($generated@@78 ($generated@@64 $generated@@29 $generated@@204)))))) (let (($generated@@205 ($generated@@64 $generated@@29 ($generated@@124 ($generated@@64 $generated@@29 $generated@@204)))))
(let (($generated@@206 ($generated@@64 $generated@@29 ($generated@@125 ($generated@@64 $generated@@29 $generated@@204)))))
 (and ($generated@@123 ($generated@@62 (+ $generated@@203 1)) $generated@@206) ($generated@@123 ($generated@@62 (+ $generated@@203 1)) $generated@@205))))) (= ($generated@@121 ($generated@@122 $generated@@202) ($generated@@62 $generated@@203) ($generated@@64 $generated@@29 $generated@@204)) (ite ($generated@@78 ($generated@@64 $generated@@29 $generated@@204)) ($generated@@47 $generated@@42 ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 $generated@@203)))) (let (($generated@@207 ($generated@@64 $generated@@29 ($generated@@124 ($generated@@64 $generated@@29 $generated@@204)))))
(let (($generated@@208 ($generated@@64 $generated@@29 ($generated@@125 ($generated@@64 $generated@@29 $generated@@204)))))
($generated@@52 ($generated@@121 ($generated@@122 $generated@@202) ($generated@@62 (+ $generated@@203 1)) $generated@@208) ($generated@@121 ($generated@@122 $generated@@202) ($generated@@62 (+ $generated@@203 1)) $generated@@207))))))))
 :weight 3
 :pattern ( ($generated@@121 ($generated@@122 $generated@@202) ($generated@@62 $generated@@203) ($generated@@64 $generated@@29 $generated@@204)))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@220 T@T) ($generated@@221 T@T) ($generated@@222 T@T) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@209 $generated@@220 $generated@@221 $generated@@222 ($generated@@216 $generated@@220 $generated@@221 $generated@@222 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@225 $generated@@226) $generated@@223)
 :weight 0
)) (and (forall (($generated@@227 T@T) ($generated@@228 T@T) ($generated@@229 T@T) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@209 $generated@@227 $generated@@228 $generated@@229 ($generated@@216 $generated@@227 $generated@@228 $generated@@229 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@209 $generated@@227 $generated@@228 $generated@@229 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ($generated@@238 T@T) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@209 $generated@@236 $generated@@237 $generated@@238 ($generated@@216 $generated@@236 $generated@@237 $generated@@238 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@209 $generated@@236 $generated@@237 $generated@@238 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
)))) (= ($generated@@11 $generated@@210) 5)) (= ($generated@@11 $generated@@211) 6)) (forall (($generated@@245 T@T) ($generated@@246 T@T) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (= ($generated@@213 $generated@@245 $generated@@246 ($generated@@217 $generated@@245 $generated@@246 $generated@@248 $generated@@249 $generated@@247) $generated@@249) $generated@@247)
 :weight 0
))) (forall (($generated@@250 T@T) ($generated@@251 T@T) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (or (= $generated@@254 $generated@@255) (= ($generated@@213 $generated@@250 $generated@@251 ($generated@@217 $generated@@250 $generated@@251 $generated@@253 $generated@@254 $generated@@252) $generated@@255) ($generated@@213 $generated@@250 $generated@@251 $generated@@253 $generated@@255)))
 :weight 0
))) (= ($generated@@11 $generated@@214) 7)) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (= ($generated@@11 ($generated@@215 $generated@@256 $generated@@257)) 8))) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= ($generated@@218 ($generated@@215 $generated@@258 $generated@@259)) $generated@@258)
 :pattern ( ($generated@@215 $generated@@258 $generated@@259))
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (! (= ($generated@@219 ($generated@@215 $generated@@260 $generated@@261)) $generated@@261)
 :pattern ( ($generated@@215 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (= ($generated@@16 ($generated@@209 $generated@@210 $generated@@211 $generated@@12 ($generated@@212 $generated@@262 $generated@@263 $generated@@264 $generated@@265) $generated@@266 $generated@@267))  (=> (and (or (not (= $generated@@266 $generated@@262)) (not true)) ($generated@@16 ($generated@@38 $generated@@12 ($generated@@213 $generated@@211 $generated@@214 ($generated@@213 $generated@@210 ($generated@@215 $generated@@211 $generated@@214) $generated@@263 $generated@@266) $generated@@264)))) $generated@@265))
 :pattern ( ($generated@@209 $generated@@210 $generated@@211 $generated@@12 ($generated@@212 $generated@@262 $generated@@263 $generated@@264 $generated@@265) $generated@@266 $generated@@267))
)))
(assert  (=> (<= 1 $generated@@120) (forall (($generated@@268 T@U) ($generated@@269 Int) ($generated@@270 T@U) ) (!  (=> (or ($generated@@123 $generated@@269 $generated@@270) (and (< 1 $generated@@120) ($generated@@28 $generated@@29 $generated@@270 $generated@@31))) (and (and (and (not ($generated@@86 ($generated@@121 $generated@@268 $generated@@269 $generated@@270) $generated@@42)) (>= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@121 $generated@@268 $generated@@269 $generated@@270) ($generated@@62 0)))) $generated@@269)) (= (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@121 $generated@@268 $generated@@269 $generated@@270) ($generated@@62 0)))) $generated@@269) ($generated@@57 $generated@@270 $generated@@44))) ($generated@@28 $generated@@67 ($generated@@121 $generated@@268 $generated@@269 $generated@@270) ($generated@@68 $generated))))
 :pattern ( ($generated@@121 $generated@@268 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (= ($generated@@271 ($generated@@47 $generated@@273 $generated@@274)) $generated@@273) (= ($generated@@272 ($generated@@47 $generated@@273 $generated@@274)) $generated@@274))
 :pattern ( ($generated@@47 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> ($generated@@69 $generated@@275 ($generated@@68 $generated@@276)) (and (= ($generated@@90 $generated@@67 ($generated@@38 $generated@@67 $generated@@275)) $generated@@275) ($generated@@28 $generated@@67 ($generated@@38 $generated@@67 $generated@@275) ($generated@@68 $generated@@276))))
 :pattern ( ($generated@@69 $generated@@275 ($generated@@68 $generated@@276)))
)))
(assert (= ($generated@@27 $generated@@31) $generated@@3))
(assert (= ($generated@@277 $generated@@31) $generated@@9))
(assert (= ($generated@@27 $generated@@56) $generated@@4))
(assert (= ($generated@@277 $generated@@56) $generated@@10))
(assert (forall (($generated@@278 T@U) ($generated@@279 Int) ($generated@@280 Int) ) (!  (=> (and (and (<= 0 $generated@@279) (<= $generated@@279 $generated@@280)) (< $generated@@280 ($generated@@36 $generated@@278))) (= ($generated@@34 ($generated@@46 $generated@@278 $generated@@279) (- $generated@@280 $generated@@279)) ($generated@@34 $generated@@278 $generated@@280)))
 :weight 25
 :pattern ( ($generated@@34 $generated@@278 $generated@@280) ($generated@@46 $generated@@278 $generated@@279))
)))
(assert (= $generated@@44 ($generated@@64 $generated@@29 $generated@@44)))
(assert (= $generated@@45 ($generated@@64 $generated@@29 $generated@@45)))
(assert (forall (($generated@@281 T@U) ($generated@@282 Int) ($generated@@283 Int) ) (!  (=> (and (and (<= 0 $generated@@282) (<= 0 $generated@@283)) (<= (+ $generated@@282 $generated@@283) ($generated@@36 $generated@@281))) (= ($generated@@46 ($generated@@46 $generated@@281 $generated@@282) $generated@@283) ($generated@@46 $generated@@281 (+ $generated@@282 $generated@@283))))
 :pattern ( ($generated@@46 ($generated@@46 $generated@@281 $generated@@282) $generated@@283))
)))
(assert  (=> (<= 2 $generated@@120) (forall (($generated@@284 T@U) ($generated@@285 Int) ($generated@@286 T@U) ) (!  (=> (or ($generated@@142 $generated@@285 $generated@@286) (and (< 2 $generated@@120) ($generated@@28 $generated@@67 $generated@@286 ($generated@@68 $generated)))) (and (=> (not (or ($generated@@86 $generated@@286 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@286 ($generated@@62 0)))) $generated@@285))) (=> (or (not (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@286 ($generated@@62 0)))) $generated@@285)) (not true)) (and ($generated@@142 (+ $generated@@285 1) $generated@@286) (let (($generated@@287 ($generated@@136 $generated@@284 (+ $generated@@285 1) $generated@@286)))
 (=> (not ($generated@@82 $generated@@287)) ($generated@@142 (+ $generated@@285 1) ($generated@@144 $generated@@287))))))) (= ($generated@@136 ($generated@@122 $generated@@284) $generated@@285 $generated@@286) (ite  (or ($generated@@86 $generated@@286 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@286 ($generated@@62 0)))) $generated@@285)) $generated@@45 (ite (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@286 ($generated@@62 0)))) $generated@@285) ($generated@@35 ($generated@@64 $generated@@29 $generated@@44) ($generated@@46 $generated@@286 ($generated@@62 1))) (let (($generated@@288 ($generated@@136 $generated@@284 (+ $generated@@285 1) $generated@@286)))
(ite ($generated@@82 $generated@@288) $generated@@45 (let (($generated@@289 ($generated@@136 $generated@@284 (+ $generated@@285 1) ($generated@@144 $generated@@288))))
(ite ($generated@@82 $generated@@289) $generated@@45 ($generated@@35 ($generated@@30 ($generated@@147 $generated@@288) ($generated@@147 $generated@@289)) ($generated@@144 $generated@@289)))))))))))
 :pattern ( ($generated@@136 ($generated@@122 $generated@@284) $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 Int) ) (!  (and (=> (< $generated@@292 ($generated@@36 $generated@@290)) (= ($generated@@34 ($generated@@52 $generated@@290 $generated@@291) $generated@@292) ($generated@@34 $generated@@290 $generated@@292))) (=> (<= ($generated@@36 $generated@@290) $generated@@292) (= ($generated@@34 ($generated@@52 $generated@@290 $generated@@291) $generated@@292) ($generated@@34 $generated@@291 (- $generated@@292 ($generated@@36 $generated@@290))))))
 :pattern ( ($generated@@34 ($generated@@52 $generated@@290 $generated@@291) $generated@@292))
)))
(assert  (=> (<= 2 $generated@@120) (forall (($generated@@293 T@U) ($generated@@294 Int) ($generated@@295 T@U) ) (!  (=> (or ($generated@@142 ($generated@@62 $generated@@294) ($generated@@64 $generated@@67 $generated@@295)) (and (< 2 $generated@@120) ($generated@@28 $generated@@67 $generated@@295 ($generated@@68 $generated)))) (and (=> (not (or ($generated@@86 $generated@@295 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@64 $generated@@67 $generated@@295) ($generated@@62 0)))) $generated@@294))) (=> (or (not (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@64 $generated@@67 $generated@@295) ($generated@@62 0)))) ($generated@@62 $generated@@294))) (not true)) (and ($generated@@142 ($generated@@62 (+ $generated@@294 1)) ($generated@@64 $generated@@67 $generated@@295)) (let (($generated@@296 ($generated@@64 $generated@@29 ($generated@@136 ($generated@@122 $generated@@293) ($generated@@62 (+ $generated@@294 1)) ($generated@@64 $generated@@67 $generated@@295)))))
 (=> (not ($generated@@82 $generated@@296)) ($generated@@142 ($generated@@62 (+ $generated@@294 1)) ($generated@@144 $generated@@296))))))) (= ($generated@@136 ($generated@@122 $generated@@293) ($generated@@62 $generated@@294) ($generated@@64 $generated@@67 $generated@@295)) (ite  (or ($generated@@86 $generated@@295 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@64 $generated@@67 $generated@@295) ($generated@@62 0)))) $generated@@294)) $generated@@45 (ite (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@64 $generated@@67 $generated@@295) ($generated@@62 0)))) ($generated@@62 $generated@@294)) ($generated@@35 ($generated@@64 $generated@@29 $generated@@44) ($generated@@64 $generated@@67 ($generated@@46 ($generated@@64 $generated@@67 $generated@@295) ($generated@@62 1)))) (let (($generated@@297 ($generated@@64 $generated@@29 ($generated@@136 ($generated@@122 $generated@@293) ($generated@@62 (+ $generated@@294 1)) ($generated@@64 $generated@@67 $generated@@295)))))
(ite ($generated@@82 $generated@@297) $generated@@45 (let (($generated@@298 ($generated@@64 $generated@@29 ($generated@@136 ($generated@@122 $generated@@293) ($generated@@62 (+ $generated@@294 1)) ($generated@@64 $generated@@67 ($generated@@144 $generated@@297))))))
(ite ($generated@@82 $generated@@298) $generated@@45 ($generated@@35 ($generated@@64 $generated@@29 ($generated@@30 ($generated@@64 $generated@@29 ($generated@@147 $generated@@297)) ($generated@@64 $generated@@29 ($generated@@147 $generated@@298)))) ($generated@@64 $generated@@67 ($generated@@144 $generated@@298))))))))))))
 :weight 3
 :pattern ( ($generated@@136 ($generated@@122 $generated@@293) ($generated@@62 $generated@@294) ($generated@@64 $generated@@67 $generated@@295)))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (! (= ($generated@@30 ($generated@@64 $generated@@29 $generated@@299) ($generated@@64 $generated@@29 $generated@@300)) ($generated@@64 $generated@@29 ($generated@@30 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@30 ($generated@@64 $generated@@29 $generated@@299) ($generated@@64 $generated@@29 $generated@@300)))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (! (= ($generated@@35 ($generated@@64 $generated@@29 $generated@@301) ($generated@@64 $generated@@67 $generated@@302)) ($generated@@64 $generated@@29 ($generated@@35 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@35 ($generated@@64 $generated@@29 $generated@@301) ($generated@@64 $generated@@67 $generated@@302)))
)))
(assert (forall (($generated@@303 Int) ) (! (= ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 $generated@@303))) ($generated@@64 $generated@@214 ($generated@@90 $generated@@13 ($generated@@17 $generated@@303))))
 :pattern ( ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 $generated@@303))))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (= ($generated@@90 $generated@@305 ($generated@@64 $generated@@305 $generated@@304)) ($generated@@64 $generated@@214 ($generated@@90 $generated@@305 $generated@@304)))
 :pattern ( ($generated@@90 $generated@@305 ($generated@@64 $generated@@305 $generated@@304)))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= ($generated@@36 $generated@@306) 0) (= $generated@@306 $generated@@42))
 :pattern ( ($generated@@36 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 Int) ) (!  (=> (= $generated@@308 0) (= ($generated@@51 $generated@@307 $generated@@308) $generated@@42))
 :pattern ( ($generated@@51 $generated@@307 $generated@@308))
)))
(assert  (=> (<= 3 $generated@@120) (forall (($generated@@309 T@U) ) (!  (=> (or ($generated@@141 ($generated@@64 $generated@@67 $generated@@309)) (and (< 3 $generated@@120) ($generated@@28 $generated@@67 $generated@@309 ($generated@@68 $generated)))) (and ($generated@@142 ($generated@@62 0) ($generated@@64 $generated@@67 $generated@@309)) (= ($generated@@140 ($generated@@64 $generated@@67 $generated@@309)) (let (($generated@@310 ($generated@@64 $generated@@29 ($generated@@136 ($generated@@122 $generated@@143) ($generated@@62 0) ($generated@@64 $generated@@67 $generated@@309)))))
(ite  (and ($generated@@84 $generated@@310) ($generated@@86 ($generated@@144 $generated@@310) $generated@@42)) $generated@@310 $generated@@45)))))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@64 $generated@@67 $generated@@309)))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (! (= ($generated@@28 $generated@@67 $generated@@311 ($generated@@68 $generated@@312)) (forall (($generated@@313 Int) ) (!  (=> (and (<= 0 $generated@@313) (< $generated@@313 ($generated@@36 $generated@@311))) ($generated@@69 ($generated@@34 $generated@@311 $generated@@313) $generated@@312))
 :pattern ( ($generated@@34 $generated@@311 $generated@@313))
)))
 :pattern ( ($generated@@28 $generated@@67 $generated@@311 ($generated@@68 $generated@@312)))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 Int) ) (!  (=> (and (<= 0 $generated@@315) (< $generated@@315 ($generated@@36 $generated@@314))) (< ($generated@@37 ($generated@@38 $generated@@29 ($generated@@34 $generated@@314 $generated@@315))) ($generated@@93 $generated@@314)))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@29 ($generated@@34 $generated@@314 $generated@@315))))
)))
(assert (forall (($generated@@316 T@U) ) (! ($generated@@28 $generated@@13 $generated@@316 $generated)
 :pattern ( ($generated@@28 $generated@@13 $generated@@316 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@317 () T@U)
(declare-fun $generated@@318 () T@U)
(declare-fun $generated@@319 () T@U)
(declare-fun $generated@@320 (T@U) Bool)
(declare-fun $generated@@321 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@322  (=> (= $generated@@317 ($generated@@212 $generated@@318 $generated@@319 $generated@@2 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@16 ($generated@@64 $generated@@12 ($generated@@15 ($generated@@84 ($generated@@64 $generated@@29 ($generated@@140 ($generated@@64 $generated@@67 ($generated@@47 ($generated@@47 ($generated@@47 ($generated@@47 $generated@@42 ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 1)))) ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 3)))) ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 3)))) ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 2)))))))))))) (=> ($generated@@16 ($generated@@64 $generated@@12 ($generated@@15 ($generated@@84 ($generated@@64 $generated@@29 ($generated@@140 ($generated@@64 $generated@@67 ($generated@@47 ($generated@@47 ($generated@@47 ($generated@@47 $generated@@42 ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 1)))) ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 3)))) ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 3)))) ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 2))))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@57 ($generated@@147 ($generated@@64 $generated@@29 ($generated@@140 ($generated@@64 $generated@@67 ($generated@@47 ($generated@@47 ($generated@@47 ($generated@@47 $generated@@42 ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 1)))) ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 3)))) ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 3)))) ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 2)))))))) ($generated@@30 ($generated@@64 $generated@@29 $generated@@44) ($generated@@64 $generated@@29 ($generated@@30 ($generated@@64 $generated@@29 ($generated@@30 ($generated@@64 $generated@@29 $generated@@44) ($generated@@64 $generated@@29 $generated@@44))) ($generated@@64 $generated@@29 $generated@@44)))))))))))
(let (($generated@@323  (=> (and (and ($generated@@320 $generated@@319) ($generated@@321 $generated@@319)) (and (= 4 $generated@@120) (= (ControlFlow 0 4) 2))) $generated@@322)))
$generated@@323)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
