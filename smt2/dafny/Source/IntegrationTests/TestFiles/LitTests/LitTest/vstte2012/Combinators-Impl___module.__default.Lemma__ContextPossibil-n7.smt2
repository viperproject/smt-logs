(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 () Int)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@120 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Int)
(declare-fun $generated@@191 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@192 () T@T)
(declare-fun $generated@@193 () T@T)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@252 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@10 $generated@@27) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@28 $generated@@30 $generated@@31) $generated@@29)  (and ($generated@@26 $generated@@27 $generated@@30 $generated@@29) ($generated@@26 $generated@@27 $generated@@31 $generated@@29)))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@28 $generated@@30 $generated@@31) $generated@@29))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@32 $generated@@34 $generated@@35) $generated@@33)  (and ($generated@@26 $generated@@27 $generated@@34 $generated@@33) ($generated@@26 $generated@@27 $generated@@35 $generated@@29)))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@32 $generated@@34 $generated@@35) $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@36 $generated@@37 $generated@@38) $generated@@33)  (and ($generated@@26 $generated@@27 $generated@@37 $generated@@29) ($generated@@26 $generated@@27 $generated@@38 $generated@@33)))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@36 $generated@@37 $generated@@38) $generated@@33))
)))
(assert (= ($generated@@39 $generated@@40) $generated@@2))
(assert (= ($generated@@39 $generated@@41) $generated@@3))
(assert (= ($generated@@39 $generated@@42) $generated@@5))
(assert ($generated@@26 $generated@@27 $generated@@40 $generated@@29))
(assert ($generated@@26 $generated@@27 $generated@@41 $generated@@29))
(assert ($generated@@26 $generated@@27 $generated@@42 $generated@@33))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (or ($generated@@45 $generated@@50) (and (< 1 $generated@@43) ($generated@@26 $generated@@27 $generated@@50 $generated@@29))) (=> (and ($generated@@44 $generated@@49 $generated@@50) ($generated@@46 $generated@@50)) (and ($generated@@44 $generated@@49 ($generated@@47 $generated@@50)) ($generated@@44 $generated@@49 ($generated@@48 $generated@@50)))))
 :pattern ( ($generated@@44 $generated@@49 $generated@@50))
))))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@53) (= $generated@@52 $generated@@53))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@54 $generated@@55 $generated@@56) (= $generated@@55 $generated@@56))
 :pattern ( ($generated@@54 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@57 $generated@@59 $generated@@58) $generated@@58)
 :pattern ( ($generated@@57 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@60 $generated@@61) (= ($generated@@39 $generated@@61) $generated@@2))
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@62 $generated@@63) (= ($generated@@39 $generated@@63) $generated@@3))
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@46 $generated@@64) (= ($generated@@39 $generated@@64) $generated@@4))
 :pattern ( ($generated@@46 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@39 $generated@@66) $generated@@5))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@39 $generated@@68) $generated@@6))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@39 $generated@@70) $generated@@7))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@71 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@71 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@46 $generated@@75) (exists (($generated@@76 T@U) ($generated@@77 T@U) ) (= $generated@@75 ($generated@@28 $generated@@76 $generated@@77))))
 :pattern ( ($generated@@46 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@67 $generated@@78) (exists (($generated@@79 T@U) ($generated@@80 T@U) ) (= $generated@@78 ($generated@@32 $generated@@79 $generated@@80))))
 :pattern ( ($generated@@67 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@69 $generated@@81) (exists (($generated@@82 T@U) ($generated@@83 T@U) ) (= $generated@@81 ($generated@@36 $generated@@82 $generated@@83))))
 :pattern ( ($generated@@69 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@60 $generated@@84) (= $generated@@84 $generated@@40))
 :pattern ( ($generated@@60 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@62 $generated@@85) (= $generated@@85 $generated@@41))
 :pattern ( ($generated@@62 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@65 $generated@@86) (= $generated@@86 $generated@@42))
 :pattern ( ($generated@@65 $generated@@86))
)))
(assert  (=> (<= 3 $generated@@43) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or ($generated@@89 ($generated@@57 $generated@@27 $generated@@97) ($generated@@57 $generated@@27 $generated@@98)) (and (< 3 $generated@@43) (and (and ($generated@@26 $generated@@27 $generated@@97 $generated@@33) ($generated@@26 $generated@@27 $generated@@98 $generated@@29)) ($generated@@15 ($generated@@57 $generated@@11 ($generated@@14 ($generated@@90 ($generated@@88 $generated@@91) ($generated@@57 $generated@@27 $generated@@97)))))))) (and (=> (not ($generated@@15 ($generated@@57 $generated@@11 ($generated@@14 ($generated@@65 ($generated@@57 $generated@@27 $generated@@97)))))) (and (=> ($generated@@15 ($generated@@57 $generated@@11 ($generated@@14 ($generated@@67 ($generated@@57 $generated@@27 $generated@@97))))) (let (($generated@@99 ($generated@@57 $generated@@27 ($generated@@92 ($generated@@57 $generated@@27 $generated@@97)))))
($generated@@89 $generated@@99 ($generated@@57 $generated@@27 $generated@@98)))) (=> (not ($generated@@15 ($generated@@57 $generated@@11 ($generated@@14 ($generated@@67 ($generated@@57 $generated@@27 $generated@@97)))))) (let (($generated@@100 ($generated@@57 $generated@@27 ($generated@@93 ($generated@@57 $generated@@27 $generated@@97)))))
($generated@@89 $generated@@100 ($generated@@57 $generated@@27 $generated@@98)))))) (= ($generated@@87 ($generated@@88 $generated@@96) ($generated@@57 $generated@@27 $generated@@97) ($generated@@57 $generated@@27 $generated@@98)) (ite ($generated@@65 ($generated@@57 $generated@@27 $generated@@97)) $generated@@98 (ite ($generated@@67 ($generated@@57 $generated@@27 $generated@@97)) (let (($generated@@101 ($generated@@57 $generated@@27 ($generated@@94 ($generated@@57 $generated@@27 $generated@@97)))))
(let (($generated@@102 ($generated@@57 $generated@@27 ($generated@@92 ($generated@@57 $generated@@27 $generated@@97)))))
($generated@@57 $generated@@27 ($generated@@28 ($generated@@57 $generated@@27 ($generated@@87 ($generated@@88 $generated@@96) $generated@@102 ($generated@@57 $generated@@27 $generated@@98))) $generated@@101)))) (let (($generated@@103 ($generated@@57 $generated@@27 ($generated@@93 ($generated@@57 $generated@@27 $generated@@97)))))
(let (($generated@@104 ($generated@@57 $generated@@27 ($generated@@95 ($generated@@57 $generated@@27 $generated@@97)))))
($generated@@57 $generated@@27 ($generated@@28 $generated@@104 ($generated@@57 $generated@@27 ($generated@@87 ($generated@@88 $generated@@96) $generated@@103 ($generated@@57 $generated@@27 $generated@@98))))))))))))
 :weight 3
 :pattern ( ($generated@@87 ($generated@@88 $generated@@96) ($generated@@57 $generated@@27 $generated@@97) ($generated@@57 $generated@@27 $generated@@98)))
))))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@87 ($generated@@88 $generated@@105) $generated@@106 $generated@@107) ($generated@@87 $generated@@105 $generated@@106 $generated@@107))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@105) $generated@@106 $generated@@107))
)))
(assert  (=> (<= 2 $generated@@43) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@108 $generated@@110) (and (< 2 $generated@@43) ($generated@@26 $generated@@27 $generated@@110 $generated@@33))) (and (=> (not ($generated@@65 $generated@@110)) (and (=> ($generated@@67 $generated@@110) (let (($generated@@111 ($generated@@92 $generated@@110)))
($generated@@108 $generated@@111))) (=> (not ($generated@@67 $generated@@110)) (let (($generated@@112 ($generated@@93 $generated@@110)))
(let (($generated@@113 ($generated@@95 $generated@@110)))
 (and ($generated@@45 $generated@@113) (=> ($generated@@44 ($generated@@88 $generated@@91) $generated@@113) ($generated@@108 $generated@@112)))))))) (= ($generated@@90 ($generated@@88 $generated@@109) $generated@@110) (ite ($generated@@65 $generated@@110) true (ite ($generated@@67 $generated@@110) (let (($generated@@114 ($generated@@92 $generated@@110)))
($generated@@90 $generated@@109 $generated@@114)) (let (($generated@@115 ($generated@@93 $generated@@110)))
(let (($generated@@116 ($generated@@95 $generated@@110)))
 (and ($generated@@44 ($generated@@88 $generated@@91) $generated@@116) ($generated@@90 $generated@@109 $generated@@115)))))))))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@109) $generated@@110))
))))
(assert  (=> (<= 3 $generated@@43) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or ($generated@@89 $generated@@118 $generated@@119) (and (< 3 $generated@@43) (and (and ($generated@@26 $generated@@27 $generated@@118 $generated@@33) ($generated@@26 $generated@@27 $generated@@119 $generated@@29)) ($generated@@90 ($generated@@88 $generated@@91) $generated@@118)))) ($generated@@26 $generated@@27 ($generated@@87 $generated@@117 $generated@@118 $generated@@119) $generated@@29))
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or ($generated@@45 $generated@@122) (and (< 1 $generated@@43) ($generated@@26 $generated@@27 $generated@@122 $generated@@29))) (and (=> (not ($generated@@60 $generated@@122)) (=> (not ($generated@@62 $generated@@122)) (let (($generated@@123 ($generated@@48 $generated@@122)))
(let (($generated@@124 ($generated@@47 $generated@@122)))
 (and (=> ($generated@@60 $generated@@124) ($generated@@45 $generated@@123)) (=> (not ($generated@@60 $generated@@124)) (and (=> ($generated@@62 $generated@@124) ($generated@@45 $generated@@123)) (=> (not ($generated@@62 $generated@@124)) (let (($generated@@125 ($generated@@48 $generated@@124)))
(let (($generated@@126 ($generated@@47 $generated@@124)))
 (and ($generated@@120 $generated@@126) (=> ($generated@@51 $generated@@126 $generated@@40) (and ($generated@@45 $generated@@125) (=> ($generated@@44 $generated@@121 $generated@@125) ($generated@@45 $generated@@123))))))))))))))) (= ($generated@@44 ($generated@@88 $generated@@121) $generated@@122) (ite ($generated@@60 $generated@@122) true (ite ($generated@@62 $generated@@122) true (let (($generated@@127 ($generated@@48 $generated@@122)))
(let (($generated@@128 ($generated@@47 $generated@@122)))
(ite ($generated@@60 $generated@@128) ($generated@@44 $generated@@121 $generated@@127) (ite ($generated@@62 $generated@@128) ($generated@@44 $generated@@121 $generated@@127) (let (($generated@@129 ($generated@@48 $generated@@128)))
(let (($generated@@130 ($generated@@47 $generated@@128)))
 (and (and ($generated@@51 $generated@@130 $generated@@40) ($generated@@44 $generated@@121 $generated@@129)) ($generated@@44 $generated@@121 $generated@@127)))))))))))))
 :pattern ( ($generated@@44 ($generated@@88 $generated@@121) $generated@@122))
))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@46 $generated@@131) ($generated@@46 $generated@@132)) (= ($generated@@51 $generated@@131 $generated@@132)  (and ($generated@@51 ($generated@@47 $generated@@131) ($generated@@47 $generated@@132)) ($generated@@51 ($generated@@48 $generated@@131) ($generated@@48 $generated@@132)))))
 :pattern ( ($generated@@51 $generated@@131 $generated@@132) ($generated@@46 $generated@@131))
 :pattern ( ($generated@@51 $generated@@131 $generated@@132) ($generated@@46 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and ($generated@@67 $generated@@133) ($generated@@67 $generated@@134)) (= ($generated@@54 $generated@@133 $generated@@134)  (and ($generated@@54 ($generated@@92 $generated@@133) ($generated@@92 $generated@@134)) ($generated@@51 ($generated@@94 $generated@@133) ($generated@@94 $generated@@134)))))
 :pattern ( ($generated@@54 $generated@@133 $generated@@134) ($generated@@67 $generated@@133))
 :pattern ( ($generated@@54 $generated@@133 $generated@@134) ($generated@@67 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and ($generated@@69 $generated@@135) ($generated@@69 $generated@@136)) (= ($generated@@54 $generated@@135 $generated@@136)  (and ($generated@@51 ($generated@@95 $generated@@135) ($generated@@95 $generated@@136)) ($generated@@54 ($generated@@93 $generated@@135) ($generated@@93 $generated@@136)))))
 :pattern ( ($generated@@54 $generated@@135 $generated@@136) ($generated@@69 $generated@@135))
 :pattern ( ($generated@@54 $generated@@135 $generated@@136) ($generated@@69 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@44 ($generated@@88 $generated@@137) $generated@@138) ($generated@@44 $generated@@137 $generated@@138))
 :pattern ( ($generated@@44 ($generated@@88 $generated@@137) $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@90 ($generated@@88 $generated@@139) $generated@@140) ($generated@@90 $generated@@139 $generated@@140))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and ($generated@@60 $generated@@141) ($generated@@60 $generated@@142)) ($generated@@51 $generated@@141 $generated@@142))
 :pattern ( ($generated@@51 $generated@@141 $generated@@142) ($generated@@60 $generated@@141))
 :pattern ( ($generated@@51 $generated@@141 $generated@@142) ($generated@@60 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and ($generated@@62 $generated@@143) ($generated@@62 $generated@@144)) ($generated@@51 $generated@@143 $generated@@144))
 :pattern ( ($generated@@51 $generated@@143 $generated@@144) ($generated@@62 $generated@@143))
 :pattern ( ($generated@@51 $generated@@143 $generated@@144) ($generated@@62 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and ($generated@@65 $generated@@145) ($generated@@65 $generated@@146)) ($generated@@54 $generated@@145 $generated@@146))
 :pattern ( ($generated@@54 $generated@@145 $generated@@146) ($generated@@65 $generated@@145))
 :pattern ( ($generated@@54 $generated@@145 $generated@@146) ($generated@@65 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@39 ($generated@@28 $generated@@147 $generated@@148)) $generated@@4)
 :pattern ( ($generated@@28 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@47 ($generated@@28 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@28 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@48 ($generated@@28 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@28 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@39 ($generated@@32 $generated@@153 $generated@@154)) $generated@@6)
 :pattern ( ($generated@@32 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@92 ($generated@@32 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@32 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@94 ($generated@@32 $generated@@157 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@32 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@39 ($generated@@36 $generated@@159 $generated@@160)) $generated@@7)
 :pattern ( ($generated@@36 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@95 ($generated@@36 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@36 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@93 ($generated@@36 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@36 $generated@@163 $generated@@164))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (or ($generated@@45 ($generated@@57 $generated@@27 $generated@@166)) (and (< 1 $generated@@43) ($generated@@26 $generated@@27 $generated@@166 $generated@@29))) (and (=> (not ($generated@@15 ($generated@@57 $generated@@11 ($generated@@14 ($generated@@60 ($generated@@57 $generated@@27 $generated@@166)))))) (=> (not ($generated@@15 ($generated@@57 $generated@@11 ($generated@@14 ($generated@@62 ($generated@@57 $generated@@27 $generated@@166)))))) (let (($generated@@167 ($generated@@57 $generated@@27 ($generated@@48 ($generated@@57 $generated@@27 $generated@@166)))))
(let (($generated@@168 ($generated@@57 $generated@@27 ($generated@@47 ($generated@@57 $generated@@27 $generated@@166)))))
 (and (=> ($generated@@60 $generated@@168) ($generated@@45 $generated@@167)) (=> (not ($generated@@60 $generated@@168)) (and (=> ($generated@@62 $generated@@168) ($generated@@45 $generated@@167)) (=> (not ($generated@@62 $generated@@168)) (let (($generated@@169 ($generated@@48 $generated@@168)))
(let (($generated@@170 ($generated@@47 $generated@@168)))
 (and ($generated@@120 $generated@@170) (=> ($generated@@51 $generated@@170 $generated@@40) (and ($generated@@45 $generated@@169) (=> ($generated@@44 ($generated@@88 $generated@@165) $generated@@169) ($generated@@45 $generated@@167))))))))))))))) (= ($generated@@44 ($generated@@88 $generated@@165) ($generated@@57 $generated@@27 $generated@@166)) (ite ($generated@@60 ($generated@@57 $generated@@27 $generated@@166)) true (ite ($generated@@62 ($generated@@57 $generated@@27 $generated@@166)) true (let (($generated@@171 ($generated@@57 $generated@@27 ($generated@@48 ($generated@@57 $generated@@27 $generated@@166)))))
(let (($generated@@172 ($generated@@57 $generated@@27 ($generated@@47 ($generated@@57 $generated@@27 $generated@@166)))))
(ite ($generated@@60 $generated@@172) ($generated@@44 ($generated@@88 $generated@@165) $generated@@171) (ite ($generated@@62 $generated@@172) ($generated@@44 ($generated@@88 $generated@@165) $generated@@171) (let (($generated@@173 ($generated@@57 $generated@@27 ($generated@@48 $generated@@172))))
(let (($generated@@174 ($generated@@57 $generated@@27 ($generated@@47 $generated@@172))))
 (and (and ($generated@@51 $generated@@174 $generated@@40) ($generated@@44 ($generated@@88 $generated@@165) $generated@@173)) ($generated@@44 ($generated@@88 $generated@@165) $generated@@171)))))))))))))
 :weight 3
 :pattern ( ($generated@@44 ($generated@@88 $generated@@165) ($generated@@57 $generated@@27 $generated@@166)))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@71 $generated@@176 ($generated@@72 $generated@@176 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@72 $generated@@176 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> ($generated@@120 $generated@@177) (or (or ($generated@@60 $generated@@177) ($generated@@62 $generated@@177)) ($generated@@46 $generated@@177)))
 :pattern ( ($generated@@120 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (< ($generated@@178 $generated@@179) ($generated@@178 ($generated@@28 $generated@@179 $generated@@180)))
 :pattern ( ($generated@@28 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (< ($generated@@178 $generated@@182) ($generated@@178 ($generated@@28 $generated@@181 $generated@@182)))
 :pattern ( ($generated@@28 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (< ($generated@@178 $generated@@183) ($generated@@178 ($generated@@32 $generated@@183 $generated@@184)))
 :pattern ( ($generated@@32 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (< ($generated@@178 $generated@@186) ($generated@@178 ($generated@@32 $generated@@185 $generated@@186)))
 :pattern ( ($generated@@32 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (< ($generated@@178 $generated@@187) ($generated@@178 ($generated@@36 $generated@@187 $generated@@188)))
 :pattern ( ($generated@@36 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (< ($generated@@178 $generated@@190) ($generated@@178 ($generated@@36 $generated@@189 $generated@@190)))
 :pattern ( ($generated@@36 $generated@@189 $generated@@190))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@191 $generated@@202 $generated@@203 $generated@@204 ($generated@@198 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@207 $generated@@208) $generated@@205)
 :weight 0
)) (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@191 $generated@@209 $generated@@210 $generated@@211 ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@191 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@T) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@191 $generated@@218 $generated@@219 $generated@@220 ($generated@@198 $generated@@218 $generated@@219 $generated@@220 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@191 $generated@@218 $generated@@219 $generated@@220 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (= ($generated@@10 $generated@@192) 4)) (= ($generated@@10 $generated@@193) 5)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (= ($generated@@195 $generated@@227 $generated@@228 ($generated@@199 $generated@@227 $generated@@228 $generated@@230 $generated@@231 $generated@@229) $generated@@231) $generated@@229)
 :weight 0
))) (forall (($generated@@232 T@T) ($generated@@233 T@T) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@236 $generated@@237) (= ($generated@@195 $generated@@232 $generated@@233 ($generated@@199 $generated@@232 $generated@@233 $generated@@235 $generated@@236 $generated@@234) $generated@@237) ($generated@@195 $generated@@232 $generated@@233 $generated@@235 $generated@@237)))
 :weight 0
))) (= ($generated@@10 $generated@@196) 6)) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (= ($generated@@10 ($generated@@197 $generated@@238 $generated@@239)) 7))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@200 ($generated@@197 $generated@@240 $generated@@241)) $generated@@240)
 :pattern ( ($generated@@197 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@201 ($generated@@197 $generated@@242 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@197 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (= ($generated@@15 ($generated@@191 $generated@@192 $generated@@193 $generated@@11 ($generated@@194 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (or (not (= $generated@@248 $generated@@244)) (not true)) ($generated@@15 ($generated@@71 $generated@@11 ($generated@@195 $generated@@193 $generated@@196 ($generated@@195 $generated@@192 ($generated@@197 $generated@@193 $generated@@196) $generated@@245 $generated@@248) $generated@@246)))) $generated@@247))
 :pattern ( ($generated@@191 $generated@@192 $generated@@193 $generated@@11 ($generated@@194 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@250 $generated@@29) (or (or ($generated@@60 $generated@@250) ($generated@@62 $generated@@250)) ($generated@@46 $generated@@250)))
 :pattern ( ($generated@@46 $generated@@250) ($generated@@26 $generated@@27 $generated@@250 $generated@@29))
 :pattern ( ($generated@@62 $generated@@250) ($generated@@26 $generated@@27 $generated@@250 $generated@@29))
 :pattern ( ($generated@@60 $generated@@250) ($generated@@26 $generated@@27 $generated@@250 $generated@@29))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@251 $generated@@33) (or (or ($generated@@65 $generated@@251) ($generated@@67 $generated@@251)) ($generated@@69 $generated@@251)))
 :pattern ( ($generated@@69 $generated@@251) ($generated@@26 $generated@@27 $generated@@251 $generated@@33))
 :pattern ( ($generated@@67 $generated@@251) ($generated@@26 $generated@@27 $generated@@251 $generated@@33))
 :pattern ( ($generated@@65 $generated@@251) ($generated@@26 $generated@@27 $generated@@251 $generated@@33))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and ($generated@@253 $generated@@255) ($generated@@26 $generated@@27 $generated@@254 $generated@@29)) ($generated@@252 $generated@@27 $generated@@254 $generated@@29 $generated@@255))
 :pattern ( ($generated@@252 $generated@@27 $generated@@254 $generated@@29 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and ($generated@@253 $generated@@257) ($generated@@26 $generated@@27 $generated@@256 $generated@@33)) ($generated@@252 $generated@@27 $generated@@256 $generated@@33 $generated@@257))
 :pattern ( ($generated@@252 $generated@@27 $generated@@256 $generated@@33 $generated@@257))
)))
(assert (= ($generated@@258 $generated@@29) $generated@@0))
(assert (= ($generated@@259 $generated@@29) $generated@@8))
(assert (= ($generated@@258 $generated@@33) $generated@@1))
(assert (= ($generated@@259 $generated@@33) $generated@@9))
(assert (= $generated@@40 ($generated@@57 $generated@@27 $generated@@40)))
(assert (= $generated@@41 ($generated@@57 $generated@@27 $generated@@41)))
(assert (= $generated@@42 ($generated@@57 $generated@@27 $generated@@42)))
(assert  (=> (<= 3 $generated@@43) (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (or ($generated@@89 $generated@@261 $generated@@262) (and (< 3 $generated@@43) (and (and ($generated@@26 $generated@@27 $generated@@261 $generated@@33) ($generated@@26 $generated@@27 $generated@@262 $generated@@29)) ($generated@@90 ($generated@@88 $generated@@91) $generated@@261)))) (and (=> (not ($generated@@65 $generated@@261)) (and (=> ($generated@@67 $generated@@261) (let (($generated@@263 ($generated@@92 $generated@@261)))
($generated@@89 $generated@@263 $generated@@262))) (=> (not ($generated@@67 $generated@@261)) (let (($generated@@264 ($generated@@93 $generated@@261)))
($generated@@89 $generated@@264 $generated@@262))))) (= ($generated@@87 ($generated@@88 $generated@@260) $generated@@261 $generated@@262) (ite ($generated@@65 $generated@@261) $generated@@262 (ite ($generated@@67 $generated@@261) (let (($generated@@265 ($generated@@94 $generated@@261)))
(let (($generated@@266 ($generated@@92 $generated@@261)))
($generated@@28 ($generated@@87 $generated@@260 $generated@@266 $generated@@262) $generated@@265))) (let (($generated@@267 ($generated@@93 $generated@@261)))
(let (($generated@@268 ($generated@@95 $generated@@261)))
($generated@@28 $generated@@268 ($generated@@87 $generated@@260 $generated@@267 $generated@@262)))))))))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@260) $generated@@261 $generated@@262))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and ($generated@@253 $generated@@270) (and ($generated@@46 $generated@@269) ($generated@@252 $generated@@27 $generated@@269 $generated@@29 $generated@@270))) ($generated@@252 $generated@@27 ($generated@@47 $generated@@269) $generated@@29 $generated@@270))
 :pattern ( ($generated@@252 $generated@@27 ($generated@@47 $generated@@269) $generated@@29 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and ($generated@@253 $generated@@272) (and ($generated@@46 $generated@@271) ($generated@@252 $generated@@27 $generated@@271 $generated@@29 $generated@@272))) ($generated@@252 $generated@@27 ($generated@@48 $generated@@271) $generated@@29 $generated@@272))
 :pattern ( ($generated@@252 $generated@@27 ($generated@@48 $generated@@271) $generated@@29 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and ($generated@@253 $generated@@274) (and ($generated@@67 $generated@@273) ($generated@@252 $generated@@27 $generated@@273 $generated@@33 $generated@@274))) ($generated@@252 $generated@@27 ($generated@@92 $generated@@273) $generated@@33 $generated@@274))
 :pattern ( ($generated@@252 $generated@@27 ($generated@@92 $generated@@273) $generated@@33 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and ($generated@@253 $generated@@276) (and ($generated@@67 $generated@@275) ($generated@@252 $generated@@27 $generated@@275 $generated@@33 $generated@@276))) ($generated@@252 $generated@@27 ($generated@@94 $generated@@275) $generated@@29 $generated@@276))
 :pattern ( ($generated@@252 $generated@@27 ($generated@@94 $generated@@275) $generated@@29 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and ($generated@@253 $generated@@278) (and ($generated@@69 $generated@@277) ($generated@@252 $generated@@27 $generated@@277 $generated@@33 $generated@@278))) ($generated@@252 $generated@@27 ($generated@@95 $generated@@277) $generated@@29 $generated@@278))
 :pattern ( ($generated@@252 $generated@@27 ($generated@@95 $generated@@277) $generated@@29 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and ($generated@@253 $generated@@280) (and ($generated@@69 $generated@@279) ($generated@@252 $generated@@27 $generated@@279 $generated@@33 $generated@@280))) ($generated@@252 $generated@@27 ($generated@@93 $generated@@279) $generated@@33 $generated@@280))
 :pattern ( ($generated@@252 $generated@@27 ($generated@@93 $generated@@279) $generated@@33 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (= ($generated@@28 ($generated@@57 $generated@@27 $generated@@281) ($generated@@57 $generated@@27 $generated@@282)) ($generated@@57 $generated@@27 ($generated@@28 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@28 ($generated@@57 $generated@@27 $generated@@281) ($generated@@57 $generated@@27 $generated@@282)))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (= ($generated@@32 ($generated@@57 $generated@@27 $generated@@283) ($generated@@57 $generated@@27 $generated@@284)) ($generated@@57 $generated@@27 ($generated@@32 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@32 ($generated@@57 $generated@@27 $generated@@283) ($generated@@57 $generated@@27 $generated@@284)))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= ($generated@@36 ($generated@@57 $generated@@27 $generated@@285) ($generated@@57 $generated@@27 $generated@@286)) ($generated@@57 $generated@@27 ($generated@@36 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@36 ($generated@@57 $generated@@27 $generated@@285) ($generated@@57 $generated@@27 $generated@@286)))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (= ($generated@@72 $generated@@288 ($generated@@57 $generated@@288 $generated@@287)) ($generated@@57 $generated@@196 ($generated@@72 $generated@@288 $generated@@287)))
 :pattern ( ($generated@@72 $generated@@288 ($generated@@57 $generated@@288 $generated@@287)))
)))
(assert  (=> (<= 2 $generated@@43) (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (or ($generated@@108 ($generated@@57 $generated@@27 $generated@@290)) (and (< 2 $generated@@43) ($generated@@26 $generated@@27 $generated@@290 $generated@@33))) (and (=> (not ($generated@@15 ($generated@@57 $generated@@11 ($generated@@14 ($generated@@65 ($generated@@57 $generated@@27 $generated@@290)))))) (and (=> ($generated@@15 ($generated@@57 $generated@@11 ($generated@@14 ($generated@@67 ($generated@@57 $generated@@27 $generated@@290))))) (let (($generated@@291 ($generated@@57 $generated@@27 ($generated@@92 ($generated@@57 $generated@@27 $generated@@290)))))
($generated@@108 $generated@@291))) (=> (not ($generated@@15 ($generated@@57 $generated@@11 ($generated@@14 ($generated@@67 ($generated@@57 $generated@@27 $generated@@290)))))) (let (($generated@@292 ($generated@@57 $generated@@27 ($generated@@93 ($generated@@57 $generated@@27 $generated@@290)))))
(let (($generated@@293 ($generated@@57 $generated@@27 ($generated@@95 ($generated@@57 $generated@@27 $generated@@290)))))
 (and ($generated@@45 $generated@@293) (=> ($generated@@44 ($generated@@88 $generated@@91) $generated@@293) ($generated@@108 $generated@@292)))))))) (= ($generated@@90 ($generated@@88 $generated@@289) ($generated@@57 $generated@@27 $generated@@290)) (ite ($generated@@65 ($generated@@57 $generated@@27 $generated@@290)) true (ite ($generated@@67 ($generated@@57 $generated@@27 $generated@@290)) ($generated@@15 (let (($generated@@294 ($generated@@57 $generated@@27 ($generated@@92 ($generated@@57 $generated@@27 $generated@@290)))))
($generated@@57 $generated@@11 ($generated@@14 ($generated@@90 ($generated@@88 $generated@@289) $generated@@294))))) ($generated@@15 (let (($generated@@295 ($generated@@57 $generated@@27 ($generated@@93 ($generated@@57 $generated@@27 $generated@@290)))))
(let (($generated@@296 ($generated@@57 $generated@@27 ($generated@@95 ($generated@@57 $generated@@27 $generated@@290)))))
($generated@@57 $generated@@11 ($generated@@14  (and ($generated@@44 ($generated@@88 $generated@@91) $generated@@296) ($generated@@90 ($generated@@88 $generated@@289) $generated@@295))))))))))))
 :weight 3
 :pattern ( ($generated@@90 ($generated@@88 $generated@@289) ($generated@@57 $generated@@27 $generated@@290)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@297 () T@U)
(declare-fun $generated@@298 () T@U)
(declare-fun $generated@@299 () T@U)
(declare-fun $generated@@300 () T@U)
(declare-fun $generated@@301 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@302  (=> (and (= $generated@@297 ($generated@@194 $generated@@298 $generated@@299 $generated false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and ($generated@@26 $generated@@27 $generated@@303 $generated@@33) ($generated@@26 $generated@@27 $generated@@304 $generated@@29)) (=> (and ($generated@@90 ($generated@@88 ($generated@@88 $generated@@91)) $generated@@303) ($generated@@51 $generated@@300 ($generated@@87 ($generated@@88 ($generated@@88 $generated@@91)) $generated@@303 $generated@@304))) (or (or (and ($generated@@54 $generated@@303 $generated@@42) ($generated@@51 $generated@@300 $generated@@304)) (and ($generated@@46 $generated@@300) (exists (($generated@@305 T@U) ) (!  (and ($generated@@26 $generated@@27 $generated@@305 $generated@@33) (and ($generated@@54 $generated@@303 ($generated@@32 $generated@@305 ($generated@@48 $generated@@300))) ($generated@@51 ($generated@@47 $generated@@300) ($generated@@87 ($generated@@88 ($generated@@88 $generated@@91)) $generated@@305 $generated@@304))))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@91)) $generated@@305 $generated@@304))
 :pattern ( ($generated@@32 $generated@@305 ($generated@@48 $generated@@300)))
)))) (and (and ($generated@@46 $generated@@300) ($generated@@44 ($generated@@88 ($generated@@88 $generated@@91)) ($generated@@47 $generated@@300))) (exists (($generated@@306 T@U) ) (!  (and ($generated@@26 $generated@@27 $generated@@306 $generated@@33) (and ($generated@@54 $generated@@303 ($generated@@36 ($generated@@47 $generated@@300) $generated@@306)) ($generated@@51 ($generated@@48 $generated@@300) ($generated@@87 ($generated@@88 ($generated@@88 $generated@@91)) $generated@@306 $generated@@304))))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@91)) $generated@@306 $generated@@304))
 :pattern ( ($generated@@36 ($generated@@47 $generated@@300) $generated@@306))
))))))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@91)) $generated@@303 $generated@@304))
)))))
(let (($generated@@307  (=> (and ($generated@@253 $generated@@299) ($generated@@301 $generated@@299)) (=> (and (and (and ($generated@@26 $generated@@27 $generated@@300 $generated@@29) ($generated@@252 $generated@@27 $generated@@300 $generated@@29 $generated@@299)) ($generated@@120 $generated@@300)) (and (= 4 $generated@@43) (= (ControlFlow 0 3) 2))) $generated@@302))))
$generated@@307)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
