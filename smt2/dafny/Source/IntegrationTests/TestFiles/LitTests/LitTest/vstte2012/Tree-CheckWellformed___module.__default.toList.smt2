(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@37 (Int) Int)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@U Int) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@81 () Int)
(declare-fun $generated@@82 (T@U Int T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (Int T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@131 (T@U) Int)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@147 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 (T@T T@T) T@T)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@211 (T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@233 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@25) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@26 $generated@@28 $generated@@29) $generated@@27)  (and ($generated@@24 $generated@@25 $generated@@28 $generated@@27) ($generated@@24 $generated@@25 $generated@@29 $generated@@27)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@26 $generated@@28 $generated@@29) $generated@@27))
)))
(assert (= ($generated@@30 $generated@@31) 0))
(assert (= ($generated@@32 $generated@@33) $generated@@4))
(assert ($generated@@24 $generated@@25 $generated@@33 $generated@@27))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@36) (= $generated@@35 $generated@@36))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 Int) ) (! (= ($generated@@37 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@39 $generated@@41 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@41 $generated@@40))
)))
(assert (= ($generated@@7 $generated@@42) 4))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and ($generated@@24 $generated@@42 $generated@@46 ($generated@@44 $generated@@48)) ($generated@@45 $generated@@47 $generated@@48)) ($generated@@24 $generated@@42 ($generated@@43 $generated@@46 $generated@@47) ($generated@@44 $generated@@48)))
 :pattern ( ($generated@@24 $generated@@42 ($generated@@43 $generated@@46 $generated@@47) ($generated@@44 $generated@@48)))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@49 $generated@@50) (= ($generated@@32 $generated@@50) $generated@@4))
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@32 $generated@@52) $generated@@5))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@53 $generated@@55 $generated@@56)  (and (= ($generated@@30 $generated@@55) ($generated@@30 $generated@@56)) (forall (($generated@@57 Int) ) (!  (=> (and (<= 0 $generated@@57) (< $generated@@57 ($generated@@30 $generated@@55))) (= ($generated@@54 $generated@@55 $generated@@57) ($generated@@54 $generated@@56 $generated@@57)))
 :pattern ( ($generated@@54 $generated@@55 $generated@@57))
 :pattern ( ($generated@@54 $generated@@56 $generated@@57))
))))
 :pattern ( ($generated@@53 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 ($generated@@58 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@58 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@51 $generated@@62) (exists (($generated@@63 T@U) ($generated@@64 T@U) ) (= $generated@@62 ($generated@@26 $generated@@63 $generated@@64))))
 :pattern ( ($generated@@51 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@49 $generated@@65) (= $generated@@65 $generated@@33))
 :pattern ( ($generated@@49 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@30 ($generated@@43 $generated@@66 $generated@@67)) (+ 1 ($generated@@30 $generated@@66)))
 :pattern ( ($generated@@43 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@68 ($generated@@59 $generated@@73 $generated@@70) $generated@@71 $generated@@72) ($generated@@69 $generated@@73 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@68 ($generated@@59 $generated@@73 $generated@@70) $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@30 ($generated@@74 $generated@@75 $generated@@76)) (+ ($generated@@30 $generated@@75) ($generated@@30 $generated@@76)))
 :pattern ( ($generated@@30 ($generated@@74 $generated@@75 $generated@@76)))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@45 $generated@@77 $generated@@27) (and (= ($generated@@59 $generated@@25 ($generated@@58 $generated@@25 $generated@@77)) $generated@@77) ($generated@@24 $generated@@25 ($generated@@58 $generated@@25 $generated@@77) $generated@@27)))
 :pattern ( ($generated@@45 $generated@@77 $generated@@27))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 Int) ($generated@@80 T@U) ) (!  (and (=> (= $generated@@79 ($generated@@30 $generated@@78)) (= ($generated@@54 ($generated@@43 $generated@@78 $generated@@80) $generated@@79) $generated@@80)) (=> (or (not (= $generated@@79 ($generated@@30 $generated@@78))) (not true)) (= ($generated@@54 ($generated@@43 $generated@@78 $generated@@80) $generated@@79) ($generated@@54 $generated@@78 $generated@@79))))
 :pattern ( ($generated@@54 ($generated@@43 $generated@@78 $generated@@80) $generated@@79))
)))
(assert  (=> (<= 1 $generated@@81) (forall (($generated@@87 T@U) ($generated@@88 Int) ($generated@@89 T@U) ) (!  (=> (or ($generated@@84 $generated@@88 ($generated@@39 $generated@@25 $generated@@89)) (and (< 1 $generated@@81) ($generated@@24 $generated@@25 $generated@@89 $generated@@27))) (and (=> (not ($generated@@12 ($generated@@39 $generated@@8 ($generated@@11 ($generated@@49 ($generated@@39 $generated@@25 $generated@@89)))))) (let (($generated@@90 ($generated@@39 $generated@@25 ($generated@@85 ($generated@@39 $generated@@25 $generated@@89)))))
(let (($generated@@91 ($generated@@39 $generated@@25 ($generated@@86 ($generated@@39 $generated@@25 $generated@@89)))))
 (and ($generated@@84 (+ $generated@@88 1) $generated@@91) ($generated@@84 (+ $generated@@88 1) $generated@@90))))) (= ($generated@@82 ($generated@@83 $generated@@87) $generated@@88 ($generated@@39 $generated@@25 $generated@@89)) (ite ($generated@@49 ($generated@@39 $generated@@25 $generated@@89)) ($generated@@43 $generated@@31 ($generated@@59 $generated@@9 ($generated@@13 $generated@@88))) (let (($generated@@92 ($generated@@39 $generated@@25 ($generated@@85 ($generated@@39 $generated@@25 $generated@@89)))))
(let (($generated@@93 ($generated@@39 $generated@@25 ($generated@@86 ($generated@@39 $generated@@25 $generated@@89)))))
($generated@@74 ($generated@@82 ($generated@@83 $generated@@87) (+ $generated@@88 1) $generated@@93) ($generated@@82 ($generated@@83 $generated@@87) (+ $generated@@88 1) $generated@@92))))))))
 :weight 3
 :pattern ( ($generated@@82 ($generated@@83 $generated@@87) $generated@@88 ($generated@@39 $generated@@25 $generated@@89)))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 Int) ($generated@@96 T@U) ) (! (= ($generated@@82 ($generated@@83 $generated@@94) $generated@@95 $generated@@96) ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@53 $generated@@97 $generated@@98) (= $generated@@97 $generated@@98))
 :pattern ( ($generated@@53 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@99 $generated@@27) (or ($generated@@49 $generated@@99) ($generated@@51 $generated@@99)))
 :pattern ( ($generated@@51 $generated@@99) ($generated@@24 $generated@@25 $generated@@99 $generated@@27))
 :pattern ( ($generated@@49 $generated@@99) ($generated@@24 $generated@@25 $generated@@99 $generated@@27))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@45 $generated@@100 $generated) (and (= ($generated@@59 $generated@@9 ($generated@@58 $generated@@9 $generated@@100)) $generated@@100) ($generated@@24 $generated@@9 ($generated@@58 $generated@@9 $generated@@100) $generated)))
 :pattern ( ($generated@@45 $generated@@100 $generated))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (and ($generated@@51 $generated@@101) ($generated@@51 $generated@@102)) (= ($generated@@34 $generated@@101 $generated@@102)  (and ($generated@@34 ($generated@@86 $generated@@101) ($generated@@86 $generated@@102)) ($generated@@34 ($generated@@85 $generated@@101) ($generated@@85 $generated@@102)))))
 :pattern ( ($generated@@34 $generated@@101 $generated@@102) ($generated@@51 $generated@@101))
 :pattern ( ($generated@@34 $generated@@101 $generated@@102) ($generated@@51 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@45 ($generated@@59 $generated@@105 $generated@@103) $generated@@104) ($generated@@24 $generated@@105 $generated@@103 $generated@@104))
 :pattern ( ($generated@@45 ($generated@@59 $generated@@105 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (<= 0 ($generated@@30 $generated@@106))
 :pattern ( ($generated@@30 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and ($generated@@49 $generated@@107) ($generated@@49 $generated@@108)) ($generated@@34 $generated@@107 $generated@@108))
 :pattern ( ($generated@@34 $generated@@107 $generated@@108) ($generated@@49 $generated@@107))
 :pattern ( ($generated@@34 $generated@@107 $generated@@108) ($generated@@49 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@32 ($generated@@26 $generated@@109 $generated@@110)) $generated@@5)
 :pattern ( ($generated@@26 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@86 ($generated@@26 $generated@@111 $generated@@112)) $generated@@111)
 :pattern ( ($generated@@26 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@85 ($generated@@26 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@26 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@69 $generated@@42 $generated@@115 ($generated@@44 $generated@@116) $generated@@117) (forall (($generated@@118 Int) ) (!  (=> (and (<= 0 $generated@@118) (< $generated@@118 ($generated@@30 $generated@@115))) ($generated@@68 ($generated@@54 $generated@@115 $generated@@118) $generated@@116 $generated@@117))
 :pattern ( ($generated@@54 $generated@@115 $generated@@118))
)))
 :pattern ( ($generated@@69 $generated@@42 $generated@@115 ($generated@@44 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@44 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@44 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@23 ($generated@@44 $generated@@121)) $generated@@1)
 :pattern ( ($generated@@44 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@58 $generated@@123 ($generated@@59 $generated@@123 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@59 $generated@@123 $generated@@122))
)))
(assert  (=> (<= 1 $generated@@81) (forall (($generated@@124 T@U) ($generated@@125 Int) ($generated@@126 T@U) ) (!  (=> (or ($generated@@84 $generated@@125 $generated@@126) (and (< 1 $generated@@81) ($generated@@24 $generated@@25 $generated@@126 $generated@@27))) (and (=> (not ($generated@@49 $generated@@126)) (let (($generated@@127 ($generated@@85 $generated@@126)))
(let (($generated@@128 ($generated@@86 $generated@@126)))
 (and ($generated@@84 (+ $generated@@125 1) $generated@@128) ($generated@@84 (+ $generated@@125 1) $generated@@127))))) (= ($generated@@82 ($generated@@83 $generated@@124) $generated@@125 $generated@@126) (ite ($generated@@49 $generated@@126) ($generated@@43 $generated@@31 ($generated@@59 $generated@@9 ($generated@@13 $generated@@125))) (let (($generated@@129 ($generated@@85 $generated@@126)))
(let (($generated@@130 ($generated@@86 $generated@@126)))
($generated@@74 ($generated@@82 $generated@@124 (+ $generated@@125 1) $generated@@130) ($generated@@82 $generated@@124 (+ $generated@@125 1) $generated@@129))))))))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@124) $generated@@125 $generated@@126))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (< ($generated@@131 $generated@@132) ($generated@@131 ($generated@@26 $generated@@132 $generated@@133)))
 :pattern ( ($generated@@26 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (< ($generated@@131 $generated@@135) ($generated@@131 ($generated@@26 $generated@@134 $generated@@135)))
 :pattern ( ($generated@@26 $generated@@134 $generated@@135))
)))
(assert  (=> (<= 1 $generated@@81) (forall (($generated@@136 T@U) ($generated@@137 Int) ($generated@@138 T@U) ) (!  (=> (or ($generated@@84 ($generated@@37 $generated@@137) ($generated@@39 $generated@@25 $generated@@138)) (and (< 1 $generated@@81) ($generated@@24 $generated@@25 $generated@@138 $generated@@27))) (and (=> (not ($generated@@12 ($generated@@39 $generated@@8 ($generated@@11 ($generated@@49 ($generated@@39 $generated@@25 $generated@@138)))))) (let (($generated@@139 ($generated@@39 $generated@@25 ($generated@@85 ($generated@@39 $generated@@25 $generated@@138)))))
(let (($generated@@140 ($generated@@39 $generated@@25 ($generated@@86 ($generated@@39 $generated@@25 $generated@@138)))))
 (and ($generated@@84 ($generated@@37 (+ $generated@@137 1)) $generated@@140) ($generated@@84 ($generated@@37 (+ $generated@@137 1)) $generated@@139))))) (= ($generated@@82 ($generated@@83 $generated@@136) ($generated@@37 $generated@@137) ($generated@@39 $generated@@25 $generated@@138)) (ite ($generated@@49 ($generated@@39 $generated@@25 $generated@@138)) ($generated@@43 $generated@@31 ($generated@@59 $generated@@9 ($generated@@13 ($generated@@37 $generated@@137)))) (let (($generated@@141 ($generated@@39 $generated@@25 ($generated@@85 ($generated@@39 $generated@@25 $generated@@138)))))
(let (($generated@@142 ($generated@@39 $generated@@25 ($generated@@86 ($generated@@39 $generated@@25 $generated@@138)))))
($generated@@74 ($generated@@82 ($generated@@83 $generated@@136) ($generated@@37 (+ $generated@@137 1)) $generated@@142) ($generated@@82 ($generated@@83 $generated@@136) ($generated@@37 (+ $generated@@137 1)) $generated@@141))))))))
 :weight 3
 :pattern ( ($generated@@82 ($generated@@83 $generated@@136) ($generated@@37 $generated@@137) ($generated@@39 $generated@@25 $generated@@138)))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@143 $generated@@154 $generated@@155 $generated@@156 ($generated@@150 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@159 $generated@@160) $generated@@157)
 :weight 0
)) (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@143 $generated@@161 $generated@@162 $generated@@163 ($generated@@150 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@143 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (or (= $generated@@176 $generated@@178) (= ($generated@@143 $generated@@170 $generated@@171 $generated@@172 ($generated@@150 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@177 $generated@@178) ($generated@@143 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@177 $generated@@178)))
 :weight 0
)))) (= ($generated@@7 $generated@@144) 5)) (= ($generated@@7 $generated@@145) 6)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@147 $generated@@179 $generated@@180 ($generated@@151 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@181) $generated@@183) $generated@@181)
 :weight 0
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@188 $generated@@189) (= ($generated@@147 $generated@@184 $generated@@185 ($generated@@151 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@186) $generated@@189) ($generated@@147 $generated@@184 $generated@@185 $generated@@187 $generated@@189)))
 :weight 0
))) (= ($generated@@7 $generated@@148) 7)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (= ($generated@@7 ($generated@@149 $generated@@190 $generated@@191)) 8))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@152 ($generated@@149 $generated@@192 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@149 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@153 ($generated@@149 $generated@@194 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@149 $generated@@194 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 Bool) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@12 ($generated@@143 $generated@@144 $generated@@145 $generated@@8 ($generated@@146 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))  (=> (and (or (not (= $generated@@200 $generated@@196)) (not true)) ($generated@@12 ($generated@@58 $generated@@8 ($generated@@147 $generated@@145 $generated@@148 ($generated@@147 $generated@@144 ($generated@@149 $generated@@145 $generated@@148) $generated@@197 $generated@@200) $generated@@198)))) $generated@@199))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145 $generated@@8 ($generated@@146 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))
)))
(assert  (=> (<= 1 $generated@@81) (forall (($generated@@202 T@U) ($generated@@203 Int) ($generated@@204 T@U) ) (!  (=> (or ($generated@@84 $generated@@203 $generated@@204) (and (< 1 $generated@@81) ($generated@@24 $generated@@25 $generated@@204 $generated@@27))) (and (and (and (not ($generated@@53 ($generated@@82 $generated@@202 $generated@@203 $generated@@204) $generated@@31)) (>= ($generated@@14 ($generated@@58 $generated@@9 ($generated@@54 ($generated@@82 $generated@@202 $generated@@203 $generated@@204) ($generated@@37 0)))) $generated@@203)) (= (= ($generated@@14 ($generated@@58 $generated@@9 ($generated@@54 ($generated@@82 $generated@@202 $generated@@203 $generated@@204) ($generated@@37 0)))) $generated@@203) ($generated@@34 $generated@@204 $generated@@33))) ($generated@@24 $generated@@42 ($generated@@82 $generated@@202 $generated@@203 $generated@@204) ($generated@@44 $generated))))
 :pattern ( ($generated@@82 $generated@@202 $generated@@203 $generated@@204))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (and (= ($generated@@205 ($generated@@43 $generated@@207 $generated@@208)) $generated@@207) (= ($generated@@206 ($generated@@43 $generated@@207 $generated@@208)) $generated@@208))
 :pattern ( ($generated@@43 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@45 $generated@@209 ($generated@@44 $generated@@210)) (and (= ($generated@@59 $generated@@42 ($generated@@58 $generated@@42 $generated@@209)) $generated@@209) ($generated@@24 $generated@@42 ($generated@@58 $generated@@42 $generated@@209) ($generated@@44 $generated@@210))))
 :pattern ( ($generated@@45 $generated@@209 ($generated@@44 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@211 $generated@@213) ($generated@@24 $generated@@25 $generated@@212 $generated@@27)) ($generated@@69 $generated@@25 $generated@@212 $generated@@27 $generated@@213))
 :pattern ( ($generated@@69 $generated@@25 $generated@@212 $generated@@27 $generated@@213))
)))
(assert (= ($generated@@23 $generated@@27) $generated@@3))
(assert (= ($generated@@214 $generated@@27) $generated@@6))
(assert (= $generated@@33 ($generated@@39 $generated@@25 $generated@@33)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Int) ) (!  (and (=> (< $generated@@217 ($generated@@30 $generated@@215)) (= ($generated@@54 ($generated@@74 $generated@@215 $generated@@216) $generated@@217) ($generated@@54 $generated@@215 $generated@@217))) (=> (<= ($generated@@30 $generated@@215) $generated@@217) (= ($generated@@54 ($generated@@74 $generated@@215 $generated@@216) $generated@@217) ($generated@@54 $generated@@216 (- $generated@@217 ($generated@@30 $generated@@215))))))
 :pattern ( ($generated@@54 ($generated@@74 $generated@@215 $generated@@216) $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and ($generated@@211 $generated@@219) (and ($generated@@51 $generated@@218) ($generated@@69 $generated@@25 $generated@@218 $generated@@27 $generated@@219))) ($generated@@69 $generated@@25 ($generated@@86 $generated@@218) $generated@@27 $generated@@219))
 :pattern ( ($generated@@69 $generated@@25 ($generated@@86 $generated@@218) $generated@@27 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and ($generated@@211 $generated@@221) (and ($generated@@51 $generated@@220) ($generated@@69 $generated@@25 $generated@@220 $generated@@27 $generated@@221))) ($generated@@69 $generated@@25 ($generated@@85 $generated@@220) $generated@@27 $generated@@221))
 :pattern ( ($generated@@69 $generated@@25 ($generated@@85 $generated@@220) $generated@@27 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= ($generated@@26 ($generated@@39 $generated@@25 $generated@@222) ($generated@@39 $generated@@25 $generated@@223)) ($generated@@39 $generated@@25 ($generated@@26 $generated@@222 $generated@@223)))
 :pattern ( ($generated@@26 ($generated@@39 $generated@@25 $generated@@222) ($generated@@39 $generated@@25 $generated@@223)))
)))
(assert (forall (($generated@@224 Int) ) (! (= ($generated@@59 $generated@@9 ($generated@@13 ($generated@@37 $generated@@224))) ($generated@@39 $generated@@148 ($generated@@59 $generated@@9 ($generated@@13 $generated@@224))))
 :pattern ( ($generated@@59 $generated@@9 ($generated@@13 ($generated@@37 $generated@@224))))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@T) ) (! (= ($generated@@59 $generated@@226 ($generated@@39 $generated@@226 $generated@@225)) ($generated@@39 $generated@@148 ($generated@@59 $generated@@226 $generated@@225)))
 :pattern ( ($generated@@59 $generated@@226 ($generated@@39 $generated@@226 $generated@@225)))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= ($generated@@30 $generated@@227) 0) (= $generated@@227 $generated@@31))
 :pattern ( ($generated@@30 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! ($generated@@69 $generated@@9 $generated@@229 $generated $generated@@228)
 :pattern ( ($generated@@69 $generated@@9 $generated@@229 $generated $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= ($generated@@24 $generated@@42 $generated@@230 ($generated@@44 $generated@@231)) (forall (($generated@@232 Int) ) (!  (=> (and (<= 0 $generated@@232) (< $generated@@232 ($generated@@30 $generated@@230))) ($generated@@45 ($generated@@54 $generated@@230 $generated@@232) $generated@@231))
 :pattern ( ($generated@@54 $generated@@230 $generated@@232))
)))
 :pattern ( ($generated@@24 $generated@@42 $generated@@230 ($generated@@44 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 Int) ) (!  (=> (and (<= 0 $generated@@235) (< $generated@@235 ($generated@@30 $generated@@234))) (< ($generated@@131 ($generated@@58 $generated@@25 ($generated@@54 $generated@@234 $generated@@235))) ($generated@@233 $generated@@234)))
 :pattern ( ($generated@@131 ($generated@@58 $generated@@25 ($generated@@54 $generated@@234 $generated@@235))))
)))
(assert (forall (($generated@@236 T@U) ) (! ($generated@@24 $generated@@9 $generated@@236 $generated)
 :pattern ( ($generated@@24 $generated@@9 $generated@@236 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () Int)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@252  (and (=> (= (ControlFlow 0 9) (- 0 11)) (not ($generated@@53 ($generated@@82 ($generated@@83 ($generated@@83 $generated@@237)) $generated@@238 $generated@@239) $generated@@31))) (=> (not ($generated@@53 ($generated@@82 ($generated@@83 ($generated@@83 $generated@@237)) $generated@@238 $generated@@239) $generated@@31)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (>= ($generated@@14 ($generated@@58 $generated@@9 ($generated@@54 ($generated@@82 ($generated@@83 ($generated@@83 $generated@@237)) $generated@@238 $generated@@239) ($generated@@37 0)))) $generated@@238)) (=> (>= ($generated@@14 ($generated@@58 $generated@@9 ($generated@@54 ($generated@@82 ($generated@@83 ($generated@@83 $generated@@237)) $generated@@238 $generated@@239) ($generated@@37 0)))) $generated@@238) (=> (= (ControlFlow 0 9) (- 0 8)) (= (= ($generated@@14 ($generated@@58 $generated@@9 ($generated@@54 ($generated@@82 ($generated@@83 ($generated@@83 $generated@@237)) $generated@@238 $generated@@239) ($generated@@37 0)))) $generated@@238) ($generated@@34 $generated@@239 $generated@@33)))))))))
(let (($generated@@253  (=> (and (and (= $generated@@239 ($generated@@26 $generated@@240 $generated@@241)) ($generated@@24 $generated@@25 $generated@@240 $generated@@27)) (and ($generated@@24 $generated@@25 $generated@@241 $generated@@27) (= $generated@@242 $generated@@241))) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@242 $generated@@27) (= $generated@@243 $generated@@242)) (and (= $generated@@244 $generated@@240) ($generated@@24 $generated@@25 $generated@@244 $generated@@27))) (and (and (= $generated@@245 $generated@@244) (= $generated@@246 (+ $generated@@238 1))) (and ($generated@@69 $generated@@9 ($generated@@13 $generated@@246) $generated $generated@@247) ($generated@@69 $generated@@25 $generated@@245 $generated@@27 $generated@@247)))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (< ($generated@@131 $generated@@245) ($generated@@131 $generated@@239))) (=> (< ($generated@@131 $generated@@245) ($generated@@131 $generated@@239)) (=> (and (and ($generated@@84 (+ $generated@@238 1) $generated@@245) (= $generated@@248 (+ $generated@@238 1))) (and ($generated@@69 $generated@@9 ($generated@@13 $generated@@248) $generated $generated@@247) ($generated@@69 $generated@@25 $generated@@243 $generated@@27 $generated@@247))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (< ($generated@@131 $generated@@243) ($generated@@131 $generated@@239))) (=> (< ($generated@@131 $generated@@243) ($generated@@131 $generated@@239)) (=> (and ($generated@@84 (+ $generated@@238 1) $generated@@243) (= ($generated@@82 ($generated@@83 $generated@@237) $generated@@238 $generated@@239) ($generated@@74 ($generated@@82 ($generated@@83 $generated@@237) (+ $generated@@238 1) $generated@@245) ($generated@@82 ($generated@@83 $generated@@237) (+ $generated@@238 1) $generated@@243)))) (=> (and (and ($generated@@84 (+ $generated@@238 1) $generated@@245) ($generated@@84 (+ $generated@@238 1) $generated@@243)) (and ($generated@@24 $generated@@42 ($generated@@82 ($generated@@83 $generated@@237) $generated@@238 $generated@@239) ($generated@@44 $generated)) (= (ControlFlow 0 13) 9))) $generated@@252)))))))))))
(let (($generated@@254  (=> (and (and (= $generated@@239 $generated@@33) (= ($generated@@82 ($generated@@83 $generated@@237) $generated@@238 $generated@@239) ($generated@@43 $generated@@31 ($generated@@59 $generated@@9 ($generated@@13 $generated@@238))))) (and ($generated@@24 $generated@@42 ($generated@@82 ($generated@@83 $generated@@237) $generated@@238 $generated@@239) ($generated@@44 $generated)) (= (ControlFlow 0 12) 9))) $generated@@252)))
(let (($generated@@255 true))
(let (($generated@@256  (=> (or (not (= $generated@@239 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 16) 13) $generated@@253) (=> (= (ControlFlow 0 16) 7) $generated@@255)))))
(let (($generated@@257  (=> ($generated@@24 $generated@@42 ($generated@@82 ($generated@@83 $generated@@237) $generated@@238 $generated@@239) ($generated@@44 $generated)) (=> (and ($generated@@69 $generated@@9 ($generated@@13 $generated@@238) $generated $generated@@247) ($generated@@69 $generated@@25 $generated@@239 $generated@@27 $generated@@247)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (and (= $generated@@238 $generated@@238) ($generated@@34 $generated@@239 $generated@@239)) (< ($generated@@131 $generated@@239) ($generated@@131 $generated@@239)))) (=> (or (and (= $generated@@238 $generated@@238) ($generated@@34 $generated@@239 $generated@@239)) (< ($generated@@131 $generated@@239) ($generated@@131 $generated@@239))) (=> (and (and (or (and (= $generated@@238 $generated@@238) ($generated@@34 $generated@@239 $generated@@239)) ($generated@@84 $generated@@238 $generated@@239)) (not ($generated@@53 ($generated@@82 ($generated@@83 $generated@@237) $generated@@238 $generated@@239) $generated@@31))) (and ($generated@@69 $generated@@9 ($generated@@13 $generated@@238) $generated $generated@@247) ($generated@@69 $generated@@25 $generated@@239 $generated@@27 $generated@@247))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (and (= $generated@@238 $generated@@238) ($generated@@34 $generated@@239 $generated@@239)) (< ($generated@@131 $generated@@239) ($generated@@131 $generated@@239)))) (=> (or (and (= $generated@@238 $generated@@238) ($generated@@34 $generated@@239 $generated@@239)) (< ($generated@@131 $generated@@239) ($generated@@131 $generated@@239))) (=> (or (and (= $generated@@238 $generated@@238) ($generated@@34 $generated@@239 $generated@@239)) ($generated@@84 $generated@@238 $generated@@239)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 ($generated@@37 0)) (< ($generated@@37 0) ($generated@@30 ($generated@@82 ($generated@@83 $generated@@237) $generated@@238 $generated@@239))))) (=> (and (<= 0 ($generated@@37 0)) (< ($generated@@37 0) ($generated@@30 ($generated@@82 ($generated@@83 $generated@@237) $generated@@238 $generated@@239)))) (=> (>= ($generated@@14 ($generated@@58 $generated@@9 ($generated@@54 ($generated@@82 ($generated@@83 $generated@@237) $generated@@238 $generated@@239) ($generated@@37 0)))) $generated@@238) (=> (and ($generated@@69 $generated@@9 ($generated@@13 $generated@@238) $generated $generated@@247) ($generated@@69 $generated@@25 $generated@@239 $generated@@27 $generated@@247)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (and (= $generated@@238 $generated@@238) ($generated@@34 $generated@@239 $generated@@239)) (< ($generated@@131 $generated@@239) ($generated@@131 $generated@@239)))) (=> (or (and (= $generated@@238 $generated@@238) ($generated@@34 $generated@@239 $generated@@239)) (< ($generated@@131 $generated@@239) ($generated@@131 $generated@@239))) (=> (and (or (and (= $generated@@238 $generated@@238) ($generated@@34 $generated@@239 $generated@@239)) ($generated@@84 $generated@@238 $generated@@239)) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 ($generated@@37 0)) (< ($generated@@37 0) ($generated@@30 ($generated@@82 ($generated@@83 $generated@@237) $generated@@238 $generated@@239)))))))))))))))))))))
(let (($generated@@258  (=> (= $generated@@249 ($generated@@146 $generated@@250 $generated@@247 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 17) 2) $generated@@257) (=> (= (ControlFlow 0 17) 12) $generated@@254)) (=> (= (ControlFlow 0 17) 16) $generated@@256)))))
(let (($generated@@259  (=> (and (and (and ($generated@@211 $generated@@247) ($generated@@251 $generated@@247)) ($generated@@24 $generated@@25 $generated@@239 $generated@@27)) (and (= 1 $generated@@81) (= (ControlFlow 0 18) 17))) $generated@@258)))
$generated@@259)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
