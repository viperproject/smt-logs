(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 (T@U T@U) Int)
(declare-fun $generated@@67 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@72 (T@U Int) T@U)
(declare-fun $generated@@73 (Int) Bool)
(declare-fun $generated@@74 (Int) Int)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@103 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@T T@U) T@U)
(declare-fun $generated@@122 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Int)
(declare-fun $generated@@193 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@194 () T@T)
(declare-fun $generated@@195 () T@T)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@198 () T@T)
(declare-fun $generated@@199 (T@T T@T) T@T)
(declare-fun $generated@@200 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@201 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@252 (Int Int) Int)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@27) 3))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@43 T@U) ) (!  (=> (or ($generated@@25 $generated@@43) (and (< 2 $generated@@23) ($generated@@26 $generated@@27 $generated@@43 $generated@@28))) (and (=> (not ($generated@@29 $generated@@43)) (=> (not ($generated@@30 $generated@@43)) (let (($generated@@44 ($generated@@31 $generated@@43)))
(let (($generated@@45 ($generated@@32 $generated@@43)))
 (=> (not ($generated@@29 $generated@@45)) (=> (not ($generated@@30 $generated@@45)) (let (($generated@@46 ($generated@@31 $generated@@45)))
(let (($generated@@47 ($generated@@32 $generated@@45)))
 (and (and ($generated@@33 $generated@@47) (=> ($generated@@34 $generated@@47 $generated@@35) (and ($generated@@36 $generated@@46) (=> ($generated@@37 ($generated@@38 $generated@@39) $generated@@46) ($generated@@36 $generated@@44))))) (=> (not (and (and ($generated@@34 $generated@@47 $generated@@35) ($generated@@37 ($generated@@38 $generated@@39) $generated@@46)) ($generated@@37 ($generated@@38 $generated@@39) $generated@@44))) (=> ($generated@@40 $generated@@47) (and ($generated@@33 ($generated@@32 $generated@@47)) (=> ($generated@@34 ($generated@@32 $generated@@47) $generated@@41) (and ($generated@@36 ($generated@@31 $generated@@47)) (=> ($generated@@37 ($generated@@38 $generated@@39) ($generated@@31 $generated@@47)) (and ($generated@@36 $generated@@46) (=> ($generated@@37 ($generated@@38 $generated@@39) $generated@@46) ($generated@@36 $generated@@44)))))))))))))))))) (= ($generated@@24 $generated@@43) (ite ($generated@@29 $generated@@43) $generated@@43 (ite ($generated@@30 $generated@@43) $generated@@43 (let (($generated@@48 ($generated@@31 $generated@@43)))
(let (($generated@@49 ($generated@@32 $generated@@43)))
(ite ($generated@@29 $generated@@49) $generated@@43 (ite ($generated@@30 $generated@@49) $generated@@43 (let (($generated@@50 ($generated@@31 $generated@@49)))
(let (($generated@@51 ($generated@@32 $generated@@49)))
(ite  (and (and ($generated@@34 $generated@@51 $generated@@35) ($generated@@37 ($generated@@38 $generated@@39) $generated@@50)) ($generated@@37 ($generated@@38 $generated@@39) $generated@@48)) $generated@@50 (ite  (and (and (and (and ($generated@@40 $generated@@51) ($generated@@34 ($generated@@32 $generated@@51) $generated@@41)) ($generated@@37 ($generated@@38 $generated@@39) ($generated@@31 $generated@@51))) ($generated@@37 ($generated@@38 $generated@@39) $generated@@50)) ($generated@@37 ($generated@@38 $generated@@39) $generated@@48)) ($generated@@42 ($generated@@42 ($generated@@31 $generated@@51) $generated@@48) ($generated@@42 $generated@@50 $generated@@48)) $generated@@43)))))))))))))
 :pattern ( ($generated@@24 $generated@@43))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (or ($generated@@53 $generated@@55) (and (< 1 $generated@@23) ($generated@@26 $generated@@27 $generated@@55 $generated@@28))) (and (=> (not ($generated@@29 $generated@@55)) (=> (not ($generated@@30 $generated@@55)) (let (($generated@@56 ($generated@@31 $generated@@55)))
(let (($generated@@57 ($generated@@32 $generated@@55)))
 (and ($generated@@53 $generated@@57) (=> (not ($generated@@52 $generated@@54 $generated@@57)) ($generated@@53 $generated@@56))))))) (= ($generated@@52 ($generated@@38 $generated@@54) $generated@@55) (ite ($generated@@29 $generated@@55) true (ite ($generated@@30 $generated@@55) false (let (($generated@@58 ($generated@@31 $generated@@55)))
(let (($generated@@59 ($generated@@32 $generated@@55)))
 (or ($generated@@52 $generated@@54 $generated@@59) ($generated@@52 $generated@@54 $generated@@58)))))))))
 :pattern ( ($generated@@52 ($generated@@38 $generated@@54) $generated@@55))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@42 $generated@@60 $generated@@61) $generated@@28)  (and ($generated@@26 $generated@@27 $generated@@60 $generated@@28) ($generated@@26 $generated@@27 $generated@@61 $generated@@28)))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@42 $generated@@60 $generated@@61) $generated@@28))
)))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (or ($generated@@63 $generated@@66) (and (< 3 $generated@@23) ($generated@@26 $generated@@27 $generated@@66 $generated@@28))) (and (=> (not ($generated@@52 ($generated@@38 $generated@@39) $generated@@66)) (and (not ($generated@@52 ($generated@@38 $generated@@39) ($generated@@62 $generated@@65 $generated@@66))) (or ($generated@@34 ($generated@@62 $generated@@65 $generated@@66) $generated@@66) (< ($generated@@64 ($generated@@38 $generated@@39) ($generated@@62 $generated@@65 $generated@@66)) ($generated@@64 ($generated@@38 $generated@@39) $generated@@66))))) ($generated@@26 $generated@@27 ($generated@@62 $generated@@65 $generated@@66) $generated@@28)))
 :pattern ( ($generated@@62 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! ($generated@@67 $generated@@9 $generated@@69 $generated@@68 $generated@@70)
 :pattern ( ($generated@@67 $generated@@9 $generated@@69 $generated@@68 $generated@@70))
)))
(assert (= ($generated@@71 $generated@@41) $generated@@2))
(assert (= ($generated@@71 $generated@@35) $generated@@3))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@76 T@U) ($generated@@77 Int) ) (!  (=> (or ($generated@@73 $generated@@77) (and (< 2 $generated@@23) (<= ($generated@@74 0) $generated@@77))) (and (=> (or (not (= $generated@@77 ($generated@@74 0))) (not true)) ($generated@@73 (- $generated@@77 1))) (= ($generated@@72 ($generated@@38 $generated@@76) $generated@@77) (ite (= $generated@@77 ($generated@@74 0)) $generated@@35 ($generated@@42 ($generated@@72 $generated@@76 (- $generated@@77 1)) ($generated@@75 $generated@@27 $generated@@35))))))
 :pattern ( ($generated@@72 ($generated@@38 $generated@@76) $generated@@77))
))))
(assert ($generated@@26 $generated@@27 $generated@@41 $generated@@28))
(assert ($generated@@26 $generated@@27 $generated@@35 $generated@@28))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@36 $generated@@79) (and (< 1 $generated@@23) ($generated@@26 $generated@@27 $generated@@79 $generated@@28))) (=> (and ($generated@@37 $generated@@78 $generated@@79) ($generated@@40 $generated@@79)) (and ($generated@@37 $generated@@78 ($generated@@32 $generated@@79)) ($generated@@37 $generated@@78 ($generated@@31 $generated@@79)))))
 :pattern ( ($generated@@37 $generated@@78 $generated@@79))
))))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@80 T@U) ) (!  (=> (or ($generated@@25 ($generated@@75 $generated@@27 $generated@@80)) (and (< 2 $generated@@23) ($generated@@26 $generated@@27 $generated@@80 $generated@@28))) (and (=> (not ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 ($generated@@29 ($generated@@75 $generated@@27 $generated@@80)))))) (=> (not ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 ($generated@@30 ($generated@@75 $generated@@27 $generated@@80)))))) (let (($generated@@81 ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@80)))))
(let (($generated@@82 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@80)))))
 (=> (not ($generated@@29 $generated@@82)) (=> (not ($generated@@30 $generated@@82)) (let (($generated@@83 ($generated@@31 $generated@@82)))
(let (($generated@@84 ($generated@@32 $generated@@82)))
 (and (and ($generated@@33 $generated@@84) (=> ($generated@@34 $generated@@84 $generated@@35) (and ($generated@@36 $generated@@83) (=> ($generated@@37 ($generated@@38 $generated@@39) $generated@@83) ($generated@@36 $generated@@81))))) (=> (not (and (and ($generated@@34 $generated@@84 $generated@@35) ($generated@@37 ($generated@@38 $generated@@39) $generated@@83)) ($generated@@37 ($generated@@38 $generated@@39) $generated@@81))) (=> ($generated@@40 $generated@@84) (and ($generated@@33 ($generated@@32 $generated@@84)) (=> ($generated@@34 ($generated@@32 $generated@@84) $generated@@41) (and ($generated@@36 ($generated@@31 $generated@@84)) (=> ($generated@@37 ($generated@@38 $generated@@39) ($generated@@31 $generated@@84)) (and ($generated@@36 $generated@@83) (=> ($generated@@37 ($generated@@38 $generated@@39) $generated@@83) ($generated@@36 $generated@@81)))))))))))))))))) (= ($generated@@24 ($generated@@75 $generated@@27 $generated@@80)) (ite ($generated@@29 ($generated@@75 $generated@@27 $generated@@80)) $generated@@80 (ite ($generated@@30 ($generated@@75 $generated@@27 $generated@@80)) $generated@@80 (let (($generated@@85 ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@80)))))
(let (($generated@@86 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@80)))))
(ite ($generated@@29 $generated@@86) $generated@@80 (ite ($generated@@30 $generated@@86) $generated@@80 (let (($generated@@87 ($generated@@75 $generated@@27 ($generated@@31 $generated@@86))))
(let (($generated@@88 ($generated@@75 $generated@@27 ($generated@@32 $generated@@86))))
(ite  (and (and ($generated@@34 $generated@@88 $generated@@35) ($generated@@37 ($generated@@38 $generated@@39) $generated@@87)) ($generated@@37 ($generated@@38 $generated@@39) $generated@@85)) $generated@@87 (ite  (and (and (and (and ($generated@@40 $generated@@88) ($generated@@34 ($generated@@32 $generated@@88) $generated@@41)) ($generated@@37 ($generated@@38 $generated@@39) ($generated@@75 $generated@@27 ($generated@@31 $generated@@88)))) ($generated@@37 ($generated@@38 $generated@@39) $generated@@87)) ($generated@@37 ($generated@@38 $generated@@39) $generated@@85)) ($generated@@42 ($generated@@75 $generated@@27 ($generated@@42 ($generated@@75 $generated@@27 ($generated@@31 $generated@@88)) $generated@@85)) ($generated@@75 $generated@@27 ($generated@@42 $generated@@87 $generated@@85))) $generated@@80)))))))))))))
 :weight 3
 :pattern ( ($generated@@24 ($generated@@75 $generated@@27 $generated@@80)))
))))
(assert  (=> (<= 4 $generated@@23) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or ($generated@@90 $generated@@92) (and (< 4 $generated@@23) (and ($generated@@26 $generated@@27 $generated@@92 $generated@@28) (not ($generated@@52 ($generated@@38 $generated@@39) $generated@@92))))) (and (and (and (and ($generated@@33 ($generated@@62 ($generated@@38 $generated@@39) $generated@@92)) ($generated@@33 $generated@@92)) ($generated@@63 $generated@@92)) (=> (not ($generated@@34 ($generated@@62 ($generated@@38 $generated@@39) $generated@@92) $generated@@92)) (and ($generated@@63 $generated@@92) ($generated@@90 ($generated@@62 ($generated@@38 $generated@@39) $generated@@92))))) (= ($generated@@89 ($generated@@38 $generated@@91) $generated@@92) (ite ($generated@@34 ($generated@@62 ($generated@@38 $generated@@39) $generated@@92) $generated@@92) $generated@@92 ($generated@@89 $generated@@91 ($generated@@62 ($generated@@38 $generated@@39) $generated@@92))))))
 :pattern ( ($generated@@89 ($generated@@38 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@34 $generated@@93 $generated@@94) (= $generated@@93 $generated@@94))
 :pattern ( ($generated@@34 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@74 $generated@@95) $generated@@95)
 :pattern ( ($generated@@74 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@75 $generated@@97 $generated@@96) $generated@@96)
 :pattern ( ($generated@@75 $generated@@97 $generated@@96))
)))
(assert  (=> (<= 4 $generated@@23) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or ($generated@@90 $generated@@99) (and (< 4 $generated@@23) (and ($generated@@26 $generated@@27 $generated@@99 $generated@@28) (not ($generated@@52 ($generated@@38 $generated@@39) $generated@@99))))) ($generated@@26 $generated@@27 ($generated@@89 $generated@@98 $generated@@99) $generated@@28))
 :pattern ( ($generated@@89 $generated@@98 $generated@@99))
))))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@29 $generated@@100) (= ($generated@@71 $generated@@100) $generated@@2))
 :pattern ( ($generated@@29 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@30 $generated@@101) (= ($generated@@71 $generated@@101) $generated@@3))
 :pattern ( ($generated@@30 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@40 $generated@@102) (= ($generated@@71 $generated@@102) $generated@@4))
 :pattern ( ($generated@@40 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@104 $generated@@106 ($generated@@103 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@103 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@40 $generated@@107) (exists (($generated@@108 T@U) ($generated@@109 T@U) ) (= $generated@@107 ($generated@@42 $generated@@108 $generated@@109))))
 :pattern ( ($generated@@40 $generated@@107))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@29 $generated@@110) (= $generated@@110 $generated@@41))
 :pattern ( ($generated@@29 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@30 $generated@@111) (= $generated@@111 $generated@@35))
 :pattern ( ($generated@@30 $generated@@111))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@112 T@U) ($generated@@113 Int) ) (!  (=> (or ($generated@@73 ($generated@@74 $generated@@113)) (and (< 2 $generated@@23) (<= ($generated@@74 0) $generated@@113))) (and (=> (or (not (= ($generated@@74 $generated@@113) ($generated@@74 0))) (not true)) ($generated@@73 ($generated@@74 (- $generated@@113 1)))) (= ($generated@@72 ($generated@@38 $generated@@112) ($generated@@74 $generated@@113)) (ite (= ($generated@@74 $generated@@113) ($generated@@74 0)) $generated@@35 ($generated@@42 ($generated@@75 $generated@@27 ($generated@@72 ($generated@@38 $generated@@112) ($generated@@74 (- $generated@@113 1)))) ($generated@@75 $generated@@27 $generated@@35))))))
 :weight 3
 :pattern ( ($generated@@72 ($generated@@38 $generated@@112) ($generated@@74 $generated@@113)))
))))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@114 T@U) ) (!  (=> (or ($generated@@25 $generated@@114) (and (< 2 $generated@@23) ($generated@@26 $generated@@27 $generated@@114 $generated@@28))) (and (=> (not ($generated@@52 ($generated@@38 $generated@@39) $generated@@114)) (and (not ($generated@@52 ($generated@@38 $generated@@39) ($generated@@24 $generated@@114))) (or ($generated@@34 ($generated@@24 $generated@@114) $generated@@114) (< ($generated@@64 ($generated@@38 $generated@@39) ($generated@@24 $generated@@114)) ($generated@@64 ($generated@@38 $generated@@39) $generated@@114))))) ($generated@@26 $generated@@27 ($generated@@24 $generated@@114) $generated@@28)))
 :pattern ( ($generated@@24 $generated@@114))
))))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@26 $generated@@9 $generated@@115 $generated@@68) (<= ($generated@@74 0) ($generated@@14 $generated@@115)))
 :pattern ( ($generated@@26 $generated@@9 $generated@@115 $generated@@68))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or ($generated@@53 ($generated@@75 $generated@@27 $generated@@117)) (and (< 1 $generated@@23) ($generated@@26 $generated@@27 $generated@@117 $generated@@28))) (and (=> (not ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 ($generated@@29 ($generated@@75 $generated@@27 $generated@@117)))))) (=> (not ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 ($generated@@30 ($generated@@75 $generated@@27 $generated@@117)))))) (let (($generated@@118 ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@117)))))
(let (($generated@@119 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@117)))))
 (and ($generated@@53 $generated@@119) (=> (not ($generated@@52 ($generated@@38 $generated@@116) $generated@@119)) ($generated@@53 $generated@@118))))))) (= ($generated@@52 ($generated@@38 $generated@@116) ($generated@@75 $generated@@27 $generated@@117)) (ite ($generated@@29 ($generated@@75 $generated@@27 $generated@@117)) true (ite ($generated@@30 ($generated@@75 $generated@@27 $generated@@117)) false ($generated@@12 (let (($generated@@120 ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@117)))))
(let (($generated@@121 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@117)))))
($generated@@75 $generated@@8 ($generated@@11  (or ($generated@@52 ($generated@@38 $generated@@116) $generated@@121) ($generated@@52 ($generated@@38 $generated@@116) $generated@@120))))))))))))
 :weight 3
 :pattern ( ($generated@@52 ($generated@@38 $generated@@116) ($generated@@75 $generated@@27 $generated@@117)))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (or ($generated@@122 ($generated@@75 $generated@@27 $generated@@124)) (and (< 1 $generated@@23) ($generated@@26 $generated@@27 $generated@@124 $generated@@28))) (and (=> (not ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 ($generated@@29 ($generated@@75 $generated@@27 $generated@@124)))))) (=> (not ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 ($generated@@30 ($generated@@75 $generated@@27 $generated@@124)))))) (let (($generated@@125 ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@124)))))
(let (($generated@@126 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@124)))))
 (and ($generated@@122 $generated@@126) ($generated@@122 $generated@@125)))))) (= ($generated@@64 ($generated@@38 $generated@@123) ($generated@@75 $generated@@27 $generated@@124)) (ite ($generated@@29 ($generated@@75 $generated@@27 $generated@@124)) 1 (ite ($generated@@30 ($generated@@75 $generated@@27 $generated@@124)) 1 (let (($generated@@127 ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@124)))))
(let (($generated@@128 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@124)))))
($generated@@74 (+ (+ 1 ($generated@@64 ($generated@@38 $generated@@123) $generated@@128)) ($generated@@64 ($generated@@38 $generated@@123) $generated@@127))))))))))
 :weight 3
 :pattern ( ($generated@@64 ($generated@@38 $generated@@123) ($generated@@75 $generated@@27 $generated@@124)))
))))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (or ($generated@@63 $generated@@130) (and (< 3 $generated@@23) ($generated@@26 $generated@@27 $generated@@130 $generated@@28))) (and (and (and (and (and ($generated@@33 ($generated@@24 $generated@@130)) ($generated@@33 $generated@@130)) ($generated@@25 $generated@@130)) (=> (not ($generated@@34 ($generated@@24 $generated@@130) $generated@@130)) ($generated@@25 $generated@@130))) (=> ($generated@@34 ($generated@@24 $generated@@130) $generated@@130) (=> ($generated@@40 $generated@@130) (and (and (and (and ($generated@@33 ($generated@@62 $generated@@129 ($generated@@32 $generated@@130))) ($generated@@33 ($generated@@32 $generated@@130))) ($generated@@63 ($generated@@32 $generated@@130))) (=> (not ($generated@@34 ($generated@@62 $generated@@129 ($generated@@32 $generated@@130)) ($generated@@32 $generated@@130))) ($generated@@63 ($generated@@32 $generated@@130)))) (=> ($generated@@34 ($generated@@62 $generated@@129 ($generated@@32 $generated@@130)) ($generated@@32 $generated@@130)) (and (and ($generated@@36 ($generated@@32 $generated@@130)) (=> ($generated@@37 ($generated@@38 $generated@@39) ($generated@@32 $generated@@130)) (and (and ($generated@@33 ($generated@@62 $generated@@129 ($generated@@31 $generated@@130))) ($generated@@33 ($generated@@31 $generated@@130))) ($generated@@63 ($generated@@31 $generated@@130))))) (=> (and ($generated@@37 ($generated@@38 $generated@@39) ($generated@@32 $generated@@130)) (not ($generated@@34 ($generated@@62 $generated@@129 ($generated@@31 $generated@@130)) ($generated@@31 $generated@@130)))) ($generated@@63 ($generated@@31 $generated@@130))))))))) (= ($generated@@62 ($generated@@38 $generated@@129) $generated@@130) (ite  (not ($generated@@34 ($generated@@24 $generated@@130) $generated@@130)) ($generated@@24 $generated@@130) (ite  (not ($generated@@40 $generated@@130)) $generated@@130 (ite  (not ($generated@@34 ($generated@@62 $generated@@129 ($generated@@32 $generated@@130)) ($generated@@32 $generated@@130))) ($generated@@42 ($generated@@62 $generated@@129 ($generated@@32 $generated@@130)) ($generated@@31 $generated@@130)) (ite  (and ($generated@@37 ($generated@@38 $generated@@39) ($generated@@32 $generated@@130)) (not ($generated@@34 ($generated@@62 $generated@@129 ($generated@@31 $generated@@130)) ($generated@@31 $generated@@130)))) ($generated@@42 ($generated@@32 $generated@@130) ($generated@@62 $generated@@129 ($generated@@31 $generated@@130))) $generated@@130)))))))
 :pattern ( ($generated@@62 ($generated@@38 $generated@@129) $generated@@130))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or ($generated@@122 $generated@@132) (and (< 1 $generated@@23) ($generated@@26 $generated@@27 $generated@@132 $generated@@28))) (<= ($generated@@74 0) ($generated@@64 $generated@@131 $generated@@132)))
 :pattern ( ($generated@@64 $generated@@131 $generated@@132))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (or ($generated@@36 $generated@@134) (and (< 1 $generated@@23) ($generated@@26 $generated@@27 $generated@@134 $generated@@28))) (and (=> (not ($generated@@29 $generated@@134)) (=> (not ($generated@@30 $generated@@134)) (let (($generated@@135 ($generated@@31 $generated@@134)))
(let (($generated@@136 ($generated@@32 $generated@@134)))
 (and (=> ($generated@@29 $generated@@136) ($generated@@36 $generated@@135)) (=> (not ($generated@@29 $generated@@136)) (and (=> ($generated@@30 $generated@@136) ($generated@@36 $generated@@135)) (=> (not ($generated@@30 $generated@@136)) (let (($generated@@137 ($generated@@31 $generated@@136)))
(let (($generated@@138 ($generated@@32 $generated@@136)))
 (and ($generated@@33 $generated@@138) (=> ($generated@@34 $generated@@138 $generated@@41) (and ($generated@@36 $generated@@137) (=> ($generated@@37 $generated@@133 $generated@@137) ($generated@@36 $generated@@135))))))))))))))) (= ($generated@@37 ($generated@@38 $generated@@133) $generated@@134) (ite ($generated@@29 $generated@@134) true (ite ($generated@@30 $generated@@134) true (let (($generated@@139 ($generated@@31 $generated@@134)))
(let (($generated@@140 ($generated@@32 $generated@@134)))
(ite ($generated@@29 $generated@@140) ($generated@@37 $generated@@133 $generated@@139) (ite ($generated@@30 $generated@@140) ($generated@@37 $generated@@133 $generated@@139) (let (($generated@@141 ($generated@@31 $generated@@140)))
(let (($generated@@142 ($generated@@32 $generated@@140)))
 (and (and ($generated@@34 $generated@@142 $generated@@41) ($generated@@37 $generated@@133 $generated@@141)) ($generated@@37 $generated@@133 $generated@@139)))))))))))))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@133) $generated@@134))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (or ($generated@@122 $generated@@144) (and (< 1 $generated@@23) ($generated@@26 $generated@@27 $generated@@144 $generated@@28))) (and (=> (not ($generated@@29 $generated@@144)) (=> (not ($generated@@30 $generated@@144)) (let (($generated@@145 ($generated@@31 $generated@@144)))
(let (($generated@@146 ($generated@@32 $generated@@144)))
 (and ($generated@@122 $generated@@146) ($generated@@122 $generated@@145)))))) (= ($generated@@64 ($generated@@38 $generated@@143) $generated@@144) (ite ($generated@@29 $generated@@144) 1 (ite ($generated@@30 $generated@@144) 1 (let (($generated@@147 ($generated@@31 $generated@@144)))
(let (($generated@@148 ($generated@@32 $generated@@144)))
(+ (+ 1 ($generated@@64 $generated@@143 $generated@@148)) ($generated@@64 $generated@@143 $generated@@147)))))))))
 :pattern ( ($generated@@64 ($generated@@38 $generated@@143) $generated@@144))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and ($generated@@40 $generated@@149) ($generated@@40 $generated@@150)) (= ($generated@@34 $generated@@149 $generated@@150)  (and ($generated@@34 ($generated@@32 $generated@@149) ($generated@@32 $generated@@150)) ($generated@@34 ($generated@@31 $generated@@149) ($generated@@31 $generated@@150)))))
 :pattern ( ($generated@@34 $generated@@149 $generated@@150) ($generated@@40 $generated@@149))
 :pattern ( ($generated@@34 $generated@@149 $generated@@150) ($generated@@40 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@37 ($generated@@38 $generated@@151) $generated@@152) ($generated@@37 $generated@@151 $generated@@152))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@52 ($generated@@38 $generated@@153) $generated@@154) ($generated@@52 $generated@@153 $generated@@154))
 :pattern ( ($generated@@52 ($generated@@38 $generated@@153) $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and ($generated@@29 $generated@@155) ($generated@@29 $generated@@156)) ($generated@@34 $generated@@155 $generated@@156))
 :pattern ( ($generated@@34 $generated@@155 $generated@@156) ($generated@@29 $generated@@155))
 :pattern ( ($generated@@34 $generated@@155 $generated@@156) ($generated@@29 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@30 $generated@@157) ($generated@@30 $generated@@158)) ($generated@@34 $generated@@157 $generated@@158))
 :pattern ( ($generated@@34 $generated@@157 $generated@@158) ($generated@@30 $generated@@157))
 :pattern ( ($generated@@34 $generated@@157 $generated@@158) ($generated@@30 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@71 ($generated@@42 $generated@@159 $generated@@160)) $generated@@4)
 :pattern ( ($generated@@42 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@32 ($generated@@42 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@42 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@31 ($generated@@42 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@42 $generated@@163 $generated@@164))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (or ($generated@@36 ($generated@@75 $generated@@27 $generated@@166)) (and (< 1 $generated@@23) ($generated@@26 $generated@@27 $generated@@166 $generated@@28))) (and (=> (not ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 ($generated@@29 ($generated@@75 $generated@@27 $generated@@166)))))) (=> (not ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 ($generated@@30 ($generated@@75 $generated@@27 $generated@@166)))))) (let (($generated@@167 ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@166)))))
(let (($generated@@168 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@166)))))
 (and (=> ($generated@@29 $generated@@168) ($generated@@36 $generated@@167)) (=> (not ($generated@@29 $generated@@168)) (and (=> ($generated@@30 $generated@@168) ($generated@@36 $generated@@167)) (=> (not ($generated@@30 $generated@@168)) (let (($generated@@169 ($generated@@31 $generated@@168)))
(let (($generated@@170 ($generated@@32 $generated@@168)))
 (and ($generated@@33 $generated@@170) (=> ($generated@@34 $generated@@170 $generated@@41) (and ($generated@@36 $generated@@169) (=> ($generated@@37 ($generated@@38 $generated@@165) $generated@@169) ($generated@@36 $generated@@167))))))))))))))) (= ($generated@@37 ($generated@@38 $generated@@165) ($generated@@75 $generated@@27 $generated@@166)) (ite ($generated@@29 ($generated@@75 $generated@@27 $generated@@166)) true (ite ($generated@@30 ($generated@@75 $generated@@27 $generated@@166)) true (let (($generated@@171 ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@166)))))
(let (($generated@@172 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@166)))))
(ite ($generated@@29 $generated@@172) ($generated@@37 ($generated@@38 $generated@@165) $generated@@171) (ite ($generated@@30 $generated@@172) ($generated@@37 ($generated@@38 $generated@@165) $generated@@171) (let (($generated@@173 ($generated@@75 $generated@@27 ($generated@@31 $generated@@172))))
(let (($generated@@174 ($generated@@75 $generated@@27 ($generated@@32 $generated@@172))))
 (and (and ($generated@@34 $generated@@174 $generated@@41) ($generated@@37 ($generated@@38 $generated@@165) $generated@@173)) ($generated@@37 ($generated@@38 $generated@@165) $generated@@171)))))))))))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@38 $generated@@165) ($generated@@75 $generated@@27 $generated@@166)))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@103 $generated@@176 ($generated@@104 $generated@@176 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@104 $generated@@176 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> ($generated@@33 $generated@@177) (or (or ($generated@@29 $generated@@177) ($generated@@30 $generated@@177)) ($generated@@40 $generated@@177)))
 :pattern ( ($generated@@33 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (< ($generated@@178 $generated@@179) ($generated@@178 ($generated@@42 $generated@@179 $generated@@180)))
 :pattern ( ($generated@@42 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (< ($generated@@178 $generated@@182) ($generated@@178 ($generated@@42 $generated@@181 $generated@@182)))
 :pattern ( ($generated@@42 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@62 ($generated@@38 $generated@@183) $generated@@184) ($generated@@62 $generated@@183 $generated@@184))
 :pattern ( ($generated@@62 ($generated@@38 $generated@@183) $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@64 ($generated@@38 $generated@@185) $generated@@186) ($generated@@64 $generated@@185 $generated@@186))
 :pattern ( ($generated@@64 ($generated@@38 $generated@@185) $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@89 ($generated@@38 $generated@@187) $generated@@188) ($generated@@89 $generated@@187 $generated@@188))
 :pattern ( ($generated@@89 ($generated@@38 $generated@@187) $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 Int) ) (! (= ($generated@@72 ($generated@@38 $generated@@189) $generated@@190) ($generated@@72 $generated@@189 $generated@@190))
 :pattern ( ($generated@@72 ($generated@@38 $generated@@189) $generated@@190))
)))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (or ($generated@@63 ($generated@@75 $generated@@27 $generated@@192)) (and (< 3 $generated@@23) ($generated@@26 $generated@@27 $generated@@192 $generated@@28))) (and (and (and (and (and ($generated@@33 ($generated@@75 $generated@@27 ($generated@@24 ($generated@@75 $generated@@27 $generated@@192)))) ($generated@@33 ($generated@@75 $generated@@27 $generated@@192))) ($generated@@25 ($generated@@75 $generated@@27 $generated@@192))) (=> (not ($generated@@34 ($generated@@24 ($generated@@75 $generated@@27 $generated@@192)) $generated@@192)) ($generated@@25 ($generated@@75 $generated@@27 $generated@@192)))) (=> ($generated@@34 ($generated@@24 ($generated@@75 $generated@@27 $generated@@192)) $generated@@192) (=> ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 ($generated@@40 ($generated@@75 $generated@@27 $generated@@192))))) (and (and (and (and ($generated@@33 ($generated@@75 $generated@@27 ($generated@@62 ($generated@@38 $generated@@191) ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192)))))) ($generated@@33 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192))))) ($generated@@63 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192))))) (=> (not ($generated@@34 ($generated@@62 ($generated@@38 $generated@@191) ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192)))) ($generated@@32 ($generated@@75 $generated@@27 $generated@@192)))) ($generated@@63 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192)))))) (=> ($generated@@34 ($generated@@62 ($generated@@38 $generated@@191) ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192)))) ($generated@@32 ($generated@@75 $generated@@27 $generated@@192))) (and (and ($generated@@36 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192)))) (=> ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 ($generated@@37 ($generated@@38 $generated@@39) ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192))))))) (and (and ($generated@@33 ($generated@@75 $generated@@27 ($generated@@62 ($generated@@38 $generated@@191) ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@192)))))) ($generated@@33 ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@192))))) ($generated@@63 ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@192))))))) (=> (and ($generated@@37 ($generated@@38 $generated@@39) ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192)))) (not ($generated@@34 ($generated@@62 ($generated@@38 $generated@@191) ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@192)))) ($generated@@31 ($generated@@75 $generated@@27 $generated@@192))))) ($generated@@63 ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@192))))))))))) (= ($generated@@62 ($generated@@38 $generated@@191) ($generated@@75 $generated@@27 $generated@@192)) (ite  (not ($generated@@34 ($generated@@24 ($generated@@75 $generated@@27 $generated@@192)) $generated@@192)) ($generated@@24 ($generated@@75 $generated@@27 $generated@@192)) (ite  (not ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 ($generated@@40 ($generated@@75 $generated@@27 $generated@@192)))))) $generated@@192 (ite  (not ($generated@@34 ($generated@@62 ($generated@@38 $generated@@191) ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192)))) ($generated@@32 ($generated@@75 $generated@@27 $generated@@192)))) ($generated@@42 ($generated@@75 $generated@@27 ($generated@@62 ($generated@@38 $generated@@191) ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192))))) ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@192)))) (ite  (and ($generated@@37 ($generated@@38 $generated@@39) ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192)))) (not ($generated@@34 ($generated@@62 ($generated@@38 $generated@@191) ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@192)))) ($generated@@31 ($generated@@75 $generated@@27 $generated@@192))))) ($generated@@42 ($generated@@75 $generated@@27 ($generated@@32 ($generated@@75 $generated@@27 $generated@@192))) ($generated@@75 $generated@@27 ($generated@@62 ($generated@@38 $generated@@191) ($generated@@75 $generated@@27 ($generated@@31 ($generated@@75 $generated@@27 $generated@@192)))))) $generated@@192)))))))
 :weight 3
 :pattern ( ($generated@@62 ($generated@@38 $generated@@191) ($generated@@75 $generated@@27 $generated@@192)))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@193 $generated@@204 $generated@@205 $generated@@206 ($generated@@200 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@209 $generated@@210) $generated@@207)
 :weight 0
)) (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@193 $generated@@211 $generated@@212 $generated@@213 ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@193 $generated@@211 $generated@@212 $generated@@213 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@T) ($generated@@221 T@T) ($generated@@222 T@T) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@193 $generated@@220 $generated@@221 $generated@@222 ($generated@@200 $generated@@220 $generated@@221 $generated@@222 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@193 $generated@@220 $generated@@221 $generated@@222 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)))) (= ($generated@@7 $generated@@194) 4)) (= ($generated@@7 $generated@@195) 5)) (forall (($generated@@229 T@T) ($generated@@230 T@T) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (= ($generated@@197 $generated@@229 $generated@@230 ($generated@@201 $generated@@229 $generated@@230 $generated@@232 $generated@@233 $generated@@231) $generated@@233) $generated@@231)
 :weight 0
))) (forall (($generated@@234 T@T) ($generated@@235 T@T) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@238 $generated@@239) (= ($generated@@197 $generated@@234 $generated@@235 ($generated@@201 $generated@@234 $generated@@235 $generated@@237 $generated@@238 $generated@@236) $generated@@239) ($generated@@197 $generated@@234 $generated@@235 $generated@@237 $generated@@239)))
 :weight 0
))) (= ($generated@@7 $generated@@198) 6)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (= ($generated@@7 ($generated@@199 $generated@@240 $generated@@241)) 7))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@202 ($generated@@199 $generated@@242 $generated@@243)) $generated@@242)
 :pattern ( ($generated@@199 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (! (= ($generated@@203 ($generated@@199 $generated@@244 $generated@@245)) $generated@@245)
 :pattern ( ($generated@@199 $generated@@244 $generated@@245))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (= ($generated@@12 ($generated@@193 $generated@@194 $generated@@195 $generated@@8 ($generated@@196 $generated@@246 $generated@@247 $generated@@248 $generated@@249) $generated@@250 $generated@@251))  (=> (and (or (not (= $generated@@250 $generated@@246)) (not true)) ($generated@@12 ($generated@@103 $generated@@8 ($generated@@197 $generated@@195 $generated@@198 ($generated@@197 $generated@@194 ($generated@@199 $generated@@195 $generated@@198) $generated@@247 $generated@@250) $generated@@248)))) $generated@@249))
 :pattern ( ($generated@@193 $generated@@194 $generated@@195 $generated@@8 ($generated@@196 $generated@@246 $generated@@247 $generated@@248 $generated@@249) $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 Int) ($generated@@254 Int) ) (! (= ($generated@@252 $generated@@253 $generated@@254) (mod $generated@@253 $generated@@254))
 :pattern ( ($generated@@252 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@255 $generated@@28) (or (or ($generated@@29 $generated@@255) ($generated@@30 $generated@@255)) ($generated@@40 $generated@@255)))
 :pattern ( ($generated@@40 $generated@@255) ($generated@@26 $generated@@27 $generated@@255 $generated@@28))
 :pattern ( ($generated@@30 $generated@@255) ($generated@@26 $generated@@27 $generated@@255 $generated@@28))
 :pattern ( ($generated@@29 $generated@@255) ($generated@@26 $generated@@27 $generated@@255 $generated@@28))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and ($generated@@256 $generated@@258) ($generated@@26 $generated@@27 $generated@@257 $generated@@28)) ($generated@@67 $generated@@27 $generated@@257 $generated@@28 $generated@@258))
 :pattern ( ($generated@@67 $generated@@27 $generated@@257 $generated@@28 $generated@@258))
)))
(assert (= ($generated@@259 $generated@@68) $generated@@0))
(assert (= ($generated@@260 $generated@@68) $generated@@5))
(assert (= ($generated@@259 $generated@@28) $generated@@1))
(assert (= ($generated@@260 $generated@@28) $generated@@6))
(assert (= $generated@@41 ($generated@@75 $generated@@27 $generated@@41)))
(assert (= $generated@@35 ($generated@@75 $generated@@27 $generated@@35)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@261 T@U) ($generated@@262 Int) ) (!  (=> (or ($generated@@73 $generated@@262) (and (< 2 $generated@@23) (<= ($generated@@74 0) $generated@@262))) (and (not ($generated@@52 ($generated@@38 $generated@@39) ($generated@@72 $generated@@261 $generated@@262))) ($generated@@26 $generated@@27 ($generated@@72 $generated@@261 $generated@@262) $generated@@28)))
 :pattern ( ($generated@@72 $generated@@261 $generated@@262))
))))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and ($generated@@256 $generated@@264) (and ($generated@@40 $generated@@263) ($generated@@67 $generated@@27 $generated@@263 $generated@@28 $generated@@264))) ($generated@@67 $generated@@27 ($generated@@32 $generated@@263) $generated@@28 $generated@@264))
 :pattern ( ($generated@@67 $generated@@27 ($generated@@32 $generated@@263) $generated@@28 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and ($generated@@256 $generated@@266) (and ($generated@@40 $generated@@265) ($generated@@67 $generated@@27 $generated@@265 $generated@@28 $generated@@266))) ($generated@@67 $generated@@27 ($generated@@31 $generated@@265) $generated@@28 $generated@@266))
 :pattern ( ($generated@@67 $generated@@27 ($generated@@31 $generated@@265) $generated@@28 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= ($generated@@42 ($generated@@75 $generated@@27 $generated@@267) ($generated@@75 $generated@@27 $generated@@268)) ($generated@@75 $generated@@27 ($generated@@42 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@42 ($generated@@75 $generated@@27 $generated@@267) ($generated@@75 $generated@@27 $generated@@268)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@104 $generated@@9 ($generated@@13 ($generated@@74 $generated@@269))) ($generated@@75 $generated@@198 ($generated@@104 $generated@@9 ($generated@@13 $generated@@269))))
 :pattern ( ($generated@@104 $generated@@9 ($generated@@13 ($generated@@74 $generated@@269))))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@T) ) (! (= ($generated@@104 $generated@@271 ($generated@@75 $generated@@271 $generated@@270)) ($generated@@75 $generated@@198 ($generated@@104 $generated@@271 $generated@@270)))
 :pattern ( ($generated@@104 $generated@@271 ($generated@@75 $generated@@271 $generated@@270)))
)))
(assert  (=> (<= 4 $generated@@23) (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (or ($generated@@90 ($generated@@75 $generated@@27 $generated@@273)) (and (< 4 $generated@@23) (and ($generated@@26 $generated@@27 $generated@@273 $generated@@28) (not ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 ($generated@@52 ($generated@@38 $generated@@39) ($generated@@75 $generated@@27 $generated@@273))))))))) (and (and (and (and ($generated@@33 ($generated@@75 $generated@@27 ($generated@@62 ($generated@@38 $generated@@39) ($generated@@75 $generated@@27 $generated@@273)))) ($generated@@33 ($generated@@75 $generated@@27 $generated@@273))) ($generated@@63 ($generated@@75 $generated@@27 $generated@@273))) (=> (not ($generated@@34 ($generated@@62 ($generated@@38 $generated@@39) ($generated@@75 $generated@@27 $generated@@273)) $generated@@273)) (and ($generated@@63 ($generated@@75 $generated@@27 $generated@@273)) ($generated@@90 ($generated@@75 $generated@@27 ($generated@@62 ($generated@@38 $generated@@39) ($generated@@75 $generated@@27 $generated@@273))))))) (= ($generated@@89 ($generated@@38 $generated@@272) ($generated@@75 $generated@@27 $generated@@273)) (ite ($generated@@34 ($generated@@62 ($generated@@38 $generated@@39) ($generated@@75 $generated@@27 $generated@@273)) $generated@@273) $generated@@273 ($generated@@89 ($generated@@38 $generated@@272) ($generated@@75 $generated@@27 ($generated@@62 ($generated@@38 $generated@@39) ($generated@@75 $generated@@27 $generated@@273))))))))
 :weight 3
 :pattern ( ($generated@@89 ($generated@@38 $generated@@272) ($generated@@75 $generated@@27 $generated@@273)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@274 () Int)
(declare-fun $generated@@275 () Int)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () Int)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@283  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@34 ($generated@@89 ($generated@@38 ($generated@@38 $generated@@39)) ($generated@@72 ($generated@@38 ($generated@@38 $generated@@39)) $generated@@274)) (ite (= ($generated@@252 $generated@@274 ($generated@@74 2)) ($generated@@74 0)) $generated@@35 ($generated@@42 ($generated@@75 $generated@@27 $generated@@35) ($generated@@75 $generated@@27 $generated@@35)))))))
(let (($generated@@284  (=> (forall (($generated@@285 Int) ) (!  (=> (<= ($generated@@74 2) $generated@@285) (and (and ($generated@@33 ($generated@@62 ($generated@@38 $generated@@39) ($generated@@72 ($generated@@38 $generated@@39) $generated@@285))) ($generated@@33 ($generated@@72 ($generated@@38 $generated@@39) (- $generated@@285 2)))) (and (and ($generated@@73 $generated@@285) ($generated@@63 ($generated@@72 ($generated@@38 $generated@@39) $generated@@285))) ($generated@@73 (- $generated@@285 2)))))
 :pattern ( ($generated@@62 ($generated@@38 $generated@@39) ($generated@@72 ($generated@@38 $generated@@39) $generated@@285)))
)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (forall (($generated@@286 Int) ) (!  (=> (and (forall (($generated@@287 Int) ) (!  (=> (and (<= 0 $generated@@287) (< $generated@@287 $generated@@286)) (=> (<= ($generated@@74 2) $generated@@287) ($generated@@34 ($generated@@62 ($generated@@38 $generated@@39) ($generated@@72 ($generated@@38 $generated@@39) $generated@@287)) ($generated@@72 ($generated@@38 $generated@@39) (- $generated@@287 2)))))
 :pattern ( ($generated@@62 ($generated@@38 $generated@@39) ($generated@@72 ($generated@@38 $generated@@39) $generated@@287)))
)) true) (=> (<= ($generated@@74 2) $generated@@286) ($generated@@34 ($generated@@62 ($generated@@38 ($generated@@38 $generated@@39)) ($generated@@72 ($generated@@38 ($generated@@38 $generated@@39)) $generated@@286)) ($generated@@72 ($generated@@38 ($generated@@38 $generated@@39)) (- $generated@@286 2)))))
 :pattern ( ($generated@@62 ($generated@@38 ($generated@@38 $generated@@39)) ($generated@@72 ($generated@@38 ($generated@@38 $generated@@39)) $generated@@286)))
))) (=> (and (forall (($generated@@288 Int) ) (!  (=> (<= ($generated@@74 2) $generated@@288) ($generated@@34 ($generated@@62 ($generated@@38 $generated@@39) ($generated@@72 ($generated@@38 $generated@@39) $generated@@288)) ($generated@@72 ($generated@@38 $generated@@39) (- $generated@@288 2))))
 :pattern ( ($generated@@62 ($generated@@38 $generated@@39) ($generated@@72 ($generated@@38 $generated@@39) $generated@@288)))
)) (= (ControlFlow 0 4) 3)) $generated@@283)))))
(let (($generated@@289  (=> (and (< $generated@@275 ($generated@@74 2)) (= (ControlFlow 0 9) 4)) $generated@@284)))
(let (($generated@@290  (=> (<= ($generated@@74 2) $generated@@275) (and (=> (= (ControlFlow 0 6) (- 0 8)) ($generated@@26 $generated@@9 ($generated@@13 $generated@@275) $generated@@68)) (=> ($generated@@26 $generated@@9 ($generated@@13 $generated@@275) $generated@@68) (=> ($generated@@67 $generated@@9 ($generated@@13 $generated@@275) $generated@@68 $generated@@276) (=> (and (and ($generated@@73 $generated@@275) (= $generated@@277 ($generated@@72 ($generated@@38 $generated@@39) $generated@@275))) (and ($generated@@67 $generated@@27 $generated@@277 $generated@@28 $generated@@276) ($generated@@63 ($generated@@72 ($generated@@38 $generated@@39) $generated@@275)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@26 $generated@@9 ($generated@@13 (- $generated@@275 2)) $generated@@68)) (=> ($generated@@26 $generated@@9 ($generated@@13 (- $generated@@275 2)) $generated@@68) (=> (and (and (= $generated@@278 (- $generated@@275 2)) ($generated@@67 $generated@@9 ($generated@@13 $generated@@278) $generated@@68 $generated@@276)) (and ($generated@@73 (- $generated@@275 2)) (= (ControlFlow 0 6) 4))) $generated@@284))))))))))
(let (($generated@@291  (and (=> (= (ControlFlow 0 10) 6) $generated@@290) (=> (= (ControlFlow 0 10) 9) $generated@@289))))
(let (($generated@@292 true))
(let (($generated@@293  (=> (= $generated@@279 ($generated@@196 $generated@@280 $generated@@281 $generated false)) (=> (and (and ($generated@@256 $generated@@276) ($generated@@282 $generated@@276)) (and (= $generated@@281 $generated@@276) (forall (($generated@@294 Int) ) (!  (=> (and (and (<= ($generated@@74 0) $generated@@294) ($generated@@12 ($generated@@75 $generated@@8 ($generated@@11 true)))) (and (<= 0 $generated@@294) (< $generated@@294 $generated@@274))) ($generated@@34 ($generated@@89 ($generated@@38 $generated@@39) ($generated@@72 ($generated@@38 $generated@@39) $generated@@294)) (ite (= ($generated@@252 $generated@@294 ($generated@@74 2)) ($generated@@74 0)) $generated@@35 ($generated@@42 ($generated@@75 $generated@@27 $generated@@35) ($generated@@75 $generated@@27 $generated@@35)))))
 :pattern ( ($generated@@72 ($generated@@38 $generated@@39) $generated@@294))
)))) (and (=> (= (ControlFlow 0 11) 10) $generated@@291) (=> (= (ControlFlow 0 11) 1) $generated@@292))))))
(let (($generated@@295  (=> (and (and (and ($generated@@256 $generated@@281) ($generated@@282 $generated@@281)) (<= ($generated@@74 0) $generated@@274)) (and (= 5 $generated@@23) (= (ControlFlow 0 12) 11))) $generated@@293)))
$generated@@295)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
