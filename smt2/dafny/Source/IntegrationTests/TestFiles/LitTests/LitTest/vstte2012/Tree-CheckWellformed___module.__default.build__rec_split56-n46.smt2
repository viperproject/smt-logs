(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 (T@U Int) T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U Int) T@U)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@51 (T@U Int) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@62 (Int) Int)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 (T@U Int T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@123 (Int T@U) Bool)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@136 (T@U Int T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (Int T@U) Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@204 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@205 () T@T)
(declare-fun $generated@@206 () T@T)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@212 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@11 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@32 $generated@@33) $generated@@31)  (and ($generated@@28 $generated@@29 $generated@@32 $generated@@31) ($generated@@28 $generated@@29 $generated@@33 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@32 $generated@@33) $generated@@31))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 Int) ) (!  (=> (and (<= 0 $generated@@41) (< $generated@@41 ($generated@@36 $generated@@40))) (< ($generated@@37 ($generated@@38 $generated@@29 ($generated@@34 $generated@@40 $generated@@41))) ($generated@@37 ($generated@@35 $generated@@39 $generated@@40))))
 :pattern ( ($generated@@34 $generated@@40 $generated@@41) ($generated@@35 $generated@@39 $generated@@40))
)))
(assert (= ($generated@@36 $generated@@42) 0))
(assert (= ($generated@@43 $generated@@44) $generated@@5))
(assert (= ($generated@@43 $generated@@45) $generated@@7))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 Int) ) (!  (=> (and (<= 0 $generated@@50) (<= $generated@@50 ($generated@@36 $generated@@48))) (= ($generated@@46 ($generated@@47 $generated@@48 $generated@@49) $generated@@50) ($generated@@47 ($generated@@46 $generated@@48 $generated@@50) $generated@@49)))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@48 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 Int) ) (!  (=> (= $generated@@55 ($generated@@36 $generated@@53)) (and (= ($generated@@51 ($generated@@52 $generated@@53 $generated@@54) $generated@@55) $generated@@53) (= ($generated@@46 ($generated@@52 $generated@@53 $generated@@54) $generated@@55) $generated@@54)))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@53 $generated@@54) $generated@@55))
 :pattern ( ($generated@@46 ($generated@@52 $generated@@53 $generated@@54) $generated@@55))
)))
(assert ($generated@@28 $generated@@29 $generated@@44 $generated@@31))
(assert ($generated@@28 $generated@@29 $generated@@45 $generated@@56))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@57 $generated@@58 $generated@@59) (= $generated@@58 $generated@@59))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 Int) ) (!  (=> (= $generated@@61 0) (= ($generated@@46 $generated@@60 $generated@@61) $generated@@60))
 :pattern ( ($generated@@46 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@62 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (= ($generated@@11 $generated@@67) 4))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (and ($generated@@28 $generated@@67 $generated@@70 ($generated@@68 $generated@@72)) ($generated@@69 $generated@@71 $generated@@72)) ($generated@@28 $generated@@67 ($generated@@47 $generated@@70 $generated@@71) ($generated@@68 $generated@@72)))
 :pattern ( ($generated@@28 $generated@@67 ($generated@@47 $generated@@70 $generated@@71) ($generated@@68 $generated@@72)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 Int) ($generated@@75 Int) ) (!  (=> (and (and (<= 0 $generated@@75) (< $generated@@75 $generated@@74)) (< $generated@@75 ($generated@@36 $generated@@73))) (= ($generated@@34 ($generated@@51 $generated@@73 $generated@@74) $generated@@75) ($generated@@34 $generated@@73 $generated@@75)))
 :weight 25
 :pattern ( ($generated@@34 ($generated@@51 $generated@@73 $generated@@74) $generated@@75))
 :pattern ( ($generated@@34 $generated@@73 $generated@@75) ($generated@@51 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 Int) ) (!  (=> (and (<= 0 $generated@@77) (<= $generated@@77 ($generated@@36 $generated@@76))) (= ($generated@@36 ($generated@@46 $generated@@76 $generated@@77)) (- ($generated@@36 $generated@@76) $generated@@77)))
 :pattern ( ($generated@@36 ($generated@@46 $generated@@76 $generated@@77)))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@78 $generated@@79) (= ($generated@@43 $generated@@79) $generated@@5))
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@80 $generated@@81) (= ($generated@@43 $generated@@81) $generated@@6))
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 $generated@@83) (= ($generated@@43 $generated@@83) $generated@@7))
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 $generated@@85) (= ($generated@@43 $generated@@85) $generated@@8))
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@86 $generated@@87 $generated@@88)  (and (= ($generated@@36 $generated@@87) ($generated@@36 $generated@@88)) (forall (($generated@@89 Int) ) (!  (=> (and (<= 0 $generated@@89) (< $generated@@89 ($generated@@36 $generated@@87))) (= ($generated@@34 $generated@@87 $generated@@89) ($generated@@34 $generated@@88 $generated@@89)))
 :pattern ( ($generated@@34 $generated@@87 $generated@@89))
 :pattern ( ($generated@@34 $generated@@88 $generated@@89))
))))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@90 $generated@@92 ($generated@@38 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@38 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 Int) ) (!  (=> (and (<= 0 $generated@@95) (< $generated@@95 ($generated@@36 $generated@@94))) (< ($generated@@93 ($generated@@51 $generated@@94 $generated@@95)) ($generated@@93 $generated@@94)))
 :pattern ( ($generated@@93 ($generated@@51 $generated@@94 $generated@@95)))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@80 $generated@@96) (exists (($generated@@97 T@U) ($generated@@98 T@U) ) (= $generated@@96 ($generated@@30 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@80 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@84 $generated@@99) (exists (($generated@@100 T@U) ($generated@@101 T@U) ) (= $generated@@99 ($generated@@35 $generated@@100 $generated@@101))))
 :pattern ( ($generated@@84 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@78 $generated@@102) (= $generated@@102 $generated@@44))
 :pattern ( ($generated@@78 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@82 $generated@@103) (= $generated@@103 $generated@@45))
 :pattern ( ($generated@@82 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 Int) ) (!  (=> (and (< 0 $generated@@105) (<= $generated@@105 ($generated@@36 $generated@@104))) (< ($generated@@93 ($generated@@46 $generated@@104 $generated@@105)) ($generated@@93 $generated@@104)))
 :pattern ( ($generated@@93 ($generated@@46 $generated@@104 $generated@@105)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@36 ($generated@@47 $generated@@106 $generated@@107)) (+ 1 ($generated@@36 $generated@@106)))
 :pattern ( ($generated@@47 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@35 $generated@@108 $generated@@109) $generated@@56)  (and ($generated@@28 $generated@@29 $generated@@108 $generated@@31) ($generated@@28 $generated@@67 $generated@@109 ($generated@@68 $generated))))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@35 $generated@@108 $generated@@109) $generated@@56))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 Int) ($generated@@112 Int) ) (!  (=> (and (and (<= 0 $generated@@111) (<= 0 $generated@@112)) (< $generated@@112 (- ($generated@@36 $generated@@110) $generated@@111))) (= ($generated@@34 ($generated@@46 $generated@@110 $generated@@111) $generated@@112) ($generated@@34 $generated@@110 (+ $generated@@112 $generated@@111))))
 :weight 25
 :pattern ( ($generated@@34 ($generated@@46 $generated@@110 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@36 ($generated@@52 $generated@@113 $generated@@114)) (+ ($generated@@36 $generated@@113) ($generated@@36 $generated@@114)))
 :pattern ( ($generated@@36 ($generated@@52 $generated@@113 $generated@@114)))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@69 $generated@@115 $generated@@31) (and (= ($generated@@90 $generated@@29 ($generated@@38 $generated@@29 $generated@@115)) $generated@@115) ($generated@@28 $generated@@29 ($generated@@38 $generated@@29 $generated@@115) $generated@@31)))
 :pattern ( ($generated@@69 $generated@@115 $generated@@31))
)))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@69 $generated@@116 $generated@@56) (and (= ($generated@@90 $generated@@29 ($generated@@38 $generated@@29 $generated@@116)) $generated@@116) ($generated@@28 $generated@@29 ($generated@@38 $generated@@29 $generated@@116) $generated@@56)))
 :pattern ( ($generated@@69 $generated@@116 $generated@@56))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 Int) ($generated@@119 T@U) ) (!  (and (=> (= $generated@@118 ($generated@@36 $generated@@117)) (= ($generated@@34 ($generated@@47 $generated@@117 $generated@@119) $generated@@118) $generated@@119)) (=> (or (not (= $generated@@118 ($generated@@36 $generated@@117))) (not true)) (= ($generated@@34 ($generated@@47 $generated@@117 $generated@@119) $generated@@118) ($generated@@34 $generated@@117 $generated@@118))))
 :pattern ( ($generated@@34 ($generated@@47 $generated@@117 $generated@@119) $generated@@118))
)))
(assert  (=> (<= 1 $generated@@120) (forall (($generated@@126 T@U) ($generated@@127 Int) ($generated@@128 T@U) ) (!  (=> (or ($generated@@123 $generated@@127 ($generated@@64 $generated@@29 $generated@@128)) (and (< 1 $generated@@120) ($generated@@28 $generated@@29 $generated@@128 $generated@@31))) (and (=> (not ($generated@@16 ($generated@@64 $generated@@12 ($generated@@15 ($generated@@78 ($generated@@64 $generated@@29 $generated@@128)))))) (let (($generated@@129 ($generated@@64 $generated@@29 ($generated@@124 ($generated@@64 $generated@@29 $generated@@128)))))
(let (($generated@@130 ($generated@@64 $generated@@29 ($generated@@125 ($generated@@64 $generated@@29 $generated@@128)))))
 (and ($generated@@123 (+ $generated@@127 1) $generated@@130) ($generated@@123 (+ $generated@@127 1) $generated@@129))))) (= ($generated@@121 ($generated@@122 $generated@@126) $generated@@127 ($generated@@64 $generated@@29 $generated@@128)) (ite ($generated@@78 ($generated@@64 $generated@@29 $generated@@128)) ($generated@@47 $generated@@42 ($generated@@90 $generated@@13 ($generated@@17 $generated@@127))) (let (($generated@@131 ($generated@@64 $generated@@29 ($generated@@124 ($generated@@64 $generated@@29 $generated@@128)))))
(let (($generated@@132 ($generated@@64 $generated@@29 ($generated@@125 ($generated@@64 $generated@@29 $generated@@128)))))
($generated@@52 ($generated@@121 ($generated@@122 $generated@@126) (+ $generated@@127 1) $generated@@132) ($generated@@121 ($generated@@122 $generated@@126) (+ $generated@@127 1) $generated@@131))))))))
 :weight 3
 :pattern ( ($generated@@121 ($generated@@122 $generated@@126) $generated@@127 ($generated@@64 $generated@@29 $generated@@128)))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 Int) ($generated@@135 T@U) ) (! (= ($generated@@121 ($generated@@122 $generated@@133) $generated@@134 $generated@@135) ($generated@@121 $generated@@133 $generated@@134 $generated@@135))
 :pattern ( ($generated@@121 ($generated@@122 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 Int) ($generated@@139 T@U) ) (! (= ($generated@@136 ($generated@@122 $generated@@137) $generated@@138 $generated@@139) ($generated@@136 $generated@@137 $generated@@138 $generated@@139))
 :pattern ( ($generated@@136 ($generated@@122 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@86 $generated@@140 $generated@@141) (= $generated@@140 $generated@@141))
 :pattern ( ($generated@@86 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (<= 0 $generated@@143) (<= $generated@@143 ($generated@@36 $generated@@142))) (= ($generated@@36 ($generated@@51 $generated@@142 $generated@@143)) $generated@@143))
 :pattern ( ($generated@@36 ($generated@@51 $generated@@142 $generated@@143)))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@144 $generated@@31) (or ($generated@@78 $generated@@144) ($generated@@80 $generated@@144)))
 :pattern ( ($generated@@80 $generated@@144) ($generated@@28 $generated@@29 $generated@@144 $generated@@31))
 :pattern ( ($generated@@78 $generated@@144) ($generated@@28 $generated@@29 $generated@@144 $generated@@31))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@145 $generated@@56) (or ($generated@@82 $generated@@145) ($generated@@84 $generated@@145)))
 :pattern ( ($generated@@84 $generated@@145) ($generated@@28 $generated@@29 $generated@@145 $generated@@56))
 :pattern ( ($generated@@82 $generated@@145) ($generated@@28 $generated@@29 $generated@@145 $generated@@56))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> ($generated@@69 $generated@@146 $generated) (and (= ($generated@@90 $generated@@13 ($generated@@38 $generated@@13 $generated@@146)) $generated@@146) ($generated@@28 $generated@@13 ($generated@@38 $generated@@13 $generated@@146) $generated)))
 :pattern ( ($generated@@69 $generated@@146 $generated))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and ($generated@@80 $generated@@147) ($generated@@80 $generated@@148)) (= ($generated@@57 $generated@@147 $generated@@148)  (and ($generated@@57 ($generated@@125 $generated@@147) ($generated@@125 $generated@@148)) ($generated@@57 ($generated@@124 $generated@@147) ($generated@@124 $generated@@148)))))
 :pattern ( ($generated@@57 $generated@@147 $generated@@148) ($generated@@80 $generated@@147))
 :pattern ( ($generated@@57 $generated@@147 $generated@@148) ($generated@@80 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@69 ($generated@@90 $generated@@151 $generated@@149) $generated@@150) ($generated@@28 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@69 ($generated@@90 $generated@@151 $generated@@149) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (<= 0 ($generated@@36 $generated@@152))
 :pattern ( ($generated@@36 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ($generated@@155 Int) ) (!  (=> (and (and (<= 0 $generated@@154) (< $generated@@154 $generated@@155)) (<= $generated@@155 ($generated@@36 $generated@@153))) (< ($generated@@93 ($generated@@52 ($generated@@51 $generated@@153 $generated@@154) ($generated@@46 $generated@@153 $generated@@155))) ($generated@@93 $generated@@153)))
 :pattern ( ($generated@@93 ($generated@@52 ($generated@@51 $generated@@153 $generated@@154) ($generated@@46 $generated@@153 $generated@@155))))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and ($generated@@78 $generated@@156) ($generated@@78 $generated@@157)) ($generated@@57 $generated@@156 $generated@@157))
 :pattern ( ($generated@@57 $generated@@156 $generated@@157) ($generated@@78 $generated@@156))
 :pattern ( ($generated@@57 $generated@@156 $generated@@157) ($generated@@78 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@43 ($generated@@30 $generated@@158 $generated@@159)) $generated@@6)
 :pattern ( ($generated@@30 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@125 ($generated@@30 $generated@@160 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@30 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@124 ($generated@@30 $generated@@162 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@30 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@43 ($generated@@35 $generated@@164 $generated@@165)) $generated@@8)
 :pattern ( ($generated@@35 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@166 ($generated@@35 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@35 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@169 ($generated@@35 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@35 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@172 ($generated@@68 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@68 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@27 ($generated@@68 $generated@@174)) $generated@@1)
 :pattern ( ($generated@@68 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@38 $generated@@176 ($generated@@90 $generated@@176 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@90 $generated@@176 $generated@@175))
)))
(assert  (=> (<= 2 $generated@@120) (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 T@U) ) (!  (=> (or ($generated@@177 $generated@@180 $generated@@181) (and (< 2 $generated@@120) ($generated@@28 $generated@@67 $generated@@181 ($generated@@68 $generated)))) (and (and (=> ($generated@@84 ($generated@@136 $generated@@179 $generated@@180 $generated@@181)) (and (< ($generated@@36 ($generated@@169 ($generated@@136 $generated@@179 $generated@@180 $generated@@181))) ($generated@@36 $generated@@181)) ($generated@@86 ($generated@@169 ($generated@@136 $generated@@179 $generated@@180 $generated@@181)) ($generated@@46 $generated@@181 (- ($generated@@36 $generated@@181) ($generated@@36 ($generated@@169 ($generated@@136 $generated@@179 $generated@@180 $generated@@181)))))))) (=> ($generated@@84 ($generated@@136 $generated@@179 $generated@@180 $generated@@181)) ($generated@@86 ($generated@@121 ($generated@@122 $generated@@178) $generated@@180 ($generated@@166 ($generated@@136 $generated@@179 $generated@@180 $generated@@181))) ($generated@@51 $generated@@181 (- ($generated@@36 $generated@@181) ($generated@@36 ($generated@@169 ($generated@@136 $generated@@179 $generated@@180 $generated@@181)))))))) ($generated@@28 $generated@@29 ($generated@@136 $generated@@179 $generated@@180 $generated@@181) $generated@@56)))
 :pattern ( ($generated@@136 $generated@@179 $generated@@180 $generated@@181))
))))
(assert  (=> (<= 1 $generated@@120) (forall (($generated@@182 T@U) ($generated@@183 Int) ($generated@@184 T@U) ) (!  (=> (or ($generated@@123 $generated@@183 $generated@@184) (and (< 1 $generated@@120) ($generated@@28 $generated@@29 $generated@@184 $generated@@31))) (and (=> (not ($generated@@78 $generated@@184)) (let (($generated@@185 ($generated@@124 $generated@@184)))
(let (($generated@@186 ($generated@@125 $generated@@184)))
 (and ($generated@@123 (+ $generated@@183 1) $generated@@186) ($generated@@123 (+ $generated@@183 1) $generated@@185))))) (= ($generated@@121 ($generated@@122 $generated@@182) $generated@@183 $generated@@184) (ite ($generated@@78 $generated@@184) ($generated@@47 $generated@@42 ($generated@@90 $generated@@13 ($generated@@17 $generated@@183))) (let (($generated@@187 ($generated@@124 $generated@@184)))
(let (($generated@@188 ($generated@@125 $generated@@184)))
($generated@@52 ($generated@@121 $generated@@182 (+ $generated@@183 1) $generated@@188) ($generated@@121 $generated@@182 (+ $generated@@183 1) $generated@@187))))))))
 :pattern ( ($generated@@121 ($generated@@122 $generated@@182) $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (< ($generated@@37 $generated@@189) ($generated@@37 ($generated@@30 $generated@@189 $generated@@190)))
 :pattern ( ($generated@@30 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (< ($generated@@37 $generated@@192) ($generated@@37 ($generated@@30 $generated@@191 $generated@@192)))
 :pattern ( ($generated@@30 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (< ($generated@@37 $generated@@193) ($generated@@37 ($generated@@35 $generated@@193 $generated@@194)))
 :pattern ( ($generated@@35 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! (< ($generated@@93 $generated@@196) ($generated@@37 ($generated@@35 $generated@@195 $generated@@196)))
 :pattern ( ($generated@@35 $generated@@195 $generated@@196))
)))
(assert  (=> (<= 1 $generated@@120) (forall (($generated@@197 T@U) ($generated@@198 Int) ($generated@@199 T@U) ) (!  (=> (or ($generated@@123 ($generated@@62 $generated@@198) ($generated@@64 $generated@@29 $generated@@199)) (and (< 1 $generated@@120) ($generated@@28 $generated@@29 $generated@@199 $generated@@31))) (and (=> (not ($generated@@16 ($generated@@64 $generated@@12 ($generated@@15 ($generated@@78 ($generated@@64 $generated@@29 $generated@@199)))))) (let (($generated@@200 ($generated@@64 $generated@@29 ($generated@@124 ($generated@@64 $generated@@29 $generated@@199)))))
(let (($generated@@201 ($generated@@64 $generated@@29 ($generated@@125 ($generated@@64 $generated@@29 $generated@@199)))))
 (and ($generated@@123 ($generated@@62 (+ $generated@@198 1)) $generated@@201) ($generated@@123 ($generated@@62 (+ $generated@@198 1)) $generated@@200))))) (= ($generated@@121 ($generated@@122 $generated@@197) ($generated@@62 $generated@@198) ($generated@@64 $generated@@29 $generated@@199)) (ite ($generated@@78 ($generated@@64 $generated@@29 $generated@@199)) ($generated@@47 $generated@@42 ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 $generated@@198)))) (let (($generated@@202 ($generated@@64 $generated@@29 ($generated@@124 ($generated@@64 $generated@@29 $generated@@199)))))
(let (($generated@@203 ($generated@@64 $generated@@29 ($generated@@125 ($generated@@64 $generated@@29 $generated@@199)))))
($generated@@52 ($generated@@121 ($generated@@122 $generated@@197) ($generated@@62 (+ $generated@@198 1)) $generated@@203) ($generated@@121 ($generated@@122 $generated@@197) ($generated@@62 (+ $generated@@198 1)) $generated@@202))))))))
 :weight 3
 :pattern ( ($generated@@121 ($generated@@122 $generated@@197) ($generated@@62 $generated@@198) ($generated@@64 $generated@@29 $generated@@199)))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@215 T@T) ($generated@@216 T@T) ($generated@@217 T@T) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@204 $generated@@215 $generated@@216 $generated@@217 ($generated@@211 $generated@@215 $generated@@216 $generated@@217 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@220 $generated@@221) $generated@@218)
 :weight 0
)) (and (forall (($generated@@222 T@T) ($generated@@223 T@T) ($generated@@224 T@T) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@204 $generated@@222 $generated@@223 $generated@@224 ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@204 $generated@@222 $generated@@223 $generated@@224 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)) (forall (($generated@@231 T@T) ($generated@@232 T@T) ($generated@@233 T@T) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@204 $generated@@231 $generated@@232 $generated@@233 ($generated@@211 $generated@@231 $generated@@232 $generated@@233 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@204 $generated@@231 $generated@@232 $generated@@233 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (= ($generated@@11 $generated@@205) 5)) (= ($generated@@11 $generated@@206) 6)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (= ($generated@@208 $generated@@240 $generated@@241 ($generated@@212 $generated@@240 $generated@@241 $generated@@243 $generated@@244 $generated@@242) $generated@@244) $generated@@242)
 :weight 0
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or (= $generated@@249 $generated@@250) (= ($generated@@208 $generated@@245 $generated@@246 ($generated@@212 $generated@@245 $generated@@246 $generated@@248 $generated@@249 $generated@@247) $generated@@250) ($generated@@208 $generated@@245 $generated@@246 $generated@@248 $generated@@250)))
 :weight 0
))) (= ($generated@@11 $generated@@209) 7)) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (= ($generated@@11 ($generated@@210 $generated@@251 $generated@@252)) 8))) (forall (($generated@@253 T@T) ($generated@@254 T@T) ) (! (= ($generated@@213 ($generated@@210 $generated@@253 $generated@@254)) $generated@@253)
 :pattern ( ($generated@@210 $generated@@253 $generated@@254))
))) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (! (= ($generated@@214 ($generated@@210 $generated@@255 $generated@@256)) $generated@@256)
 :pattern ( ($generated@@210 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 Bool) ($generated@@261 T@U) ($generated@@262 T@U) ) (! (= ($generated@@16 ($generated@@204 $generated@@205 $generated@@206 $generated@@12 ($generated@@207 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@261 $generated@@262))  (=> (and (or (not (= $generated@@261 $generated@@257)) (not true)) ($generated@@16 ($generated@@38 $generated@@12 ($generated@@208 $generated@@206 $generated@@209 ($generated@@208 $generated@@205 ($generated@@210 $generated@@206 $generated@@209) $generated@@258 $generated@@261) $generated@@259)))) $generated@@260))
 :pattern ( ($generated@@204 $generated@@205 $generated@@206 $generated@@12 ($generated@@207 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@261 $generated@@262))
)))
(assert  (=> (<= 1 $generated@@120) (forall (($generated@@263 T@U) ($generated@@264 Int) ($generated@@265 T@U) ) (!  (=> (or ($generated@@123 $generated@@264 $generated@@265) (and (< 1 $generated@@120) ($generated@@28 $generated@@29 $generated@@265 $generated@@31))) (and (and (and (not ($generated@@86 ($generated@@121 $generated@@263 $generated@@264 $generated@@265) $generated@@42)) (>= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@121 $generated@@263 $generated@@264 $generated@@265) ($generated@@62 0)))) $generated@@264)) (= (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@121 $generated@@263 $generated@@264 $generated@@265) ($generated@@62 0)))) $generated@@264) ($generated@@57 $generated@@265 $generated@@44))) ($generated@@28 $generated@@67 ($generated@@121 $generated@@263 $generated@@264 $generated@@265) ($generated@@68 $generated))))
 :pattern ( ($generated@@121 $generated@@263 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (= ($generated@@266 ($generated@@47 $generated@@268 $generated@@269)) $generated@@268) (= ($generated@@267 ($generated@@47 $generated@@268 $generated@@269)) $generated@@269))
 :pattern ( ($generated@@47 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> ($generated@@69 $generated@@270 ($generated@@68 $generated@@271)) (and (= ($generated@@90 $generated@@67 ($generated@@38 $generated@@67 $generated@@270)) $generated@@270) ($generated@@28 $generated@@67 ($generated@@38 $generated@@67 $generated@@270) ($generated@@68 $generated@@271))))
 :pattern ( ($generated@@69 $generated@@270 ($generated@@68 $generated@@271)))
)))
(assert (= ($generated@@27 $generated@@31) $generated@@3))
(assert (= ($generated@@272 $generated@@31) $generated@@9))
(assert (= ($generated@@27 $generated@@56) $generated@@4))
(assert (= ($generated@@272 $generated@@56) $generated@@10))
(assert (forall (($generated@@273 T@U) ($generated@@274 Int) ($generated@@275 Int) ) (!  (=> (and (and (<= 0 $generated@@274) (<= $generated@@274 $generated@@275)) (< $generated@@275 ($generated@@36 $generated@@273))) (= ($generated@@34 ($generated@@46 $generated@@273 $generated@@274) (- $generated@@275 $generated@@274)) ($generated@@34 $generated@@273 $generated@@275)))
 :weight 25
 :pattern ( ($generated@@34 $generated@@273 $generated@@275) ($generated@@46 $generated@@273 $generated@@274))
)))
(assert (= $generated@@44 ($generated@@64 $generated@@29 $generated@@44)))
(assert (= $generated@@45 ($generated@@64 $generated@@29 $generated@@45)))
(assert (forall (($generated@@276 T@U) ($generated@@277 Int) ($generated@@278 Int) ) (!  (=> (and (and (<= 0 $generated@@277) (<= 0 $generated@@278)) (<= (+ $generated@@277 $generated@@278) ($generated@@36 $generated@@276))) (= ($generated@@46 ($generated@@46 $generated@@276 $generated@@277) $generated@@278) ($generated@@46 $generated@@276 (+ $generated@@277 $generated@@278))))
 :pattern ( ($generated@@46 ($generated@@46 $generated@@276 $generated@@277) $generated@@278))
)))
(assert  (=> (<= 2 $generated@@120) (forall (($generated@@279 T@U) ($generated@@280 Int) ($generated@@281 T@U) ) (!  (=> (or ($generated@@177 $generated@@280 $generated@@281) (and (< 2 $generated@@120) ($generated@@28 $generated@@67 $generated@@281 ($generated@@68 $generated)))) (and (=> (not (or ($generated@@86 $generated@@281 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@281 ($generated@@62 0)))) $generated@@280))) (=> (or (not (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@281 ($generated@@62 0)))) $generated@@280)) (not true)) (and ($generated@@177 (+ $generated@@280 1) $generated@@281) (let (($generated@@282 ($generated@@136 $generated@@279 (+ $generated@@280 1) $generated@@281)))
 (=> (not ($generated@@82 $generated@@282)) ($generated@@177 (+ $generated@@280 1) ($generated@@169 $generated@@282))))))) (= ($generated@@136 ($generated@@122 $generated@@279) $generated@@280 $generated@@281) (ite  (or ($generated@@86 $generated@@281 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@281 ($generated@@62 0)))) $generated@@280)) $generated@@45 (ite (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@281 ($generated@@62 0)))) $generated@@280) ($generated@@35 ($generated@@64 $generated@@29 $generated@@44) ($generated@@46 $generated@@281 ($generated@@62 1))) (let (($generated@@283 ($generated@@136 $generated@@279 (+ $generated@@280 1) $generated@@281)))
(ite ($generated@@82 $generated@@283) $generated@@45 (let (($generated@@284 ($generated@@136 $generated@@279 (+ $generated@@280 1) ($generated@@169 $generated@@283))))
(ite ($generated@@82 $generated@@284) $generated@@45 ($generated@@35 ($generated@@30 ($generated@@166 $generated@@283) ($generated@@166 $generated@@284)) ($generated@@169 $generated@@284)))))))))))
 :pattern ( ($generated@@136 ($generated@@122 $generated@@279) $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 Int) ) (!  (and (=> (< $generated@@287 ($generated@@36 $generated@@285)) (= ($generated@@34 ($generated@@52 $generated@@285 $generated@@286) $generated@@287) ($generated@@34 $generated@@285 $generated@@287))) (=> (<= ($generated@@36 $generated@@285) $generated@@287) (= ($generated@@34 ($generated@@52 $generated@@285 $generated@@286) $generated@@287) ($generated@@34 $generated@@286 (- $generated@@287 ($generated@@36 $generated@@285))))))
 :pattern ( ($generated@@34 ($generated@@52 $generated@@285 $generated@@286) $generated@@287))
)))
(assert  (=> (<= 2 $generated@@120) (forall (($generated@@288 T@U) ($generated@@289 Int) ($generated@@290 T@U) ) (!  (=> (or ($generated@@177 ($generated@@62 $generated@@289) ($generated@@64 $generated@@67 $generated@@290)) (and (< 2 $generated@@120) ($generated@@28 $generated@@67 $generated@@290 ($generated@@68 $generated)))) (and (=> (not (or ($generated@@86 $generated@@290 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@64 $generated@@67 $generated@@290) ($generated@@62 0)))) $generated@@289))) (=> (or (not (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@64 $generated@@67 $generated@@290) ($generated@@62 0)))) ($generated@@62 $generated@@289))) (not true)) (and ($generated@@177 ($generated@@62 (+ $generated@@289 1)) ($generated@@64 $generated@@67 $generated@@290)) (let (($generated@@291 ($generated@@64 $generated@@29 ($generated@@136 ($generated@@122 $generated@@288) ($generated@@62 (+ $generated@@289 1)) ($generated@@64 $generated@@67 $generated@@290)))))
 (=> (not ($generated@@82 $generated@@291)) ($generated@@177 ($generated@@62 (+ $generated@@289 1)) ($generated@@169 $generated@@291))))))) (= ($generated@@136 ($generated@@122 $generated@@288) ($generated@@62 $generated@@289) ($generated@@64 $generated@@67 $generated@@290)) (ite  (or ($generated@@86 $generated@@290 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@64 $generated@@67 $generated@@290) ($generated@@62 0)))) $generated@@289)) $generated@@45 (ite (= ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 ($generated@@64 $generated@@67 $generated@@290) ($generated@@62 0)))) ($generated@@62 $generated@@289)) ($generated@@35 ($generated@@64 $generated@@29 $generated@@44) ($generated@@64 $generated@@67 ($generated@@46 ($generated@@64 $generated@@67 $generated@@290) ($generated@@62 1)))) (let (($generated@@292 ($generated@@64 $generated@@29 ($generated@@136 ($generated@@122 $generated@@288) ($generated@@62 (+ $generated@@289 1)) ($generated@@64 $generated@@67 $generated@@290)))))
(ite ($generated@@82 $generated@@292) $generated@@45 (let (($generated@@293 ($generated@@64 $generated@@29 ($generated@@136 ($generated@@122 $generated@@288) ($generated@@62 (+ $generated@@289 1)) ($generated@@64 $generated@@67 ($generated@@169 $generated@@292))))))
(ite ($generated@@82 $generated@@293) $generated@@45 ($generated@@35 ($generated@@64 $generated@@29 ($generated@@30 ($generated@@64 $generated@@29 ($generated@@166 $generated@@292)) ($generated@@64 $generated@@29 ($generated@@166 $generated@@293)))) ($generated@@64 $generated@@67 ($generated@@169 $generated@@293))))))))))))
 :weight 3
 :pattern ( ($generated@@136 ($generated@@122 $generated@@288) ($generated@@62 $generated@@289) ($generated@@64 $generated@@67 $generated@@290)))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= ($generated@@30 ($generated@@64 $generated@@29 $generated@@294) ($generated@@64 $generated@@29 $generated@@295)) ($generated@@64 $generated@@29 ($generated@@30 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@30 ($generated@@64 $generated@@29 $generated@@294) ($generated@@64 $generated@@29 $generated@@295)))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (= ($generated@@35 ($generated@@64 $generated@@29 $generated@@296) ($generated@@64 $generated@@67 $generated@@297)) ($generated@@64 $generated@@29 ($generated@@35 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@35 ($generated@@64 $generated@@29 $generated@@296) ($generated@@64 $generated@@67 $generated@@297)))
)))
(assert (forall (($generated@@298 Int) ) (! (= ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 $generated@@298))) ($generated@@64 $generated@@209 ($generated@@90 $generated@@13 ($generated@@17 $generated@@298))))
 :pattern ( ($generated@@90 $generated@@13 ($generated@@17 ($generated@@62 $generated@@298))))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@T) ) (! (= ($generated@@90 $generated@@300 ($generated@@64 $generated@@300 $generated@@299)) ($generated@@64 $generated@@209 ($generated@@90 $generated@@300 $generated@@299)))
 :pattern ( ($generated@@90 $generated@@300 ($generated@@64 $generated@@300 $generated@@299)))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= ($generated@@36 $generated@@301) 0) (= $generated@@301 $generated@@42))
 :pattern ( ($generated@@36 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 Int) ) (!  (=> (= $generated@@303 0) (= ($generated@@51 $generated@@302 $generated@@303) $generated@@42))
 :pattern ( ($generated@@51 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (= ($generated@@28 $generated@@67 $generated@@304 ($generated@@68 $generated@@305)) (forall (($generated@@306 Int) ) (!  (=> (and (<= 0 $generated@@306) (< $generated@@306 ($generated@@36 $generated@@304))) ($generated@@69 ($generated@@34 $generated@@304 $generated@@306) $generated@@305))
 :pattern ( ($generated@@34 $generated@@304 $generated@@306))
)))
 :pattern ( ($generated@@28 $generated@@67 $generated@@304 ($generated@@68 $generated@@305)))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 Int) ) (!  (=> (and (<= 0 $generated@@308) (< $generated@@308 ($generated@@36 $generated@@307))) (< ($generated@@37 ($generated@@38 $generated@@29 ($generated@@34 $generated@@307 $generated@@308))) ($generated@@93 $generated@@307)))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@29 ($generated@@34 $generated@@307 $generated@@308))))
)))
(assert (forall (($generated@@309 T@U) ) (! ($generated@@28 $generated@@13 $generated@@309 $generated)
 :pattern ( ($generated@@28 $generated@@13 $generated@@309 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@310 () T@U)
(declare-fun $generated@@311 () Int)
(declare-fun $generated@@312 (T@U) Bool)
(declare-fun $generated@@313 () T@U)
(declare-fun $generated@@314 (T@U) Bool)
(declare-fun $generated@@315 () T@U)
(declare-fun $generated@@316 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@317  (=> (and (and (and (or ($generated@@86 $generated@@310 $generated@@42) (< ($generated@@18 ($generated@@38 $generated@@13 ($generated@@34 $generated@@310 ($generated@@62 0)))) $generated@@311)) (= ($generated@@136 ($generated@@122 $generated@@178) $generated@@311 $generated@@310) ($generated@@64 $generated@@29 $generated@@45))) (and ($generated@@28 $generated@@29 ($generated@@136 ($generated@@122 $generated@@178) $generated@@311 $generated@@310) $generated@@56) (=> ($generated@@84 ($generated@@136 ($generated@@122 $generated@@178) $generated@@311 $generated@@310)) (< ($generated@@36 ($generated@@169 ($generated@@136 ($generated@@122 ($generated@@122 $generated@@178)) $generated@@311 $generated@@310))) ($generated@@36 $generated@@310))))) (and (and (=> ($generated@@84 ($generated@@136 ($generated@@122 $generated@@178) $generated@@311 $generated@@310)) ($generated@@86 ($generated@@169 ($generated@@136 ($generated@@122 ($generated@@122 $generated@@178)) $generated@@311 $generated@@310)) ($generated@@46 $generated@@310 (- ($generated@@36 $generated@@310) ($generated@@36 ($generated@@169 ($generated@@136 ($generated@@122 ($generated@@122 $generated@@178)) $generated@@311 $generated@@310))))))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@84 ($generated@@136 ($generated@@122 $generated@@178) $generated@@311 $generated@@310)))) ($generated@@86 ($generated@@121 ($generated@@122 ($generated@@122 $generated@@178)) $generated@@311 ($generated@@166 ($generated@@136 ($generated@@122 ($generated@@122 $generated@@178)) $generated@@311 $generated@@310))) ($generated@@51 $generated@@310 (- ($generated@@36 $generated@@310) ($generated@@36 ($generated@@169 ($generated@@136 ($generated@@122 ($generated@@122 $generated@@178)) $generated@@311 $generated@@310)))))))))
(let (($generated@@318  (=> (and ($generated@@86 $generated@@310 $generated@@42) (= (ControlFlow 0 4) 2)) $generated@@317)))
(let (($generated@@319  (=> (not ($generated@@86 $generated@@310 $generated@@42)) (=> (and (and (<= 0 ($generated@@62 0)) (< ($generated@@62 0) ($generated@@36 $generated@@310))) (= (ControlFlow 0 3) 2)) $generated@@317))))
(let (($generated@@320  (=> (not ($generated@@86 $generated@@310 $generated@@42)) (=> (and (<= 0 ($generated@@62 0)) (< ($generated@@62 0) ($generated@@36 $generated@@310))) (and (=> (= (ControlFlow 0 6) 3) $generated@@319) (=> (= (ControlFlow 0 6) 4) $generated@@318))))))
(let (($generated@@321  (=> ($generated@@86 $generated@@310 $generated@@42) (and (=> (= (ControlFlow 0 5) 3) $generated@@319) (=> (= (ControlFlow 0 5) 4) $generated@@318)))))
(let (($generated@@322  (=> (and (and (and ($generated@@312 $generated@@313) ($generated@@314 $generated@@313)) ($generated@@28 $generated@@67 $generated@@310 ($generated@@68 $generated))) (and (= 2 $generated@@120) (= $generated@@315 ($generated@@207 $generated@@316 $generated@@313 $generated@@2 false)))) (and (=> (= (ControlFlow 0 7) 5) $generated@@321) (=> (= (ControlFlow 0 7) 6) $generated@@320)))))
$generated@@322)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
