(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () Int)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 () T@U)
(declare-fun $generated@@102 (T@U) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@168 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@229 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (= ($generated@@12 $generated@@30) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@31 $generated@@33 $generated@@34) $generated@@32)  (and ($generated@@29 $generated@@30 $generated@@33 $generated@@32) ($generated@@29 $generated@@30 $generated@@34 $generated@@32)))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@31 $generated@@33 $generated@@34) $generated@@32))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@35 $generated@@37 $generated@@38) $generated@@36)  (and ($generated@@29 $generated@@30 $generated@@37 $generated@@36) ($generated@@29 $generated@@30 $generated@@38 $generated@@32)))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@35 $generated@@37 $generated@@38) $generated@@36))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@39 $generated@@40 $generated@@41) $generated@@36)  (and ($generated@@29 $generated@@30 $generated@@40 $generated@@32) ($generated@@29 $generated@@30 $generated@@41 $generated@@36)))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@39 $generated@@40 $generated@@41) $generated@@36))
)))
(assert (= ($generated@@42 $generated@@43) $generated@@4))
(assert (= ($generated@@42 $generated@@44) $generated@@5))
(assert (= ($generated@@42 $generated@@45) $generated@@7))
(assert ($generated@@29 $generated@@30 $generated@@43 $generated@@32))
(assert ($generated@@29 $generated@@30 $generated@@44 $generated@@32))
(assert ($generated@@29 $generated@@30 $generated@@45 $generated@@36))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or ($generated@@48 $generated@@53) (and (< 1 $generated@@46) ($generated@@29 $generated@@30 $generated@@53 $generated@@32))) (=> (and ($generated@@47 $generated@@52 $generated@@53) ($generated@@49 $generated@@53)) (and ($generated@@47 $generated@@52 ($generated@@50 $generated@@53)) ($generated@@47 $generated@@52 ($generated@@51 $generated@@53)))))
 :pattern ( ($generated@@47 $generated@@52 $generated@@53))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@54 $generated@@55 $generated@@56) (= $generated@@55 $generated@@56))
 :pattern ( ($generated@@54 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@57 $generated@@59 $generated@@58) $generated@@58)
 :pattern ( ($generated@@57 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@60 $generated@@61) (= ($generated@@42 $generated@@61) $generated@@4))
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@62 $generated@@63) (= ($generated@@42 $generated@@63) $generated@@5))
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@49 $generated@@64) (= ($generated@@42 $generated@@64) $generated@@6))
 :pattern ( ($generated@@49 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@42 $generated@@66) $generated@@7))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@42 $generated@@68) $generated@@8))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@42 $generated@@70) $generated@@9))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@71 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@71 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@49 $generated@@75) (exists (($generated@@76 T@U) ($generated@@77 T@U) ) (= $generated@@75 ($generated@@31 $generated@@76 $generated@@77))))
 :pattern ( ($generated@@49 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@67 $generated@@78) (exists (($generated@@79 T@U) ($generated@@80 T@U) ) (= $generated@@78 ($generated@@35 $generated@@79 $generated@@80))))
 :pattern ( ($generated@@67 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@69 $generated@@81) (exists (($generated@@82 T@U) ($generated@@83 T@U) ) (= $generated@@81 ($generated@@39 $generated@@82 $generated@@83))))
 :pattern ( ($generated@@69 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@60 $generated@@84) (= $generated@@84 $generated@@43))
 :pattern ( ($generated@@60 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@62 $generated@@85) (= $generated@@85 $generated@@44))
 :pattern ( ($generated@@62 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@65 $generated@@86) (= $generated@@86 $generated@@45))
 :pattern ( ($generated@@65 $generated@@86))
)))
(assert  (=> (<= 2 $generated@@46) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or ($generated@@89 $generated@@95) (and (< 2 $generated@@46) ($generated@@29 $generated@@30 $generated@@95 $generated@@36))) (and (=> (not ($generated@@65 $generated@@95)) (and (=> ($generated@@67 $generated@@95) (let (($generated@@96 ($generated@@90 $generated@@95)))
($generated@@89 $generated@@96))) (=> (not ($generated@@67 $generated@@95)) (let (($generated@@97 ($generated@@91 $generated@@95)))
(let (($generated@@98 ($generated@@92 $generated@@95)))
 (and ($generated@@48 $generated@@98) (=> ($generated@@47 ($generated@@88 $generated@@93) $generated@@98) ($generated@@89 $generated@@97)))))))) (= ($generated@@87 ($generated@@88 $generated@@94) $generated@@95) (ite ($generated@@65 $generated@@95) true (ite ($generated@@67 $generated@@95) (let (($generated@@99 ($generated@@90 $generated@@95)))
($generated@@87 $generated@@94 $generated@@99)) (let (($generated@@100 ($generated@@91 $generated@@95)))
(let (($generated@@101 ($generated@@92 $generated@@95)))
 (and ($generated@@47 ($generated@@88 $generated@@93) $generated@@101) ($generated@@87 $generated@@94 $generated@@100)))))))))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@94) $generated@@95))
))))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@48 $generated@@104) (and (< 1 $generated@@46) ($generated@@29 $generated@@30 $generated@@104 $generated@@32))) (and (=> (not ($generated@@60 $generated@@104)) (=> (not ($generated@@62 $generated@@104)) (let (($generated@@105 ($generated@@51 $generated@@104)))
(let (($generated@@106 ($generated@@50 $generated@@104)))
 (and (=> ($generated@@60 $generated@@106) ($generated@@48 $generated@@105)) (=> (not ($generated@@60 $generated@@106)) (and (=> ($generated@@62 $generated@@106) ($generated@@48 $generated@@105)) (=> (not ($generated@@62 $generated@@106)) (let (($generated@@107 ($generated@@51 $generated@@106)))
(let (($generated@@108 ($generated@@50 $generated@@106)))
 (and ($generated@@102 $generated@@108) (=> ($generated@@54 $generated@@108 $generated@@43) (and ($generated@@48 $generated@@107) (=> ($generated@@47 $generated@@103 $generated@@107) ($generated@@48 $generated@@105))))))))))))))) (= ($generated@@47 ($generated@@88 $generated@@103) $generated@@104) (ite ($generated@@60 $generated@@104) true (ite ($generated@@62 $generated@@104) true (let (($generated@@109 ($generated@@51 $generated@@104)))
(let (($generated@@110 ($generated@@50 $generated@@104)))
(ite ($generated@@60 $generated@@110) ($generated@@47 $generated@@103 $generated@@109) (ite ($generated@@62 $generated@@110) ($generated@@47 $generated@@103 $generated@@109) (let (($generated@@111 ($generated@@51 $generated@@110)))
(let (($generated@@112 ($generated@@50 $generated@@110)))
 (and (and ($generated@@54 $generated@@112 $generated@@43) ($generated@@47 $generated@@103 $generated@@111)) ($generated@@47 $generated@@103 $generated@@109)))))))))))))
 :pattern ( ($generated@@47 ($generated@@88 $generated@@103) $generated@@104))
))))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and ($generated@@49 $generated@@113) ($generated@@49 $generated@@114)) (= ($generated@@54 $generated@@113 $generated@@114)  (and ($generated@@54 ($generated@@50 $generated@@113) ($generated@@50 $generated@@114)) ($generated@@54 ($generated@@51 $generated@@113) ($generated@@51 $generated@@114)))))
 :pattern ( ($generated@@54 $generated@@113 $generated@@114) ($generated@@49 $generated@@113))
 :pattern ( ($generated@@54 $generated@@113 $generated@@114) ($generated@@49 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@47 ($generated@@88 $generated@@115) $generated@@116) ($generated@@47 $generated@@115 $generated@@116))
 :pattern ( ($generated@@47 ($generated@@88 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@87 ($generated@@88 $generated@@117) $generated@@118) ($generated@@87 $generated@@117 $generated@@118))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and ($generated@@60 $generated@@119) ($generated@@60 $generated@@120)) ($generated@@54 $generated@@119 $generated@@120))
 :pattern ( ($generated@@54 $generated@@119 $generated@@120) ($generated@@60 $generated@@119))
 :pattern ( ($generated@@54 $generated@@119 $generated@@120) ($generated@@60 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@62 $generated@@121) ($generated@@62 $generated@@122)) ($generated@@54 $generated@@121 $generated@@122))
 :pattern ( ($generated@@54 $generated@@121 $generated@@122) ($generated@@62 $generated@@121))
 :pattern ( ($generated@@54 $generated@@121 $generated@@122) ($generated@@62 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@42 ($generated@@31 $generated@@123 $generated@@124)) $generated@@6)
 :pattern ( ($generated@@31 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@50 ($generated@@31 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@31 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@51 ($generated@@31 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@31 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@42 ($generated@@35 $generated@@129 $generated@@130)) $generated@@8)
 :pattern ( ($generated@@35 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@90 ($generated@@35 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@35 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@133 ($generated@@35 $generated@@134 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@35 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@42 ($generated@@39 $generated@@136 $generated@@137)) $generated@@9)
 :pattern ( ($generated@@39 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@92 ($generated@@39 $generated@@138 $generated@@139)) $generated@@138)
 :pattern ( ($generated@@39 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@91 ($generated@@39 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@39 $generated@@140 $generated@@141))
)))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (or ($generated@@48 ($generated@@57 $generated@@30 $generated@@143)) (and (< 1 $generated@@46) ($generated@@29 $generated@@30 $generated@@143 $generated@@32))) (and (=> (not ($generated@@17 ($generated@@57 $generated@@13 ($generated@@16 ($generated@@60 ($generated@@57 $generated@@30 $generated@@143)))))) (=> (not ($generated@@17 ($generated@@57 $generated@@13 ($generated@@16 ($generated@@62 ($generated@@57 $generated@@30 $generated@@143)))))) (let (($generated@@144 ($generated@@57 $generated@@30 ($generated@@51 ($generated@@57 $generated@@30 $generated@@143)))))
(let (($generated@@145 ($generated@@57 $generated@@30 ($generated@@50 ($generated@@57 $generated@@30 $generated@@143)))))
 (and (=> ($generated@@60 $generated@@145) ($generated@@48 $generated@@144)) (=> (not ($generated@@60 $generated@@145)) (and (=> ($generated@@62 $generated@@145) ($generated@@48 $generated@@144)) (=> (not ($generated@@62 $generated@@145)) (let (($generated@@146 ($generated@@51 $generated@@145)))
(let (($generated@@147 ($generated@@50 $generated@@145)))
 (and ($generated@@102 $generated@@147) (=> ($generated@@54 $generated@@147 $generated@@43) (and ($generated@@48 $generated@@146) (=> ($generated@@47 ($generated@@88 $generated@@142) $generated@@146) ($generated@@48 $generated@@144))))))))))))))) (= ($generated@@47 ($generated@@88 $generated@@142) ($generated@@57 $generated@@30 $generated@@143)) (ite ($generated@@60 ($generated@@57 $generated@@30 $generated@@143)) true (ite ($generated@@62 ($generated@@57 $generated@@30 $generated@@143)) true (let (($generated@@148 ($generated@@57 $generated@@30 ($generated@@51 ($generated@@57 $generated@@30 $generated@@143)))))
(let (($generated@@149 ($generated@@57 $generated@@30 ($generated@@50 ($generated@@57 $generated@@30 $generated@@143)))))
(ite ($generated@@60 $generated@@149) ($generated@@47 ($generated@@88 $generated@@142) $generated@@148) (ite ($generated@@62 $generated@@149) ($generated@@47 ($generated@@88 $generated@@142) $generated@@148) (let (($generated@@150 ($generated@@57 $generated@@30 ($generated@@51 $generated@@149))))
(let (($generated@@151 ($generated@@57 $generated@@30 ($generated@@50 $generated@@149))))
 (and (and ($generated@@54 $generated@@151 $generated@@43) ($generated@@47 ($generated@@88 $generated@@142) $generated@@150)) ($generated@@47 ($generated@@88 $generated@@142) $generated@@148)))))))))))))
 :weight 3
 :pattern ( ($generated@@47 ($generated@@88 $generated@@142) ($generated@@57 $generated@@30 $generated@@143)))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@71 $generated@@153 ($generated@@72 $generated@@153 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@72 $generated@@153 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@102 $generated@@154) (or (or ($generated@@60 $generated@@154) ($generated@@62 $generated@@154)) ($generated@@49 $generated@@154)))
 :pattern ( ($generated@@102 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (< ($generated@@155 $generated@@156) ($generated@@155 ($generated@@31 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@31 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (< ($generated@@155 $generated@@159) ($generated@@155 ($generated@@31 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@31 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (< ($generated@@155 $generated@@160) ($generated@@155 ($generated@@35 $generated@@160 $generated@@161)))
 :pattern ( ($generated@@35 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (< ($generated@@155 $generated@@163) ($generated@@155 ($generated@@35 $generated@@162 $generated@@163)))
 :pattern ( ($generated@@35 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (< ($generated@@155 $generated@@164) ($generated@@155 ($generated@@39 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@39 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (< ($generated@@155 $generated@@167) ($generated@@155 ($generated@@39 $generated@@166 $generated@@167)))
 :pattern ( ($generated@@39 $generated@@166 $generated@@167))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@168 $generated@@179 $generated@@180 $generated@@181 ($generated@@175 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@184 $generated@@185) $generated@@182)
 :weight 0
)) (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@168 $generated@@186 $generated@@187 $generated@@188 ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@168 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@168 $generated@@195 $generated@@196 $generated@@197 ($generated@@175 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@168 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (= ($generated@@12 $generated@@169) 4)) (= ($generated@@12 $generated@@170) 5)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@172 $generated@@204 $generated@@205 ($generated@@176 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@206) $generated@@208) $generated@@206)
 :weight 0
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@213 $generated@@214) (= ($generated@@172 $generated@@209 $generated@@210 ($generated@@176 $generated@@209 $generated@@210 $generated@@212 $generated@@213 $generated@@211) $generated@@214) ($generated@@172 $generated@@209 $generated@@210 $generated@@212 $generated@@214)))
 :weight 0
))) (= ($generated@@12 $generated@@173) 6)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (= ($generated@@12 ($generated@@174 $generated@@215 $generated@@216)) 7))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@177 ($generated@@174 $generated@@217 $generated@@218)) $generated@@217)
 :pattern ( ($generated@@174 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@178 ($generated@@174 $generated@@219 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@174 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@17 ($generated@@168 $generated@@169 $generated@@170 $generated@@13 ($generated@@171 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (or (not (= $generated@@225 $generated@@221)) (not true)) ($generated@@17 ($generated@@71 $generated@@13 ($generated@@172 $generated@@170 $generated@@173 ($generated@@172 $generated@@169 ($generated@@174 $generated@@170 $generated@@173) $generated@@222 $generated@@225) $generated@@223)))) $generated@@224))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170 $generated@@13 ($generated@@171 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@227 $generated@@32) (or (or ($generated@@60 $generated@@227) ($generated@@62 $generated@@227)) ($generated@@49 $generated@@227)))
 :pattern ( ($generated@@49 $generated@@227) ($generated@@29 $generated@@30 $generated@@227 $generated@@32))
 :pattern ( ($generated@@62 $generated@@227) ($generated@@29 $generated@@30 $generated@@227 $generated@@32))
 :pattern ( ($generated@@60 $generated@@227) ($generated@@29 $generated@@30 $generated@@227 $generated@@32))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@228 $generated@@36) (or (or ($generated@@65 $generated@@228) ($generated@@67 $generated@@228)) ($generated@@69 $generated@@228)))
 :pattern ( ($generated@@69 $generated@@228) ($generated@@29 $generated@@30 $generated@@228 $generated@@36))
 :pattern ( ($generated@@67 $generated@@228) ($generated@@29 $generated@@30 $generated@@228 $generated@@36))
 :pattern ( ($generated@@65 $generated@@228) ($generated@@29 $generated@@30 $generated@@228 $generated@@36))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and ($generated@@230 $generated@@232) ($generated@@29 $generated@@30 $generated@@231 $generated@@32)) ($generated@@229 $generated@@30 $generated@@231 $generated@@32 $generated@@232))
 :pattern ( ($generated@@229 $generated@@30 $generated@@231 $generated@@32 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and ($generated@@230 $generated@@234) ($generated@@29 $generated@@30 $generated@@233 $generated@@36)) ($generated@@229 $generated@@30 $generated@@233 $generated@@36 $generated@@234))
 :pattern ( ($generated@@229 $generated@@30 $generated@@233 $generated@@36 $generated@@234))
)))
(assert (= ($generated@@28 $generated@@32) $generated@@2))
(assert (= ($generated@@235 $generated@@32) $generated@@10))
(assert (= ($generated@@28 $generated@@36) $generated@@3))
(assert (= ($generated@@235 $generated@@36) $generated@@11))
(assert (= $generated@@43 ($generated@@57 $generated@@30 $generated@@43)))
(assert (= $generated@@44 ($generated@@57 $generated@@30 $generated@@44)))
(assert (= $generated@@45 ($generated@@57 $generated@@30 $generated@@45)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and ($generated@@230 $generated@@237) (and ($generated@@49 $generated@@236) ($generated@@229 $generated@@30 $generated@@236 $generated@@32 $generated@@237))) ($generated@@229 $generated@@30 ($generated@@50 $generated@@236) $generated@@32 $generated@@237))
 :pattern ( ($generated@@229 $generated@@30 ($generated@@50 $generated@@236) $generated@@32 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and ($generated@@230 $generated@@239) (and ($generated@@49 $generated@@238) ($generated@@229 $generated@@30 $generated@@238 $generated@@32 $generated@@239))) ($generated@@229 $generated@@30 ($generated@@51 $generated@@238) $generated@@32 $generated@@239))
 :pattern ( ($generated@@229 $generated@@30 ($generated@@51 $generated@@238) $generated@@32 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and ($generated@@230 $generated@@241) (and ($generated@@67 $generated@@240) ($generated@@229 $generated@@30 $generated@@240 $generated@@36 $generated@@241))) ($generated@@229 $generated@@30 ($generated@@90 $generated@@240) $generated@@36 $generated@@241))
 :pattern ( ($generated@@229 $generated@@30 ($generated@@90 $generated@@240) $generated@@36 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and ($generated@@230 $generated@@243) (and ($generated@@67 $generated@@242) ($generated@@229 $generated@@30 $generated@@242 $generated@@36 $generated@@243))) ($generated@@229 $generated@@30 ($generated@@133 $generated@@242) $generated@@32 $generated@@243))
 :pattern ( ($generated@@229 $generated@@30 ($generated@@133 $generated@@242) $generated@@32 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and ($generated@@230 $generated@@245) (and ($generated@@69 $generated@@244) ($generated@@229 $generated@@30 $generated@@244 $generated@@36 $generated@@245))) ($generated@@229 $generated@@30 ($generated@@92 $generated@@244) $generated@@32 $generated@@245))
 :pattern ( ($generated@@229 $generated@@30 ($generated@@92 $generated@@244) $generated@@32 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and ($generated@@230 $generated@@247) (and ($generated@@69 $generated@@246) ($generated@@229 $generated@@30 $generated@@246 $generated@@36 $generated@@247))) ($generated@@229 $generated@@30 ($generated@@91 $generated@@246) $generated@@36 $generated@@247))
 :pattern ( ($generated@@229 $generated@@30 ($generated@@91 $generated@@246) $generated@@36 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= ($generated@@31 ($generated@@57 $generated@@30 $generated@@248) ($generated@@57 $generated@@30 $generated@@249)) ($generated@@57 $generated@@30 ($generated@@31 $generated@@248 $generated@@249)))
 :pattern ( ($generated@@31 ($generated@@57 $generated@@30 $generated@@248) ($generated@@57 $generated@@30 $generated@@249)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= ($generated@@35 ($generated@@57 $generated@@30 $generated@@250) ($generated@@57 $generated@@30 $generated@@251)) ($generated@@57 $generated@@30 ($generated@@35 $generated@@250 $generated@@251)))
 :pattern ( ($generated@@35 ($generated@@57 $generated@@30 $generated@@250) ($generated@@57 $generated@@30 $generated@@251)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= ($generated@@39 ($generated@@57 $generated@@30 $generated@@252) ($generated@@57 $generated@@30 $generated@@253)) ($generated@@57 $generated@@30 ($generated@@39 $generated@@252 $generated@@253)))
 :pattern ( ($generated@@39 ($generated@@57 $generated@@30 $generated@@252) ($generated@@57 $generated@@30 $generated@@253)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@T) ) (! (= ($generated@@72 $generated@@255 ($generated@@57 $generated@@255 $generated@@254)) ($generated@@57 $generated@@173 ($generated@@72 $generated@@255 $generated@@254)))
 :pattern ( ($generated@@72 $generated@@255 ($generated@@57 $generated@@255 $generated@@254)))
)))
(assert  (=> (<= 2 $generated@@46) (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (or ($generated@@89 ($generated@@57 $generated@@30 $generated@@257)) (and (< 2 $generated@@46) ($generated@@29 $generated@@30 $generated@@257 $generated@@36))) (and (=> (not ($generated@@17 ($generated@@57 $generated@@13 ($generated@@16 ($generated@@65 ($generated@@57 $generated@@30 $generated@@257)))))) (and (=> ($generated@@17 ($generated@@57 $generated@@13 ($generated@@16 ($generated@@67 ($generated@@57 $generated@@30 $generated@@257))))) (let (($generated@@258 ($generated@@57 $generated@@30 ($generated@@90 ($generated@@57 $generated@@30 $generated@@257)))))
($generated@@89 $generated@@258))) (=> (not ($generated@@17 ($generated@@57 $generated@@13 ($generated@@16 ($generated@@67 ($generated@@57 $generated@@30 $generated@@257)))))) (let (($generated@@259 ($generated@@57 $generated@@30 ($generated@@91 ($generated@@57 $generated@@30 $generated@@257)))))
(let (($generated@@260 ($generated@@57 $generated@@30 ($generated@@92 ($generated@@57 $generated@@30 $generated@@257)))))
 (and ($generated@@48 $generated@@260) (=> ($generated@@47 ($generated@@88 $generated@@93) $generated@@260) ($generated@@89 $generated@@259)))))))) (= ($generated@@87 ($generated@@88 $generated@@256) ($generated@@57 $generated@@30 $generated@@257)) (ite ($generated@@65 ($generated@@57 $generated@@30 $generated@@257)) true (ite ($generated@@67 ($generated@@57 $generated@@30 $generated@@257)) ($generated@@17 (let (($generated@@261 ($generated@@57 $generated@@30 ($generated@@90 ($generated@@57 $generated@@30 $generated@@257)))))
($generated@@57 $generated@@13 ($generated@@16 ($generated@@87 ($generated@@88 $generated@@256) $generated@@261))))) ($generated@@17 (let (($generated@@262 ($generated@@57 $generated@@30 ($generated@@91 ($generated@@57 $generated@@30 $generated@@257)))))
(let (($generated@@263 ($generated@@57 $generated@@30 ($generated@@92 ($generated@@57 $generated@@30 $generated@@257)))))
($generated@@57 $generated@@13 ($generated@@16  (and ($generated@@47 ($generated@@88 $generated@@93) $generated@@263) ($generated@@87 ($generated@@88 $generated@@256) $generated@@262))))))))))))
 :weight 3
 :pattern ( ($generated@@87 ($generated@@88 $generated@@256) ($generated@@57 $generated@@30 $generated@@257)))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! ($generated@@229 $generated@@13 $generated@@265 $generated $generated@@264)
 :pattern ( ($generated@@229 $generated@@13 $generated@@265 $generated $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! ($generated@@29 $generated@@13 $generated@@266 $generated)
 :pattern ( ($generated@@29 $generated@@13 $generated@@266 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@284 true))
(let (($generated@@285  (=> (and (not ($generated@@47 ($generated@@88 $generated@@93) $generated@@267)) (= (ControlFlow 0 9) 6)) $generated@@284)))
(let (($generated@@286  (=> (and ($generated@@47 ($generated@@88 $generated@@93) $generated@@267) ($generated@@229 $generated@@30 $generated@@268 $generated@@36 $generated@@269)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (< ($generated@@155 $generated@@268) ($generated@@155 $generated@@270))) (=> (< ($generated@@155 $generated@@268) ($generated@@155 $generated@@270)) (=> (and ($generated@@89 $generated@@268) (= (ControlFlow 0 7) 6)) $generated@@284))))))
(let (($generated@@287  (=> (= $generated@@270 ($generated@@39 $generated@@271 $generated@@272)) (=> (and ($generated@@29 $generated@@30 $generated@@271 $generated@@32) ($generated@@29 $generated@@30 $generated@@272 $generated@@36)) (=> (and (and (and (= $generated@@273 $generated@@272) ($generated@@29 $generated@@30 $generated@@273 $generated@@36)) (and (= $generated@@268 $generated@@273) (= $generated@@274 $generated@@271))) (and (and ($generated@@29 $generated@@30 $generated@@274 $generated@@32) (= $generated@@267 $generated@@274)) (and ($generated@@229 $generated@@30 $generated@@267 $generated@@32 $generated@@269) ($generated@@48 $generated@@267)))) (and (=> (= (ControlFlow 0 10) 7) $generated@@286) (=> (= (ControlFlow 0 10) 9) $generated@@285)))))))
(let (($generated@@288 true))
(let (($generated@@289  (=> (or (not (= $generated@@270 ($generated@@35 $generated@@275 $generated@@276))) (not true)) (and (=> (= (ControlFlow 0 11) 10) $generated@@287) (=> (= (ControlFlow 0 11) 5) $generated@@288)))))
(let (($generated@@290  (=> (= $generated@@270 ($generated@@35 $generated@@275 $generated@@276)) (=> (and ($generated@@29 $generated@@30 $generated@@275 $generated@@36) ($generated@@29 $generated@@30 $generated@@276 $generated@@32)) (=> (and (and (and (= $generated@@277 $generated@@276) ($generated@@29 $generated@@30 $generated@@277 $generated@@32)) (and (= $generated@@278 $generated@@277) (= $generated@@279 $generated@@275))) (and (and ($generated@@29 $generated@@30 $generated@@279 $generated@@36) (= $generated@@280 $generated@@279)) (and ($generated@@229 $generated@@30 $generated@@280 $generated@@36 $generated@@269) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@155 $generated@@280) ($generated@@155 $generated@@270)))))))
(let (($generated@@291  (=> (or (not (= $generated@@270 $generated@@45)) (not true)) (and (=> (= (ControlFlow 0 12) 4) $generated@@290) (=> (= (ControlFlow 0 12) 11) $generated@@289)))))
(let (($generated@@292 true))
(let (($generated@@293 true))
(let (($generated@@294  (=> (= $generated@@281 ($generated@@171 $generated@@282 $generated@@269 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@293) (=> (= (ControlFlow 0 13) 2) $generated@@292)) (=> (= (ControlFlow 0 13) 12) $generated@@291)))))
(let (($generated@@295  (=> (and (and (and ($generated@@230 $generated@@269) ($generated@@283 $generated@@269)) ($generated@@29 $generated@@30 $generated@@270 $generated@@36)) (and (= 2 $generated@@46) (= (ControlFlow 0 14) 13))) $generated@@294)))
$generated@@295)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
