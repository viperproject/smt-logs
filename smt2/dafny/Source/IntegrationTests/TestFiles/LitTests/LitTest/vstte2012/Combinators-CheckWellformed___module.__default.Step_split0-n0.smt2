(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) Int)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@160 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@220 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) Bool)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@225 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@25) 3))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@41 T@U) ) (!  (=> (or ($generated@@23 $generated@@41) (and (< 2 $generated@@21) ($generated@@24 $generated@@25 $generated@@41 $generated@@26))) (and (=> (not ($generated@@27 $generated@@41)) (=> (not ($generated@@28 $generated@@41)) (let (($generated@@42 ($generated@@29 $generated@@41)))
(let (($generated@@43 ($generated@@30 $generated@@41)))
 (=> (not ($generated@@27 $generated@@43)) (=> (not ($generated@@28 $generated@@43)) (let (($generated@@44 ($generated@@29 $generated@@43)))
(let (($generated@@45 ($generated@@30 $generated@@43)))
 (and (and ($generated@@31 $generated@@45) (=> ($generated@@32 $generated@@45 $generated@@33) (and ($generated@@34 $generated@@44) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@44) ($generated@@34 $generated@@42))))) (=> (not (and (and ($generated@@32 $generated@@45 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@44)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@42))) (=> ($generated@@38 $generated@@45) (and ($generated@@31 ($generated@@30 $generated@@45)) (=> ($generated@@32 ($generated@@30 $generated@@45) $generated@@39) (and ($generated@@34 ($generated@@29 $generated@@45)) (=> ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@45)) (and ($generated@@34 $generated@@44) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@44) ($generated@@34 $generated@@42)))))))))))))))))) (= ($generated@@22 $generated@@41) (ite ($generated@@27 $generated@@41) $generated@@41 (ite ($generated@@28 $generated@@41) $generated@@41 (let (($generated@@46 ($generated@@29 $generated@@41)))
(let (($generated@@47 ($generated@@30 $generated@@41)))
(ite ($generated@@27 $generated@@47) $generated@@41 (ite ($generated@@28 $generated@@47) $generated@@41 (let (($generated@@48 ($generated@@29 $generated@@47)))
(let (($generated@@49 ($generated@@30 $generated@@47)))
(ite  (and (and ($generated@@32 $generated@@49 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@48)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@46)) $generated@@48 (ite  (and (and (and (and ($generated@@38 $generated@@49) ($generated@@32 ($generated@@30 $generated@@49) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@49))) ($generated@@35 ($generated@@36 $generated@@37) $generated@@48)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@46)) ($generated@@40 ($generated@@40 ($generated@@29 $generated@@49) $generated@@46) ($generated@@40 $generated@@48 $generated@@46)) $generated@@41)))))))))))))
 :pattern ( ($generated@@22 $generated@@41))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or ($generated@@51 $generated@@53) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@53 $generated@@26))) (and (=> (not ($generated@@27 $generated@@53)) (=> (not ($generated@@28 $generated@@53)) (let (($generated@@54 ($generated@@29 $generated@@53)))
(let (($generated@@55 ($generated@@30 $generated@@53)))
 (and ($generated@@51 $generated@@55) (=> (not ($generated@@50 $generated@@52 $generated@@55)) ($generated@@51 $generated@@54))))))) (= ($generated@@50 ($generated@@36 $generated@@52) $generated@@53) (ite ($generated@@27 $generated@@53) true (ite ($generated@@28 $generated@@53) false (let (($generated@@56 ($generated@@29 $generated@@53)))
(let (($generated@@57 ($generated@@30 $generated@@53)))
 (or ($generated@@50 $generated@@52 $generated@@57) ($generated@@50 $generated@@52 $generated@@56)))))))))
 :pattern ( ($generated@@50 ($generated@@36 $generated@@52) $generated@@53))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@40 $generated@@58 $generated@@59) $generated@@26)  (and ($generated@@24 $generated@@25 $generated@@58 $generated@@26) ($generated@@24 $generated@@25 $generated@@59 $generated@@26)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@40 $generated@@58 $generated@@59) $generated@@26))
)))
(assert (= ($generated@@60 $generated@@39) $generated@@1))
(assert (= ($generated@@60 $generated@@33) $generated@@2))
(assert ($generated@@24 $generated@@25 $generated@@39 $generated@@26))
(assert ($generated@@24 $generated@@25 $generated@@33 $generated@@26))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (or ($generated@@34 $generated@@62) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@62 $generated@@26))) (=> (and ($generated@@35 $generated@@61 $generated@@62) ($generated@@38 $generated@@62)) (and ($generated@@35 $generated@@61 ($generated@@30 $generated@@62)) ($generated@@35 $generated@@61 ($generated@@29 $generated@@62)))))
 :pattern ( ($generated@@35 $generated@@61 $generated@@62))
))))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@64 T@U) ) (!  (=> (or ($generated@@23 ($generated@@63 $generated@@25 $generated@@64)) (and (< 2 $generated@@21) ($generated@@24 $generated@@25 $generated@@64 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@63 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@63 $generated@@25 $generated@@64)))))) (=> (not ($generated@@10 ($generated@@63 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@63 $generated@@25 $generated@@64)))))) (let (($generated@@65 ($generated@@63 $generated@@25 ($generated@@29 ($generated@@63 $generated@@25 $generated@@64)))))
(let (($generated@@66 ($generated@@63 $generated@@25 ($generated@@30 ($generated@@63 $generated@@25 $generated@@64)))))
 (=> (not ($generated@@27 $generated@@66)) (=> (not ($generated@@28 $generated@@66)) (let (($generated@@67 ($generated@@29 $generated@@66)))
(let (($generated@@68 ($generated@@30 $generated@@66)))
 (and (and ($generated@@31 $generated@@68) (=> ($generated@@32 $generated@@68 $generated@@33) (and ($generated@@34 $generated@@67) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@67) ($generated@@34 $generated@@65))))) (=> (not (and (and ($generated@@32 $generated@@68 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@67)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@65))) (=> ($generated@@38 $generated@@68) (and ($generated@@31 ($generated@@30 $generated@@68)) (=> ($generated@@32 ($generated@@30 $generated@@68) $generated@@39) (and ($generated@@34 ($generated@@29 $generated@@68)) (=> ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@68)) (and ($generated@@34 $generated@@67) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@67) ($generated@@34 $generated@@65)))))))))))))))))) (= ($generated@@22 ($generated@@63 $generated@@25 $generated@@64)) (ite ($generated@@27 ($generated@@63 $generated@@25 $generated@@64)) $generated@@64 (ite ($generated@@28 ($generated@@63 $generated@@25 $generated@@64)) $generated@@64 (let (($generated@@69 ($generated@@63 $generated@@25 ($generated@@29 ($generated@@63 $generated@@25 $generated@@64)))))
(let (($generated@@70 ($generated@@63 $generated@@25 ($generated@@30 ($generated@@63 $generated@@25 $generated@@64)))))
(ite ($generated@@27 $generated@@70) $generated@@64 (ite ($generated@@28 $generated@@70) $generated@@64 (let (($generated@@71 ($generated@@63 $generated@@25 ($generated@@29 $generated@@70))))
(let (($generated@@72 ($generated@@63 $generated@@25 ($generated@@30 $generated@@70))))
(ite  (and (and ($generated@@32 $generated@@72 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@71)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@69)) $generated@@71 (ite  (and (and (and (and ($generated@@38 $generated@@72) ($generated@@32 ($generated@@30 $generated@@72) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@63 $generated@@25 ($generated@@29 $generated@@72)))) ($generated@@35 ($generated@@36 $generated@@37) $generated@@71)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@69)) ($generated@@40 ($generated@@63 $generated@@25 ($generated@@40 ($generated@@63 $generated@@25 ($generated@@29 $generated@@72)) $generated@@69)) ($generated@@63 $generated@@25 ($generated@@40 $generated@@71 $generated@@69))) $generated@@64)))))))))))))
 :weight 3
 :pattern ( ($generated@@22 ($generated@@63 $generated@@25 $generated@@64)))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@32 $generated@@73 $generated@@74) (= $generated@@73 $generated@@74))
 :pattern ( ($generated@@32 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@75 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@63 $generated@@78 $generated@@77) $generated@@77)
 :pattern ( ($generated@@63 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@27 $generated@@79) (= ($generated@@60 $generated@@79) $generated@@1))
 :pattern ( ($generated@@27 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@28 $generated@@80) (= ($generated@@60 $generated@@80) $generated@@2))
 :pattern ( ($generated@@28 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@38 $generated@@81) (= ($generated@@60 $generated@@81) $generated@@3))
 :pattern ( ($generated@@38 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 ($generated@@82 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@82 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@38 $generated@@86) (exists (($generated@@87 T@U) ($generated@@88 T@U) ) (= $generated@@86 ($generated@@40 $generated@@87 $generated@@88))))
 :pattern ( ($generated@@38 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@27 $generated@@89) (= $generated@@89 $generated@@39))
 :pattern ( ($generated@@27 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@28 $generated@@90) (= $generated@@90 $generated@@33))
 :pattern ( ($generated@@28 $generated@@90))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@92 T@U) ) (!  (=> (or ($generated@@23 $generated@@92) (and (< 2 $generated@@21) ($generated@@24 $generated@@25 $generated@@92 $generated@@26))) (and (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@92)) (and (not ($generated@@50 ($generated@@36 $generated@@37) ($generated@@22 $generated@@92))) (or ($generated@@32 ($generated@@22 $generated@@92) $generated@@92) (< ($generated@@91 ($generated@@36 $generated@@37) ($generated@@22 $generated@@92)) ($generated@@91 ($generated@@36 $generated@@37) $generated@@92))))) ($generated@@24 $generated@@25 ($generated@@22 $generated@@92) $generated@@26)))
 :pattern ( ($generated@@22 $generated@@92))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (or ($generated@@51 ($generated@@63 $generated@@25 $generated@@94)) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@94 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@63 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@63 $generated@@25 $generated@@94)))))) (=> (not ($generated@@10 ($generated@@63 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@63 $generated@@25 $generated@@94)))))) (let (($generated@@95 ($generated@@63 $generated@@25 ($generated@@29 ($generated@@63 $generated@@25 $generated@@94)))))
(let (($generated@@96 ($generated@@63 $generated@@25 ($generated@@30 ($generated@@63 $generated@@25 $generated@@94)))))
 (and ($generated@@51 $generated@@96) (=> (not ($generated@@50 ($generated@@36 $generated@@93) $generated@@96)) ($generated@@51 $generated@@95))))))) (= ($generated@@50 ($generated@@36 $generated@@93) ($generated@@63 $generated@@25 $generated@@94)) (ite ($generated@@27 ($generated@@63 $generated@@25 $generated@@94)) true (ite ($generated@@28 ($generated@@63 $generated@@25 $generated@@94)) false ($generated@@10 (let (($generated@@97 ($generated@@63 $generated@@25 ($generated@@29 ($generated@@63 $generated@@25 $generated@@94)))))
(let (($generated@@98 ($generated@@63 $generated@@25 ($generated@@30 ($generated@@63 $generated@@25 $generated@@94)))))
($generated@@63 $generated@@6 ($generated@@9  (or ($generated@@50 ($generated@@36 $generated@@93) $generated@@98) ($generated@@50 ($generated@@36 $generated@@93) $generated@@97))))))))))))
 :weight 3
 :pattern ( ($generated@@50 ($generated@@36 $generated@@93) ($generated@@63 $generated@@25 $generated@@94)))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@99 ($generated@@63 $generated@@25 $generated@@101)) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@101 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@63 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@63 $generated@@25 $generated@@101)))))) (=> (not ($generated@@10 ($generated@@63 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@63 $generated@@25 $generated@@101)))))) (let (($generated@@102 ($generated@@63 $generated@@25 ($generated@@29 ($generated@@63 $generated@@25 $generated@@101)))))
(let (($generated@@103 ($generated@@63 $generated@@25 ($generated@@30 ($generated@@63 $generated@@25 $generated@@101)))))
 (and ($generated@@99 $generated@@103) ($generated@@99 $generated@@102)))))) (= ($generated@@91 ($generated@@36 $generated@@100) ($generated@@63 $generated@@25 $generated@@101)) (ite ($generated@@27 ($generated@@63 $generated@@25 $generated@@101)) 1 (ite ($generated@@28 ($generated@@63 $generated@@25 $generated@@101)) 1 (let (($generated@@104 ($generated@@63 $generated@@25 ($generated@@29 ($generated@@63 $generated@@25 $generated@@101)))))
(let (($generated@@105 ($generated@@63 $generated@@25 ($generated@@30 ($generated@@63 $generated@@25 $generated@@101)))))
($generated@@75 (+ (+ 1 ($generated@@91 ($generated@@36 $generated@@100) $generated@@105)) ($generated@@91 ($generated@@36 $generated@@100) $generated@@104))))))))))
 :weight 3
 :pattern ( ($generated@@91 ($generated@@36 $generated@@100) ($generated@@63 $generated@@25 $generated@@101)))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (or ($generated@@99 $generated@@107) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@107 $generated@@26))) (<= ($generated@@75 0) ($generated@@91 $generated@@106 $generated@@107)))
 :pattern ( ($generated@@91 $generated@@106 $generated@@107))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (or ($generated@@34 $generated@@109) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@109 $generated@@26))) (and (=> (not ($generated@@27 $generated@@109)) (=> (not ($generated@@28 $generated@@109)) (let (($generated@@110 ($generated@@29 $generated@@109)))
(let (($generated@@111 ($generated@@30 $generated@@109)))
 (and (=> ($generated@@27 $generated@@111) ($generated@@34 $generated@@110)) (=> (not ($generated@@27 $generated@@111)) (and (=> ($generated@@28 $generated@@111) ($generated@@34 $generated@@110)) (=> (not ($generated@@28 $generated@@111)) (let (($generated@@112 ($generated@@29 $generated@@111)))
(let (($generated@@113 ($generated@@30 $generated@@111)))
 (and ($generated@@31 $generated@@113) (=> ($generated@@32 $generated@@113 $generated@@39) (and ($generated@@34 $generated@@112) (=> ($generated@@35 $generated@@108 $generated@@112) ($generated@@34 $generated@@110))))))))))))))) (= ($generated@@35 ($generated@@36 $generated@@108) $generated@@109) (ite ($generated@@27 $generated@@109) true (ite ($generated@@28 $generated@@109) true (let (($generated@@114 ($generated@@29 $generated@@109)))
(let (($generated@@115 ($generated@@30 $generated@@109)))
(ite ($generated@@27 $generated@@115) ($generated@@35 $generated@@108 $generated@@114) (ite ($generated@@28 $generated@@115) ($generated@@35 $generated@@108 $generated@@114) (let (($generated@@116 ($generated@@29 $generated@@115)))
(let (($generated@@117 ($generated@@30 $generated@@115)))
 (and (and ($generated@@32 $generated@@117 $generated@@39) ($generated@@35 $generated@@108 $generated@@116)) ($generated@@35 $generated@@108 $generated@@114)))))))))))))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@108) $generated@@109))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or ($generated@@99 $generated@@119) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@119 $generated@@26))) (and (=> (not ($generated@@27 $generated@@119)) (=> (not ($generated@@28 $generated@@119)) (let (($generated@@120 ($generated@@29 $generated@@119)))
(let (($generated@@121 ($generated@@30 $generated@@119)))
 (and ($generated@@99 $generated@@121) ($generated@@99 $generated@@120)))))) (= ($generated@@91 ($generated@@36 $generated@@118) $generated@@119) (ite ($generated@@27 $generated@@119) 1 (ite ($generated@@28 $generated@@119) 1 (let (($generated@@122 ($generated@@29 $generated@@119)))
(let (($generated@@123 ($generated@@30 $generated@@119)))
(+ (+ 1 ($generated@@91 $generated@@118 $generated@@123)) ($generated@@91 $generated@@118 $generated@@122)))))))))
 :pattern ( ($generated@@91 ($generated@@36 $generated@@118) $generated@@119))
))))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (and ($generated@@38 $generated@@124) ($generated@@38 $generated@@125)) (= ($generated@@32 $generated@@124 $generated@@125)  (and ($generated@@32 ($generated@@30 $generated@@124) ($generated@@30 $generated@@125)) ($generated@@32 ($generated@@29 $generated@@124) ($generated@@29 $generated@@125)))))
 :pattern ( ($generated@@32 $generated@@124 $generated@@125) ($generated@@38 $generated@@124))
 :pattern ( ($generated@@32 $generated@@124 $generated@@125) ($generated@@38 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@35 ($generated@@36 $generated@@126) $generated@@127) ($generated@@35 $generated@@126 $generated@@127))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@126) $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@50 ($generated@@36 $generated@@128) $generated@@129) ($generated@@50 $generated@@128 $generated@@129))
 :pattern ( ($generated@@50 ($generated@@36 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and ($generated@@27 $generated@@130) ($generated@@27 $generated@@131)) ($generated@@32 $generated@@130 $generated@@131))
 :pattern ( ($generated@@32 $generated@@130 $generated@@131) ($generated@@27 $generated@@130))
 :pattern ( ($generated@@32 $generated@@130 $generated@@131) ($generated@@27 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and ($generated@@28 $generated@@132) ($generated@@28 $generated@@133)) ($generated@@32 $generated@@132 $generated@@133))
 :pattern ( ($generated@@32 $generated@@132 $generated@@133) ($generated@@28 $generated@@132))
 :pattern ( ($generated@@32 $generated@@132 $generated@@133) ($generated@@28 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@60 ($generated@@40 $generated@@134 $generated@@135)) $generated@@3)
 :pattern ( ($generated@@40 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@30 ($generated@@40 $generated@@136 $generated@@137)) $generated@@136)
 :pattern ( ($generated@@40 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@29 ($generated@@40 $generated@@138 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@40 $generated@@138 $generated@@139))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (or ($generated@@34 ($generated@@63 $generated@@25 $generated@@141)) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@141 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@63 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@63 $generated@@25 $generated@@141)))))) (=> (not ($generated@@10 ($generated@@63 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@63 $generated@@25 $generated@@141)))))) (let (($generated@@142 ($generated@@63 $generated@@25 ($generated@@29 ($generated@@63 $generated@@25 $generated@@141)))))
(let (($generated@@143 ($generated@@63 $generated@@25 ($generated@@30 ($generated@@63 $generated@@25 $generated@@141)))))
 (and (=> ($generated@@27 $generated@@143) ($generated@@34 $generated@@142)) (=> (not ($generated@@27 $generated@@143)) (and (=> ($generated@@28 $generated@@143) ($generated@@34 $generated@@142)) (=> (not ($generated@@28 $generated@@143)) (let (($generated@@144 ($generated@@29 $generated@@143)))
(let (($generated@@145 ($generated@@30 $generated@@143)))
 (and ($generated@@31 $generated@@145) (=> ($generated@@32 $generated@@145 $generated@@39) (and ($generated@@34 $generated@@144) (=> ($generated@@35 ($generated@@36 $generated@@140) $generated@@144) ($generated@@34 $generated@@142))))))))))))))) (= ($generated@@35 ($generated@@36 $generated@@140) ($generated@@63 $generated@@25 $generated@@141)) (ite ($generated@@27 ($generated@@63 $generated@@25 $generated@@141)) true (ite ($generated@@28 ($generated@@63 $generated@@25 $generated@@141)) true (let (($generated@@146 ($generated@@63 $generated@@25 ($generated@@29 ($generated@@63 $generated@@25 $generated@@141)))))
(let (($generated@@147 ($generated@@63 $generated@@25 ($generated@@30 ($generated@@63 $generated@@25 $generated@@141)))))
(ite ($generated@@27 $generated@@147) ($generated@@35 ($generated@@36 $generated@@140) $generated@@146) (ite ($generated@@28 $generated@@147) ($generated@@35 ($generated@@36 $generated@@140) $generated@@146) (let (($generated@@148 ($generated@@63 $generated@@25 ($generated@@29 $generated@@147))))
(let (($generated@@149 ($generated@@63 $generated@@25 ($generated@@30 $generated@@147))))
 (and (and ($generated@@32 $generated@@149 $generated@@39) ($generated@@35 ($generated@@36 $generated@@140) $generated@@148)) ($generated@@35 ($generated@@36 $generated@@140) $generated@@146)))))))))))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@36 $generated@@140) ($generated@@63 $generated@@25 $generated@@141)))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@82 $generated@@151 ($generated@@83 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@83 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@31 $generated@@152) (or (or ($generated@@27 $generated@@152) ($generated@@28 $generated@@152)) ($generated@@38 $generated@@152)))
 :pattern ( ($generated@@31 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (< ($generated@@153 $generated@@154) ($generated@@153 ($generated@@40 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@40 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (< ($generated@@153 $generated@@157) ($generated@@153 ($generated@@40 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@40 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@91 ($generated@@36 $generated@@158) $generated@@159) ($generated@@91 $generated@@158 $generated@@159))
 :pattern ( ($generated@@91 ($generated@@36 $generated@@158) $generated@@159))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@160 $generated@@171 $generated@@172 $generated@@173 ($generated@@167 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@176 $generated@@177) $generated@@174)
 :weight 0
)) (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@183 $generated@@185) (= ($generated@@160 $generated@@178 $generated@@179 $generated@@180 ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@160 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@160 $generated@@187 $generated@@188 $generated@@189 ($generated@@167 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)))) (= ($generated@@5 $generated@@161) 4)) (= ($generated@@5 $generated@@162) 5)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@164 $generated@@196 $generated@@197 ($generated@@168 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@198) $generated@@200) $generated@@198)
 :weight 0
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@205 $generated@@206) (= ($generated@@164 $generated@@201 $generated@@202 ($generated@@168 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@203) $generated@@206) ($generated@@164 $generated@@201 $generated@@202 $generated@@204 $generated@@206)))
 :weight 0
))) (= ($generated@@5 $generated@@165) 6)) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@5 ($generated@@166 $generated@@207 $generated@@208)) 7))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@169 ($generated@@166 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@166 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@170 ($generated@@166 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@166 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (= ($generated@@10 ($generated@@160 $generated@@161 $generated@@162 $generated@@6 ($generated@@163 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (or (not (= $generated@@217 $generated@@213)) (not true)) ($generated@@10 ($generated@@82 $generated@@6 ($generated@@164 $generated@@162 $generated@@165 ($generated@@164 $generated@@161 ($generated@@166 $generated@@162 $generated@@165) $generated@@214 $generated@@217) $generated@@215)))) $generated@@216))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162 $generated@@6 ($generated@@163 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@219 $generated@@26) (or (or ($generated@@27 $generated@@219) ($generated@@28 $generated@@219)) ($generated@@38 $generated@@219)))
 :pattern ( ($generated@@38 $generated@@219) ($generated@@24 $generated@@25 $generated@@219 $generated@@26))
 :pattern ( ($generated@@28 $generated@@219) ($generated@@24 $generated@@25 $generated@@219 $generated@@26))
 :pattern ( ($generated@@27 $generated@@219) ($generated@@24 $generated@@25 $generated@@219 $generated@@26))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and ($generated@@221 $generated@@223) ($generated@@24 $generated@@25 $generated@@222 $generated@@26)) ($generated@@220 $generated@@25 $generated@@222 $generated@@26 $generated@@223))
 :pattern ( ($generated@@220 $generated@@25 $generated@@222 $generated@@26 $generated@@223))
)))
(assert (= ($generated@@224 $generated@@26) $generated@@0))
(assert (= ($generated@@225 $generated@@26) $generated@@4))
(assert (= $generated@@39 ($generated@@63 $generated@@25 $generated@@39)))
(assert (= $generated@@33 ($generated@@63 $generated@@25 $generated@@33)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and ($generated@@221 $generated@@227) (and ($generated@@38 $generated@@226) ($generated@@220 $generated@@25 $generated@@226 $generated@@26 $generated@@227))) ($generated@@220 $generated@@25 ($generated@@30 $generated@@226) $generated@@26 $generated@@227))
 :pattern ( ($generated@@220 $generated@@25 ($generated@@30 $generated@@226) $generated@@26 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and ($generated@@221 $generated@@229) (and ($generated@@38 $generated@@228) ($generated@@220 $generated@@25 $generated@@228 $generated@@26 $generated@@229))) ($generated@@220 $generated@@25 ($generated@@29 $generated@@228) $generated@@26 $generated@@229))
 :pattern ( ($generated@@220 $generated@@25 ($generated@@29 $generated@@228) $generated@@26 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= ($generated@@40 ($generated@@63 $generated@@25 $generated@@230) ($generated@@63 $generated@@25 $generated@@231)) ($generated@@63 $generated@@25 ($generated@@40 $generated@@230 $generated@@231)))
 :pattern ( ($generated@@40 ($generated@@63 $generated@@25 $generated@@230) ($generated@@63 $generated@@25 $generated@@231)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@83 $generated@@7 ($generated@@11 ($generated@@75 $generated@@232))) ($generated@@63 $generated@@165 ($generated@@83 $generated@@7 ($generated@@11 $generated@@232))))
 :pattern ( ($generated@@83 $generated@@7 ($generated@@11 ($generated@@75 $generated@@232))))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@T) ) (! (= ($generated@@83 $generated@@234 ($generated@@63 $generated@@234 $generated@@233)) ($generated@@63 $generated@@165 ($generated@@83 $generated@@234 $generated@@233)))
 :pattern ( ($generated@@83 $generated@@234 ($generated@@63 $generated@@234 $generated@@233)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 32) (let (($generated@@254  (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@235)) (not ($generated@@50 ($generated@@36 ($generated@@36 $generated@@37)) ($generated@@22 $generated@@235))))) (=> (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@235)) (not ($generated@@50 ($generated@@36 ($generated@@36 $generated@@37)) ($generated@@22 $generated@@235)))) (=> (= (ControlFlow 0 6) (- 0 5)) (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@235)) (or ($generated@@32 ($generated@@22 $generated@@235) $generated@@235) (< ($generated@@91 ($generated@@36 ($generated@@36 $generated@@37)) ($generated@@22 $generated@@235)) ($generated@@91 ($generated@@36 ($generated@@36 $generated@@37)) $generated@@235)))))))))
(let (($generated@@255  (=> (and (and (not (and (and (and (and ($generated@@38 $generated@@236) ($generated@@32 ($generated@@30 $generated@@236) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@236))) ($generated@@35 ($generated@@36 $generated@@37) $generated@@237)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@238))) (= ($generated@@22 $generated@@235) $generated@@235)) (and ($generated@@24 $generated@@25 ($generated@@22 $generated@@235) $generated@@26) (= (ControlFlow 0 12) 6))) $generated@@254)))
(let (($generated@@256  (=> (and (not (and (and (and ($generated@@38 $generated@@236) ($generated@@32 ($generated@@30 $generated@@236) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@236))) ($generated@@35 ($generated@@36 $generated@@37) $generated@@237))) (= (ControlFlow 0 14) 12)) $generated@@255)))
(let (($generated@@257  (=> (and (and (and (and (and ($generated@@38 $generated@@236) ($generated@@32 ($generated@@30 $generated@@236) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@236))) ($generated@@35 ($generated@@36 $generated@@37) $generated@@237)) ($generated@@220 $generated@@25 $generated@@238 $generated@@26 $generated@@239)) (and ($generated@@34 $generated@@238) (= (ControlFlow 0 13) 12))) $generated@@255)))
(let (($generated@@258  (=> (not (and (and ($generated@@38 $generated@@236) ($generated@@32 ($generated@@30 $generated@@236) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@236)))) (and (=> (= (ControlFlow 0 16) 13) $generated@@257) (=> (= (ControlFlow 0 16) 14) $generated@@256)))))
(let (($generated@@259  (=> (and (and (and ($generated@@38 $generated@@236) ($generated@@32 ($generated@@30 $generated@@236) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@236))) (and ($generated@@220 $generated@@25 $generated@@237 $generated@@26 $generated@@239) ($generated@@34 $generated@@237))) (and (=> (= (ControlFlow 0 15) 13) $generated@@257) (=> (= (ControlFlow 0 15) 14) $generated@@256)))))
(let (($generated@@260  (=> (not (and ($generated@@38 $generated@@236) ($generated@@32 ($generated@@30 $generated@@236) $generated@@39))) (and (=> (= (ControlFlow 0 19) 15) $generated@@259) (=> (= (ControlFlow 0 19) 16) $generated@@258)))))
(let (($generated@@261  (=> (and ($generated@@38 $generated@@236) ($generated@@32 ($generated@@30 $generated@@236) $generated@@39)) (and (=> (= (ControlFlow 0 17) (- 0 18)) ($generated@@38 $generated@@236)) (=> ($generated@@38 $generated@@236) (=> (= $generated@@240 ($generated@@29 $generated@@236)) (=> (and ($generated@@220 $generated@@25 $generated@@240 $generated@@26 $generated@@239) ($generated@@34 ($generated@@29 $generated@@236))) (and (=> (= (ControlFlow 0 17) 15) $generated@@259) (=> (= (ControlFlow 0 17) 16) $generated@@258)))))))))
(let (($generated@@262  (=> (not ($generated@@38 $generated@@236)) (and (=> (= (ControlFlow 0 22) 17) $generated@@261) (=> (= (ControlFlow 0 22) 19) $generated@@260)))))
(let (($generated@@263  (=> ($generated@@38 $generated@@236) (and (=> (= (ControlFlow 0 20) (- 0 21)) ($generated@@38 $generated@@236)) (=> ($generated@@38 $generated@@236) (and (=> (= (ControlFlow 0 20) 17) $generated@@261) (=> (= (ControlFlow 0 20) 19) $generated@@260)))))))
(let (($generated@@264  (=> (not (and (and ($generated@@32 $generated@@236 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@237)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@238))) (and (=> (= (ControlFlow 0 23) 20) $generated@@263) (=> (= (ControlFlow 0 23) 22) $generated@@262)))))
(let (($generated@@265  (=> (and (not (and ($generated@@32 $generated@@236 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@237))) (= (ControlFlow 0 25) 23)) $generated@@264)))
(let (($generated@@266  (=> (and (and (and ($generated@@32 $generated@@236 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@237)) ($generated@@220 $generated@@25 $generated@@238 $generated@@26 $generated@@239)) (and ($generated@@34 $generated@@238) (= (ControlFlow 0 24) 23))) $generated@@264)))
(let (($generated@@267  (=> (not ($generated@@32 $generated@@236 $generated@@33)) (and (=> (= (ControlFlow 0 27) 24) $generated@@266) (=> (= (ControlFlow 0 27) 25) $generated@@265)))))
(let (($generated@@268  (=> ($generated@@32 $generated@@236 $generated@@33) (=> (and ($generated@@220 $generated@@25 $generated@@237 $generated@@26 $generated@@239) ($generated@@34 $generated@@237)) (and (=> (= (ControlFlow 0 26) 24) $generated@@266) (=> (= (ControlFlow 0 26) 25) $generated@@265))))))
(let (($generated@@269  (=> (and (or (not (= $generated@@241 $generated@@33)) (not true)) (= $generated@@241 ($generated@@40 $generated@@242 $generated@@243))) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@242 $generated@@26) ($generated@@24 $generated@@25 $generated@@243 $generated@@26)) (and (= $generated@@244 $generated@@243) ($generated@@24 $generated@@25 $generated@@244 $generated@@26))) (and (and (= $generated@@237 $generated@@244) (= $generated@@245 $generated@@242)) (and ($generated@@24 $generated@@25 $generated@@245 $generated@@26) (= $generated@@236 $generated@@245)))) (and (=> (= (ControlFlow 0 28) 26) $generated@@268) (=> (= (ControlFlow 0 28) 27) $generated@@267))))))
(let (($generated@@270  (=> (and (and (= $generated@@241 $generated@@33) (= ($generated@@22 $generated@@235) $generated@@235)) (and ($generated@@24 $generated@@25 ($generated@@22 $generated@@235) $generated@@26) (= (ControlFlow 0 11) 6))) $generated@@254)))
(let (($generated@@271  (=> (or (not (= $generated@@241 $generated@@39)) (not true)) (and (=> (= (ControlFlow 0 29) 11) $generated@@270) (=> (= (ControlFlow 0 29) 28) $generated@@269)))))
(let (($generated@@272  (=> (and (and (= $generated@@241 $generated@@39) (= ($generated@@22 $generated@@235) $generated@@235)) (and ($generated@@24 $generated@@25 ($generated@@22 $generated@@235) $generated@@26) (= (ControlFlow 0 10) 6))) $generated@@254)))
(let (($generated@@273  (=> (and (or (not (= $generated@@235 $generated@@33)) (not true)) (= $generated@@235 ($generated@@40 $generated@@246 $generated@@247))) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@246 $generated@@26) ($generated@@24 $generated@@25 $generated@@247 $generated@@26)) (and (= $generated@@248 $generated@@247) ($generated@@24 $generated@@25 $generated@@248 $generated@@26))) (and (and (= $generated@@238 $generated@@248) (= $generated@@249 $generated@@246)) (and ($generated@@24 $generated@@25 $generated@@249 $generated@@26) (= $generated@@241 $generated@@249)))) (and (=> (= (ControlFlow 0 30) 10) $generated@@272) (=> (= (ControlFlow 0 30) 29) $generated@@271))))))
(let (($generated@@274  (=> (and (and (= $generated@@235 $generated@@33) (= ($generated@@22 $generated@@235) $generated@@235)) (and ($generated@@24 $generated@@25 ($generated@@22 $generated@@235) $generated@@26) (= (ControlFlow 0 9) 6))) $generated@@254)))
(let (($generated@@275  (=> (or (not (= $generated@@235 $generated@@39)) (not true)) (and (=> (= (ControlFlow 0 31) 9) $generated@@274) (=> (= (ControlFlow 0 31) 30) $generated@@273)))))
(let (($generated@@276  (=> (and (and (= $generated@@235 $generated@@39) (= ($generated@@22 $generated@@235) $generated@@235)) (and ($generated@@24 $generated@@25 ($generated@@22 $generated@@235) $generated@@26) (= (ControlFlow 0 8) 6))) $generated@@254)))
(let (($generated@@277  (=> ($generated@@24 $generated@@25 ($generated@@22 $generated@@235) $generated@@26) (=> (and (and ($generated@@220 $generated@@25 $generated@@235 $generated@@26 $generated@@239) ($generated@@51 $generated@@235)) (and (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@235)) ($generated@@220 $generated@@25 $generated@@235 $generated@@26 $generated@@239))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or ($generated@@32 $generated@@235 $generated@@235) (< ($generated@@153 $generated@@235) ($generated@@153 $generated@@235)))) (=> (or ($generated@@32 $generated@@235 $generated@@235) (< ($generated@@153 $generated@@235) ($generated@@153 $generated@@235))) (=> (and (or ($generated@@32 $generated@@235 $generated@@235) ($generated@@23 $generated@@235)) (= $generated@@250 ($generated@@22 $generated@@235))) (=> (and (and ($generated@@220 $generated@@25 $generated@@250 $generated@@26 $generated@@239) ($generated@@51 ($generated@@22 $generated@@235))) (and (not ($generated@@50 ($generated@@36 $generated@@37) ($generated@@22 $generated@@235))) ($generated@@220 $generated@@25 $generated@@235 $generated@@26 $generated@@239))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or ($generated@@32 $generated@@235 $generated@@235) (< ($generated@@153 $generated@@235) ($generated@@153 $generated@@235)))) (=> (or ($generated@@32 $generated@@235 $generated@@235) (< ($generated@@153 $generated@@235) ($generated@@153 $generated@@235))) (=> (and (and (or ($generated@@32 $generated@@235 $generated@@235) ($generated@@23 $generated@@235)) (not ($generated@@32 ($generated@@22 $generated@@235) $generated@@235))) (and ($generated@@220 $generated@@25 $generated@@235 $generated@@26 $generated@@239) (= (ControlFlow 0 2) (- 0 1)))) (or ($generated@@32 $generated@@235 $generated@@235) (< ($generated@@153 $generated@@235) ($generated@@153 $generated@@235))))))))))))))
(let (($generated@@278  (=> (and (and (and ($generated@@221 $generated@@239) ($generated@@251 $generated@@239)) ($generated@@24 $generated@@25 $generated@@235 $generated@@26)) (and (= 2 $generated@@21) (= $generated@@252 ($generated@@163 $generated@@253 $generated@@239 $generated false)))) (and (and (=> (= (ControlFlow 0 32) 2) $generated@@277) (=> (= (ControlFlow 0 32) 8) $generated@@276)) (=> (= (ControlFlow 0 32) 31) $generated@@275)))))
$generated@@278))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
