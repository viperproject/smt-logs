(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) Int)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@84 (Int) Int)
(declare-fun $generated@@93 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@U) Bool)
(declare-fun $generated@@165 (T@U) Int)
(declare-fun $generated@@178 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@238 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@25) 3))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@41 T@U) ) (!  (=> (or ($generated@@23 $generated@@41) (and (< 2 $generated@@21) ($generated@@24 $generated@@25 $generated@@41 $generated@@26))) (and (=> (not ($generated@@27 $generated@@41)) (=> (not ($generated@@28 $generated@@41)) (let (($generated@@42 ($generated@@29 $generated@@41)))
(let (($generated@@43 ($generated@@30 $generated@@41)))
 (=> (not ($generated@@27 $generated@@43)) (=> (not ($generated@@28 $generated@@43)) (let (($generated@@44 ($generated@@29 $generated@@43)))
(let (($generated@@45 ($generated@@30 $generated@@43)))
 (and (and ($generated@@31 $generated@@45) (=> ($generated@@32 $generated@@45 $generated@@33) (and ($generated@@34 $generated@@44) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@44) ($generated@@34 $generated@@42))))) (=> (not (and (and ($generated@@32 $generated@@45 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@44)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@42))) (=> ($generated@@38 $generated@@45) (and ($generated@@31 ($generated@@30 $generated@@45)) (=> ($generated@@32 ($generated@@30 $generated@@45) $generated@@39) (and ($generated@@34 ($generated@@29 $generated@@45)) (=> ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@45)) (and ($generated@@34 $generated@@44) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@44) ($generated@@34 $generated@@42)))))))))))))))))) (= ($generated@@22 $generated@@41) (ite ($generated@@27 $generated@@41) $generated@@41 (ite ($generated@@28 $generated@@41) $generated@@41 (let (($generated@@46 ($generated@@29 $generated@@41)))
(let (($generated@@47 ($generated@@30 $generated@@41)))
(ite ($generated@@27 $generated@@47) $generated@@41 (ite ($generated@@28 $generated@@47) $generated@@41 (let (($generated@@48 ($generated@@29 $generated@@47)))
(let (($generated@@49 ($generated@@30 $generated@@47)))
(ite  (and (and ($generated@@32 $generated@@49 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@48)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@46)) $generated@@48 (ite  (and (and (and (and ($generated@@38 $generated@@49) ($generated@@32 ($generated@@30 $generated@@49) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@49))) ($generated@@35 ($generated@@36 $generated@@37) $generated@@48)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@46)) ($generated@@40 ($generated@@40 ($generated@@29 $generated@@49) $generated@@46) ($generated@@40 $generated@@48 $generated@@46)) $generated@@41)))))))))))))
 :pattern ( ($generated@@22 $generated@@41))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or ($generated@@51 $generated@@53) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@53 $generated@@26))) (and (=> (not ($generated@@27 $generated@@53)) (=> (not ($generated@@28 $generated@@53)) (let (($generated@@54 ($generated@@29 $generated@@53)))
(let (($generated@@55 ($generated@@30 $generated@@53)))
 (and ($generated@@51 $generated@@55) (=> (not ($generated@@50 $generated@@52 $generated@@55)) ($generated@@51 $generated@@54))))))) (= ($generated@@50 ($generated@@36 $generated@@52) $generated@@53) (ite ($generated@@27 $generated@@53) true (ite ($generated@@28 $generated@@53) false (let (($generated@@56 ($generated@@29 $generated@@53)))
(let (($generated@@57 ($generated@@30 $generated@@53)))
 (or ($generated@@50 $generated@@52 $generated@@57) ($generated@@50 $generated@@52 $generated@@56)))))))))
 :pattern ( ($generated@@50 ($generated@@36 $generated@@52) $generated@@53))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@40 $generated@@58 $generated@@59) $generated@@26)  (and ($generated@@24 $generated@@25 $generated@@58 $generated@@26) ($generated@@24 $generated@@25 $generated@@59 $generated@@26)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@40 $generated@@58 $generated@@59) $generated@@26))
)))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@61 $generated@@64) (and (< 3 $generated@@21) ($generated@@24 $generated@@25 $generated@@64 $generated@@26))) (and (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@64)) (and (not ($generated@@50 ($generated@@36 $generated@@37) ($generated@@60 $generated@@63 $generated@@64))) (or ($generated@@32 ($generated@@60 $generated@@63 $generated@@64) $generated@@64) (< ($generated@@62 ($generated@@36 $generated@@37) ($generated@@60 $generated@@63 $generated@@64)) ($generated@@62 ($generated@@36 $generated@@37) $generated@@64))))) ($generated@@24 $generated@@25 ($generated@@60 $generated@@63 $generated@@64) $generated@@26)))
 :pattern ( ($generated@@60 $generated@@63 $generated@@64))
))))
(assert (= ($generated@@65 $generated@@39) $generated@@1))
(assert (= ($generated@@65 $generated@@33) $generated@@2))
(assert ($generated@@24 $generated@@25 $generated@@39 $generated@@26))
(assert ($generated@@24 $generated@@25 $generated@@33 $generated@@26))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@34 $generated@@67) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@67 $generated@@26))) (=> (and ($generated@@35 $generated@@66 $generated@@67) ($generated@@38 $generated@@67)) (and ($generated@@35 $generated@@66 ($generated@@30 $generated@@67)) ($generated@@35 $generated@@66 ($generated@@29 $generated@@67)))))
 :pattern ( ($generated@@35 $generated@@66 $generated@@67))
))))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@69 T@U) ) (!  (=> (or ($generated@@23 ($generated@@68 $generated@@25 $generated@@69)) (and (< 2 $generated@@21) ($generated@@24 $generated@@25 $generated@@69 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@68 $generated@@25 $generated@@69)))))) (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@68 $generated@@25 $generated@@69)))))) (let (($generated@@70 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@69)))))
(let (($generated@@71 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@69)))))
 (=> (not ($generated@@27 $generated@@71)) (=> (not ($generated@@28 $generated@@71)) (let (($generated@@72 ($generated@@29 $generated@@71)))
(let (($generated@@73 ($generated@@30 $generated@@71)))
 (and (and ($generated@@31 $generated@@73) (=> ($generated@@32 $generated@@73 $generated@@33) (and ($generated@@34 $generated@@72) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@72) ($generated@@34 $generated@@70))))) (=> (not (and (and ($generated@@32 $generated@@73 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@72)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@70))) (=> ($generated@@38 $generated@@73) (and ($generated@@31 ($generated@@30 $generated@@73)) (=> ($generated@@32 ($generated@@30 $generated@@73) $generated@@39) (and ($generated@@34 ($generated@@29 $generated@@73)) (=> ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@73)) (and ($generated@@34 $generated@@72) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@72) ($generated@@34 $generated@@70)))))))))))))))))) (= ($generated@@22 ($generated@@68 $generated@@25 $generated@@69)) (ite ($generated@@27 ($generated@@68 $generated@@25 $generated@@69)) $generated@@69 (ite ($generated@@28 ($generated@@68 $generated@@25 $generated@@69)) $generated@@69 (let (($generated@@74 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@69)))))
(let (($generated@@75 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@69)))))
(ite ($generated@@27 $generated@@75) $generated@@69 (ite ($generated@@28 $generated@@75) $generated@@69 (let (($generated@@76 ($generated@@68 $generated@@25 ($generated@@29 $generated@@75))))
(let (($generated@@77 ($generated@@68 $generated@@25 ($generated@@30 $generated@@75))))
(ite  (and (and ($generated@@32 $generated@@77 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@76)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@74)) $generated@@76 (ite  (and (and (and (and ($generated@@38 $generated@@77) ($generated@@32 ($generated@@30 $generated@@77) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 ($generated@@29 $generated@@77)))) ($generated@@35 ($generated@@36 $generated@@37) $generated@@76)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@74)) ($generated@@40 ($generated@@68 $generated@@25 ($generated@@40 ($generated@@68 $generated@@25 ($generated@@29 $generated@@77)) $generated@@74)) ($generated@@68 $generated@@25 ($generated@@40 $generated@@76 $generated@@74))) $generated@@69)))))))))))))
 :weight 3
 :pattern ( ($generated@@22 ($generated@@68 $generated@@25 $generated@@69)))
))))
(assert  (=> (<= 4 $generated@@21) (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@79 $generated@@81) (and (< 4 $generated@@21) (and ($generated@@24 $generated@@25 $generated@@81 $generated@@26) (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@81))))) (and (and (and (and ($generated@@31 ($generated@@60 ($generated@@36 $generated@@37) $generated@@81)) ($generated@@31 $generated@@81)) ($generated@@61 $generated@@81)) (=> (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) $generated@@81) $generated@@81)) (and ($generated@@61 $generated@@81) ($generated@@79 ($generated@@60 ($generated@@36 $generated@@37) $generated@@81))))) (= ($generated@@78 ($generated@@36 $generated@@80) $generated@@81) (ite ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) $generated@@81) $generated@@81) $generated@@81 ($generated@@78 $generated@@80 ($generated@@60 ($generated@@36 $generated@@37) $generated@@81))))))
 :pattern ( ($generated@@78 ($generated@@36 $generated@@80) $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@32 $generated@@82 $generated@@83) (= $generated@@82 $generated@@83))
 :pattern ( ($generated@@32 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@84 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@68 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@68 $generated@@87 $generated@@86))
)))
(assert  (=> (<= 4 $generated@@21) (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (or ($generated@@79 $generated@@89) (and (< 4 $generated@@21) (and ($generated@@24 $generated@@25 $generated@@89 $generated@@26) (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@89))))) ($generated@@24 $generated@@25 ($generated@@78 $generated@@88 $generated@@89) $generated@@26))
 :pattern ( ($generated@@78 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@27 $generated@@90) (= ($generated@@65 $generated@@90) $generated@@1))
 :pattern ( ($generated@@27 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@28 $generated@@91) (= ($generated@@65 $generated@@91) $generated@@2))
 :pattern ( ($generated@@28 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@38 $generated@@92) (= ($generated@@65 $generated@@92) $generated@@3))
 :pattern ( ($generated@@38 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@93 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@93 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@38 $generated@@97) (exists (($generated@@98 T@U) ($generated@@99 T@U) ) (= $generated@@97 ($generated@@40 $generated@@98 $generated@@99))))
 :pattern ( ($generated@@38 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@27 $generated@@100) (= $generated@@100 $generated@@39))
 :pattern ( ($generated@@27 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@28 $generated@@101) (= $generated@@101 $generated@@33))
 :pattern ( ($generated@@28 $generated@@101))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@102 T@U) ) (!  (=> (or ($generated@@23 $generated@@102) (and (< 2 $generated@@21) ($generated@@24 $generated@@25 $generated@@102 $generated@@26))) (and (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@102)) (and (not ($generated@@50 ($generated@@36 $generated@@37) ($generated@@22 $generated@@102))) (or ($generated@@32 ($generated@@22 $generated@@102) $generated@@102) (< ($generated@@62 ($generated@@36 $generated@@37) ($generated@@22 $generated@@102)) ($generated@@62 ($generated@@36 $generated@@37) $generated@@102))))) ($generated@@24 $generated@@25 ($generated@@22 $generated@@102) $generated@@26)))
 :pattern ( ($generated@@22 $generated@@102))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@51 ($generated@@68 $generated@@25 $generated@@104)) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@104 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@68 $generated@@25 $generated@@104)))))) (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@68 $generated@@25 $generated@@104)))))) (let (($generated@@105 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@104)))))
(let (($generated@@106 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@104)))))
 (and ($generated@@51 $generated@@106) (=> (not ($generated@@50 ($generated@@36 $generated@@103) $generated@@106)) ($generated@@51 $generated@@105))))))) (= ($generated@@50 ($generated@@36 $generated@@103) ($generated@@68 $generated@@25 $generated@@104)) (ite ($generated@@27 ($generated@@68 $generated@@25 $generated@@104)) true (ite ($generated@@28 ($generated@@68 $generated@@25 $generated@@104)) false ($generated@@10 (let (($generated@@107 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@104)))))
(let (($generated@@108 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@104)))))
($generated@@68 $generated@@6 ($generated@@9  (or ($generated@@50 ($generated@@36 $generated@@103) $generated@@108) ($generated@@50 ($generated@@36 $generated@@103) $generated@@107))))))))))))
 :weight 3
 :pattern ( ($generated@@50 ($generated@@36 $generated@@103) ($generated@@68 $generated@@25 $generated@@104)))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or ($generated@@109 ($generated@@68 $generated@@25 $generated@@111)) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@111 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@68 $generated@@25 $generated@@111)))))) (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@68 $generated@@25 $generated@@111)))))) (let (($generated@@112 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@111)))))
(let (($generated@@113 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@111)))))
 (and ($generated@@109 $generated@@113) ($generated@@109 $generated@@112)))))) (= ($generated@@62 ($generated@@36 $generated@@110) ($generated@@68 $generated@@25 $generated@@111)) (ite ($generated@@27 ($generated@@68 $generated@@25 $generated@@111)) 1 (ite ($generated@@28 ($generated@@68 $generated@@25 $generated@@111)) 1 (let (($generated@@114 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@111)))))
(let (($generated@@115 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@111)))))
($generated@@84 (+ (+ 1 ($generated@@62 ($generated@@36 $generated@@110) $generated@@115)) ($generated@@62 ($generated@@36 $generated@@110) $generated@@114))))))))))
 :weight 3
 :pattern ( ($generated@@62 ($generated@@36 $generated@@110) ($generated@@68 $generated@@25 $generated@@111)))
))))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or ($generated@@61 $generated@@117) (and (< 3 $generated@@21) ($generated@@24 $generated@@25 $generated@@117 $generated@@26))) (and (and (and (and (and ($generated@@31 ($generated@@22 $generated@@117)) ($generated@@31 $generated@@117)) ($generated@@23 $generated@@117)) (=> (not ($generated@@32 ($generated@@22 $generated@@117) $generated@@117)) ($generated@@23 $generated@@117))) (=> ($generated@@32 ($generated@@22 $generated@@117) $generated@@117) (=> ($generated@@38 $generated@@117) (and (and (and (and ($generated@@31 ($generated@@60 $generated@@116 ($generated@@30 $generated@@117))) ($generated@@31 ($generated@@30 $generated@@117))) ($generated@@61 ($generated@@30 $generated@@117))) (=> (not ($generated@@32 ($generated@@60 $generated@@116 ($generated@@30 $generated@@117)) ($generated@@30 $generated@@117))) ($generated@@61 ($generated@@30 $generated@@117)))) (=> ($generated@@32 ($generated@@60 $generated@@116 ($generated@@30 $generated@@117)) ($generated@@30 $generated@@117)) (and (and ($generated@@34 ($generated@@30 $generated@@117)) (=> ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@117)) (and (and ($generated@@31 ($generated@@60 $generated@@116 ($generated@@29 $generated@@117))) ($generated@@31 ($generated@@29 $generated@@117))) ($generated@@61 ($generated@@29 $generated@@117))))) (=> (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@117)) (not ($generated@@32 ($generated@@60 $generated@@116 ($generated@@29 $generated@@117)) ($generated@@29 $generated@@117)))) ($generated@@61 ($generated@@29 $generated@@117))))))))) (= ($generated@@60 ($generated@@36 $generated@@116) $generated@@117) (ite  (not ($generated@@32 ($generated@@22 $generated@@117) $generated@@117)) ($generated@@22 $generated@@117) (ite  (not ($generated@@38 $generated@@117)) $generated@@117 (ite  (not ($generated@@32 ($generated@@60 $generated@@116 ($generated@@30 $generated@@117)) ($generated@@30 $generated@@117))) ($generated@@40 ($generated@@60 $generated@@116 ($generated@@30 $generated@@117)) ($generated@@29 $generated@@117)) (ite  (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@117)) (not ($generated@@32 ($generated@@60 $generated@@116 ($generated@@29 $generated@@117)) ($generated@@29 $generated@@117)))) ($generated@@40 ($generated@@30 $generated@@117) ($generated@@60 $generated@@116 ($generated@@29 $generated@@117))) $generated@@117)))))))
 :pattern ( ($generated@@60 ($generated@@36 $generated@@116) $generated@@117))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or ($generated@@109 $generated@@119) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@119 $generated@@26))) (<= ($generated@@84 0) ($generated@@62 $generated@@118 $generated@@119)))
 :pattern ( ($generated@@62 $generated@@118 $generated@@119))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or ($generated@@34 $generated@@121) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@121 $generated@@26))) (and (=> (not ($generated@@27 $generated@@121)) (=> (not ($generated@@28 $generated@@121)) (let (($generated@@122 ($generated@@29 $generated@@121)))
(let (($generated@@123 ($generated@@30 $generated@@121)))
 (and (=> ($generated@@27 $generated@@123) ($generated@@34 $generated@@122)) (=> (not ($generated@@27 $generated@@123)) (and (=> ($generated@@28 $generated@@123) ($generated@@34 $generated@@122)) (=> (not ($generated@@28 $generated@@123)) (let (($generated@@124 ($generated@@29 $generated@@123)))
(let (($generated@@125 ($generated@@30 $generated@@123)))
 (and ($generated@@31 $generated@@125) (=> ($generated@@32 $generated@@125 $generated@@39) (and ($generated@@34 $generated@@124) (=> ($generated@@35 $generated@@120 $generated@@124) ($generated@@34 $generated@@122))))))))))))))) (= ($generated@@35 ($generated@@36 $generated@@120) $generated@@121) (ite ($generated@@27 $generated@@121) true (ite ($generated@@28 $generated@@121) true (let (($generated@@126 ($generated@@29 $generated@@121)))
(let (($generated@@127 ($generated@@30 $generated@@121)))
(ite ($generated@@27 $generated@@127) ($generated@@35 $generated@@120 $generated@@126) (ite ($generated@@28 $generated@@127) ($generated@@35 $generated@@120 $generated@@126) (let (($generated@@128 ($generated@@29 $generated@@127)))
(let (($generated@@129 ($generated@@30 $generated@@127)))
 (and (and ($generated@@32 $generated@@129 $generated@@39) ($generated@@35 $generated@@120 $generated@@128)) ($generated@@35 $generated@@120 $generated@@126)))))))))))))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@120) $generated@@121))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or ($generated@@109 $generated@@131) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@131 $generated@@26))) (and (=> (not ($generated@@27 $generated@@131)) (=> (not ($generated@@28 $generated@@131)) (let (($generated@@132 ($generated@@29 $generated@@131)))
(let (($generated@@133 ($generated@@30 $generated@@131)))
 (and ($generated@@109 $generated@@133) ($generated@@109 $generated@@132)))))) (= ($generated@@62 ($generated@@36 $generated@@130) $generated@@131) (ite ($generated@@27 $generated@@131) 1 (ite ($generated@@28 $generated@@131) 1 (let (($generated@@134 ($generated@@29 $generated@@131)))
(let (($generated@@135 ($generated@@30 $generated@@131)))
(+ (+ 1 ($generated@@62 $generated@@130 $generated@@135)) ($generated@@62 $generated@@130 $generated@@134)))))))))
 :pattern ( ($generated@@62 ($generated@@36 $generated@@130) $generated@@131))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and ($generated@@38 $generated@@136) ($generated@@38 $generated@@137)) (= ($generated@@32 $generated@@136 $generated@@137)  (and ($generated@@32 ($generated@@30 $generated@@136) ($generated@@30 $generated@@137)) ($generated@@32 ($generated@@29 $generated@@136) ($generated@@29 $generated@@137)))))
 :pattern ( ($generated@@32 $generated@@136 $generated@@137) ($generated@@38 $generated@@136))
 :pattern ( ($generated@@32 $generated@@136 $generated@@137) ($generated@@38 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@35 ($generated@@36 $generated@@138) $generated@@139) ($generated@@35 $generated@@138 $generated@@139))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@50 ($generated@@36 $generated@@140) $generated@@141) ($generated@@50 $generated@@140 $generated@@141))
 :pattern ( ($generated@@50 ($generated@@36 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and ($generated@@27 $generated@@142) ($generated@@27 $generated@@143)) ($generated@@32 $generated@@142 $generated@@143))
 :pattern ( ($generated@@32 $generated@@142 $generated@@143) ($generated@@27 $generated@@142))
 :pattern ( ($generated@@32 $generated@@142 $generated@@143) ($generated@@27 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and ($generated@@28 $generated@@144) ($generated@@28 $generated@@145)) ($generated@@32 $generated@@144 $generated@@145))
 :pattern ( ($generated@@32 $generated@@144 $generated@@145) ($generated@@28 $generated@@144))
 :pattern ( ($generated@@32 $generated@@144 $generated@@145) ($generated@@28 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@65 ($generated@@40 $generated@@146 $generated@@147)) $generated@@3)
 :pattern ( ($generated@@40 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@30 ($generated@@40 $generated@@148 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@40 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@29 ($generated@@40 $generated@@150 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@40 $generated@@150 $generated@@151))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (or ($generated@@34 ($generated@@68 $generated@@25 $generated@@153)) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@153 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@68 $generated@@25 $generated@@153)))))) (=> (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@68 $generated@@25 $generated@@153)))))) (let (($generated@@154 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@153)))))
(let (($generated@@155 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@153)))))
 (and (=> ($generated@@27 $generated@@155) ($generated@@34 $generated@@154)) (=> (not ($generated@@27 $generated@@155)) (and (=> ($generated@@28 $generated@@155) ($generated@@34 $generated@@154)) (=> (not ($generated@@28 $generated@@155)) (let (($generated@@156 ($generated@@29 $generated@@155)))
(let (($generated@@157 ($generated@@30 $generated@@155)))
 (and ($generated@@31 $generated@@157) (=> ($generated@@32 $generated@@157 $generated@@39) (and ($generated@@34 $generated@@156) (=> ($generated@@35 ($generated@@36 $generated@@152) $generated@@156) ($generated@@34 $generated@@154))))))))))))))) (= ($generated@@35 ($generated@@36 $generated@@152) ($generated@@68 $generated@@25 $generated@@153)) (ite ($generated@@27 ($generated@@68 $generated@@25 $generated@@153)) true (ite ($generated@@28 ($generated@@68 $generated@@25 $generated@@153)) true (let (($generated@@158 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@153)))))
(let (($generated@@159 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@153)))))
(ite ($generated@@27 $generated@@159) ($generated@@35 ($generated@@36 $generated@@152) $generated@@158) (ite ($generated@@28 $generated@@159) ($generated@@35 ($generated@@36 $generated@@152) $generated@@158) (let (($generated@@160 ($generated@@68 $generated@@25 ($generated@@29 $generated@@159))))
(let (($generated@@161 ($generated@@68 $generated@@25 ($generated@@30 $generated@@159))))
 (and (and ($generated@@32 $generated@@161 $generated@@39) ($generated@@35 ($generated@@36 $generated@@152) $generated@@160)) ($generated@@35 ($generated@@36 $generated@@152) $generated@@158)))))))))))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@36 $generated@@152) ($generated@@68 $generated@@25 $generated@@153)))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@93 $generated@@163 ($generated@@94 $generated@@163 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@94 $generated@@163 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> ($generated@@31 $generated@@164) (or (or ($generated@@27 $generated@@164) ($generated@@28 $generated@@164)) ($generated@@38 $generated@@164)))
 :pattern ( ($generated@@31 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (< ($generated@@165 $generated@@166) ($generated@@165 ($generated@@40 $generated@@166 $generated@@167)))
 :pattern ( ($generated@@40 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (< ($generated@@165 $generated@@169) ($generated@@165 ($generated@@40 $generated@@168 $generated@@169)))
 :pattern ( ($generated@@40 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@60 ($generated@@36 $generated@@170) $generated@@171) ($generated@@60 $generated@@170 $generated@@171))
 :pattern ( ($generated@@60 ($generated@@36 $generated@@170) $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@62 ($generated@@36 $generated@@172) $generated@@173) ($generated@@62 $generated@@172 $generated@@173))
 :pattern ( ($generated@@62 ($generated@@36 $generated@@172) $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@78 ($generated@@36 $generated@@174) $generated@@175) ($generated@@78 $generated@@174 $generated@@175))
 :pattern ( ($generated@@78 ($generated@@36 $generated@@174) $generated@@175))
)))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (or ($generated@@61 ($generated@@68 $generated@@25 $generated@@177)) (and (< 3 $generated@@21) ($generated@@24 $generated@@25 $generated@@177 $generated@@26))) (and (and (and (and (and ($generated@@31 ($generated@@68 $generated@@25 ($generated@@22 ($generated@@68 $generated@@25 $generated@@177)))) ($generated@@31 ($generated@@68 $generated@@25 $generated@@177))) ($generated@@23 ($generated@@68 $generated@@25 $generated@@177))) (=> (not ($generated@@32 ($generated@@22 ($generated@@68 $generated@@25 $generated@@177)) $generated@@177)) ($generated@@23 ($generated@@68 $generated@@25 $generated@@177)))) (=> ($generated@@32 ($generated@@22 ($generated@@68 $generated@@25 $generated@@177)) $generated@@177) (=> ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@38 ($generated@@68 $generated@@25 $generated@@177))))) (and (and (and (and ($generated@@31 ($generated@@68 $generated@@25 ($generated@@60 ($generated@@36 $generated@@176) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177)))))) ($generated@@31 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177))))) ($generated@@61 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177))))) (=> (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@176) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177)))) ($generated@@30 ($generated@@68 $generated@@25 $generated@@177)))) ($generated@@61 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177)))))) (=> ($generated@@32 ($generated@@60 ($generated@@36 $generated@@176) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177)))) ($generated@@30 ($generated@@68 $generated@@25 $generated@@177))) (and (and ($generated@@34 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177)))) (=> ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@35 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177))))))) (and (and ($generated@@31 ($generated@@68 $generated@@25 ($generated@@60 ($generated@@36 $generated@@176) ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@177)))))) ($generated@@31 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@177))))) ($generated@@61 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@177))))))) (=> (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177)))) (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@176) ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@177)))) ($generated@@29 ($generated@@68 $generated@@25 $generated@@177))))) ($generated@@61 ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@177))))))))))) (= ($generated@@60 ($generated@@36 $generated@@176) ($generated@@68 $generated@@25 $generated@@177)) (ite  (not ($generated@@32 ($generated@@22 ($generated@@68 $generated@@25 $generated@@177)) $generated@@177)) ($generated@@22 ($generated@@68 $generated@@25 $generated@@177)) (ite  (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@38 ($generated@@68 $generated@@25 $generated@@177)))))) $generated@@177 (ite  (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@176) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177)))) ($generated@@30 ($generated@@68 $generated@@25 $generated@@177)))) ($generated@@40 ($generated@@68 $generated@@25 ($generated@@60 ($generated@@36 $generated@@176) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177))))) ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@177)))) (ite  (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177)))) (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@176) ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@177)))) ($generated@@29 ($generated@@68 $generated@@25 $generated@@177))))) ($generated@@40 ($generated@@68 $generated@@25 ($generated@@30 ($generated@@68 $generated@@25 $generated@@177))) ($generated@@68 $generated@@25 ($generated@@60 ($generated@@36 $generated@@176) ($generated@@68 $generated@@25 ($generated@@29 ($generated@@68 $generated@@25 $generated@@177)))))) $generated@@177)))))))
 :weight 3
 :pattern ( ($generated@@60 ($generated@@36 $generated@@176) ($generated@@68 $generated@@25 $generated@@177)))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@178 $generated@@189 $generated@@190 $generated@@191 ($generated@@185 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@194 $generated@@195) $generated@@192)
 :weight 0
)) (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@178 $generated@@196 $generated@@197 $generated@@198 ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@178 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@178 $generated@@205 $generated@@206 $generated@@207 ($generated@@185 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@178 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (= ($generated@@5 $generated@@179) 4)) (= ($generated@@5 $generated@@180) 5)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (= ($generated@@182 $generated@@214 $generated@@215 ($generated@@186 $generated@@214 $generated@@215 $generated@@217 $generated@@218 $generated@@216) $generated@@218) $generated@@216)
 :weight 0
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@223 $generated@@224) (= ($generated@@182 $generated@@219 $generated@@220 ($generated@@186 $generated@@219 $generated@@220 $generated@@222 $generated@@223 $generated@@221) $generated@@224) ($generated@@182 $generated@@219 $generated@@220 $generated@@222 $generated@@224)))
 :weight 0
))) (= ($generated@@5 $generated@@183) 6)) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@5 ($generated@@184 $generated@@225 $generated@@226)) 7))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@187 ($generated@@184 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@184 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@188 ($generated@@184 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@184 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (= ($generated@@10 ($generated@@178 $generated@@179 $generated@@180 $generated@@6 ($generated@@181 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (or (not (= $generated@@235 $generated@@231)) (not true)) ($generated@@10 ($generated@@93 $generated@@6 ($generated@@182 $generated@@180 $generated@@183 ($generated@@182 $generated@@179 ($generated@@184 $generated@@180 $generated@@183) $generated@@232 $generated@@235) $generated@@233)))) $generated@@234))
 :pattern ( ($generated@@178 $generated@@179 $generated@@180 $generated@@6 ($generated@@181 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@237 $generated@@26) (or (or ($generated@@27 $generated@@237) ($generated@@28 $generated@@237)) ($generated@@38 $generated@@237)))
 :pattern ( ($generated@@38 $generated@@237) ($generated@@24 $generated@@25 $generated@@237 $generated@@26))
 :pattern ( ($generated@@28 $generated@@237) ($generated@@24 $generated@@25 $generated@@237 $generated@@26))
 :pattern ( ($generated@@27 $generated@@237) ($generated@@24 $generated@@25 $generated@@237 $generated@@26))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and ($generated@@239 $generated@@241) ($generated@@24 $generated@@25 $generated@@240 $generated@@26)) ($generated@@238 $generated@@25 $generated@@240 $generated@@26 $generated@@241))
 :pattern ( ($generated@@238 $generated@@25 $generated@@240 $generated@@26 $generated@@241))
)))
(assert (= ($generated@@242 $generated@@26) $generated@@0))
(assert (= ($generated@@243 $generated@@26) $generated@@4))
(assert (= $generated@@39 ($generated@@68 $generated@@25 $generated@@39)))
(assert (= $generated@@33 ($generated@@68 $generated@@25 $generated@@33)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and ($generated@@239 $generated@@245) (and ($generated@@38 $generated@@244) ($generated@@238 $generated@@25 $generated@@244 $generated@@26 $generated@@245))) ($generated@@238 $generated@@25 ($generated@@30 $generated@@244) $generated@@26 $generated@@245))
 :pattern ( ($generated@@238 $generated@@25 ($generated@@30 $generated@@244) $generated@@26 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and ($generated@@239 $generated@@247) (and ($generated@@38 $generated@@246) ($generated@@238 $generated@@25 $generated@@246 $generated@@26 $generated@@247))) ($generated@@238 $generated@@25 ($generated@@29 $generated@@246) $generated@@26 $generated@@247))
 :pattern ( ($generated@@238 $generated@@25 ($generated@@29 $generated@@246) $generated@@26 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= ($generated@@40 ($generated@@68 $generated@@25 $generated@@248) ($generated@@68 $generated@@25 $generated@@249)) ($generated@@68 $generated@@25 ($generated@@40 $generated@@248 $generated@@249)))
 :pattern ( ($generated@@40 ($generated@@68 $generated@@25 $generated@@248) ($generated@@68 $generated@@25 $generated@@249)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@94 $generated@@7 ($generated@@11 ($generated@@84 $generated@@250))) ($generated@@68 $generated@@183 ($generated@@94 $generated@@7 ($generated@@11 $generated@@250))))
 :pattern ( ($generated@@94 $generated@@7 ($generated@@11 ($generated@@84 $generated@@250))))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@T) ) (! (= ($generated@@94 $generated@@252 ($generated@@68 $generated@@252 $generated@@251)) ($generated@@68 $generated@@183 ($generated@@94 $generated@@252 $generated@@251)))
 :pattern ( ($generated@@94 $generated@@252 ($generated@@68 $generated@@252 $generated@@251)))
)))
(assert  (=> (<= 4 $generated@@21) (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (or ($generated@@79 ($generated@@68 $generated@@25 $generated@@254)) (and (< 4 $generated@@21) (and ($generated@@24 $generated@@25 $generated@@254 $generated@@26) (not ($generated@@10 ($generated@@68 $generated@@6 ($generated@@9 ($generated@@50 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 $generated@@254))))))))) (and (and (and (and ($generated@@31 ($generated@@68 $generated@@25 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 $generated@@254)))) ($generated@@31 ($generated@@68 $generated@@25 $generated@@254))) ($generated@@61 ($generated@@68 $generated@@25 $generated@@254))) (=> (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 $generated@@254)) $generated@@254)) (and ($generated@@61 ($generated@@68 $generated@@25 $generated@@254)) ($generated@@79 ($generated@@68 $generated@@25 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 $generated@@254))))))) (= ($generated@@78 ($generated@@36 $generated@@253) ($generated@@68 $generated@@25 $generated@@254)) (ite ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 $generated@@254)) $generated@@254) $generated@@254 ($generated@@78 ($generated@@36 $generated@@253) ($generated@@68 $generated@@25 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@68 $generated@@25 $generated@@254))))))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@36 $generated@@253) ($generated@@68 $generated@@25 $generated@@254)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@261  (=> (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) $generated@@255) $generated@@255)) (=> (and (and ($generated@@238 $generated@@25 $generated@@255 $generated@@26 $generated@@256) ($generated@@61 $generated@@255)) (and (= $generated@@257 ($generated@@60 ($generated@@36 $generated@@37) $generated@@255)) ($generated@@238 $generated@@25 $generated@@257 $generated@@26 $generated@@256))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (not ($generated@@50 ($generated@@36 ($generated@@36 $generated@@37)) $generated@@257))) (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@257)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 ($generated@@62 ($generated@@36 $generated@@37) $generated@@255)) (= ($generated@@62 ($generated@@36 $generated@@37) $generated@@257) ($generated@@62 ($generated@@36 $generated@@37) $generated@@255)))) (=> (or (<= 0 ($generated@@62 ($generated@@36 $generated@@37) $generated@@255)) (= ($generated@@62 ($generated@@36 $generated@@37) $generated@@257) ($generated@@62 ($generated@@36 $generated@@37) $generated@@255))) (=> (= (ControlFlow 0 4) (- 0 3)) (< ($generated@@62 ($generated@@36 $generated@@37) $generated@@257) ($generated@@62 ($generated@@36 $generated@@37) $generated@@255)))))))))))
(let (($generated@@262 true))
(let (($generated@@263  (=> (and ($generated@@238 $generated@@25 $generated@@255 $generated@@26 $generated@@256) ($generated@@61 $generated@@255)) (and (=> (= (ControlFlow 0 7) 2) $generated@@262) (=> (= (ControlFlow 0 7) 4) $generated@@261)))))
(let (($generated@@264 true))
(let (($generated@@265  (=> (and (= $generated@@258 ($generated@@181 $generated@@259 $generated@@256 $generated false)) ($generated@@238 $generated@@25 $generated@@255 $generated@@26 $generated@@256)) (=> (and (and ($generated@@51 $generated@@255) (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@255))) (and ($generated@@238 $generated@@25 $generated@@255 $generated@@26 $generated@@256) ($generated@@109 $generated@@255))) (and (=> (= (ControlFlow 0 8) 1) $generated@@264) (=> (= (ControlFlow 0 8) 7) $generated@@263))))))
(let (($generated@@266  (=> (and (and (and ($generated@@239 $generated@@256) ($generated@@260 $generated@@256)) ($generated@@24 $generated@@25 $generated@@255 $generated@@26)) (and (= 4 $generated@@21) (= (ControlFlow 0 9) 8))) $generated@@265)))
$generated@@266)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
