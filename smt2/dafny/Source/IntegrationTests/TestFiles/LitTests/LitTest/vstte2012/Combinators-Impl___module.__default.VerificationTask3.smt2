(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) Int)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@66 (T@U Int) T@U)
(declare-fun $generated@@67 (Int) Bool)
(declare-fun $generated@@68 (Int) Int)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@115 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@186 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@187 () T@T)
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@191 () T@T)
(declare-fun $generated@@192 (T@T T@T) T@T)
(declare-fun $generated@@193 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@245 (Int Int) Int)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@25) 3))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@41 T@U) ) (!  (=> (or ($generated@@23 $generated@@41) (and (< 2 $generated@@21) ($generated@@24 $generated@@25 $generated@@41 $generated@@26))) (and (=> (not ($generated@@27 $generated@@41)) (=> (not ($generated@@28 $generated@@41)) (let (($generated@@42 ($generated@@29 $generated@@41)))
(let (($generated@@43 ($generated@@30 $generated@@41)))
 (=> (not ($generated@@27 $generated@@43)) (=> (not ($generated@@28 $generated@@43)) (let (($generated@@44 ($generated@@29 $generated@@43)))
(let (($generated@@45 ($generated@@30 $generated@@43)))
 (and (and ($generated@@31 $generated@@45) (=> ($generated@@32 $generated@@45 $generated@@33) (and ($generated@@34 $generated@@44) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@44) ($generated@@34 $generated@@42))))) (=> (not (and (and ($generated@@32 $generated@@45 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@44)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@42))) (=> ($generated@@38 $generated@@45) (and ($generated@@31 ($generated@@30 $generated@@45)) (=> ($generated@@32 ($generated@@30 $generated@@45) $generated@@39) (and ($generated@@34 ($generated@@29 $generated@@45)) (=> ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@45)) (and ($generated@@34 $generated@@44) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@44) ($generated@@34 $generated@@42)))))))))))))))))) (= ($generated@@22 $generated@@41) (ite ($generated@@27 $generated@@41) $generated@@41 (ite ($generated@@28 $generated@@41) $generated@@41 (let (($generated@@46 ($generated@@29 $generated@@41)))
(let (($generated@@47 ($generated@@30 $generated@@41)))
(ite ($generated@@27 $generated@@47) $generated@@41 (ite ($generated@@28 $generated@@47) $generated@@41 (let (($generated@@48 ($generated@@29 $generated@@47)))
(let (($generated@@49 ($generated@@30 $generated@@47)))
(ite  (and (and ($generated@@32 $generated@@49 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@48)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@46)) $generated@@48 (ite  (and (and (and (and ($generated@@38 $generated@@49) ($generated@@32 ($generated@@30 $generated@@49) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@49))) ($generated@@35 ($generated@@36 $generated@@37) $generated@@48)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@46)) ($generated@@40 ($generated@@40 ($generated@@29 $generated@@49) $generated@@46) ($generated@@40 $generated@@48 $generated@@46)) $generated@@41)))))))))))))
 :pattern ( ($generated@@22 $generated@@41))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or ($generated@@51 $generated@@53) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@53 $generated@@26))) (and (=> (not ($generated@@27 $generated@@53)) (=> (not ($generated@@28 $generated@@53)) (let (($generated@@54 ($generated@@29 $generated@@53)))
(let (($generated@@55 ($generated@@30 $generated@@53)))
 (and ($generated@@51 $generated@@55) (=> (not ($generated@@50 $generated@@52 $generated@@55)) ($generated@@51 $generated@@54))))))) (= ($generated@@50 ($generated@@36 $generated@@52) $generated@@53) (ite ($generated@@27 $generated@@53) true (ite ($generated@@28 $generated@@53) false (let (($generated@@56 ($generated@@29 $generated@@53)))
(let (($generated@@57 ($generated@@30 $generated@@53)))
 (or ($generated@@50 $generated@@52 $generated@@57) ($generated@@50 $generated@@52 $generated@@56)))))))))
 :pattern ( ($generated@@50 ($generated@@36 $generated@@52) $generated@@53))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@40 $generated@@58 $generated@@59) $generated@@26)  (and ($generated@@24 $generated@@25 $generated@@58 $generated@@26) ($generated@@24 $generated@@25 $generated@@59 $generated@@26)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@40 $generated@@58 $generated@@59) $generated@@26))
)))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@61 $generated@@64) (and (< 3 $generated@@21) ($generated@@24 $generated@@25 $generated@@64 $generated@@26))) (and (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@64)) (and (not ($generated@@50 ($generated@@36 $generated@@37) ($generated@@60 $generated@@63 $generated@@64))) (or ($generated@@32 ($generated@@60 $generated@@63 $generated@@64) $generated@@64) (< ($generated@@62 ($generated@@36 $generated@@37) ($generated@@60 $generated@@63 $generated@@64)) ($generated@@62 ($generated@@36 $generated@@37) $generated@@64))))) ($generated@@24 $generated@@25 ($generated@@60 $generated@@63 $generated@@64) $generated@@26)))
 :pattern ( ($generated@@60 $generated@@63 $generated@@64))
))))
(assert (= ($generated@@65 $generated@@39) $generated@@1))
(assert (= ($generated@@65 $generated@@33) $generated@@2))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@70 T@U) ($generated@@71 Int) ) (!  (=> (or ($generated@@67 $generated@@71) (and (< 2 $generated@@21) (<= ($generated@@68 0) $generated@@71))) (and (=> (or (not (= $generated@@71 ($generated@@68 0))) (not true)) ($generated@@67 (- $generated@@71 1))) (= ($generated@@66 ($generated@@36 $generated@@70) $generated@@71) (ite (= $generated@@71 ($generated@@68 0)) $generated@@33 ($generated@@40 ($generated@@66 $generated@@70 (- $generated@@71 1)) ($generated@@69 $generated@@25 $generated@@33))))))
 :pattern ( ($generated@@66 ($generated@@36 $generated@@70) $generated@@71))
))))
(assert ($generated@@24 $generated@@25 $generated@@39 $generated@@26))
(assert ($generated@@24 $generated@@25 $generated@@33 $generated@@26))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or ($generated@@34 $generated@@73) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@73 $generated@@26))) (=> (and ($generated@@35 $generated@@72 $generated@@73) ($generated@@38 $generated@@73)) (and ($generated@@35 $generated@@72 ($generated@@30 $generated@@73)) ($generated@@35 $generated@@72 ($generated@@29 $generated@@73)))))
 :pattern ( ($generated@@35 $generated@@72 $generated@@73))
))))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@74 T@U) ) (!  (=> (or ($generated@@23 ($generated@@69 $generated@@25 $generated@@74)) (and (< 2 $generated@@21) ($generated@@24 $generated@@25 $generated@@74 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@69 $generated@@25 $generated@@74)))))) (=> (not ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@69 $generated@@25 $generated@@74)))))) (let (($generated@@75 ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@74)))))
(let (($generated@@76 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@74)))))
 (=> (not ($generated@@27 $generated@@76)) (=> (not ($generated@@28 $generated@@76)) (let (($generated@@77 ($generated@@29 $generated@@76)))
(let (($generated@@78 ($generated@@30 $generated@@76)))
 (and (and ($generated@@31 $generated@@78) (=> ($generated@@32 $generated@@78 $generated@@33) (and ($generated@@34 $generated@@77) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@77) ($generated@@34 $generated@@75))))) (=> (not (and (and ($generated@@32 $generated@@78 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@77)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@75))) (=> ($generated@@38 $generated@@78) (and ($generated@@31 ($generated@@30 $generated@@78)) (=> ($generated@@32 ($generated@@30 $generated@@78) $generated@@39) (and ($generated@@34 ($generated@@29 $generated@@78)) (=> ($generated@@35 ($generated@@36 $generated@@37) ($generated@@29 $generated@@78)) (and ($generated@@34 $generated@@77) (=> ($generated@@35 ($generated@@36 $generated@@37) $generated@@77) ($generated@@34 $generated@@75)))))))))))))))))) (= ($generated@@22 ($generated@@69 $generated@@25 $generated@@74)) (ite ($generated@@27 ($generated@@69 $generated@@25 $generated@@74)) $generated@@74 (ite ($generated@@28 ($generated@@69 $generated@@25 $generated@@74)) $generated@@74 (let (($generated@@79 ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@74)))))
(let (($generated@@80 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@74)))))
(ite ($generated@@27 $generated@@80) $generated@@74 (ite ($generated@@28 $generated@@80) $generated@@74 (let (($generated@@81 ($generated@@69 $generated@@25 ($generated@@29 $generated@@80))))
(let (($generated@@82 ($generated@@69 $generated@@25 ($generated@@30 $generated@@80))))
(ite  (and (and ($generated@@32 $generated@@82 $generated@@33) ($generated@@35 ($generated@@36 $generated@@37) $generated@@81)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@79)) $generated@@81 (ite  (and (and (and (and ($generated@@38 $generated@@82) ($generated@@32 ($generated@@30 $generated@@82) $generated@@39)) ($generated@@35 ($generated@@36 $generated@@37) ($generated@@69 $generated@@25 ($generated@@29 $generated@@82)))) ($generated@@35 ($generated@@36 $generated@@37) $generated@@81)) ($generated@@35 ($generated@@36 $generated@@37) $generated@@79)) ($generated@@40 ($generated@@69 $generated@@25 ($generated@@40 ($generated@@69 $generated@@25 ($generated@@29 $generated@@82)) $generated@@79)) ($generated@@69 $generated@@25 ($generated@@40 $generated@@81 $generated@@79))) $generated@@74)))))))))))))
 :weight 3
 :pattern ( ($generated@@22 ($generated@@69 $generated@@25 $generated@@74)))
))))
(assert  (=> (<= 4 $generated@@21) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@84 $generated@@86) (and (< 4 $generated@@21) (and ($generated@@24 $generated@@25 $generated@@86 $generated@@26) (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@86))))) (and (and (and (and ($generated@@31 ($generated@@60 ($generated@@36 $generated@@37) $generated@@86)) ($generated@@31 $generated@@86)) ($generated@@61 $generated@@86)) (=> (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) $generated@@86) $generated@@86)) (and ($generated@@61 $generated@@86) ($generated@@84 ($generated@@60 ($generated@@36 $generated@@37) $generated@@86))))) (= ($generated@@83 ($generated@@36 $generated@@85) $generated@@86) (ite ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) $generated@@86) $generated@@86) $generated@@86 ($generated@@83 $generated@@85 ($generated@@60 ($generated@@36 $generated@@37) $generated@@86))))))
 :pattern ( ($generated@@83 ($generated@@36 $generated@@85) $generated@@86))
))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@32 $generated@@87 $generated@@88) (= $generated@@87 $generated@@88))
 :pattern ( ($generated@@32 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 Int) ) (! (= ($generated@@68 $generated@@89) $generated@@89)
 :pattern ( ($generated@@68 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@69 $generated@@91 $generated@@90) $generated@@90)
 :pattern ( ($generated@@69 $generated@@91 $generated@@90))
)))
(assert  (=> (<= 4 $generated@@21) (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@84 $generated@@93) (and (< 4 $generated@@21) (and ($generated@@24 $generated@@25 $generated@@93 $generated@@26) (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@93))))) ($generated@@24 $generated@@25 ($generated@@83 $generated@@92 $generated@@93) $generated@@26))
 :pattern ( ($generated@@83 $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@27 $generated@@94) (= ($generated@@65 $generated@@94) $generated@@1))
 :pattern ( ($generated@@27 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@28 $generated@@95) (= ($generated@@65 $generated@@95) $generated@@2))
 :pattern ( ($generated@@28 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@38 $generated@@96) (= ($generated@@65 $generated@@96) $generated@@3))
 :pattern ( ($generated@@38 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 ($generated@@97 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@97 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@38 $generated@@101) (exists (($generated@@102 T@U) ($generated@@103 T@U) ) (= $generated@@101 ($generated@@40 $generated@@102 $generated@@103))))
 :pattern ( ($generated@@38 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@27 $generated@@104) (= $generated@@104 $generated@@39))
 :pattern ( ($generated@@27 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@28 $generated@@105) (= $generated@@105 $generated@@33))
 :pattern ( ($generated@@28 $generated@@105))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@106 T@U) ($generated@@107 Int) ) (!  (=> (or ($generated@@67 ($generated@@68 $generated@@107)) (and (< 2 $generated@@21) (<= ($generated@@68 0) $generated@@107))) (and (=> (or (not (= ($generated@@68 $generated@@107) ($generated@@68 0))) (not true)) ($generated@@67 ($generated@@68 (- $generated@@107 1)))) (= ($generated@@66 ($generated@@36 $generated@@106) ($generated@@68 $generated@@107)) (ite (= ($generated@@68 $generated@@107) ($generated@@68 0)) $generated@@33 ($generated@@40 ($generated@@69 $generated@@25 ($generated@@66 ($generated@@36 $generated@@106) ($generated@@68 (- $generated@@107 1)))) ($generated@@69 $generated@@25 $generated@@33))))))
 :weight 3
 :pattern ( ($generated@@66 ($generated@@36 $generated@@106) ($generated@@68 $generated@@107)))
))))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@108 T@U) ) (!  (=> (or ($generated@@23 $generated@@108) (and (< 2 $generated@@21) ($generated@@24 $generated@@25 $generated@@108 $generated@@26))) (and (=> (not ($generated@@50 ($generated@@36 $generated@@37) $generated@@108)) (and (not ($generated@@50 ($generated@@36 $generated@@37) ($generated@@22 $generated@@108))) (or ($generated@@32 ($generated@@22 $generated@@108) $generated@@108) (< ($generated@@62 ($generated@@36 $generated@@37) ($generated@@22 $generated@@108)) ($generated@@62 ($generated@@36 $generated@@37) $generated@@108))))) ($generated@@24 $generated@@25 ($generated@@22 $generated@@108) $generated@@26)))
 :pattern ( ($generated@@22 $generated@@108))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@51 ($generated@@69 $generated@@25 $generated@@110)) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@110 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@69 $generated@@25 $generated@@110)))))) (=> (not ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@69 $generated@@25 $generated@@110)))))) (let (($generated@@111 ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@110)))))
(let (($generated@@112 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@110)))))
 (and ($generated@@51 $generated@@112) (=> (not ($generated@@50 ($generated@@36 $generated@@109) $generated@@112)) ($generated@@51 $generated@@111))))))) (= ($generated@@50 ($generated@@36 $generated@@109) ($generated@@69 $generated@@25 $generated@@110)) (ite ($generated@@27 ($generated@@69 $generated@@25 $generated@@110)) true (ite ($generated@@28 ($generated@@69 $generated@@25 $generated@@110)) false ($generated@@10 (let (($generated@@113 ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@110)))))
(let (($generated@@114 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@110)))))
($generated@@69 $generated@@6 ($generated@@9  (or ($generated@@50 ($generated@@36 $generated@@109) $generated@@114) ($generated@@50 ($generated@@36 $generated@@109) $generated@@113))))))))))))
 :weight 3
 :pattern ( ($generated@@50 ($generated@@36 $generated@@109) ($generated@@69 $generated@@25 $generated@@110)))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or ($generated@@115 ($generated@@69 $generated@@25 $generated@@117)) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@117 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@69 $generated@@25 $generated@@117)))))) (=> (not ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@69 $generated@@25 $generated@@117)))))) (let (($generated@@118 ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@117)))))
(let (($generated@@119 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@117)))))
 (and ($generated@@115 $generated@@119) ($generated@@115 $generated@@118)))))) (= ($generated@@62 ($generated@@36 $generated@@116) ($generated@@69 $generated@@25 $generated@@117)) (ite ($generated@@27 ($generated@@69 $generated@@25 $generated@@117)) 1 (ite ($generated@@28 ($generated@@69 $generated@@25 $generated@@117)) 1 (let (($generated@@120 ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@117)))))
(let (($generated@@121 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@117)))))
($generated@@68 (+ (+ 1 ($generated@@62 ($generated@@36 $generated@@116) $generated@@121)) ($generated@@62 ($generated@@36 $generated@@116) $generated@@120))))))))))
 :weight 3
 :pattern ( ($generated@@62 ($generated@@36 $generated@@116) ($generated@@69 $generated@@25 $generated@@117)))
))))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (or ($generated@@61 $generated@@123) (and (< 3 $generated@@21) ($generated@@24 $generated@@25 $generated@@123 $generated@@26))) (and (and (and (and (and ($generated@@31 ($generated@@22 $generated@@123)) ($generated@@31 $generated@@123)) ($generated@@23 $generated@@123)) (=> (not ($generated@@32 ($generated@@22 $generated@@123) $generated@@123)) ($generated@@23 $generated@@123))) (=> ($generated@@32 ($generated@@22 $generated@@123) $generated@@123) (=> ($generated@@38 $generated@@123) (and (and (and (and ($generated@@31 ($generated@@60 $generated@@122 ($generated@@30 $generated@@123))) ($generated@@31 ($generated@@30 $generated@@123))) ($generated@@61 ($generated@@30 $generated@@123))) (=> (not ($generated@@32 ($generated@@60 $generated@@122 ($generated@@30 $generated@@123)) ($generated@@30 $generated@@123))) ($generated@@61 ($generated@@30 $generated@@123)))) (=> ($generated@@32 ($generated@@60 $generated@@122 ($generated@@30 $generated@@123)) ($generated@@30 $generated@@123)) (and (and ($generated@@34 ($generated@@30 $generated@@123)) (=> ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@123)) (and (and ($generated@@31 ($generated@@60 $generated@@122 ($generated@@29 $generated@@123))) ($generated@@31 ($generated@@29 $generated@@123))) ($generated@@61 ($generated@@29 $generated@@123))))) (=> (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@123)) (not ($generated@@32 ($generated@@60 $generated@@122 ($generated@@29 $generated@@123)) ($generated@@29 $generated@@123)))) ($generated@@61 ($generated@@29 $generated@@123))))))))) (= ($generated@@60 ($generated@@36 $generated@@122) $generated@@123) (ite  (not ($generated@@32 ($generated@@22 $generated@@123) $generated@@123)) ($generated@@22 $generated@@123) (ite  (not ($generated@@38 $generated@@123)) $generated@@123 (ite  (not ($generated@@32 ($generated@@60 $generated@@122 ($generated@@30 $generated@@123)) ($generated@@30 $generated@@123))) ($generated@@40 ($generated@@60 $generated@@122 ($generated@@30 $generated@@123)) ($generated@@29 $generated@@123)) (ite  (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@30 $generated@@123)) (not ($generated@@32 ($generated@@60 $generated@@122 ($generated@@29 $generated@@123)) ($generated@@29 $generated@@123)))) ($generated@@40 ($generated@@30 $generated@@123) ($generated@@60 $generated@@122 ($generated@@29 $generated@@123))) $generated@@123)))))))
 :pattern ( ($generated@@60 ($generated@@36 $generated@@122) $generated@@123))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (or ($generated@@115 $generated@@125) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@125 $generated@@26))) (<= ($generated@@68 0) ($generated@@62 $generated@@124 $generated@@125)))
 :pattern ( ($generated@@62 $generated@@124 $generated@@125))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (or ($generated@@34 $generated@@127) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@127 $generated@@26))) (and (=> (not ($generated@@27 $generated@@127)) (=> (not ($generated@@28 $generated@@127)) (let (($generated@@128 ($generated@@29 $generated@@127)))
(let (($generated@@129 ($generated@@30 $generated@@127)))
 (and (=> ($generated@@27 $generated@@129) ($generated@@34 $generated@@128)) (=> (not ($generated@@27 $generated@@129)) (and (=> ($generated@@28 $generated@@129) ($generated@@34 $generated@@128)) (=> (not ($generated@@28 $generated@@129)) (let (($generated@@130 ($generated@@29 $generated@@129)))
(let (($generated@@131 ($generated@@30 $generated@@129)))
 (and ($generated@@31 $generated@@131) (=> ($generated@@32 $generated@@131 $generated@@39) (and ($generated@@34 $generated@@130) (=> ($generated@@35 $generated@@126 $generated@@130) ($generated@@34 $generated@@128))))))))))))))) (= ($generated@@35 ($generated@@36 $generated@@126) $generated@@127) (ite ($generated@@27 $generated@@127) true (ite ($generated@@28 $generated@@127) true (let (($generated@@132 ($generated@@29 $generated@@127)))
(let (($generated@@133 ($generated@@30 $generated@@127)))
(ite ($generated@@27 $generated@@133) ($generated@@35 $generated@@126 $generated@@132) (ite ($generated@@28 $generated@@133) ($generated@@35 $generated@@126 $generated@@132) (let (($generated@@134 ($generated@@29 $generated@@133)))
(let (($generated@@135 ($generated@@30 $generated@@133)))
 (and (and ($generated@@32 $generated@@135 $generated@@39) ($generated@@35 $generated@@126 $generated@@134)) ($generated@@35 $generated@@126 $generated@@132)))))))))))))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@126) $generated@@127))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (or ($generated@@115 $generated@@137) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@137 $generated@@26))) (and (=> (not ($generated@@27 $generated@@137)) (=> (not ($generated@@28 $generated@@137)) (let (($generated@@138 ($generated@@29 $generated@@137)))
(let (($generated@@139 ($generated@@30 $generated@@137)))
 (and ($generated@@115 $generated@@139) ($generated@@115 $generated@@138)))))) (= ($generated@@62 ($generated@@36 $generated@@136) $generated@@137) (ite ($generated@@27 $generated@@137) 1 (ite ($generated@@28 $generated@@137) 1 (let (($generated@@140 ($generated@@29 $generated@@137)))
(let (($generated@@141 ($generated@@30 $generated@@137)))
(+ (+ 1 ($generated@@62 $generated@@136 $generated@@141)) ($generated@@62 $generated@@136 $generated@@140)))))))))
 :pattern ( ($generated@@62 ($generated@@36 $generated@@136) $generated@@137))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and ($generated@@38 $generated@@142) ($generated@@38 $generated@@143)) (= ($generated@@32 $generated@@142 $generated@@143)  (and ($generated@@32 ($generated@@30 $generated@@142) ($generated@@30 $generated@@143)) ($generated@@32 ($generated@@29 $generated@@142) ($generated@@29 $generated@@143)))))
 :pattern ( ($generated@@32 $generated@@142 $generated@@143) ($generated@@38 $generated@@142))
 :pattern ( ($generated@@32 $generated@@142 $generated@@143) ($generated@@38 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@35 ($generated@@36 $generated@@144) $generated@@145) ($generated@@35 $generated@@144 $generated@@145))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@50 ($generated@@36 $generated@@146) $generated@@147) ($generated@@50 $generated@@146 $generated@@147))
 :pattern ( ($generated@@50 ($generated@@36 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and ($generated@@27 $generated@@148) ($generated@@27 $generated@@149)) ($generated@@32 $generated@@148 $generated@@149))
 :pattern ( ($generated@@32 $generated@@148 $generated@@149) ($generated@@27 $generated@@148))
 :pattern ( ($generated@@32 $generated@@148 $generated@@149) ($generated@@27 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@28 $generated@@150) ($generated@@28 $generated@@151)) ($generated@@32 $generated@@150 $generated@@151))
 :pattern ( ($generated@@32 $generated@@150 $generated@@151) ($generated@@28 $generated@@150))
 :pattern ( ($generated@@32 $generated@@150 $generated@@151) ($generated@@28 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@65 ($generated@@40 $generated@@152 $generated@@153)) $generated@@3)
 :pattern ( ($generated@@40 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@30 ($generated@@40 $generated@@154 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@40 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@29 ($generated@@40 $generated@@156 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@40 $generated@@156 $generated@@157))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or ($generated@@34 ($generated@@69 $generated@@25 $generated@@159)) (and (< 1 $generated@@21) ($generated@@24 $generated@@25 $generated@@159 $generated@@26))) (and (=> (not ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 ($generated@@27 ($generated@@69 $generated@@25 $generated@@159)))))) (=> (not ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 ($generated@@28 ($generated@@69 $generated@@25 $generated@@159)))))) (let (($generated@@160 ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@159)))))
(let (($generated@@161 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@159)))))
 (and (=> ($generated@@27 $generated@@161) ($generated@@34 $generated@@160)) (=> (not ($generated@@27 $generated@@161)) (and (=> ($generated@@28 $generated@@161) ($generated@@34 $generated@@160)) (=> (not ($generated@@28 $generated@@161)) (let (($generated@@162 ($generated@@29 $generated@@161)))
(let (($generated@@163 ($generated@@30 $generated@@161)))
 (and ($generated@@31 $generated@@163) (=> ($generated@@32 $generated@@163 $generated@@39) (and ($generated@@34 $generated@@162) (=> ($generated@@35 ($generated@@36 $generated@@158) $generated@@162) ($generated@@34 $generated@@160))))))))))))))) (= ($generated@@35 ($generated@@36 $generated@@158) ($generated@@69 $generated@@25 $generated@@159)) (ite ($generated@@27 ($generated@@69 $generated@@25 $generated@@159)) true (ite ($generated@@28 ($generated@@69 $generated@@25 $generated@@159)) true (let (($generated@@164 ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@159)))))
(let (($generated@@165 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@159)))))
(ite ($generated@@27 $generated@@165) ($generated@@35 ($generated@@36 $generated@@158) $generated@@164) (ite ($generated@@28 $generated@@165) ($generated@@35 ($generated@@36 $generated@@158) $generated@@164) (let (($generated@@166 ($generated@@69 $generated@@25 ($generated@@29 $generated@@165))))
(let (($generated@@167 ($generated@@69 $generated@@25 ($generated@@30 $generated@@165))))
 (and (and ($generated@@32 $generated@@167 $generated@@39) ($generated@@35 ($generated@@36 $generated@@158) $generated@@166)) ($generated@@35 ($generated@@36 $generated@@158) $generated@@164)))))))))))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@36 $generated@@158) ($generated@@69 $generated@@25 $generated@@159)))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@97 $generated@@169 ($generated@@98 $generated@@169 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@98 $generated@@169 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> ($generated@@31 $generated@@170) (or (or ($generated@@27 $generated@@170) ($generated@@28 $generated@@170)) ($generated@@38 $generated@@170)))
 :pattern ( ($generated@@31 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (< ($generated@@171 $generated@@172) ($generated@@171 ($generated@@40 $generated@@172 $generated@@173)))
 :pattern ( ($generated@@40 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (< ($generated@@171 $generated@@175) ($generated@@171 ($generated@@40 $generated@@174 $generated@@175)))
 :pattern ( ($generated@@40 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@60 ($generated@@36 $generated@@176) $generated@@177) ($generated@@60 $generated@@176 $generated@@177))
 :pattern ( ($generated@@60 ($generated@@36 $generated@@176) $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@62 ($generated@@36 $generated@@178) $generated@@179) ($generated@@62 $generated@@178 $generated@@179))
 :pattern ( ($generated@@62 ($generated@@36 $generated@@178) $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@83 ($generated@@36 $generated@@180) $generated@@181) ($generated@@83 $generated@@180 $generated@@181))
 :pattern ( ($generated@@83 ($generated@@36 $generated@@180) $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ) (! (= ($generated@@66 ($generated@@36 $generated@@182) $generated@@183) ($generated@@66 $generated@@182 $generated@@183))
 :pattern ( ($generated@@66 ($generated@@36 $generated@@182) $generated@@183))
)))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (or ($generated@@61 ($generated@@69 $generated@@25 $generated@@185)) (and (< 3 $generated@@21) ($generated@@24 $generated@@25 $generated@@185 $generated@@26))) (and (and (and (and (and ($generated@@31 ($generated@@69 $generated@@25 ($generated@@22 ($generated@@69 $generated@@25 $generated@@185)))) ($generated@@31 ($generated@@69 $generated@@25 $generated@@185))) ($generated@@23 ($generated@@69 $generated@@25 $generated@@185))) (=> (not ($generated@@32 ($generated@@22 ($generated@@69 $generated@@25 $generated@@185)) $generated@@185)) ($generated@@23 ($generated@@69 $generated@@25 $generated@@185)))) (=> ($generated@@32 ($generated@@22 ($generated@@69 $generated@@25 $generated@@185)) $generated@@185) (=> ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 ($generated@@38 ($generated@@69 $generated@@25 $generated@@185))))) (and (and (and (and ($generated@@31 ($generated@@69 $generated@@25 ($generated@@60 ($generated@@36 $generated@@184) ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185)))))) ($generated@@31 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185))))) ($generated@@61 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185))))) (=> (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@184) ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185)))) ($generated@@30 ($generated@@69 $generated@@25 $generated@@185)))) ($generated@@61 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185)))))) (=> ($generated@@32 ($generated@@60 ($generated@@36 $generated@@184) ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185)))) ($generated@@30 ($generated@@69 $generated@@25 $generated@@185))) (and (and ($generated@@34 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185)))) (=> ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 ($generated@@35 ($generated@@36 $generated@@37) ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185))))))) (and (and ($generated@@31 ($generated@@69 $generated@@25 ($generated@@60 ($generated@@36 $generated@@184) ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@185)))))) ($generated@@31 ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@185))))) ($generated@@61 ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@185))))))) (=> (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185)))) (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@184) ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@185)))) ($generated@@29 ($generated@@69 $generated@@25 $generated@@185))))) ($generated@@61 ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@185))))))))))) (= ($generated@@60 ($generated@@36 $generated@@184) ($generated@@69 $generated@@25 $generated@@185)) (ite  (not ($generated@@32 ($generated@@22 ($generated@@69 $generated@@25 $generated@@185)) $generated@@185)) ($generated@@22 ($generated@@69 $generated@@25 $generated@@185)) (ite  (not ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 ($generated@@38 ($generated@@69 $generated@@25 $generated@@185)))))) $generated@@185 (ite  (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@184) ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185)))) ($generated@@30 ($generated@@69 $generated@@25 $generated@@185)))) ($generated@@40 ($generated@@69 $generated@@25 ($generated@@60 ($generated@@36 $generated@@184) ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185))))) ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@185)))) (ite  (and ($generated@@35 ($generated@@36 $generated@@37) ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185)))) (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@184) ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@185)))) ($generated@@29 ($generated@@69 $generated@@25 $generated@@185))))) ($generated@@40 ($generated@@69 $generated@@25 ($generated@@30 ($generated@@69 $generated@@25 $generated@@185))) ($generated@@69 $generated@@25 ($generated@@60 ($generated@@36 $generated@@184) ($generated@@69 $generated@@25 ($generated@@29 ($generated@@69 $generated@@25 $generated@@185)))))) $generated@@185)))))))
 :weight 3
 :pattern ( ($generated@@60 ($generated@@36 $generated@@184) ($generated@@69 $generated@@25 $generated@@185)))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@186 $generated@@197 $generated@@198 $generated@@199 ($generated@@193 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@202 $generated@@203) $generated@@200)
 :weight 0
)) (and (forall (($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@186 $generated@@204 $generated@@205 $generated@@206 ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@186 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@T) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@186 $generated@@213 $generated@@214 $generated@@215 ($generated@@193 $generated@@213 $generated@@214 $generated@@215 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@186 $generated@@213 $generated@@214 $generated@@215 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (= ($generated@@5 $generated@@187) 4)) (= ($generated@@5 $generated@@188) 5)) (forall (($generated@@222 T@T) ($generated@@223 T@T) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@190 $generated@@222 $generated@@223 ($generated@@194 $generated@@222 $generated@@223 $generated@@225 $generated@@226 $generated@@224) $generated@@226) $generated@@224)
 :weight 0
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@231 $generated@@232) (= ($generated@@190 $generated@@227 $generated@@228 ($generated@@194 $generated@@227 $generated@@228 $generated@@230 $generated@@231 $generated@@229) $generated@@232) ($generated@@190 $generated@@227 $generated@@228 $generated@@230 $generated@@232)))
 :weight 0
))) (= ($generated@@5 $generated@@191) 6)) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (= ($generated@@5 ($generated@@192 $generated@@233 $generated@@234)) 7))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@195 ($generated@@192 $generated@@235 $generated@@236)) $generated@@235)
 :pattern ( ($generated@@192 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (! (= ($generated@@196 ($generated@@192 $generated@@237 $generated@@238)) $generated@@238)
 :pattern ( ($generated@@192 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (= ($generated@@10 ($generated@@186 $generated@@187 $generated@@188 $generated@@6 ($generated@@189 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (or (not (= $generated@@243 $generated@@239)) (not true)) ($generated@@10 ($generated@@97 $generated@@6 ($generated@@190 $generated@@188 $generated@@191 ($generated@@190 $generated@@187 ($generated@@192 $generated@@188 $generated@@191) $generated@@240 $generated@@243) $generated@@241)))) $generated@@242))
 :pattern ( ($generated@@186 $generated@@187 $generated@@188 $generated@@6 ($generated@@189 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 Int) ($generated@@247 Int) ) (! (= ($generated@@245 $generated@@246 $generated@@247) (mod $generated@@246 $generated@@247))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@248 $generated@@26) (or (or ($generated@@27 $generated@@248) ($generated@@28 $generated@@248)) ($generated@@38 $generated@@248)))
 :pattern ( ($generated@@38 $generated@@248) ($generated@@24 $generated@@25 $generated@@248 $generated@@26))
 :pattern ( ($generated@@28 $generated@@248) ($generated@@24 $generated@@25 $generated@@248 $generated@@26))
 :pattern ( ($generated@@27 $generated@@248) ($generated@@24 $generated@@25 $generated@@248 $generated@@26))
)))
(assert (= ($generated@@249 $generated@@26) $generated@@0))
(assert (= ($generated@@250 $generated@@26) $generated@@4))
(assert (= $generated@@39 ($generated@@69 $generated@@25 $generated@@39)))
(assert (= $generated@@33 ($generated@@69 $generated@@25 $generated@@33)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@251 T@U) ($generated@@252 Int) ) (!  (=> (or ($generated@@67 $generated@@252) (and (< 2 $generated@@21) (<= ($generated@@68 0) $generated@@252))) (and (not ($generated@@50 ($generated@@36 $generated@@37) ($generated@@66 $generated@@251 $generated@@252))) ($generated@@24 $generated@@25 ($generated@@66 $generated@@251 $generated@@252) $generated@@26)))
 :pattern ( ($generated@@66 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= ($generated@@40 ($generated@@69 $generated@@25 $generated@@253) ($generated@@69 $generated@@25 $generated@@254)) ($generated@@69 $generated@@25 ($generated@@40 $generated@@253 $generated@@254)))
 :pattern ( ($generated@@40 ($generated@@69 $generated@@25 $generated@@253) ($generated@@69 $generated@@25 $generated@@254)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@98 $generated@@7 ($generated@@11 ($generated@@68 $generated@@255))) ($generated@@69 $generated@@191 ($generated@@98 $generated@@7 ($generated@@11 $generated@@255))))
 :pattern ( ($generated@@98 $generated@@7 ($generated@@11 ($generated@@68 $generated@@255))))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@T) ) (! (= ($generated@@98 $generated@@257 ($generated@@69 $generated@@257 $generated@@256)) ($generated@@69 $generated@@191 ($generated@@98 $generated@@257 $generated@@256)))
 :pattern ( ($generated@@98 $generated@@257 ($generated@@69 $generated@@257 $generated@@256)))
)))
(assert  (=> (<= 4 $generated@@21) (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (or ($generated@@84 ($generated@@69 $generated@@25 $generated@@259)) (and (< 4 $generated@@21) (and ($generated@@24 $generated@@25 $generated@@259 $generated@@26) (not ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 ($generated@@50 ($generated@@36 $generated@@37) ($generated@@69 $generated@@25 $generated@@259))))))))) (and (and (and (and ($generated@@31 ($generated@@69 $generated@@25 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@69 $generated@@25 $generated@@259)))) ($generated@@31 ($generated@@69 $generated@@25 $generated@@259))) ($generated@@61 ($generated@@69 $generated@@25 $generated@@259))) (=> (not ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@69 $generated@@25 $generated@@259)) $generated@@259)) (and ($generated@@61 ($generated@@69 $generated@@25 $generated@@259)) ($generated@@84 ($generated@@69 $generated@@25 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@69 $generated@@25 $generated@@259))))))) (= ($generated@@83 ($generated@@36 $generated@@258) ($generated@@69 $generated@@25 $generated@@259)) (ite ($generated@@32 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@69 $generated@@25 $generated@@259)) $generated@@259) $generated@@259 ($generated@@83 ($generated@@36 $generated@@258) ($generated@@69 $generated@@25 ($generated@@60 ($generated@@36 $generated@@37) ($generated@@69 $generated@@25 $generated@@259))))))))
 :weight 3
 :pattern ( ($generated@@83 ($generated@@36 $generated@@258) ($generated@@69 $generated@@25 $generated@@259)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@266  (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@267 Int) ) (!  (=> (<= ($generated@@68 0) $generated@@267) ($generated@@32 ($generated@@83 ($generated@@36 ($generated@@36 $generated@@37)) ($generated@@66 ($generated@@36 ($generated@@36 $generated@@37)) $generated@@267)) (ite (= ($generated@@245 $generated@@267 ($generated@@68 2)) ($generated@@68 0)) $generated@@33 ($generated@@40 ($generated@@69 $generated@@25 $generated@@33) ($generated@@69 $generated@@25 $generated@@33)))))
 :pattern ( ($generated@@66 ($generated@@36 ($generated@@36 $generated@@37)) $generated@@267))
)))))
(let (($generated@@268  (=> (and (and (and ($generated@@260 $generated@@261) ($generated@@262 $generated@@261)) (= $generated@@263 $generated@@261)) (and (forall (($generated@@269 Int) ) (!  (=> (and (<= ($generated@@68 0) $generated@@269) ($generated@@10 ($generated@@69 $generated@@6 ($generated@@9 true)))) ($generated@@32 ($generated@@83 ($generated@@36 $generated@@37) ($generated@@66 ($generated@@36 $generated@@37) $generated@@269)) (ite (= ($generated@@245 $generated@@269 ($generated@@68 2)) ($generated@@68 0)) $generated@@33 ($generated@@40 ($generated@@69 $generated@@25 $generated@@33) ($generated@@69 $generated@@25 $generated@@33)))))
 :pattern ( ($generated@@66 ($generated@@36 $generated@@37) $generated@@269))
)) (= (ControlFlow 0 4) 3))) $generated@@266)))
(let (($generated@@270 true))
(let (($generated@@271  (=> (= $generated@@264 ($generated@@189 $generated@@265 $generated@@263 $generated false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@270) (=> (= (ControlFlow 0 5) 4) $generated@@268)))))
(let (($generated@@272  (=> (and (and ($generated@@260 $generated@@263) ($generated@@262 $generated@@263)) (and (= 6 $generated@@21) (= (ControlFlow 0 6) 5))) $generated@@271)))
$generated@@272))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
