(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x22 (stack B empty)))
 (let ((?x21 (stack C ?x22)))
 (let ((?x23 (stack E ?x21)))
 (let ((?x24 (stack F ?x23)))
 (let ((?x84 (left s_tmp_)))
 (= ?x84 ?x24)))))))
(assert
 (let ((?x87 (center s_tmp__)))
 (= ?x87 empty)))
(assert
 (let ((?x25 (stack A empty)))
 (let ((?x26 (stack D ?x25)))
 (let ((?x27 (stack G ?x26)))
 (let ((?x28 (stack H ?x27)))
 (let ((?x29 (stack I ?x28)))
 (let ((?x90 (right s_tmp___)))
 (= ?x90 ?x29))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x117 (left s_tmp__)))
 (= (left s_tmp___) ?x117)))
(assert
 (let ((?x87 (center s_tmp__)))
 (= (center s_tmp___) ?x87)))
(assert
 (let ((?x121 (center s_tmp_)))
 (= ?x121 (center s_tmp))))
(assert
 (let ((?x124 (right s_tmp_)))
 (= ?x124 (right s_tmp))))
(assert
 (let ((?x84 (left s_tmp_)))
 (let ((?x117 (left s_tmp__)))
 (= ?x117 ?x84))))
(assert
 (let ((?x124 (right s_tmp_)))
 (let ((?x128 (right s_tmp__)))
 (= ?x128 ?x124))))
(assert
 (= c__ c!1))
(assert
 (let ((?x61 (left s_)))
 (let ((?x198 (left s__)))
 (let (($x243 (= ?x198 ?x61)))
 (let ((?x64 (right s_)))
 (let (($x213 ((_ is stack ) ?x64)))
 (let (($x216 (= c_ right-to-left)))
 (let (($x217 (and $x216 $x213)))
 (let ((?x66 (center s_)))
 (let (($x218 ((_ is stack ) ?x66)))
 (let (($x220 (and (= c_ center-to-right) $x218)))
 (let (($x222 (and (= c_ center-to-left) $x218)))
 (let (($x252 (ite $x222 (= ?x198 (stack (top ?x66) ?x61)) (ite $x220 $x243 (ite $x217 (= ?x198 (stack (top ?x64) ?x61)) $x243)))))
 (let (($x230 (= ?x198 (rest ?x61))))
 (let (($x223 ((_ is stack ) ?x61)))
 (let (($x224 (= c_ left-to-right)))
 (let (($x225 (and $x224 $x223)))
 (let (($x226 (= c_ left-to-center)))
 (let (($x227 (and $x226 $x223)))
 (ite $x227 $x230 (ite $x225 $x230 $x252)))))))))))))))))))))
(assert
 (let ((?x64 (right s_)))
 (let ((?x206 (right s__)))
 (let (($x239 (= ?x206 ?x64)))
 (let (($x236 (= ?x206 (rest ?x64))))
 (let (($x213 ((_ is stack ) ?x64)))
 (let (($x214 (= c_ right-to-center)))
 (let (($x215 (and $x214 $x213)))
 (let (($x216 (= c_ right-to-left)))
 (let (($x217 (and $x216 $x213)))
 (let ((?x66 (center s_)))
 (let (($x218 ((_ is stack ) ?x66)))
 (let (($x220 (and (= c_ center-to-right) $x218)))
 (let (($x249 (ite $x220 (= ?x206 (stack (top ?x66) ?x64)) (ite $x217 $x236 (ite $x215 $x236 $x239)))))
 (let (($x222 (and (= c_ center-to-left) $x218)))
 (let ((?x61 (left s_)))
 (let (($x223 ((_ is stack ) ?x61)))
 (let (($x224 (= c_ left-to-right)))
 (let (($x225 (and $x224 $x223)))
 (let (($x226 (= c_ left-to-center)))
 (let (($x227 (and $x226 $x223)))
 (ite $x227 (= ?x206 (stack (top ?x61) ?x64)) (ite $x225 $x239 (ite $x222 $x239 $x249))))))))))))))))))))))))
(assert
 (let ((?x66 (center s_)))
 (let ((?x200 (center s__)))
 (let (($x241 (= ?x200 ?x66)))
 (let ((?x64 (right s_)))
 (let (($x213 ((_ is stack ) ?x64)))
 (let (($x214 (= c_ right-to-center)))
 (let (($x215 (and $x214 $x213)))
 (let (($x216 (= c_ right-to-left)))
 (let (($x217 (and $x216 $x213)))
 (let (($x233 (= ?x200 (rest ?x66))))
 (let (($x218 ((_ is stack ) ?x66)))
 (let (($x220 (and (= c_ center-to-right) $x218)))
 (let (($x248 (ite $x220 $x233 (ite $x217 $x241 (ite $x215 (= ?x200 (stack (top ?x64) ?x66)) $x241)))))
 (let (($x222 (and (= c_ center-to-left) $x218)))
 (let ((?x61 (left s_)))
 (let (($x223 ((_ is stack ) ?x61)))
 (let (($x224 (= c_ left-to-right)))
 (let (($x225 (and $x224 $x223)))
 (let (($x226 (= c_ left-to-center)))
 (let (($x227 (and $x226 $x223)))
 (ite $x227 $x241 (ite $x225 (= ?x200 (stack (top ?x61) ?x66)) (ite $x222 $x233 $x248))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x198 (left s__)))
 (let ((?x133 (left s___)))
 (let (($x355 (= ?x133 ?x198)))
 (let ((?x206 (right s__)))
 (let ((?x322 (top ?x206)))
 (let ((?x323 (stack ?x322 ?x198)))
 (let (($x349 (= ?x133 ?x323)))
 (let (($x325 ((_ is stack ) ?x206)))
 (let (($x328 (= c__ right-to-left)))
 (let (($x329 (and $x328 $x325)))
 (let ((?x200 (center s__)))
 (let (($x330 ((_ is stack ) ?x200)))
 (let (($x331 (= c__ center-to-right)))
 (let (($x332 (and $x331 $x330)))
 (let ((?x318 (top ?x200)))
 (let ((?x319 (stack ?x318 ?x198)))
 (let (($x346 (= ?x133 ?x319)))
 (let (($x333 (= c__ center-to-left)))
 (let (($x334 (and $x333 $x330)))
 (let ((?x134 (rest ?x198)))
 (let (($x342 (= ?x133 ?x134)))
 (let (($x335 ((_ is stack ) ?x198)))
 (let (($x336 (= c__ left-to-right)))
 (let (($x337 (and $x336 $x335)))
 (let (($x338 (= c__ left-to-center)))
 (let (($x339 (and $x338 $x335)))
 (ite $x339 $x342 (ite $x337 $x342 (ite $x334 $x346 (ite $x332 $x355 (ite $x329 $x349 $x355))))))))))))))))))))))))))))))))
(assert
 (let ((?x206 (right s__)))
 (let ((?x195 (right s___)))
 (let (($x351 (= ?x195 ?x206)))
 (let ((?x321 (rest ?x206)))
 (let (($x348 (= ?x195 ?x321)))
 (let (($x325 ((_ is stack ) ?x206)))
 (let (($x326 (= c__ right-to-center)))
 (let (($x327 (and $x326 $x325)))
 (let (($x328 (= c__ right-to-left)))
 (let (($x329 (and $x328 $x325)))
 (let ((?x200 (center s__)))
 (let ((?x318 (top ?x200)))
 (let ((?x320 (stack ?x318 ?x206)))
 (let (($x347 (= ?x195 ?x320)))
 (let (($x330 ((_ is stack ) ?x200)))
 (let (($x331 (= c__ center-to-right)))
 (let (($x332 (and $x331 $x330)))
 (let (($x333 (= c__ center-to-left)))
 (let (($x334 (and $x333 $x330)))
 (let ((?x198 (left s__)))
 (let (($x335 ((_ is stack ) ?x198)))
 (let (($x336 (= c__ left-to-right)))
 (let (($x337 (and $x336 $x335)))
 (let (($x368 (ite $x337 $x351 (ite $x334 $x351 (ite $x332 $x347 (ite $x329 $x348 (ite $x327 $x348 $x351)))))))
 (let ((?x313 (top ?x198)))
 (let ((?x314 (stack ?x313 ?x206)))
 (let (($x343 (= ?x195 ?x314)))
 (let (($x338 (= c__ left-to-center)))
 (let (($x339 (and $x338 $x335)))
 (ite $x339 $x343 $x368)))))))))))))))))))))))))))))))
(assert
 (let ((?x200 (center s__)))
 (let ((?x315 (center s___)))
 (let (($x353 (= ?x315 ?x200)))
 (let ((?x206 (right s__)))
 (let ((?x322 (top ?x206)))
 (let ((?x324 (stack ?x322 ?x200)))
 (let (($x350 (= ?x315 ?x324)))
 (let (($x325 ((_ is stack ) ?x206)))
 (let (($x326 (= c__ right-to-center)))
 (let (($x327 (and $x326 $x325)))
 (let (($x328 (= c__ right-to-left)))
 (let (($x329 (and $x328 $x325)))
 (let ((?x317 (rest ?x200)))
 (let (($x345 (= ?x315 ?x317)))
 (let (($x330 ((_ is stack ) ?x200)))
 (let (($x331 (= c__ center-to-right)))
 (let (($x332 (and $x331 $x330)))
 (let (($x333 (= c__ center-to-left)))
 (let (($x334 (and $x333 $x330)))
 (let ((?x198 (left s__)))
 (let ((?x313 (top ?x198)))
 (let ((?x316 (stack ?x313 ?x200)))
 (let (($x344 (= ?x315 ?x316)))
 (let (($x335 ((_ is stack ) ?x198)))
 (let (($x336 (= c__ left-to-right)))
 (let (($x337 (and $x336 $x335)))
 (let (($x367 (ite $x337 $x344 (ite $x334 $x345 (ite $x332 $x345 (ite $x329 $x353 (ite $x327 $x350 $x353)))))))
 (let (($x338 (= c__ left-to-center)))
 (let (($x339 (and $x338 $x335)))
 (ite $x339 $x353 $x367)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x133 (left s___)))
 (let ((?x290 (left s____)))
 (let (($x494 (= ?x290 ?x133)))
 (let ((?x195 (right s___)))
 (let ((?x461 (top ?x195)))
 (let ((?x462 (stack ?x461 ?x133)))
 (let (($x488 (= ?x290 ?x462)))
 (let (($x464 ((_ is stack ) ?x195)))
 (let (($x467 (= c___ right-to-left)))
 (let (($x468 (and $x467 $x464)))
 (let ((?x315 (center s___)))
 (let (($x469 ((_ is stack ) ?x315)))
 (let (($x470 (= c___ center-to-right)))
 (let (($x471 (and $x470 $x469)))
 (let ((?x457 (top ?x315)))
 (let ((?x458 (stack ?x457 ?x133)))
 (let (($x485 (= ?x290 ?x458)))
 (let (($x472 (= c___ center-to-left)))
 (let (($x473 (and $x472 $x469)))
 (let ((?x291 (rest ?x133)))
 (let (($x481 (= ?x290 ?x291)))
 (let (($x474 ((_ is stack ) ?x133)))
 (let (($x475 (= c___ left-to-right)))
 (let (($x476 (and $x475 $x474)))
 (let (($x477 (= c___ left-to-center)))
 (let (($x478 (and $x477 $x474)))
 (ite $x478 $x481 (ite $x476 $x481 (ite $x473 $x485 (ite $x471 $x494 (ite $x468 $x488 $x494))))))))))))))))))))))))))))))))
(assert
 (let ((?x195 (right s___)))
 (let ((?x312 (right s____)))
 (let (($x490 (= ?x312 ?x195)))
 (let ((?x460 (rest ?x195)))
 (let (($x487 (= ?x312 ?x460)))
 (let (($x464 ((_ is stack ) ?x195)))
 (let (($x465 (= c___ right-to-center)))
 (let (($x466 (and $x465 $x464)))
 (let (($x467 (= c___ right-to-left)))
 (let (($x468 (and $x467 $x464)))
 (let ((?x315 (center s___)))
 (let ((?x457 (top ?x315)))
 (let ((?x459 (stack ?x457 ?x195)))
 (let (($x486 (= ?x312 ?x459)))
 (let (($x469 ((_ is stack ) ?x315)))
 (let (($x470 (= c___ center-to-right)))
 (let (($x471 (and $x470 $x469)))
 (let (($x472 (= c___ center-to-left)))
 (let (($x473 (and $x472 $x469)))
 (let ((?x133 (left s___)))
 (let (($x474 ((_ is stack ) ?x133)))
 (let (($x475 (= c___ left-to-right)))
 (let (($x476 (and $x475 $x474)))
 (let (($x507 (ite $x476 $x490 (ite $x473 $x490 (ite $x471 $x486 (ite $x468 $x487 (ite $x466 $x487 $x490)))))))
 (let ((?x452 (top ?x133)))
 (let ((?x453 (stack ?x452 ?x195)))
 (let (($x482 (= ?x312 ?x453)))
 (let (($x477 (= c___ left-to-center)))
 (let (($x478 (and $x477 $x474)))
 (ite $x478 $x482 $x507)))))))))))))))))))))))))))))))
(assert
 (let ((?x315 (center s___)))
 (let ((?x454 (center s____)))
 (let (($x492 (= ?x454 ?x315)))
 (let ((?x195 (right s___)))
 (let ((?x461 (top ?x195)))
 (let ((?x463 (stack ?x461 ?x315)))
 (let (($x489 (= ?x454 ?x463)))
 (let (($x464 ((_ is stack ) ?x195)))
 (let (($x465 (= c___ right-to-center)))
 (let (($x466 (and $x465 $x464)))
 (let (($x467 (= c___ right-to-left)))
 (let (($x468 (and $x467 $x464)))
 (let ((?x456 (rest ?x315)))
 (let (($x484 (= ?x454 ?x456)))
 (let (($x469 ((_ is stack ) ?x315)))
 (let (($x470 (= c___ center-to-right)))
 (let (($x471 (and $x470 $x469)))
 (let (($x472 (= c___ center-to-left)))
 (let (($x473 (and $x472 $x469)))
 (let ((?x133 (left s___)))
 (let ((?x452 (top ?x133)))
 (let ((?x455 (stack ?x452 ?x315)))
 (let (($x483 (= ?x454 ?x455)))
 (let (($x474 ((_ is stack ) ?x133)))
 (let (($x475 (= c___ left-to-right)))
 (let (($x476 (and $x475 $x474)))
 (let (($x506 (ite $x476 $x483 (ite $x473 $x484 (ite $x471 $x484 (ite $x468 $x492 (ite $x466 $x489 $x492)))))))
 (let (($x477 (= c___ left-to-center)))
 (let (($x478 (and $x477 $x474)))
 (ite $x478 $x492 $x506)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x290 (left s____)))
 (let ((?x371 (left s_____)))
 (let (($x632 (= ?x371 ?x290)))
 (let ((?x312 (right s____)))
 (let ((?x599 (top ?x312)))
 (let ((?x600 (stack ?x599 ?x290)))
 (let (($x626 (= ?x371 ?x600)))
 (let (($x602 ((_ is stack ) ?x312)))
 (let (($x605 (= c____ right-to-left)))
 (let (($x606 (and $x605 $x602)))
 (let ((?x454 (center s____)))
 (let (($x607 ((_ is stack ) ?x454)))
 (let (($x608 (= c____ center-to-right)))
 (let (($x609 (and $x608 $x607)))
 (let ((?x595 (top ?x454)))
 (let ((?x596 (stack ?x595 ?x290)))
 (let (($x623 (= ?x371 ?x596)))
 (let (($x610 (= c____ center-to-left)))
 (let (($x611 (and $x610 $x607)))
 (let ((?x404 (rest ?x290)))
 (let (($x619 (= ?x371 ?x404)))
 (let (($x612 ((_ is stack ) ?x290)))
 (let (($x613 (= c____ left-to-right)))
 (let (($x614 (and $x613 $x612)))
 (let (($x615 (= c____ left-to-center)))
 (let (($x616 (and $x615 $x612)))
 (ite $x616 $x619 (ite $x614 $x619 (ite $x611 $x623 (ite $x609 $x632 (ite $x606 $x626 $x632))))))))))))))))))))))))))))))))
(assert
 (let ((?x312 (right s____)))
 (let ((?x405 (right s_____)))
 (let (($x628 (= ?x405 ?x312)))
 (let ((?x598 (rest ?x312)))
 (let (($x625 (= ?x405 ?x598)))
 (let (($x602 ((_ is stack ) ?x312)))
 (let (($x603 (= c____ right-to-center)))
 (let (($x604 (and $x603 $x602)))
 (let (($x605 (= c____ right-to-left)))
 (let (($x606 (and $x605 $x602)))
 (let ((?x454 (center s____)))
 (let ((?x595 (top ?x454)))
 (let ((?x597 (stack ?x595 ?x312)))
 (let (($x624 (= ?x405 ?x597)))
 (let (($x607 ((_ is stack ) ?x454)))
 (let (($x608 (= c____ center-to-right)))
 (let (($x609 (and $x608 $x607)))
 (let (($x610 (= c____ center-to-left)))
 (let (($x611 (and $x610 $x607)))
 (let ((?x290 (left s____)))
 (let (($x612 ((_ is stack ) ?x290)))
 (let (($x613 (= c____ left-to-right)))
 (let (($x614 (and $x613 $x612)))
 (let (($x645 (ite $x614 $x628 (ite $x611 $x628 (ite $x609 $x624 (ite $x606 $x625 (ite $x604 $x625 $x628)))))))
 (let ((?x451 (top ?x290)))
 (let ((?x591 (stack ?x451 ?x312)))
 (let (($x620 (= ?x405 ?x591)))
 (let (($x615 (= c____ left-to-center)))
 (let (($x616 (and $x615 $x612)))
 (ite $x616 $x620 $x645)))))))))))))))))))))))))))))))
(assert
 (let ((?x454 (center s____)))
 (let ((?x592 (center s_____)))
 (let (($x630 (= ?x592 ?x454)))
 (let ((?x312 (right s____)))
 (let ((?x599 (top ?x312)))
 (let ((?x601 (stack ?x599 ?x454)))
 (let (($x627 (= ?x592 ?x601)))
 (let (($x602 ((_ is stack ) ?x312)))
 (let (($x603 (= c____ right-to-center)))
 (let (($x604 (and $x603 $x602)))
 (let (($x605 (= c____ right-to-left)))
 (let (($x606 (and $x605 $x602)))
 (let ((?x594 (rest ?x454)))
 (let (($x622 (= ?x592 ?x594)))
 (let (($x607 ((_ is stack ) ?x454)))
 (let (($x608 (= c____ center-to-right)))
 (let (($x609 (and $x608 $x607)))
 (let (($x610 (= c____ center-to-left)))
 (let (($x611 (and $x610 $x607)))
 (let ((?x290 (left s____)))
 (let ((?x451 (top ?x290)))
 (let ((?x593 (stack ?x451 ?x454)))
 (let (($x621 (= ?x592 ?x593)))
 (let (($x612 ((_ is stack ) ?x290)))
 (let (($x613 (= c____ left-to-right)))
 (let (($x614 (and $x613 $x612)))
 (let (($x644 (ite $x614 $x621 (ite $x611 $x622 (ite $x609 $x622 (ite $x606 $x630 (ite $x604 $x627 $x630)))))))
 (let (($x615 (= c____ left-to-center)))
 (let (($x616 (and $x615 $x612)))
 (ite $x616 $x630 $x644)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x371 (left s_____)))
 (let ((?x510 (left s______)))
 (let (($x770 (= ?x510 ?x371)))
 (let ((?x405 (right s_____)))
 (let ((?x737 (top ?x405)))
 (let ((?x738 (stack ?x737 ?x371)))
 (let (($x764 (= ?x510 ?x738)))
 (let (($x740 ((_ is stack ) ?x405)))
 (let (($x743 (= c_____ right-to-left)))
 (let (($x744 (and $x743 $x740)))
 (let ((?x592 (center s_____)))
 (let (($x745 ((_ is stack ) ?x592)))
 (let (($x746 (= c_____ center-to-right)))
 (let (($x747 (and $x746 $x745)))
 (let ((?x733 (top ?x592)))
 (let ((?x734 (stack ?x733 ?x371)))
 (let (($x761 (= ?x510 ?x734)))
 (let (($x748 (= c_____ center-to-left)))
 (let (($x749 (and $x748 $x745)))
 (let ((?x543 (rest ?x371)))
 (let (($x757 (= ?x510 ?x543)))
 (let (($x750 ((_ is stack ) ?x371)))
 (let (($x751 (= c_____ left-to-right)))
 (let (($x752 (and $x751 $x750)))
 (let (($x753 (= c_____ left-to-center)))
 (let (($x754 (and $x753 $x750)))
 (ite $x754 $x757 (ite $x752 $x757 (ite $x749 $x761 (ite $x747 $x770 (ite $x744 $x764 $x770))))))))))))))))))))))))))))))))
(assert
 (let ((?x405 (right s_____)))
 (let ((?x544 (right s______)))
 (let (($x766 (= ?x544 ?x405)))
 (let ((?x736 (rest ?x405)))
 (let (($x763 (= ?x544 ?x736)))
 (let (($x740 ((_ is stack ) ?x405)))
 (let (($x741 (= c_____ right-to-center)))
 (let (($x742 (and $x741 $x740)))
 (let (($x743 (= c_____ right-to-left)))
 (let (($x744 (and $x743 $x740)))
 (let ((?x592 (center s_____)))
 (let ((?x733 (top ?x592)))
 (let ((?x735 (stack ?x733 ?x405)))
 (let (($x762 (= ?x544 ?x735)))
 (let (($x745 ((_ is stack ) ?x592)))
 (let (($x746 (= c_____ center-to-right)))
 (let (($x747 (and $x746 $x745)))
 (let (($x748 (= c_____ center-to-left)))
 (let (($x749 (and $x748 $x745)))
 (let ((?x371 (left s_____)))
 (let (($x750 ((_ is stack ) ?x371)))
 (let (($x751 (= c_____ left-to-right)))
 (let (($x752 (and $x751 $x750)))
 (let (($x783 (ite $x752 $x766 (ite $x749 $x766 (ite $x747 $x762 (ite $x744 $x763 (ite $x742 $x763 $x766)))))))
 (let ((?x590 (top ?x371)))
 (let ((?x729 (stack ?x590 ?x405)))
 (let (($x758 (= ?x544 ?x729)))
 (let (($x753 (= c_____ left-to-center)))
 (let (($x754 (and $x753 $x750)))
 (ite $x754 $x758 $x783)))))))))))))))))))))))))))))))
(assert
 (let ((?x592 (center s_____)))
 (let ((?x730 (center s______)))
 (let (($x768 (= ?x730 ?x592)))
 (let ((?x405 (right s_____)))
 (let ((?x737 (top ?x405)))
 (let ((?x739 (stack ?x737 ?x592)))
 (let (($x765 (= ?x730 ?x739)))
 (let (($x740 ((_ is stack ) ?x405)))
 (let (($x741 (= c_____ right-to-center)))
 (let (($x742 (and $x741 $x740)))
 (let (($x743 (= c_____ right-to-left)))
 (let (($x744 (and $x743 $x740)))
 (let ((?x732 (rest ?x592)))
 (let (($x760 (= ?x730 ?x732)))
 (let (($x745 ((_ is stack ) ?x592)))
 (let (($x746 (= c_____ center-to-right)))
 (let (($x747 (and $x746 $x745)))
 (let (($x748 (= c_____ center-to-left)))
 (let (($x749 (and $x748 $x745)))
 (let ((?x371 (left s_____)))
 (let ((?x590 (top ?x371)))
 (let ((?x731 (stack ?x590 ?x592)))
 (let (($x759 (= ?x730 ?x731)))
 (let (($x750 ((_ is stack ) ?x371)))
 (let (($x751 (= c_____ left-to-right)))
 (let (($x752 (and $x751 $x750)))
 (let (($x782 (ite $x752 $x759 (ite $x749 $x760 (ite $x747 $x760 (ite $x744 $x768 (ite $x742 $x765 $x768)))))))
 (let (($x753 (= c_____ left-to-center)))
 (let (($x754 (and $x753 $x750)))
 (ite $x754 $x768 $x782)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x510 (left s______)))
 (let ((?x648 (left s_______)))
 (let (($x908 (= ?x648 ?x510)))
 (let ((?x544 (right s______)))
 (let ((?x875 (top ?x544)))
 (let ((?x876 (stack ?x875 ?x510)))
 (let (($x902 (= ?x648 ?x876)))
 (let (($x878 ((_ is stack ) ?x544)))
 (let (($x881 (= c______ right-to-left)))
 (let (($x882 (and $x881 $x878)))
 (let ((?x730 (center s______)))
 (let (($x883 ((_ is stack ) ?x730)))
 (let (($x884 (= c______ center-to-right)))
 (let (($x885 (and $x884 $x883)))
 (let ((?x871 (top ?x730)))
 (let ((?x872 (stack ?x871 ?x510)))
 (let (($x899 (= ?x648 ?x872)))
 (let (($x886 (= c______ center-to-left)))
 (let (($x887 (and $x886 $x883)))
 (let ((?x681 (rest ?x510)))
 (let (($x895 (= ?x648 ?x681)))
 (let (($x888 ((_ is stack ) ?x510)))
 (let (($x889 (= c______ left-to-right)))
 (let (($x890 (and $x889 $x888)))
 (let (($x891 (= c______ left-to-center)))
 (let (($x892 (and $x891 $x888)))
 (ite $x892 $x895 (ite $x890 $x895 (ite $x887 $x899 (ite $x885 $x908 (ite $x882 $x902 $x908))))))))))))))))))))))))))))))))
(assert
 (let ((?x544 (right s______)))
 (let ((?x682 (right s_______)))
 (let (($x904 (= ?x682 ?x544)))
 (let ((?x874 (rest ?x544)))
 (let (($x901 (= ?x682 ?x874)))
 (let (($x878 ((_ is stack ) ?x544)))
 (let (($x879 (= c______ right-to-center)))
 (let (($x880 (and $x879 $x878)))
 (let (($x881 (= c______ right-to-left)))
 (let (($x882 (and $x881 $x878)))
 (let ((?x730 (center s______)))
 (let ((?x871 (top ?x730)))
 (let ((?x873 (stack ?x871 ?x544)))
 (let (($x900 (= ?x682 ?x873)))
 (let (($x883 ((_ is stack ) ?x730)))
 (let (($x884 (= c______ center-to-right)))
 (let (($x885 (and $x884 $x883)))
 (let (($x886 (= c______ center-to-left)))
 (let (($x887 (and $x886 $x883)))
 (let ((?x510 (left s______)))
 (let (($x888 ((_ is stack ) ?x510)))
 (let (($x889 (= c______ left-to-right)))
 (let (($x890 (and $x889 $x888)))
 (let (($x921 (ite $x890 $x904 (ite $x887 $x904 (ite $x885 $x900 (ite $x882 $x901 (ite $x880 $x901 $x904)))))))
 (let ((?x728 (top ?x510)))
 (let ((?x867 (stack ?x728 ?x544)))
 (let (($x896 (= ?x682 ?x867)))
 (let (($x891 (= c______ left-to-center)))
 (let (($x892 (and $x891 $x888)))
 (ite $x892 $x896 $x921)))))))))))))))))))))))))))))))
(assert
 (let ((?x730 (center s______)))
 (let ((?x868 (center s_______)))
 (let (($x906 (= ?x868 ?x730)))
 (let ((?x544 (right s______)))
 (let ((?x875 (top ?x544)))
 (let ((?x877 (stack ?x875 ?x730)))
 (let (($x903 (= ?x868 ?x877)))
 (let (($x878 ((_ is stack ) ?x544)))
 (let (($x879 (= c______ right-to-center)))
 (let (($x880 (and $x879 $x878)))
 (let (($x881 (= c______ right-to-left)))
 (let (($x882 (and $x881 $x878)))
 (let ((?x870 (rest ?x730)))
 (let (($x898 (= ?x868 ?x870)))
 (let (($x883 ((_ is stack ) ?x730)))
 (let (($x884 (= c______ center-to-right)))
 (let (($x885 (and $x884 $x883)))
 (let (($x886 (= c______ center-to-left)))
 (let (($x887 (and $x886 $x883)))
 (let ((?x510 (left s______)))
 (let ((?x728 (top ?x510)))
 (let ((?x869 (stack ?x728 ?x730)))
 (let (($x897 (= ?x868 ?x869)))
 (let (($x888 ((_ is stack ) ?x510)))
 (let (($x889 (= c______ left-to-right)))
 (let (($x890 (and $x889 $x888)))
 (let (($x920 (ite $x890 $x897 (ite $x887 $x898 (ite $x885 $x898 (ite $x882 $x906 (ite $x880 $x903 $x906)))))))
 (let (($x891 (= c______ left-to-center)))
 (let (($x892 (and $x891 $x888)))
 (ite $x892 $x906 $x920)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x648 (left s_______)))
 (let ((?x786 (left s________)))
 (let (($x1046 (= ?x786 ?x648)))
 (let ((?x682 (right s_______)))
 (let ((?x1013 (top ?x682)))
 (let ((?x1014 (stack ?x1013 ?x648)))
 (let (($x1040 (= ?x786 ?x1014)))
 (let (($x1016 ((_ is stack ) ?x682)))
 (let (($x1019 (= c_______ right-to-left)))
 (let (($x1020 (and $x1019 $x1016)))
 (let ((?x868 (center s_______)))
 (let (($x1021 ((_ is stack ) ?x868)))
 (let (($x1022 (= c_______ center-to-right)))
 (let (($x1023 (and $x1022 $x1021)))
 (let ((?x1009 (top ?x868)))
 (let ((?x1010 (stack ?x1009 ?x648)))
 (let (($x1037 (= ?x786 ?x1010)))
 (let (($x1024 (= c_______ center-to-left)))
 (let (($x1025 (and $x1024 $x1021)))
 (let ((?x819 (rest ?x648)))
 (let (($x1033 (= ?x786 ?x819)))
 (let (($x1026 ((_ is stack ) ?x648)))
 (let (($x1027 (= c_______ left-to-right)))
 (let (($x1028 (and $x1027 $x1026)))
 (let (($x1029 (= c_______ left-to-center)))
 (let (($x1030 (and $x1029 $x1026)))
 (ite $x1030 $x1033 (ite $x1028 $x1033 (ite $x1025 $x1037 (ite $x1023 $x1046 (ite $x1020 $x1040 $x1046))))))))))))))))))))))))))))))))
(assert
 (let ((?x682 (right s_______)))
 (let ((?x820 (right s________)))
 (let (($x1042 (= ?x820 ?x682)))
 (let ((?x1012 (rest ?x682)))
 (let (($x1039 (= ?x820 ?x1012)))
 (let (($x1016 ((_ is stack ) ?x682)))
 (let (($x1017 (= c_______ right-to-center)))
 (let (($x1018 (and $x1017 $x1016)))
 (let (($x1019 (= c_______ right-to-left)))
 (let (($x1020 (and $x1019 $x1016)))
 (let ((?x868 (center s_______)))
 (let ((?x1009 (top ?x868)))
 (let ((?x1011 (stack ?x1009 ?x682)))
 (let (($x1038 (= ?x820 ?x1011)))
 (let (($x1021 ((_ is stack ) ?x868)))
 (let (($x1022 (= c_______ center-to-right)))
 (let (($x1023 (and $x1022 $x1021)))
 (let (($x1024 (= c_______ center-to-left)))
 (let (($x1025 (and $x1024 $x1021)))
 (let ((?x648 (left s_______)))
 (let (($x1026 ((_ is stack ) ?x648)))
 (let (($x1027 (= c_______ left-to-right)))
 (let (($x1028 (and $x1027 $x1026)))
 (let (($x1059 (ite $x1028 $x1042 (ite $x1025 $x1042 (ite $x1023 $x1038 (ite $x1020 $x1039 (ite $x1018 $x1039 $x1042)))))))
 (let ((?x866 (top ?x648)))
 (let ((?x1005 (stack ?x866 ?x682)))
 (let (($x1034 (= ?x820 ?x1005)))
 (let (($x1029 (= c_______ left-to-center)))
 (let (($x1030 (and $x1029 $x1026)))
 (ite $x1030 $x1034 $x1059)))))))))))))))))))))))))))))))
(assert
 (let ((?x868 (center s_______)))
 (let ((?x1006 (center s________)))
 (let (($x1044 (= ?x1006 ?x868)))
 (let ((?x682 (right s_______)))
 (let ((?x1013 (top ?x682)))
 (let ((?x1015 (stack ?x1013 ?x868)))
 (let (($x1041 (= ?x1006 ?x1015)))
 (let (($x1016 ((_ is stack ) ?x682)))
 (let (($x1017 (= c_______ right-to-center)))
 (let (($x1018 (and $x1017 $x1016)))
 (let (($x1019 (= c_______ right-to-left)))
 (let (($x1020 (and $x1019 $x1016)))
 (let ((?x1008 (rest ?x868)))
 (let (($x1036 (= ?x1006 ?x1008)))
 (let (($x1021 ((_ is stack ) ?x868)))
 (let (($x1022 (= c_______ center-to-right)))
 (let (($x1023 (and $x1022 $x1021)))
 (let (($x1024 (= c_______ center-to-left)))
 (let (($x1025 (and $x1024 $x1021)))
 (let ((?x648 (left s_______)))
 (let ((?x866 (top ?x648)))
 (let ((?x1007 (stack ?x866 ?x868)))
 (let (($x1035 (= ?x1006 ?x1007)))
 (let (($x1026 ((_ is stack ) ?x648)))
 (let (($x1027 (= c_______ left-to-right)))
 (let (($x1028 (and $x1027 $x1026)))
 (let (($x1058 (ite $x1028 $x1035 (ite $x1025 $x1036 (ite $x1023 $x1036 (ite $x1020 $x1044 (ite $x1018 $x1041 $x1044)))))))
 (let (($x1029 (= c_______ left-to-center)))
 (let (($x1030 (and $x1029 $x1026)))
 (ite $x1030 $x1044 $x1058)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x786 (left s________)))
 (let ((?x924 (left s_________)))
 (let (($x1184 (= ?x924 ?x786)))
 (let ((?x820 (right s________)))
 (let ((?x1151 (top ?x820)))
 (let ((?x1152 (stack ?x1151 ?x786)))
 (let (($x1178 (= ?x924 ?x1152)))
 (let (($x1154 ((_ is stack ) ?x820)))
 (let (($x1157 (= c________ right-to-left)))
 (let (($x1158 (and $x1157 $x1154)))
 (let ((?x1006 (center s________)))
 (let (($x1159 ((_ is stack ) ?x1006)))
 (let (($x1160 (= c________ center-to-right)))
 (let (($x1161 (and $x1160 $x1159)))
 (let ((?x1147 (top ?x1006)))
 (let ((?x1148 (stack ?x1147 ?x786)))
 (let (($x1175 (= ?x924 ?x1148)))
 (let (($x1162 (= c________ center-to-left)))
 (let (($x1163 (and $x1162 $x1159)))
 (let ((?x957 (rest ?x786)))
 (let (($x1171 (= ?x924 ?x957)))
 (let (($x1164 ((_ is stack ) ?x786)))
 (let (($x1165 (= c________ left-to-right)))
 (let (($x1166 (and $x1165 $x1164)))
 (let (($x1167 (= c________ left-to-center)))
 (let (($x1168 (and $x1167 $x1164)))
 (ite $x1168 $x1171 (ite $x1166 $x1171 (ite $x1163 $x1175 (ite $x1161 $x1184 (ite $x1158 $x1178 $x1184))))))))))))))))))))))))))))))))
(assert
 (let ((?x820 (right s________)))
 (let ((?x958 (right s_________)))
 (let (($x1180 (= ?x958 ?x820)))
 (let ((?x1150 (rest ?x820)))
 (let (($x1177 (= ?x958 ?x1150)))
 (let (($x1154 ((_ is stack ) ?x820)))
 (let (($x1155 (= c________ right-to-center)))
 (let (($x1156 (and $x1155 $x1154)))
 (let (($x1157 (= c________ right-to-left)))
 (let (($x1158 (and $x1157 $x1154)))
 (let ((?x1006 (center s________)))
 (let ((?x1147 (top ?x1006)))
 (let ((?x1149 (stack ?x1147 ?x820)))
 (let (($x1176 (= ?x958 ?x1149)))
 (let (($x1159 ((_ is stack ) ?x1006)))
 (let (($x1160 (= c________ center-to-right)))
 (let (($x1161 (and $x1160 $x1159)))
 (let (($x1162 (= c________ center-to-left)))
 (let (($x1163 (and $x1162 $x1159)))
 (let ((?x786 (left s________)))
 (let (($x1164 ((_ is stack ) ?x786)))
 (let (($x1165 (= c________ left-to-right)))
 (let (($x1166 (and $x1165 $x1164)))
 (let (($x1197 (ite $x1166 $x1180 (ite $x1163 $x1180 (ite $x1161 $x1176 (ite $x1158 $x1177 (ite $x1156 $x1177 $x1180)))))))
 (let ((?x1004 (top ?x786)))
 (let ((?x1143 (stack ?x1004 ?x820)))
 (let (($x1172 (= ?x958 ?x1143)))
 (let (($x1167 (= c________ left-to-center)))
 (let (($x1168 (and $x1167 $x1164)))
 (ite $x1168 $x1172 $x1197)))))))))))))))))))))))))))))))
(assert
 (let ((?x1006 (center s________)))
 (let ((?x1144 (center s_________)))
 (let (($x1182 (= ?x1144 ?x1006)))
 (let ((?x820 (right s________)))
 (let ((?x1151 (top ?x820)))
 (let ((?x1153 (stack ?x1151 ?x1006)))
 (let (($x1179 (= ?x1144 ?x1153)))
 (let (($x1154 ((_ is stack ) ?x820)))
 (let (($x1155 (= c________ right-to-center)))
 (let (($x1156 (and $x1155 $x1154)))
 (let (($x1157 (= c________ right-to-left)))
 (let (($x1158 (and $x1157 $x1154)))
 (let ((?x1146 (rest ?x1006)))
 (let (($x1174 (= ?x1144 ?x1146)))
 (let (($x1159 ((_ is stack ) ?x1006)))
 (let (($x1160 (= c________ center-to-right)))
 (let (($x1161 (and $x1160 $x1159)))
 (let (($x1162 (= c________ center-to-left)))
 (let (($x1163 (and $x1162 $x1159)))
 (let ((?x786 (left s________)))
 (let ((?x1004 (top ?x786)))
 (let ((?x1145 (stack ?x1004 ?x1006)))
 (let (($x1173 (= ?x1144 ?x1145)))
 (let (($x1164 ((_ is stack ) ?x786)))
 (let (($x1165 (= c________ left-to-right)))
 (let (($x1166 (and $x1165 $x1164)))
 (let (($x1196 (ite $x1166 $x1173 (ite $x1163 $x1174 (ite $x1161 $x1174 (ite $x1158 $x1182 (ite $x1156 $x1179 $x1182)))))))
 (let (($x1167 (= c________ left-to-center)))
 (let (($x1168 (and $x1167 $x1164)))
 (ite $x1168 $x1182 $x1196)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x924 (left s_________)))
 (let ((?x1062 (left s__________)))
 (let (($x1322 (= ?x1062 ?x924)))
 (let ((?x958 (right s_________)))
 (let ((?x1289 (top ?x958)))
 (let ((?x1290 (stack ?x1289 ?x924)))
 (let (($x1316 (= ?x1062 ?x1290)))
 (let (($x1292 ((_ is stack ) ?x958)))
 (let (($x1295 (= c_________ right-to-left)))
 (let (($x1296 (and $x1295 $x1292)))
 (let ((?x1144 (center s_________)))
 (let (($x1297 ((_ is stack ) ?x1144)))
 (let (($x1298 (= c_________ center-to-right)))
 (let (($x1299 (and $x1298 $x1297)))
 (let ((?x1285 (top ?x1144)))
 (let ((?x1286 (stack ?x1285 ?x924)))
 (let (($x1313 (= ?x1062 ?x1286)))
 (let (($x1300 (= c_________ center-to-left)))
 (let (($x1301 (and $x1300 $x1297)))
 (let ((?x1095 (rest ?x924)))
 (let (($x1309 (= ?x1062 ?x1095)))
 (let (($x1302 ((_ is stack ) ?x924)))
 (let (($x1303 (= c_________ left-to-right)))
 (let (($x1304 (and $x1303 $x1302)))
 (let (($x1305 (= c_________ left-to-center)))
 (let (($x1306 (and $x1305 $x1302)))
 (ite $x1306 $x1309 (ite $x1304 $x1309 (ite $x1301 $x1313 (ite $x1299 $x1322 (ite $x1296 $x1316 $x1322))))))))))))))))))))))))))))))))
(assert
 (let ((?x958 (right s_________)))
 (let ((?x1096 (right s__________)))
 (let (($x1318 (= ?x1096 ?x958)))
 (let ((?x1288 (rest ?x958)))
 (let (($x1315 (= ?x1096 ?x1288)))
 (let (($x1292 ((_ is stack ) ?x958)))
 (let (($x1293 (= c_________ right-to-center)))
 (let (($x1294 (and $x1293 $x1292)))
 (let (($x1295 (= c_________ right-to-left)))
 (let (($x1296 (and $x1295 $x1292)))
 (let ((?x1144 (center s_________)))
 (let ((?x1285 (top ?x1144)))
 (let ((?x1287 (stack ?x1285 ?x958)))
 (let (($x1314 (= ?x1096 ?x1287)))
 (let (($x1297 ((_ is stack ) ?x1144)))
 (let (($x1298 (= c_________ center-to-right)))
 (let (($x1299 (and $x1298 $x1297)))
 (let (($x1300 (= c_________ center-to-left)))
 (let (($x1301 (and $x1300 $x1297)))
 (let ((?x924 (left s_________)))
 (let (($x1302 ((_ is stack ) ?x924)))
 (let (($x1303 (= c_________ left-to-right)))
 (let (($x1304 (and $x1303 $x1302)))
 (let (($x1335 (ite $x1304 $x1318 (ite $x1301 $x1318 (ite $x1299 $x1314 (ite $x1296 $x1315 (ite $x1294 $x1315 $x1318)))))))
 (let ((?x1142 (top ?x924)))
 (let ((?x1281 (stack ?x1142 ?x958)))
 (let (($x1310 (= ?x1096 ?x1281)))
 (let (($x1305 (= c_________ left-to-center)))
 (let (($x1306 (and $x1305 $x1302)))
 (ite $x1306 $x1310 $x1335)))))))))))))))))))))))))))))))
(assert
 (let ((?x1144 (center s_________)))
 (let ((?x1282 (center s__________)))
 (let (($x1320 (= ?x1282 ?x1144)))
 (let ((?x958 (right s_________)))
 (let ((?x1289 (top ?x958)))
 (let ((?x1291 (stack ?x1289 ?x1144)))
 (let (($x1317 (= ?x1282 ?x1291)))
 (let (($x1292 ((_ is stack ) ?x958)))
 (let (($x1293 (= c_________ right-to-center)))
 (let (($x1294 (and $x1293 $x1292)))
 (let (($x1295 (= c_________ right-to-left)))
 (let (($x1296 (and $x1295 $x1292)))
 (let ((?x1284 (rest ?x1144)))
 (let (($x1312 (= ?x1282 ?x1284)))
 (let (($x1297 ((_ is stack ) ?x1144)))
 (let (($x1298 (= c_________ center-to-right)))
 (let (($x1299 (and $x1298 $x1297)))
 (let (($x1300 (= c_________ center-to-left)))
 (let (($x1301 (and $x1300 $x1297)))
 (let ((?x924 (left s_________)))
 (let ((?x1142 (top ?x924)))
 (let ((?x1283 (stack ?x1142 ?x1144)))
 (let (($x1311 (= ?x1282 ?x1283)))
 (let (($x1302 ((_ is stack ) ?x924)))
 (let (($x1303 (= c_________ left-to-right)))
 (let (($x1304 (and $x1303 $x1302)))
 (let (($x1334 (ite $x1304 $x1311 (ite $x1301 $x1312 (ite $x1299 $x1312 (ite $x1296 $x1320 (ite $x1294 $x1317 $x1320)))))))
 (let (($x1305 (= c_________ left-to-center)))
 (let (($x1306 (and $x1305 $x1302)))
 (ite $x1306 $x1320 $x1334)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1062 (left s__________)))
 (let ((?x1200 (left s___________)))
 (let (($x1460 (= ?x1200 ?x1062)))
 (let ((?x1096 (right s__________)))
 (let ((?x1427 (top ?x1096)))
 (let ((?x1428 (stack ?x1427 ?x1062)))
 (let (($x1454 (= ?x1200 ?x1428)))
 (let (($x1430 ((_ is stack ) ?x1096)))
 (let (($x1433 (= c__________ right-to-left)))
 (let (($x1434 (and $x1433 $x1430)))
 (let ((?x1282 (center s__________)))
 (let (($x1435 ((_ is stack ) ?x1282)))
 (let (($x1436 (= c__________ center-to-right)))
 (let (($x1437 (and $x1436 $x1435)))
 (let ((?x1423 (top ?x1282)))
 (let ((?x1424 (stack ?x1423 ?x1062)))
 (let (($x1451 (= ?x1200 ?x1424)))
 (let (($x1438 (= c__________ center-to-left)))
 (let (($x1439 (and $x1438 $x1435)))
 (let ((?x1233 (rest ?x1062)))
 (let (($x1447 (= ?x1200 ?x1233)))
 (let (($x1440 ((_ is stack ) ?x1062)))
 (let (($x1441 (= c__________ left-to-right)))
 (let (($x1442 (and $x1441 $x1440)))
 (let (($x1443 (= c__________ left-to-center)))
 (let (($x1444 (and $x1443 $x1440)))
 (ite $x1444 $x1447 (ite $x1442 $x1447 (ite $x1439 $x1451 (ite $x1437 $x1460 (ite $x1434 $x1454 $x1460))))))))))))))))))))))))))))))))
(assert
 (let ((?x1096 (right s__________)))
 (let ((?x1234 (right s___________)))
 (let (($x1456 (= ?x1234 ?x1096)))
 (let ((?x1426 (rest ?x1096)))
 (let (($x1453 (= ?x1234 ?x1426)))
 (let (($x1430 ((_ is stack ) ?x1096)))
 (let (($x1431 (= c__________ right-to-center)))
 (let (($x1432 (and $x1431 $x1430)))
 (let (($x1433 (= c__________ right-to-left)))
 (let (($x1434 (and $x1433 $x1430)))
 (let ((?x1282 (center s__________)))
 (let ((?x1423 (top ?x1282)))
 (let ((?x1425 (stack ?x1423 ?x1096)))
 (let (($x1452 (= ?x1234 ?x1425)))
 (let (($x1435 ((_ is stack ) ?x1282)))
 (let (($x1436 (= c__________ center-to-right)))
 (let (($x1437 (and $x1436 $x1435)))
 (let (($x1438 (= c__________ center-to-left)))
 (let (($x1439 (and $x1438 $x1435)))
 (let ((?x1062 (left s__________)))
 (let (($x1440 ((_ is stack ) ?x1062)))
 (let (($x1441 (= c__________ left-to-right)))
 (let (($x1442 (and $x1441 $x1440)))
 (let (($x1473 (ite $x1442 $x1456 (ite $x1439 $x1456 (ite $x1437 $x1452 (ite $x1434 $x1453 (ite $x1432 $x1453 $x1456)))))))
 (let ((?x1280 (top ?x1062)))
 (let ((?x1419 (stack ?x1280 ?x1096)))
 (let (($x1448 (= ?x1234 ?x1419)))
 (let (($x1443 (= c__________ left-to-center)))
 (let (($x1444 (and $x1443 $x1440)))
 (ite $x1444 $x1448 $x1473)))))))))))))))))))))))))))))))
(assert
 (let ((?x1282 (center s__________)))
 (let ((?x1420 (center s___________)))
 (let (($x1458 (= ?x1420 ?x1282)))
 (let ((?x1096 (right s__________)))
 (let ((?x1427 (top ?x1096)))
 (let ((?x1429 (stack ?x1427 ?x1282)))
 (let (($x1455 (= ?x1420 ?x1429)))
 (let (($x1430 ((_ is stack ) ?x1096)))
 (let (($x1431 (= c__________ right-to-center)))
 (let (($x1432 (and $x1431 $x1430)))
 (let (($x1433 (= c__________ right-to-left)))
 (let (($x1434 (and $x1433 $x1430)))
 (let ((?x1422 (rest ?x1282)))
 (let (($x1450 (= ?x1420 ?x1422)))
 (let (($x1435 ((_ is stack ) ?x1282)))
 (let (($x1436 (= c__________ center-to-right)))
 (let (($x1437 (and $x1436 $x1435)))
 (let (($x1438 (= c__________ center-to-left)))
 (let (($x1439 (and $x1438 $x1435)))
 (let ((?x1062 (left s__________)))
 (let ((?x1280 (top ?x1062)))
 (let ((?x1421 (stack ?x1280 ?x1282)))
 (let (($x1449 (= ?x1420 ?x1421)))
 (let (($x1440 ((_ is stack ) ?x1062)))
 (let (($x1441 (= c__________ left-to-right)))
 (let (($x1442 (and $x1441 $x1440)))
 (let (($x1472 (ite $x1442 $x1449 (ite $x1439 $x1450 (ite $x1437 $x1450 (ite $x1434 $x1458 (ite $x1432 $x1455 $x1458)))))))
 (let (($x1443 (= c__________ left-to-center)))
 (let (($x1444 (and $x1443 $x1440)))
 (ite $x1444 $x1458 $x1472)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1200 (left s___________)))
 (let ((?x1338 (left s____________)))
 (let (($x1598 (= ?x1338 ?x1200)))
 (let ((?x1234 (right s___________)))
 (let ((?x1565 (top ?x1234)))
 (let ((?x1566 (stack ?x1565 ?x1200)))
 (let (($x1592 (= ?x1338 ?x1566)))
 (let (($x1568 ((_ is stack ) ?x1234)))
 (let (($x1571 (= c___________ right-to-left)))
 (let (($x1572 (and $x1571 $x1568)))
 (let ((?x1420 (center s___________)))
 (let (($x1573 ((_ is stack ) ?x1420)))
 (let (($x1574 (= c___________ center-to-right)))
 (let (($x1575 (and $x1574 $x1573)))
 (let ((?x1561 (top ?x1420)))
 (let ((?x1562 (stack ?x1561 ?x1200)))
 (let (($x1589 (= ?x1338 ?x1562)))
 (let (($x1576 (= c___________ center-to-left)))
 (let (($x1577 (and $x1576 $x1573)))
 (let ((?x1371 (rest ?x1200)))
 (let (($x1585 (= ?x1338 ?x1371)))
 (let (($x1578 ((_ is stack ) ?x1200)))
 (let (($x1579 (= c___________ left-to-right)))
 (let (($x1580 (and $x1579 $x1578)))
 (let (($x1581 (= c___________ left-to-center)))
 (let (($x1582 (and $x1581 $x1578)))
 (ite $x1582 $x1585 (ite $x1580 $x1585 (ite $x1577 $x1589 (ite $x1575 $x1598 (ite $x1572 $x1592 $x1598))))))))))))))))))))))))))))))))
(assert
 (let ((?x1234 (right s___________)))
 (let ((?x1372 (right s____________)))
 (let (($x1594 (= ?x1372 ?x1234)))
 (let ((?x1564 (rest ?x1234)))
 (let (($x1591 (= ?x1372 ?x1564)))
 (let (($x1568 ((_ is stack ) ?x1234)))
 (let (($x1569 (= c___________ right-to-center)))
 (let (($x1570 (and $x1569 $x1568)))
 (let (($x1571 (= c___________ right-to-left)))
 (let (($x1572 (and $x1571 $x1568)))
 (let ((?x1420 (center s___________)))
 (let ((?x1561 (top ?x1420)))
 (let ((?x1563 (stack ?x1561 ?x1234)))
 (let (($x1590 (= ?x1372 ?x1563)))
 (let (($x1573 ((_ is stack ) ?x1420)))
 (let (($x1574 (= c___________ center-to-right)))
 (let (($x1575 (and $x1574 $x1573)))
 (let (($x1576 (= c___________ center-to-left)))
 (let (($x1577 (and $x1576 $x1573)))
 (let ((?x1200 (left s___________)))
 (let (($x1578 ((_ is stack ) ?x1200)))
 (let (($x1579 (= c___________ left-to-right)))
 (let (($x1580 (and $x1579 $x1578)))
 (let (($x1611 (ite $x1580 $x1594 (ite $x1577 $x1594 (ite $x1575 $x1590 (ite $x1572 $x1591 (ite $x1570 $x1591 $x1594)))))))
 (let ((?x1418 (top ?x1200)))
 (let ((?x1557 (stack ?x1418 ?x1234)))
 (let (($x1586 (= ?x1372 ?x1557)))
 (let (($x1581 (= c___________ left-to-center)))
 (let (($x1582 (and $x1581 $x1578)))
 (ite $x1582 $x1586 $x1611)))))))))))))))))))))))))))))))
(assert
 (let ((?x1420 (center s___________)))
 (let ((?x1558 (center s____________)))
 (let (($x1596 (= ?x1558 ?x1420)))
 (let ((?x1234 (right s___________)))
 (let ((?x1565 (top ?x1234)))
 (let ((?x1567 (stack ?x1565 ?x1420)))
 (let (($x1593 (= ?x1558 ?x1567)))
 (let (($x1568 ((_ is stack ) ?x1234)))
 (let (($x1569 (= c___________ right-to-center)))
 (let (($x1570 (and $x1569 $x1568)))
 (let (($x1571 (= c___________ right-to-left)))
 (let (($x1572 (and $x1571 $x1568)))
 (let ((?x1560 (rest ?x1420)))
 (let (($x1588 (= ?x1558 ?x1560)))
 (let (($x1573 ((_ is stack ) ?x1420)))
 (let (($x1574 (= c___________ center-to-right)))
 (let (($x1575 (and $x1574 $x1573)))
 (let (($x1576 (= c___________ center-to-left)))
 (let (($x1577 (and $x1576 $x1573)))
 (let ((?x1200 (left s___________)))
 (let ((?x1418 (top ?x1200)))
 (let ((?x1559 (stack ?x1418 ?x1420)))
 (let (($x1587 (= ?x1558 ?x1559)))
 (let (($x1578 ((_ is stack ) ?x1200)))
 (let (($x1579 (= c___________ left-to-right)))
 (let (($x1580 (and $x1579 $x1578)))
 (let (($x1610 (ite $x1580 $x1587 (ite $x1577 $x1588 (ite $x1575 $x1588 (ite $x1572 $x1596 (ite $x1570 $x1593 $x1596)))))))
 (let (($x1581 (= c___________ left-to-center)))
 (let (($x1582 (and $x1581 $x1578)))
 (ite $x1582 $x1596 $x1610)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1338 (left s____________)))
 (let ((?x1476 (left s_____________)))
 (let (($x1736 (= ?x1476 ?x1338)))
 (let ((?x1372 (right s____________)))
 (let ((?x1703 (top ?x1372)))
 (let ((?x1704 (stack ?x1703 ?x1338)))
 (let (($x1730 (= ?x1476 ?x1704)))
 (let (($x1706 ((_ is stack ) ?x1372)))
 (let (($x1709 (= c____________ right-to-left)))
 (let (($x1710 (and $x1709 $x1706)))
 (let ((?x1558 (center s____________)))
 (let (($x1711 ((_ is stack ) ?x1558)))
 (let (($x1712 (= c____________ center-to-right)))
 (let (($x1713 (and $x1712 $x1711)))
 (let ((?x1699 (top ?x1558)))
 (let ((?x1700 (stack ?x1699 ?x1338)))
 (let (($x1727 (= ?x1476 ?x1700)))
 (let (($x1714 (= c____________ center-to-left)))
 (let (($x1715 (and $x1714 $x1711)))
 (let ((?x1509 (rest ?x1338)))
 (let (($x1723 (= ?x1476 ?x1509)))
 (let (($x1716 ((_ is stack ) ?x1338)))
 (let (($x1717 (= c____________ left-to-right)))
 (let (($x1718 (and $x1717 $x1716)))
 (let (($x1719 (= c____________ left-to-center)))
 (let (($x1720 (and $x1719 $x1716)))
 (ite $x1720 $x1723 (ite $x1718 $x1723 (ite $x1715 $x1727 (ite $x1713 $x1736 (ite $x1710 $x1730 $x1736))))))))))))))))))))))))))))))))
(assert
 (let ((?x1372 (right s____________)))
 (let ((?x1510 (right s_____________)))
 (let (($x1732 (= ?x1510 ?x1372)))
 (let ((?x1702 (rest ?x1372)))
 (let (($x1729 (= ?x1510 ?x1702)))
 (let (($x1706 ((_ is stack ) ?x1372)))
 (let (($x1707 (= c____________ right-to-center)))
 (let (($x1708 (and $x1707 $x1706)))
 (let (($x1709 (= c____________ right-to-left)))
 (let (($x1710 (and $x1709 $x1706)))
 (let ((?x1558 (center s____________)))
 (let ((?x1699 (top ?x1558)))
 (let ((?x1701 (stack ?x1699 ?x1372)))
 (let (($x1728 (= ?x1510 ?x1701)))
 (let (($x1711 ((_ is stack ) ?x1558)))
 (let (($x1712 (= c____________ center-to-right)))
 (let (($x1713 (and $x1712 $x1711)))
 (let (($x1714 (= c____________ center-to-left)))
 (let (($x1715 (and $x1714 $x1711)))
 (let ((?x1338 (left s____________)))
 (let (($x1716 ((_ is stack ) ?x1338)))
 (let (($x1717 (= c____________ left-to-right)))
 (let (($x1718 (and $x1717 $x1716)))
 (let (($x1749 (ite $x1718 $x1732 (ite $x1715 $x1732 (ite $x1713 $x1728 (ite $x1710 $x1729 (ite $x1708 $x1729 $x1732)))))))
 (let ((?x1556 (top ?x1338)))
 (let ((?x1695 (stack ?x1556 ?x1372)))
 (let (($x1724 (= ?x1510 ?x1695)))
 (let (($x1719 (= c____________ left-to-center)))
 (let (($x1720 (and $x1719 $x1716)))
 (ite $x1720 $x1724 $x1749)))))))))))))))))))))))))))))))
(assert
 (let ((?x1558 (center s____________)))
 (let ((?x1696 (center s_____________)))
 (let (($x1734 (= ?x1696 ?x1558)))
 (let ((?x1372 (right s____________)))
 (let ((?x1703 (top ?x1372)))
 (let ((?x1705 (stack ?x1703 ?x1558)))
 (let (($x1731 (= ?x1696 ?x1705)))
 (let (($x1706 ((_ is stack ) ?x1372)))
 (let (($x1707 (= c____________ right-to-center)))
 (let (($x1708 (and $x1707 $x1706)))
 (let (($x1709 (= c____________ right-to-left)))
 (let (($x1710 (and $x1709 $x1706)))
 (let ((?x1698 (rest ?x1558)))
 (let (($x1726 (= ?x1696 ?x1698)))
 (let (($x1711 ((_ is stack ) ?x1558)))
 (let (($x1712 (= c____________ center-to-right)))
 (let (($x1713 (and $x1712 $x1711)))
 (let (($x1714 (= c____________ center-to-left)))
 (let (($x1715 (and $x1714 $x1711)))
 (let ((?x1338 (left s____________)))
 (let ((?x1556 (top ?x1338)))
 (let ((?x1697 (stack ?x1556 ?x1558)))
 (let (($x1725 (= ?x1696 ?x1697)))
 (let (($x1716 ((_ is stack ) ?x1338)))
 (let (($x1717 (= c____________ left-to-right)))
 (let (($x1718 (and $x1717 $x1716)))
 (let (($x1748 (ite $x1718 $x1725 (ite $x1715 $x1726 (ite $x1713 $x1726 (ite $x1710 $x1734 (ite $x1708 $x1731 $x1734)))))))
 (let (($x1719 (= c____________ left-to-center)))
 (let (($x1720 (and $x1719 $x1716)))
 (ite $x1720 $x1734 $x1748)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1476 (left s_____________)))
 (let ((?x1614 (left s______________)))
 (let (($x1874 (= ?x1614 ?x1476)))
 (let ((?x1510 (right s_____________)))
 (let ((?x1841 (top ?x1510)))
 (let ((?x1842 (stack ?x1841 ?x1476)))
 (let (($x1868 (= ?x1614 ?x1842)))
 (let (($x1844 ((_ is stack ) ?x1510)))
 (let (($x1847 (= c_____________ right-to-left)))
 (let (($x1848 (and $x1847 $x1844)))
 (let ((?x1696 (center s_____________)))
 (let (($x1849 ((_ is stack ) ?x1696)))
 (let (($x1850 (= c_____________ center-to-right)))
 (let (($x1851 (and $x1850 $x1849)))
 (let ((?x1837 (top ?x1696)))
 (let ((?x1838 (stack ?x1837 ?x1476)))
 (let (($x1865 (= ?x1614 ?x1838)))
 (let (($x1852 (= c_____________ center-to-left)))
 (let (($x1853 (and $x1852 $x1849)))
 (let ((?x1647 (rest ?x1476)))
 (let (($x1861 (= ?x1614 ?x1647)))
 (let (($x1854 ((_ is stack ) ?x1476)))
 (let (($x1855 (= c_____________ left-to-right)))
 (let (($x1856 (and $x1855 $x1854)))
 (let (($x1857 (= c_____________ left-to-center)))
 (let (($x1858 (and $x1857 $x1854)))
 (ite $x1858 $x1861 (ite $x1856 $x1861 (ite $x1853 $x1865 (ite $x1851 $x1874 (ite $x1848 $x1868 $x1874))))))))))))))))))))))))))))))))
(assert
 (let ((?x1510 (right s_____________)))
 (let ((?x1648 (right s______________)))
 (let (($x1870 (= ?x1648 ?x1510)))
 (let ((?x1840 (rest ?x1510)))
 (let (($x1867 (= ?x1648 ?x1840)))
 (let (($x1844 ((_ is stack ) ?x1510)))
 (let (($x1845 (= c_____________ right-to-center)))
 (let (($x1846 (and $x1845 $x1844)))
 (let (($x1847 (= c_____________ right-to-left)))
 (let (($x1848 (and $x1847 $x1844)))
 (let ((?x1696 (center s_____________)))
 (let ((?x1837 (top ?x1696)))
 (let ((?x1839 (stack ?x1837 ?x1510)))
 (let (($x1866 (= ?x1648 ?x1839)))
 (let (($x1849 ((_ is stack ) ?x1696)))
 (let (($x1850 (= c_____________ center-to-right)))
 (let (($x1851 (and $x1850 $x1849)))
 (let (($x1852 (= c_____________ center-to-left)))
 (let (($x1853 (and $x1852 $x1849)))
 (let ((?x1476 (left s_____________)))
 (let (($x1854 ((_ is stack ) ?x1476)))
 (let (($x1855 (= c_____________ left-to-right)))
 (let (($x1856 (and $x1855 $x1854)))
 (let (($x1887 (ite $x1856 $x1870 (ite $x1853 $x1870 (ite $x1851 $x1866 (ite $x1848 $x1867 (ite $x1846 $x1867 $x1870)))))))
 (let ((?x1694 (top ?x1476)))
 (let ((?x1833 (stack ?x1694 ?x1510)))
 (let (($x1862 (= ?x1648 ?x1833)))
 (let (($x1857 (= c_____________ left-to-center)))
 (let (($x1858 (and $x1857 $x1854)))
 (ite $x1858 $x1862 $x1887)))))))))))))))))))))))))))))))
(assert
 (let ((?x1696 (center s_____________)))
 (let ((?x1834 (center s______________)))
 (let (($x1872 (= ?x1834 ?x1696)))
 (let ((?x1510 (right s_____________)))
 (let ((?x1841 (top ?x1510)))
 (let ((?x1843 (stack ?x1841 ?x1696)))
 (let (($x1869 (= ?x1834 ?x1843)))
 (let (($x1844 ((_ is stack ) ?x1510)))
 (let (($x1845 (= c_____________ right-to-center)))
 (let (($x1846 (and $x1845 $x1844)))
 (let (($x1847 (= c_____________ right-to-left)))
 (let (($x1848 (and $x1847 $x1844)))
 (let ((?x1836 (rest ?x1696)))
 (let (($x1864 (= ?x1834 ?x1836)))
 (let (($x1849 ((_ is stack ) ?x1696)))
 (let (($x1850 (= c_____________ center-to-right)))
 (let (($x1851 (and $x1850 $x1849)))
 (let (($x1852 (= c_____________ center-to-left)))
 (let (($x1853 (and $x1852 $x1849)))
 (let ((?x1476 (left s_____________)))
 (let ((?x1694 (top ?x1476)))
 (let ((?x1835 (stack ?x1694 ?x1696)))
 (let (($x1863 (= ?x1834 ?x1835)))
 (let (($x1854 ((_ is stack ) ?x1476)))
 (let (($x1855 (= c_____________ left-to-right)))
 (let (($x1856 (and $x1855 $x1854)))
 (let (($x1886 (ite $x1856 $x1863 (ite $x1853 $x1864 (ite $x1851 $x1864 (ite $x1848 $x1872 (ite $x1846 $x1869 $x1872)))))))
 (let (($x1857 (= c_____________ left-to-center)))
 (let (($x1858 (and $x1857 $x1854)))
 (ite $x1858 $x1872 $x1886)))))))))))))))))))))))))))))))
(assert
 (let ((?x37 (stack C empty)))
 (let ((?x1648 (right s______________)))
 (let (($x1890 (= ?x1648 ?x37)))
 (let ((?x1834 (center s______________)))
 (let (($x1921 (= ?x1834 empty)))
 (let ((?x34 (stack H (stack E (stack G (stack F (stack A (stack B empty))))))))
 (let ((?x36 (stack D (stack I ?x34))))
 (let ((?x1614 (left s______________)))
 (let (($x1922 (= ?x1614 ?x36)))
 (let (($x1924 (not (and $x1922 $x1921 $x1890))))
 (not $x1924))))))))))))
(check-sat)
(exit)
