(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H 0)) (((A) (B) (C) (D) (E) (F) (G) (H))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x20 (stack D empty)))
 (let ((?x21 (stack H ?x20)))
 (let ((?x22 (stack G ?x21)))
 (let ((?x82 (left s_tmp_)))
 (= ?x82 ?x22))))))
(assert
 (let ((?x23 (stack C empty)))
 (let ((?x24 (stack F ?x23)))
 (let ((?x25 (stack E ?x24)))
 (let ((?x26 (stack B ?x25)))
 (let ((?x27 (stack A ?x26)))
 (let ((?x85 (center s_tmp__)))
 (= ?x85 ?x27))))))))
(assert
 (let ((?x88 (right s_tmp___)))
 (= ?x88 empty)))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x115 (left s_tmp__)))
 (= (left s_tmp___) ?x115)))
(assert
 (let ((?x85 (center s_tmp__)))
 (= (center s_tmp___) ?x85)))
(assert
 (let ((?x119 (center s_tmp_)))
 (= ?x119 (center s_tmp))))
(assert
 (let ((?x122 (right s_tmp_)))
 (= ?x122 (right s_tmp))))
(assert
 (let ((?x82 (left s_tmp_)))
 (let ((?x115 (left s_tmp__)))
 (= ?x115 ?x82))))
(assert
 (let ((?x122 (right s_tmp_)))
 (let ((?x126 (right s_tmp__)))
 (= ?x126 ?x122))))
(assert
 (= c__ c!1))
(assert
 (let ((?x59 (left s_)))
 (let ((?x193 (left s__)))
 (let (($x238 (= ?x193 ?x59)))
 (let ((?x62 (right s_)))
 (let (($x208 ((_ is stack ) ?x62)))
 (let (($x212 (and (= c_ right-to-left) $x208)))
 (let ((?x64 (center s_)))
 (let (($x213 ((_ is stack ) ?x64)))
 (let (($x214 (= c_ center-to-right)))
 (let (($x215 (and $x214 $x213)))
 (let (($x216 (= c_ center-to-left)))
 (let (($x217 (and $x216 $x213)))
 (let (($x247 (ite $x217 (= ?x193 (stack (top ?x64) ?x59)) (ite $x215 $x238 (ite $x212 (= ?x193 (stack (top ?x62) ?x59)) $x238)))))
 (let (($x225 (= ?x193 (rest ?x59))))
 (let (($x218 ((_ is stack ) ?x59)))
 (let (($x219 (= c_ left-to-right)))
 (let (($x220 (and $x219 $x218)))
 (let (($x221 (= c_ left-to-center)))
 (let (($x222 (and $x221 $x218)))
 (ite $x222 $x225 (ite $x220 $x225 $x247))))))))))))))))))))))
(assert
 (let ((?x62 (right s_)))
 (let ((?x195 (right s__)))
 (let (($x234 (= ?x195 ?x62)))
 (let (($x231 (= ?x195 (rest ?x62))))
 (let (($x208 ((_ is stack ) ?x62)))
 (let (($x210 (and (= c_ right-to-center) $x208)))
 (let (($x212 (and (= c_ right-to-left) $x208)))
 (let ((?x64 (center s_)))
 (let (($x213 ((_ is stack ) ?x64)))
 (let (($x214 (= c_ center-to-right)))
 (let (($x215 (and $x214 $x213)))
 (let (($x244 (ite $x215 (= ?x195 (stack (top ?x64) ?x62)) (ite $x212 $x231 (ite $x210 $x231 $x234)))))
 (let (($x216 (= c_ center-to-left)))
 (let (($x217 (and $x216 $x213)))
 (let ((?x59 (left s_)))
 (let (($x218 ((_ is stack ) ?x59)))
 (let (($x219 (= c_ left-to-right)))
 (let (($x220 (and $x219 $x218)))
 (let (($x221 (= c_ left-to-center)))
 (let (($x222 (and $x221 $x218)))
 (ite $x222 (= ?x195 (stack (top ?x59) ?x62)) (ite $x220 $x234 (ite $x217 $x234 $x244))))))))))))))))))))))))
(assert
 (let ((?x64 (center s_)))
 (let ((?x198 (center s__)))
 (let (($x236 (= ?x198 ?x64)))
 (let ((?x62 (right s_)))
 (let (($x208 ((_ is stack ) ?x62)))
 (let (($x210 (and (= c_ right-to-center) $x208)))
 (let (($x212 (and (= c_ right-to-left) $x208)))
 (let (($x228 (= ?x198 (rest ?x64))))
 (let (($x213 ((_ is stack ) ?x64)))
 (let (($x214 (= c_ center-to-right)))
 (let (($x215 (and $x214 $x213)))
 (let (($x243 (ite $x215 $x228 (ite $x212 $x236 (ite $x210 (= ?x198 (stack (top ?x62) ?x64)) $x236)))))
 (let (($x216 (= c_ center-to-left)))
 (let (($x217 (and $x216 $x213)))
 (let ((?x59 (left s_)))
 (let (($x218 ((_ is stack ) ?x59)))
 (let (($x219 (= c_ left-to-right)))
 (let (($x220 (and $x219 $x218)))
 (let (($x221 (= c_ left-to-center)))
 (let (($x222 (and $x221 $x218)))
 (ite $x222 $x236 (ite $x220 (= ?x198 (stack (top ?x59) ?x64)) (ite $x217 $x228 $x243))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x193 (left s__)))
 (let ((?x131 (left s___)))
 (let (($x348 (= ?x131 ?x193)))
 (let ((?x195 (right s__)))
 (let ((?x315 (top ?x195)))
 (let ((?x316 (stack ?x315 ?x193)))
 (let (($x342 (= ?x131 ?x316)))
 (let (($x318 ((_ is stack ) ?x195)))
 (let (($x321 (= c__ right-to-left)))
 (let (($x322 (and $x321 $x318)))
 (let ((?x198 (center s__)))
 (let (($x323 ((_ is stack ) ?x198)))
 (let (($x324 (= c__ center-to-right)))
 (let (($x325 (and $x324 $x323)))
 (let ((?x311 (top ?x198)))
 (let ((?x312 (stack ?x311 ?x193)))
 (let (($x339 (= ?x131 ?x312)))
 (let (($x326 (= c__ center-to-left)))
 (let (($x327 (and $x326 $x323)))
 (let ((?x132 (rest ?x193)))
 (let (($x335 (= ?x131 ?x132)))
 (let (($x328 ((_ is stack ) ?x193)))
 (let (($x329 (= c__ left-to-right)))
 (let (($x330 (and $x329 $x328)))
 (let (($x331 (= c__ left-to-center)))
 (let (($x332 (and $x331 $x328)))
 (ite $x332 $x335 (ite $x330 $x335 (ite $x327 $x339 (ite $x325 $x348 (ite $x322 $x342 $x348))))))))))))))))))))))))))))))))
(assert
 (let ((?x195 (right s__)))
 (let ((?x190 (right s___)))
 (let (($x344 (= ?x190 ?x195)))
 (let ((?x314 (rest ?x195)))
 (let (($x341 (= ?x190 ?x314)))
 (let (($x318 ((_ is stack ) ?x195)))
 (let (($x319 (= c__ right-to-center)))
 (let (($x320 (and $x319 $x318)))
 (let (($x321 (= c__ right-to-left)))
 (let (($x322 (and $x321 $x318)))
 (let ((?x198 (center s__)))
 (let ((?x311 (top ?x198)))
 (let ((?x313 (stack ?x311 ?x195)))
 (let (($x340 (= ?x190 ?x313)))
 (let (($x323 ((_ is stack ) ?x198)))
 (let (($x324 (= c__ center-to-right)))
 (let (($x325 (and $x324 $x323)))
 (let (($x326 (= c__ center-to-left)))
 (let (($x327 (and $x326 $x323)))
 (let ((?x193 (left s__)))
 (let (($x328 ((_ is stack ) ?x193)))
 (let (($x329 (= c__ left-to-right)))
 (let (($x330 (and $x329 $x328)))
 (let (($x361 (ite $x330 $x344 (ite $x327 $x344 (ite $x325 $x340 (ite $x322 $x341 (ite $x320 $x341 $x344)))))))
 (let ((?x306 (top ?x193)))
 (let ((?x307 (stack ?x306 ?x195)))
 (let (($x336 (= ?x190 ?x307)))
 (let (($x331 (= c__ left-to-center)))
 (let (($x332 (and $x331 $x328)))
 (ite $x332 $x336 $x361)))))))))))))))))))))))))))))))
(assert
 (let ((?x198 (center s__)))
 (let ((?x308 (center s___)))
 (let (($x346 (= ?x308 ?x198)))
 (let ((?x195 (right s__)))
 (let ((?x315 (top ?x195)))
 (let ((?x317 (stack ?x315 ?x198)))
 (let (($x343 (= ?x308 ?x317)))
 (let (($x318 ((_ is stack ) ?x195)))
 (let (($x319 (= c__ right-to-center)))
 (let (($x320 (and $x319 $x318)))
 (let (($x321 (= c__ right-to-left)))
 (let (($x322 (and $x321 $x318)))
 (let ((?x310 (rest ?x198)))
 (let (($x338 (= ?x308 ?x310)))
 (let (($x323 ((_ is stack ) ?x198)))
 (let (($x324 (= c__ center-to-right)))
 (let (($x325 (and $x324 $x323)))
 (let (($x326 (= c__ center-to-left)))
 (let (($x327 (and $x326 $x323)))
 (let ((?x193 (left s__)))
 (let ((?x306 (top ?x193)))
 (let ((?x309 (stack ?x306 ?x198)))
 (let (($x337 (= ?x308 ?x309)))
 (let (($x328 ((_ is stack ) ?x193)))
 (let (($x329 (= c__ left-to-right)))
 (let (($x330 (and $x329 $x328)))
 (let (($x360 (ite $x330 $x337 (ite $x327 $x338 (ite $x325 $x338 (ite $x322 $x346 (ite $x320 $x343 $x346)))))))
 (let (($x331 (= c__ left-to-center)))
 (let (($x332 (and $x331 $x328)))
 (ite $x332 $x346 $x360)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x131 (left s___)))
 (let ((?x283 (left s____)))
 (let (($x487 (= ?x283 ?x131)))
 (let ((?x190 (right s___)))
 (let ((?x454 (top ?x190)))
 (let ((?x455 (stack ?x454 ?x131)))
 (let (($x481 (= ?x283 ?x455)))
 (let (($x457 ((_ is stack ) ?x190)))
 (let (($x460 (= c___ right-to-left)))
 (let (($x461 (and $x460 $x457)))
 (let ((?x308 (center s___)))
 (let (($x462 ((_ is stack ) ?x308)))
 (let (($x463 (= c___ center-to-right)))
 (let (($x464 (and $x463 $x462)))
 (let ((?x450 (top ?x308)))
 (let ((?x451 (stack ?x450 ?x131)))
 (let (($x478 (= ?x283 ?x451)))
 (let (($x465 (= c___ center-to-left)))
 (let (($x466 (and $x465 $x462)))
 (let ((?x284 (rest ?x131)))
 (let (($x474 (= ?x283 ?x284)))
 (let (($x467 ((_ is stack ) ?x131)))
 (let (($x468 (= c___ left-to-right)))
 (let (($x469 (and $x468 $x467)))
 (let (($x470 (= c___ left-to-center)))
 (let (($x471 (and $x470 $x467)))
 (ite $x471 $x474 (ite $x469 $x474 (ite $x466 $x478 (ite $x464 $x487 (ite $x461 $x481 $x487))))))))))))))))))))))))))))))))
(assert
 (let ((?x190 (right s___)))
 (let ((?x305 (right s____)))
 (let (($x483 (= ?x305 ?x190)))
 (let ((?x453 (rest ?x190)))
 (let (($x480 (= ?x305 ?x453)))
 (let (($x457 ((_ is stack ) ?x190)))
 (let (($x458 (= c___ right-to-center)))
 (let (($x459 (and $x458 $x457)))
 (let (($x460 (= c___ right-to-left)))
 (let (($x461 (and $x460 $x457)))
 (let ((?x308 (center s___)))
 (let ((?x450 (top ?x308)))
 (let ((?x452 (stack ?x450 ?x190)))
 (let (($x479 (= ?x305 ?x452)))
 (let (($x462 ((_ is stack ) ?x308)))
 (let (($x463 (= c___ center-to-right)))
 (let (($x464 (and $x463 $x462)))
 (let (($x465 (= c___ center-to-left)))
 (let (($x466 (and $x465 $x462)))
 (let ((?x131 (left s___)))
 (let (($x467 ((_ is stack ) ?x131)))
 (let (($x468 (= c___ left-to-right)))
 (let (($x469 (and $x468 $x467)))
 (let (($x500 (ite $x469 $x483 (ite $x466 $x483 (ite $x464 $x479 (ite $x461 $x480 (ite $x459 $x480 $x483)))))))
 (let ((?x445 (top ?x131)))
 (let ((?x446 (stack ?x445 ?x190)))
 (let (($x475 (= ?x305 ?x446)))
 (let (($x470 (= c___ left-to-center)))
 (let (($x471 (and $x470 $x467)))
 (ite $x471 $x475 $x500)))))))))))))))))))))))))))))))
(assert
 (let ((?x308 (center s___)))
 (let ((?x447 (center s____)))
 (let (($x485 (= ?x447 ?x308)))
 (let ((?x190 (right s___)))
 (let ((?x454 (top ?x190)))
 (let ((?x456 (stack ?x454 ?x308)))
 (let (($x482 (= ?x447 ?x456)))
 (let (($x457 ((_ is stack ) ?x190)))
 (let (($x458 (= c___ right-to-center)))
 (let (($x459 (and $x458 $x457)))
 (let (($x460 (= c___ right-to-left)))
 (let (($x461 (and $x460 $x457)))
 (let ((?x449 (rest ?x308)))
 (let (($x477 (= ?x447 ?x449)))
 (let (($x462 ((_ is stack ) ?x308)))
 (let (($x463 (= c___ center-to-right)))
 (let (($x464 (and $x463 $x462)))
 (let (($x465 (= c___ center-to-left)))
 (let (($x466 (and $x465 $x462)))
 (let ((?x131 (left s___)))
 (let ((?x445 (top ?x131)))
 (let ((?x448 (stack ?x445 ?x308)))
 (let (($x476 (= ?x447 ?x448)))
 (let (($x467 ((_ is stack ) ?x131)))
 (let (($x468 (= c___ left-to-right)))
 (let (($x469 (and $x468 $x467)))
 (let (($x499 (ite $x469 $x476 (ite $x466 $x477 (ite $x464 $x477 (ite $x461 $x485 (ite $x459 $x482 $x485)))))))
 (let (($x470 (= c___ left-to-center)))
 (let (($x471 (and $x470 $x467)))
 (ite $x471 $x485 $x499)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x283 (left s____)))
 (let ((?x364 (left s_____)))
 (let (($x625 (= ?x364 ?x283)))
 (let ((?x305 (right s____)))
 (let ((?x592 (top ?x305)))
 (let ((?x593 (stack ?x592 ?x283)))
 (let (($x619 (= ?x364 ?x593)))
 (let (($x595 ((_ is stack ) ?x305)))
 (let (($x598 (= c____ right-to-left)))
 (let (($x599 (and $x598 $x595)))
 (let ((?x447 (center s____)))
 (let (($x600 ((_ is stack ) ?x447)))
 (let (($x601 (= c____ center-to-right)))
 (let (($x602 (and $x601 $x600)))
 (let ((?x588 (top ?x447)))
 (let ((?x589 (stack ?x588 ?x283)))
 (let (($x616 (= ?x364 ?x589)))
 (let (($x603 (= c____ center-to-left)))
 (let (($x604 (and $x603 $x600)))
 (let ((?x397 (rest ?x283)))
 (let (($x612 (= ?x364 ?x397)))
 (let (($x605 ((_ is stack ) ?x283)))
 (let (($x606 (= c____ left-to-right)))
 (let (($x607 (and $x606 $x605)))
 (let (($x608 (= c____ left-to-center)))
 (let (($x609 (and $x608 $x605)))
 (ite $x609 $x612 (ite $x607 $x612 (ite $x604 $x616 (ite $x602 $x625 (ite $x599 $x619 $x625))))))))))))))))))))))))))))))))
(assert
 (let ((?x305 (right s____)))
 (let ((?x398 (right s_____)))
 (let (($x621 (= ?x398 ?x305)))
 (let ((?x591 (rest ?x305)))
 (let (($x618 (= ?x398 ?x591)))
 (let (($x595 ((_ is stack ) ?x305)))
 (let (($x596 (= c____ right-to-center)))
 (let (($x597 (and $x596 $x595)))
 (let (($x598 (= c____ right-to-left)))
 (let (($x599 (and $x598 $x595)))
 (let ((?x447 (center s____)))
 (let ((?x588 (top ?x447)))
 (let ((?x590 (stack ?x588 ?x305)))
 (let (($x617 (= ?x398 ?x590)))
 (let (($x600 ((_ is stack ) ?x447)))
 (let (($x601 (= c____ center-to-right)))
 (let (($x602 (and $x601 $x600)))
 (let (($x603 (= c____ center-to-left)))
 (let (($x604 (and $x603 $x600)))
 (let ((?x283 (left s____)))
 (let (($x605 ((_ is stack ) ?x283)))
 (let (($x606 (= c____ left-to-right)))
 (let (($x607 (and $x606 $x605)))
 (let (($x638 (ite $x607 $x621 (ite $x604 $x621 (ite $x602 $x617 (ite $x599 $x618 (ite $x597 $x618 $x621)))))))
 (let ((?x444 (top ?x283)))
 (let ((?x584 (stack ?x444 ?x305)))
 (let (($x613 (= ?x398 ?x584)))
 (let (($x608 (= c____ left-to-center)))
 (let (($x609 (and $x608 $x605)))
 (ite $x609 $x613 $x638)))))))))))))))))))))))))))))))
(assert
 (let ((?x447 (center s____)))
 (let ((?x585 (center s_____)))
 (let (($x623 (= ?x585 ?x447)))
 (let ((?x305 (right s____)))
 (let ((?x592 (top ?x305)))
 (let ((?x594 (stack ?x592 ?x447)))
 (let (($x620 (= ?x585 ?x594)))
 (let (($x595 ((_ is stack ) ?x305)))
 (let (($x596 (= c____ right-to-center)))
 (let (($x597 (and $x596 $x595)))
 (let (($x598 (= c____ right-to-left)))
 (let (($x599 (and $x598 $x595)))
 (let ((?x587 (rest ?x447)))
 (let (($x615 (= ?x585 ?x587)))
 (let (($x600 ((_ is stack ) ?x447)))
 (let (($x601 (= c____ center-to-right)))
 (let (($x602 (and $x601 $x600)))
 (let (($x603 (= c____ center-to-left)))
 (let (($x604 (and $x603 $x600)))
 (let ((?x283 (left s____)))
 (let ((?x444 (top ?x283)))
 (let ((?x586 (stack ?x444 ?x447)))
 (let (($x614 (= ?x585 ?x586)))
 (let (($x605 ((_ is stack ) ?x283)))
 (let (($x606 (= c____ left-to-right)))
 (let (($x607 (and $x606 $x605)))
 (let (($x637 (ite $x607 $x614 (ite $x604 $x615 (ite $x602 $x615 (ite $x599 $x623 (ite $x597 $x620 $x623)))))))
 (let (($x608 (= c____ left-to-center)))
 (let (($x609 (and $x608 $x605)))
 (ite $x609 $x623 $x637)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x364 (left s_____)))
 (let ((?x503 (left s______)))
 (let (($x763 (= ?x503 ?x364)))
 (let ((?x398 (right s_____)))
 (let ((?x730 (top ?x398)))
 (let ((?x731 (stack ?x730 ?x364)))
 (let (($x757 (= ?x503 ?x731)))
 (let (($x733 ((_ is stack ) ?x398)))
 (let (($x736 (= c_____ right-to-left)))
 (let (($x737 (and $x736 $x733)))
 (let ((?x585 (center s_____)))
 (let (($x738 ((_ is stack ) ?x585)))
 (let (($x739 (= c_____ center-to-right)))
 (let (($x740 (and $x739 $x738)))
 (let ((?x726 (top ?x585)))
 (let ((?x727 (stack ?x726 ?x364)))
 (let (($x754 (= ?x503 ?x727)))
 (let (($x741 (= c_____ center-to-left)))
 (let (($x742 (and $x741 $x738)))
 (let ((?x536 (rest ?x364)))
 (let (($x750 (= ?x503 ?x536)))
 (let (($x743 ((_ is stack ) ?x364)))
 (let (($x744 (= c_____ left-to-right)))
 (let (($x745 (and $x744 $x743)))
 (let (($x746 (= c_____ left-to-center)))
 (let (($x747 (and $x746 $x743)))
 (ite $x747 $x750 (ite $x745 $x750 (ite $x742 $x754 (ite $x740 $x763 (ite $x737 $x757 $x763))))))))))))))))))))))))))))))))
(assert
 (let ((?x398 (right s_____)))
 (let ((?x537 (right s______)))
 (let (($x759 (= ?x537 ?x398)))
 (let ((?x729 (rest ?x398)))
 (let (($x756 (= ?x537 ?x729)))
 (let (($x733 ((_ is stack ) ?x398)))
 (let (($x734 (= c_____ right-to-center)))
 (let (($x735 (and $x734 $x733)))
 (let (($x736 (= c_____ right-to-left)))
 (let (($x737 (and $x736 $x733)))
 (let ((?x585 (center s_____)))
 (let ((?x726 (top ?x585)))
 (let ((?x728 (stack ?x726 ?x398)))
 (let (($x755 (= ?x537 ?x728)))
 (let (($x738 ((_ is stack ) ?x585)))
 (let (($x739 (= c_____ center-to-right)))
 (let (($x740 (and $x739 $x738)))
 (let (($x741 (= c_____ center-to-left)))
 (let (($x742 (and $x741 $x738)))
 (let ((?x364 (left s_____)))
 (let (($x743 ((_ is stack ) ?x364)))
 (let (($x744 (= c_____ left-to-right)))
 (let (($x745 (and $x744 $x743)))
 (let (($x776 (ite $x745 $x759 (ite $x742 $x759 (ite $x740 $x755 (ite $x737 $x756 (ite $x735 $x756 $x759)))))))
 (let ((?x583 (top ?x364)))
 (let ((?x722 (stack ?x583 ?x398)))
 (let (($x751 (= ?x537 ?x722)))
 (let (($x746 (= c_____ left-to-center)))
 (let (($x747 (and $x746 $x743)))
 (ite $x747 $x751 $x776)))))))))))))))))))))))))))))))
(assert
 (let ((?x585 (center s_____)))
 (let ((?x723 (center s______)))
 (let (($x761 (= ?x723 ?x585)))
 (let ((?x398 (right s_____)))
 (let ((?x730 (top ?x398)))
 (let ((?x732 (stack ?x730 ?x585)))
 (let (($x758 (= ?x723 ?x732)))
 (let (($x733 ((_ is stack ) ?x398)))
 (let (($x734 (= c_____ right-to-center)))
 (let (($x735 (and $x734 $x733)))
 (let (($x736 (= c_____ right-to-left)))
 (let (($x737 (and $x736 $x733)))
 (let ((?x725 (rest ?x585)))
 (let (($x753 (= ?x723 ?x725)))
 (let (($x738 ((_ is stack ) ?x585)))
 (let (($x739 (= c_____ center-to-right)))
 (let (($x740 (and $x739 $x738)))
 (let (($x741 (= c_____ center-to-left)))
 (let (($x742 (and $x741 $x738)))
 (let ((?x364 (left s_____)))
 (let ((?x583 (top ?x364)))
 (let ((?x724 (stack ?x583 ?x585)))
 (let (($x752 (= ?x723 ?x724)))
 (let (($x743 ((_ is stack ) ?x364)))
 (let (($x744 (= c_____ left-to-right)))
 (let (($x745 (and $x744 $x743)))
 (let (($x775 (ite $x745 $x752 (ite $x742 $x753 (ite $x740 $x753 (ite $x737 $x761 (ite $x735 $x758 $x761)))))))
 (let (($x746 (= c_____ left-to-center)))
 (let (($x747 (and $x746 $x743)))
 (ite $x747 $x761 $x775)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x503 (left s______)))
 (let ((?x641 (left s_______)))
 (let (($x901 (= ?x641 ?x503)))
 (let ((?x537 (right s______)))
 (let ((?x868 (top ?x537)))
 (let ((?x869 (stack ?x868 ?x503)))
 (let (($x895 (= ?x641 ?x869)))
 (let (($x871 ((_ is stack ) ?x537)))
 (let (($x874 (= c______ right-to-left)))
 (let (($x875 (and $x874 $x871)))
 (let ((?x723 (center s______)))
 (let (($x876 ((_ is stack ) ?x723)))
 (let (($x877 (= c______ center-to-right)))
 (let (($x878 (and $x877 $x876)))
 (let ((?x864 (top ?x723)))
 (let ((?x865 (stack ?x864 ?x503)))
 (let (($x892 (= ?x641 ?x865)))
 (let (($x879 (= c______ center-to-left)))
 (let (($x880 (and $x879 $x876)))
 (let ((?x674 (rest ?x503)))
 (let (($x888 (= ?x641 ?x674)))
 (let (($x881 ((_ is stack ) ?x503)))
 (let (($x882 (= c______ left-to-right)))
 (let (($x883 (and $x882 $x881)))
 (let (($x884 (= c______ left-to-center)))
 (let (($x885 (and $x884 $x881)))
 (ite $x885 $x888 (ite $x883 $x888 (ite $x880 $x892 (ite $x878 $x901 (ite $x875 $x895 $x901))))))))))))))))))))))))))))))))
(assert
 (let ((?x537 (right s______)))
 (let ((?x675 (right s_______)))
 (let (($x897 (= ?x675 ?x537)))
 (let ((?x867 (rest ?x537)))
 (let (($x894 (= ?x675 ?x867)))
 (let (($x871 ((_ is stack ) ?x537)))
 (let (($x872 (= c______ right-to-center)))
 (let (($x873 (and $x872 $x871)))
 (let (($x874 (= c______ right-to-left)))
 (let (($x875 (and $x874 $x871)))
 (let ((?x723 (center s______)))
 (let ((?x864 (top ?x723)))
 (let ((?x866 (stack ?x864 ?x537)))
 (let (($x893 (= ?x675 ?x866)))
 (let (($x876 ((_ is stack ) ?x723)))
 (let (($x877 (= c______ center-to-right)))
 (let (($x878 (and $x877 $x876)))
 (let (($x879 (= c______ center-to-left)))
 (let (($x880 (and $x879 $x876)))
 (let ((?x503 (left s______)))
 (let (($x881 ((_ is stack ) ?x503)))
 (let (($x882 (= c______ left-to-right)))
 (let (($x883 (and $x882 $x881)))
 (let (($x914 (ite $x883 $x897 (ite $x880 $x897 (ite $x878 $x893 (ite $x875 $x894 (ite $x873 $x894 $x897)))))))
 (let ((?x721 (top ?x503)))
 (let ((?x860 (stack ?x721 ?x537)))
 (let (($x889 (= ?x675 ?x860)))
 (let (($x884 (= c______ left-to-center)))
 (let (($x885 (and $x884 $x881)))
 (ite $x885 $x889 $x914)))))))))))))))))))))))))))))))
(assert
 (let ((?x723 (center s______)))
 (let ((?x861 (center s_______)))
 (let (($x899 (= ?x861 ?x723)))
 (let ((?x537 (right s______)))
 (let ((?x868 (top ?x537)))
 (let ((?x870 (stack ?x868 ?x723)))
 (let (($x896 (= ?x861 ?x870)))
 (let (($x871 ((_ is stack ) ?x537)))
 (let (($x872 (= c______ right-to-center)))
 (let (($x873 (and $x872 $x871)))
 (let (($x874 (= c______ right-to-left)))
 (let (($x875 (and $x874 $x871)))
 (let ((?x863 (rest ?x723)))
 (let (($x891 (= ?x861 ?x863)))
 (let (($x876 ((_ is stack ) ?x723)))
 (let (($x877 (= c______ center-to-right)))
 (let (($x878 (and $x877 $x876)))
 (let (($x879 (= c______ center-to-left)))
 (let (($x880 (and $x879 $x876)))
 (let ((?x503 (left s______)))
 (let ((?x721 (top ?x503)))
 (let ((?x862 (stack ?x721 ?x723)))
 (let (($x890 (= ?x861 ?x862)))
 (let (($x881 ((_ is stack ) ?x503)))
 (let (($x882 (= c______ left-to-right)))
 (let (($x883 (and $x882 $x881)))
 (let (($x913 (ite $x883 $x890 (ite $x880 $x891 (ite $x878 $x891 (ite $x875 $x899 (ite $x873 $x896 $x899)))))))
 (let (($x884 (= c______ left-to-center)))
 (let (($x885 (and $x884 $x881)))
 (ite $x885 $x899 $x913)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x641 (left s_______)))
 (let ((?x779 (left s________)))
 (let (($x1039 (= ?x779 ?x641)))
 (let ((?x675 (right s_______)))
 (let ((?x1006 (top ?x675)))
 (let ((?x1007 (stack ?x1006 ?x641)))
 (let (($x1033 (= ?x779 ?x1007)))
 (let (($x1009 ((_ is stack ) ?x675)))
 (let (($x1012 (= c_______ right-to-left)))
 (let (($x1013 (and $x1012 $x1009)))
 (let ((?x861 (center s_______)))
 (let (($x1014 ((_ is stack ) ?x861)))
 (let (($x1015 (= c_______ center-to-right)))
 (let (($x1016 (and $x1015 $x1014)))
 (let ((?x1002 (top ?x861)))
 (let ((?x1003 (stack ?x1002 ?x641)))
 (let (($x1030 (= ?x779 ?x1003)))
 (let (($x1017 (= c_______ center-to-left)))
 (let (($x1018 (and $x1017 $x1014)))
 (let ((?x812 (rest ?x641)))
 (let (($x1026 (= ?x779 ?x812)))
 (let (($x1019 ((_ is stack ) ?x641)))
 (let (($x1020 (= c_______ left-to-right)))
 (let (($x1021 (and $x1020 $x1019)))
 (let (($x1022 (= c_______ left-to-center)))
 (let (($x1023 (and $x1022 $x1019)))
 (ite $x1023 $x1026 (ite $x1021 $x1026 (ite $x1018 $x1030 (ite $x1016 $x1039 (ite $x1013 $x1033 $x1039))))))))))))))))))))))))))))))))
(assert
 (let ((?x675 (right s_______)))
 (let ((?x813 (right s________)))
 (let (($x1035 (= ?x813 ?x675)))
 (let ((?x1005 (rest ?x675)))
 (let (($x1032 (= ?x813 ?x1005)))
 (let (($x1009 ((_ is stack ) ?x675)))
 (let (($x1010 (= c_______ right-to-center)))
 (let (($x1011 (and $x1010 $x1009)))
 (let (($x1012 (= c_______ right-to-left)))
 (let (($x1013 (and $x1012 $x1009)))
 (let ((?x861 (center s_______)))
 (let ((?x1002 (top ?x861)))
 (let ((?x1004 (stack ?x1002 ?x675)))
 (let (($x1031 (= ?x813 ?x1004)))
 (let (($x1014 ((_ is stack ) ?x861)))
 (let (($x1015 (= c_______ center-to-right)))
 (let (($x1016 (and $x1015 $x1014)))
 (let (($x1017 (= c_______ center-to-left)))
 (let (($x1018 (and $x1017 $x1014)))
 (let ((?x641 (left s_______)))
 (let (($x1019 ((_ is stack ) ?x641)))
 (let (($x1020 (= c_______ left-to-right)))
 (let (($x1021 (and $x1020 $x1019)))
 (let (($x1052 (ite $x1021 $x1035 (ite $x1018 $x1035 (ite $x1016 $x1031 (ite $x1013 $x1032 (ite $x1011 $x1032 $x1035)))))))
 (let ((?x859 (top ?x641)))
 (let ((?x998 (stack ?x859 ?x675)))
 (let (($x1027 (= ?x813 ?x998)))
 (let (($x1022 (= c_______ left-to-center)))
 (let (($x1023 (and $x1022 $x1019)))
 (ite $x1023 $x1027 $x1052)))))))))))))))))))))))))))))))
(assert
 (let ((?x861 (center s_______)))
 (let ((?x999 (center s________)))
 (let (($x1037 (= ?x999 ?x861)))
 (let ((?x675 (right s_______)))
 (let ((?x1006 (top ?x675)))
 (let ((?x1008 (stack ?x1006 ?x861)))
 (let (($x1034 (= ?x999 ?x1008)))
 (let (($x1009 ((_ is stack ) ?x675)))
 (let (($x1010 (= c_______ right-to-center)))
 (let (($x1011 (and $x1010 $x1009)))
 (let (($x1012 (= c_______ right-to-left)))
 (let (($x1013 (and $x1012 $x1009)))
 (let ((?x1001 (rest ?x861)))
 (let (($x1029 (= ?x999 ?x1001)))
 (let (($x1014 ((_ is stack ) ?x861)))
 (let (($x1015 (= c_______ center-to-right)))
 (let (($x1016 (and $x1015 $x1014)))
 (let (($x1017 (= c_______ center-to-left)))
 (let (($x1018 (and $x1017 $x1014)))
 (let ((?x641 (left s_______)))
 (let ((?x859 (top ?x641)))
 (let ((?x1000 (stack ?x859 ?x861)))
 (let (($x1028 (= ?x999 ?x1000)))
 (let (($x1019 ((_ is stack ) ?x641)))
 (let (($x1020 (= c_______ left-to-right)))
 (let (($x1021 (and $x1020 $x1019)))
 (let (($x1051 (ite $x1021 $x1028 (ite $x1018 $x1029 (ite $x1016 $x1029 (ite $x1013 $x1037 (ite $x1011 $x1034 $x1037)))))))
 (let (($x1022 (= c_______ left-to-center)))
 (let (($x1023 (and $x1022 $x1019)))
 (ite $x1023 $x1037 $x1051)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x779 (left s________)))
 (let ((?x917 (left s_________)))
 (let (($x1177 (= ?x917 ?x779)))
 (let ((?x813 (right s________)))
 (let ((?x1144 (top ?x813)))
 (let ((?x1145 (stack ?x1144 ?x779)))
 (let (($x1171 (= ?x917 ?x1145)))
 (let (($x1147 ((_ is stack ) ?x813)))
 (let (($x1150 (= c________ right-to-left)))
 (let (($x1151 (and $x1150 $x1147)))
 (let ((?x999 (center s________)))
 (let (($x1152 ((_ is stack ) ?x999)))
 (let (($x1153 (= c________ center-to-right)))
 (let (($x1154 (and $x1153 $x1152)))
 (let ((?x1140 (top ?x999)))
 (let ((?x1141 (stack ?x1140 ?x779)))
 (let (($x1168 (= ?x917 ?x1141)))
 (let (($x1155 (= c________ center-to-left)))
 (let (($x1156 (and $x1155 $x1152)))
 (let ((?x950 (rest ?x779)))
 (let (($x1164 (= ?x917 ?x950)))
 (let (($x1157 ((_ is stack ) ?x779)))
 (let (($x1158 (= c________ left-to-right)))
 (let (($x1159 (and $x1158 $x1157)))
 (let (($x1160 (= c________ left-to-center)))
 (let (($x1161 (and $x1160 $x1157)))
 (ite $x1161 $x1164 (ite $x1159 $x1164 (ite $x1156 $x1168 (ite $x1154 $x1177 (ite $x1151 $x1171 $x1177))))))))))))))))))))))))))))))))
(assert
 (let ((?x813 (right s________)))
 (let ((?x951 (right s_________)))
 (let (($x1173 (= ?x951 ?x813)))
 (let ((?x1143 (rest ?x813)))
 (let (($x1170 (= ?x951 ?x1143)))
 (let (($x1147 ((_ is stack ) ?x813)))
 (let (($x1148 (= c________ right-to-center)))
 (let (($x1149 (and $x1148 $x1147)))
 (let (($x1150 (= c________ right-to-left)))
 (let (($x1151 (and $x1150 $x1147)))
 (let ((?x999 (center s________)))
 (let ((?x1140 (top ?x999)))
 (let ((?x1142 (stack ?x1140 ?x813)))
 (let (($x1169 (= ?x951 ?x1142)))
 (let (($x1152 ((_ is stack ) ?x999)))
 (let (($x1153 (= c________ center-to-right)))
 (let (($x1154 (and $x1153 $x1152)))
 (let (($x1155 (= c________ center-to-left)))
 (let (($x1156 (and $x1155 $x1152)))
 (let ((?x779 (left s________)))
 (let (($x1157 ((_ is stack ) ?x779)))
 (let (($x1158 (= c________ left-to-right)))
 (let (($x1159 (and $x1158 $x1157)))
 (let (($x1190 (ite $x1159 $x1173 (ite $x1156 $x1173 (ite $x1154 $x1169 (ite $x1151 $x1170 (ite $x1149 $x1170 $x1173)))))))
 (let ((?x997 (top ?x779)))
 (let ((?x1136 (stack ?x997 ?x813)))
 (let (($x1165 (= ?x951 ?x1136)))
 (let (($x1160 (= c________ left-to-center)))
 (let (($x1161 (and $x1160 $x1157)))
 (ite $x1161 $x1165 $x1190)))))))))))))))))))))))))))))))
(assert
 (let ((?x999 (center s________)))
 (let ((?x1137 (center s_________)))
 (let (($x1175 (= ?x1137 ?x999)))
 (let ((?x813 (right s________)))
 (let ((?x1144 (top ?x813)))
 (let ((?x1146 (stack ?x1144 ?x999)))
 (let (($x1172 (= ?x1137 ?x1146)))
 (let (($x1147 ((_ is stack ) ?x813)))
 (let (($x1148 (= c________ right-to-center)))
 (let (($x1149 (and $x1148 $x1147)))
 (let (($x1150 (= c________ right-to-left)))
 (let (($x1151 (and $x1150 $x1147)))
 (let ((?x1139 (rest ?x999)))
 (let (($x1167 (= ?x1137 ?x1139)))
 (let (($x1152 ((_ is stack ) ?x999)))
 (let (($x1153 (= c________ center-to-right)))
 (let (($x1154 (and $x1153 $x1152)))
 (let (($x1155 (= c________ center-to-left)))
 (let (($x1156 (and $x1155 $x1152)))
 (let ((?x779 (left s________)))
 (let ((?x997 (top ?x779)))
 (let ((?x1138 (stack ?x997 ?x999)))
 (let (($x1166 (= ?x1137 ?x1138)))
 (let (($x1157 ((_ is stack ) ?x779)))
 (let (($x1158 (= c________ left-to-right)))
 (let (($x1159 (and $x1158 $x1157)))
 (let (($x1189 (ite $x1159 $x1166 (ite $x1156 $x1167 (ite $x1154 $x1167 (ite $x1151 $x1175 (ite $x1149 $x1172 $x1175)))))))
 (let (($x1160 (= c________ left-to-center)))
 (let (($x1161 (and $x1160 $x1157)))
 (ite $x1161 $x1175 $x1189)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x917 (left s_________)))
 (let ((?x1055 (left s__________)))
 (let (($x1315 (= ?x1055 ?x917)))
 (let ((?x951 (right s_________)))
 (let ((?x1282 (top ?x951)))
 (let ((?x1283 (stack ?x1282 ?x917)))
 (let (($x1309 (= ?x1055 ?x1283)))
 (let (($x1285 ((_ is stack ) ?x951)))
 (let (($x1288 (= c_________ right-to-left)))
 (let (($x1289 (and $x1288 $x1285)))
 (let ((?x1137 (center s_________)))
 (let (($x1290 ((_ is stack ) ?x1137)))
 (let (($x1291 (= c_________ center-to-right)))
 (let (($x1292 (and $x1291 $x1290)))
 (let ((?x1278 (top ?x1137)))
 (let ((?x1279 (stack ?x1278 ?x917)))
 (let (($x1306 (= ?x1055 ?x1279)))
 (let (($x1293 (= c_________ center-to-left)))
 (let (($x1294 (and $x1293 $x1290)))
 (let ((?x1088 (rest ?x917)))
 (let (($x1302 (= ?x1055 ?x1088)))
 (let (($x1295 ((_ is stack ) ?x917)))
 (let (($x1296 (= c_________ left-to-right)))
 (let (($x1297 (and $x1296 $x1295)))
 (let (($x1298 (= c_________ left-to-center)))
 (let (($x1299 (and $x1298 $x1295)))
 (ite $x1299 $x1302 (ite $x1297 $x1302 (ite $x1294 $x1306 (ite $x1292 $x1315 (ite $x1289 $x1309 $x1315))))))))))))))))))))))))))))))))
(assert
 (let ((?x951 (right s_________)))
 (let ((?x1089 (right s__________)))
 (let (($x1311 (= ?x1089 ?x951)))
 (let ((?x1281 (rest ?x951)))
 (let (($x1308 (= ?x1089 ?x1281)))
 (let (($x1285 ((_ is stack ) ?x951)))
 (let (($x1286 (= c_________ right-to-center)))
 (let (($x1287 (and $x1286 $x1285)))
 (let (($x1288 (= c_________ right-to-left)))
 (let (($x1289 (and $x1288 $x1285)))
 (let ((?x1137 (center s_________)))
 (let ((?x1278 (top ?x1137)))
 (let ((?x1280 (stack ?x1278 ?x951)))
 (let (($x1307 (= ?x1089 ?x1280)))
 (let (($x1290 ((_ is stack ) ?x1137)))
 (let (($x1291 (= c_________ center-to-right)))
 (let (($x1292 (and $x1291 $x1290)))
 (let (($x1293 (= c_________ center-to-left)))
 (let (($x1294 (and $x1293 $x1290)))
 (let ((?x917 (left s_________)))
 (let (($x1295 ((_ is stack ) ?x917)))
 (let (($x1296 (= c_________ left-to-right)))
 (let (($x1297 (and $x1296 $x1295)))
 (let (($x1328 (ite $x1297 $x1311 (ite $x1294 $x1311 (ite $x1292 $x1307 (ite $x1289 $x1308 (ite $x1287 $x1308 $x1311)))))))
 (let ((?x1135 (top ?x917)))
 (let ((?x1274 (stack ?x1135 ?x951)))
 (let (($x1303 (= ?x1089 ?x1274)))
 (let (($x1298 (= c_________ left-to-center)))
 (let (($x1299 (and $x1298 $x1295)))
 (ite $x1299 $x1303 $x1328)))))))))))))))))))))))))))))))
(assert
 (let ((?x1137 (center s_________)))
 (let ((?x1275 (center s__________)))
 (let (($x1313 (= ?x1275 ?x1137)))
 (let ((?x951 (right s_________)))
 (let ((?x1282 (top ?x951)))
 (let ((?x1284 (stack ?x1282 ?x1137)))
 (let (($x1310 (= ?x1275 ?x1284)))
 (let (($x1285 ((_ is stack ) ?x951)))
 (let (($x1286 (= c_________ right-to-center)))
 (let (($x1287 (and $x1286 $x1285)))
 (let (($x1288 (= c_________ right-to-left)))
 (let (($x1289 (and $x1288 $x1285)))
 (let ((?x1277 (rest ?x1137)))
 (let (($x1305 (= ?x1275 ?x1277)))
 (let (($x1290 ((_ is stack ) ?x1137)))
 (let (($x1291 (= c_________ center-to-right)))
 (let (($x1292 (and $x1291 $x1290)))
 (let (($x1293 (= c_________ center-to-left)))
 (let (($x1294 (and $x1293 $x1290)))
 (let ((?x917 (left s_________)))
 (let ((?x1135 (top ?x917)))
 (let ((?x1276 (stack ?x1135 ?x1137)))
 (let (($x1304 (= ?x1275 ?x1276)))
 (let (($x1295 ((_ is stack ) ?x917)))
 (let (($x1296 (= c_________ left-to-right)))
 (let (($x1297 (and $x1296 $x1295)))
 (let (($x1327 (ite $x1297 $x1304 (ite $x1294 $x1305 (ite $x1292 $x1305 (ite $x1289 $x1313 (ite $x1287 $x1310 $x1313)))))))
 (let (($x1298 (= c_________ left-to-center)))
 (let (($x1299 (and $x1298 $x1295)))
 (ite $x1299 $x1313 $x1327)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1055 (left s__________)))
 (let ((?x1193 (left s___________)))
 (let (($x1453 (= ?x1193 ?x1055)))
 (let ((?x1089 (right s__________)))
 (let ((?x1420 (top ?x1089)))
 (let ((?x1421 (stack ?x1420 ?x1055)))
 (let (($x1447 (= ?x1193 ?x1421)))
 (let (($x1423 ((_ is stack ) ?x1089)))
 (let (($x1426 (= c__________ right-to-left)))
 (let (($x1427 (and $x1426 $x1423)))
 (let ((?x1275 (center s__________)))
 (let (($x1428 ((_ is stack ) ?x1275)))
 (let (($x1429 (= c__________ center-to-right)))
 (let (($x1430 (and $x1429 $x1428)))
 (let ((?x1416 (top ?x1275)))
 (let ((?x1417 (stack ?x1416 ?x1055)))
 (let (($x1444 (= ?x1193 ?x1417)))
 (let (($x1431 (= c__________ center-to-left)))
 (let (($x1432 (and $x1431 $x1428)))
 (let ((?x1226 (rest ?x1055)))
 (let (($x1440 (= ?x1193 ?x1226)))
 (let (($x1433 ((_ is stack ) ?x1055)))
 (let (($x1434 (= c__________ left-to-right)))
 (let (($x1435 (and $x1434 $x1433)))
 (let (($x1436 (= c__________ left-to-center)))
 (let (($x1437 (and $x1436 $x1433)))
 (ite $x1437 $x1440 (ite $x1435 $x1440 (ite $x1432 $x1444 (ite $x1430 $x1453 (ite $x1427 $x1447 $x1453))))))))))))))))))))))))))))))))
(assert
 (let ((?x1089 (right s__________)))
 (let ((?x1227 (right s___________)))
 (let (($x1449 (= ?x1227 ?x1089)))
 (let ((?x1419 (rest ?x1089)))
 (let (($x1446 (= ?x1227 ?x1419)))
 (let (($x1423 ((_ is stack ) ?x1089)))
 (let (($x1424 (= c__________ right-to-center)))
 (let (($x1425 (and $x1424 $x1423)))
 (let (($x1426 (= c__________ right-to-left)))
 (let (($x1427 (and $x1426 $x1423)))
 (let ((?x1275 (center s__________)))
 (let ((?x1416 (top ?x1275)))
 (let ((?x1418 (stack ?x1416 ?x1089)))
 (let (($x1445 (= ?x1227 ?x1418)))
 (let (($x1428 ((_ is stack ) ?x1275)))
 (let (($x1429 (= c__________ center-to-right)))
 (let (($x1430 (and $x1429 $x1428)))
 (let (($x1431 (= c__________ center-to-left)))
 (let (($x1432 (and $x1431 $x1428)))
 (let ((?x1055 (left s__________)))
 (let (($x1433 ((_ is stack ) ?x1055)))
 (let (($x1434 (= c__________ left-to-right)))
 (let (($x1435 (and $x1434 $x1433)))
 (let (($x1466 (ite $x1435 $x1449 (ite $x1432 $x1449 (ite $x1430 $x1445 (ite $x1427 $x1446 (ite $x1425 $x1446 $x1449)))))))
 (let ((?x1273 (top ?x1055)))
 (let ((?x1412 (stack ?x1273 ?x1089)))
 (let (($x1441 (= ?x1227 ?x1412)))
 (let (($x1436 (= c__________ left-to-center)))
 (let (($x1437 (and $x1436 $x1433)))
 (ite $x1437 $x1441 $x1466)))))))))))))))))))))))))))))))
(assert
 (let ((?x1275 (center s__________)))
 (let ((?x1413 (center s___________)))
 (let (($x1451 (= ?x1413 ?x1275)))
 (let ((?x1089 (right s__________)))
 (let ((?x1420 (top ?x1089)))
 (let ((?x1422 (stack ?x1420 ?x1275)))
 (let (($x1448 (= ?x1413 ?x1422)))
 (let (($x1423 ((_ is stack ) ?x1089)))
 (let (($x1424 (= c__________ right-to-center)))
 (let (($x1425 (and $x1424 $x1423)))
 (let (($x1426 (= c__________ right-to-left)))
 (let (($x1427 (and $x1426 $x1423)))
 (let ((?x1415 (rest ?x1275)))
 (let (($x1443 (= ?x1413 ?x1415)))
 (let (($x1428 ((_ is stack ) ?x1275)))
 (let (($x1429 (= c__________ center-to-right)))
 (let (($x1430 (and $x1429 $x1428)))
 (let (($x1431 (= c__________ center-to-left)))
 (let (($x1432 (and $x1431 $x1428)))
 (let ((?x1055 (left s__________)))
 (let ((?x1273 (top ?x1055)))
 (let ((?x1414 (stack ?x1273 ?x1275)))
 (let (($x1442 (= ?x1413 ?x1414)))
 (let (($x1433 ((_ is stack ) ?x1055)))
 (let (($x1434 (= c__________ left-to-right)))
 (let (($x1435 (and $x1434 $x1433)))
 (let (($x1465 (ite $x1435 $x1442 (ite $x1432 $x1443 (ite $x1430 $x1443 (ite $x1427 $x1451 (ite $x1425 $x1448 $x1451)))))))
 (let (($x1436 (= c__________ left-to-center)))
 (let (($x1437 (and $x1436 $x1433)))
 (ite $x1437 $x1451 $x1465)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1193 (left s___________)))
 (let ((?x1331 (left s____________)))
 (let (($x1591 (= ?x1331 ?x1193)))
 (let ((?x1227 (right s___________)))
 (let ((?x1558 (top ?x1227)))
 (let ((?x1559 (stack ?x1558 ?x1193)))
 (let (($x1585 (= ?x1331 ?x1559)))
 (let (($x1561 ((_ is stack ) ?x1227)))
 (let (($x1564 (= c___________ right-to-left)))
 (let (($x1565 (and $x1564 $x1561)))
 (let ((?x1413 (center s___________)))
 (let (($x1566 ((_ is stack ) ?x1413)))
 (let (($x1567 (= c___________ center-to-right)))
 (let (($x1568 (and $x1567 $x1566)))
 (let ((?x1554 (top ?x1413)))
 (let ((?x1555 (stack ?x1554 ?x1193)))
 (let (($x1582 (= ?x1331 ?x1555)))
 (let (($x1569 (= c___________ center-to-left)))
 (let (($x1570 (and $x1569 $x1566)))
 (let ((?x1364 (rest ?x1193)))
 (let (($x1578 (= ?x1331 ?x1364)))
 (let (($x1571 ((_ is stack ) ?x1193)))
 (let (($x1572 (= c___________ left-to-right)))
 (let (($x1573 (and $x1572 $x1571)))
 (let (($x1574 (= c___________ left-to-center)))
 (let (($x1575 (and $x1574 $x1571)))
 (ite $x1575 $x1578 (ite $x1573 $x1578 (ite $x1570 $x1582 (ite $x1568 $x1591 (ite $x1565 $x1585 $x1591))))))))))))))))))))))))))))))))
(assert
 (let ((?x1227 (right s___________)))
 (let ((?x1365 (right s____________)))
 (let (($x1587 (= ?x1365 ?x1227)))
 (let ((?x1557 (rest ?x1227)))
 (let (($x1584 (= ?x1365 ?x1557)))
 (let (($x1561 ((_ is stack ) ?x1227)))
 (let (($x1562 (= c___________ right-to-center)))
 (let (($x1563 (and $x1562 $x1561)))
 (let (($x1564 (= c___________ right-to-left)))
 (let (($x1565 (and $x1564 $x1561)))
 (let ((?x1413 (center s___________)))
 (let ((?x1554 (top ?x1413)))
 (let ((?x1556 (stack ?x1554 ?x1227)))
 (let (($x1583 (= ?x1365 ?x1556)))
 (let (($x1566 ((_ is stack ) ?x1413)))
 (let (($x1567 (= c___________ center-to-right)))
 (let (($x1568 (and $x1567 $x1566)))
 (let (($x1569 (= c___________ center-to-left)))
 (let (($x1570 (and $x1569 $x1566)))
 (let ((?x1193 (left s___________)))
 (let (($x1571 ((_ is stack ) ?x1193)))
 (let (($x1572 (= c___________ left-to-right)))
 (let (($x1573 (and $x1572 $x1571)))
 (let (($x1604 (ite $x1573 $x1587 (ite $x1570 $x1587 (ite $x1568 $x1583 (ite $x1565 $x1584 (ite $x1563 $x1584 $x1587)))))))
 (let ((?x1411 (top ?x1193)))
 (let ((?x1550 (stack ?x1411 ?x1227)))
 (let (($x1579 (= ?x1365 ?x1550)))
 (let (($x1574 (= c___________ left-to-center)))
 (let (($x1575 (and $x1574 $x1571)))
 (ite $x1575 $x1579 $x1604)))))))))))))))))))))))))))))))
(assert
 (let ((?x1413 (center s___________)))
 (let ((?x1551 (center s____________)))
 (let (($x1589 (= ?x1551 ?x1413)))
 (let ((?x1227 (right s___________)))
 (let ((?x1558 (top ?x1227)))
 (let ((?x1560 (stack ?x1558 ?x1413)))
 (let (($x1586 (= ?x1551 ?x1560)))
 (let (($x1561 ((_ is stack ) ?x1227)))
 (let (($x1562 (= c___________ right-to-center)))
 (let (($x1563 (and $x1562 $x1561)))
 (let (($x1564 (= c___________ right-to-left)))
 (let (($x1565 (and $x1564 $x1561)))
 (let ((?x1553 (rest ?x1413)))
 (let (($x1581 (= ?x1551 ?x1553)))
 (let (($x1566 ((_ is stack ) ?x1413)))
 (let (($x1567 (= c___________ center-to-right)))
 (let (($x1568 (and $x1567 $x1566)))
 (let (($x1569 (= c___________ center-to-left)))
 (let (($x1570 (and $x1569 $x1566)))
 (let ((?x1193 (left s___________)))
 (let ((?x1411 (top ?x1193)))
 (let ((?x1552 (stack ?x1411 ?x1413)))
 (let (($x1580 (= ?x1551 ?x1552)))
 (let (($x1571 ((_ is stack ) ?x1193)))
 (let (($x1572 (= c___________ left-to-right)))
 (let (($x1573 (and $x1572 $x1571)))
 (let (($x1603 (ite $x1573 $x1580 (ite $x1570 $x1581 (ite $x1568 $x1581 (ite $x1565 $x1589 (ite $x1563 $x1586 $x1589)))))))
 (let (($x1574 (= c___________ left-to-center)))
 (let (($x1575 (and $x1574 $x1571)))
 (ite $x1575 $x1589 $x1603)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1331 (left s____________)))
 (let ((?x1469 (left s_____________)))
 (let (($x1729 (= ?x1469 ?x1331)))
 (let ((?x1365 (right s____________)))
 (let ((?x1696 (top ?x1365)))
 (let ((?x1697 (stack ?x1696 ?x1331)))
 (let (($x1723 (= ?x1469 ?x1697)))
 (let (($x1699 ((_ is stack ) ?x1365)))
 (let (($x1702 (= c____________ right-to-left)))
 (let (($x1703 (and $x1702 $x1699)))
 (let ((?x1551 (center s____________)))
 (let (($x1704 ((_ is stack ) ?x1551)))
 (let (($x1705 (= c____________ center-to-right)))
 (let (($x1706 (and $x1705 $x1704)))
 (let ((?x1692 (top ?x1551)))
 (let ((?x1693 (stack ?x1692 ?x1331)))
 (let (($x1720 (= ?x1469 ?x1693)))
 (let (($x1707 (= c____________ center-to-left)))
 (let (($x1708 (and $x1707 $x1704)))
 (let ((?x1502 (rest ?x1331)))
 (let (($x1716 (= ?x1469 ?x1502)))
 (let (($x1709 ((_ is stack ) ?x1331)))
 (let (($x1710 (= c____________ left-to-right)))
 (let (($x1711 (and $x1710 $x1709)))
 (let (($x1712 (= c____________ left-to-center)))
 (let (($x1713 (and $x1712 $x1709)))
 (ite $x1713 $x1716 (ite $x1711 $x1716 (ite $x1708 $x1720 (ite $x1706 $x1729 (ite $x1703 $x1723 $x1729))))))))))))))))))))))))))))))))
(assert
 (let ((?x1365 (right s____________)))
 (let ((?x1503 (right s_____________)))
 (let (($x1725 (= ?x1503 ?x1365)))
 (let ((?x1695 (rest ?x1365)))
 (let (($x1722 (= ?x1503 ?x1695)))
 (let (($x1699 ((_ is stack ) ?x1365)))
 (let (($x1700 (= c____________ right-to-center)))
 (let (($x1701 (and $x1700 $x1699)))
 (let (($x1702 (= c____________ right-to-left)))
 (let (($x1703 (and $x1702 $x1699)))
 (let ((?x1551 (center s____________)))
 (let ((?x1692 (top ?x1551)))
 (let ((?x1694 (stack ?x1692 ?x1365)))
 (let (($x1721 (= ?x1503 ?x1694)))
 (let (($x1704 ((_ is stack ) ?x1551)))
 (let (($x1705 (= c____________ center-to-right)))
 (let (($x1706 (and $x1705 $x1704)))
 (let (($x1707 (= c____________ center-to-left)))
 (let (($x1708 (and $x1707 $x1704)))
 (let ((?x1331 (left s____________)))
 (let (($x1709 ((_ is stack ) ?x1331)))
 (let (($x1710 (= c____________ left-to-right)))
 (let (($x1711 (and $x1710 $x1709)))
 (let (($x1742 (ite $x1711 $x1725 (ite $x1708 $x1725 (ite $x1706 $x1721 (ite $x1703 $x1722 (ite $x1701 $x1722 $x1725)))))))
 (let ((?x1549 (top ?x1331)))
 (let ((?x1688 (stack ?x1549 ?x1365)))
 (let (($x1717 (= ?x1503 ?x1688)))
 (let (($x1712 (= c____________ left-to-center)))
 (let (($x1713 (and $x1712 $x1709)))
 (ite $x1713 $x1717 $x1742)))))))))))))))))))))))))))))))
(assert
 (let ((?x1551 (center s____________)))
 (let ((?x1689 (center s_____________)))
 (let (($x1727 (= ?x1689 ?x1551)))
 (let ((?x1365 (right s____________)))
 (let ((?x1696 (top ?x1365)))
 (let ((?x1698 (stack ?x1696 ?x1551)))
 (let (($x1724 (= ?x1689 ?x1698)))
 (let (($x1699 ((_ is stack ) ?x1365)))
 (let (($x1700 (= c____________ right-to-center)))
 (let (($x1701 (and $x1700 $x1699)))
 (let (($x1702 (= c____________ right-to-left)))
 (let (($x1703 (and $x1702 $x1699)))
 (let ((?x1691 (rest ?x1551)))
 (let (($x1719 (= ?x1689 ?x1691)))
 (let (($x1704 ((_ is stack ) ?x1551)))
 (let (($x1705 (= c____________ center-to-right)))
 (let (($x1706 (and $x1705 $x1704)))
 (let (($x1707 (= c____________ center-to-left)))
 (let (($x1708 (and $x1707 $x1704)))
 (let ((?x1331 (left s____________)))
 (let ((?x1549 (top ?x1331)))
 (let ((?x1690 (stack ?x1549 ?x1551)))
 (let (($x1718 (= ?x1689 ?x1690)))
 (let (($x1709 ((_ is stack ) ?x1331)))
 (let (($x1710 (= c____________ left-to-right)))
 (let (($x1711 (and $x1710 $x1709)))
 (let (($x1741 (ite $x1711 $x1718 (ite $x1708 $x1719 (ite $x1706 $x1719 (ite $x1703 $x1727 (ite $x1701 $x1724 $x1727)))))))
 (let (($x1712 (= c____________ left-to-center)))
 (let (($x1713 (and $x1712 $x1709)))
 (ite $x1713 $x1727 $x1741)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1469 (left s_____________)))
 (let ((?x1607 (left s______________)))
 (let (($x1867 (= ?x1607 ?x1469)))
 (let ((?x1503 (right s_____________)))
 (let ((?x1834 (top ?x1503)))
 (let ((?x1835 (stack ?x1834 ?x1469)))
 (let (($x1861 (= ?x1607 ?x1835)))
 (let (($x1837 ((_ is stack ) ?x1503)))
 (let (($x1840 (= c_____________ right-to-left)))
 (let (($x1841 (and $x1840 $x1837)))
 (let ((?x1689 (center s_____________)))
 (let (($x1842 ((_ is stack ) ?x1689)))
 (let (($x1843 (= c_____________ center-to-right)))
 (let (($x1844 (and $x1843 $x1842)))
 (let ((?x1830 (top ?x1689)))
 (let ((?x1831 (stack ?x1830 ?x1469)))
 (let (($x1858 (= ?x1607 ?x1831)))
 (let (($x1845 (= c_____________ center-to-left)))
 (let (($x1846 (and $x1845 $x1842)))
 (let ((?x1640 (rest ?x1469)))
 (let (($x1854 (= ?x1607 ?x1640)))
 (let (($x1847 ((_ is stack ) ?x1469)))
 (let (($x1848 (= c_____________ left-to-right)))
 (let (($x1849 (and $x1848 $x1847)))
 (let (($x1850 (= c_____________ left-to-center)))
 (let (($x1851 (and $x1850 $x1847)))
 (ite $x1851 $x1854 (ite $x1849 $x1854 (ite $x1846 $x1858 (ite $x1844 $x1867 (ite $x1841 $x1861 $x1867))))))))))))))))))))))))))))))))
(assert
 (let ((?x1503 (right s_____________)))
 (let ((?x1641 (right s______________)))
 (let (($x1863 (= ?x1641 ?x1503)))
 (let ((?x1833 (rest ?x1503)))
 (let (($x1860 (= ?x1641 ?x1833)))
 (let (($x1837 ((_ is stack ) ?x1503)))
 (let (($x1838 (= c_____________ right-to-center)))
 (let (($x1839 (and $x1838 $x1837)))
 (let (($x1840 (= c_____________ right-to-left)))
 (let (($x1841 (and $x1840 $x1837)))
 (let ((?x1689 (center s_____________)))
 (let ((?x1830 (top ?x1689)))
 (let ((?x1832 (stack ?x1830 ?x1503)))
 (let (($x1859 (= ?x1641 ?x1832)))
 (let (($x1842 ((_ is stack ) ?x1689)))
 (let (($x1843 (= c_____________ center-to-right)))
 (let (($x1844 (and $x1843 $x1842)))
 (let (($x1845 (= c_____________ center-to-left)))
 (let (($x1846 (and $x1845 $x1842)))
 (let ((?x1469 (left s_____________)))
 (let (($x1847 ((_ is stack ) ?x1469)))
 (let (($x1848 (= c_____________ left-to-right)))
 (let (($x1849 (and $x1848 $x1847)))
 (let (($x1880 (ite $x1849 $x1863 (ite $x1846 $x1863 (ite $x1844 $x1859 (ite $x1841 $x1860 (ite $x1839 $x1860 $x1863)))))))
 (let ((?x1687 (top ?x1469)))
 (let ((?x1826 (stack ?x1687 ?x1503)))
 (let (($x1855 (= ?x1641 ?x1826)))
 (let (($x1850 (= c_____________ left-to-center)))
 (let (($x1851 (and $x1850 $x1847)))
 (ite $x1851 $x1855 $x1880)))))))))))))))))))))))))))))))
(assert
 (let ((?x1689 (center s_____________)))
 (let ((?x1827 (center s______________)))
 (let (($x1865 (= ?x1827 ?x1689)))
 (let ((?x1503 (right s_____________)))
 (let ((?x1834 (top ?x1503)))
 (let ((?x1836 (stack ?x1834 ?x1689)))
 (let (($x1862 (= ?x1827 ?x1836)))
 (let (($x1837 ((_ is stack ) ?x1503)))
 (let (($x1838 (= c_____________ right-to-center)))
 (let (($x1839 (and $x1838 $x1837)))
 (let (($x1840 (= c_____________ right-to-left)))
 (let (($x1841 (and $x1840 $x1837)))
 (let ((?x1829 (rest ?x1689)))
 (let (($x1857 (= ?x1827 ?x1829)))
 (let (($x1842 ((_ is stack ) ?x1689)))
 (let (($x1843 (= c_____________ center-to-right)))
 (let (($x1844 (and $x1843 $x1842)))
 (let (($x1845 (= c_____________ center-to-left)))
 (let (($x1846 (and $x1845 $x1842)))
 (let ((?x1469 (left s_____________)))
 (let ((?x1687 (top ?x1469)))
 (let ((?x1828 (stack ?x1687 ?x1689)))
 (let (($x1856 (= ?x1827 ?x1828)))
 (let (($x1847 ((_ is stack ) ?x1469)))
 (let (($x1848 (= c_____________ left-to-right)))
 (let (($x1849 (and $x1848 $x1847)))
 (let (($x1879 (ite $x1849 $x1856 (ite $x1846 $x1857 (ite $x1844 $x1857 (ite $x1841 $x1865 (ite $x1839 $x1862 $x1865)))))))
 (let (($x1850 (= c_____________ left-to-center)))
 (let (($x1851 (and $x1850 $x1847)))
 (ite $x1851 $x1865 $x1879)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1607 (left s______________)))
 (let ((?x1745 (left s_______________)))
 (let (($x2005 (= ?x1745 ?x1607)))
 (let ((?x1641 (right s______________)))
 (let ((?x1972 (top ?x1641)))
 (let ((?x1973 (stack ?x1972 ?x1607)))
 (let (($x1999 (= ?x1745 ?x1973)))
 (let (($x1975 ((_ is stack ) ?x1641)))
 (let (($x1978 (= c______________ right-to-left)))
 (let (($x1979 (and $x1978 $x1975)))
 (let ((?x1827 (center s______________)))
 (let (($x1980 ((_ is stack ) ?x1827)))
 (let (($x1981 (= c______________ center-to-right)))
 (let (($x1982 (and $x1981 $x1980)))
 (let ((?x1968 (top ?x1827)))
 (let ((?x1969 (stack ?x1968 ?x1607)))
 (let (($x1996 (= ?x1745 ?x1969)))
 (let (($x1983 (= c______________ center-to-left)))
 (let (($x1984 (and $x1983 $x1980)))
 (let ((?x1778 (rest ?x1607)))
 (let (($x1992 (= ?x1745 ?x1778)))
 (let (($x1985 ((_ is stack ) ?x1607)))
 (let (($x1986 (= c______________ left-to-right)))
 (let (($x1987 (and $x1986 $x1985)))
 (let (($x1988 (= c______________ left-to-center)))
 (let (($x1989 (and $x1988 $x1985)))
 (ite $x1989 $x1992 (ite $x1987 $x1992 (ite $x1984 $x1996 (ite $x1982 $x2005 (ite $x1979 $x1999 $x2005))))))))))))))))))))))))))))))))
(assert
 (let ((?x1641 (right s______________)))
 (let ((?x1779 (right s_______________)))
 (let (($x2001 (= ?x1779 ?x1641)))
 (let ((?x1971 (rest ?x1641)))
 (let (($x1998 (= ?x1779 ?x1971)))
 (let (($x1975 ((_ is stack ) ?x1641)))
 (let (($x1976 (= c______________ right-to-center)))
 (let (($x1977 (and $x1976 $x1975)))
 (let (($x1978 (= c______________ right-to-left)))
 (let (($x1979 (and $x1978 $x1975)))
 (let ((?x1827 (center s______________)))
 (let ((?x1968 (top ?x1827)))
 (let ((?x1970 (stack ?x1968 ?x1641)))
 (let (($x1997 (= ?x1779 ?x1970)))
 (let (($x1980 ((_ is stack ) ?x1827)))
 (let (($x1981 (= c______________ center-to-right)))
 (let (($x1982 (and $x1981 $x1980)))
 (let (($x1983 (= c______________ center-to-left)))
 (let (($x1984 (and $x1983 $x1980)))
 (let ((?x1607 (left s______________)))
 (let (($x1985 ((_ is stack ) ?x1607)))
 (let (($x1986 (= c______________ left-to-right)))
 (let (($x1987 (and $x1986 $x1985)))
 (let (($x2018 (ite $x1987 $x2001 (ite $x1984 $x2001 (ite $x1982 $x1997 (ite $x1979 $x1998 (ite $x1977 $x1998 $x2001)))))))
 (let ((?x1825 (top ?x1607)))
 (let ((?x1964 (stack ?x1825 ?x1641)))
 (let (($x1993 (= ?x1779 ?x1964)))
 (let (($x1988 (= c______________ left-to-center)))
 (let (($x1989 (and $x1988 $x1985)))
 (ite $x1989 $x1993 $x2018)))))))))))))))))))))))))))))))
(assert
 (let ((?x1827 (center s______________)))
 (let ((?x1965 (center s_______________)))
 (let (($x2003 (= ?x1965 ?x1827)))
 (let ((?x1641 (right s______________)))
 (let ((?x1972 (top ?x1641)))
 (let ((?x1974 (stack ?x1972 ?x1827)))
 (let (($x2000 (= ?x1965 ?x1974)))
 (let (($x1975 ((_ is stack ) ?x1641)))
 (let (($x1976 (= c______________ right-to-center)))
 (let (($x1977 (and $x1976 $x1975)))
 (let (($x1978 (= c______________ right-to-left)))
 (let (($x1979 (and $x1978 $x1975)))
 (let ((?x1967 (rest ?x1827)))
 (let (($x1995 (= ?x1965 ?x1967)))
 (let (($x1980 ((_ is stack ) ?x1827)))
 (let (($x1981 (= c______________ center-to-right)))
 (let (($x1982 (and $x1981 $x1980)))
 (let (($x1983 (= c______________ center-to-left)))
 (let (($x1984 (and $x1983 $x1980)))
 (let ((?x1607 (left s______________)))
 (let ((?x1825 (top ?x1607)))
 (let ((?x1966 (stack ?x1825 ?x1827)))
 (let (($x1994 (= ?x1965 ?x1966)))
 (let (($x1985 ((_ is stack ) ?x1607)))
 (let (($x1986 (= c______________ left-to-right)))
 (let (($x1987 (and $x1986 $x1985)))
 (let (($x2017 (ite $x1987 $x1994 (ite $x1984 $x1995 (ite $x1982 $x1995 (ite $x1979 $x2003 (ite $x1977 $x2000 $x2003)))))))
 (let (($x1988 (= c______________ left-to-center)))
 (let (($x1989 (and $x1988 $x1985)))
 (ite $x1989 $x2003 $x2017)))))))))))))))))))))))))))))))
(assert
 (let ((?x1779 (right s_______________)))
 (let (($x2021 (= ?x1779 empty)))
 (let ((?x1965 (center s_______________)))
 (let (($x2052 (= ?x1965 empty)))
 (let ((?x33 (stack H (stack D (stack E (stack A (stack B (stack G empty))))))))
 (let ((?x35 (stack C (stack F ?x33))))
 (let ((?x1745 (left s_______________)))
 (let (($x2053 (= ?x1745 ?x35)))
 (let (($x2055 (not (and $x2053 $x2052 $x2021))))
 (not $x2055)))))))))))
(check-sat)
(exit)
