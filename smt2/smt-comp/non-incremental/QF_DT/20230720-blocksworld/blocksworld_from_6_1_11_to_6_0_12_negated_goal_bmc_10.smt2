(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x31 (stack R empty)))
 (let ((?x30 (stack D ?x31)))
 (let ((?x32 (stack H ?x30)))
 (let ((?x33 (stack N ?x32)))
 (let ((?x34 (stack M ?x33)))
 (let ((?x35 (stack Q ?x34)))
 (let ((?x110 (left s_tmp_)))
 (= ?x110 ?x35)))))))))
(assert
 (let ((?x36 (stack F empty)))
 (let ((?x113 (center s_tmp__)))
 (= ?x113 ?x36))))
(assert
 (let ((?x37 (stack A empty)))
 (let ((?x38 (stack B ?x37)))
 (let ((?x39 (stack C ?x38)))
 (let ((?x40 (stack E ?x39)))
 (let ((?x41 (stack G ?x40)))
 (let ((?x42 (stack I ?x41)))
 (let ((?x43 (stack J ?x42)))
 (let ((?x44 (stack K ?x43)))
 (let ((?x45 (stack L ?x44)))
 (let ((?x46 (stack O ?x45)))
 (let ((?x47 (stack P ?x46)))
 (let ((?x116 (right s_tmp___)))
 (= ?x116 ?x47))))))))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x143 (left s_tmp__)))
 (= (left s_tmp___) ?x143)))
(assert
 (let ((?x113 (center s_tmp__)))
 (= (center s_tmp___) ?x113)))
(assert
 (let ((?x147 (center s_tmp_)))
 (= ?x147 (center s_tmp))))
(assert
 (let ((?x150 (right s_tmp_)))
 (= ?x150 (right s_tmp))))
(assert
 (let ((?x110 (left s_tmp_)))
 (let ((?x143 (left s_tmp__)))
 (= ?x143 ?x110))))
(assert
 (let ((?x150 (right s_tmp_)))
 (let ((?x154 (right s_tmp__)))
 (= ?x154 ?x150))))
(assert
 (= c__ c!1))
(assert
 (let ((?x87 (left s_)))
 (let ((?x282 (left s__)))
 (let (($x264 (= ?x282 ?x87)))
 (let ((?x90 (right s_)))
 (let (($x288 ((_ is stack ) ?x90)))
 (let (($x300 (= c_ right-to-left)))
 (let (($x253 (and $x300 $x288)))
 (let ((?x92 (center s_)))
 (let (($x254 ((_ is stack ) ?x92)))
 (let (($x255 (= c_ center-to-right)))
 (let (($x256 (and $x255 $x254)))
 (let (($x257 (= c_ center-to-left)))
 (let (($x258 (and $x257 $x254)))
 (let (($x306 (ite $x258 (= ?x282 (stack (top ?x92) ?x87)) (ite $x256 $x264 (ite $x253 (= ?x282 (stack (top ?x90) ?x87)) $x264)))))
 (let (($x284 (= ?x282 (rest ?x87))))
 (let (($x277 ((_ is stack ) ?x87)))
 (let (($x278 (= c_ left-to-right)))
 (let (($x279 (and $x278 $x277)))
 (let (($x271 (= c_ left-to-center)))
 (let (($x272 (and $x271 $x277)))
 (ite $x272 $x284 (ite $x279 $x284 $x306)))))))))))))))))))))))
(assert
 (let ((?x90 (right s_)))
 (let ((?x251 (right s__)))
 (let (($x290 (= ?x251 ?x90)))
 (let (($x296 (= ?x251 (rest ?x90))))
 (let (($x288 ((_ is stack ) ?x90)))
 (let (($x298 (= c_ right-to-center)))
 (let (($x299 (and $x298 $x288)))
 (let (($x300 (= c_ right-to-left)))
 (let (($x253 (and $x300 $x288)))
 (let ((?x92 (center s_)))
 (let (($x254 ((_ is stack ) ?x92)))
 (let (($x255 (= c_ center-to-right)))
 (let (($x256 (and $x255 $x254)))
 (let (($x303 (ite $x256 (= ?x251 (stack (top ?x92) ?x90)) (ite $x253 $x296 (ite $x299 $x296 $x290)))))
 (let (($x257 (= c_ center-to-left)))
 (let (($x258 (and $x257 $x254)))
 (let ((?x87 (left s_)))
 (let (($x277 ((_ is stack ) ?x87)))
 (let (($x278 (= c_ left-to-right)))
 (let (($x279 (and $x278 $x277)))
 (let (($x271 (= c_ left-to-center)))
 (let (($x272 (and $x271 $x277)))
 (ite $x272 (= ?x251 (stack (top ?x87) ?x90)) (ite $x279 $x290 (ite $x258 $x290 $x303))))))))))))))))))))))))))
(assert
 (let ((?x92 (center s_)))
 (let ((?x293 (center s__)))
 (let (($x262 (= ?x293 ?x92)))
 (let ((?x90 (right s_)))
 (let (($x288 ((_ is stack ) ?x90)))
 (let (($x298 (= c_ right-to-center)))
 (let (($x299 (and $x298 $x288)))
 (let (($x300 (= c_ right-to-left)))
 (let (($x253 (and $x300 $x288)))
 (let (($x269 (= ?x293 (rest ?x92))))
 (let (($x254 ((_ is stack ) ?x92)))
 (let (($x255 (= c_ center-to-right)))
 (let (($x256 (and $x255 $x254)))
 (let (($x302 (ite $x256 $x269 (ite $x253 $x262 (ite $x299 (= ?x293 (stack (top ?x90) ?x92)) $x262)))))
 (let (($x257 (= c_ center-to-left)))
 (let (($x258 (and $x257 $x254)))
 (let ((?x87 (left s_)))
 (let (($x277 ((_ is stack ) ?x87)))
 (let (($x278 (= c_ left-to-right)))
 (let (($x279 (and $x278 $x277)))
 (let (($x271 (= c_ left-to-center)))
 (let (($x272 (and $x271 $x277)))
 (ite $x272 $x262 (ite $x279 (= ?x293 (stack (top ?x87) ?x92)) (ite $x258 $x269 $x302))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x282 (left s__)))
 (let ((?x157 (left s___)))
 (let (($x425 (= ?x157 ?x282)))
 (let ((?x251 (right s__)))
 (let ((?x392 (top ?x251)))
 (let ((?x393 (stack ?x392 ?x282)))
 (let (($x419 (= ?x157 ?x393)))
 (let (($x395 ((_ is stack ) ?x251)))
 (let (($x398 (= c__ right-to-left)))
 (let (($x399 (and $x398 $x395)))
 (let ((?x293 (center s__)))
 (let (($x400 ((_ is stack ) ?x293)))
 (let (($x401 (= c__ center-to-right)))
 (let (($x402 (and $x401 $x400)))
 (let ((?x388 (top ?x293)))
 (let ((?x389 (stack ?x388 ?x282)))
 (let (($x416 (= ?x157 ?x389)))
 (let (($x403 (= c__ center-to-left)))
 (let (($x404 (and $x403 $x400)))
 (let ((?x159 (rest ?x282)))
 (let (($x412 (= ?x157 ?x159)))
 (let (($x405 ((_ is stack ) ?x282)))
 (let (($x406 (= c__ left-to-right)))
 (let (($x407 (and $x406 $x405)))
 (let (($x408 (= c__ left-to-center)))
 (let (($x409 (and $x408 $x405)))
 (ite $x409 $x412 (ite $x407 $x412 (ite $x404 $x416 (ite $x402 $x425 (ite $x399 $x419 $x425))))))))))))))))))))))))))))))))
(assert
 (let ((?x251 (right s__)))
 (let ((?x160 (right s___)))
 (let (($x421 (= ?x160 ?x251)))
 (let ((?x391 (rest ?x251)))
 (let (($x418 (= ?x160 ?x391)))
 (let (($x395 ((_ is stack ) ?x251)))
 (let (($x396 (= c__ right-to-center)))
 (let (($x397 (and $x396 $x395)))
 (let (($x398 (= c__ right-to-left)))
 (let (($x399 (and $x398 $x395)))
 (let ((?x293 (center s__)))
 (let ((?x388 (top ?x293)))
 (let ((?x390 (stack ?x388 ?x251)))
 (let (($x417 (= ?x160 ?x390)))
 (let (($x400 ((_ is stack ) ?x293)))
 (let (($x401 (= c__ center-to-right)))
 (let (($x402 (and $x401 $x400)))
 (let (($x403 (= c__ center-to-left)))
 (let (($x404 (and $x403 $x400)))
 (let ((?x282 (left s__)))
 (let (($x405 ((_ is stack ) ?x282)))
 (let (($x406 (= c__ left-to-right)))
 (let (($x407 (and $x406 $x405)))
 (let (($x438 (ite $x407 $x421 (ite $x404 $x421 (ite $x402 $x417 (ite $x399 $x418 (ite $x397 $x418 $x421)))))))
 (let ((?x249 (top ?x282)))
 (let ((?x384 (stack ?x249 ?x251)))
 (let (($x413 (= ?x160 ?x384)))
 (let (($x408 (= c__ left-to-center)))
 (let (($x409 (and $x408 $x405)))
 (ite $x409 $x413 $x438)))))))))))))))))))))))))))))))
(assert
 (let ((?x293 (center s__)))
 (let ((?x385 (center s___)))
 (let (($x423 (= ?x385 ?x293)))
 (let ((?x251 (right s__)))
 (let ((?x392 (top ?x251)))
 (let ((?x394 (stack ?x392 ?x293)))
 (let (($x420 (= ?x385 ?x394)))
 (let (($x395 ((_ is stack ) ?x251)))
 (let (($x396 (= c__ right-to-center)))
 (let (($x397 (and $x396 $x395)))
 (let (($x398 (= c__ right-to-left)))
 (let (($x399 (and $x398 $x395)))
 (let ((?x387 (rest ?x293)))
 (let (($x415 (= ?x385 ?x387)))
 (let (($x400 ((_ is stack ) ?x293)))
 (let (($x401 (= c__ center-to-right)))
 (let (($x402 (and $x401 $x400)))
 (let (($x403 (= c__ center-to-left)))
 (let (($x404 (and $x403 $x400)))
 (let ((?x282 (left s__)))
 (let ((?x249 (top ?x282)))
 (let ((?x386 (stack ?x249 ?x293)))
 (let (($x414 (= ?x385 ?x386)))
 (let (($x405 ((_ is stack ) ?x282)))
 (let (($x406 (= c__ left-to-right)))
 (let (($x407 (and $x406 $x405)))
 (let (($x437 (ite $x407 $x414 (ite $x404 $x415 (ite $x402 $x415 (ite $x399 $x423 (ite $x397 $x420 $x423)))))))
 (let (($x408 (= c__ left-to-center)))
 (let (($x409 (and $x408 $x405)))
 (ite $x409 $x423 $x437)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x157 (left s___)))
 (let ((?x356 (left s____)))
 (let (($x564 (= ?x356 ?x157)))
 (let ((?x160 (right s___)))
 (let ((?x531 (top ?x160)))
 (let ((?x532 (stack ?x531 ?x157)))
 (let (($x558 (= ?x356 ?x532)))
 (let (($x534 ((_ is stack ) ?x160)))
 (let (($x537 (= c___ right-to-left)))
 (let (($x538 (and $x537 $x534)))
 (let ((?x385 (center s___)))
 (let (($x539 ((_ is stack ) ?x385)))
 (let (($x540 (= c___ center-to-right)))
 (let (($x541 (and $x540 $x539)))
 (let ((?x527 (top ?x385)))
 (let ((?x528 (stack ?x527 ?x157)))
 (let (($x555 (= ?x356 ?x528)))
 (let (($x542 (= c___ center-to-left)))
 (let (($x543 (and $x542 $x539)))
 (let ((?x357 (rest ?x157)))
 (let (($x551 (= ?x356 ?x357)))
 (let (($x544 ((_ is stack ) ?x157)))
 (let (($x545 (= c___ left-to-right)))
 (let (($x546 (and $x545 $x544)))
 (let (($x547 (= c___ left-to-center)))
 (let (($x548 (and $x547 $x544)))
 (ite $x548 $x551 (ite $x546 $x551 (ite $x543 $x555 (ite $x541 $x564 (ite $x538 $x558 $x564))))))))))))))))))))))))))))))))
(assert
 (let ((?x160 (right s___)))
 (let ((?x383 (right s____)))
 (let (($x560 (= ?x383 ?x160)))
 (let ((?x530 (rest ?x160)))
 (let (($x557 (= ?x383 ?x530)))
 (let (($x534 ((_ is stack ) ?x160)))
 (let (($x535 (= c___ right-to-center)))
 (let (($x536 (and $x535 $x534)))
 (let (($x537 (= c___ right-to-left)))
 (let (($x538 (and $x537 $x534)))
 (let ((?x385 (center s___)))
 (let ((?x527 (top ?x385)))
 (let ((?x529 (stack ?x527 ?x160)))
 (let (($x556 (= ?x383 ?x529)))
 (let (($x539 ((_ is stack ) ?x385)))
 (let (($x540 (= c___ center-to-right)))
 (let (($x541 (and $x540 $x539)))
 (let (($x542 (= c___ center-to-left)))
 (let (($x543 (and $x542 $x539)))
 (let ((?x157 (left s___)))
 (let (($x544 ((_ is stack ) ?x157)))
 (let (($x545 (= c___ left-to-right)))
 (let (($x546 (and $x545 $x544)))
 (let (($x577 (ite $x546 $x560 (ite $x543 $x560 (ite $x541 $x556 (ite $x538 $x557 (ite $x536 $x557 $x560)))))))
 (let ((?x522 (top ?x157)))
 (let ((?x523 (stack ?x522 ?x160)))
 (let (($x552 (= ?x383 ?x523)))
 (let (($x547 (= c___ left-to-center)))
 (let (($x548 (and $x547 $x544)))
 (ite $x548 $x552 $x577)))))))))))))))))))))))))))))))
(assert
 (let ((?x385 (center s___)))
 (let ((?x524 (center s____)))
 (let (($x562 (= ?x524 ?x385)))
 (let ((?x160 (right s___)))
 (let ((?x531 (top ?x160)))
 (let ((?x533 (stack ?x531 ?x385)))
 (let (($x559 (= ?x524 ?x533)))
 (let (($x534 ((_ is stack ) ?x160)))
 (let (($x535 (= c___ right-to-center)))
 (let (($x536 (and $x535 $x534)))
 (let (($x537 (= c___ right-to-left)))
 (let (($x538 (and $x537 $x534)))
 (let ((?x526 (rest ?x385)))
 (let (($x554 (= ?x524 ?x526)))
 (let (($x539 ((_ is stack ) ?x385)))
 (let (($x540 (= c___ center-to-right)))
 (let (($x541 (and $x540 $x539)))
 (let (($x542 (= c___ center-to-left)))
 (let (($x543 (and $x542 $x539)))
 (let ((?x157 (left s___)))
 (let ((?x522 (top ?x157)))
 (let ((?x525 (stack ?x522 ?x385)))
 (let (($x553 (= ?x524 ?x525)))
 (let (($x544 ((_ is stack ) ?x157)))
 (let (($x545 (= c___ left-to-right)))
 (let (($x546 (and $x545 $x544)))
 (let (($x576 (ite $x546 $x553 (ite $x543 $x554 (ite $x541 $x554 (ite $x538 $x562 (ite $x536 $x559 $x562)))))))
 (let (($x547 (= c___ left-to-center)))
 (let (($x548 (and $x547 $x544)))
 (ite $x548 $x562 $x576)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x356 (left s____)))
 (let ((?x441 (left s_____)))
 (let (($x702 (= ?x441 ?x356)))
 (let ((?x383 (right s____)))
 (let ((?x669 (top ?x383)))
 (let ((?x670 (stack ?x669 ?x356)))
 (let (($x696 (= ?x441 ?x670)))
 (let (($x672 ((_ is stack ) ?x383)))
 (let (($x675 (= c____ right-to-left)))
 (let (($x676 (and $x675 $x672)))
 (let ((?x524 (center s____)))
 (let (($x677 ((_ is stack ) ?x524)))
 (let (($x678 (= c____ center-to-right)))
 (let (($x679 (and $x678 $x677)))
 (let ((?x665 (top ?x524)))
 (let ((?x666 (stack ?x665 ?x356)))
 (let (($x693 (= ?x441 ?x666)))
 (let (($x680 (= c____ center-to-left)))
 (let (($x681 (and $x680 $x677)))
 (let ((?x474 (rest ?x356)))
 (let (($x689 (= ?x441 ?x474)))
 (let (($x682 ((_ is stack ) ?x356)))
 (let (($x683 (= c____ left-to-right)))
 (let (($x684 (and $x683 $x682)))
 (let (($x685 (= c____ left-to-center)))
 (let (($x686 (and $x685 $x682)))
 (ite $x686 $x689 (ite $x684 $x689 (ite $x681 $x693 (ite $x679 $x702 (ite $x676 $x696 $x702))))))))))))))))))))))))))))))))
(assert
 (let ((?x383 (right s____)))
 (let ((?x475 (right s_____)))
 (let (($x698 (= ?x475 ?x383)))
 (let ((?x668 (rest ?x383)))
 (let (($x695 (= ?x475 ?x668)))
 (let (($x672 ((_ is stack ) ?x383)))
 (let (($x673 (= c____ right-to-center)))
 (let (($x674 (and $x673 $x672)))
 (let (($x675 (= c____ right-to-left)))
 (let (($x676 (and $x675 $x672)))
 (let ((?x524 (center s____)))
 (let ((?x665 (top ?x524)))
 (let ((?x667 (stack ?x665 ?x383)))
 (let (($x694 (= ?x475 ?x667)))
 (let (($x677 ((_ is stack ) ?x524)))
 (let (($x678 (= c____ center-to-right)))
 (let (($x679 (and $x678 $x677)))
 (let (($x680 (= c____ center-to-left)))
 (let (($x681 (and $x680 $x677)))
 (let ((?x356 (left s____)))
 (let (($x682 ((_ is stack ) ?x356)))
 (let (($x683 (= c____ left-to-right)))
 (let (($x684 (and $x683 $x682)))
 (let (($x715 (ite $x684 $x698 (ite $x681 $x698 (ite $x679 $x694 (ite $x676 $x695 (ite $x674 $x695 $x698)))))))
 (let ((?x521 (top ?x356)))
 (let ((?x661 (stack ?x521 ?x383)))
 (let (($x690 (= ?x475 ?x661)))
 (let (($x685 (= c____ left-to-center)))
 (let (($x686 (and $x685 $x682)))
 (ite $x686 $x690 $x715)))))))))))))))))))))))))))))))
(assert
 (let ((?x524 (center s____)))
 (let ((?x662 (center s_____)))
 (let (($x700 (= ?x662 ?x524)))
 (let ((?x383 (right s____)))
 (let ((?x669 (top ?x383)))
 (let ((?x671 (stack ?x669 ?x524)))
 (let (($x697 (= ?x662 ?x671)))
 (let (($x672 ((_ is stack ) ?x383)))
 (let (($x673 (= c____ right-to-center)))
 (let (($x674 (and $x673 $x672)))
 (let (($x675 (= c____ right-to-left)))
 (let (($x676 (and $x675 $x672)))
 (let ((?x664 (rest ?x524)))
 (let (($x692 (= ?x662 ?x664)))
 (let (($x677 ((_ is stack ) ?x524)))
 (let (($x678 (= c____ center-to-right)))
 (let (($x679 (and $x678 $x677)))
 (let (($x680 (= c____ center-to-left)))
 (let (($x681 (and $x680 $x677)))
 (let ((?x356 (left s____)))
 (let ((?x521 (top ?x356)))
 (let ((?x663 (stack ?x521 ?x524)))
 (let (($x691 (= ?x662 ?x663)))
 (let (($x682 ((_ is stack ) ?x356)))
 (let (($x683 (= c____ left-to-right)))
 (let (($x684 (and $x683 $x682)))
 (let (($x714 (ite $x684 $x691 (ite $x681 $x692 (ite $x679 $x692 (ite $x676 $x700 (ite $x674 $x697 $x700)))))))
 (let (($x685 (= c____ left-to-center)))
 (let (($x686 (and $x685 $x682)))
 (ite $x686 $x700 $x714)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x441 (left s_____)))
 (let ((?x580 (left s______)))
 (let (($x840 (= ?x580 ?x441)))
 (let ((?x475 (right s_____)))
 (let ((?x807 (top ?x475)))
 (let ((?x808 (stack ?x807 ?x441)))
 (let (($x834 (= ?x580 ?x808)))
 (let (($x810 ((_ is stack ) ?x475)))
 (let (($x813 (= c_____ right-to-left)))
 (let (($x814 (and $x813 $x810)))
 (let ((?x662 (center s_____)))
 (let (($x815 ((_ is stack ) ?x662)))
 (let (($x816 (= c_____ center-to-right)))
 (let (($x817 (and $x816 $x815)))
 (let ((?x803 (top ?x662)))
 (let ((?x804 (stack ?x803 ?x441)))
 (let (($x831 (= ?x580 ?x804)))
 (let (($x818 (= c_____ center-to-left)))
 (let (($x819 (and $x818 $x815)))
 (let ((?x613 (rest ?x441)))
 (let (($x827 (= ?x580 ?x613)))
 (let (($x820 ((_ is stack ) ?x441)))
 (let (($x821 (= c_____ left-to-right)))
 (let (($x822 (and $x821 $x820)))
 (let (($x823 (= c_____ left-to-center)))
 (let (($x824 (and $x823 $x820)))
 (ite $x824 $x827 (ite $x822 $x827 (ite $x819 $x831 (ite $x817 $x840 (ite $x814 $x834 $x840))))))))))))))))))))))))))))))))
(assert
 (let ((?x475 (right s_____)))
 (let ((?x614 (right s______)))
 (let (($x836 (= ?x614 ?x475)))
 (let ((?x806 (rest ?x475)))
 (let (($x833 (= ?x614 ?x806)))
 (let (($x810 ((_ is stack ) ?x475)))
 (let (($x811 (= c_____ right-to-center)))
 (let (($x812 (and $x811 $x810)))
 (let (($x813 (= c_____ right-to-left)))
 (let (($x814 (and $x813 $x810)))
 (let ((?x662 (center s_____)))
 (let ((?x803 (top ?x662)))
 (let ((?x805 (stack ?x803 ?x475)))
 (let (($x832 (= ?x614 ?x805)))
 (let (($x815 ((_ is stack ) ?x662)))
 (let (($x816 (= c_____ center-to-right)))
 (let (($x817 (and $x816 $x815)))
 (let (($x818 (= c_____ center-to-left)))
 (let (($x819 (and $x818 $x815)))
 (let ((?x441 (left s_____)))
 (let (($x820 ((_ is stack ) ?x441)))
 (let (($x821 (= c_____ left-to-right)))
 (let (($x822 (and $x821 $x820)))
 (let (($x853 (ite $x822 $x836 (ite $x819 $x836 (ite $x817 $x832 (ite $x814 $x833 (ite $x812 $x833 $x836)))))))
 (let ((?x660 (top ?x441)))
 (let ((?x799 (stack ?x660 ?x475)))
 (let (($x828 (= ?x614 ?x799)))
 (let (($x823 (= c_____ left-to-center)))
 (let (($x824 (and $x823 $x820)))
 (ite $x824 $x828 $x853)))))))))))))))))))))))))))))))
(assert
 (let ((?x662 (center s_____)))
 (let ((?x800 (center s______)))
 (let (($x838 (= ?x800 ?x662)))
 (let ((?x475 (right s_____)))
 (let ((?x807 (top ?x475)))
 (let ((?x809 (stack ?x807 ?x662)))
 (let (($x835 (= ?x800 ?x809)))
 (let (($x810 ((_ is stack ) ?x475)))
 (let (($x811 (= c_____ right-to-center)))
 (let (($x812 (and $x811 $x810)))
 (let (($x813 (= c_____ right-to-left)))
 (let (($x814 (and $x813 $x810)))
 (let ((?x802 (rest ?x662)))
 (let (($x830 (= ?x800 ?x802)))
 (let (($x815 ((_ is stack ) ?x662)))
 (let (($x816 (= c_____ center-to-right)))
 (let (($x817 (and $x816 $x815)))
 (let (($x818 (= c_____ center-to-left)))
 (let (($x819 (and $x818 $x815)))
 (let ((?x441 (left s_____)))
 (let ((?x660 (top ?x441)))
 (let ((?x801 (stack ?x660 ?x662)))
 (let (($x829 (= ?x800 ?x801)))
 (let (($x820 ((_ is stack ) ?x441)))
 (let (($x821 (= c_____ left-to-right)))
 (let (($x822 (and $x821 $x820)))
 (let (($x852 (ite $x822 $x829 (ite $x819 $x830 (ite $x817 $x830 (ite $x814 $x838 (ite $x812 $x835 $x838)))))))
 (let (($x823 (= c_____ left-to-center)))
 (let (($x824 (and $x823 $x820)))
 (ite $x824 $x838 $x852)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x580 (left s______)))
 (let ((?x718 (left s_______)))
 (let (($x978 (= ?x718 ?x580)))
 (let ((?x614 (right s______)))
 (let ((?x945 (top ?x614)))
 (let ((?x946 (stack ?x945 ?x580)))
 (let (($x972 (= ?x718 ?x946)))
 (let (($x948 ((_ is stack ) ?x614)))
 (let (($x951 (= c______ right-to-left)))
 (let (($x952 (and $x951 $x948)))
 (let ((?x800 (center s______)))
 (let (($x953 ((_ is stack ) ?x800)))
 (let (($x954 (= c______ center-to-right)))
 (let (($x955 (and $x954 $x953)))
 (let ((?x941 (top ?x800)))
 (let ((?x942 (stack ?x941 ?x580)))
 (let (($x969 (= ?x718 ?x942)))
 (let (($x956 (= c______ center-to-left)))
 (let (($x957 (and $x956 $x953)))
 (let ((?x751 (rest ?x580)))
 (let (($x965 (= ?x718 ?x751)))
 (let (($x958 ((_ is stack ) ?x580)))
 (let (($x959 (= c______ left-to-right)))
 (let (($x960 (and $x959 $x958)))
 (let (($x961 (= c______ left-to-center)))
 (let (($x962 (and $x961 $x958)))
 (ite $x962 $x965 (ite $x960 $x965 (ite $x957 $x969 (ite $x955 $x978 (ite $x952 $x972 $x978))))))))))))))))))))))))))))))))
(assert
 (let ((?x614 (right s______)))
 (let ((?x752 (right s_______)))
 (let (($x974 (= ?x752 ?x614)))
 (let ((?x944 (rest ?x614)))
 (let (($x971 (= ?x752 ?x944)))
 (let (($x948 ((_ is stack ) ?x614)))
 (let (($x949 (= c______ right-to-center)))
 (let (($x950 (and $x949 $x948)))
 (let (($x951 (= c______ right-to-left)))
 (let (($x952 (and $x951 $x948)))
 (let ((?x800 (center s______)))
 (let ((?x941 (top ?x800)))
 (let ((?x943 (stack ?x941 ?x614)))
 (let (($x970 (= ?x752 ?x943)))
 (let (($x953 ((_ is stack ) ?x800)))
 (let (($x954 (= c______ center-to-right)))
 (let (($x955 (and $x954 $x953)))
 (let (($x956 (= c______ center-to-left)))
 (let (($x957 (and $x956 $x953)))
 (let ((?x580 (left s______)))
 (let (($x958 ((_ is stack ) ?x580)))
 (let (($x959 (= c______ left-to-right)))
 (let (($x960 (and $x959 $x958)))
 (let (($x991 (ite $x960 $x974 (ite $x957 $x974 (ite $x955 $x970 (ite $x952 $x971 (ite $x950 $x971 $x974)))))))
 (let ((?x798 (top ?x580)))
 (let ((?x937 (stack ?x798 ?x614)))
 (let (($x966 (= ?x752 ?x937)))
 (let (($x961 (= c______ left-to-center)))
 (let (($x962 (and $x961 $x958)))
 (ite $x962 $x966 $x991)))))))))))))))))))))))))))))))
(assert
 (let ((?x800 (center s______)))
 (let ((?x938 (center s_______)))
 (let (($x976 (= ?x938 ?x800)))
 (let ((?x614 (right s______)))
 (let ((?x945 (top ?x614)))
 (let ((?x947 (stack ?x945 ?x800)))
 (let (($x973 (= ?x938 ?x947)))
 (let (($x948 ((_ is stack ) ?x614)))
 (let (($x949 (= c______ right-to-center)))
 (let (($x950 (and $x949 $x948)))
 (let (($x951 (= c______ right-to-left)))
 (let (($x952 (and $x951 $x948)))
 (let ((?x940 (rest ?x800)))
 (let (($x968 (= ?x938 ?x940)))
 (let (($x953 ((_ is stack ) ?x800)))
 (let (($x954 (= c______ center-to-right)))
 (let (($x955 (and $x954 $x953)))
 (let (($x956 (= c______ center-to-left)))
 (let (($x957 (and $x956 $x953)))
 (let ((?x580 (left s______)))
 (let ((?x798 (top ?x580)))
 (let ((?x939 (stack ?x798 ?x800)))
 (let (($x967 (= ?x938 ?x939)))
 (let (($x958 ((_ is stack ) ?x580)))
 (let (($x959 (= c______ left-to-right)))
 (let (($x960 (and $x959 $x958)))
 (let (($x990 (ite $x960 $x967 (ite $x957 $x968 (ite $x955 $x968 (ite $x952 $x976 (ite $x950 $x973 $x976)))))))
 (let (($x961 (= c______ left-to-center)))
 (let (($x962 (and $x961 $x958)))
 (ite $x962 $x976 $x990)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x718 (left s_______)))
 (let ((?x856 (left s________)))
 (let (($x1116 (= ?x856 ?x718)))
 (let ((?x752 (right s_______)))
 (let ((?x1083 (top ?x752)))
 (let ((?x1084 (stack ?x1083 ?x718)))
 (let (($x1110 (= ?x856 ?x1084)))
 (let (($x1086 ((_ is stack ) ?x752)))
 (let (($x1089 (= c_______ right-to-left)))
 (let (($x1090 (and $x1089 $x1086)))
 (let ((?x938 (center s_______)))
 (let (($x1091 ((_ is stack ) ?x938)))
 (let (($x1092 (= c_______ center-to-right)))
 (let (($x1093 (and $x1092 $x1091)))
 (let ((?x1079 (top ?x938)))
 (let ((?x1080 (stack ?x1079 ?x718)))
 (let (($x1107 (= ?x856 ?x1080)))
 (let (($x1094 (= c_______ center-to-left)))
 (let (($x1095 (and $x1094 $x1091)))
 (let ((?x889 (rest ?x718)))
 (let (($x1103 (= ?x856 ?x889)))
 (let (($x1096 ((_ is stack ) ?x718)))
 (let (($x1097 (= c_______ left-to-right)))
 (let (($x1098 (and $x1097 $x1096)))
 (let (($x1099 (= c_______ left-to-center)))
 (let (($x1100 (and $x1099 $x1096)))
 (ite $x1100 $x1103 (ite $x1098 $x1103 (ite $x1095 $x1107 (ite $x1093 $x1116 (ite $x1090 $x1110 $x1116))))))))))))))))))))))))))))))))
(assert
 (let ((?x752 (right s_______)))
 (let ((?x890 (right s________)))
 (let (($x1112 (= ?x890 ?x752)))
 (let ((?x1082 (rest ?x752)))
 (let (($x1109 (= ?x890 ?x1082)))
 (let (($x1086 ((_ is stack ) ?x752)))
 (let (($x1087 (= c_______ right-to-center)))
 (let (($x1088 (and $x1087 $x1086)))
 (let (($x1089 (= c_______ right-to-left)))
 (let (($x1090 (and $x1089 $x1086)))
 (let ((?x938 (center s_______)))
 (let ((?x1079 (top ?x938)))
 (let ((?x1081 (stack ?x1079 ?x752)))
 (let (($x1108 (= ?x890 ?x1081)))
 (let (($x1091 ((_ is stack ) ?x938)))
 (let (($x1092 (= c_______ center-to-right)))
 (let (($x1093 (and $x1092 $x1091)))
 (let (($x1094 (= c_______ center-to-left)))
 (let (($x1095 (and $x1094 $x1091)))
 (let ((?x718 (left s_______)))
 (let (($x1096 ((_ is stack ) ?x718)))
 (let (($x1097 (= c_______ left-to-right)))
 (let (($x1098 (and $x1097 $x1096)))
 (let (($x1129 (ite $x1098 $x1112 (ite $x1095 $x1112 (ite $x1093 $x1108 (ite $x1090 $x1109 (ite $x1088 $x1109 $x1112)))))))
 (let ((?x936 (top ?x718)))
 (let ((?x1075 (stack ?x936 ?x752)))
 (let (($x1104 (= ?x890 ?x1075)))
 (let (($x1099 (= c_______ left-to-center)))
 (let (($x1100 (and $x1099 $x1096)))
 (ite $x1100 $x1104 $x1129)))))))))))))))))))))))))))))))
(assert
 (let ((?x938 (center s_______)))
 (let ((?x1076 (center s________)))
 (let (($x1114 (= ?x1076 ?x938)))
 (let ((?x752 (right s_______)))
 (let ((?x1083 (top ?x752)))
 (let ((?x1085 (stack ?x1083 ?x938)))
 (let (($x1111 (= ?x1076 ?x1085)))
 (let (($x1086 ((_ is stack ) ?x752)))
 (let (($x1087 (= c_______ right-to-center)))
 (let (($x1088 (and $x1087 $x1086)))
 (let (($x1089 (= c_______ right-to-left)))
 (let (($x1090 (and $x1089 $x1086)))
 (let ((?x1078 (rest ?x938)))
 (let (($x1106 (= ?x1076 ?x1078)))
 (let (($x1091 ((_ is stack ) ?x938)))
 (let (($x1092 (= c_______ center-to-right)))
 (let (($x1093 (and $x1092 $x1091)))
 (let (($x1094 (= c_______ center-to-left)))
 (let (($x1095 (and $x1094 $x1091)))
 (let ((?x718 (left s_______)))
 (let ((?x936 (top ?x718)))
 (let ((?x1077 (stack ?x936 ?x938)))
 (let (($x1105 (= ?x1076 ?x1077)))
 (let (($x1096 ((_ is stack ) ?x718)))
 (let (($x1097 (= c_______ left-to-right)))
 (let (($x1098 (and $x1097 $x1096)))
 (let (($x1128 (ite $x1098 $x1105 (ite $x1095 $x1106 (ite $x1093 $x1106 (ite $x1090 $x1114 (ite $x1088 $x1111 $x1114)))))))
 (let (($x1099 (= c_______ left-to-center)))
 (let (($x1100 (and $x1099 $x1096)))
 (ite $x1100 $x1114 $x1128)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x856 (left s________)))
 (let ((?x994 (left s_________)))
 (let (($x1254 (= ?x994 ?x856)))
 (let ((?x890 (right s________)))
 (let ((?x1221 (top ?x890)))
 (let ((?x1222 (stack ?x1221 ?x856)))
 (let (($x1248 (= ?x994 ?x1222)))
 (let (($x1224 ((_ is stack ) ?x890)))
 (let (($x1227 (= c________ right-to-left)))
 (let (($x1228 (and $x1227 $x1224)))
 (let ((?x1076 (center s________)))
 (let (($x1229 ((_ is stack ) ?x1076)))
 (let (($x1230 (= c________ center-to-right)))
 (let (($x1231 (and $x1230 $x1229)))
 (let ((?x1217 (top ?x1076)))
 (let ((?x1218 (stack ?x1217 ?x856)))
 (let (($x1245 (= ?x994 ?x1218)))
 (let (($x1232 (= c________ center-to-left)))
 (let (($x1233 (and $x1232 $x1229)))
 (let ((?x1027 (rest ?x856)))
 (let (($x1241 (= ?x994 ?x1027)))
 (let (($x1234 ((_ is stack ) ?x856)))
 (let (($x1235 (= c________ left-to-right)))
 (let (($x1236 (and $x1235 $x1234)))
 (let (($x1237 (= c________ left-to-center)))
 (let (($x1238 (and $x1237 $x1234)))
 (ite $x1238 $x1241 (ite $x1236 $x1241 (ite $x1233 $x1245 (ite $x1231 $x1254 (ite $x1228 $x1248 $x1254))))))))))))))))))))))))))))))))
(assert
 (let ((?x890 (right s________)))
 (let ((?x1028 (right s_________)))
 (let (($x1250 (= ?x1028 ?x890)))
 (let ((?x1220 (rest ?x890)))
 (let (($x1247 (= ?x1028 ?x1220)))
 (let (($x1224 ((_ is stack ) ?x890)))
 (let (($x1225 (= c________ right-to-center)))
 (let (($x1226 (and $x1225 $x1224)))
 (let (($x1227 (= c________ right-to-left)))
 (let (($x1228 (and $x1227 $x1224)))
 (let ((?x1076 (center s________)))
 (let ((?x1217 (top ?x1076)))
 (let ((?x1219 (stack ?x1217 ?x890)))
 (let (($x1246 (= ?x1028 ?x1219)))
 (let (($x1229 ((_ is stack ) ?x1076)))
 (let (($x1230 (= c________ center-to-right)))
 (let (($x1231 (and $x1230 $x1229)))
 (let (($x1232 (= c________ center-to-left)))
 (let (($x1233 (and $x1232 $x1229)))
 (let ((?x856 (left s________)))
 (let (($x1234 ((_ is stack ) ?x856)))
 (let (($x1235 (= c________ left-to-right)))
 (let (($x1236 (and $x1235 $x1234)))
 (let (($x1267 (ite $x1236 $x1250 (ite $x1233 $x1250 (ite $x1231 $x1246 (ite $x1228 $x1247 (ite $x1226 $x1247 $x1250)))))))
 (let ((?x1074 (top ?x856)))
 (let ((?x1213 (stack ?x1074 ?x890)))
 (let (($x1242 (= ?x1028 ?x1213)))
 (let (($x1237 (= c________ left-to-center)))
 (let (($x1238 (and $x1237 $x1234)))
 (ite $x1238 $x1242 $x1267)))))))))))))))))))))))))))))))
(assert
 (let ((?x1076 (center s________)))
 (let ((?x1214 (center s_________)))
 (let (($x1252 (= ?x1214 ?x1076)))
 (let ((?x890 (right s________)))
 (let ((?x1221 (top ?x890)))
 (let ((?x1223 (stack ?x1221 ?x1076)))
 (let (($x1249 (= ?x1214 ?x1223)))
 (let (($x1224 ((_ is stack ) ?x890)))
 (let (($x1225 (= c________ right-to-center)))
 (let (($x1226 (and $x1225 $x1224)))
 (let (($x1227 (= c________ right-to-left)))
 (let (($x1228 (and $x1227 $x1224)))
 (let ((?x1216 (rest ?x1076)))
 (let (($x1244 (= ?x1214 ?x1216)))
 (let (($x1229 ((_ is stack ) ?x1076)))
 (let (($x1230 (= c________ center-to-right)))
 (let (($x1231 (and $x1230 $x1229)))
 (let (($x1232 (= c________ center-to-left)))
 (let (($x1233 (and $x1232 $x1229)))
 (let ((?x856 (left s________)))
 (let ((?x1074 (top ?x856)))
 (let ((?x1215 (stack ?x1074 ?x1076)))
 (let (($x1243 (= ?x1214 ?x1215)))
 (let (($x1234 ((_ is stack ) ?x856)))
 (let (($x1235 (= c________ left-to-right)))
 (let (($x1236 (and $x1235 $x1234)))
 (let (($x1266 (ite $x1236 $x1243 (ite $x1233 $x1244 (ite $x1231 $x1244 (ite $x1228 $x1252 (ite $x1226 $x1249 $x1252)))))))
 (let (($x1237 (= c________ left-to-center)))
 (let (($x1238 (and $x1237 $x1234)))
 (ite $x1238 $x1252 $x1266)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x994 (left s_________)))
 (let ((?x1132 (left s__________)))
 (let (($x1392 (= ?x1132 ?x994)))
 (let ((?x1028 (right s_________)))
 (let ((?x1359 (top ?x1028)))
 (let ((?x1360 (stack ?x1359 ?x994)))
 (let (($x1386 (= ?x1132 ?x1360)))
 (let (($x1362 ((_ is stack ) ?x1028)))
 (let (($x1365 (= c_________ right-to-left)))
 (let (($x1366 (and $x1365 $x1362)))
 (let ((?x1214 (center s_________)))
 (let (($x1367 ((_ is stack ) ?x1214)))
 (let (($x1368 (= c_________ center-to-right)))
 (let (($x1369 (and $x1368 $x1367)))
 (let ((?x1355 (top ?x1214)))
 (let ((?x1356 (stack ?x1355 ?x994)))
 (let (($x1383 (= ?x1132 ?x1356)))
 (let (($x1370 (= c_________ center-to-left)))
 (let (($x1371 (and $x1370 $x1367)))
 (let ((?x1165 (rest ?x994)))
 (let (($x1379 (= ?x1132 ?x1165)))
 (let (($x1372 ((_ is stack ) ?x994)))
 (let (($x1373 (= c_________ left-to-right)))
 (let (($x1374 (and $x1373 $x1372)))
 (let (($x1375 (= c_________ left-to-center)))
 (let (($x1376 (and $x1375 $x1372)))
 (ite $x1376 $x1379 (ite $x1374 $x1379 (ite $x1371 $x1383 (ite $x1369 $x1392 (ite $x1366 $x1386 $x1392))))))))))))))))))))))))))))))))
(assert
 (let ((?x1028 (right s_________)))
 (let ((?x1166 (right s__________)))
 (let (($x1388 (= ?x1166 ?x1028)))
 (let ((?x1358 (rest ?x1028)))
 (let (($x1385 (= ?x1166 ?x1358)))
 (let (($x1362 ((_ is stack ) ?x1028)))
 (let (($x1363 (= c_________ right-to-center)))
 (let (($x1364 (and $x1363 $x1362)))
 (let (($x1365 (= c_________ right-to-left)))
 (let (($x1366 (and $x1365 $x1362)))
 (let ((?x1214 (center s_________)))
 (let ((?x1355 (top ?x1214)))
 (let ((?x1357 (stack ?x1355 ?x1028)))
 (let (($x1384 (= ?x1166 ?x1357)))
 (let (($x1367 ((_ is stack ) ?x1214)))
 (let (($x1368 (= c_________ center-to-right)))
 (let (($x1369 (and $x1368 $x1367)))
 (let (($x1370 (= c_________ center-to-left)))
 (let (($x1371 (and $x1370 $x1367)))
 (let ((?x994 (left s_________)))
 (let (($x1372 ((_ is stack ) ?x994)))
 (let (($x1373 (= c_________ left-to-right)))
 (let (($x1374 (and $x1373 $x1372)))
 (let (($x1405 (ite $x1374 $x1388 (ite $x1371 $x1388 (ite $x1369 $x1384 (ite $x1366 $x1385 (ite $x1364 $x1385 $x1388)))))))
 (let ((?x1212 (top ?x994)))
 (let ((?x1351 (stack ?x1212 ?x1028)))
 (let (($x1380 (= ?x1166 ?x1351)))
 (let (($x1375 (= c_________ left-to-center)))
 (let (($x1376 (and $x1375 $x1372)))
 (ite $x1376 $x1380 $x1405)))))))))))))))))))))))))))))))
(assert
 (let ((?x1214 (center s_________)))
 (let ((?x1352 (center s__________)))
 (let (($x1390 (= ?x1352 ?x1214)))
 (let ((?x1028 (right s_________)))
 (let ((?x1359 (top ?x1028)))
 (let ((?x1361 (stack ?x1359 ?x1214)))
 (let (($x1387 (= ?x1352 ?x1361)))
 (let (($x1362 ((_ is stack ) ?x1028)))
 (let (($x1363 (= c_________ right-to-center)))
 (let (($x1364 (and $x1363 $x1362)))
 (let (($x1365 (= c_________ right-to-left)))
 (let (($x1366 (and $x1365 $x1362)))
 (let ((?x1354 (rest ?x1214)))
 (let (($x1382 (= ?x1352 ?x1354)))
 (let (($x1367 ((_ is stack ) ?x1214)))
 (let (($x1368 (= c_________ center-to-right)))
 (let (($x1369 (and $x1368 $x1367)))
 (let (($x1370 (= c_________ center-to-left)))
 (let (($x1371 (and $x1370 $x1367)))
 (let ((?x994 (left s_________)))
 (let ((?x1212 (top ?x994)))
 (let ((?x1353 (stack ?x1212 ?x1214)))
 (let (($x1381 (= ?x1352 ?x1353)))
 (let (($x1372 ((_ is stack ) ?x994)))
 (let (($x1373 (= c_________ left-to-right)))
 (let (($x1374 (and $x1373 $x1372)))
 (let (($x1404 (ite $x1374 $x1381 (ite $x1371 $x1382 (ite $x1369 $x1382 (ite $x1366 $x1390 (ite $x1364 $x1387 $x1390)))))))
 (let (($x1375 (= c_________ left-to-center)))
 (let (($x1376 (and $x1375 $x1372)))
 (ite $x1376 $x1390 $x1404)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1132 (left s__________)))
 (let ((?x1270 (left s___________)))
 (let (($x1530 (= ?x1270 ?x1132)))
 (let ((?x1166 (right s__________)))
 (let ((?x1497 (top ?x1166)))
 (let ((?x1498 (stack ?x1497 ?x1132)))
 (let (($x1524 (= ?x1270 ?x1498)))
 (let (($x1500 ((_ is stack ) ?x1166)))
 (let (($x1503 (= c__________ right-to-left)))
 (let (($x1504 (and $x1503 $x1500)))
 (let ((?x1352 (center s__________)))
 (let (($x1505 ((_ is stack ) ?x1352)))
 (let (($x1506 (= c__________ center-to-right)))
 (let (($x1507 (and $x1506 $x1505)))
 (let ((?x1493 (top ?x1352)))
 (let ((?x1494 (stack ?x1493 ?x1132)))
 (let (($x1521 (= ?x1270 ?x1494)))
 (let (($x1508 (= c__________ center-to-left)))
 (let (($x1509 (and $x1508 $x1505)))
 (let ((?x1303 (rest ?x1132)))
 (let (($x1517 (= ?x1270 ?x1303)))
 (let (($x1510 ((_ is stack ) ?x1132)))
 (let (($x1511 (= c__________ left-to-right)))
 (let (($x1512 (and $x1511 $x1510)))
 (let (($x1513 (= c__________ left-to-center)))
 (let (($x1514 (and $x1513 $x1510)))
 (ite $x1514 $x1517 (ite $x1512 $x1517 (ite $x1509 $x1521 (ite $x1507 $x1530 (ite $x1504 $x1524 $x1530))))))))))))))))))))))))))))))))
(assert
 (let ((?x1166 (right s__________)))
 (let ((?x1304 (right s___________)))
 (let (($x1526 (= ?x1304 ?x1166)))
 (let ((?x1496 (rest ?x1166)))
 (let (($x1523 (= ?x1304 ?x1496)))
 (let (($x1500 ((_ is stack ) ?x1166)))
 (let (($x1501 (= c__________ right-to-center)))
 (let (($x1502 (and $x1501 $x1500)))
 (let (($x1503 (= c__________ right-to-left)))
 (let (($x1504 (and $x1503 $x1500)))
 (let ((?x1352 (center s__________)))
 (let ((?x1493 (top ?x1352)))
 (let ((?x1495 (stack ?x1493 ?x1166)))
 (let (($x1522 (= ?x1304 ?x1495)))
 (let (($x1505 ((_ is stack ) ?x1352)))
 (let (($x1506 (= c__________ center-to-right)))
 (let (($x1507 (and $x1506 $x1505)))
 (let (($x1508 (= c__________ center-to-left)))
 (let (($x1509 (and $x1508 $x1505)))
 (let ((?x1132 (left s__________)))
 (let (($x1510 ((_ is stack ) ?x1132)))
 (let (($x1511 (= c__________ left-to-right)))
 (let (($x1512 (and $x1511 $x1510)))
 (let (($x1543 (ite $x1512 $x1526 (ite $x1509 $x1526 (ite $x1507 $x1522 (ite $x1504 $x1523 (ite $x1502 $x1523 $x1526)))))))
 (let ((?x1350 (top ?x1132)))
 (let ((?x1489 (stack ?x1350 ?x1166)))
 (let (($x1518 (= ?x1304 ?x1489)))
 (let (($x1513 (= c__________ left-to-center)))
 (let (($x1514 (and $x1513 $x1510)))
 (ite $x1514 $x1518 $x1543)))))))))))))))))))))))))))))))
(assert
 (let ((?x1352 (center s__________)))
 (let ((?x1490 (center s___________)))
 (let (($x1528 (= ?x1490 ?x1352)))
 (let ((?x1166 (right s__________)))
 (let ((?x1497 (top ?x1166)))
 (let ((?x1499 (stack ?x1497 ?x1352)))
 (let (($x1525 (= ?x1490 ?x1499)))
 (let (($x1500 ((_ is stack ) ?x1166)))
 (let (($x1501 (= c__________ right-to-center)))
 (let (($x1502 (and $x1501 $x1500)))
 (let (($x1503 (= c__________ right-to-left)))
 (let (($x1504 (and $x1503 $x1500)))
 (let ((?x1492 (rest ?x1352)))
 (let (($x1520 (= ?x1490 ?x1492)))
 (let (($x1505 ((_ is stack ) ?x1352)))
 (let (($x1506 (= c__________ center-to-right)))
 (let (($x1507 (and $x1506 $x1505)))
 (let (($x1508 (= c__________ center-to-left)))
 (let (($x1509 (and $x1508 $x1505)))
 (let ((?x1132 (left s__________)))
 (let ((?x1350 (top ?x1132)))
 (let ((?x1491 (stack ?x1350 ?x1352)))
 (let (($x1519 (= ?x1490 ?x1491)))
 (let (($x1510 ((_ is stack ) ?x1132)))
 (let (($x1511 (= c__________ left-to-right)))
 (let (($x1512 (and $x1511 $x1510)))
 (let (($x1542 (ite $x1512 $x1519 (ite $x1509 $x1520 (ite $x1507 $x1520 (ite $x1504 $x1528 (ite $x1502 $x1525 $x1528)))))))
 (let (($x1513 (= c__________ left-to-center)))
 (let (($x1514 (and $x1513 $x1510)))
 (ite $x1514 $x1528 $x1542)))))))))))))))))))))))))))))))
(assert
 (let ((?x57 (stack I (stack H (stack G (stack E (stack B (stack A empty))))))))
 (let ((?x63 (stack R (stack Q (stack P (stack N (stack L (stack J ?x57))))))))
 (let ((?x1304 (right s___________)))
 (let (($x1546 (= ?x1304 ?x63)))
 (let ((?x1490 (center s___________)))
 (let (($x1577 (= ?x1490 empty)))
 (let ((?x53 (stack M (stack D (stack F (stack C (stack K (stack O empty))))))))
 (let ((?x1270 (left s___________)))
 (let (($x1578 (= ?x1270 ?x53)))
 (let (($x1580 (not (and $x1578 $x1577 $x1546))))
 (not $x1580))))))))))))
(check-sat)
(exit)
