(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(declare-fun c!16 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x27 (stack E empty)))
 (let ((?x26 (stack C ?x27)))
 (let ((?x28 (stack J ?x26)))
 (let ((?x29 (stack I ?x28)))
 (let ((?x96 (left s_tmp_)))
 (= ?x96 ?x29)))))))
(assert
 (let ((?x30 (stack M empty)))
 (let ((?x31 (stack G ?x30)))
 (let ((?x99 (center s_tmp__)))
 (= ?x99 ?x31)))))
(assert
 (let ((?x32 (stack A empty)))
 (let ((?x33 (stack B ?x32)))
 (let ((?x34 (stack D ?x33)))
 (let ((?x35 (stack F ?x34)))
 (let ((?x36 (stack H ?x35)))
 (let ((?x37 (stack K ?x36)))
 (let ((?x38 (stack L ?x37)))
 (let ((?x39 (stack N ?x38)))
 (let ((?x102 (right s_tmp___)))
 (= ?x102 ?x39)))))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x129 (left s_tmp__)))
 (= (left s_tmp___) ?x129)))
(assert
 (let ((?x99 (center s_tmp__)))
 (= (center s_tmp___) ?x99)))
(assert
 (let ((?x133 (center s_tmp_)))
 (= ?x133 (center s_tmp))))
(assert
 (let ((?x136 (right s_tmp_)))
 (= ?x136 (right s_tmp))))
(assert
 (let ((?x96 (left s_tmp_)))
 (let ((?x129 (left s_tmp__)))
 (= ?x129 ?x96))))
(assert
 (let ((?x136 (right s_tmp_)))
 (let ((?x140 (right s_tmp__)))
 (= ?x140 ?x136))))
(assert
 (= c__ c!1))
(assert
 (let ((?x73 (left s_)))
 (let ((?x229 (left s__)))
 (let (($x271 (= ?x229 ?x73)))
 (let ((?x76 (right s_)))
 (let (($x235 ((_ is stack ) ?x76)))
 (let (($x238 (= c_ right-to-left)))
 (let (($x248 (and $x238 $x235)))
 (let ((?x78 (center s_)))
 (let (($x249 ((_ is stack ) ?x78)))
 (let (($x250 (= c_ center-to-right)))
 (let (($x230 (and $x250 $x249)))
 (let (($x231 (= c_ center-to-left)))
 (let (($x232 (and $x231 $x249)))
 (let (($x280 (ite $x232 (= ?x229 (stack (top ?x78) ?x73)) (ite $x230 $x271 (ite $x248 (= ?x229 (stack (top ?x76) ?x73)) $x271)))))
 (let (($x258 (= ?x229 (rest ?x73))))
 (let (($x245 ((_ is stack ) ?x73)))
 (let (($x246 (= c_ left-to-right)))
 (let (($x247 (and $x246 $x245)))
 (let (($x254 (= c_ left-to-center)))
 (let (($x255 (and $x254 $x245)))
 (ite $x255 $x258 (ite $x247 $x258 $x280)))))))))))))))))))))))
(assert
 (let ((?x76 (right s_)))
 (let ((?x252 (right s__)))
 (let (($x267 (= ?x252 ?x76)))
 (let (($x264 (= ?x252 (rest ?x76))))
 (let (($x235 ((_ is stack ) ?x76)))
 (let (($x236 (= c_ right-to-center)))
 (let (($x237 (and $x236 $x235)))
 (let (($x238 (= c_ right-to-left)))
 (let (($x248 (and $x238 $x235)))
 (let ((?x78 (center s_)))
 (let (($x249 ((_ is stack ) ?x78)))
 (let (($x250 (= c_ center-to-right)))
 (let (($x230 (and $x250 $x249)))
 (let (($x277 (ite $x230 (= ?x252 (stack (top ?x78) ?x76)) (ite $x248 $x264 (ite $x237 $x264 $x267)))))
 (let (($x231 (= c_ center-to-left)))
 (let (($x232 (and $x231 $x249)))
 (let ((?x73 (left s_)))
 (let (($x245 ((_ is stack ) ?x73)))
 (let (($x246 (= c_ left-to-right)))
 (let (($x247 (and $x246 $x245)))
 (let (($x254 (= c_ left-to-center)))
 (let (($x255 (and $x254 $x245)))
 (ite $x255 (= ?x252 (stack (top ?x73) ?x76)) (ite $x247 $x267 (ite $x232 $x267 $x277))))))))))))))))))))))))))
(assert
 (let ((?x78 (center s_)))
 (let ((?x240 (center s__)))
 (let (($x269 (= ?x240 ?x78)))
 (let ((?x76 (right s_)))
 (let (($x235 ((_ is stack ) ?x76)))
 (let (($x236 (= c_ right-to-center)))
 (let (($x237 (and $x236 $x235)))
 (let (($x238 (= c_ right-to-left)))
 (let (($x248 (and $x238 $x235)))
 (let (($x261 (= ?x240 (rest ?x78))))
 (let (($x249 ((_ is stack ) ?x78)))
 (let (($x250 (= c_ center-to-right)))
 (let (($x230 (and $x250 $x249)))
 (let (($x276 (ite $x230 $x261 (ite $x248 $x269 (ite $x237 (= ?x240 (stack (top ?x76) ?x78)) $x269)))))
 (let (($x231 (= c_ center-to-left)))
 (let (($x232 (and $x231 $x249)))
 (let ((?x73 (left s_)))
 (let (($x245 ((_ is stack ) ?x73)))
 (let (($x246 (= c_ left-to-right)))
 (let (($x247 (and $x246 $x245)))
 (let (($x254 (= c_ left-to-center)))
 (let (($x255 (and $x254 $x245)))
 (ite $x255 $x269 (ite $x247 (= ?x240 (stack (top ?x73) ?x78)) (ite $x232 $x261 $x276))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x229 (left s__)))
 (let ((?x143 (left s___)))
 (let (($x399 (= ?x143 ?x229)))
 (let ((?x252 (right s__)))
 (let ((?x366 (top ?x252)))
 (let ((?x367 (stack ?x366 ?x229)))
 (let (($x393 (= ?x143 ?x367)))
 (let (($x369 ((_ is stack ) ?x252)))
 (let (($x372 (= c__ right-to-left)))
 (let (($x373 (and $x372 $x369)))
 (let ((?x240 (center s__)))
 (let (($x374 ((_ is stack ) ?x240)))
 (let (($x375 (= c__ center-to-right)))
 (let (($x376 (and $x375 $x374)))
 (let ((?x362 (top ?x240)))
 (let ((?x363 (stack ?x362 ?x229)))
 (let (($x390 (= ?x143 ?x363)))
 (let (($x377 (= c__ center-to-left)))
 (let (($x378 (and $x377 $x374)))
 (let ((?x145 (rest ?x229)))
 (let (($x386 (= ?x143 ?x145)))
 (let (($x379 ((_ is stack ) ?x229)))
 (let (($x380 (= c__ left-to-right)))
 (let (($x381 (and $x380 $x379)))
 (let (($x382 (= c__ left-to-center)))
 (let (($x383 (and $x382 $x379)))
 (ite $x383 $x386 (ite $x381 $x386 (ite $x378 $x390 (ite $x376 $x399 (ite $x373 $x393 $x399))))))))))))))))))))))))))))))))
(assert
 (let ((?x252 (right s__)))
 (let ((?x146 (right s___)))
 (let (($x395 (= ?x146 ?x252)))
 (let ((?x365 (rest ?x252)))
 (let (($x392 (= ?x146 ?x365)))
 (let (($x369 ((_ is stack ) ?x252)))
 (let (($x370 (= c__ right-to-center)))
 (let (($x371 (and $x370 $x369)))
 (let (($x372 (= c__ right-to-left)))
 (let (($x373 (and $x372 $x369)))
 (let ((?x240 (center s__)))
 (let ((?x362 (top ?x240)))
 (let ((?x364 (stack ?x362 ?x252)))
 (let (($x391 (= ?x146 ?x364)))
 (let (($x374 ((_ is stack ) ?x240)))
 (let (($x375 (= c__ center-to-right)))
 (let (($x376 (and $x375 $x374)))
 (let (($x377 (= c__ center-to-left)))
 (let (($x378 (and $x377 $x374)))
 (let ((?x229 (left s__)))
 (let (($x379 ((_ is stack ) ?x229)))
 (let (($x380 (= c__ left-to-right)))
 (let (($x381 (and $x380 $x379)))
 (let (($x412 (ite $x381 $x395 (ite $x378 $x395 (ite $x376 $x391 (ite $x373 $x392 (ite $x371 $x392 $x395)))))))
 (let ((?x223 (top ?x229)))
 (let ((?x358 (stack ?x223 ?x252)))
 (let (($x387 (= ?x146 ?x358)))
 (let (($x382 (= c__ left-to-center)))
 (let (($x383 (and $x382 $x379)))
 (ite $x383 $x387 $x412)))))))))))))))))))))))))))))))
(assert
 (let ((?x240 (center s__)))
 (let ((?x359 (center s___)))
 (let (($x397 (= ?x359 ?x240)))
 (let ((?x252 (right s__)))
 (let ((?x366 (top ?x252)))
 (let ((?x368 (stack ?x366 ?x240)))
 (let (($x394 (= ?x359 ?x368)))
 (let (($x369 ((_ is stack ) ?x252)))
 (let (($x370 (= c__ right-to-center)))
 (let (($x371 (and $x370 $x369)))
 (let (($x372 (= c__ right-to-left)))
 (let (($x373 (and $x372 $x369)))
 (let ((?x361 (rest ?x240)))
 (let (($x389 (= ?x359 ?x361)))
 (let (($x374 ((_ is stack ) ?x240)))
 (let (($x375 (= c__ center-to-right)))
 (let (($x376 (and $x375 $x374)))
 (let (($x377 (= c__ center-to-left)))
 (let (($x378 (and $x377 $x374)))
 (let ((?x229 (left s__)))
 (let ((?x223 (top ?x229)))
 (let ((?x360 (stack ?x223 ?x240)))
 (let (($x388 (= ?x359 ?x360)))
 (let (($x379 ((_ is stack ) ?x229)))
 (let (($x380 (= c__ left-to-right)))
 (let (($x381 (and $x380 $x379)))
 (let (($x411 (ite $x381 $x388 (ite $x378 $x389 (ite $x376 $x389 (ite $x373 $x397 (ite $x371 $x394 $x397)))))))
 (let (($x382 (= c__ left-to-center)))
 (let (($x383 (and $x382 $x379)))
 (ite $x383 $x397 $x411)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x143 (left s___)))
 (let ((?x330 (left s____)))
 (let (($x538 (= ?x330 ?x143)))
 (let ((?x146 (right s___)))
 (let ((?x505 (top ?x146)))
 (let ((?x506 (stack ?x505 ?x143)))
 (let (($x532 (= ?x330 ?x506)))
 (let (($x508 ((_ is stack ) ?x146)))
 (let (($x511 (= c___ right-to-left)))
 (let (($x512 (and $x511 $x508)))
 (let ((?x359 (center s___)))
 (let (($x513 ((_ is stack ) ?x359)))
 (let (($x514 (= c___ center-to-right)))
 (let (($x515 (and $x514 $x513)))
 (let ((?x501 (top ?x359)))
 (let ((?x502 (stack ?x501 ?x143)))
 (let (($x529 (= ?x330 ?x502)))
 (let (($x516 (= c___ center-to-left)))
 (let (($x517 (and $x516 $x513)))
 (let ((?x331 (rest ?x143)))
 (let (($x525 (= ?x330 ?x331)))
 (let (($x518 ((_ is stack ) ?x143)))
 (let (($x519 (= c___ left-to-right)))
 (let (($x520 (and $x519 $x518)))
 (let (($x521 (= c___ left-to-center)))
 (let (($x522 (and $x521 $x518)))
 (ite $x522 $x525 (ite $x520 $x525 (ite $x517 $x529 (ite $x515 $x538 (ite $x512 $x532 $x538))))))))))))))))))))))))))))))))
(assert
 (let ((?x146 (right s___)))
 (let ((?x357 (right s____)))
 (let (($x534 (= ?x357 ?x146)))
 (let ((?x504 (rest ?x146)))
 (let (($x531 (= ?x357 ?x504)))
 (let (($x508 ((_ is stack ) ?x146)))
 (let (($x509 (= c___ right-to-center)))
 (let (($x510 (and $x509 $x508)))
 (let (($x511 (= c___ right-to-left)))
 (let (($x512 (and $x511 $x508)))
 (let ((?x359 (center s___)))
 (let ((?x501 (top ?x359)))
 (let ((?x503 (stack ?x501 ?x146)))
 (let (($x530 (= ?x357 ?x503)))
 (let (($x513 ((_ is stack ) ?x359)))
 (let (($x514 (= c___ center-to-right)))
 (let (($x515 (and $x514 $x513)))
 (let (($x516 (= c___ center-to-left)))
 (let (($x517 (and $x516 $x513)))
 (let ((?x143 (left s___)))
 (let (($x518 ((_ is stack ) ?x143)))
 (let (($x519 (= c___ left-to-right)))
 (let (($x520 (and $x519 $x518)))
 (let (($x551 (ite $x520 $x534 (ite $x517 $x534 (ite $x515 $x530 (ite $x512 $x531 (ite $x510 $x531 $x534)))))))
 (let ((?x496 (top ?x143)))
 (let ((?x497 (stack ?x496 ?x146)))
 (let (($x526 (= ?x357 ?x497)))
 (let (($x521 (= c___ left-to-center)))
 (let (($x522 (and $x521 $x518)))
 (ite $x522 $x526 $x551)))))))))))))))))))))))))))))))
(assert
 (let ((?x359 (center s___)))
 (let ((?x498 (center s____)))
 (let (($x536 (= ?x498 ?x359)))
 (let ((?x146 (right s___)))
 (let ((?x505 (top ?x146)))
 (let ((?x507 (stack ?x505 ?x359)))
 (let (($x533 (= ?x498 ?x507)))
 (let (($x508 ((_ is stack ) ?x146)))
 (let (($x509 (= c___ right-to-center)))
 (let (($x510 (and $x509 $x508)))
 (let (($x511 (= c___ right-to-left)))
 (let (($x512 (and $x511 $x508)))
 (let ((?x500 (rest ?x359)))
 (let (($x528 (= ?x498 ?x500)))
 (let (($x513 ((_ is stack ) ?x359)))
 (let (($x514 (= c___ center-to-right)))
 (let (($x515 (and $x514 $x513)))
 (let (($x516 (= c___ center-to-left)))
 (let (($x517 (and $x516 $x513)))
 (let ((?x143 (left s___)))
 (let ((?x496 (top ?x143)))
 (let ((?x499 (stack ?x496 ?x359)))
 (let (($x527 (= ?x498 ?x499)))
 (let (($x518 ((_ is stack ) ?x143)))
 (let (($x519 (= c___ left-to-right)))
 (let (($x520 (and $x519 $x518)))
 (let (($x550 (ite $x520 $x527 (ite $x517 $x528 (ite $x515 $x528 (ite $x512 $x536 (ite $x510 $x533 $x536)))))))
 (let (($x521 (= c___ left-to-center)))
 (let (($x522 (and $x521 $x518)))
 (ite $x522 $x536 $x550)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x330 (left s____)))
 (let ((?x415 (left s_____)))
 (let (($x676 (= ?x415 ?x330)))
 (let ((?x357 (right s____)))
 (let ((?x643 (top ?x357)))
 (let ((?x644 (stack ?x643 ?x330)))
 (let (($x670 (= ?x415 ?x644)))
 (let (($x646 ((_ is stack ) ?x357)))
 (let (($x649 (= c____ right-to-left)))
 (let (($x650 (and $x649 $x646)))
 (let ((?x498 (center s____)))
 (let (($x651 ((_ is stack ) ?x498)))
 (let (($x652 (= c____ center-to-right)))
 (let (($x653 (and $x652 $x651)))
 (let ((?x639 (top ?x498)))
 (let ((?x640 (stack ?x639 ?x330)))
 (let (($x667 (= ?x415 ?x640)))
 (let (($x654 (= c____ center-to-left)))
 (let (($x655 (and $x654 $x651)))
 (let ((?x448 (rest ?x330)))
 (let (($x663 (= ?x415 ?x448)))
 (let (($x656 ((_ is stack ) ?x330)))
 (let (($x657 (= c____ left-to-right)))
 (let (($x658 (and $x657 $x656)))
 (let (($x659 (= c____ left-to-center)))
 (let (($x660 (and $x659 $x656)))
 (ite $x660 $x663 (ite $x658 $x663 (ite $x655 $x667 (ite $x653 $x676 (ite $x650 $x670 $x676))))))))))))))))))))))))))))))))
(assert
 (let ((?x357 (right s____)))
 (let ((?x449 (right s_____)))
 (let (($x672 (= ?x449 ?x357)))
 (let ((?x642 (rest ?x357)))
 (let (($x669 (= ?x449 ?x642)))
 (let (($x646 ((_ is stack ) ?x357)))
 (let (($x647 (= c____ right-to-center)))
 (let (($x648 (and $x647 $x646)))
 (let (($x649 (= c____ right-to-left)))
 (let (($x650 (and $x649 $x646)))
 (let ((?x498 (center s____)))
 (let ((?x639 (top ?x498)))
 (let ((?x641 (stack ?x639 ?x357)))
 (let (($x668 (= ?x449 ?x641)))
 (let (($x651 ((_ is stack ) ?x498)))
 (let (($x652 (= c____ center-to-right)))
 (let (($x653 (and $x652 $x651)))
 (let (($x654 (= c____ center-to-left)))
 (let (($x655 (and $x654 $x651)))
 (let ((?x330 (left s____)))
 (let (($x656 ((_ is stack ) ?x330)))
 (let (($x657 (= c____ left-to-right)))
 (let (($x658 (and $x657 $x656)))
 (let (($x689 (ite $x658 $x672 (ite $x655 $x672 (ite $x653 $x668 (ite $x650 $x669 (ite $x648 $x669 $x672)))))))
 (let ((?x495 (top ?x330)))
 (let ((?x635 (stack ?x495 ?x357)))
 (let (($x664 (= ?x449 ?x635)))
 (let (($x659 (= c____ left-to-center)))
 (let (($x660 (and $x659 $x656)))
 (ite $x660 $x664 $x689)))))))))))))))))))))))))))))))
(assert
 (let ((?x498 (center s____)))
 (let ((?x636 (center s_____)))
 (let (($x674 (= ?x636 ?x498)))
 (let ((?x357 (right s____)))
 (let ((?x643 (top ?x357)))
 (let ((?x645 (stack ?x643 ?x498)))
 (let (($x671 (= ?x636 ?x645)))
 (let (($x646 ((_ is stack ) ?x357)))
 (let (($x647 (= c____ right-to-center)))
 (let (($x648 (and $x647 $x646)))
 (let (($x649 (= c____ right-to-left)))
 (let (($x650 (and $x649 $x646)))
 (let ((?x638 (rest ?x498)))
 (let (($x666 (= ?x636 ?x638)))
 (let (($x651 ((_ is stack ) ?x498)))
 (let (($x652 (= c____ center-to-right)))
 (let (($x653 (and $x652 $x651)))
 (let (($x654 (= c____ center-to-left)))
 (let (($x655 (and $x654 $x651)))
 (let ((?x330 (left s____)))
 (let ((?x495 (top ?x330)))
 (let ((?x637 (stack ?x495 ?x498)))
 (let (($x665 (= ?x636 ?x637)))
 (let (($x656 ((_ is stack ) ?x330)))
 (let (($x657 (= c____ left-to-right)))
 (let (($x658 (and $x657 $x656)))
 (let (($x688 (ite $x658 $x665 (ite $x655 $x666 (ite $x653 $x666 (ite $x650 $x674 (ite $x648 $x671 $x674)))))))
 (let (($x659 (= c____ left-to-center)))
 (let (($x660 (and $x659 $x656)))
 (ite $x660 $x674 $x688)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x415 (left s_____)))
 (let ((?x554 (left s______)))
 (let (($x814 (= ?x554 ?x415)))
 (let ((?x449 (right s_____)))
 (let ((?x781 (top ?x449)))
 (let ((?x782 (stack ?x781 ?x415)))
 (let (($x808 (= ?x554 ?x782)))
 (let (($x784 ((_ is stack ) ?x449)))
 (let (($x787 (= c_____ right-to-left)))
 (let (($x788 (and $x787 $x784)))
 (let ((?x636 (center s_____)))
 (let (($x789 ((_ is stack ) ?x636)))
 (let (($x790 (= c_____ center-to-right)))
 (let (($x791 (and $x790 $x789)))
 (let ((?x777 (top ?x636)))
 (let ((?x778 (stack ?x777 ?x415)))
 (let (($x805 (= ?x554 ?x778)))
 (let (($x792 (= c_____ center-to-left)))
 (let (($x793 (and $x792 $x789)))
 (let ((?x587 (rest ?x415)))
 (let (($x801 (= ?x554 ?x587)))
 (let (($x794 ((_ is stack ) ?x415)))
 (let (($x795 (= c_____ left-to-right)))
 (let (($x796 (and $x795 $x794)))
 (let (($x797 (= c_____ left-to-center)))
 (let (($x798 (and $x797 $x794)))
 (ite $x798 $x801 (ite $x796 $x801 (ite $x793 $x805 (ite $x791 $x814 (ite $x788 $x808 $x814))))))))))))))))))))))))))))))))
(assert
 (let ((?x449 (right s_____)))
 (let ((?x588 (right s______)))
 (let (($x810 (= ?x588 ?x449)))
 (let ((?x780 (rest ?x449)))
 (let (($x807 (= ?x588 ?x780)))
 (let (($x784 ((_ is stack ) ?x449)))
 (let (($x785 (= c_____ right-to-center)))
 (let (($x786 (and $x785 $x784)))
 (let (($x787 (= c_____ right-to-left)))
 (let (($x788 (and $x787 $x784)))
 (let ((?x636 (center s_____)))
 (let ((?x777 (top ?x636)))
 (let ((?x779 (stack ?x777 ?x449)))
 (let (($x806 (= ?x588 ?x779)))
 (let (($x789 ((_ is stack ) ?x636)))
 (let (($x790 (= c_____ center-to-right)))
 (let (($x791 (and $x790 $x789)))
 (let (($x792 (= c_____ center-to-left)))
 (let (($x793 (and $x792 $x789)))
 (let ((?x415 (left s_____)))
 (let (($x794 ((_ is stack ) ?x415)))
 (let (($x795 (= c_____ left-to-right)))
 (let (($x796 (and $x795 $x794)))
 (let (($x827 (ite $x796 $x810 (ite $x793 $x810 (ite $x791 $x806 (ite $x788 $x807 (ite $x786 $x807 $x810)))))))
 (let ((?x634 (top ?x415)))
 (let ((?x773 (stack ?x634 ?x449)))
 (let (($x802 (= ?x588 ?x773)))
 (let (($x797 (= c_____ left-to-center)))
 (let (($x798 (and $x797 $x794)))
 (ite $x798 $x802 $x827)))))))))))))))))))))))))))))))
(assert
 (let ((?x636 (center s_____)))
 (let ((?x774 (center s______)))
 (let (($x812 (= ?x774 ?x636)))
 (let ((?x449 (right s_____)))
 (let ((?x781 (top ?x449)))
 (let ((?x783 (stack ?x781 ?x636)))
 (let (($x809 (= ?x774 ?x783)))
 (let (($x784 ((_ is stack ) ?x449)))
 (let (($x785 (= c_____ right-to-center)))
 (let (($x786 (and $x785 $x784)))
 (let (($x787 (= c_____ right-to-left)))
 (let (($x788 (and $x787 $x784)))
 (let ((?x776 (rest ?x636)))
 (let (($x804 (= ?x774 ?x776)))
 (let (($x789 ((_ is stack ) ?x636)))
 (let (($x790 (= c_____ center-to-right)))
 (let (($x791 (and $x790 $x789)))
 (let (($x792 (= c_____ center-to-left)))
 (let (($x793 (and $x792 $x789)))
 (let ((?x415 (left s_____)))
 (let ((?x634 (top ?x415)))
 (let ((?x775 (stack ?x634 ?x636)))
 (let (($x803 (= ?x774 ?x775)))
 (let (($x794 ((_ is stack ) ?x415)))
 (let (($x795 (= c_____ left-to-right)))
 (let (($x796 (and $x795 $x794)))
 (let (($x826 (ite $x796 $x803 (ite $x793 $x804 (ite $x791 $x804 (ite $x788 $x812 (ite $x786 $x809 $x812)))))))
 (let (($x797 (= c_____ left-to-center)))
 (let (($x798 (and $x797 $x794)))
 (ite $x798 $x812 $x826)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x554 (left s______)))
 (let ((?x692 (left s_______)))
 (let (($x952 (= ?x692 ?x554)))
 (let ((?x588 (right s______)))
 (let ((?x919 (top ?x588)))
 (let ((?x920 (stack ?x919 ?x554)))
 (let (($x946 (= ?x692 ?x920)))
 (let (($x922 ((_ is stack ) ?x588)))
 (let (($x925 (= c______ right-to-left)))
 (let (($x926 (and $x925 $x922)))
 (let ((?x774 (center s______)))
 (let (($x927 ((_ is stack ) ?x774)))
 (let (($x928 (= c______ center-to-right)))
 (let (($x929 (and $x928 $x927)))
 (let ((?x915 (top ?x774)))
 (let ((?x916 (stack ?x915 ?x554)))
 (let (($x943 (= ?x692 ?x916)))
 (let (($x930 (= c______ center-to-left)))
 (let (($x931 (and $x930 $x927)))
 (let ((?x725 (rest ?x554)))
 (let (($x939 (= ?x692 ?x725)))
 (let (($x932 ((_ is stack ) ?x554)))
 (let (($x933 (= c______ left-to-right)))
 (let (($x934 (and $x933 $x932)))
 (let (($x935 (= c______ left-to-center)))
 (let (($x936 (and $x935 $x932)))
 (ite $x936 $x939 (ite $x934 $x939 (ite $x931 $x943 (ite $x929 $x952 (ite $x926 $x946 $x952))))))))))))))))))))))))))))))))
(assert
 (let ((?x588 (right s______)))
 (let ((?x726 (right s_______)))
 (let (($x948 (= ?x726 ?x588)))
 (let ((?x918 (rest ?x588)))
 (let (($x945 (= ?x726 ?x918)))
 (let (($x922 ((_ is stack ) ?x588)))
 (let (($x923 (= c______ right-to-center)))
 (let (($x924 (and $x923 $x922)))
 (let (($x925 (= c______ right-to-left)))
 (let (($x926 (and $x925 $x922)))
 (let ((?x774 (center s______)))
 (let ((?x915 (top ?x774)))
 (let ((?x917 (stack ?x915 ?x588)))
 (let (($x944 (= ?x726 ?x917)))
 (let (($x927 ((_ is stack ) ?x774)))
 (let (($x928 (= c______ center-to-right)))
 (let (($x929 (and $x928 $x927)))
 (let (($x930 (= c______ center-to-left)))
 (let (($x931 (and $x930 $x927)))
 (let ((?x554 (left s______)))
 (let (($x932 ((_ is stack ) ?x554)))
 (let (($x933 (= c______ left-to-right)))
 (let (($x934 (and $x933 $x932)))
 (let (($x965 (ite $x934 $x948 (ite $x931 $x948 (ite $x929 $x944 (ite $x926 $x945 (ite $x924 $x945 $x948)))))))
 (let ((?x772 (top ?x554)))
 (let ((?x911 (stack ?x772 ?x588)))
 (let (($x940 (= ?x726 ?x911)))
 (let (($x935 (= c______ left-to-center)))
 (let (($x936 (and $x935 $x932)))
 (ite $x936 $x940 $x965)))))))))))))))))))))))))))))))
(assert
 (let ((?x774 (center s______)))
 (let ((?x912 (center s_______)))
 (let (($x950 (= ?x912 ?x774)))
 (let ((?x588 (right s______)))
 (let ((?x919 (top ?x588)))
 (let ((?x921 (stack ?x919 ?x774)))
 (let (($x947 (= ?x912 ?x921)))
 (let (($x922 ((_ is stack ) ?x588)))
 (let (($x923 (= c______ right-to-center)))
 (let (($x924 (and $x923 $x922)))
 (let (($x925 (= c______ right-to-left)))
 (let (($x926 (and $x925 $x922)))
 (let ((?x914 (rest ?x774)))
 (let (($x942 (= ?x912 ?x914)))
 (let (($x927 ((_ is stack ) ?x774)))
 (let (($x928 (= c______ center-to-right)))
 (let (($x929 (and $x928 $x927)))
 (let (($x930 (= c______ center-to-left)))
 (let (($x931 (and $x930 $x927)))
 (let ((?x554 (left s______)))
 (let ((?x772 (top ?x554)))
 (let ((?x913 (stack ?x772 ?x774)))
 (let (($x941 (= ?x912 ?x913)))
 (let (($x932 ((_ is stack ) ?x554)))
 (let (($x933 (= c______ left-to-right)))
 (let (($x934 (and $x933 $x932)))
 (let (($x964 (ite $x934 $x941 (ite $x931 $x942 (ite $x929 $x942 (ite $x926 $x950 (ite $x924 $x947 $x950)))))))
 (let (($x935 (= c______ left-to-center)))
 (let (($x936 (and $x935 $x932)))
 (ite $x936 $x950 $x964)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x692 (left s_______)))
 (let ((?x830 (left s________)))
 (let (($x1090 (= ?x830 ?x692)))
 (let ((?x726 (right s_______)))
 (let ((?x1057 (top ?x726)))
 (let ((?x1058 (stack ?x1057 ?x692)))
 (let (($x1084 (= ?x830 ?x1058)))
 (let (($x1060 ((_ is stack ) ?x726)))
 (let (($x1063 (= c_______ right-to-left)))
 (let (($x1064 (and $x1063 $x1060)))
 (let ((?x912 (center s_______)))
 (let (($x1065 ((_ is stack ) ?x912)))
 (let (($x1066 (= c_______ center-to-right)))
 (let (($x1067 (and $x1066 $x1065)))
 (let ((?x1053 (top ?x912)))
 (let ((?x1054 (stack ?x1053 ?x692)))
 (let (($x1081 (= ?x830 ?x1054)))
 (let (($x1068 (= c_______ center-to-left)))
 (let (($x1069 (and $x1068 $x1065)))
 (let ((?x863 (rest ?x692)))
 (let (($x1077 (= ?x830 ?x863)))
 (let (($x1070 ((_ is stack ) ?x692)))
 (let (($x1071 (= c_______ left-to-right)))
 (let (($x1072 (and $x1071 $x1070)))
 (let (($x1073 (= c_______ left-to-center)))
 (let (($x1074 (and $x1073 $x1070)))
 (ite $x1074 $x1077 (ite $x1072 $x1077 (ite $x1069 $x1081 (ite $x1067 $x1090 (ite $x1064 $x1084 $x1090))))))))))))))))))))))))))))))))
(assert
 (let ((?x726 (right s_______)))
 (let ((?x864 (right s________)))
 (let (($x1086 (= ?x864 ?x726)))
 (let ((?x1056 (rest ?x726)))
 (let (($x1083 (= ?x864 ?x1056)))
 (let (($x1060 ((_ is stack ) ?x726)))
 (let (($x1061 (= c_______ right-to-center)))
 (let (($x1062 (and $x1061 $x1060)))
 (let (($x1063 (= c_______ right-to-left)))
 (let (($x1064 (and $x1063 $x1060)))
 (let ((?x912 (center s_______)))
 (let ((?x1053 (top ?x912)))
 (let ((?x1055 (stack ?x1053 ?x726)))
 (let (($x1082 (= ?x864 ?x1055)))
 (let (($x1065 ((_ is stack ) ?x912)))
 (let (($x1066 (= c_______ center-to-right)))
 (let (($x1067 (and $x1066 $x1065)))
 (let (($x1068 (= c_______ center-to-left)))
 (let (($x1069 (and $x1068 $x1065)))
 (let ((?x692 (left s_______)))
 (let (($x1070 ((_ is stack ) ?x692)))
 (let (($x1071 (= c_______ left-to-right)))
 (let (($x1072 (and $x1071 $x1070)))
 (let (($x1103 (ite $x1072 $x1086 (ite $x1069 $x1086 (ite $x1067 $x1082 (ite $x1064 $x1083 (ite $x1062 $x1083 $x1086)))))))
 (let ((?x910 (top ?x692)))
 (let ((?x1049 (stack ?x910 ?x726)))
 (let (($x1078 (= ?x864 ?x1049)))
 (let (($x1073 (= c_______ left-to-center)))
 (let (($x1074 (and $x1073 $x1070)))
 (ite $x1074 $x1078 $x1103)))))))))))))))))))))))))))))))
(assert
 (let ((?x912 (center s_______)))
 (let ((?x1050 (center s________)))
 (let (($x1088 (= ?x1050 ?x912)))
 (let ((?x726 (right s_______)))
 (let ((?x1057 (top ?x726)))
 (let ((?x1059 (stack ?x1057 ?x912)))
 (let (($x1085 (= ?x1050 ?x1059)))
 (let (($x1060 ((_ is stack ) ?x726)))
 (let (($x1061 (= c_______ right-to-center)))
 (let (($x1062 (and $x1061 $x1060)))
 (let (($x1063 (= c_______ right-to-left)))
 (let (($x1064 (and $x1063 $x1060)))
 (let ((?x1052 (rest ?x912)))
 (let (($x1080 (= ?x1050 ?x1052)))
 (let (($x1065 ((_ is stack ) ?x912)))
 (let (($x1066 (= c_______ center-to-right)))
 (let (($x1067 (and $x1066 $x1065)))
 (let (($x1068 (= c_______ center-to-left)))
 (let (($x1069 (and $x1068 $x1065)))
 (let ((?x692 (left s_______)))
 (let ((?x910 (top ?x692)))
 (let ((?x1051 (stack ?x910 ?x912)))
 (let (($x1079 (= ?x1050 ?x1051)))
 (let (($x1070 ((_ is stack ) ?x692)))
 (let (($x1071 (= c_______ left-to-right)))
 (let (($x1072 (and $x1071 $x1070)))
 (let (($x1102 (ite $x1072 $x1079 (ite $x1069 $x1080 (ite $x1067 $x1080 (ite $x1064 $x1088 (ite $x1062 $x1085 $x1088)))))))
 (let (($x1073 (= c_______ left-to-center)))
 (let (($x1074 (and $x1073 $x1070)))
 (ite $x1074 $x1088 $x1102)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x830 (left s________)))
 (let ((?x968 (left s_________)))
 (let (($x1228 (= ?x968 ?x830)))
 (let ((?x864 (right s________)))
 (let ((?x1195 (top ?x864)))
 (let ((?x1196 (stack ?x1195 ?x830)))
 (let (($x1222 (= ?x968 ?x1196)))
 (let (($x1198 ((_ is stack ) ?x864)))
 (let (($x1201 (= c________ right-to-left)))
 (let (($x1202 (and $x1201 $x1198)))
 (let ((?x1050 (center s________)))
 (let (($x1203 ((_ is stack ) ?x1050)))
 (let (($x1204 (= c________ center-to-right)))
 (let (($x1205 (and $x1204 $x1203)))
 (let ((?x1191 (top ?x1050)))
 (let ((?x1192 (stack ?x1191 ?x830)))
 (let (($x1219 (= ?x968 ?x1192)))
 (let (($x1206 (= c________ center-to-left)))
 (let (($x1207 (and $x1206 $x1203)))
 (let ((?x1001 (rest ?x830)))
 (let (($x1215 (= ?x968 ?x1001)))
 (let (($x1208 ((_ is stack ) ?x830)))
 (let (($x1209 (= c________ left-to-right)))
 (let (($x1210 (and $x1209 $x1208)))
 (let (($x1211 (= c________ left-to-center)))
 (let (($x1212 (and $x1211 $x1208)))
 (ite $x1212 $x1215 (ite $x1210 $x1215 (ite $x1207 $x1219 (ite $x1205 $x1228 (ite $x1202 $x1222 $x1228))))))))))))))))))))))))))))))))
(assert
 (let ((?x864 (right s________)))
 (let ((?x1002 (right s_________)))
 (let (($x1224 (= ?x1002 ?x864)))
 (let ((?x1194 (rest ?x864)))
 (let (($x1221 (= ?x1002 ?x1194)))
 (let (($x1198 ((_ is stack ) ?x864)))
 (let (($x1199 (= c________ right-to-center)))
 (let (($x1200 (and $x1199 $x1198)))
 (let (($x1201 (= c________ right-to-left)))
 (let (($x1202 (and $x1201 $x1198)))
 (let ((?x1050 (center s________)))
 (let ((?x1191 (top ?x1050)))
 (let ((?x1193 (stack ?x1191 ?x864)))
 (let (($x1220 (= ?x1002 ?x1193)))
 (let (($x1203 ((_ is stack ) ?x1050)))
 (let (($x1204 (= c________ center-to-right)))
 (let (($x1205 (and $x1204 $x1203)))
 (let (($x1206 (= c________ center-to-left)))
 (let (($x1207 (and $x1206 $x1203)))
 (let ((?x830 (left s________)))
 (let (($x1208 ((_ is stack ) ?x830)))
 (let (($x1209 (= c________ left-to-right)))
 (let (($x1210 (and $x1209 $x1208)))
 (let (($x1241 (ite $x1210 $x1224 (ite $x1207 $x1224 (ite $x1205 $x1220 (ite $x1202 $x1221 (ite $x1200 $x1221 $x1224)))))))
 (let ((?x1048 (top ?x830)))
 (let ((?x1187 (stack ?x1048 ?x864)))
 (let (($x1216 (= ?x1002 ?x1187)))
 (let (($x1211 (= c________ left-to-center)))
 (let (($x1212 (and $x1211 $x1208)))
 (ite $x1212 $x1216 $x1241)))))))))))))))))))))))))))))))
(assert
 (let ((?x1050 (center s________)))
 (let ((?x1188 (center s_________)))
 (let (($x1226 (= ?x1188 ?x1050)))
 (let ((?x864 (right s________)))
 (let ((?x1195 (top ?x864)))
 (let ((?x1197 (stack ?x1195 ?x1050)))
 (let (($x1223 (= ?x1188 ?x1197)))
 (let (($x1198 ((_ is stack ) ?x864)))
 (let (($x1199 (= c________ right-to-center)))
 (let (($x1200 (and $x1199 $x1198)))
 (let (($x1201 (= c________ right-to-left)))
 (let (($x1202 (and $x1201 $x1198)))
 (let ((?x1190 (rest ?x1050)))
 (let (($x1218 (= ?x1188 ?x1190)))
 (let (($x1203 ((_ is stack ) ?x1050)))
 (let (($x1204 (= c________ center-to-right)))
 (let (($x1205 (and $x1204 $x1203)))
 (let (($x1206 (= c________ center-to-left)))
 (let (($x1207 (and $x1206 $x1203)))
 (let ((?x830 (left s________)))
 (let ((?x1048 (top ?x830)))
 (let ((?x1189 (stack ?x1048 ?x1050)))
 (let (($x1217 (= ?x1188 ?x1189)))
 (let (($x1208 ((_ is stack ) ?x830)))
 (let (($x1209 (= c________ left-to-right)))
 (let (($x1210 (and $x1209 $x1208)))
 (let (($x1240 (ite $x1210 $x1217 (ite $x1207 $x1218 (ite $x1205 $x1218 (ite $x1202 $x1226 (ite $x1200 $x1223 $x1226)))))))
 (let (($x1211 (= c________ left-to-center)))
 (let (($x1212 (and $x1211 $x1208)))
 (ite $x1212 $x1226 $x1240)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x968 (left s_________)))
 (let ((?x1106 (left s__________)))
 (let (($x1366 (= ?x1106 ?x968)))
 (let ((?x1002 (right s_________)))
 (let ((?x1333 (top ?x1002)))
 (let ((?x1334 (stack ?x1333 ?x968)))
 (let (($x1360 (= ?x1106 ?x1334)))
 (let (($x1336 ((_ is stack ) ?x1002)))
 (let (($x1339 (= c_________ right-to-left)))
 (let (($x1340 (and $x1339 $x1336)))
 (let ((?x1188 (center s_________)))
 (let (($x1341 ((_ is stack ) ?x1188)))
 (let (($x1342 (= c_________ center-to-right)))
 (let (($x1343 (and $x1342 $x1341)))
 (let ((?x1329 (top ?x1188)))
 (let ((?x1330 (stack ?x1329 ?x968)))
 (let (($x1357 (= ?x1106 ?x1330)))
 (let (($x1344 (= c_________ center-to-left)))
 (let (($x1345 (and $x1344 $x1341)))
 (let ((?x1139 (rest ?x968)))
 (let (($x1353 (= ?x1106 ?x1139)))
 (let (($x1346 ((_ is stack ) ?x968)))
 (let (($x1347 (= c_________ left-to-right)))
 (let (($x1348 (and $x1347 $x1346)))
 (let (($x1349 (= c_________ left-to-center)))
 (let (($x1350 (and $x1349 $x1346)))
 (ite $x1350 $x1353 (ite $x1348 $x1353 (ite $x1345 $x1357 (ite $x1343 $x1366 (ite $x1340 $x1360 $x1366))))))))))))))))))))))))))))))))
(assert
 (let ((?x1002 (right s_________)))
 (let ((?x1140 (right s__________)))
 (let (($x1362 (= ?x1140 ?x1002)))
 (let ((?x1332 (rest ?x1002)))
 (let (($x1359 (= ?x1140 ?x1332)))
 (let (($x1336 ((_ is stack ) ?x1002)))
 (let (($x1337 (= c_________ right-to-center)))
 (let (($x1338 (and $x1337 $x1336)))
 (let (($x1339 (= c_________ right-to-left)))
 (let (($x1340 (and $x1339 $x1336)))
 (let ((?x1188 (center s_________)))
 (let ((?x1329 (top ?x1188)))
 (let ((?x1331 (stack ?x1329 ?x1002)))
 (let (($x1358 (= ?x1140 ?x1331)))
 (let (($x1341 ((_ is stack ) ?x1188)))
 (let (($x1342 (= c_________ center-to-right)))
 (let (($x1343 (and $x1342 $x1341)))
 (let (($x1344 (= c_________ center-to-left)))
 (let (($x1345 (and $x1344 $x1341)))
 (let ((?x968 (left s_________)))
 (let (($x1346 ((_ is stack ) ?x968)))
 (let (($x1347 (= c_________ left-to-right)))
 (let (($x1348 (and $x1347 $x1346)))
 (let (($x1379 (ite $x1348 $x1362 (ite $x1345 $x1362 (ite $x1343 $x1358 (ite $x1340 $x1359 (ite $x1338 $x1359 $x1362)))))))
 (let ((?x1186 (top ?x968)))
 (let ((?x1325 (stack ?x1186 ?x1002)))
 (let (($x1354 (= ?x1140 ?x1325)))
 (let (($x1349 (= c_________ left-to-center)))
 (let (($x1350 (and $x1349 $x1346)))
 (ite $x1350 $x1354 $x1379)))))))))))))))))))))))))))))))
(assert
 (let ((?x1188 (center s_________)))
 (let ((?x1326 (center s__________)))
 (let (($x1364 (= ?x1326 ?x1188)))
 (let ((?x1002 (right s_________)))
 (let ((?x1333 (top ?x1002)))
 (let ((?x1335 (stack ?x1333 ?x1188)))
 (let (($x1361 (= ?x1326 ?x1335)))
 (let (($x1336 ((_ is stack ) ?x1002)))
 (let (($x1337 (= c_________ right-to-center)))
 (let (($x1338 (and $x1337 $x1336)))
 (let (($x1339 (= c_________ right-to-left)))
 (let (($x1340 (and $x1339 $x1336)))
 (let ((?x1328 (rest ?x1188)))
 (let (($x1356 (= ?x1326 ?x1328)))
 (let (($x1341 ((_ is stack ) ?x1188)))
 (let (($x1342 (= c_________ center-to-right)))
 (let (($x1343 (and $x1342 $x1341)))
 (let (($x1344 (= c_________ center-to-left)))
 (let (($x1345 (and $x1344 $x1341)))
 (let ((?x968 (left s_________)))
 (let ((?x1186 (top ?x968)))
 (let ((?x1327 (stack ?x1186 ?x1188)))
 (let (($x1355 (= ?x1326 ?x1327)))
 (let (($x1346 ((_ is stack ) ?x968)))
 (let (($x1347 (= c_________ left-to-right)))
 (let (($x1348 (and $x1347 $x1346)))
 (let (($x1378 (ite $x1348 $x1355 (ite $x1345 $x1356 (ite $x1343 $x1356 (ite $x1340 $x1364 (ite $x1338 $x1361 $x1364)))))))
 (let (($x1349 (= c_________ left-to-center)))
 (let (($x1350 (and $x1349 $x1346)))
 (ite $x1350 $x1364 $x1378)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1106 (left s__________)))
 (let ((?x1244 (left s___________)))
 (let (($x1504 (= ?x1244 ?x1106)))
 (let ((?x1140 (right s__________)))
 (let ((?x1471 (top ?x1140)))
 (let ((?x1472 (stack ?x1471 ?x1106)))
 (let (($x1498 (= ?x1244 ?x1472)))
 (let (($x1474 ((_ is stack ) ?x1140)))
 (let (($x1477 (= c__________ right-to-left)))
 (let (($x1478 (and $x1477 $x1474)))
 (let ((?x1326 (center s__________)))
 (let (($x1479 ((_ is stack ) ?x1326)))
 (let (($x1480 (= c__________ center-to-right)))
 (let (($x1481 (and $x1480 $x1479)))
 (let ((?x1467 (top ?x1326)))
 (let ((?x1468 (stack ?x1467 ?x1106)))
 (let (($x1495 (= ?x1244 ?x1468)))
 (let (($x1482 (= c__________ center-to-left)))
 (let (($x1483 (and $x1482 $x1479)))
 (let ((?x1277 (rest ?x1106)))
 (let (($x1491 (= ?x1244 ?x1277)))
 (let (($x1484 ((_ is stack ) ?x1106)))
 (let (($x1485 (= c__________ left-to-right)))
 (let (($x1486 (and $x1485 $x1484)))
 (let (($x1487 (= c__________ left-to-center)))
 (let (($x1488 (and $x1487 $x1484)))
 (ite $x1488 $x1491 (ite $x1486 $x1491 (ite $x1483 $x1495 (ite $x1481 $x1504 (ite $x1478 $x1498 $x1504))))))))))))))))))))))))))))))))
(assert
 (let ((?x1140 (right s__________)))
 (let ((?x1278 (right s___________)))
 (let (($x1500 (= ?x1278 ?x1140)))
 (let ((?x1470 (rest ?x1140)))
 (let (($x1497 (= ?x1278 ?x1470)))
 (let (($x1474 ((_ is stack ) ?x1140)))
 (let (($x1475 (= c__________ right-to-center)))
 (let (($x1476 (and $x1475 $x1474)))
 (let (($x1477 (= c__________ right-to-left)))
 (let (($x1478 (and $x1477 $x1474)))
 (let ((?x1326 (center s__________)))
 (let ((?x1467 (top ?x1326)))
 (let ((?x1469 (stack ?x1467 ?x1140)))
 (let (($x1496 (= ?x1278 ?x1469)))
 (let (($x1479 ((_ is stack ) ?x1326)))
 (let (($x1480 (= c__________ center-to-right)))
 (let (($x1481 (and $x1480 $x1479)))
 (let (($x1482 (= c__________ center-to-left)))
 (let (($x1483 (and $x1482 $x1479)))
 (let ((?x1106 (left s__________)))
 (let (($x1484 ((_ is stack ) ?x1106)))
 (let (($x1485 (= c__________ left-to-right)))
 (let (($x1486 (and $x1485 $x1484)))
 (let (($x1517 (ite $x1486 $x1500 (ite $x1483 $x1500 (ite $x1481 $x1496 (ite $x1478 $x1497 (ite $x1476 $x1497 $x1500)))))))
 (let ((?x1324 (top ?x1106)))
 (let ((?x1463 (stack ?x1324 ?x1140)))
 (let (($x1492 (= ?x1278 ?x1463)))
 (let (($x1487 (= c__________ left-to-center)))
 (let (($x1488 (and $x1487 $x1484)))
 (ite $x1488 $x1492 $x1517)))))))))))))))))))))))))))))))
(assert
 (let ((?x1326 (center s__________)))
 (let ((?x1464 (center s___________)))
 (let (($x1502 (= ?x1464 ?x1326)))
 (let ((?x1140 (right s__________)))
 (let ((?x1471 (top ?x1140)))
 (let ((?x1473 (stack ?x1471 ?x1326)))
 (let (($x1499 (= ?x1464 ?x1473)))
 (let (($x1474 ((_ is stack ) ?x1140)))
 (let (($x1475 (= c__________ right-to-center)))
 (let (($x1476 (and $x1475 $x1474)))
 (let (($x1477 (= c__________ right-to-left)))
 (let (($x1478 (and $x1477 $x1474)))
 (let ((?x1466 (rest ?x1326)))
 (let (($x1494 (= ?x1464 ?x1466)))
 (let (($x1479 ((_ is stack ) ?x1326)))
 (let (($x1480 (= c__________ center-to-right)))
 (let (($x1481 (and $x1480 $x1479)))
 (let (($x1482 (= c__________ center-to-left)))
 (let (($x1483 (and $x1482 $x1479)))
 (let ((?x1106 (left s__________)))
 (let ((?x1324 (top ?x1106)))
 (let ((?x1465 (stack ?x1324 ?x1326)))
 (let (($x1493 (= ?x1464 ?x1465)))
 (let (($x1484 ((_ is stack ) ?x1106)))
 (let (($x1485 (= c__________ left-to-right)))
 (let (($x1486 (and $x1485 $x1484)))
 (let (($x1516 (ite $x1486 $x1493 (ite $x1483 $x1494 (ite $x1481 $x1494 (ite $x1478 $x1502 (ite $x1476 $x1499 $x1502)))))))
 (let (($x1487 (= c__________ left-to-center)))
 (let (($x1488 (and $x1487 $x1484)))
 (ite $x1488 $x1502 $x1516)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1244 (left s___________)))
 (let ((?x1382 (left s____________)))
 (let (($x1642 (= ?x1382 ?x1244)))
 (let ((?x1278 (right s___________)))
 (let ((?x1609 (top ?x1278)))
 (let ((?x1610 (stack ?x1609 ?x1244)))
 (let (($x1636 (= ?x1382 ?x1610)))
 (let (($x1612 ((_ is stack ) ?x1278)))
 (let (($x1615 (= c___________ right-to-left)))
 (let (($x1616 (and $x1615 $x1612)))
 (let ((?x1464 (center s___________)))
 (let (($x1617 ((_ is stack ) ?x1464)))
 (let (($x1618 (= c___________ center-to-right)))
 (let (($x1619 (and $x1618 $x1617)))
 (let ((?x1605 (top ?x1464)))
 (let ((?x1606 (stack ?x1605 ?x1244)))
 (let (($x1633 (= ?x1382 ?x1606)))
 (let (($x1620 (= c___________ center-to-left)))
 (let (($x1621 (and $x1620 $x1617)))
 (let ((?x1415 (rest ?x1244)))
 (let (($x1629 (= ?x1382 ?x1415)))
 (let (($x1622 ((_ is stack ) ?x1244)))
 (let (($x1623 (= c___________ left-to-right)))
 (let (($x1624 (and $x1623 $x1622)))
 (let (($x1625 (= c___________ left-to-center)))
 (let (($x1626 (and $x1625 $x1622)))
 (ite $x1626 $x1629 (ite $x1624 $x1629 (ite $x1621 $x1633 (ite $x1619 $x1642 (ite $x1616 $x1636 $x1642))))))))))))))))))))))))))))))))
(assert
 (let ((?x1278 (right s___________)))
 (let ((?x1416 (right s____________)))
 (let (($x1638 (= ?x1416 ?x1278)))
 (let ((?x1608 (rest ?x1278)))
 (let (($x1635 (= ?x1416 ?x1608)))
 (let (($x1612 ((_ is stack ) ?x1278)))
 (let (($x1613 (= c___________ right-to-center)))
 (let (($x1614 (and $x1613 $x1612)))
 (let (($x1615 (= c___________ right-to-left)))
 (let (($x1616 (and $x1615 $x1612)))
 (let ((?x1464 (center s___________)))
 (let ((?x1605 (top ?x1464)))
 (let ((?x1607 (stack ?x1605 ?x1278)))
 (let (($x1634 (= ?x1416 ?x1607)))
 (let (($x1617 ((_ is stack ) ?x1464)))
 (let (($x1618 (= c___________ center-to-right)))
 (let (($x1619 (and $x1618 $x1617)))
 (let (($x1620 (= c___________ center-to-left)))
 (let (($x1621 (and $x1620 $x1617)))
 (let ((?x1244 (left s___________)))
 (let (($x1622 ((_ is stack ) ?x1244)))
 (let (($x1623 (= c___________ left-to-right)))
 (let (($x1624 (and $x1623 $x1622)))
 (let (($x1655 (ite $x1624 $x1638 (ite $x1621 $x1638 (ite $x1619 $x1634 (ite $x1616 $x1635 (ite $x1614 $x1635 $x1638)))))))
 (let ((?x1462 (top ?x1244)))
 (let ((?x1601 (stack ?x1462 ?x1278)))
 (let (($x1630 (= ?x1416 ?x1601)))
 (let (($x1625 (= c___________ left-to-center)))
 (let (($x1626 (and $x1625 $x1622)))
 (ite $x1626 $x1630 $x1655)))))))))))))))))))))))))))))))
(assert
 (let ((?x1464 (center s___________)))
 (let ((?x1602 (center s____________)))
 (let (($x1640 (= ?x1602 ?x1464)))
 (let ((?x1278 (right s___________)))
 (let ((?x1609 (top ?x1278)))
 (let ((?x1611 (stack ?x1609 ?x1464)))
 (let (($x1637 (= ?x1602 ?x1611)))
 (let (($x1612 ((_ is stack ) ?x1278)))
 (let (($x1613 (= c___________ right-to-center)))
 (let (($x1614 (and $x1613 $x1612)))
 (let (($x1615 (= c___________ right-to-left)))
 (let (($x1616 (and $x1615 $x1612)))
 (let ((?x1604 (rest ?x1464)))
 (let (($x1632 (= ?x1602 ?x1604)))
 (let (($x1617 ((_ is stack ) ?x1464)))
 (let (($x1618 (= c___________ center-to-right)))
 (let (($x1619 (and $x1618 $x1617)))
 (let (($x1620 (= c___________ center-to-left)))
 (let (($x1621 (and $x1620 $x1617)))
 (let ((?x1244 (left s___________)))
 (let ((?x1462 (top ?x1244)))
 (let ((?x1603 (stack ?x1462 ?x1464)))
 (let (($x1631 (= ?x1602 ?x1603)))
 (let (($x1622 ((_ is stack ) ?x1244)))
 (let (($x1623 (= c___________ left-to-right)))
 (let (($x1624 (and $x1623 $x1622)))
 (let (($x1654 (ite $x1624 $x1631 (ite $x1621 $x1632 (ite $x1619 $x1632 (ite $x1616 $x1640 (ite $x1614 $x1637 $x1640)))))))
 (let (($x1625 (= c___________ left-to-center)))
 (let (($x1626 (and $x1625 $x1622)))
 (ite $x1626 $x1640 $x1654)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1382 (left s____________)))
 (let ((?x1520 (left s_____________)))
 (let (($x1780 (= ?x1520 ?x1382)))
 (let ((?x1416 (right s____________)))
 (let ((?x1747 (top ?x1416)))
 (let ((?x1748 (stack ?x1747 ?x1382)))
 (let (($x1774 (= ?x1520 ?x1748)))
 (let (($x1750 ((_ is stack ) ?x1416)))
 (let (($x1753 (= c____________ right-to-left)))
 (let (($x1754 (and $x1753 $x1750)))
 (let ((?x1602 (center s____________)))
 (let (($x1755 ((_ is stack ) ?x1602)))
 (let (($x1756 (= c____________ center-to-right)))
 (let (($x1757 (and $x1756 $x1755)))
 (let ((?x1743 (top ?x1602)))
 (let ((?x1744 (stack ?x1743 ?x1382)))
 (let (($x1771 (= ?x1520 ?x1744)))
 (let (($x1758 (= c____________ center-to-left)))
 (let (($x1759 (and $x1758 $x1755)))
 (let ((?x1553 (rest ?x1382)))
 (let (($x1767 (= ?x1520 ?x1553)))
 (let (($x1760 ((_ is stack ) ?x1382)))
 (let (($x1761 (= c____________ left-to-right)))
 (let (($x1762 (and $x1761 $x1760)))
 (let (($x1763 (= c____________ left-to-center)))
 (let (($x1764 (and $x1763 $x1760)))
 (ite $x1764 $x1767 (ite $x1762 $x1767 (ite $x1759 $x1771 (ite $x1757 $x1780 (ite $x1754 $x1774 $x1780))))))))))))))))))))))))))))))))
(assert
 (let ((?x1416 (right s____________)))
 (let ((?x1554 (right s_____________)))
 (let (($x1776 (= ?x1554 ?x1416)))
 (let ((?x1746 (rest ?x1416)))
 (let (($x1773 (= ?x1554 ?x1746)))
 (let (($x1750 ((_ is stack ) ?x1416)))
 (let (($x1751 (= c____________ right-to-center)))
 (let (($x1752 (and $x1751 $x1750)))
 (let (($x1753 (= c____________ right-to-left)))
 (let (($x1754 (and $x1753 $x1750)))
 (let ((?x1602 (center s____________)))
 (let ((?x1743 (top ?x1602)))
 (let ((?x1745 (stack ?x1743 ?x1416)))
 (let (($x1772 (= ?x1554 ?x1745)))
 (let (($x1755 ((_ is stack ) ?x1602)))
 (let (($x1756 (= c____________ center-to-right)))
 (let (($x1757 (and $x1756 $x1755)))
 (let (($x1758 (= c____________ center-to-left)))
 (let (($x1759 (and $x1758 $x1755)))
 (let ((?x1382 (left s____________)))
 (let (($x1760 ((_ is stack ) ?x1382)))
 (let (($x1761 (= c____________ left-to-right)))
 (let (($x1762 (and $x1761 $x1760)))
 (let (($x1793 (ite $x1762 $x1776 (ite $x1759 $x1776 (ite $x1757 $x1772 (ite $x1754 $x1773 (ite $x1752 $x1773 $x1776)))))))
 (let ((?x1600 (top ?x1382)))
 (let ((?x1739 (stack ?x1600 ?x1416)))
 (let (($x1768 (= ?x1554 ?x1739)))
 (let (($x1763 (= c____________ left-to-center)))
 (let (($x1764 (and $x1763 $x1760)))
 (ite $x1764 $x1768 $x1793)))))))))))))))))))))))))))))))
(assert
 (let ((?x1602 (center s____________)))
 (let ((?x1740 (center s_____________)))
 (let (($x1778 (= ?x1740 ?x1602)))
 (let ((?x1416 (right s____________)))
 (let ((?x1747 (top ?x1416)))
 (let ((?x1749 (stack ?x1747 ?x1602)))
 (let (($x1775 (= ?x1740 ?x1749)))
 (let (($x1750 ((_ is stack ) ?x1416)))
 (let (($x1751 (= c____________ right-to-center)))
 (let (($x1752 (and $x1751 $x1750)))
 (let (($x1753 (= c____________ right-to-left)))
 (let (($x1754 (and $x1753 $x1750)))
 (let ((?x1742 (rest ?x1602)))
 (let (($x1770 (= ?x1740 ?x1742)))
 (let (($x1755 ((_ is stack ) ?x1602)))
 (let (($x1756 (= c____________ center-to-right)))
 (let (($x1757 (and $x1756 $x1755)))
 (let (($x1758 (= c____________ center-to-left)))
 (let (($x1759 (and $x1758 $x1755)))
 (let ((?x1382 (left s____________)))
 (let ((?x1600 (top ?x1382)))
 (let ((?x1741 (stack ?x1600 ?x1602)))
 (let (($x1769 (= ?x1740 ?x1741)))
 (let (($x1760 ((_ is stack ) ?x1382)))
 (let (($x1761 (= c____________ left-to-right)))
 (let (($x1762 (and $x1761 $x1760)))
 (let (($x1792 (ite $x1762 $x1769 (ite $x1759 $x1770 (ite $x1757 $x1770 (ite $x1754 $x1778 (ite $x1752 $x1775 $x1778)))))))
 (let (($x1763 (= c____________ left-to-center)))
 (let (($x1764 (and $x1763 $x1760)))
 (ite $x1764 $x1778 $x1792)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1520 (left s_____________)))
 (let ((?x1658 (left s______________)))
 (let (($x1918 (= ?x1658 ?x1520)))
 (let ((?x1554 (right s_____________)))
 (let ((?x1885 (top ?x1554)))
 (let ((?x1886 (stack ?x1885 ?x1520)))
 (let (($x1912 (= ?x1658 ?x1886)))
 (let (($x1888 ((_ is stack ) ?x1554)))
 (let (($x1891 (= c_____________ right-to-left)))
 (let (($x1892 (and $x1891 $x1888)))
 (let ((?x1740 (center s_____________)))
 (let (($x1893 ((_ is stack ) ?x1740)))
 (let (($x1894 (= c_____________ center-to-right)))
 (let (($x1895 (and $x1894 $x1893)))
 (let ((?x1881 (top ?x1740)))
 (let ((?x1882 (stack ?x1881 ?x1520)))
 (let (($x1909 (= ?x1658 ?x1882)))
 (let (($x1896 (= c_____________ center-to-left)))
 (let (($x1897 (and $x1896 $x1893)))
 (let ((?x1691 (rest ?x1520)))
 (let (($x1905 (= ?x1658 ?x1691)))
 (let (($x1898 ((_ is stack ) ?x1520)))
 (let (($x1899 (= c_____________ left-to-right)))
 (let (($x1900 (and $x1899 $x1898)))
 (let (($x1901 (= c_____________ left-to-center)))
 (let (($x1902 (and $x1901 $x1898)))
 (ite $x1902 $x1905 (ite $x1900 $x1905 (ite $x1897 $x1909 (ite $x1895 $x1918 (ite $x1892 $x1912 $x1918))))))))))))))))))))))))))))))))
(assert
 (let ((?x1554 (right s_____________)))
 (let ((?x1692 (right s______________)))
 (let (($x1914 (= ?x1692 ?x1554)))
 (let ((?x1884 (rest ?x1554)))
 (let (($x1911 (= ?x1692 ?x1884)))
 (let (($x1888 ((_ is stack ) ?x1554)))
 (let (($x1889 (= c_____________ right-to-center)))
 (let (($x1890 (and $x1889 $x1888)))
 (let (($x1891 (= c_____________ right-to-left)))
 (let (($x1892 (and $x1891 $x1888)))
 (let ((?x1740 (center s_____________)))
 (let ((?x1881 (top ?x1740)))
 (let ((?x1883 (stack ?x1881 ?x1554)))
 (let (($x1910 (= ?x1692 ?x1883)))
 (let (($x1893 ((_ is stack ) ?x1740)))
 (let (($x1894 (= c_____________ center-to-right)))
 (let (($x1895 (and $x1894 $x1893)))
 (let (($x1896 (= c_____________ center-to-left)))
 (let (($x1897 (and $x1896 $x1893)))
 (let ((?x1520 (left s_____________)))
 (let (($x1898 ((_ is stack ) ?x1520)))
 (let (($x1899 (= c_____________ left-to-right)))
 (let (($x1900 (and $x1899 $x1898)))
 (let (($x1931 (ite $x1900 $x1914 (ite $x1897 $x1914 (ite $x1895 $x1910 (ite $x1892 $x1911 (ite $x1890 $x1911 $x1914)))))))
 (let ((?x1738 (top ?x1520)))
 (let ((?x1877 (stack ?x1738 ?x1554)))
 (let (($x1906 (= ?x1692 ?x1877)))
 (let (($x1901 (= c_____________ left-to-center)))
 (let (($x1902 (and $x1901 $x1898)))
 (ite $x1902 $x1906 $x1931)))))))))))))))))))))))))))))))
(assert
 (let ((?x1740 (center s_____________)))
 (let ((?x1878 (center s______________)))
 (let (($x1916 (= ?x1878 ?x1740)))
 (let ((?x1554 (right s_____________)))
 (let ((?x1885 (top ?x1554)))
 (let ((?x1887 (stack ?x1885 ?x1740)))
 (let (($x1913 (= ?x1878 ?x1887)))
 (let (($x1888 ((_ is stack ) ?x1554)))
 (let (($x1889 (= c_____________ right-to-center)))
 (let (($x1890 (and $x1889 $x1888)))
 (let (($x1891 (= c_____________ right-to-left)))
 (let (($x1892 (and $x1891 $x1888)))
 (let ((?x1880 (rest ?x1740)))
 (let (($x1908 (= ?x1878 ?x1880)))
 (let (($x1893 ((_ is stack ) ?x1740)))
 (let (($x1894 (= c_____________ center-to-right)))
 (let (($x1895 (and $x1894 $x1893)))
 (let (($x1896 (= c_____________ center-to-left)))
 (let (($x1897 (and $x1896 $x1893)))
 (let ((?x1520 (left s_____________)))
 (let ((?x1738 (top ?x1520)))
 (let ((?x1879 (stack ?x1738 ?x1740)))
 (let (($x1907 (= ?x1878 ?x1879)))
 (let (($x1898 ((_ is stack ) ?x1520)))
 (let (($x1899 (= c_____________ left-to-right)))
 (let (($x1900 (and $x1899 $x1898)))
 (let (($x1930 (ite $x1900 $x1907 (ite $x1897 $x1908 (ite $x1895 $x1908 (ite $x1892 $x1916 (ite $x1890 $x1913 $x1916)))))))
 (let (($x1901 (= c_____________ left-to-center)))
 (let (($x1902 (and $x1901 $x1898)))
 (ite $x1902 $x1916 $x1930)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1658 (left s______________)))
 (let ((?x1796 (left s_______________)))
 (let (($x2056 (= ?x1796 ?x1658)))
 (let ((?x1692 (right s______________)))
 (let ((?x2023 (top ?x1692)))
 (let ((?x2024 (stack ?x2023 ?x1658)))
 (let (($x2050 (= ?x1796 ?x2024)))
 (let (($x2026 ((_ is stack ) ?x1692)))
 (let (($x2029 (= c______________ right-to-left)))
 (let (($x2030 (and $x2029 $x2026)))
 (let ((?x1878 (center s______________)))
 (let (($x2031 ((_ is stack ) ?x1878)))
 (let (($x2032 (= c______________ center-to-right)))
 (let (($x2033 (and $x2032 $x2031)))
 (let ((?x2019 (top ?x1878)))
 (let ((?x2020 (stack ?x2019 ?x1658)))
 (let (($x2047 (= ?x1796 ?x2020)))
 (let (($x2034 (= c______________ center-to-left)))
 (let (($x2035 (and $x2034 $x2031)))
 (let ((?x1829 (rest ?x1658)))
 (let (($x2043 (= ?x1796 ?x1829)))
 (let (($x2036 ((_ is stack ) ?x1658)))
 (let (($x2037 (= c______________ left-to-right)))
 (let (($x2038 (and $x2037 $x2036)))
 (let (($x2039 (= c______________ left-to-center)))
 (let (($x2040 (and $x2039 $x2036)))
 (ite $x2040 $x2043 (ite $x2038 $x2043 (ite $x2035 $x2047 (ite $x2033 $x2056 (ite $x2030 $x2050 $x2056))))))))))))))))))))))))))))))))
(assert
 (let ((?x1692 (right s______________)))
 (let ((?x1830 (right s_______________)))
 (let (($x2052 (= ?x1830 ?x1692)))
 (let ((?x2022 (rest ?x1692)))
 (let (($x2049 (= ?x1830 ?x2022)))
 (let (($x2026 ((_ is stack ) ?x1692)))
 (let (($x2027 (= c______________ right-to-center)))
 (let (($x2028 (and $x2027 $x2026)))
 (let (($x2029 (= c______________ right-to-left)))
 (let (($x2030 (and $x2029 $x2026)))
 (let ((?x1878 (center s______________)))
 (let ((?x2019 (top ?x1878)))
 (let ((?x2021 (stack ?x2019 ?x1692)))
 (let (($x2048 (= ?x1830 ?x2021)))
 (let (($x2031 ((_ is stack ) ?x1878)))
 (let (($x2032 (= c______________ center-to-right)))
 (let (($x2033 (and $x2032 $x2031)))
 (let (($x2034 (= c______________ center-to-left)))
 (let (($x2035 (and $x2034 $x2031)))
 (let ((?x1658 (left s______________)))
 (let (($x2036 ((_ is stack ) ?x1658)))
 (let (($x2037 (= c______________ left-to-right)))
 (let (($x2038 (and $x2037 $x2036)))
 (let (($x2069 (ite $x2038 $x2052 (ite $x2035 $x2052 (ite $x2033 $x2048 (ite $x2030 $x2049 (ite $x2028 $x2049 $x2052)))))))
 (let ((?x1876 (top ?x1658)))
 (let ((?x2015 (stack ?x1876 ?x1692)))
 (let (($x2044 (= ?x1830 ?x2015)))
 (let (($x2039 (= c______________ left-to-center)))
 (let (($x2040 (and $x2039 $x2036)))
 (ite $x2040 $x2044 $x2069)))))))))))))))))))))))))))))))
(assert
 (let ((?x1878 (center s______________)))
 (let ((?x2016 (center s_______________)))
 (let (($x2054 (= ?x2016 ?x1878)))
 (let ((?x1692 (right s______________)))
 (let ((?x2023 (top ?x1692)))
 (let ((?x2025 (stack ?x2023 ?x1878)))
 (let (($x2051 (= ?x2016 ?x2025)))
 (let (($x2026 ((_ is stack ) ?x1692)))
 (let (($x2027 (= c______________ right-to-center)))
 (let (($x2028 (and $x2027 $x2026)))
 (let (($x2029 (= c______________ right-to-left)))
 (let (($x2030 (and $x2029 $x2026)))
 (let ((?x2018 (rest ?x1878)))
 (let (($x2046 (= ?x2016 ?x2018)))
 (let (($x2031 ((_ is stack ) ?x1878)))
 (let (($x2032 (= c______________ center-to-right)))
 (let (($x2033 (and $x2032 $x2031)))
 (let (($x2034 (= c______________ center-to-left)))
 (let (($x2035 (and $x2034 $x2031)))
 (let ((?x1658 (left s______________)))
 (let ((?x1876 (top ?x1658)))
 (let ((?x2017 (stack ?x1876 ?x1878)))
 (let (($x2045 (= ?x2016 ?x2017)))
 (let (($x2036 ((_ is stack ) ?x1658)))
 (let (($x2037 (= c______________ left-to-right)))
 (let (($x2038 (and $x2037 $x2036)))
 (let (($x2068 (ite $x2038 $x2045 (ite $x2035 $x2046 (ite $x2033 $x2046 (ite $x2030 $x2054 (ite $x2028 $x2051 $x2054)))))))
 (let (($x2039 (= c______________ left-to-center)))
 (let (($x2040 (and $x2039 $x2036)))
 (ite $x2040 $x2054 $x2068)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1796 (left s_______________)))
 (let ((?x1934 (left s________________)))
 (let (($x2194 (= ?x1934 ?x1796)))
 (let ((?x1830 (right s_______________)))
 (let ((?x2161 (top ?x1830)))
 (let ((?x2162 (stack ?x2161 ?x1796)))
 (let (($x2188 (= ?x1934 ?x2162)))
 (let (($x2164 ((_ is stack ) ?x1830)))
 (let (($x2167 (= c_______________ right-to-left)))
 (let (($x2168 (and $x2167 $x2164)))
 (let ((?x2016 (center s_______________)))
 (let (($x2169 ((_ is stack ) ?x2016)))
 (let (($x2170 (= c_______________ center-to-right)))
 (let (($x2171 (and $x2170 $x2169)))
 (let ((?x2157 (top ?x2016)))
 (let ((?x2158 (stack ?x2157 ?x1796)))
 (let (($x2185 (= ?x1934 ?x2158)))
 (let (($x2172 (= c_______________ center-to-left)))
 (let (($x2173 (and $x2172 $x2169)))
 (let ((?x1967 (rest ?x1796)))
 (let (($x2181 (= ?x1934 ?x1967)))
 (let (($x2174 ((_ is stack ) ?x1796)))
 (let (($x2175 (= c_______________ left-to-right)))
 (let (($x2176 (and $x2175 $x2174)))
 (let (($x2177 (= c_______________ left-to-center)))
 (let (($x2178 (and $x2177 $x2174)))
 (ite $x2178 $x2181 (ite $x2176 $x2181 (ite $x2173 $x2185 (ite $x2171 $x2194 (ite $x2168 $x2188 $x2194))))))))))))))))))))))))))))))))
(assert
 (let ((?x1830 (right s_______________)))
 (let ((?x1968 (right s________________)))
 (let (($x2190 (= ?x1968 ?x1830)))
 (let ((?x2160 (rest ?x1830)))
 (let (($x2187 (= ?x1968 ?x2160)))
 (let (($x2164 ((_ is stack ) ?x1830)))
 (let (($x2165 (= c_______________ right-to-center)))
 (let (($x2166 (and $x2165 $x2164)))
 (let (($x2167 (= c_______________ right-to-left)))
 (let (($x2168 (and $x2167 $x2164)))
 (let ((?x2016 (center s_______________)))
 (let ((?x2157 (top ?x2016)))
 (let ((?x2159 (stack ?x2157 ?x1830)))
 (let (($x2186 (= ?x1968 ?x2159)))
 (let (($x2169 ((_ is stack ) ?x2016)))
 (let (($x2170 (= c_______________ center-to-right)))
 (let (($x2171 (and $x2170 $x2169)))
 (let (($x2172 (= c_______________ center-to-left)))
 (let (($x2173 (and $x2172 $x2169)))
 (let ((?x1796 (left s_______________)))
 (let (($x2174 ((_ is stack ) ?x1796)))
 (let (($x2175 (= c_______________ left-to-right)))
 (let (($x2176 (and $x2175 $x2174)))
 (let (($x2207 (ite $x2176 $x2190 (ite $x2173 $x2190 (ite $x2171 $x2186 (ite $x2168 $x2187 (ite $x2166 $x2187 $x2190)))))))
 (let ((?x2014 (top ?x1796)))
 (let ((?x2153 (stack ?x2014 ?x1830)))
 (let (($x2182 (= ?x1968 ?x2153)))
 (let (($x2177 (= c_______________ left-to-center)))
 (let (($x2178 (and $x2177 $x2174)))
 (ite $x2178 $x2182 $x2207)))))))))))))))))))))))))))))))
(assert
 (let ((?x2016 (center s_______________)))
 (let ((?x2154 (center s________________)))
 (let (($x2192 (= ?x2154 ?x2016)))
 (let ((?x1830 (right s_______________)))
 (let ((?x2161 (top ?x1830)))
 (let ((?x2163 (stack ?x2161 ?x2016)))
 (let (($x2189 (= ?x2154 ?x2163)))
 (let (($x2164 ((_ is stack ) ?x1830)))
 (let (($x2165 (= c_______________ right-to-center)))
 (let (($x2166 (and $x2165 $x2164)))
 (let (($x2167 (= c_______________ right-to-left)))
 (let (($x2168 (and $x2167 $x2164)))
 (let ((?x2156 (rest ?x2016)))
 (let (($x2184 (= ?x2154 ?x2156)))
 (let (($x2169 ((_ is stack ) ?x2016)))
 (let (($x2170 (= c_______________ center-to-right)))
 (let (($x2171 (and $x2170 $x2169)))
 (let (($x2172 (= c_______________ center-to-left)))
 (let (($x2173 (and $x2172 $x2169)))
 (let ((?x1796 (left s_______________)))
 (let ((?x2014 (top ?x1796)))
 (let ((?x2155 (stack ?x2014 ?x2016)))
 (let (($x2183 (= ?x2154 ?x2155)))
 (let (($x2174 ((_ is stack ) ?x1796)))
 (let (($x2175 (= c_______________ left-to-right)))
 (let (($x2176 (and $x2175 $x2174)))
 (let (($x2206 (ite $x2176 $x2183 (ite $x2173 $x2184 (ite $x2171 $x2184 (ite $x2168 $x2192 (ite $x2166 $x2189 $x2192)))))))
 (let (($x2177 (= c_______________ left-to-center)))
 (let (($x2178 (and $x2177 $x2174)))
 (ite $x2178 $x2192 $x2206)))))))))))))))))))))))))))))))
(assert
 (= c_________________ c!16))
(assert
 (let ((?x1934 (left s________________)))
 (let ((?x2072 (left s_________________)))
 (let (($x2332 (= ?x2072 ?x1934)))
 (let ((?x1968 (right s________________)))
 (let ((?x2299 (top ?x1968)))
 (let ((?x2300 (stack ?x2299 ?x1934)))
 (let (($x2326 (= ?x2072 ?x2300)))
 (let (($x2302 ((_ is stack ) ?x1968)))
 (let (($x2305 (= c________________ right-to-left)))
 (let (($x2306 (and $x2305 $x2302)))
 (let ((?x2154 (center s________________)))
 (let (($x2307 ((_ is stack ) ?x2154)))
 (let (($x2308 (= c________________ center-to-right)))
 (let (($x2309 (and $x2308 $x2307)))
 (let ((?x2295 (top ?x2154)))
 (let ((?x2296 (stack ?x2295 ?x1934)))
 (let (($x2323 (= ?x2072 ?x2296)))
 (let (($x2310 (= c________________ center-to-left)))
 (let (($x2311 (and $x2310 $x2307)))
 (let ((?x2105 (rest ?x1934)))
 (let (($x2319 (= ?x2072 ?x2105)))
 (let (($x2312 ((_ is stack ) ?x1934)))
 (let (($x2313 (= c________________ left-to-right)))
 (let (($x2314 (and $x2313 $x2312)))
 (let (($x2315 (= c________________ left-to-center)))
 (let (($x2316 (and $x2315 $x2312)))
 (ite $x2316 $x2319 (ite $x2314 $x2319 (ite $x2311 $x2323 (ite $x2309 $x2332 (ite $x2306 $x2326 $x2332))))))))))))))))))))))))))))))))
(assert
 (let ((?x1968 (right s________________)))
 (let ((?x2106 (right s_________________)))
 (let (($x2328 (= ?x2106 ?x1968)))
 (let ((?x2298 (rest ?x1968)))
 (let (($x2325 (= ?x2106 ?x2298)))
 (let (($x2302 ((_ is stack ) ?x1968)))
 (let (($x2303 (= c________________ right-to-center)))
 (let (($x2304 (and $x2303 $x2302)))
 (let (($x2305 (= c________________ right-to-left)))
 (let (($x2306 (and $x2305 $x2302)))
 (let ((?x2154 (center s________________)))
 (let ((?x2295 (top ?x2154)))
 (let ((?x2297 (stack ?x2295 ?x1968)))
 (let (($x2324 (= ?x2106 ?x2297)))
 (let (($x2307 ((_ is stack ) ?x2154)))
 (let (($x2308 (= c________________ center-to-right)))
 (let (($x2309 (and $x2308 $x2307)))
 (let (($x2310 (= c________________ center-to-left)))
 (let (($x2311 (and $x2310 $x2307)))
 (let ((?x1934 (left s________________)))
 (let (($x2312 ((_ is stack ) ?x1934)))
 (let (($x2313 (= c________________ left-to-right)))
 (let (($x2314 (and $x2313 $x2312)))
 (let (($x2345 (ite $x2314 $x2328 (ite $x2311 $x2328 (ite $x2309 $x2324 (ite $x2306 $x2325 (ite $x2304 $x2325 $x2328)))))))
 (let ((?x2152 (top ?x1934)))
 (let ((?x2291 (stack ?x2152 ?x1968)))
 (let (($x2320 (= ?x2106 ?x2291)))
 (let (($x2315 (= c________________ left-to-center)))
 (let (($x2316 (and $x2315 $x2312)))
 (ite $x2316 $x2320 $x2345)))))))))))))))))))))))))))))))
(assert
 (let ((?x2154 (center s________________)))
 (let ((?x2292 (center s_________________)))
 (let (($x2330 (= ?x2292 ?x2154)))
 (let ((?x1968 (right s________________)))
 (let ((?x2299 (top ?x1968)))
 (let ((?x2301 (stack ?x2299 ?x2154)))
 (let (($x2327 (= ?x2292 ?x2301)))
 (let (($x2302 ((_ is stack ) ?x1968)))
 (let (($x2303 (= c________________ right-to-center)))
 (let (($x2304 (and $x2303 $x2302)))
 (let (($x2305 (= c________________ right-to-left)))
 (let (($x2306 (and $x2305 $x2302)))
 (let ((?x2294 (rest ?x2154)))
 (let (($x2322 (= ?x2292 ?x2294)))
 (let (($x2307 ((_ is stack ) ?x2154)))
 (let (($x2308 (= c________________ center-to-right)))
 (let (($x2309 (and $x2308 $x2307)))
 (let (($x2310 (= c________________ center-to-left)))
 (let (($x2311 (and $x2310 $x2307)))
 (let ((?x1934 (left s________________)))
 (let ((?x2152 (top ?x1934)))
 (let ((?x2293 (stack ?x2152 ?x2154)))
 (let (($x2321 (= ?x2292 ?x2293)))
 (let (($x2312 ((_ is stack ) ?x1934)))
 (let (($x2313 (= c________________ left-to-right)))
 (let (($x2314 (and $x2313 $x2312)))
 (let (($x2344 (ite $x2314 $x2321 (ite $x2311 $x2322 (ite $x2309 $x2322 (ite $x2306 $x2330 (ite $x2304 $x2327 $x2330)))))))
 (let (($x2315 (= c________________ left-to-center)))
 (let (($x2316 (and $x2315 $x2312)))
 (ite $x2316 $x2330 $x2344)))))))))))))))))))))))))))))))
(assert
 (let ((?x49 (stack N (stack I (stack H (stack D (stack B (stack A empty))))))))
 (let ((?x2106 (right s_________________)))
 (let (($x2348 (= ?x2106 ?x49)))
 (let ((?x30 (stack M empty)))
 (let ((?x2292 (center s_________________)))
 (let (($x2379 (= ?x2292 ?x30)))
 (let ((?x45 (stack K (stack F (stack G (stack J (stack E (stack L empty))))))))
 (let ((?x46 (stack C ?x45)))
 (let ((?x2072 (left s_________________)))
 (let (($x2380 (= ?x2072 ?x46)))
 (let (($x2382 (not (and $x2380 $x2379 $x2348))))
 (not $x2382)))))))))))))
(check-sat)
(exit)
