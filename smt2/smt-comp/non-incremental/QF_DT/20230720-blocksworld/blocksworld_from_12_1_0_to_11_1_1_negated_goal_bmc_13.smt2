(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x25 (stack K empty)))
 (let ((?x26 (stack F ?x25)))
 (let ((?x27 (stack D ?x26)))
 (let ((?x28 (stack I ?x27)))
 (let ((?x29 (stack G ?x28)))
 (let ((?x30 (stack L ?x29)))
 (let ((?x31 (stack A ?x30)))
 (let ((?x32 (stack E ?x31)))
 (let ((?x33 (stack C ?x32)))
 (let ((?x34 (stack M ?x33)))
 (let ((?x35 (stack H ?x34)))
 (let ((?x36 (stack J ?x35)))
 (let ((?x96 (left s_tmp_)))
 (= ?x96 ?x36)))))))))))))))
(assert
 (let ((?x37 (stack B empty)))
 (let ((?x99 (center s_tmp__)))
 (= ?x99 ?x37))))
(assert
 (let ((?x102 (right s_tmp___)))
 (= ?x102 empty)))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x129 (left s_tmp__)))
 (= (left s_tmp___) ?x129)))
(assert
 (let ((?x99 (center s_tmp__)))
 (= (center s_tmp___) ?x99)))
(assert
 (let ((?x133 (center s_tmp_)))
 (= ?x133 (center s_tmp))))
(assert
 (let ((?x136 (right s_tmp_)))
 (= ?x136 (right s_tmp))))
(assert
 (let ((?x96 (left s_tmp_)))
 (let ((?x129 (left s_tmp__)))
 (= ?x129 ?x96))))
(assert
 (let ((?x136 (right s_tmp_)))
 (let ((?x140 (right s_tmp__)))
 (= ?x140 ?x136))))
(assert
 (= c__ c!1))
(assert
 (let ((?x73 (left s_)))
 (let ((?x232 (left s__)))
 (let (($x268 (= ?x232 ?x73)))
 (let ((?x76 (right s_)))
 (let (($x247 ((_ is stack ) ?x76)))
 (let (($x224 (and (= c_ right-to-left) $x247)))
 (let ((?x78 (center s_)))
 (let (($x225 ((_ is stack ) ?x78)))
 (let (($x226 (= c_ center-to-right)))
 (let (($x233 (and $x226 $x225)))
 (let (($x234 (= c_ center-to-left)))
 (let (($x235 (and $x234 $x225)))
 (let (($x277 (ite $x235 (= ?x232 (stack (top ?x78) ?x73)) (ite $x233 $x268 (ite $x224 (= ?x232 (stack (top ?x76) ?x73)) $x268)))))
 (let (($x222 (= ?x232 (rest ?x73))))
 (let (($x248 ((_ is stack ) ?x73)))
 (let (($x249 (= c_ left-to-right)))
 (let (($x250 (and $x249 $x248)))
 (let (($x254 (= c_ left-to-center)))
 (let (($x255 (and $x254 $x248)))
 (ite $x255 $x222 (ite $x250 $x222 $x277))))))))))))))))))))))
(assert
 (let ((?x76 (right s_)))
 (let ((?x240 (right s__)))
 (let (($x264 (= ?x240 ?x76)))
 (let (($x261 (= ?x240 (rest ?x76))))
 (let (($x247 ((_ is stack ) ?x76)))
 (let (($x237 (and (= c_ right-to-center) $x247)))
 (let (($x224 (and (= c_ right-to-left) $x247)))
 (let ((?x78 (center s_)))
 (let (($x225 ((_ is stack ) ?x78)))
 (let (($x226 (= c_ center-to-right)))
 (let (($x233 (and $x226 $x225)))
 (let (($x274 (ite $x233 (= ?x240 (stack (top ?x78) ?x76)) (ite $x224 $x261 (ite $x237 $x261 $x264)))))
 (let (($x234 (= c_ center-to-left)))
 (let (($x235 (and $x234 $x225)))
 (let ((?x73 (left s_)))
 (let (($x248 ((_ is stack ) ?x73)))
 (let (($x249 (= c_ left-to-right)))
 (let (($x250 (and $x249 $x248)))
 (let (($x254 (= c_ left-to-center)))
 (let (($x255 (and $x254 $x248)))
 (ite $x255 (= ?x240 (stack (top ?x73) ?x76)) (ite $x250 $x264 (ite $x235 $x264 $x274))))))))))))))))))))))))
(assert
 (let ((?x78 (center s_)))
 (let ((?x243 (center s__)))
 (let (($x266 (= ?x243 ?x78)))
 (let ((?x76 (right s_)))
 (let (($x247 ((_ is stack ) ?x76)))
 (let (($x237 (and (= c_ right-to-center) $x247)))
 (let (($x224 (and (= c_ right-to-left) $x247)))
 (let (($x258 (= ?x243 (rest ?x78))))
 (let (($x225 ((_ is stack ) ?x78)))
 (let (($x226 (= c_ center-to-right)))
 (let (($x233 (and $x226 $x225)))
 (let (($x273 (ite $x233 $x258 (ite $x224 $x266 (ite $x237 (= ?x243 (stack (top ?x76) ?x78)) $x266)))))
 (let (($x234 (= c_ center-to-left)))
 (let (($x235 (and $x234 $x225)))
 (let ((?x73 (left s_)))
 (let (($x248 ((_ is stack ) ?x73)))
 (let (($x249 (= c_ left-to-right)))
 (let (($x250 (and $x249 $x248)))
 (let (($x254 (= c_ left-to-center)))
 (let (($x255 (and $x254 $x248)))
 (ite $x255 $x266 (ite $x250 (= ?x243 (stack (top ?x73) ?x78)) (ite $x235 $x258 $x273))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x232 (left s__)))
 (let ((?x143 (left s___)))
 (let (($x375 (= ?x143 ?x232)))
 (let ((?x240 (right s__)))
 (let ((?x342 (top ?x240)))
 (let ((?x343 (stack ?x342 ?x232)))
 (let (($x369 (= ?x143 ?x343)))
 (let (($x345 ((_ is stack ) ?x240)))
 (let (($x348 (= c__ right-to-left)))
 (let (($x349 (and $x348 $x345)))
 (let ((?x243 (center s__)))
 (let (($x350 ((_ is stack ) ?x243)))
 (let (($x351 (= c__ center-to-right)))
 (let (($x352 (and $x351 $x350)))
 (let ((?x338 (top ?x243)))
 (let ((?x339 (stack ?x338 ?x232)))
 (let (($x366 (= ?x143 ?x339)))
 (let (($x353 (= c__ center-to-left)))
 (let (($x354 (and $x353 $x350)))
 (let ((?x145 (rest ?x232)))
 (let (($x362 (= ?x143 ?x145)))
 (let (($x355 ((_ is stack ) ?x232)))
 (let (($x356 (= c__ left-to-right)))
 (let (($x357 (and $x356 $x355)))
 (let (($x358 (= c__ left-to-center)))
 (let (($x359 (and $x358 $x355)))
 (ite $x359 $x362 (ite $x357 $x362 (ite $x354 $x366 (ite $x352 $x375 (ite $x349 $x369 $x375))))))))))))))))))))))))))))))))
(assert
 (let ((?x240 (right s__)))
 (let ((?x146 (right s___)))
 (let (($x371 (= ?x146 ?x240)))
 (let ((?x341 (rest ?x240)))
 (let (($x368 (= ?x146 ?x341)))
 (let (($x345 ((_ is stack ) ?x240)))
 (let (($x346 (= c__ right-to-center)))
 (let (($x347 (and $x346 $x345)))
 (let (($x348 (= c__ right-to-left)))
 (let (($x349 (and $x348 $x345)))
 (let ((?x243 (center s__)))
 (let ((?x338 (top ?x243)))
 (let ((?x340 (stack ?x338 ?x240)))
 (let (($x367 (= ?x146 ?x340)))
 (let (($x350 ((_ is stack ) ?x243)))
 (let (($x351 (= c__ center-to-right)))
 (let (($x352 (and $x351 $x350)))
 (let (($x353 (= c__ center-to-left)))
 (let (($x354 (and $x353 $x350)))
 (let ((?x232 (left s__)))
 (let (($x355 ((_ is stack ) ?x232)))
 (let (($x356 (= c__ left-to-right)))
 (let (($x357 (and $x356 $x355)))
 (let (($x388 (ite $x357 $x371 (ite $x354 $x371 (ite $x352 $x367 (ite $x349 $x368 (ite $x347 $x368 $x371)))))))
 (let ((?x220 (top ?x232)))
 (let ((?x334 (stack ?x220 ?x240)))
 (let (($x363 (= ?x146 ?x334)))
 (let (($x358 (= c__ left-to-center)))
 (let (($x359 (and $x358 $x355)))
 (ite $x359 $x363 $x388)))))))))))))))))))))))))))))))
(assert
 (let ((?x243 (center s__)))
 (let ((?x335 (center s___)))
 (let (($x373 (= ?x335 ?x243)))
 (let ((?x240 (right s__)))
 (let ((?x342 (top ?x240)))
 (let ((?x344 (stack ?x342 ?x243)))
 (let (($x370 (= ?x335 ?x344)))
 (let (($x345 ((_ is stack ) ?x240)))
 (let (($x346 (= c__ right-to-center)))
 (let (($x347 (and $x346 $x345)))
 (let (($x348 (= c__ right-to-left)))
 (let (($x349 (and $x348 $x345)))
 (let ((?x337 (rest ?x243)))
 (let (($x365 (= ?x335 ?x337)))
 (let (($x350 ((_ is stack ) ?x243)))
 (let (($x351 (= c__ center-to-right)))
 (let (($x352 (and $x351 $x350)))
 (let (($x353 (= c__ center-to-left)))
 (let (($x354 (and $x353 $x350)))
 (let ((?x232 (left s__)))
 (let ((?x220 (top ?x232)))
 (let ((?x336 (stack ?x220 ?x243)))
 (let (($x364 (= ?x335 ?x336)))
 (let (($x355 ((_ is stack ) ?x232)))
 (let (($x356 (= c__ left-to-right)))
 (let (($x357 (and $x356 $x355)))
 (let (($x387 (ite $x357 $x364 (ite $x354 $x365 (ite $x352 $x365 (ite $x349 $x373 (ite $x347 $x370 $x373)))))))
 (let (($x358 (= c__ left-to-center)))
 (let (($x359 (and $x358 $x355)))
 (ite $x359 $x373 $x387)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x143 (left s___)))
 (let ((?x284 (left s____)))
 (let (($x513 (= ?x284 ?x143)))
 (let ((?x146 (right s___)))
 (let ((?x480 (top ?x146)))
 (let ((?x481 (stack ?x480 ?x143)))
 (let (($x507 (= ?x284 ?x481)))
 (let (($x483 ((_ is stack ) ?x146)))
 (let (($x486 (= c___ right-to-left)))
 (let (($x487 (and $x486 $x483)))
 (let ((?x335 (center s___)))
 (let (($x488 ((_ is stack ) ?x335)))
 (let (($x489 (= c___ center-to-right)))
 (let (($x490 (and $x489 $x488)))
 (let ((?x476 (top ?x335)))
 (let ((?x477 (stack ?x476 ?x143)))
 (let (($x504 (= ?x284 ?x477)))
 (let (($x491 (= c___ center-to-left)))
 (let (($x492 (and $x491 $x488)))
 (let ((?x314 (rest ?x143)))
 (let (($x500 (= ?x284 ?x314)))
 (let (($x493 ((_ is stack ) ?x143)))
 (let (($x494 (= c___ left-to-right)))
 (let (($x495 (and $x494 $x493)))
 (let (($x496 (= c___ left-to-center)))
 (let (($x497 (and $x496 $x493)))
 (ite $x497 $x500 (ite $x495 $x500 (ite $x492 $x504 (ite $x490 $x513 (ite $x487 $x507 $x513))))))))))))))))))))))))))))))))
(assert
 (let ((?x146 (right s___)))
 (let ((?x315 (right s____)))
 (let (($x509 (= ?x315 ?x146)))
 (let ((?x479 (rest ?x146)))
 (let (($x506 (= ?x315 ?x479)))
 (let (($x483 ((_ is stack ) ?x146)))
 (let (($x484 (= c___ right-to-center)))
 (let (($x485 (and $x484 $x483)))
 (let (($x486 (= c___ right-to-left)))
 (let (($x487 (and $x486 $x483)))
 (let ((?x335 (center s___)))
 (let ((?x476 (top ?x335)))
 (let ((?x478 (stack ?x476 ?x146)))
 (let (($x505 (= ?x315 ?x478)))
 (let (($x488 ((_ is stack ) ?x335)))
 (let (($x489 (= c___ center-to-right)))
 (let (($x490 (and $x489 $x488)))
 (let (($x491 (= c___ center-to-left)))
 (let (($x492 (and $x491 $x488)))
 (let ((?x143 (left s___)))
 (let (($x493 ((_ is stack ) ?x143)))
 (let (($x494 (= c___ left-to-right)))
 (let (($x495 (and $x494 $x493)))
 (let (($x526 (ite $x495 $x509 (ite $x492 $x509 (ite $x490 $x505 (ite $x487 $x506 (ite $x485 $x506 $x509)))))))
 (let ((?x333 (top ?x143)))
 (let ((?x472 (stack ?x333 ?x146)))
 (let (($x501 (= ?x315 ?x472)))
 (let (($x496 (= c___ left-to-center)))
 (let (($x497 (and $x496 $x493)))
 (ite $x497 $x501 $x526)))))))))))))))))))))))))))))))
(assert
 (let ((?x335 (center s___)))
 (let ((?x473 (center s____)))
 (let (($x511 (= ?x473 ?x335)))
 (let ((?x146 (right s___)))
 (let ((?x480 (top ?x146)))
 (let ((?x482 (stack ?x480 ?x335)))
 (let (($x508 (= ?x473 ?x482)))
 (let (($x483 ((_ is stack ) ?x146)))
 (let (($x484 (= c___ right-to-center)))
 (let (($x485 (and $x484 $x483)))
 (let (($x486 (= c___ right-to-left)))
 (let (($x487 (and $x486 $x483)))
 (let ((?x475 (rest ?x335)))
 (let (($x503 (= ?x473 ?x475)))
 (let (($x488 ((_ is stack ) ?x335)))
 (let (($x489 (= c___ center-to-right)))
 (let (($x490 (and $x489 $x488)))
 (let (($x491 (= c___ center-to-left)))
 (let (($x492 (and $x491 $x488)))
 (let ((?x143 (left s___)))
 (let ((?x333 (top ?x143)))
 (let ((?x474 (stack ?x333 ?x335)))
 (let (($x502 (= ?x473 ?x474)))
 (let (($x493 ((_ is stack ) ?x143)))
 (let (($x494 (= c___ left-to-right)))
 (let (($x495 (and $x494 $x493)))
 (let (($x525 (ite $x495 $x502 (ite $x492 $x503 (ite $x490 $x503 (ite $x487 $x511 (ite $x485 $x508 $x511)))))))
 (let (($x496 (= c___ left-to-center)))
 (let (($x497 (and $x496 $x493)))
 (ite $x497 $x511 $x525)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x284 (left s____)))
 (let ((?x391 (left s_____)))
 (let (($x651 (= ?x391 ?x284)))
 (let ((?x315 (right s____)))
 (let ((?x618 (top ?x315)))
 (let ((?x619 (stack ?x618 ?x284)))
 (let (($x645 (= ?x391 ?x619)))
 (let (($x621 ((_ is stack ) ?x315)))
 (let (($x624 (= c____ right-to-left)))
 (let (($x625 (and $x624 $x621)))
 (let ((?x473 (center s____)))
 (let (($x626 ((_ is stack ) ?x473)))
 (let (($x627 (= c____ center-to-right)))
 (let (($x628 (and $x627 $x626)))
 (let ((?x614 (top ?x473)))
 (let ((?x615 (stack ?x614 ?x284)))
 (let (($x642 (= ?x391 ?x615)))
 (let (($x629 (= c____ center-to-left)))
 (let (($x630 (and $x629 $x626)))
 (let ((?x424 (rest ?x284)))
 (let (($x638 (= ?x391 ?x424)))
 (let (($x631 ((_ is stack ) ?x284)))
 (let (($x632 (= c____ left-to-right)))
 (let (($x633 (and $x632 $x631)))
 (let (($x634 (= c____ left-to-center)))
 (let (($x635 (and $x634 $x631)))
 (ite $x635 $x638 (ite $x633 $x638 (ite $x630 $x642 (ite $x628 $x651 (ite $x625 $x645 $x651))))))))))))))))))))))))))))))))
(assert
 (let ((?x315 (right s____)))
 (let ((?x425 (right s_____)))
 (let (($x647 (= ?x425 ?x315)))
 (let ((?x617 (rest ?x315)))
 (let (($x644 (= ?x425 ?x617)))
 (let (($x621 ((_ is stack ) ?x315)))
 (let (($x622 (= c____ right-to-center)))
 (let (($x623 (and $x622 $x621)))
 (let (($x624 (= c____ right-to-left)))
 (let (($x625 (and $x624 $x621)))
 (let ((?x473 (center s____)))
 (let ((?x614 (top ?x473)))
 (let ((?x616 (stack ?x614 ?x315)))
 (let (($x643 (= ?x425 ?x616)))
 (let (($x626 ((_ is stack ) ?x473)))
 (let (($x627 (= c____ center-to-right)))
 (let (($x628 (and $x627 $x626)))
 (let (($x629 (= c____ center-to-left)))
 (let (($x630 (and $x629 $x626)))
 (let ((?x284 (left s____)))
 (let (($x631 ((_ is stack ) ?x284)))
 (let (($x632 (= c____ left-to-right)))
 (let (($x633 (and $x632 $x631)))
 (let (($x664 (ite $x633 $x647 (ite $x630 $x647 (ite $x628 $x643 (ite $x625 $x644 (ite $x623 $x644 $x647)))))))
 (let ((?x471 (top ?x284)))
 (let ((?x610 (stack ?x471 ?x315)))
 (let (($x639 (= ?x425 ?x610)))
 (let (($x634 (= c____ left-to-center)))
 (let (($x635 (and $x634 $x631)))
 (ite $x635 $x639 $x664)))))))))))))))))))))))))))))))
(assert
 (let ((?x473 (center s____)))
 (let ((?x611 (center s_____)))
 (let (($x649 (= ?x611 ?x473)))
 (let ((?x315 (right s____)))
 (let ((?x618 (top ?x315)))
 (let ((?x620 (stack ?x618 ?x473)))
 (let (($x646 (= ?x611 ?x620)))
 (let (($x621 ((_ is stack ) ?x315)))
 (let (($x622 (= c____ right-to-center)))
 (let (($x623 (and $x622 $x621)))
 (let (($x624 (= c____ right-to-left)))
 (let (($x625 (and $x624 $x621)))
 (let ((?x613 (rest ?x473)))
 (let (($x641 (= ?x611 ?x613)))
 (let (($x626 ((_ is stack ) ?x473)))
 (let (($x627 (= c____ center-to-right)))
 (let (($x628 (and $x627 $x626)))
 (let (($x629 (= c____ center-to-left)))
 (let (($x630 (and $x629 $x626)))
 (let ((?x284 (left s____)))
 (let ((?x471 (top ?x284)))
 (let ((?x612 (stack ?x471 ?x473)))
 (let (($x640 (= ?x611 ?x612)))
 (let (($x631 ((_ is stack ) ?x284)))
 (let (($x632 (= c____ left-to-right)))
 (let (($x633 (and $x632 $x631)))
 (let (($x663 (ite $x633 $x640 (ite $x630 $x641 (ite $x628 $x641 (ite $x625 $x649 (ite $x623 $x646 $x649)))))))
 (let (($x634 (= c____ left-to-center)))
 (let (($x635 (and $x634 $x631)))
 (ite $x635 $x649 $x663)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x391 (left s_____)))
 (let ((?x529 (left s______)))
 (let (($x789 (= ?x529 ?x391)))
 (let ((?x425 (right s_____)))
 (let ((?x756 (top ?x425)))
 (let ((?x757 (stack ?x756 ?x391)))
 (let (($x783 (= ?x529 ?x757)))
 (let (($x759 ((_ is stack ) ?x425)))
 (let (($x762 (= c_____ right-to-left)))
 (let (($x763 (and $x762 $x759)))
 (let ((?x611 (center s_____)))
 (let (($x764 ((_ is stack ) ?x611)))
 (let (($x765 (= c_____ center-to-right)))
 (let (($x766 (and $x765 $x764)))
 (let ((?x752 (top ?x611)))
 (let ((?x753 (stack ?x752 ?x391)))
 (let (($x780 (= ?x529 ?x753)))
 (let (($x767 (= c_____ center-to-left)))
 (let (($x768 (and $x767 $x764)))
 (let ((?x562 (rest ?x391)))
 (let (($x776 (= ?x529 ?x562)))
 (let (($x769 ((_ is stack ) ?x391)))
 (let (($x770 (= c_____ left-to-right)))
 (let (($x771 (and $x770 $x769)))
 (let (($x772 (= c_____ left-to-center)))
 (let (($x773 (and $x772 $x769)))
 (ite $x773 $x776 (ite $x771 $x776 (ite $x768 $x780 (ite $x766 $x789 (ite $x763 $x783 $x789))))))))))))))))))))))))))))))))
(assert
 (let ((?x425 (right s_____)))
 (let ((?x563 (right s______)))
 (let (($x785 (= ?x563 ?x425)))
 (let ((?x755 (rest ?x425)))
 (let (($x782 (= ?x563 ?x755)))
 (let (($x759 ((_ is stack ) ?x425)))
 (let (($x760 (= c_____ right-to-center)))
 (let (($x761 (and $x760 $x759)))
 (let (($x762 (= c_____ right-to-left)))
 (let (($x763 (and $x762 $x759)))
 (let ((?x611 (center s_____)))
 (let ((?x752 (top ?x611)))
 (let ((?x754 (stack ?x752 ?x425)))
 (let (($x781 (= ?x563 ?x754)))
 (let (($x764 ((_ is stack ) ?x611)))
 (let (($x765 (= c_____ center-to-right)))
 (let (($x766 (and $x765 $x764)))
 (let (($x767 (= c_____ center-to-left)))
 (let (($x768 (and $x767 $x764)))
 (let ((?x391 (left s_____)))
 (let (($x769 ((_ is stack ) ?x391)))
 (let (($x770 (= c_____ left-to-right)))
 (let (($x771 (and $x770 $x769)))
 (let (($x802 (ite $x771 $x785 (ite $x768 $x785 (ite $x766 $x781 (ite $x763 $x782 (ite $x761 $x782 $x785)))))))
 (let ((?x609 (top ?x391)))
 (let ((?x748 (stack ?x609 ?x425)))
 (let (($x777 (= ?x563 ?x748)))
 (let (($x772 (= c_____ left-to-center)))
 (let (($x773 (and $x772 $x769)))
 (ite $x773 $x777 $x802)))))))))))))))))))))))))))))))
(assert
 (let ((?x611 (center s_____)))
 (let ((?x749 (center s______)))
 (let (($x787 (= ?x749 ?x611)))
 (let ((?x425 (right s_____)))
 (let ((?x756 (top ?x425)))
 (let ((?x758 (stack ?x756 ?x611)))
 (let (($x784 (= ?x749 ?x758)))
 (let (($x759 ((_ is stack ) ?x425)))
 (let (($x760 (= c_____ right-to-center)))
 (let (($x761 (and $x760 $x759)))
 (let (($x762 (= c_____ right-to-left)))
 (let (($x763 (and $x762 $x759)))
 (let ((?x751 (rest ?x611)))
 (let (($x779 (= ?x749 ?x751)))
 (let (($x764 ((_ is stack ) ?x611)))
 (let (($x765 (= c_____ center-to-right)))
 (let (($x766 (and $x765 $x764)))
 (let (($x767 (= c_____ center-to-left)))
 (let (($x768 (and $x767 $x764)))
 (let ((?x391 (left s_____)))
 (let ((?x609 (top ?x391)))
 (let ((?x750 (stack ?x609 ?x611)))
 (let (($x778 (= ?x749 ?x750)))
 (let (($x769 ((_ is stack ) ?x391)))
 (let (($x770 (= c_____ left-to-right)))
 (let (($x771 (and $x770 $x769)))
 (let (($x801 (ite $x771 $x778 (ite $x768 $x779 (ite $x766 $x779 (ite $x763 $x787 (ite $x761 $x784 $x787)))))))
 (let (($x772 (= c_____ left-to-center)))
 (let (($x773 (and $x772 $x769)))
 (ite $x773 $x787 $x801)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x529 (left s______)))
 (let ((?x667 (left s_______)))
 (let (($x927 (= ?x667 ?x529)))
 (let ((?x563 (right s______)))
 (let ((?x894 (top ?x563)))
 (let ((?x895 (stack ?x894 ?x529)))
 (let (($x921 (= ?x667 ?x895)))
 (let (($x897 ((_ is stack ) ?x563)))
 (let (($x900 (= c______ right-to-left)))
 (let (($x901 (and $x900 $x897)))
 (let ((?x749 (center s______)))
 (let (($x902 ((_ is stack ) ?x749)))
 (let (($x903 (= c______ center-to-right)))
 (let (($x904 (and $x903 $x902)))
 (let ((?x890 (top ?x749)))
 (let ((?x891 (stack ?x890 ?x529)))
 (let (($x918 (= ?x667 ?x891)))
 (let (($x905 (= c______ center-to-left)))
 (let (($x906 (and $x905 $x902)))
 (let ((?x700 (rest ?x529)))
 (let (($x914 (= ?x667 ?x700)))
 (let (($x907 ((_ is stack ) ?x529)))
 (let (($x908 (= c______ left-to-right)))
 (let (($x909 (and $x908 $x907)))
 (let (($x910 (= c______ left-to-center)))
 (let (($x911 (and $x910 $x907)))
 (ite $x911 $x914 (ite $x909 $x914 (ite $x906 $x918 (ite $x904 $x927 (ite $x901 $x921 $x927))))))))))))))))))))))))))))))))
(assert
 (let ((?x563 (right s______)))
 (let ((?x701 (right s_______)))
 (let (($x923 (= ?x701 ?x563)))
 (let ((?x893 (rest ?x563)))
 (let (($x920 (= ?x701 ?x893)))
 (let (($x897 ((_ is stack ) ?x563)))
 (let (($x898 (= c______ right-to-center)))
 (let (($x899 (and $x898 $x897)))
 (let (($x900 (= c______ right-to-left)))
 (let (($x901 (and $x900 $x897)))
 (let ((?x749 (center s______)))
 (let ((?x890 (top ?x749)))
 (let ((?x892 (stack ?x890 ?x563)))
 (let (($x919 (= ?x701 ?x892)))
 (let (($x902 ((_ is stack ) ?x749)))
 (let (($x903 (= c______ center-to-right)))
 (let (($x904 (and $x903 $x902)))
 (let (($x905 (= c______ center-to-left)))
 (let (($x906 (and $x905 $x902)))
 (let ((?x529 (left s______)))
 (let (($x907 ((_ is stack ) ?x529)))
 (let (($x908 (= c______ left-to-right)))
 (let (($x909 (and $x908 $x907)))
 (let (($x940 (ite $x909 $x923 (ite $x906 $x923 (ite $x904 $x919 (ite $x901 $x920 (ite $x899 $x920 $x923)))))))
 (let ((?x747 (top ?x529)))
 (let ((?x886 (stack ?x747 ?x563)))
 (let (($x915 (= ?x701 ?x886)))
 (let (($x910 (= c______ left-to-center)))
 (let (($x911 (and $x910 $x907)))
 (ite $x911 $x915 $x940)))))))))))))))))))))))))))))))
(assert
 (let ((?x749 (center s______)))
 (let ((?x887 (center s_______)))
 (let (($x925 (= ?x887 ?x749)))
 (let ((?x563 (right s______)))
 (let ((?x894 (top ?x563)))
 (let ((?x896 (stack ?x894 ?x749)))
 (let (($x922 (= ?x887 ?x896)))
 (let (($x897 ((_ is stack ) ?x563)))
 (let (($x898 (= c______ right-to-center)))
 (let (($x899 (and $x898 $x897)))
 (let (($x900 (= c______ right-to-left)))
 (let (($x901 (and $x900 $x897)))
 (let ((?x889 (rest ?x749)))
 (let (($x917 (= ?x887 ?x889)))
 (let (($x902 ((_ is stack ) ?x749)))
 (let (($x903 (= c______ center-to-right)))
 (let (($x904 (and $x903 $x902)))
 (let (($x905 (= c______ center-to-left)))
 (let (($x906 (and $x905 $x902)))
 (let ((?x529 (left s______)))
 (let ((?x747 (top ?x529)))
 (let ((?x888 (stack ?x747 ?x749)))
 (let (($x916 (= ?x887 ?x888)))
 (let (($x907 ((_ is stack ) ?x529)))
 (let (($x908 (= c______ left-to-right)))
 (let (($x909 (and $x908 $x907)))
 (let (($x939 (ite $x909 $x916 (ite $x906 $x917 (ite $x904 $x917 (ite $x901 $x925 (ite $x899 $x922 $x925)))))))
 (let (($x910 (= c______ left-to-center)))
 (let (($x911 (and $x910 $x907)))
 (ite $x911 $x925 $x939)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x667 (left s_______)))
 (let ((?x805 (left s________)))
 (let (($x1065 (= ?x805 ?x667)))
 (let ((?x701 (right s_______)))
 (let ((?x1032 (top ?x701)))
 (let ((?x1033 (stack ?x1032 ?x667)))
 (let (($x1059 (= ?x805 ?x1033)))
 (let (($x1035 ((_ is stack ) ?x701)))
 (let (($x1038 (= c_______ right-to-left)))
 (let (($x1039 (and $x1038 $x1035)))
 (let ((?x887 (center s_______)))
 (let (($x1040 ((_ is stack ) ?x887)))
 (let (($x1041 (= c_______ center-to-right)))
 (let (($x1042 (and $x1041 $x1040)))
 (let ((?x1028 (top ?x887)))
 (let ((?x1029 (stack ?x1028 ?x667)))
 (let (($x1056 (= ?x805 ?x1029)))
 (let (($x1043 (= c_______ center-to-left)))
 (let (($x1044 (and $x1043 $x1040)))
 (let ((?x838 (rest ?x667)))
 (let (($x1052 (= ?x805 ?x838)))
 (let (($x1045 ((_ is stack ) ?x667)))
 (let (($x1046 (= c_______ left-to-right)))
 (let (($x1047 (and $x1046 $x1045)))
 (let (($x1048 (= c_______ left-to-center)))
 (let (($x1049 (and $x1048 $x1045)))
 (ite $x1049 $x1052 (ite $x1047 $x1052 (ite $x1044 $x1056 (ite $x1042 $x1065 (ite $x1039 $x1059 $x1065))))))))))))))))))))))))))))))))
(assert
 (let ((?x701 (right s_______)))
 (let ((?x839 (right s________)))
 (let (($x1061 (= ?x839 ?x701)))
 (let ((?x1031 (rest ?x701)))
 (let (($x1058 (= ?x839 ?x1031)))
 (let (($x1035 ((_ is stack ) ?x701)))
 (let (($x1036 (= c_______ right-to-center)))
 (let (($x1037 (and $x1036 $x1035)))
 (let (($x1038 (= c_______ right-to-left)))
 (let (($x1039 (and $x1038 $x1035)))
 (let ((?x887 (center s_______)))
 (let ((?x1028 (top ?x887)))
 (let ((?x1030 (stack ?x1028 ?x701)))
 (let (($x1057 (= ?x839 ?x1030)))
 (let (($x1040 ((_ is stack ) ?x887)))
 (let (($x1041 (= c_______ center-to-right)))
 (let (($x1042 (and $x1041 $x1040)))
 (let (($x1043 (= c_______ center-to-left)))
 (let (($x1044 (and $x1043 $x1040)))
 (let ((?x667 (left s_______)))
 (let (($x1045 ((_ is stack ) ?x667)))
 (let (($x1046 (= c_______ left-to-right)))
 (let (($x1047 (and $x1046 $x1045)))
 (let (($x1078 (ite $x1047 $x1061 (ite $x1044 $x1061 (ite $x1042 $x1057 (ite $x1039 $x1058 (ite $x1037 $x1058 $x1061)))))))
 (let ((?x885 (top ?x667)))
 (let ((?x1024 (stack ?x885 ?x701)))
 (let (($x1053 (= ?x839 ?x1024)))
 (let (($x1048 (= c_______ left-to-center)))
 (let (($x1049 (and $x1048 $x1045)))
 (ite $x1049 $x1053 $x1078)))))))))))))))))))))))))))))))
(assert
 (let ((?x887 (center s_______)))
 (let ((?x1025 (center s________)))
 (let (($x1063 (= ?x1025 ?x887)))
 (let ((?x701 (right s_______)))
 (let ((?x1032 (top ?x701)))
 (let ((?x1034 (stack ?x1032 ?x887)))
 (let (($x1060 (= ?x1025 ?x1034)))
 (let (($x1035 ((_ is stack ) ?x701)))
 (let (($x1036 (= c_______ right-to-center)))
 (let (($x1037 (and $x1036 $x1035)))
 (let (($x1038 (= c_______ right-to-left)))
 (let (($x1039 (and $x1038 $x1035)))
 (let ((?x1027 (rest ?x887)))
 (let (($x1055 (= ?x1025 ?x1027)))
 (let (($x1040 ((_ is stack ) ?x887)))
 (let (($x1041 (= c_______ center-to-right)))
 (let (($x1042 (and $x1041 $x1040)))
 (let (($x1043 (= c_______ center-to-left)))
 (let (($x1044 (and $x1043 $x1040)))
 (let ((?x667 (left s_______)))
 (let ((?x885 (top ?x667)))
 (let ((?x1026 (stack ?x885 ?x887)))
 (let (($x1054 (= ?x1025 ?x1026)))
 (let (($x1045 ((_ is stack ) ?x667)))
 (let (($x1046 (= c_______ left-to-right)))
 (let (($x1047 (and $x1046 $x1045)))
 (let (($x1077 (ite $x1047 $x1054 (ite $x1044 $x1055 (ite $x1042 $x1055 (ite $x1039 $x1063 (ite $x1037 $x1060 $x1063)))))))
 (let (($x1048 (= c_______ left-to-center)))
 (let (($x1049 (and $x1048 $x1045)))
 (ite $x1049 $x1063 $x1077)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x805 (left s________)))
 (let ((?x943 (left s_________)))
 (let (($x1203 (= ?x943 ?x805)))
 (let ((?x839 (right s________)))
 (let ((?x1170 (top ?x839)))
 (let ((?x1171 (stack ?x1170 ?x805)))
 (let (($x1197 (= ?x943 ?x1171)))
 (let (($x1173 ((_ is stack ) ?x839)))
 (let (($x1176 (= c________ right-to-left)))
 (let (($x1177 (and $x1176 $x1173)))
 (let ((?x1025 (center s________)))
 (let (($x1178 ((_ is stack ) ?x1025)))
 (let (($x1179 (= c________ center-to-right)))
 (let (($x1180 (and $x1179 $x1178)))
 (let ((?x1166 (top ?x1025)))
 (let ((?x1167 (stack ?x1166 ?x805)))
 (let (($x1194 (= ?x943 ?x1167)))
 (let (($x1181 (= c________ center-to-left)))
 (let (($x1182 (and $x1181 $x1178)))
 (let ((?x976 (rest ?x805)))
 (let (($x1190 (= ?x943 ?x976)))
 (let (($x1183 ((_ is stack ) ?x805)))
 (let (($x1184 (= c________ left-to-right)))
 (let (($x1185 (and $x1184 $x1183)))
 (let (($x1186 (= c________ left-to-center)))
 (let (($x1187 (and $x1186 $x1183)))
 (ite $x1187 $x1190 (ite $x1185 $x1190 (ite $x1182 $x1194 (ite $x1180 $x1203 (ite $x1177 $x1197 $x1203))))))))))))))))))))))))))))))))
(assert
 (let ((?x839 (right s________)))
 (let ((?x977 (right s_________)))
 (let (($x1199 (= ?x977 ?x839)))
 (let ((?x1169 (rest ?x839)))
 (let (($x1196 (= ?x977 ?x1169)))
 (let (($x1173 ((_ is stack ) ?x839)))
 (let (($x1174 (= c________ right-to-center)))
 (let (($x1175 (and $x1174 $x1173)))
 (let (($x1176 (= c________ right-to-left)))
 (let (($x1177 (and $x1176 $x1173)))
 (let ((?x1025 (center s________)))
 (let ((?x1166 (top ?x1025)))
 (let ((?x1168 (stack ?x1166 ?x839)))
 (let (($x1195 (= ?x977 ?x1168)))
 (let (($x1178 ((_ is stack ) ?x1025)))
 (let (($x1179 (= c________ center-to-right)))
 (let (($x1180 (and $x1179 $x1178)))
 (let (($x1181 (= c________ center-to-left)))
 (let (($x1182 (and $x1181 $x1178)))
 (let ((?x805 (left s________)))
 (let (($x1183 ((_ is stack ) ?x805)))
 (let (($x1184 (= c________ left-to-right)))
 (let (($x1185 (and $x1184 $x1183)))
 (let (($x1216 (ite $x1185 $x1199 (ite $x1182 $x1199 (ite $x1180 $x1195 (ite $x1177 $x1196 (ite $x1175 $x1196 $x1199)))))))
 (let ((?x1023 (top ?x805)))
 (let ((?x1162 (stack ?x1023 ?x839)))
 (let (($x1191 (= ?x977 ?x1162)))
 (let (($x1186 (= c________ left-to-center)))
 (let (($x1187 (and $x1186 $x1183)))
 (ite $x1187 $x1191 $x1216)))))))))))))))))))))))))))))))
(assert
 (let ((?x1025 (center s________)))
 (let ((?x1163 (center s_________)))
 (let (($x1201 (= ?x1163 ?x1025)))
 (let ((?x839 (right s________)))
 (let ((?x1170 (top ?x839)))
 (let ((?x1172 (stack ?x1170 ?x1025)))
 (let (($x1198 (= ?x1163 ?x1172)))
 (let (($x1173 ((_ is stack ) ?x839)))
 (let (($x1174 (= c________ right-to-center)))
 (let (($x1175 (and $x1174 $x1173)))
 (let (($x1176 (= c________ right-to-left)))
 (let (($x1177 (and $x1176 $x1173)))
 (let ((?x1165 (rest ?x1025)))
 (let (($x1193 (= ?x1163 ?x1165)))
 (let (($x1178 ((_ is stack ) ?x1025)))
 (let (($x1179 (= c________ center-to-right)))
 (let (($x1180 (and $x1179 $x1178)))
 (let (($x1181 (= c________ center-to-left)))
 (let (($x1182 (and $x1181 $x1178)))
 (let ((?x805 (left s________)))
 (let ((?x1023 (top ?x805)))
 (let ((?x1164 (stack ?x1023 ?x1025)))
 (let (($x1192 (= ?x1163 ?x1164)))
 (let (($x1183 ((_ is stack ) ?x805)))
 (let (($x1184 (= c________ left-to-right)))
 (let (($x1185 (and $x1184 $x1183)))
 (let (($x1215 (ite $x1185 $x1192 (ite $x1182 $x1193 (ite $x1180 $x1193 (ite $x1177 $x1201 (ite $x1175 $x1198 $x1201)))))))
 (let (($x1186 (= c________ left-to-center)))
 (let (($x1187 (and $x1186 $x1183)))
 (ite $x1187 $x1201 $x1215)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x943 (left s_________)))
 (let ((?x1081 (left s__________)))
 (let (($x1341 (= ?x1081 ?x943)))
 (let ((?x977 (right s_________)))
 (let ((?x1308 (top ?x977)))
 (let ((?x1309 (stack ?x1308 ?x943)))
 (let (($x1335 (= ?x1081 ?x1309)))
 (let (($x1311 ((_ is stack ) ?x977)))
 (let (($x1314 (= c_________ right-to-left)))
 (let (($x1315 (and $x1314 $x1311)))
 (let ((?x1163 (center s_________)))
 (let (($x1316 ((_ is stack ) ?x1163)))
 (let (($x1317 (= c_________ center-to-right)))
 (let (($x1318 (and $x1317 $x1316)))
 (let ((?x1304 (top ?x1163)))
 (let ((?x1305 (stack ?x1304 ?x943)))
 (let (($x1332 (= ?x1081 ?x1305)))
 (let (($x1319 (= c_________ center-to-left)))
 (let (($x1320 (and $x1319 $x1316)))
 (let ((?x1114 (rest ?x943)))
 (let (($x1328 (= ?x1081 ?x1114)))
 (let (($x1321 ((_ is stack ) ?x943)))
 (let (($x1322 (= c_________ left-to-right)))
 (let (($x1323 (and $x1322 $x1321)))
 (let (($x1324 (= c_________ left-to-center)))
 (let (($x1325 (and $x1324 $x1321)))
 (ite $x1325 $x1328 (ite $x1323 $x1328 (ite $x1320 $x1332 (ite $x1318 $x1341 (ite $x1315 $x1335 $x1341))))))))))))))))))))))))))))))))
(assert
 (let ((?x977 (right s_________)))
 (let ((?x1115 (right s__________)))
 (let (($x1337 (= ?x1115 ?x977)))
 (let ((?x1307 (rest ?x977)))
 (let (($x1334 (= ?x1115 ?x1307)))
 (let (($x1311 ((_ is stack ) ?x977)))
 (let (($x1312 (= c_________ right-to-center)))
 (let (($x1313 (and $x1312 $x1311)))
 (let (($x1314 (= c_________ right-to-left)))
 (let (($x1315 (and $x1314 $x1311)))
 (let ((?x1163 (center s_________)))
 (let ((?x1304 (top ?x1163)))
 (let ((?x1306 (stack ?x1304 ?x977)))
 (let (($x1333 (= ?x1115 ?x1306)))
 (let (($x1316 ((_ is stack ) ?x1163)))
 (let (($x1317 (= c_________ center-to-right)))
 (let (($x1318 (and $x1317 $x1316)))
 (let (($x1319 (= c_________ center-to-left)))
 (let (($x1320 (and $x1319 $x1316)))
 (let ((?x943 (left s_________)))
 (let (($x1321 ((_ is stack ) ?x943)))
 (let (($x1322 (= c_________ left-to-right)))
 (let (($x1323 (and $x1322 $x1321)))
 (let (($x1354 (ite $x1323 $x1337 (ite $x1320 $x1337 (ite $x1318 $x1333 (ite $x1315 $x1334 (ite $x1313 $x1334 $x1337)))))))
 (let ((?x1161 (top ?x943)))
 (let ((?x1300 (stack ?x1161 ?x977)))
 (let (($x1329 (= ?x1115 ?x1300)))
 (let (($x1324 (= c_________ left-to-center)))
 (let (($x1325 (and $x1324 $x1321)))
 (ite $x1325 $x1329 $x1354)))))))))))))))))))))))))))))))
(assert
 (let ((?x1163 (center s_________)))
 (let ((?x1301 (center s__________)))
 (let (($x1339 (= ?x1301 ?x1163)))
 (let ((?x977 (right s_________)))
 (let ((?x1308 (top ?x977)))
 (let ((?x1310 (stack ?x1308 ?x1163)))
 (let (($x1336 (= ?x1301 ?x1310)))
 (let (($x1311 ((_ is stack ) ?x977)))
 (let (($x1312 (= c_________ right-to-center)))
 (let (($x1313 (and $x1312 $x1311)))
 (let (($x1314 (= c_________ right-to-left)))
 (let (($x1315 (and $x1314 $x1311)))
 (let ((?x1303 (rest ?x1163)))
 (let (($x1331 (= ?x1301 ?x1303)))
 (let (($x1316 ((_ is stack ) ?x1163)))
 (let (($x1317 (= c_________ center-to-right)))
 (let (($x1318 (and $x1317 $x1316)))
 (let (($x1319 (= c_________ center-to-left)))
 (let (($x1320 (and $x1319 $x1316)))
 (let ((?x943 (left s_________)))
 (let ((?x1161 (top ?x943)))
 (let ((?x1302 (stack ?x1161 ?x1163)))
 (let (($x1330 (= ?x1301 ?x1302)))
 (let (($x1321 ((_ is stack ) ?x943)))
 (let (($x1322 (= c_________ left-to-right)))
 (let (($x1323 (and $x1322 $x1321)))
 (let (($x1353 (ite $x1323 $x1330 (ite $x1320 $x1331 (ite $x1318 $x1331 (ite $x1315 $x1339 (ite $x1313 $x1336 $x1339)))))))
 (let (($x1324 (= c_________ left-to-center)))
 (let (($x1325 (and $x1324 $x1321)))
 (ite $x1325 $x1339 $x1353)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1081 (left s__________)))
 (let ((?x1219 (left s___________)))
 (let (($x1479 (= ?x1219 ?x1081)))
 (let ((?x1115 (right s__________)))
 (let ((?x1446 (top ?x1115)))
 (let ((?x1447 (stack ?x1446 ?x1081)))
 (let (($x1473 (= ?x1219 ?x1447)))
 (let (($x1449 ((_ is stack ) ?x1115)))
 (let (($x1452 (= c__________ right-to-left)))
 (let (($x1453 (and $x1452 $x1449)))
 (let ((?x1301 (center s__________)))
 (let (($x1454 ((_ is stack ) ?x1301)))
 (let (($x1455 (= c__________ center-to-right)))
 (let (($x1456 (and $x1455 $x1454)))
 (let ((?x1442 (top ?x1301)))
 (let ((?x1443 (stack ?x1442 ?x1081)))
 (let (($x1470 (= ?x1219 ?x1443)))
 (let (($x1457 (= c__________ center-to-left)))
 (let (($x1458 (and $x1457 $x1454)))
 (let ((?x1252 (rest ?x1081)))
 (let (($x1466 (= ?x1219 ?x1252)))
 (let (($x1459 ((_ is stack ) ?x1081)))
 (let (($x1460 (= c__________ left-to-right)))
 (let (($x1461 (and $x1460 $x1459)))
 (let (($x1462 (= c__________ left-to-center)))
 (let (($x1463 (and $x1462 $x1459)))
 (ite $x1463 $x1466 (ite $x1461 $x1466 (ite $x1458 $x1470 (ite $x1456 $x1479 (ite $x1453 $x1473 $x1479))))))))))))))))))))))))))))))))
(assert
 (let ((?x1115 (right s__________)))
 (let ((?x1253 (right s___________)))
 (let (($x1475 (= ?x1253 ?x1115)))
 (let ((?x1445 (rest ?x1115)))
 (let (($x1472 (= ?x1253 ?x1445)))
 (let (($x1449 ((_ is stack ) ?x1115)))
 (let (($x1450 (= c__________ right-to-center)))
 (let (($x1451 (and $x1450 $x1449)))
 (let (($x1452 (= c__________ right-to-left)))
 (let (($x1453 (and $x1452 $x1449)))
 (let ((?x1301 (center s__________)))
 (let ((?x1442 (top ?x1301)))
 (let ((?x1444 (stack ?x1442 ?x1115)))
 (let (($x1471 (= ?x1253 ?x1444)))
 (let (($x1454 ((_ is stack ) ?x1301)))
 (let (($x1455 (= c__________ center-to-right)))
 (let (($x1456 (and $x1455 $x1454)))
 (let (($x1457 (= c__________ center-to-left)))
 (let (($x1458 (and $x1457 $x1454)))
 (let ((?x1081 (left s__________)))
 (let (($x1459 ((_ is stack ) ?x1081)))
 (let (($x1460 (= c__________ left-to-right)))
 (let (($x1461 (and $x1460 $x1459)))
 (let (($x1492 (ite $x1461 $x1475 (ite $x1458 $x1475 (ite $x1456 $x1471 (ite $x1453 $x1472 (ite $x1451 $x1472 $x1475)))))))
 (let ((?x1299 (top ?x1081)))
 (let ((?x1438 (stack ?x1299 ?x1115)))
 (let (($x1467 (= ?x1253 ?x1438)))
 (let (($x1462 (= c__________ left-to-center)))
 (let (($x1463 (and $x1462 $x1459)))
 (ite $x1463 $x1467 $x1492)))))))))))))))))))))))))))))))
(assert
 (let ((?x1301 (center s__________)))
 (let ((?x1439 (center s___________)))
 (let (($x1477 (= ?x1439 ?x1301)))
 (let ((?x1115 (right s__________)))
 (let ((?x1446 (top ?x1115)))
 (let ((?x1448 (stack ?x1446 ?x1301)))
 (let (($x1474 (= ?x1439 ?x1448)))
 (let (($x1449 ((_ is stack ) ?x1115)))
 (let (($x1450 (= c__________ right-to-center)))
 (let (($x1451 (and $x1450 $x1449)))
 (let (($x1452 (= c__________ right-to-left)))
 (let (($x1453 (and $x1452 $x1449)))
 (let ((?x1441 (rest ?x1301)))
 (let (($x1469 (= ?x1439 ?x1441)))
 (let (($x1454 ((_ is stack ) ?x1301)))
 (let (($x1455 (= c__________ center-to-right)))
 (let (($x1456 (and $x1455 $x1454)))
 (let (($x1457 (= c__________ center-to-left)))
 (let (($x1458 (and $x1457 $x1454)))
 (let ((?x1081 (left s__________)))
 (let ((?x1299 (top ?x1081)))
 (let ((?x1440 (stack ?x1299 ?x1301)))
 (let (($x1468 (= ?x1439 ?x1440)))
 (let (($x1459 ((_ is stack ) ?x1081)))
 (let (($x1460 (= c__________ left-to-right)))
 (let (($x1461 (and $x1460 $x1459)))
 (let (($x1491 (ite $x1461 $x1468 (ite $x1458 $x1469 (ite $x1456 $x1469 (ite $x1453 $x1477 (ite $x1451 $x1474 $x1477)))))))
 (let (($x1462 (= c__________ left-to-center)))
 (let (($x1463 (and $x1462 $x1459)))
 (ite $x1463 $x1477 $x1491)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1219 (left s___________)))
 (let ((?x1357 (left s____________)))
 (let (($x1617 (= ?x1357 ?x1219)))
 (let ((?x1253 (right s___________)))
 (let ((?x1584 (top ?x1253)))
 (let ((?x1585 (stack ?x1584 ?x1219)))
 (let (($x1611 (= ?x1357 ?x1585)))
 (let (($x1587 ((_ is stack ) ?x1253)))
 (let (($x1590 (= c___________ right-to-left)))
 (let (($x1591 (and $x1590 $x1587)))
 (let ((?x1439 (center s___________)))
 (let (($x1592 ((_ is stack ) ?x1439)))
 (let (($x1593 (= c___________ center-to-right)))
 (let (($x1594 (and $x1593 $x1592)))
 (let ((?x1580 (top ?x1439)))
 (let ((?x1581 (stack ?x1580 ?x1219)))
 (let (($x1608 (= ?x1357 ?x1581)))
 (let (($x1595 (= c___________ center-to-left)))
 (let (($x1596 (and $x1595 $x1592)))
 (let ((?x1390 (rest ?x1219)))
 (let (($x1604 (= ?x1357 ?x1390)))
 (let (($x1597 ((_ is stack ) ?x1219)))
 (let (($x1598 (= c___________ left-to-right)))
 (let (($x1599 (and $x1598 $x1597)))
 (let (($x1600 (= c___________ left-to-center)))
 (let (($x1601 (and $x1600 $x1597)))
 (ite $x1601 $x1604 (ite $x1599 $x1604 (ite $x1596 $x1608 (ite $x1594 $x1617 (ite $x1591 $x1611 $x1617))))))))))))))))))))))))))))))))
(assert
 (let ((?x1253 (right s___________)))
 (let ((?x1391 (right s____________)))
 (let (($x1613 (= ?x1391 ?x1253)))
 (let ((?x1583 (rest ?x1253)))
 (let (($x1610 (= ?x1391 ?x1583)))
 (let (($x1587 ((_ is stack ) ?x1253)))
 (let (($x1588 (= c___________ right-to-center)))
 (let (($x1589 (and $x1588 $x1587)))
 (let (($x1590 (= c___________ right-to-left)))
 (let (($x1591 (and $x1590 $x1587)))
 (let ((?x1439 (center s___________)))
 (let ((?x1580 (top ?x1439)))
 (let ((?x1582 (stack ?x1580 ?x1253)))
 (let (($x1609 (= ?x1391 ?x1582)))
 (let (($x1592 ((_ is stack ) ?x1439)))
 (let (($x1593 (= c___________ center-to-right)))
 (let (($x1594 (and $x1593 $x1592)))
 (let (($x1595 (= c___________ center-to-left)))
 (let (($x1596 (and $x1595 $x1592)))
 (let ((?x1219 (left s___________)))
 (let (($x1597 ((_ is stack ) ?x1219)))
 (let (($x1598 (= c___________ left-to-right)))
 (let (($x1599 (and $x1598 $x1597)))
 (let (($x1630 (ite $x1599 $x1613 (ite $x1596 $x1613 (ite $x1594 $x1609 (ite $x1591 $x1610 (ite $x1589 $x1610 $x1613)))))))
 (let ((?x1437 (top ?x1219)))
 (let ((?x1576 (stack ?x1437 ?x1253)))
 (let (($x1605 (= ?x1391 ?x1576)))
 (let (($x1600 (= c___________ left-to-center)))
 (let (($x1601 (and $x1600 $x1597)))
 (ite $x1601 $x1605 $x1630)))))))))))))))))))))))))))))))
(assert
 (let ((?x1439 (center s___________)))
 (let ((?x1577 (center s____________)))
 (let (($x1615 (= ?x1577 ?x1439)))
 (let ((?x1253 (right s___________)))
 (let ((?x1584 (top ?x1253)))
 (let ((?x1586 (stack ?x1584 ?x1439)))
 (let (($x1612 (= ?x1577 ?x1586)))
 (let (($x1587 ((_ is stack ) ?x1253)))
 (let (($x1588 (= c___________ right-to-center)))
 (let (($x1589 (and $x1588 $x1587)))
 (let (($x1590 (= c___________ right-to-left)))
 (let (($x1591 (and $x1590 $x1587)))
 (let ((?x1579 (rest ?x1439)))
 (let (($x1607 (= ?x1577 ?x1579)))
 (let (($x1592 ((_ is stack ) ?x1439)))
 (let (($x1593 (= c___________ center-to-right)))
 (let (($x1594 (and $x1593 $x1592)))
 (let (($x1595 (= c___________ center-to-left)))
 (let (($x1596 (and $x1595 $x1592)))
 (let ((?x1219 (left s___________)))
 (let ((?x1437 (top ?x1219)))
 (let ((?x1578 (stack ?x1437 ?x1439)))
 (let (($x1606 (= ?x1577 ?x1578)))
 (let (($x1597 ((_ is stack ) ?x1219)))
 (let (($x1598 (= c___________ left-to-right)))
 (let (($x1599 (and $x1598 $x1597)))
 (let (($x1629 (ite $x1599 $x1606 (ite $x1596 $x1607 (ite $x1594 $x1607 (ite $x1591 $x1615 (ite $x1589 $x1612 $x1615)))))))
 (let (($x1600 (= c___________ left-to-center)))
 (let (($x1601 (and $x1600 $x1597)))
 (ite $x1601 $x1615 $x1629)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1357 (left s____________)))
 (let ((?x1495 (left s_____________)))
 (let (($x1755 (= ?x1495 ?x1357)))
 (let ((?x1391 (right s____________)))
 (let ((?x1722 (top ?x1391)))
 (let ((?x1723 (stack ?x1722 ?x1357)))
 (let (($x1749 (= ?x1495 ?x1723)))
 (let (($x1725 ((_ is stack ) ?x1391)))
 (let (($x1728 (= c____________ right-to-left)))
 (let (($x1729 (and $x1728 $x1725)))
 (let ((?x1577 (center s____________)))
 (let (($x1730 ((_ is stack ) ?x1577)))
 (let (($x1731 (= c____________ center-to-right)))
 (let (($x1732 (and $x1731 $x1730)))
 (let ((?x1718 (top ?x1577)))
 (let ((?x1719 (stack ?x1718 ?x1357)))
 (let (($x1746 (= ?x1495 ?x1719)))
 (let (($x1733 (= c____________ center-to-left)))
 (let (($x1734 (and $x1733 $x1730)))
 (let ((?x1528 (rest ?x1357)))
 (let (($x1742 (= ?x1495 ?x1528)))
 (let (($x1735 ((_ is stack ) ?x1357)))
 (let (($x1736 (= c____________ left-to-right)))
 (let (($x1737 (and $x1736 $x1735)))
 (let (($x1738 (= c____________ left-to-center)))
 (let (($x1739 (and $x1738 $x1735)))
 (ite $x1739 $x1742 (ite $x1737 $x1742 (ite $x1734 $x1746 (ite $x1732 $x1755 (ite $x1729 $x1749 $x1755))))))))))))))))))))))))))))))))
(assert
 (let ((?x1391 (right s____________)))
 (let ((?x1529 (right s_____________)))
 (let (($x1751 (= ?x1529 ?x1391)))
 (let ((?x1721 (rest ?x1391)))
 (let (($x1748 (= ?x1529 ?x1721)))
 (let (($x1725 ((_ is stack ) ?x1391)))
 (let (($x1726 (= c____________ right-to-center)))
 (let (($x1727 (and $x1726 $x1725)))
 (let (($x1728 (= c____________ right-to-left)))
 (let (($x1729 (and $x1728 $x1725)))
 (let ((?x1577 (center s____________)))
 (let ((?x1718 (top ?x1577)))
 (let ((?x1720 (stack ?x1718 ?x1391)))
 (let (($x1747 (= ?x1529 ?x1720)))
 (let (($x1730 ((_ is stack ) ?x1577)))
 (let (($x1731 (= c____________ center-to-right)))
 (let (($x1732 (and $x1731 $x1730)))
 (let (($x1733 (= c____________ center-to-left)))
 (let (($x1734 (and $x1733 $x1730)))
 (let ((?x1357 (left s____________)))
 (let (($x1735 ((_ is stack ) ?x1357)))
 (let (($x1736 (= c____________ left-to-right)))
 (let (($x1737 (and $x1736 $x1735)))
 (let (($x1768 (ite $x1737 $x1751 (ite $x1734 $x1751 (ite $x1732 $x1747 (ite $x1729 $x1748 (ite $x1727 $x1748 $x1751)))))))
 (let ((?x1575 (top ?x1357)))
 (let ((?x1714 (stack ?x1575 ?x1391)))
 (let (($x1743 (= ?x1529 ?x1714)))
 (let (($x1738 (= c____________ left-to-center)))
 (let (($x1739 (and $x1738 $x1735)))
 (ite $x1739 $x1743 $x1768)))))))))))))))))))))))))))))))
(assert
 (let ((?x1577 (center s____________)))
 (let ((?x1715 (center s_____________)))
 (let (($x1753 (= ?x1715 ?x1577)))
 (let ((?x1391 (right s____________)))
 (let ((?x1722 (top ?x1391)))
 (let ((?x1724 (stack ?x1722 ?x1577)))
 (let (($x1750 (= ?x1715 ?x1724)))
 (let (($x1725 ((_ is stack ) ?x1391)))
 (let (($x1726 (= c____________ right-to-center)))
 (let (($x1727 (and $x1726 $x1725)))
 (let (($x1728 (= c____________ right-to-left)))
 (let (($x1729 (and $x1728 $x1725)))
 (let ((?x1717 (rest ?x1577)))
 (let (($x1745 (= ?x1715 ?x1717)))
 (let (($x1730 ((_ is stack ) ?x1577)))
 (let (($x1731 (= c____________ center-to-right)))
 (let (($x1732 (and $x1731 $x1730)))
 (let (($x1733 (= c____________ center-to-left)))
 (let (($x1734 (and $x1733 $x1730)))
 (let ((?x1357 (left s____________)))
 (let ((?x1575 (top ?x1357)))
 (let ((?x1716 (stack ?x1575 ?x1577)))
 (let (($x1744 (= ?x1715 ?x1716)))
 (let (($x1735 ((_ is stack ) ?x1357)))
 (let (($x1736 (= c____________ left-to-right)))
 (let (($x1737 (and $x1736 $x1735)))
 (let (($x1767 (ite $x1737 $x1744 (ite $x1734 $x1745 (ite $x1732 $x1745 (ite $x1729 $x1753 (ite $x1727 $x1750 $x1753)))))))
 (let (($x1738 (= c____________ left-to-center)))
 (let (($x1739 (and $x1738 $x1735)))
 (ite $x1739 $x1753 $x1767)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1495 (left s_____________)))
 (let ((?x1633 (left s______________)))
 (let (($x1893 (= ?x1633 ?x1495)))
 (let ((?x1529 (right s_____________)))
 (let ((?x1860 (top ?x1529)))
 (let ((?x1861 (stack ?x1860 ?x1495)))
 (let (($x1887 (= ?x1633 ?x1861)))
 (let (($x1863 ((_ is stack ) ?x1529)))
 (let (($x1866 (= c_____________ right-to-left)))
 (let (($x1867 (and $x1866 $x1863)))
 (let ((?x1715 (center s_____________)))
 (let (($x1868 ((_ is stack ) ?x1715)))
 (let (($x1869 (= c_____________ center-to-right)))
 (let (($x1870 (and $x1869 $x1868)))
 (let ((?x1856 (top ?x1715)))
 (let ((?x1857 (stack ?x1856 ?x1495)))
 (let (($x1884 (= ?x1633 ?x1857)))
 (let (($x1871 (= c_____________ center-to-left)))
 (let (($x1872 (and $x1871 $x1868)))
 (let ((?x1666 (rest ?x1495)))
 (let (($x1880 (= ?x1633 ?x1666)))
 (let (($x1873 ((_ is stack ) ?x1495)))
 (let (($x1874 (= c_____________ left-to-right)))
 (let (($x1875 (and $x1874 $x1873)))
 (let (($x1876 (= c_____________ left-to-center)))
 (let (($x1877 (and $x1876 $x1873)))
 (ite $x1877 $x1880 (ite $x1875 $x1880 (ite $x1872 $x1884 (ite $x1870 $x1893 (ite $x1867 $x1887 $x1893))))))))))))))))))))))))))))))))
(assert
 (let ((?x1529 (right s_____________)))
 (let ((?x1667 (right s______________)))
 (let (($x1889 (= ?x1667 ?x1529)))
 (let ((?x1859 (rest ?x1529)))
 (let (($x1886 (= ?x1667 ?x1859)))
 (let (($x1863 ((_ is stack ) ?x1529)))
 (let (($x1864 (= c_____________ right-to-center)))
 (let (($x1865 (and $x1864 $x1863)))
 (let (($x1866 (= c_____________ right-to-left)))
 (let (($x1867 (and $x1866 $x1863)))
 (let ((?x1715 (center s_____________)))
 (let ((?x1856 (top ?x1715)))
 (let ((?x1858 (stack ?x1856 ?x1529)))
 (let (($x1885 (= ?x1667 ?x1858)))
 (let (($x1868 ((_ is stack ) ?x1715)))
 (let (($x1869 (= c_____________ center-to-right)))
 (let (($x1870 (and $x1869 $x1868)))
 (let (($x1871 (= c_____________ center-to-left)))
 (let (($x1872 (and $x1871 $x1868)))
 (let ((?x1495 (left s_____________)))
 (let (($x1873 ((_ is stack ) ?x1495)))
 (let (($x1874 (= c_____________ left-to-right)))
 (let (($x1875 (and $x1874 $x1873)))
 (let (($x1906 (ite $x1875 $x1889 (ite $x1872 $x1889 (ite $x1870 $x1885 (ite $x1867 $x1886 (ite $x1865 $x1886 $x1889)))))))
 (let ((?x1713 (top ?x1495)))
 (let ((?x1852 (stack ?x1713 ?x1529)))
 (let (($x1881 (= ?x1667 ?x1852)))
 (let (($x1876 (= c_____________ left-to-center)))
 (let (($x1877 (and $x1876 $x1873)))
 (ite $x1877 $x1881 $x1906)))))))))))))))))))))))))))))))
(assert
 (let ((?x1715 (center s_____________)))
 (let ((?x1853 (center s______________)))
 (let (($x1891 (= ?x1853 ?x1715)))
 (let ((?x1529 (right s_____________)))
 (let ((?x1860 (top ?x1529)))
 (let ((?x1862 (stack ?x1860 ?x1715)))
 (let (($x1888 (= ?x1853 ?x1862)))
 (let (($x1863 ((_ is stack ) ?x1529)))
 (let (($x1864 (= c_____________ right-to-center)))
 (let (($x1865 (and $x1864 $x1863)))
 (let (($x1866 (= c_____________ right-to-left)))
 (let (($x1867 (and $x1866 $x1863)))
 (let ((?x1855 (rest ?x1715)))
 (let (($x1883 (= ?x1853 ?x1855)))
 (let (($x1868 ((_ is stack ) ?x1715)))
 (let (($x1869 (= c_____________ center-to-right)))
 (let (($x1870 (and $x1869 $x1868)))
 (let (($x1871 (= c_____________ center-to-left)))
 (let (($x1872 (and $x1871 $x1868)))
 (let ((?x1495 (left s_____________)))
 (let ((?x1713 (top ?x1495)))
 (let ((?x1854 (stack ?x1713 ?x1715)))
 (let (($x1882 (= ?x1853 ?x1854)))
 (let (($x1873 ((_ is stack ) ?x1495)))
 (let (($x1874 (= c_____________ left-to-right)))
 (let (($x1875 (and $x1874 $x1873)))
 (let (($x1905 (ite $x1875 $x1882 (ite $x1872 $x1883 (ite $x1870 $x1883 (ite $x1867 $x1891 (ite $x1865 $x1888 $x1891)))))))
 (let (($x1876 (= c_____________ left-to-center)))
 (let (($x1877 (and $x1876 $x1873)))
 (ite $x1877 $x1891 $x1905)))))))))))))))))))))))))))))))
(assert
 (let ((?x49 (stack A empty)))
 (let ((?x1667 (right s______________)))
 (let (($x1909 (= ?x1667 ?x49)))
 (let ((?x48 (stack D empty)))
 (let ((?x1853 (center s______________)))
 (let (($x1940 (= ?x1853 ?x48)))
 (let ((?x42 (stack I (stack B (stack E (stack M (stack J (stack K empty))))))))
 (let ((?x47 (stack H (stack F (stack C (stack G (stack L ?x42)))))))
 (let ((?x1633 (left s______________)))
 (let (($x1941 (= ?x1633 ?x47)))
 (let (($x1943 (not (and $x1941 $x1940 $x1909))))
 (not $x1943)))))))))))))
(check-sat)
(exit)
