(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(declare-fun c!16 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________ () Record_left_center_right)
(declare-fun c!17 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________________ () Record_left_center_right)
(declare-fun c!18 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________________ () Record_left_center_right)
(declare-fun c!19 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x30 (stack M empty)))
 (let ((?x29 (stack I ?x30)))
 (let ((?x31 (stack P ?x29)))
 (let ((?x32 (stack F ?x31)))
 (let ((?x33 (stack J ?x32)))
 (let ((?x34 (stack O ?x33)))
 (let ((?x35 (stack Q ?x34)))
 (let ((?x36 (stack K ?x35)))
 (let ((?x37 (stack E ?x36)))
 (let ((?x38 (stack C ?x37)))
 (let ((?x39 (stack A ?x38)))
 (let ((?x40 (stack G ?x39)))
 (let ((?x41 (stack B ?x40)))
 (let ((?x42 (stack H ?x41)))
 (let ((?x109 (left s_tmp_)))
 (= ?x109 ?x42)))))))))))))))))
(assert
 (let ((?x112 (center s_tmp__)))
 (= ?x112 empty)))
(assert
 (let ((?x43 (stack D empty)))
 (let ((?x44 (stack L ?x43)))
 (let ((?x45 (stack N ?x44)))
 (let ((?x115 (right s_tmp___)))
 (= ?x115 ?x45))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x142 (left s_tmp__)))
 (= (left s_tmp___) ?x142)))
(assert
 (let ((?x112 (center s_tmp__)))
 (= (center s_tmp___) ?x112)))
(assert
 (let ((?x146 (center s_tmp_)))
 (= ?x146 (center s_tmp))))
(assert
 (let ((?x149 (right s_tmp_)))
 (= ?x149 (right s_tmp))))
(assert
 (let ((?x109 (left s_tmp_)))
 (let ((?x142 (left s_tmp__)))
 (= ?x142 ?x109))))
(assert
 (let ((?x149 (right s_tmp_)))
 (let ((?x153 (right s_tmp__)))
 (= ?x153 ?x149))))
(assert
 (= c__ c!1))
(assert
 (let ((?x86 (left s_)))
 (let ((?x269 (left s__)))
 (let (($x293 (= ?x269 ?x86)))
 (let ((?x89 (right s_)))
 (let (($x263 ((_ is stack ) ?x89)))
 (let (($x284 (= c_ right-to-left)))
 (let (($x258 (and $x284 $x263)))
 (let ((?x91 (center s_)))
 (let (($x259 ((_ is stack ) ?x91)))
 (let (($x270 (and (= c_ center-to-right) $x259)))
 (let (($x272 (and (= c_ center-to-left) $x259)))
 (let (($x302 (ite $x272 (= ?x269 (stack (top ?x91) ?x86)) (ite $x270 $x293 (ite $x258 (= ?x269 (stack (top ?x89) ?x86)) $x293)))))
 (let (($x250 (= ?x269 (rest ?x86))))
 (let (($x273 ((_ is stack ) ?x86)))
 (let (($x274 (= c_ left-to-right)))
 (let (($x275 (and $x274 $x273)))
 (let (($x279 (= c_ left-to-center)))
 (let (($x280 (and $x279 $x273)))
 (ite $x280 $x250 (ite $x275 $x250 $x302)))))))))))))))))))))
(assert
 (let ((?x89 (right s_)))
 (let ((?x265 (right s__)))
 (let (($x289 (= ?x265 ?x89)))
 (let (($x286 (= ?x265 (rest ?x89))))
 (let (($x263 ((_ is stack ) ?x89)))
 (let (($x282 (= c_ right-to-center)))
 (let (($x283 (and $x282 $x263)))
 (let (($x284 (= c_ right-to-left)))
 (let (($x258 (and $x284 $x263)))
 (let ((?x91 (center s_)))
 (let (($x259 ((_ is stack ) ?x91)))
 (let (($x270 (and (= c_ center-to-right) $x259)))
 (let (($x299 (ite $x270 (= ?x265 (stack (top ?x91) ?x89)) (ite $x258 $x286 (ite $x283 $x286 $x289)))))
 (let (($x272 (and (= c_ center-to-left) $x259)))
 (let ((?x86 (left s_)))
 (let (($x273 ((_ is stack ) ?x86)))
 (let (($x274 (= c_ left-to-right)))
 (let (($x275 (and $x274 $x273)))
 (let (($x279 (= c_ left-to-center)))
 (let (($x280 (and $x279 $x273)))
 (ite $x280 (= ?x265 (stack (top ?x86) ?x89)) (ite $x275 $x289 (ite $x272 $x289 $x299))))))))))))))))))))))))
(assert
 (let ((?x91 (center s_)))
 (let ((?x256 (center s__)))
 (let (($x291 (= ?x256 ?x91)))
 (let ((?x89 (right s_)))
 (let (($x263 ((_ is stack ) ?x89)))
 (let (($x282 (= c_ right-to-center)))
 (let (($x283 (and $x282 $x263)))
 (let (($x284 (= c_ right-to-left)))
 (let (($x258 (and $x284 $x263)))
 (let (($x253 (= ?x256 (rest ?x91))))
 (let (($x259 ((_ is stack ) ?x91)))
 (let (($x270 (and (= c_ center-to-right) $x259)))
 (let (($x298 (ite $x270 $x253 (ite $x258 $x291 (ite $x283 (= ?x256 (stack (top ?x89) ?x91)) $x291)))))
 (let (($x272 (and (= c_ center-to-left) $x259)))
 (let ((?x86 (left s_)))
 (let (($x273 ((_ is stack ) ?x86)))
 (let (($x274 (= c_ left-to-right)))
 (let (($x275 (and $x274 $x273)))
 (let (($x279 (= c_ left-to-center)))
 (let (($x280 (and $x279 $x273)))
 (ite $x280 $x291 (ite $x275 (= ?x256 (stack (top ?x86) ?x91)) (ite $x272 $x253 $x298))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x269 (left s__)))
 (let ((?x156 (left s___)))
 (let (($x405 (= ?x156 ?x269)))
 (let ((?x265 (right s__)))
 (let ((?x372 (top ?x265)))
 (let ((?x373 (stack ?x372 ?x269)))
 (let (($x399 (= ?x156 ?x373)))
 (let (($x375 ((_ is stack ) ?x265)))
 (let (($x378 (= c__ right-to-left)))
 (let (($x379 (and $x378 $x375)))
 (let ((?x256 (center s__)))
 (let (($x380 ((_ is stack ) ?x256)))
 (let (($x381 (= c__ center-to-right)))
 (let (($x382 (and $x381 $x380)))
 (let ((?x368 (top ?x256)))
 (let ((?x369 (stack ?x368 ?x269)))
 (let (($x396 (= ?x156 ?x369)))
 (let (($x383 (= c__ center-to-left)))
 (let (($x384 (and $x383 $x380)))
 (let ((?x158 (rest ?x269)))
 (let (($x392 (= ?x156 ?x158)))
 (let (($x385 ((_ is stack ) ?x269)))
 (let (($x386 (= c__ left-to-right)))
 (let (($x387 (and $x386 $x385)))
 (let (($x388 (= c__ left-to-center)))
 (let (($x389 (and $x388 $x385)))
 (ite $x389 $x392 (ite $x387 $x392 (ite $x384 $x396 (ite $x382 $x405 (ite $x379 $x399 $x405))))))))))))))))))))))))))))))))
(assert
 (let ((?x265 (right s__)))
 (let ((?x159 (right s___)))
 (let (($x401 (= ?x159 ?x265)))
 (let ((?x371 (rest ?x265)))
 (let (($x398 (= ?x159 ?x371)))
 (let (($x375 ((_ is stack ) ?x265)))
 (let (($x376 (= c__ right-to-center)))
 (let (($x377 (and $x376 $x375)))
 (let (($x378 (= c__ right-to-left)))
 (let (($x379 (and $x378 $x375)))
 (let ((?x256 (center s__)))
 (let ((?x368 (top ?x256)))
 (let ((?x370 (stack ?x368 ?x265)))
 (let (($x397 (= ?x159 ?x370)))
 (let (($x380 ((_ is stack ) ?x256)))
 (let (($x381 (= c__ center-to-right)))
 (let (($x382 (and $x381 $x380)))
 (let (($x383 (= c__ center-to-left)))
 (let (($x384 (and $x383 $x380)))
 (let ((?x269 (left s__)))
 (let (($x385 ((_ is stack ) ?x269)))
 (let (($x386 (= c__ left-to-right)))
 (let (($x387 (and $x386 $x385)))
 (let (($x418 (ite $x387 $x401 (ite $x384 $x401 (ite $x382 $x397 (ite $x379 $x398 (ite $x377 $x398 $x401)))))))
 (let ((?x245 (top ?x269)))
 (let ((?x364 (stack ?x245 ?x265)))
 (let (($x393 (= ?x159 ?x364)))
 (let (($x388 (= c__ left-to-center)))
 (let (($x389 (and $x388 $x385)))
 (ite $x389 $x393 $x418)))))))))))))))))))))))))))))))
(assert
 (let ((?x256 (center s__)))
 (let ((?x365 (center s___)))
 (let (($x403 (= ?x365 ?x256)))
 (let ((?x265 (right s__)))
 (let ((?x372 (top ?x265)))
 (let ((?x374 (stack ?x372 ?x256)))
 (let (($x400 (= ?x365 ?x374)))
 (let (($x375 ((_ is stack ) ?x265)))
 (let (($x376 (= c__ right-to-center)))
 (let (($x377 (and $x376 $x375)))
 (let (($x378 (= c__ right-to-left)))
 (let (($x379 (and $x378 $x375)))
 (let ((?x367 (rest ?x256)))
 (let (($x395 (= ?x365 ?x367)))
 (let (($x380 ((_ is stack ) ?x256)))
 (let (($x381 (= c__ center-to-right)))
 (let (($x382 (and $x381 $x380)))
 (let (($x383 (= c__ center-to-left)))
 (let (($x384 (and $x383 $x380)))
 (let ((?x269 (left s__)))
 (let ((?x245 (top ?x269)))
 (let ((?x366 (stack ?x245 ?x256)))
 (let (($x394 (= ?x365 ?x366)))
 (let (($x385 ((_ is stack ) ?x269)))
 (let (($x386 (= c__ left-to-right)))
 (let (($x387 (and $x386 $x385)))
 (let (($x417 (ite $x387 $x394 (ite $x384 $x395 (ite $x382 $x395 (ite $x379 $x403 (ite $x377 $x400 $x403)))))))
 (let (($x388 (= c__ left-to-center)))
 (let (($x389 (and $x388 $x385)))
 (ite $x389 $x403 $x417)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x156 (left s___)))
 (let ((?x309 (left s____)))
 (let (($x543 (= ?x309 ?x156)))
 (let ((?x159 (right s___)))
 (let ((?x510 (top ?x159)))
 (let ((?x511 (stack ?x510 ?x156)))
 (let (($x537 (= ?x309 ?x511)))
 (let (($x513 ((_ is stack ) ?x159)))
 (let (($x516 (= c___ right-to-left)))
 (let (($x517 (and $x516 $x513)))
 (let ((?x365 (center s___)))
 (let (($x518 ((_ is stack ) ?x365)))
 (let (($x519 (= c___ center-to-right)))
 (let (($x520 (and $x519 $x518)))
 (let ((?x506 (top ?x365)))
 (let ((?x507 (stack ?x506 ?x156)))
 (let (($x534 (= ?x309 ?x507)))
 (let (($x521 (= c___ center-to-left)))
 (let (($x522 (and $x521 $x518)))
 (let ((?x341 (rest ?x156)))
 (let (($x530 (= ?x309 ?x341)))
 (let (($x523 ((_ is stack ) ?x156)))
 (let (($x524 (= c___ left-to-right)))
 (let (($x525 (and $x524 $x523)))
 (let (($x526 (= c___ left-to-center)))
 (let (($x527 (and $x526 $x523)))
 (ite $x527 $x530 (ite $x525 $x530 (ite $x522 $x534 (ite $x520 $x543 (ite $x517 $x537 $x543))))))))))))))))))))))))))))))))
(assert
 (let ((?x159 (right s___)))
 (let ((?x342 (right s____)))
 (let (($x539 (= ?x342 ?x159)))
 (let ((?x509 (rest ?x159)))
 (let (($x536 (= ?x342 ?x509)))
 (let (($x513 ((_ is stack ) ?x159)))
 (let (($x514 (= c___ right-to-center)))
 (let (($x515 (and $x514 $x513)))
 (let (($x516 (= c___ right-to-left)))
 (let (($x517 (and $x516 $x513)))
 (let ((?x365 (center s___)))
 (let ((?x506 (top ?x365)))
 (let ((?x508 (stack ?x506 ?x159)))
 (let (($x535 (= ?x342 ?x508)))
 (let (($x518 ((_ is stack ) ?x365)))
 (let (($x519 (= c___ center-to-right)))
 (let (($x520 (and $x519 $x518)))
 (let (($x521 (= c___ center-to-left)))
 (let (($x522 (and $x521 $x518)))
 (let ((?x156 (left s___)))
 (let (($x523 ((_ is stack ) ?x156)))
 (let (($x524 (= c___ left-to-right)))
 (let (($x525 (and $x524 $x523)))
 (let (($x556 (ite $x525 $x539 (ite $x522 $x539 (ite $x520 $x535 (ite $x517 $x536 (ite $x515 $x536 $x539)))))))
 (let ((?x363 (top ?x156)))
 (let ((?x502 (stack ?x363 ?x159)))
 (let (($x531 (= ?x342 ?x502)))
 (let (($x526 (= c___ left-to-center)))
 (let (($x527 (and $x526 $x523)))
 (ite $x527 $x531 $x556)))))))))))))))))))))))))))))))
(assert
 (let ((?x365 (center s___)))
 (let ((?x503 (center s____)))
 (let (($x541 (= ?x503 ?x365)))
 (let ((?x159 (right s___)))
 (let ((?x510 (top ?x159)))
 (let ((?x512 (stack ?x510 ?x365)))
 (let (($x538 (= ?x503 ?x512)))
 (let (($x513 ((_ is stack ) ?x159)))
 (let (($x514 (= c___ right-to-center)))
 (let (($x515 (and $x514 $x513)))
 (let (($x516 (= c___ right-to-left)))
 (let (($x517 (and $x516 $x513)))
 (let ((?x505 (rest ?x365)))
 (let (($x533 (= ?x503 ?x505)))
 (let (($x518 ((_ is stack ) ?x365)))
 (let (($x519 (= c___ center-to-right)))
 (let (($x520 (and $x519 $x518)))
 (let (($x521 (= c___ center-to-left)))
 (let (($x522 (and $x521 $x518)))
 (let ((?x156 (left s___)))
 (let ((?x363 (top ?x156)))
 (let ((?x504 (stack ?x363 ?x365)))
 (let (($x532 (= ?x503 ?x504)))
 (let (($x523 ((_ is stack ) ?x156)))
 (let (($x524 (= c___ left-to-right)))
 (let (($x525 (and $x524 $x523)))
 (let (($x555 (ite $x525 $x532 (ite $x522 $x533 (ite $x520 $x533 (ite $x517 $x541 (ite $x515 $x538 $x541)))))))
 (let (($x526 (= c___ left-to-center)))
 (let (($x527 (and $x526 $x523)))
 (ite $x527 $x541 $x555)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x309 (left s____)))
 (let ((?x421 (left s_____)))
 (let (($x681 (= ?x421 ?x309)))
 (let ((?x342 (right s____)))
 (let ((?x648 (top ?x342)))
 (let ((?x649 (stack ?x648 ?x309)))
 (let (($x675 (= ?x421 ?x649)))
 (let (($x651 ((_ is stack ) ?x342)))
 (let (($x654 (= c____ right-to-left)))
 (let (($x655 (and $x654 $x651)))
 (let ((?x503 (center s____)))
 (let (($x656 ((_ is stack ) ?x503)))
 (let (($x657 (= c____ center-to-right)))
 (let (($x658 (and $x657 $x656)))
 (let ((?x644 (top ?x503)))
 (let ((?x645 (stack ?x644 ?x309)))
 (let (($x672 (= ?x421 ?x645)))
 (let (($x659 (= c____ center-to-left)))
 (let (($x660 (and $x659 $x656)))
 (let ((?x454 (rest ?x309)))
 (let (($x668 (= ?x421 ?x454)))
 (let (($x661 ((_ is stack ) ?x309)))
 (let (($x662 (= c____ left-to-right)))
 (let (($x663 (and $x662 $x661)))
 (let (($x664 (= c____ left-to-center)))
 (let (($x665 (and $x664 $x661)))
 (ite $x665 $x668 (ite $x663 $x668 (ite $x660 $x672 (ite $x658 $x681 (ite $x655 $x675 $x681))))))))))))))))))))))))))))))))
(assert
 (let ((?x342 (right s____)))
 (let ((?x455 (right s_____)))
 (let (($x677 (= ?x455 ?x342)))
 (let ((?x647 (rest ?x342)))
 (let (($x674 (= ?x455 ?x647)))
 (let (($x651 ((_ is stack ) ?x342)))
 (let (($x652 (= c____ right-to-center)))
 (let (($x653 (and $x652 $x651)))
 (let (($x654 (= c____ right-to-left)))
 (let (($x655 (and $x654 $x651)))
 (let ((?x503 (center s____)))
 (let ((?x644 (top ?x503)))
 (let ((?x646 (stack ?x644 ?x342)))
 (let (($x673 (= ?x455 ?x646)))
 (let (($x656 ((_ is stack ) ?x503)))
 (let (($x657 (= c____ center-to-right)))
 (let (($x658 (and $x657 $x656)))
 (let (($x659 (= c____ center-to-left)))
 (let (($x660 (and $x659 $x656)))
 (let ((?x309 (left s____)))
 (let (($x661 ((_ is stack ) ?x309)))
 (let (($x662 (= c____ left-to-right)))
 (let (($x663 (and $x662 $x661)))
 (let (($x694 (ite $x663 $x677 (ite $x660 $x677 (ite $x658 $x673 (ite $x655 $x674 (ite $x653 $x674 $x677)))))))
 (let ((?x501 (top ?x309)))
 (let ((?x640 (stack ?x501 ?x342)))
 (let (($x669 (= ?x455 ?x640)))
 (let (($x664 (= c____ left-to-center)))
 (let (($x665 (and $x664 $x661)))
 (ite $x665 $x669 $x694)))))))))))))))))))))))))))))))
(assert
 (let ((?x503 (center s____)))
 (let ((?x641 (center s_____)))
 (let (($x679 (= ?x641 ?x503)))
 (let ((?x342 (right s____)))
 (let ((?x648 (top ?x342)))
 (let ((?x650 (stack ?x648 ?x503)))
 (let (($x676 (= ?x641 ?x650)))
 (let (($x651 ((_ is stack ) ?x342)))
 (let (($x652 (= c____ right-to-center)))
 (let (($x653 (and $x652 $x651)))
 (let (($x654 (= c____ right-to-left)))
 (let (($x655 (and $x654 $x651)))
 (let ((?x643 (rest ?x503)))
 (let (($x671 (= ?x641 ?x643)))
 (let (($x656 ((_ is stack ) ?x503)))
 (let (($x657 (= c____ center-to-right)))
 (let (($x658 (and $x657 $x656)))
 (let (($x659 (= c____ center-to-left)))
 (let (($x660 (and $x659 $x656)))
 (let ((?x309 (left s____)))
 (let ((?x501 (top ?x309)))
 (let ((?x642 (stack ?x501 ?x503)))
 (let (($x670 (= ?x641 ?x642)))
 (let (($x661 ((_ is stack ) ?x309)))
 (let (($x662 (= c____ left-to-right)))
 (let (($x663 (and $x662 $x661)))
 (let (($x693 (ite $x663 $x670 (ite $x660 $x671 (ite $x658 $x671 (ite $x655 $x679 (ite $x653 $x676 $x679)))))))
 (let (($x664 (= c____ left-to-center)))
 (let (($x665 (and $x664 $x661)))
 (ite $x665 $x679 $x693)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x421 (left s_____)))
 (let ((?x559 (left s______)))
 (let (($x819 (= ?x559 ?x421)))
 (let ((?x455 (right s_____)))
 (let ((?x786 (top ?x455)))
 (let ((?x787 (stack ?x786 ?x421)))
 (let (($x813 (= ?x559 ?x787)))
 (let (($x789 ((_ is stack ) ?x455)))
 (let (($x792 (= c_____ right-to-left)))
 (let (($x793 (and $x792 $x789)))
 (let ((?x641 (center s_____)))
 (let (($x794 ((_ is stack ) ?x641)))
 (let (($x795 (= c_____ center-to-right)))
 (let (($x796 (and $x795 $x794)))
 (let ((?x782 (top ?x641)))
 (let ((?x783 (stack ?x782 ?x421)))
 (let (($x810 (= ?x559 ?x783)))
 (let (($x797 (= c_____ center-to-left)))
 (let (($x798 (and $x797 $x794)))
 (let ((?x592 (rest ?x421)))
 (let (($x806 (= ?x559 ?x592)))
 (let (($x799 ((_ is stack ) ?x421)))
 (let (($x800 (= c_____ left-to-right)))
 (let (($x801 (and $x800 $x799)))
 (let (($x802 (= c_____ left-to-center)))
 (let (($x803 (and $x802 $x799)))
 (ite $x803 $x806 (ite $x801 $x806 (ite $x798 $x810 (ite $x796 $x819 (ite $x793 $x813 $x819))))))))))))))))))))))))))))))))
(assert
 (let ((?x455 (right s_____)))
 (let ((?x593 (right s______)))
 (let (($x815 (= ?x593 ?x455)))
 (let ((?x785 (rest ?x455)))
 (let (($x812 (= ?x593 ?x785)))
 (let (($x789 ((_ is stack ) ?x455)))
 (let (($x790 (= c_____ right-to-center)))
 (let (($x791 (and $x790 $x789)))
 (let (($x792 (= c_____ right-to-left)))
 (let (($x793 (and $x792 $x789)))
 (let ((?x641 (center s_____)))
 (let ((?x782 (top ?x641)))
 (let ((?x784 (stack ?x782 ?x455)))
 (let (($x811 (= ?x593 ?x784)))
 (let (($x794 ((_ is stack ) ?x641)))
 (let (($x795 (= c_____ center-to-right)))
 (let (($x796 (and $x795 $x794)))
 (let (($x797 (= c_____ center-to-left)))
 (let (($x798 (and $x797 $x794)))
 (let ((?x421 (left s_____)))
 (let (($x799 ((_ is stack ) ?x421)))
 (let (($x800 (= c_____ left-to-right)))
 (let (($x801 (and $x800 $x799)))
 (let (($x832 (ite $x801 $x815 (ite $x798 $x815 (ite $x796 $x811 (ite $x793 $x812 (ite $x791 $x812 $x815)))))))
 (let ((?x639 (top ?x421)))
 (let ((?x778 (stack ?x639 ?x455)))
 (let (($x807 (= ?x593 ?x778)))
 (let (($x802 (= c_____ left-to-center)))
 (let (($x803 (and $x802 $x799)))
 (ite $x803 $x807 $x832)))))))))))))))))))))))))))))))
(assert
 (let ((?x641 (center s_____)))
 (let ((?x779 (center s______)))
 (let (($x817 (= ?x779 ?x641)))
 (let ((?x455 (right s_____)))
 (let ((?x786 (top ?x455)))
 (let ((?x788 (stack ?x786 ?x641)))
 (let (($x814 (= ?x779 ?x788)))
 (let (($x789 ((_ is stack ) ?x455)))
 (let (($x790 (= c_____ right-to-center)))
 (let (($x791 (and $x790 $x789)))
 (let (($x792 (= c_____ right-to-left)))
 (let (($x793 (and $x792 $x789)))
 (let ((?x781 (rest ?x641)))
 (let (($x809 (= ?x779 ?x781)))
 (let (($x794 ((_ is stack ) ?x641)))
 (let (($x795 (= c_____ center-to-right)))
 (let (($x796 (and $x795 $x794)))
 (let (($x797 (= c_____ center-to-left)))
 (let (($x798 (and $x797 $x794)))
 (let ((?x421 (left s_____)))
 (let ((?x639 (top ?x421)))
 (let ((?x780 (stack ?x639 ?x641)))
 (let (($x808 (= ?x779 ?x780)))
 (let (($x799 ((_ is stack ) ?x421)))
 (let (($x800 (= c_____ left-to-right)))
 (let (($x801 (and $x800 $x799)))
 (let (($x831 (ite $x801 $x808 (ite $x798 $x809 (ite $x796 $x809 (ite $x793 $x817 (ite $x791 $x814 $x817)))))))
 (let (($x802 (= c_____ left-to-center)))
 (let (($x803 (and $x802 $x799)))
 (ite $x803 $x817 $x831)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x559 (left s______)))
 (let ((?x697 (left s_______)))
 (let (($x957 (= ?x697 ?x559)))
 (let ((?x593 (right s______)))
 (let ((?x924 (top ?x593)))
 (let ((?x925 (stack ?x924 ?x559)))
 (let (($x951 (= ?x697 ?x925)))
 (let (($x927 ((_ is stack ) ?x593)))
 (let (($x930 (= c______ right-to-left)))
 (let (($x931 (and $x930 $x927)))
 (let ((?x779 (center s______)))
 (let (($x932 ((_ is stack ) ?x779)))
 (let (($x933 (= c______ center-to-right)))
 (let (($x934 (and $x933 $x932)))
 (let ((?x920 (top ?x779)))
 (let ((?x921 (stack ?x920 ?x559)))
 (let (($x948 (= ?x697 ?x921)))
 (let (($x935 (= c______ center-to-left)))
 (let (($x936 (and $x935 $x932)))
 (let ((?x730 (rest ?x559)))
 (let (($x944 (= ?x697 ?x730)))
 (let (($x937 ((_ is stack ) ?x559)))
 (let (($x938 (= c______ left-to-right)))
 (let (($x939 (and $x938 $x937)))
 (let (($x940 (= c______ left-to-center)))
 (let (($x941 (and $x940 $x937)))
 (ite $x941 $x944 (ite $x939 $x944 (ite $x936 $x948 (ite $x934 $x957 (ite $x931 $x951 $x957))))))))))))))))))))))))))))))))
(assert
 (let ((?x593 (right s______)))
 (let ((?x731 (right s_______)))
 (let (($x953 (= ?x731 ?x593)))
 (let ((?x923 (rest ?x593)))
 (let (($x950 (= ?x731 ?x923)))
 (let (($x927 ((_ is stack ) ?x593)))
 (let (($x928 (= c______ right-to-center)))
 (let (($x929 (and $x928 $x927)))
 (let (($x930 (= c______ right-to-left)))
 (let (($x931 (and $x930 $x927)))
 (let ((?x779 (center s______)))
 (let ((?x920 (top ?x779)))
 (let ((?x922 (stack ?x920 ?x593)))
 (let (($x949 (= ?x731 ?x922)))
 (let (($x932 ((_ is stack ) ?x779)))
 (let (($x933 (= c______ center-to-right)))
 (let (($x934 (and $x933 $x932)))
 (let (($x935 (= c______ center-to-left)))
 (let (($x936 (and $x935 $x932)))
 (let ((?x559 (left s______)))
 (let (($x937 ((_ is stack ) ?x559)))
 (let (($x938 (= c______ left-to-right)))
 (let (($x939 (and $x938 $x937)))
 (let (($x970 (ite $x939 $x953 (ite $x936 $x953 (ite $x934 $x949 (ite $x931 $x950 (ite $x929 $x950 $x953)))))))
 (let ((?x777 (top ?x559)))
 (let ((?x916 (stack ?x777 ?x593)))
 (let (($x945 (= ?x731 ?x916)))
 (let (($x940 (= c______ left-to-center)))
 (let (($x941 (and $x940 $x937)))
 (ite $x941 $x945 $x970)))))))))))))))))))))))))))))))
(assert
 (let ((?x779 (center s______)))
 (let ((?x917 (center s_______)))
 (let (($x955 (= ?x917 ?x779)))
 (let ((?x593 (right s______)))
 (let ((?x924 (top ?x593)))
 (let ((?x926 (stack ?x924 ?x779)))
 (let (($x952 (= ?x917 ?x926)))
 (let (($x927 ((_ is stack ) ?x593)))
 (let (($x928 (= c______ right-to-center)))
 (let (($x929 (and $x928 $x927)))
 (let (($x930 (= c______ right-to-left)))
 (let (($x931 (and $x930 $x927)))
 (let ((?x919 (rest ?x779)))
 (let (($x947 (= ?x917 ?x919)))
 (let (($x932 ((_ is stack ) ?x779)))
 (let (($x933 (= c______ center-to-right)))
 (let (($x934 (and $x933 $x932)))
 (let (($x935 (= c______ center-to-left)))
 (let (($x936 (and $x935 $x932)))
 (let ((?x559 (left s______)))
 (let ((?x777 (top ?x559)))
 (let ((?x918 (stack ?x777 ?x779)))
 (let (($x946 (= ?x917 ?x918)))
 (let (($x937 ((_ is stack ) ?x559)))
 (let (($x938 (= c______ left-to-right)))
 (let (($x939 (and $x938 $x937)))
 (let (($x969 (ite $x939 $x946 (ite $x936 $x947 (ite $x934 $x947 (ite $x931 $x955 (ite $x929 $x952 $x955)))))))
 (let (($x940 (= c______ left-to-center)))
 (let (($x941 (and $x940 $x937)))
 (ite $x941 $x955 $x969)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x697 (left s_______)))
 (let ((?x835 (left s________)))
 (let (($x1095 (= ?x835 ?x697)))
 (let ((?x731 (right s_______)))
 (let ((?x1062 (top ?x731)))
 (let ((?x1063 (stack ?x1062 ?x697)))
 (let (($x1089 (= ?x835 ?x1063)))
 (let (($x1065 ((_ is stack ) ?x731)))
 (let (($x1068 (= c_______ right-to-left)))
 (let (($x1069 (and $x1068 $x1065)))
 (let ((?x917 (center s_______)))
 (let (($x1070 ((_ is stack ) ?x917)))
 (let (($x1071 (= c_______ center-to-right)))
 (let (($x1072 (and $x1071 $x1070)))
 (let ((?x1058 (top ?x917)))
 (let ((?x1059 (stack ?x1058 ?x697)))
 (let (($x1086 (= ?x835 ?x1059)))
 (let (($x1073 (= c_______ center-to-left)))
 (let (($x1074 (and $x1073 $x1070)))
 (let ((?x868 (rest ?x697)))
 (let (($x1082 (= ?x835 ?x868)))
 (let (($x1075 ((_ is stack ) ?x697)))
 (let (($x1076 (= c_______ left-to-right)))
 (let (($x1077 (and $x1076 $x1075)))
 (let (($x1078 (= c_______ left-to-center)))
 (let (($x1079 (and $x1078 $x1075)))
 (ite $x1079 $x1082 (ite $x1077 $x1082 (ite $x1074 $x1086 (ite $x1072 $x1095 (ite $x1069 $x1089 $x1095))))))))))))))))))))))))))))))))
(assert
 (let ((?x731 (right s_______)))
 (let ((?x869 (right s________)))
 (let (($x1091 (= ?x869 ?x731)))
 (let ((?x1061 (rest ?x731)))
 (let (($x1088 (= ?x869 ?x1061)))
 (let (($x1065 ((_ is stack ) ?x731)))
 (let (($x1066 (= c_______ right-to-center)))
 (let (($x1067 (and $x1066 $x1065)))
 (let (($x1068 (= c_______ right-to-left)))
 (let (($x1069 (and $x1068 $x1065)))
 (let ((?x917 (center s_______)))
 (let ((?x1058 (top ?x917)))
 (let ((?x1060 (stack ?x1058 ?x731)))
 (let (($x1087 (= ?x869 ?x1060)))
 (let (($x1070 ((_ is stack ) ?x917)))
 (let (($x1071 (= c_______ center-to-right)))
 (let (($x1072 (and $x1071 $x1070)))
 (let (($x1073 (= c_______ center-to-left)))
 (let (($x1074 (and $x1073 $x1070)))
 (let ((?x697 (left s_______)))
 (let (($x1075 ((_ is stack ) ?x697)))
 (let (($x1076 (= c_______ left-to-right)))
 (let (($x1077 (and $x1076 $x1075)))
 (let (($x1108 (ite $x1077 $x1091 (ite $x1074 $x1091 (ite $x1072 $x1087 (ite $x1069 $x1088 (ite $x1067 $x1088 $x1091)))))))
 (let ((?x915 (top ?x697)))
 (let ((?x1054 (stack ?x915 ?x731)))
 (let (($x1083 (= ?x869 ?x1054)))
 (let (($x1078 (= c_______ left-to-center)))
 (let (($x1079 (and $x1078 $x1075)))
 (ite $x1079 $x1083 $x1108)))))))))))))))))))))))))))))))
(assert
 (let ((?x917 (center s_______)))
 (let ((?x1055 (center s________)))
 (let (($x1093 (= ?x1055 ?x917)))
 (let ((?x731 (right s_______)))
 (let ((?x1062 (top ?x731)))
 (let ((?x1064 (stack ?x1062 ?x917)))
 (let (($x1090 (= ?x1055 ?x1064)))
 (let (($x1065 ((_ is stack ) ?x731)))
 (let (($x1066 (= c_______ right-to-center)))
 (let (($x1067 (and $x1066 $x1065)))
 (let (($x1068 (= c_______ right-to-left)))
 (let (($x1069 (and $x1068 $x1065)))
 (let ((?x1057 (rest ?x917)))
 (let (($x1085 (= ?x1055 ?x1057)))
 (let (($x1070 ((_ is stack ) ?x917)))
 (let (($x1071 (= c_______ center-to-right)))
 (let (($x1072 (and $x1071 $x1070)))
 (let (($x1073 (= c_______ center-to-left)))
 (let (($x1074 (and $x1073 $x1070)))
 (let ((?x697 (left s_______)))
 (let ((?x915 (top ?x697)))
 (let ((?x1056 (stack ?x915 ?x917)))
 (let (($x1084 (= ?x1055 ?x1056)))
 (let (($x1075 ((_ is stack ) ?x697)))
 (let (($x1076 (= c_______ left-to-right)))
 (let (($x1077 (and $x1076 $x1075)))
 (let (($x1107 (ite $x1077 $x1084 (ite $x1074 $x1085 (ite $x1072 $x1085 (ite $x1069 $x1093 (ite $x1067 $x1090 $x1093)))))))
 (let (($x1078 (= c_______ left-to-center)))
 (let (($x1079 (and $x1078 $x1075)))
 (ite $x1079 $x1093 $x1107)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x835 (left s________)))
 (let ((?x973 (left s_________)))
 (let (($x1233 (= ?x973 ?x835)))
 (let ((?x869 (right s________)))
 (let ((?x1200 (top ?x869)))
 (let ((?x1201 (stack ?x1200 ?x835)))
 (let (($x1227 (= ?x973 ?x1201)))
 (let (($x1203 ((_ is stack ) ?x869)))
 (let (($x1206 (= c________ right-to-left)))
 (let (($x1207 (and $x1206 $x1203)))
 (let ((?x1055 (center s________)))
 (let (($x1208 ((_ is stack ) ?x1055)))
 (let (($x1209 (= c________ center-to-right)))
 (let (($x1210 (and $x1209 $x1208)))
 (let ((?x1196 (top ?x1055)))
 (let ((?x1197 (stack ?x1196 ?x835)))
 (let (($x1224 (= ?x973 ?x1197)))
 (let (($x1211 (= c________ center-to-left)))
 (let (($x1212 (and $x1211 $x1208)))
 (let ((?x1006 (rest ?x835)))
 (let (($x1220 (= ?x973 ?x1006)))
 (let (($x1213 ((_ is stack ) ?x835)))
 (let (($x1214 (= c________ left-to-right)))
 (let (($x1215 (and $x1214 $x1213)))
 (let (($x1216 (= c________ left-to-center)))
 (let (($x1217 (and $x1216 $x1213)))
 (ite $x1217 $x1220 (ite $x1215 $x1220 (ite $x1212 $x1224 (ite $x1210 $x1233 (ite $x1207 $x1227 $x1233))))))))))))))))))))))))))))))))
(assert
 (let ((?x869 (right s________)))
 (let ((?x1007 (right s_________)))
 (let (($x1229 (= ?x1007 ?x869)))
 (let ((?x1199 (rest ?x869)))
 (let (($x1226 (= ?x1007 ?x1199)))
 (let (($x1203 ((_ is stack ) ?x869)))
 (let (($x1204 (= c________ right-to-center)))
 (let (($x1205 (and $x1204 $x1203)))
 (let (($x1206 (= c________ right-to-left)))
 (let (($x1207 (and $x1206 $x1203)))
 (let ((?x1055 (center s________)))
 (let ((?x1196 (top ?x1055)))
 (let ((?x1198 (stack ?x1196 ?x869)))
 (let (($x1225 (= ?x1007 ?x1198)))
 (let (($x1208 ((_ is stack ) ?x1055)))
 (let (($x1209 (= c________ center-to-right)))
 (let (($x1210 (and $x1209 $x1208)))
 (let (($x1211 (= c________ center-to-left)))
 (let (($x1212 (and $x1211 $x1208)))
 (let ((?x835 (left s________)))
 (let (($x1213 ((_ is stack ) ?x835)))
 (let (($x1214 (= c________ left-to-right)))
 (let (($x1215 (and $x1214 $x1213)))
 (let (($x1246 (ite $x1215 $x1229 (ite $x1212 $x1229 (ite $x1210 $x1225 (ite $x1207 $x1226 (ite $x1205 $x1226 $x1229)))))))
 (let ((?x1053 (top ?x835)))
 (let ((?x1192 (stack ?x1053 ?x869)))
 (let (($x1221 (= ?x1007 ?x1192)))
 (let (($x1216 (= c________ left-to-center)))
 (let (($x1217 (and $x1216 $x1213)))
 (ite $x1217 $x1221 $x1246)))))))))))))))))))))))))))))))
(assert
 (let ((?x1055 (center s________)))
 (let ((?x1193 (center s_________)))
 (let (($x1231 (= ?x1193 ?x1055)))
 (let ((?x869 (right s________)))
 (let ((?x1200 (top ?x869)))
 (let ((?x1202 (stack ?x1200 ?x1055)))
 (let (($x1228 (= ?x1193 ?x1202)))
 (let (($x1203 ((_ is stack ) ?x869)))
 (let (($x1204 (= c________ right-to-center)))
 (let (($x1205 (and $x1204 $x1203)))
 (let (($x1206 (= c________ right-to-left)))
 (let (($x1207 (and $x1206 $x1203)))
 (let ((?x1195 (rest ?x1055)))
 (let (($x1223 (= ?x1193 ?x1195)))
 (let (($x1208 ((_ is stack ) ?x1055)))
 (let (($x1209 (= c________ center-to-right)))
 (let (($x1210 (and $x1209 $x1208)))
 (let (($x1211 (= c________ center-to-left)))
 (let (($x1212 (and $x1211 $x1208)))
 (let ((?x835 (left s________)))
 (let ((?x1053 (top ?x835)))
 (let ((?x1194 (stack ?x1053 ?x1055)))
 (let (($x1222 (= ?x1193 ?x1194)))
 (let (($x1213 ((_ is stack ) ?x835)))
 (let (($x1214 (= c________ left-to-right)))
 (let (($x1215 (and $x1214 $x1213)))
 (let (($x1245 (ite $x1215 $x1222 (ite $x1212 $x1223 (ite $x1210 $x1223 (ite $x1207 $x1231 (ite $x1205 $x1228 $x1231)))))))
 (let (($x1216 (= c________ left-to-center)))
 (let (($x1217 (and $x1216 $x1213)))
 (ite $x1217 $x1231 $x1245)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x973 (left s_________)))
 (let ((?x1111 (left s__________)))
 (let (($x1371 (= ?x1111 ?x973)))
 (let ((?x1007 (right s_________)))
 (let ((?x1338 (top ?x1007)))
 (let ((?x1339 (stack ?x1338 ?x973)))
 (let (($x1365 (= ?x1111 ?x1339)))
 (let (($x1341 ((_ is stack ) ?x1007)))
 (let (($x1344 (= c_________ right-to-left)))
 (let (($x1345 (and $x1344 $x1341)))
 (let ((?x1193 (center s_________)))
 (let (($x1346 ((_ is stack ) ?x1193)))
 (let (($x1347 (= c_________ center-to-right)))
 (let (($x1348 (and $x1347 $x1346)))
 (let ((?x1334 (top ?x1193)))
 (let ((?x1335 (stack ?x1334 ?x973)))
 (let (($x1362 (= ?x1111 ?x1335)))
 (let (($x1349 (= c_________ center-to-left)))
 (let (($x1350 (and $x1349 $x1346)))
 (let ((?x1144 (rest ?x973)))
 (let (($x1358 (= ?x1111 ?x1144)))
 (let (($x1351 ((_ is stack ) ?x973)))
 (let (($x1352 (= c_________ left-to-right)))
 (let (($x1353 (and $x1352 $x1351)))
 (let (($x1354 (= c_________ left-to-center)))
 (let (($x1355 (and $x1354 $x1351)))
 (ite $x1355 $x1358 (ite $x1353 $x1358 (ite $x1350 $x1362 (ite $x1348 $x1371 (ite $x1345 $x1365 $x1371))))))))))))))))))))))))))))))))
(assert
 (let ((?x1007 (right s_________)))
 (let ((?x1145 (right s__________)))
 (let (($x1367 (= ?x1145 ?x1007)))
 (let ((?x1337 (rest ?x1007)))
 (let (($x1364 (= ?x1145 ?x1337)))
 (let (($x1341 ((_ is stack ) ?x1007)))
 (let (($x1342 (= c_________ right-to-center)))
 (let (($x1343 (and $x1342 $x1341)))
 (let (($x1344 (= c_________ right-to-left)))
 (let (($x1345 (and $x1344 $x1341)))
 (let ((?x1193 (center s_________)))
 (let ((?x1334 (top ?x1193)))
 (let ((?x1336 (stack ?x1334 ?x1007)))
 (let (($x1363 (= ?x1145 ?x1336)))
 (let (($x1346 ((_ is stack ) ?x1193)))
 (let (($x1347 (= c_________ center-to-right)))
 (let (($x1348 (and $x1347 $x1346)))
 (let (($x1349 (= c_________ center-to-left)))
 (let (($x1350 (and $x1349 $x1346)))
 (let ((?x973 (left s_________)))
 (let (($x1351 ((_ is stack ) ?x973)))
 (let (($x1352 (= c_________ left-to-right)))
 (let (($x1353 (and $x1352 $x1351)))
 (let (($x1384 (ite $x1353 $x1367 (ite $x1350 $x1367 (ite $x1348 $x1363 (ite $x1345 $x1364 (ite $x1343 $x1364 $x1367)))))))
 (let ((?x1191 (top ?x973)))
 (let ((?x1330 (stack ?x1191 ?x1007)))
 (let (($x1359 (= ?x1145 ?x1330)))
 (let (($x1354 (= c_________ left-to-center)))
 (let (($x1355 (and $x1354 $x1351)))
 (ite $x1355 $x1359 $x1384)))))))))))))))))))))))))))))))
(assert
 (let ((?x1193 (center s_________)))
 (let ((?x1331 (center s__________)))
 (let (($x1369 (= ?x1331 ?x1193)))
 (let ((?x1007 (right s_________)))
 (let ((?x1338 (top ?x1007)))
 (let ((?x1340 (stack ?x1338 ?x1193)))
 (let (($x1366 (= ?x1331 ?x1340)))
 (let (($x1341 ((_ is stack ) ?x1007)))
 (let (($x1342 (= c_________ right-to-center)))
 (let (($x1343 (and $x1342 $x1341)))
 (let (($x1344 (= c_________ right-to-left)))
 (let (($x1345 (and $x1344 $x1341)))
 (let ((?x1333 (rest ?x1193)))
 (let (($x1361 (= ?x1331 ?x1333)))
 (let (($x1346 ((_ is stack ) ?x1193)))
 (let (($x1347 (= c_________ center-to-right)))
 (let (($x1348 (and $x1347 $x1346)))
 (let (($x1349 (= c_________ center-to-left)))
 (let (($x1350 (and $x1349 $x1346)))
 (let ((?x973 (left s_________)))
 (let ((?x1191 (top ?x973)))
 (let ((?x1332 (stack ?x1191 ?x1193)))
 (let (($x1360 (= ?x1331 ?x1332)))
 (let (($x1351 ((_ is stack ) ?x973)))
 (let (($x1352 (= c_________ left-to-right)))
 (let (($x1353 (and $x1352 $x1351)))
 (let (($x1383 (ite $x1353 $x1360 (ite $x1350 $x1361 (ite $x1348 $x1361 (ite $x1345 $x1369 (ite $x1343 $x1366 $x1369)))))))
 (let (($x1354 (= c_________ left-to-center)))
 (let (($x1355 (and $x1354 $x1351)))
 (ite $x1355 $x1369 $x1383)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1111 (left s__________)))
 (let ((?x1249 (left s___________)))
 (let (($x1509 (= ?x1249 ?x1111)))
 (let ((?x1145 (right s__________)))
 (let ((?x1476 (top ?x1145)))
 (let ((?x1477 (stack ?x1476 ?x1111)))
 (let (($x1503 (= ?x1249 ?x1477)))
 (let (($x1479 ((_ is stack ) ?x1145)))
 (let (($x1482 (= c__________ right-to-left)))
 (let (($x1483 (and $x1482 $x1479)))
 (let ((?x1331 (center s__________)))
 (let (($x1484 ((_ is stack ) ?x1331)))
 (let (($x1485 (= c__________ center-to-right)))
 (let (($x1486 (and $x1485 $x1484)))
 (let ((?x1472 (top ?x1331)))
 (let ((?x1473 (stack ?x1472 ?x1111)))
 (let (($x1500 (= ?x1249 ?x1473)))
 (let (($x1487 (= c__________ center-to-left)))
 (let (($x1488 (and $x1487 $x1484)))
 (let ((?x1282 (rest ?x1111)))
 (let (($x1496 (= ?x1249 ?x1282)))
 (let (($x1489 ((_ is stack ) ?x1111)))
 (let (($x1490 (= c__________ left-to-right)))
 (let (($x1491 (and $x1490 $x1489)))
 (let (($x1492 (= c__________ left-to-center)))
 (let (($x1493 (and $x1492 $x1489)))
 (ite $x1493 $x1496 (ite $x1491 $x1496 (ite $x1488 $x1500 (ite $x1486 $x1509 (ite $x1483 $x1503 $x1509))))))))))))))))))))))))))))))))
(assert
 (let ((?x1145 (right s__________)))
 (let ((?x1283 (right s___________)))
 (let (($x1505 (= ?x1283 ?x1145)))
 (let ((?x1475 (rest ?x1145)))
 (let (($x1502 (= ?x1283 ?x1475)))
 (let (($x1479 ((_ is stack ) ?x1145)))
 (let (($x1480 (= c__________ right-to-center)))
 (let (($x1481 (and $x1480 $x1479)))
 (let (($x1482 (= c__________ right-to-left)))
 (let (($x1483 (and $x1482 $x1479)))
 (let ((?x1331 (center s__________)))
 (let ((?x1472 (top ?x1331)))
 (let ((?x1474 (stack ?x1472 ?x1145)))
 (let (($x1501 (= ?x1283 ?x1474)))
 (let (($x1484 ((_ is stack ) ?x1331)))
 (let (($x1485 (= c__________ center-to-right)))
 (let (($x1486 (and $x1485 $x1484)))
 (let (($x1487 (= c__________ center-to-left)))
 (let (($x1488 (and $x1487 $x1484)))
 (let ((?x1111 (left s__________)))
 (let (($x1489 ((_ is stack ) ?x1111)))
 (let (($x1490 (= c__________ left-to-right)))
 (let (($x1491 (and $x1490 $x1489)))
 (let (($x1522 (ite $x1491 $x1505 (ite $x1488 $x1505 (ite $x1486 $x1501 (ite $x1483 $x1502 (ite $x1481 $x1502 $x1505)))))))
 (let ((?x1329 (top ?x1111)))
 (let ((?x1468 (stack ?x1329 ?x1145)))
 (let (($x1497 (= ?x1283 ?x1468)))
 (let (($x1492 (= c__________ left-to-center)))
 (let (($x1493 (and $x1492 $x1489)))
 (ite $x1493 $x1497 $x1522)))))))))))))))))))))))))))))))
(assert
 (let ((?x1331 (center s__________)))
 (let ((?x1469 (center s___________)))
 (let (($x1507 (= ?x1469 ?x1331)))
 (let ((?x1145 (right s__________)))
 (let ((?x1476 (top ?x1145)))
 (let ((?x1478 (stack ?x1476 ?x1331)))
 (let (($x1504 (= ?x1469 ?x1478)))
 (let (($x1479 ((_ is stack ) ?x1145)))
 (let (($x1480 (= c__________ right-to-center)))
 (let (($x1481 (and $x1480 $x1479)))
 (let (($x1482 (= c__________ right-to-left)))
 (let (($x1483 (and $x1482 $x1479)))
 (let ((?x1471 (rest ?x1331)))
 (let (($x1499 (= ?x1469 ?x1471)))
 (let (($x1484 ((_ is stack ) ?x1331)))
 (let (($x1485 (= c__________ center-to-right)))
 (let (($x1486 (and $x1485 $x1484)))
 (let (($x1487 (= c__________ center-to-left)))
 (let (($x1488 (and $x1487 $x1484)))
 (let ((?x1111 (left s__________)))
 (let ((?x1329 (top ?x1111)))
 (let ((?x1470 (stack ?x1329 ?x1331)))
 (let (($x1498 (= ?x1469 ?x1470)))
 (let (($x1489 ((_ is stack ) ?x1111)))
 (let (($x1490 (= c__________ left-to-right)))
 (let (($x1491 (and $x1490 $x1489)))
 (let (($x1521 (ite $x1491 $x1498 (ite $x1488 $x1499 (ite $x1486 $x1499 (ite $x1483 $x1507 (ite $x1481 $x1504 $x1507)))))))
 (let (($x1492 (= c__________ left-to-center)))
 (let (($x1493 (and $x1492 $x1489)))
 (ite $x1493 $x1507 $x1521)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1249 (left s___________)))
 (let ((?x1387 (left s____________)))
 (let (($x1647 (= ?x1387 ?x1249)))
 (let ((?x1283 (right s___________)))
 (let ((?x1614 (top ?x1283)))
 (let ((?x1615 (stack ?x1614 ?x1249)))
 (let (($x1641 (= ?x1387 ?x1615)))
 (let (($x1617 ((_ is stack ) ?x1283)))
 (let (($x1620 (= c___________ right-to-left)))
 (let (($x1621 (and $x1620 $x1617)))
 (let ((?x1469 (center s___________)))
 (let (($x1622 ((_ is stack ) ?x1469)))
 (let (($x1623 (= c___________ center-to-right)))
 (let (($x1624 (and $x1623 $x1622)))
 (let ((?x1610 (top ?x1469)))
 (let ((?x1611 (stack ?x1610 ?x1249)))
 (let (($x1638 (= ?x1387 ?x1611)))
 (let (($x1625 (= c___________ center-to-left)))
 (let (($x1626 (and $x1625 $x1622)))
 (let ((?x1420 (rest ?x1249)))
 (let (($x1634 (= ?x1387 ?x1420)))
 (let (($x1627 ((_ is stack ) ?x1249)))
 (let (($x1628 (= c___________ left-to-right)))
 (let (($x1629 (and $x1628 $x1627)))
 (let (($x1630 (= c___________ left-to-center)))
 (let (($x1631 (and $x1630 $x1627)))
 (ite $x1631 $x1634 (ite $x1629 $x1634 (ite $x1626 $x1638 (ite $x1624 $x1647 (ite $x1621 $x1641 $x1647))))))))))))))))))))))))))))))))
(assert
 (let ((?x1283 (right s___________)))
 (let ((?x1421 (right s____________)))
 (let (($x1643 (= ?x1421 ?x1283)))
 (let ((?x1613 (rest ?x1283)))
 (let (($x1640 (= ?x1421 ?x1613)))
 (let (($x1617 ((_ is stack ) ?x1283)))
 (let (($x1618 (= c___________ right-to-center)))
 (let (($x1619 (and $x1618 $x1617)))
 (let (($x1620 (= c___________ right-to-left)))
 (let (($x1621 (and $x1620 $x1617)))
 (let ((?x1469 (center s___________)))
 (let ((?x1610 (top ?x1469)))
 (let ((?x1612 (stack ?x1610 ?x1283)))
 (let (($x1639 (= ?x1421 ?x1612)))
 (let (($x1622 ((_ is stack ) ?x1469)))
 (let (($x1623 (= c___________ center-to-right)))
 (let (($x1624 (and $x1623 $x1622)))
 (let (($x1625 (= c___________ center-to-left)))
 (let (($x1626 (and $x1625 $x1622)))
 (let ((?x1249 (left s___________)))
 (let (($x1627 ((_ is stack ) ?x1249)))
 (let (($x1628 (= c___________ left-to-right)))
 (let (($x1629 (and $x1628 $x1627)))
 (let (($x1660 (ite $x1629 $x1643 (ite $x1626 $x1643 (ite $x1624 $x1639 (ite $x1621 $x1640 (ite $x1619 $x1640 $x1643)))))))
 (let ((?x1467 (top ?x1249)))
 (let ((?x1606 (stack ?x1467 ?x1283)))
 (let (($x1635 (= ?x1421 ?x1606)))
 (let (($x1630 (= c___________ left-to-center)))
 (let (($x1631 (and $x1630 $x1627)))
 (ite $x1631 $x1635 $x1660)))))))))))))))))))))))))))))))
(assert
 (let ((?x1469 (center s___________)))
 (let ((?x1607 (center s____________)))
 (let (($x1645 (= ?x1607 ?x1469)))
 (let ((?x1283 (right s___________)))
 (let ((?x1614 (top ?x1283)))
 (let ((?x1616 (stack ?x1614 ?x1469)))
 (let (($x1642 (= ?x1607 ?x1616)))
 (let (($x1617 ((_ is stack ) ?x1283)))
 (let (($x1618 (= c___________ right-to-center)))
 (let (($x1619 (and $x1618 $x1617)))
 (let (($x1620 (= c___________ right-to-left)))
 (let (($x1621 (and $x1620 $x1617)))
 (let ((?x1609 (rest ?x1469)))
 (let (($x1637 (= ?x1607 ?x1609)))
 (let (($x1622 ((_ is stack ) ?x1469)))
 (let (($x1623 (= c___________ center-to-right)))
 (let (($x1624 (and $x1623 $x1622)))
 (let (($x1625 (= c___________ center-to-left)))
 (let (($x1626 (and $x1625 $x1622)))
 (let ((?x1249 (left s___________)))
 (let ((?x1467 (top ?x1249)))
 (let ((?x1608 (stack ?x1467 ?x1469)))
 (let (($x1636 (= ?x1607 ?x1608)))
 (let (($x1627 ((_ is stack ) ?x1249)))
 (let (($x1628 (= c___________ left-to-right)))
 (let (($x1629 (and $x1628 $x1627)))
 (let (($x1659 (ite $x1629 $x1636 (ite $x1626 $x1637 (ite $x1624 $x1637 (ite $x1621 $x1645 (ite $x1619 $x1642 $x1645)))))))
 (let (($x1630 (= c___________ left-to-center)))
 (let (($x1631 (and $x1630 $x1627)))
 (ite $x1631 $x1645 $x1659)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1387 (left s____________)))
 (let ((?x1525 (left s_____________)))
 (let (($x1785 (= ?x1525 ?x1387)))
 (let ((?x1421 (right s____________)))
 (let ((?x1752 (top ?x1421)))
 (let ((?x1753 (stack ?x1752 ?x1387)))
 (let (($x1779 (= ?x1525 ?x1753)))
 (let (($x1755 ((_ is stack ) ?x1421)))
 (let (($x1758 (= c____________ right-to-left)))
 (let (($x1759 (and $x1758 $x1755)))
 (let ((?x1607 (center s____________)))
 (let (($x1760 ((_ is stack ) ?x1607)))
 (let (($x1761 (= c____________ center-to-right)))
 (let (($x1762 (and $x1761 $x1760)))
 (let ((?x1748 (top ?x1607)))
 (let ((?x1749 (stack ?x1748 ?x1387)))
 (let (($x1776 (= ?x1525 ?x1749)))
 (let (($x1763 (= c____________ center-to-left)))
 (let (($x1764 (and $x1763 $x1760)))
 (let ((?x1558 (rest ?x1387)))
 (let (($x1772 (= ?x1525 ?x1558)))
 (let (($x1765 ((_ is stack ) ?x1387)))
 (let (($x1766 (= c____________ left-to-right)))
 (let (($x1767 (and $x1766 $x1765)))
 (let (($x1768 (= c____________ left-to-center)))
 (let (($x1769 (and $x1768 $x1765)))
 (ite $x1769 $x1772 (ite $x1767 $x1772 (ite $x1764 $x1776 (ite $x1762 $x1785 (ite $x1759 $x1779 $x1785))))))))))))))))))))))))))))))))
(assert
 (let ((?x1421 (right s____________)))
 (let ((?x1559 (right s_____________)))
 (let (($x1781 (= ?x1559 ?x1421)))
 (let ((?x1751 (rest ?x1421)))
 (let (($x1778 (= ?x1559 ?x1751)))
 (let (($x1755 ((_ is stack ) ?x1421)))
 (let (($x1756 (= c____________ right-to-center)))
 (let (($x1757 (and $x1756 $x1755)))
 (let (($x1758 (= c____________ right-to-left)))
 (let (($x1759 (and $x1758 $x1755)))
 (let ((?x1607 (center s____________)))
 (let ((?x1748 (top ?x1607)))
 (let ((?x1750 (stack ?x1748 ?x1421)))
 (let (($x1777 (= ?x1559 ?x1750)))
 (let (($x1760 ((_ is stack ) ?x1607)))
 (let (($x1761 (= c____________ center-to-right)))
 (let (($x1762 (and $x1761 $x1760)))
 (let (($x1763 (= c____________ center-to-left)))
 (let (($x1764 (and $x1763 $x1760)))
 (let ((?x1387 (left s____________)))
 (let (($x1765 ((_ is stack ) ?x1387)))
 (let (($x1766 (= c____________ left-to-right)))
 (let (($x1767 (and $x1766 $x1765)))
 (let (($x1798 (ite $x1767 $x1781 (ite $x1764 $x1781 (ite $x1762 $x1777 (ite $x1759 $x1778 (ite $x1757 $x1778 $x1781)))))))
 (let ((?x1605 (top ?x1387)))
 (let ((?x1744 (stack ?x1605 ?x1421)))
 (let (($x1773 (= ?x1559 ?x1744)))
 (let (($x1768 (= c____________ left-to-center)))
 (let (($x1769 (and $x1768 $x1765)))
 (ite $x1769 $x1773 $x1798)))))))))))))))))))))))))))))))
(assert
 (let ((?x1607 (center s____________)))
 (let ((?x1745 (center s_____________)))
 (let (($x1783 (= ?x1745 ?x1607)))
 (let ((?x1421 (right s____________)))
 (let ((?x1752 (top ?x1421)))
 (let ((?x1754 (stack ?x1752 ?x1607)))
 (let (($x1780 (= ?x1745 ?x1754)))
 (let (($x1755 ((_ is stack ) ?x1421)))
 (let (($x1756 (= c____________ right-to-center)))
 (let (($x1757 (and $x1756 $x1755)))
 (let (($x1758 (= c____________ right-to-left)))
 (let (($x1759 (and $x1758 $x1755)))
 (let ((?x1747 (rest ?x1607)))
 (let (($x1775 (= ?x1745 ?x1747)))
 (let (($x1760 ((_ is stack ) ?x1607)))
 (let (($x1761 (= c____________ center-to-right)))
 (let (($x1762 (and $x1761 $x1760)))
 (let (($x1763 (= c____________ center-to-left)))
 (let (($x1764 (and $x1763 $x1760)))
 (let ((?x1387 (left s____________)))
 (let ((?x1605 (top ?x1387)))
 (let ((?x1746 (stack ?x1605 ?x1607)))
 (let (($x1774 (= ?x1745 ?x1746)))
 (let (($x1765 ((_ is stack ) ?x1387)))
 (let (($x1766 (= c____________ left-to-right)))
 (let (($x1767 (and $x1766 $x1765)))
 (let (($x1797 (ite $x1767 $x1774 (ite $x1764 $x1775 (ite $x1762 $x1775 (ite $x1759 $x1783 (ite $x1757 $x1780 $x1783)))))))
 (let (($x1768 (= c____________ left-to-center)))
 (let (($x1769 (and $x1768 $x1765)))
 (ite $x1769 $x1783 $x1797)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1525 (left s_____________)))
 (let ((?x1663 (left s______________)))
 (let (($x1923 (= ?x1663 ?x1525)))
 (let ((?x1559 (right s_____________)))
 (let ((?x1890 (top ?x1559)))
 (let ((?x1891 (stack ?x1890 ?x1525)))
 (let (($x1917 (= ?x1663 ?x1891)))
 (let (($x1893 ((_ is stack ) ?x1559)))
 (let (($x1896 (= c_____________ right-to-left)))
 (let (($x1897 (and $x1896 $x1893)))
 (let ((?x1745 (center s_____________)))
 (let (($x1898 ((_ is stack ) ?x1745)))
 (let (($x1899 (= c_____________ center-to-right)))
 (let (($x1900 (and $x1899 $x1898)))
 (let ((?x1886 (top ?x1745)))
 (let ((?x1887 (stack ?x1886 ?x1525)))
 (let (($x1914 (= ?x1663 ?x1887)))
 (let (($x1901 (= c_____________ center-to-left)))
 (let (($x1902 (and $x1901 $x1898)))
 (let ((?x1696 (rest ?x1525)))
 (let (($x1910 (= ?x1663 ?x1696)))
 (let (($x1903 ((_ is stack ) ?x1525)))
 (let (($x1904 (= c_____________ left-to-right)))
 (let (($x1905 (and $x1904 $x1903)))
 (let (($x1906 (= c_____________ left-to-center)))
 (let (($x1907 (and $x1906 $x1903)))
 (ite $x1907 $x1910 (ite $x1905 $x1910 (ite $x1902 $x1914 (ite $x1900 $x1923 (ite $x1897 $x1917 $x1923))))))))))))))))))))))))))))))))
(assert
 (let ((?x1559 (right s_____________)))
 (let ((?x1697 (right s______________)))
 (let (($x1919 (= ?x1697 ?x1559)))
 (let ((?x1889 (rest ?x1559)))
 (let (($x1916 (= ?x1697 ?x1889)))
 (let (($x1893 ((_ is stack ) ?x1559)))
 (let (($x1894 (= c_____________ right-to-center)))
 (let (($x1895 (and $x1894 $x1893)))
 (let (($x1896 (= c_____________ right-to-left)))
 (let (($x1897 (and $x1896 $x1893)))
 (let ((?x1745 (center s_____________)))
 (let ((?x1886 (top ?x1745)))
 (let ((?x1888 (stack ?x1886 ?x1559)))
 (let (($x1915 (= ?x1697 ?x1888)))
 (let (($x1898 ((_ is stack ) ?x1745)))
 (let (($x1899 (= c_____________ center-to-right)))
 (let (($x1900 (and $x1899 $x1898)))
 (let (($x1901 (= c_____________ center-to-left)))
 (let (($x1902 (and $x1901 $x1898)))
 (let ((?x1525 (left s_____________)))
 (let (($x1903 ((_ is stack ) ?x1525)))
 (let (($x1904 (= c_____________ left-to-right)))
 (let (($x1905 (and $x1904 $x1903)))
 (let (($x1936 (ite $x1905 $x1919 (ite $x1902 $x1919 (ite $x1900 $x1915 (ite $x1897 $x1916 (ite $x1895 $x1916 $x1919)))))))
 (let ((?x1743 (top ?x1525)))
 (let ((?x1882 (stack ?x1743 ?x1559)))
 (let (($x1911 (= ?x1697 ?x1882)))
 (let (($x1906 (= c_____________ left-to-center)))
 (let (($x1907 (and $x1906 $x1903)))
 (ite $x1907 $x1911 $x1936)))))))))))))))))))))))))))))))
(assert
 (let ((?x1745 (center s_____________)))
 (let ((?x1883 (center s______________)))
 (let (($x1921 (= ?x1883 ?x1745)))
 (let ((?x1559 (right s_____________)))
 (let ((?x1890 (top ?x1559)))
 (let ((?x1892 (stack ?x1890 ?x1745)))
 (let (($x1918 (= ?x1883 ?x1892)))
 (let (($x1893 ((_ is stack ) ?x1559)))
 (let (($x1894 (= c_____________ right-to-center)))
 (let (($x1895 (and $x1894 $x1893)))
 (let (($x1896 (= c_____________ right-to-left)))
 (let (($x1897 (and $x1896 $x1893)))
 (let ((?x1885 (rest ?x1745)))
 (let (($x1913 (= ?x1883 ?x1885)))
 (let (($x1898 ((_ is stack ) ?x1745)))
 (let (($x1899 (= c_____________ center-to-right)))
 (let (($x1900 (and $x1899 $x1898)))
 (let (($x1901 (= c_____________ center-to-left)))
 (let (($x1902 (and $x1901 $x1898)))
 (let ((?x1525 (left s_____________)))
 (let ((?x1743 (top ?x1525)))
 (let ((?x1884 (stack ?x1743 ?x1745)))
 (let (($x1912 (= ?x1883 ?x1884)))
 (let (($x1903 ((_ is stack ) ?x1525)))
 (let (($x1904 (= c_____________ left-to-right)))
 (let (($x1905 (and $x1904 $x1903)))
 (let (($x1935 (ite $x1905 $x1912 (ite $x1902 $x1913 (ite $x1900 $x1913 (ite $x1897 $x1921 (ite $x1895 $x1918 $x1921)))))))
 (let (($x1906 (= c_____________ left-to-center)))
 (let (($x1907 (and $x1906 $x1903)))
 (ite $x1907 $x1921 $x1935)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1663 (left s______________)))
 (let ((?x1801 (left s_______________)))
 (let (($x2061 (= ?x1801 ?x1663)))
 (let ((?x1697 (right s______________)))
 (let ((?x2028 (top ?x1697)))
 (let ((?x2029 (stack ?x2028 ?x1663)))
 (let (($x2055 (= ?x1801 ?x2029)))
 (let (($x2031 ((_ is stack ) ?x1697)))
 (let (($x2034 (= c______________ right-to-left)))
 (let (($x2035 (and $x2034 $x2031)))
 (let ((?x1883 (center s______________)))
 (let (($x2036 ((_ is stack ) ?x1883)))
 (let (($x2037 (= c______________ center-to-right)))
 (let (($x2038 (and $x2037 $x2036)))
 (let ((?x2024 (top ?x1883)))
 (let ((?x2025 (stack ?x2024 ?x1663)))
 (let (($x2052 (= ?x1801 ?x2025)))
 (let (($x2039 (= c______________ center-to-left)))
 (let (($x2040 (and $x2039 $x2036)))
 (let ((?x1834 (rest ?x1663)))
 (let (($x2048 (= ?x1801 ?x1834)))
 (let (($x2041 ((_ is stack ) ?x1663)))
 (let (($x2042 (= c______________ left-to-right)))
 (let (($x2043 (and $x2042 $x2041)))
 (let (($x2044 (= c______________ left-to-center)))
 (let (($x2045 (and $x2044 $x2041)))
 (ite $x2045 $x2048 (ite $x2043 $x2048 (ite $x2040 $x2052 (ite $x2038 $x2061 (ite $x2035 $x2055 $x2061))))))))))))))))))))))))))))))))
(assert
 (let ((?x1697 (right s______________)))
 (let ((?x1835 (right s_______________)))
 (let (($x2057 (= ?x1835 ?x1697)))
 (let ((?x2027 (rest ?x1697)))
 (let (($x2054 (= ?x1835 ?x2027)))
 (let (($x2031 ((_ is stack ) ?x1697)))
 (let (($x2032 (= c______________ right-to-center)))
 (let (($x2033 (and $x2032 $x2031)))
 (let (($x2034 (= c______________ right-to-left)))
 (let (($x2035 (and $x2034 $x2031)))
 (let ((?x1883 (center s______________)))
 (let ((?x2024 (top ?x1883)))
 (let ((?x2026 (stack ?x2024 ?x1697)))
 (let (($x2053 (= ?x1835 ?x2026)))
 (let (($x2036 ((_ is stack ) ?x1883)))
 (let (($x2037 (= c______________ center-to-right)))
 (let (($x2038 (and $x2037 $x2036)))
 (let (($x2039 (= c______________ center-to-left)))
 (let (($x2040 (and $x2039 $x2036)))
 (let ((?x1663 (left s______________)))
 (let (($x2041 ((_ is stack ) ?x1663)))
 (let (($x2042 (= c______________ left-to-right)))
 (let (($x2043 (and $x2042 $x2041)))
 (let (($x2074 (ite $x2043 $x2057 (ite $x2040 $x2057 (ite $x2038 $x2053 (ite $x2035 $x2054 (ite $x2033 $x2054 $x2057)))))))
 (let ((?x1881 (top ?x1663)))
 (let ((?x2020 (stack ?x1881 ?x1697)))
 (let (($x2049 (= ?x1835 ?x2020)))
 (let (($x2044 (= c______________ left-to-center)))
 (let (($x2045 (and $x2044 $x2041)))
 (ite $x2045 $x2049 $x2074)))))))))))))))))))))))))))))))
(assert
 (let ((?x1883 (center s______________)))
 (let ((?x2021 (center s_______________)))
 (let (($x2059 (= ?x2021 ?x1883)))
 (let ((?x1697 (right s______________)))
 (let ((?x2028 (top ?x1697)))
 (let ((?x2030 (stack ?x2028 ?x1883)))
 (let (($x2056 (= ?x2021 ?x2030)))
 (let (($x2031 ((_ is stack ) ?x1697)))
 (let (($x2032 (= c______________ right-to-center)))
 (let (($x2033 (and $x2032 $x2031)))
 (let (($x2034 (= c______________ right-to-left)))
 (let (($x2035 (and $x2034 $x2031)))
 (let ((?x2023 (rest ?x1883)))
 (let (($x2051 (= ?x2021 ?x2023)))
 (let (($x2036 ((_ is stack ) ?x1883)))
 (let (($x2037 (= c______________ center-to-right)))
 (let (($x2038 (and $x2037 $x2036)))
 (let (($x2039 (= c______________ center-to-left)))
 (let (($x2040 (and $x2039 $x2036)))
 (let ((?x1663 (left s______________)))
 (let ((?x1881 (top ?x1663)))
 (let ((?x2022 (stack ?x1881 ?x1883)))
 (let (($x2050 (= ?x2021 ?x2022)))
 (let (($x2041 ((_ is stack ) ?x1663)))
 (let (($x2042 (= c______________ left-to-right)))
 (let (($x2043 (and $x2042 $x2041)))
 (let (($x2073 (ite $x2043 $x2050 (ite $x2040 $x2051 (ite $x2038 $x2051 (ite $x2035 $x2059 (ite $x2033 $x2056 $x2059)))))))
 (let (($x2044 (= c______________ left-to-center)))
 (let (($x2045 (and $x2044 $x2041)))
 (ite $x2045 $x2059 $x2073)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1801 (left s_______________)))
 (let ((?x1939 (left s________________)))
 (let (($x2199 (= ?x1939 ?x1801)))
 (let ((?x1835 (right s_______________)))
 (let ((?x2166 (top ?x1835)))
 (let ((?x2167 (stack ?x2166 ?x1801)))
 (let (($x2193 (= ?x1939 ?x2167)))
 (let (($x2169 ((_ is stack ) ?x1835)))
 (let (($x2172 (= c_______________ right-to-left)))
 (let (($x2173 (and $x2172 $x2169)))
 (let ((?x2021 (center s_______________)))
 (let (($x2174 ((_ is stack ) ?x2021)))
 (let (($x2175 (= c_______________ center-to-right)))
 (let (($x2176 (and $x2175 $x2174)))
 (let ((?x2162 (top ?x2021)))
 (let ((?x2163 (stack ?x2162 ?x1801)))
 (let (($x2190 (= ?x1939 ?x2163)))
 (let (($x2177 (= c_______________ center-to-left)))
 (let (($x2178 (and $x2177 $x2174)))
 (let ((?x1972 (rest ?x1801)))
 (let (($x2186 (= ?x1939 ?x1972)))
 (let (($x2179 ((_ is stack ) ?x1801)))
 (let (($x2180 (= c_______________ left-to-right)))
 (let (($x2181 (and $x2180 $x2179)))
 (let (($x2182 (= c_______________ left-to-center)))
 (let (($x2183 (and $x2182 $x2179)))
 (ite $x2183 $x2186 (ite $x2181 $x2186 (ite $x2178 $x2190 (ite $x2176 $x2199 (ite $x2173 $x2193 $x2199))))))))))))))))))))))))))))))))
(assert
 (let ((?x1835 (right s_______________)))
 (let ((?x1973 (right s________________)))
 (let (($x2195 (= ?x1973 ?x1835)))
 (let ((?x2165 (rest ?x1835)))
 (let (($x2192 (= ?x1973 ?x2165)))
 (let (($x2169 ((_ is stack ) ?x1835)))
 (let (($x2170 (= c_______________ right-to-center)))
 (let (($x2171 (and $x2170 $x2169)))
 (let (($x2172 (= c_______________ right-to-left)))
 (let (($x2173 (and $x2172 $x2169)))
 (let ((?x2021 (center s_______________)))
 (let ((?x2162 (top ?x2021)))
 (let ((?x2164 (stack ?x2162 ?x1835)))
 (let (($x2191 (= ?x1973 ?x2164)))
 (let (($x2174 ((_ is stack ) ?x2021)))
 (let (($x2175 (= c_______________ center-to-right)))
 (let (($x2176 (and $x2175 $x2174)))
 (let (($x2177 (= c_______________ center-to-left)))
 (let (($x2178 (and $x2177 $x2174)))
 (let ((?x1801 (left s_______________)))
 (let (($x2179 ((_ is stack ) ?x1801)))
 (let (($x2180 (= c_______________ left-to-right)))
 (let (($x2181 (and $x2180 $x2179)))
 (let (($x2212 (ite $x2181 $x2195 (ite $x2178 $x2195 (ite $x2176 $x2191 (ite $x2173 $x2192 (ite $x2171 $x2192 $x2195)))))))
 (let ((?x2019 (top ?x1801)))
 (let ((?x2158 (stack ?x2019 ?x1835)))
 (let (($x2187 (= ?x1973 ?x2158)))
 (let (($x2182 (= c_______________ left-to-center)))
 (let (($x2183 (and $x2182 $x2179)))
 (ite $x2183 $x2187 $x2212)))))))))))))))))))))))))))))))
(assert
 (let ((?x2021 (center s_______________)))
 (let ((?x2159 (center s________________)))
 (let (($x2197 (= ?x2159 ?x2021)))
 (let ((?x1835 (right s_______________)))
 (let ((?x2166 (top ?x1835)))
 (let ((?x2168 (stack ?x2166 ?x2021)))
 (let (($x2194 (= ?x2159 ?x2168)))
 (let (($x2169 ((_ is stack ) ?x1835)))
 (let (($x2170 (= c_______________ right-to-center)))
 (let (($x2171 (and $x2170 $x2169)))
 (let (($x2172 (= c_______________ right-to-left)))
 (let (($x2173 (and $x2172 $x2169)))
 (let ((?x2161 (rest ?x2021)))
 (let (($x2189 (= ?x2159 ?x2161)))
 (let (($x2174 ((_ is stack ) ?x2021)))
 (let (($x2175 (= c_______________ center-to-right)))
 (let (($x2176 (and $x2175 $x2174)))
 (let (($x2177 (= c_______________ center-to-left)))
 (let (($x2178 (and $x2177 $x2174)))
 (let ((?x1801 (left s_______________)))
 (let ((?x2019 (top ?x1801)))
 (let ((?x2160 (stack ?x2019 ?x2021)))
 (let (($x2188 (= ?x2159 ?x2160)))
 (let (($x2179 ((_ is stack ) ?x1801)))
 (let (($x2180 (= c_______________ left-to-right)))
 (let (($x2181 (and $x2180 $x2179)))
 (let (($x2211 (ite $x2181 $x2188 (ite $x2178 $x2189 (ite $x2176 $x2189 (ite $x2173 $x2197 (ite $x2171 $x2194 $x2197)))))))
 (let (($x2182 (= c_______________ left-to-center)))
 (let (($x2183 (and $x2182 $x2179)))
 (ite $x2183 $x2197 $x2211)))))))))))))))))))))))))))))))
(assert
 (= c_________________ c!16))
(assert
 (let ((?x1939 (left s________________)))
 (let ((?x2077 (left s_________________)))
 (let (($x2337 (= ?x2077 ?x1939)))
 (let ((?x1973 (right s________________)))
 (let ((?x2304 (top ?x1973)))
 (let ((?x2305 (stack ?x2304 ?x1939)))
 (let (($x2331 (= ?x2077 ?x2305)))
 (let (($x2307 ((_ is stack ) ?x1973)))
 (let (($x2310 (= c________________ right-to-left)))
 (let (($x2311 (and $x2310 $x2307)))
 (let ((?x2159 (center s________________)))
 (let (($x2312 ((_ is stack ) ?x2159)))
 (let (($x2313 (= c________________ center-to-right)))
 (let (($x2314 (and $x2313 $x2312)))
 (let ((?x2300 (top ?x2159)))
 (let ((?x2301 (stack ?x2300 ?x1939)))
 (let (($x2328 (= ?x2077 ?x2301)))
 (let (($x2315 (= c________________ center-to-left)))
 (let (($x2316 (and $x2315 $x2312)))
 (let ((?x2110 (rest ?x1939)))
 (let (($x2324 (= ?x2077 ?x2110)))
 (let (($x2317 ((_ is stack ) ?x1939)))
 (let (($x2318 (= c________________ left-to-right)))
 (let (($x2319 (and $x2318 $x2317)))
 (let (($x2320 (= c________________ left-to-center)))
 (let (($x2321 (and $x2320 $x2317)))
 (ite $x2321 $x2324 (ite $x2319 $x2324 (ite $x2316 $x2328 (ite $x2314 $x2337 (ite $x2311 $x2331 $x2337))))))))))))))))))))))))))))))))
(assert
 (let ((?x1973 (right s________________)))
 (let ((?x2111 (right s_________________)))
 (let (($x2333 (= ?x2111 ?x1973)))
 (let ((?x2303 (rest ?x1973)))
 (let (($x2330 (= ?x2111 ?x2303)))
 (let (($x2307 ((_ is stack ) ?x1973)))
 (let (($x2308 (= c________________ right-to-center)))
 (let (($x2309 (and $x2308 $x2307)))
 (let (($x2310 (= c________________ right-to-left)))
 (let (($x2311 (and $x2310 $x2307)))
 (let ((?x2159 (center s________________)))
 (let ((?x2300 (top ?x2159)))
 (let ((?x2302 (stack ?x2300 ?x1973)))
 (let (($x2329 (= ?x2111 ?x2302)))
 (let (($x2312 ((_ is stack ) ?x2159)))
 (let (($x2313 (= c________________ center-to-right)))
 (let (($x2314 (and $x2313 $x2312)))
 (let (($x2315 (= c________________ center-to-left)))
 (let (($x2316 (and $x2315 $x2312)))
 (let ((?x1939 (left s________________)))
 (let (($x2317 ((_ is stack ) ?x1939)))
 (let (($x2318 (= c________________ left-to-right)))
 (let (($x2319 (and $x2318 $x2317)))
 (let (($x2350 (ite $x2319 $x2333 (ite $x2316 $x2333 (ite $x2314 $x2329 (ite $x2311 $x2330 (ite $x2309 $x2330 $x2333)))))))
 (let ((?x2157 (top ?x1939)))
 (let ((?x2296 (stack ?x2157 ?x1973)))
 (let (($x2325 (= ?x2111 ?x2296)))
 (let (($x2320 (= c________________ left-to-center)))
 (let (($x2321 (and $x2320 $x2317)))
 (ite $x2321 $x2325 $x2350)))))))))))))))))))))))))))))))
(assert
 (let ((?x2159 (center s________________)))
 (let ((?x2297 (center s_________________)))
 (let (($x2335 (= ?x2297 ?x2159)))
 (let ((?x1973 (right s________________)))
 (let ((?x2304 (top ?x1973)))
 (let ((?x2306 (stack ?x2304 ?x2159)))
 (let (($x2332 (= ?x2297 ?x2306)))
 (let (($x2307 ((_ is stack ) ?x1973)))
 (let (($x2308 (= c________________ right-to-center)))
 (let (($x2309 (and $x2308 $x2307)))
 (let (($x2310 (= c________________ right-to-left)))
 (let (($x2311 (and $x2310 $x2307)))
 (let ((?x2299 (rest ?x2159)))
 (let (($x2327 (= ?x2297 ?x2299)))
 (let (($x2312 ((_ is stack ) ?x2159)))
 (let (($x2313 (= c________________ center-to-right)))
 (let (($x2314 (and $x2313 $x2312)))
 (let (($x2315 (= c________________ center-to-left)))
 (let (($x2316 (and $x2315 $x2312)))
 (let ((?x1939 (left s________________)))
 (let ((?x2157 (top ?x1939)))
 (let ((?x2298 (stack ?x2157 ?x2159)))
 (let (($x2326 (= ?x2297 ?x2298)))
 (let (($x2317 ((_ is stack ) ?x1939)))
 (let (($x2318 (= c________________ left-to-right)))
 (let (($x2319 (and $x2318 $x2317)))
 (let (($x2349 (ite $x2319 $x2326 (ite $x2316 $x2327 (ite $x2314 $x2327 (ite $x2311 $x2335 (ite $x2309 $x2332 $x2335)))))))
 (let (($x2320 (= c________________ left-to-center)))
 (let (($x2321 (and $x2320 $x2317)))
 (ite $x2321 $x2335 $x2349)))))))))))))))))))))))))))))))
(assert
 (= c__________________ c!17))
(assert
 (let ((?x2077 (left s_________________)))
 (let ((?x2215 (left s__________________)))
 (let (($x2475 (= ?x2215 ?x2077)))
 (let ((?x2111 (right s_________________)))
 (let ((?x2442 (top ?x2111)))
 (let ((?x2443 (stack ?x2442 ?x2077)))
 (let (($x2469 (= ?x2215 ?x2443)))
 (let (($x2445 ((_ is stack ) ?x2111)))
 (let (($x2448 (= c_________________ right-to-left)))
 (let (($x2449 (and $x2448 $x2445)))
 (let ((?x2297 (center s_________________)))
 (let (($x2450 ((_ is stack ) ?x2297)))
 (let (($x2451 (= c_________________ center-to-right)))
 (let (($x2452 (and $x2451 $x2450)))
 (let ((?x2438 (top ?x2297)))
 (let ((?x2439 (stack ?x2438 ?x2077)))
 (let (($x2466 (= ?x2215 ?x2439)))
 (let (($x2453 (= c_________________ center-to-left)))
 (let (($x2454 (and $x2453 $x2450)))
 (let ((?x2248 (rest ?x2077)))
 (let (($x2462 (= ?x2215 ?x2248)))
 (let (($x2455 ((_ is stack ) ?x2077)))
 (let (($x2456 (= c_________________ left-to-right)))
 (let (($x2457 (and $x2456 $x2455)))
 (let (($x2458 (= c_________________ left-to-center)))
 (let (($x2459 (and $x2458 $x2455)))
 (ite $x2459 $x2462 (ite $x2457 $x2462 (ite $x2454 $x2466 (ite $x2452 $x2475 (ite $x2449 $x2469 $x2475))))))))))))))))))))))))))))))))
(assert
 (let ((?x2111 (right s_________________)))
 (let ((?x2249 (right s__________________)))
 (let (($x2471 (= ?x2249 ?x2111)))
 (let ((?x2441 (rest ?x2111)))
 (let (($x2468 (= ?x2249 ?x2441)))
 (let (($x2445 ((_ is stack ) ?x2111)))
 (let (($x2446 (= c_________________ right-to-center)))
 (let (($x2447 (and $x2446 $x2445)))
 (let (($x2448 (= c_________________ right-to-left)))
 (let (($x2449 (and $x2448 $x2445)))
 (let ((?x2297 (center s_________________)))
 (let ((?x2438 (top ?x2297)))
 (let ((?x2440 (stack ?x2438 ?x2111)))
 (let (($x2467 (= ?x2249 ?x2440)))
 (let (($x2450 ((_ is stack ) ?x2297)))
 (let (($x2451 (= c_________________ center-to-right)))
 (let (($x2452 (and $x2451 $x2450)))
 (let (($x2453 (= c_________________ center-to-left)))
 (let (($x2454 (and $x2453 $x2450)))
 (let ((?x2077 (left s_________________)))
 (let (($x2455 ((_ is stack ) ?x2077)))
 (let (($x2456 (= c_________________ left-to-right)))
 (let (($x2457 (and $x2456 $x2455)))
 (let (($x2488 (ite $x2457 $x2471 (ite $x2454 $x2471 (ite $x2452 $x2467 (ite $x2449 $x2468 (ite $x2447 $x2468 $x2471)))))))
 (let ((?x2295 (top ?x2077)))
 (let ((?x2434 (stack ?x2295 ?x2111)))
 (let (($x2463 (= ?x2249 ?x2434)))
 (let (($x2458 (= c_________________ left-to-center)))
 (let (($x2459 (and $x2458 $x2455)))
 (ite $x2459 $x2463 $x2488)))))))))))))))))))))))))))))))
(assert
 (let ((?x2297 (center s_________________)))
 (let ((?x2435 (center s__________________)))
 (let (($x2473 (= ?x2435 ?x2297)))
 (let ((?x2111 (right s_________________)))
 (let ((?x2442 (top ?x2111)))
 (let ((?x2444 (stack ?x2442 ?x2297)))
 (let (($x2470 (= ?x2435 ?x2444)))
 (let (($x2445 ((_ is stack ) ?x2111)))
 (let (($x2446 (= c_________________ right-to-center)))
 (let (($x2447 (and $x2446 $x2445)))
 (let (($x2448 (= c_________________ right-to-left)))
 (let (($x2449 (and $x2448 $x2445)))
 (let ((?x2437 (rest ?x2297)))
 (let (($x2465 (= ?x2435 ?x2437)))
 (let (($x2450 ((_ is stack ) ?x2297)))
 (let (($x2451 (= c_________________ center-to-right)))
 (let (($x2452 (and $x2451 $x2450)))
 (let (($x2453 (= c_________________ center-to-left)))
 (let (($x2454 (and $x2453 $x2450)))
 (let ((?x2077 (left s_________________)))
 (let ((?x2295 (top ?x2077)))
 (let ((?x2436 (stack ?x2295 ?x2297)))
 (let (($x2464 (= ?x2435 ?x2436)))
 (let (($x2455 ((_ is stack ) ?x2077)))
 (let (($x2456 (= c_________________ left-to-right)))
 (let (($x2457 (and $x2456 $x2455)))
 (let (($x2487 (ite $x2457 $x2464 (ite $x2454 $x2465 (ite $x2452 $x2465 (ite $x2449 $x2473 (ite $x2447 $x2470 $x2473)))))))
 (let (($x2458 (= c_________________ left-to-center)))
 (let (($x2459 (and $x2458 $x2455)))
 (ite $x2459 $x2473 $x2487)))))))))))))))))))))))))))))))
(assert
 (= c___________________ c!18))
(assert
 (let ((?x2215 (left s__________________)))
 (let ((?x2353 (left s___________________)))
 (let (($x2613 (= ?x2353 ?x2215)))
 (let ((?x2249 (right s__________________)))
 (let ((?x2580 (top ?x2249)))
 (let ((?x2581 (stack ?x2580 ?x2215)))
 (let (($x2607 (= ?x2353 ?x2581)))
 (let (($x2583 ((_ is stack ) ?x2249)))
 (let (($x2586 (= c__________________ right-to-left)))
 (let (($x2587 (and $x2586 $x2583)))
 (let ((?x2435 (center s__________________)))
 (let (($x2588 ((_ is stack ) ?x2435)))
 (let (($x2589 (= c__________________ center-to-right)))
 (let (($x2590 (and $x2589 $x2588)))
 (let ((?x2576 (top ?x2435)))
 (let ((?x2577 (stack ?x2576 ?x2215)))
 (let (($x2604 (= ?x2353 ?x2577)))
 (let (($x2591 (= c__________________ center-to-left)))
 (let (($x2592 (and $x2591 $x2588)))
 (let ((?x2386 (rest ?x2215)))
 (let (($x2600 (= ?x2353 ?x2386)))
 (let (($x2593 ((_ is stack ) ?x2215)))
 (let (($x2594 (= c__________________ left-to-right)))
 (let (($x2595 (and $x2594 $x2593)))
 (let (($x2596 (= c__________________ left-to-center)))
 (let (($x2597 (and $x2596 $x2593)))
 (ite $x2597 $x2600 (ite $x2595 $x2600 (ite $x2592 $x2604 (ite $x2590 $x2613 (ite $x2587 $x2607 $x2613))))))))))))))))))))))))))))))))
(assert
 (let ((?x2249 (right s__________________)))
 (let ((?x2387 (right s___________________)))
 (let (($x2609 (= ?x2387 ?x2249)))
 (let ((?x2579 (rest ?x2249)))
 (let (($x2606 (= ?x2387 ?x2579)))
 (let (($x2583 ((_ is stack ) ?x2249)))
 (let (($x2584 (= c__________________ right-to-center)))
 (let (($x2585 (and $x2584 $x2583)))
 (let (($x2586 (= c__________________ right-to-left)))
 (let (($x2587 (and $x2586 $x2583)))
 (let ((?x2435 (center s__________________)))
 (let ((?x2576 (top ?x2435)))
 (let ((?x2578 (stack ?x2576 ?x2249)))
 (let (($x2605 (= ?x2387 ?x2578)))
 (let (($x2588 ((_ is stack ) ?x2435)))
 (let (($x2589 (= c__________________ center-to-right)))
 (let (($x2590 (and $x2589 $x2588)))
 (let (($x2591 (= c__________________ center-to-left)))
 (let (($x2592 (and $x2591 $x2588)))
 (let ((?x2215 (left s__________________)))
 (let (($x2593 ((_ is stack ) ?x2215)))
 (let (($x2594 (= c__________________ left-to-right)))
 (let (($x2595 (and $x2594 $x2593)))
 (let (($x2626 (ite $x2595 $x2609 (ite $x2592 $x2609 (ite $x2590 $x2605 (ite $x2587 $x2606 (ite $x2585 $x2606 $x2609)))))))
 (let ((?x2433 (top ?x2215)))
 (let ((?x2572 (stack ?x2433 ?x2249)))
 (let (($x2601 (= ?x2387 ?x2572)))
 (let (($x2596 (= c__________________ left-to-center)))
 (let (($x2597 (and $x2596 $x2593)))
 (ite $x2597 $x2601 $x2626)))))))))))))))))))))))))))))))
(assert
 (let ((?x2435 (center s__________________)))
 (let ((?x2573 (center s___________________)))
 (let (($x2611 (= ?x2573 ?x2435)))
 (let ((?x2249 (right s__________________)))
 (let ((?x2580 (top ?x2249)))
 (let ((?x2582 (stack ?x2580 ?x2435)))
 (let (($x2608 (= ?x2573 ?x2582)))
 (let (($x2583 ((_ is stack ) ?x2249)))
 (let (($x2584 (= c__________________ right-to-center)))
 (let (($x2585 (and $x2584 $x2583)))
 (let (($x2586 (= c__________________ right-to-left)))
 (let (($x2587 (and $x2586 $x2583)))
 (let ((?x2575 (rest ?x2435)))
 (let (($x2603 (= ?x2573 ?x2575)))
 (let (($x2588 ((_ is stack ) ?x2435)))
 (let (($x2589 (= c__________________ center-to-right)))
 (let (($x2590 (and $x2589 $x2588)))
 (let (($x2591 (= c__________________ center-to-left)))
 (let (($x2592 (and $x2591 $x2588)))
 (let ((?x2215 (left s__________________)))
 (let ((?x2433 (top ?x2215)))
 (let ((?x2574 (stack ?x2433 ?x2435)))
 (let (($x2602 (= ?x2573 ?x2574)))
 (let (($x2593 ((_ is stack ) ?x2215)))
 (let (($x2594 (= c__________________ left-to-right)))
 (let (($x2595 (and $x2594 $x2593)))
 (let (($x2625 (ite $x2595 $x2602 (ite $x2592 $x2603 (ite $x2590 $x2603 (ite $x2587 $x2611 (ite $x2585 $x2608 $x2611)))))))
 (let (($x2596 (= c__________________ left-to-center)))
 (let (($x2597 (and $x2596 $x2593)))
 (ite $x2597 $x2611 $x2625)))))))))))))))))))))))))))))))
(assert
 (= c____________________ c!19))
(assert
 (let ((?x2353 (left s___________________)))
 (let ((?x2491 (left s____________________)))
 (let (($x2751 (= ?x2491 ?x2353)))
 (let ((?x2387 (right s___________________)))
 (let ((?x2718 (top ?x2387)))
 (let ((?x2719 (stack ?x2718 ?x2353)))
 (let (($x2745 (= ?x2491 ?x2719)))
 (let (($x2721 ((_ is stack ) ?x2387)))
 (let (($x2724 (= c___________________ right-to-left)))
 (let (($x2725 (and $x2724 $x2721)))
 (let ((?x2573 (center s___________________)))
 (let (($x2726 ((_ is stack ) ?x2573)))
 (let (($x2727 (= c___________________ center-to-right)))
 (let (($x2728 (and $x2727 $x2726)))
 (let ((?x2714 (top ?x2573)))
 (let ((?x2715 (stack ?x2714 ?x2353)))
 (let (($x2742 (= ?x2491 ?x2715)))
 (let (($x2729 (= c___________________ center-to-left)))
 (let (($x2730 (and $x2729 $x2726)))
 (let ((?x2524 (rest ?x2353)))
 (let (($x2738 (= ?x2491 ?x2524)))
 (let (($x2731 ((_ is stack ) ?x2353)))
 (let (($x2732 (= c___________________ left-to-right)))
 (let (($x2733 (and $x2732 $x2731)))
 (let (($x2734 (= c___________________ left-to-center)))
 (let (($x2735 (and $x2734 $x2731)))
 (ite $x2735 $x2738 (ite $x2733 $x2738 (ite $x2730 $x2742 (ite $x2728 $x2751 (ite $x2725 $x2745 $x2751))))))))))))))))))))))))))))))))
(assert
 (let ((?x2387 (right s___________________)))
 (let ((?x2525 (right s____________________)))
 (let (($x2747 (= ?x2525 ?x2387)))
 (let ((?x2717 (rest ?x2387)))
 (let (($x2744 (= ?x2525 ?x2717)))
 (let (($x2721 ((_ is stack ) ?x2387)))
 (let (($x2722 (= c___________________ right-to-center)))
 (let (($x2723 (and $x2722 $x2721)))
 (let (($x2724 (= c___________________ right-to-left)))
 (let (($x2725 (and $x2724 $x2721)))
 (let ((?x2573 (center s___________________)))
 (let ((?x2714 (top ?x2573)))
 (let ((?x2716 (stack ?x2714 ?x2387)))
 (let (($x2743 (= ?x2525 ?x2716)))
 (let (($x2726 ((_ is stack ) ?x2573)))
 (let (($x2727 (= c___________________ center-to-right)))
 (let (($x2728 (and $x2727 $x2726)))
 (let (($x2729 (= c___________________ center-to-left)))
 (let (($x2730 (and $x2729 $x2726)))
 (let ((?x2353 (left s___________________)))
 (let (($x2731 ((_ is stack ) ?x2353)))
 (let (($x2732 (= c___________________ left-to-right)))
 (let (($x2733 (and $x2732 $x2731)))
 (let (($x2764 (ite $x2733 $x2747 (ite $x2730 $x2747 (ite $x2728 $x2743 (ite $x2725 $x2744 (ite $x2723 $x2744 $x2747)))))))
 (let ((?x2571 (top ?x2353)))
 (let ((?x2710 (stack ?x2571 ?x2387)))
 (let (($x2739 (= ?x2525 ?x2710)))
 (let (($x2734 (= c___________________ left-to-center)))
 (let (($x2735 (and $x2734 $x2731)))
 (ite $x2735 $x2739 $x2764)))))))))))))))))))))))))))))))
(assert
 (let ((?x2573 (center s___________________)))
 (let ((?x2711 (center s____________________)))
 (let (($x2749 (= ?x2711 ?x2573)))
 (let ((?x2387 (right s___________________)))
 (let ((?x2718 (top ?x2387)))
 (let ((?x2720 (stack ?x2718 ?x2573)))
 (let (($x2746 (= ?x2711 ?x2720)))
 (let (($x2721 ((_ is stack ) ?x2387)))
 (let (($x2722 (= c___________________ right-to-center)))
 (let (($x2723 (and $x2722 $x2721)))
 (let (($x2724 (= c___________________ right-to-left)))
 (let (($x2725 (and $x2724 $x2721)))
 (let ((?x2713 (rest ?x2573)))
 (let (($x2741 (= ?x2711 ?x2713)))
 (let (($x2726 ((_ is stack ) ?x2573)))
 (let (($x2727 (= c___________________ center-to-right)))
 (let (($x2728 (and $x2727 $x2726)))
 (let (($x2729 (= c___________________ center-to-left)))
 (let (($x2730 (and $x2729 $x2726)))
 (let ((?x2353 (left s___________________)))
 (let ((?x2571 (top ?x2353)))
 (let ((?x2712 (stack ?x2571 ?x2573)))
 (let (($x2740 (= ?x2711 ?x2712)))
 (let (($x2731 ((_ is stack ) ?x2353)))
 (let (($x2732 (= c___________________ left-to-right)))
 (let (($x2733 (and $x2732 $x2731)))
 (let (($x2763 (ite $x2733 $x2740 (ite $x2730 $x2741 (ite $x2728 $x2741 (ite $x2725 $x2749 (ite $x2723 $x2746 $x2749)))))))
 (let (($x2734 (= c___________________ left-to-center)))
 (let (($x2735 (and $x2734 $x2731)))
 (ite $x2735 $x2749 $x2763)))))))))))))))))))))))))))))))
(assert
 (let ((?x62 (stack G empty)))
 (let ((?x2525 (right s____________________)))
 (let (($x2767 (= ?x2525 ?x62)))
 (let ((?x61 (stack H (stack B (stack P (stack I empty))))))
 (let ((?x2711 (center s____________________)))
 (let (($x2798 (= ?x2711 ?x61)))
 (let ((?x51 (stack E (stack C (stack M (stack L (stack N (stack A empty))))))))
 (let ((?x57 (stack Q (stack K (stack D (stack O (stack F (stack J ?x51))))))))
 (let ((?x2491 (left s____________________)))
 (let (($x2799 (= ?x2491 ?x57)))
 (let (($x2801 (not (and $x2799 $x2798 $x2767))))
 (not $x2801)))))))))))))
(check-sat)
(exit)
