(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(declare-fun c!16 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________ () Record_left_center_right)
(declare-fun c!17 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x23 (stack E empty)))
 (let ((?x24 (stack D ?x23)))
 (let ((?x25 (stack K ?x24)))
 (let ((?x26 (stack G ?x25)))
 (let ((?x27 (stack C ?x26)))
 (let ((?x28 (stack H ?x27)))
 (let ((?x29 (stack A ?x28)))
 (let ((?x30 (stack I ?x29)))
 (let ((?x31 (stack B ?x30)))
 (let ((?x32 (stack F ?x31)))
 (let ((?x33 (stack J ?x32)))
 (let ((?x91 (left s_tmp_)))
 (= ?x91 ?x33))))))))))))))
(assert
 (let ((?x94 (center s_tmp__)))
 (= ?x94 empty)))
(assert
 (let ((?x97 (right s_tmp___)))
 (= ?x97 empty)))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x124 (left s_tmp__)))
 (= (left s_tmp___) ?x124)))
(assert
 (let ((?x94 (center s_tmp__)))
 (= (center s_tmp___) ?x94)))
(assert
 (let ((?x128 (center s_tmp_)))
 (= ?x128 (center s_tmp))))
(assert
 (let ((?x131 (right s_tmp_)))
 (= ?x131 (right s_tmp))))
(assert
 (let ((?x91 (left s_tmp_)))
 (let ((?x124 (left s_tmp__)))
 (= ?x124 ?x91))))
(assert
 (let ((?x131 (right s_tmp_)))
 (let ((?x135 (right s_tmp__)))
 (= ?x135 ?x131))))
(assert
 (= c__ c!1))
(assert
 (let ((?x68 (left s_)))
 (let ((?x224 (left s__)))
 (let (($x257 (= ?x224 ?x68)))
 (let ((?x71 (right s_)))
 (let (($x215 ((_ is stack ) ?x71)))
 (let (($x231 (and (= c_ right-to-left) $x215)))
 (let ((?x73 (center s_)))
 (let (($x232 ((_ is stack ) ?x73)))
 (let (($x234 (and (= c_ center-to-right) $x232)))
 (let (($x236 (and (= c_ center-to-left) $x232)))
 (let (($x266 (ite $x236 (= ?x224 (stack (top ?x73) ?x68)) (ite $x234 $x257 (ite $x231 (= ?x224 (stack (top ?x71) ?x68)) $x257)))))
 (let (($x244 (= ?x224 (rest ?x68))))
 (let (($x237 ((_ is stack ) ?x68)))
 (let (($x238 (= c_ left-to-right)))
 (let (($x239 (and $x238 $x237)))
 (let (($x240 (= c_ left-to-center)))
 (let (($x241 (and $x240 $x237)))
 (ite $x241 $x244 (ite $x239 $x244 $x266))))))))))))))))))))
(assert
 (let ((?x71 (right s_)))
 (let ((?x220 (right s__)))
 (let (($x253 (= ?x220 ?x71)))
 (let (($x250 (= ?x220 (rest ?x71))))
 (let (($x215 ((_ is stack ) ?x71)))
 (let (($x229 (and (= c_ right-to-center) $x215)))
 (let (($x231 (and (= c_ right-to-left) $x215)))
 (let ((?x73 (center s_)))
 (let (($x232 ((_ is stack ) ?x73)))
 (let (($x234 (and (= c_ center-to-right) $x232)))
 (let (($x263 (ite $x234 (= ?x220 (stack (top ?x73) ?x71)) (ite $x231 $x250 (ite $x229 $x250 $x253)))))
 (let (($x236 (and (= c_ center-to-left) $x232)))
 (let ((?x68 (left s_)))
 (let (($x237 ((_ is stack ) ?x68)))
 (let (($x238 (= c_ left-to-right)))
 (let (($x239 (and $x238 $x237)))
 (let (($x240 (= c_ left-to-center)))
 (let (($x241 (and $x240 $x237)))
 (ite $x241 (= ?x220 (stack (top ?x68) ?x71)) (ite $x239 $x253 (ite $x236 $x253 $x263))))))))))))))))))))))
(assert
 (let ((?x73 (center s_)))
 (let ((?x211 (center s__)))
 (let (($x255 (= ?x211 ?x73)))
 (let ((?x71 (right s_)))
 (let (($x215 ((_ is stack ) ?x71)))
 (let (($x229 (and (= c_ right-to-center) $x215)))
 (let (($x231 (and (= c_ right-to-left) $x215)))
 (let (($x247 (= ?x211 (rest ?x73))))
 (let (($x232 ((_ is stack ) ?x73)))
 (let (($x234 (and (= c_ center-to-right) $x232)))
 (let (($x262 (ite $x234 $x247 (ite $x231 $x255 (ite $x229 (= ?x211 (stack (top ?x71) ?x73)) $x255)))))
 (let (($x236 (and (= c_ center-to-left) $x232)))
 (let ((?x68 (left s_)))
 (let (($x237 ((_ is stack ) ?x68)))
 (let (($x238 (= c_ left-to-right)))
 (let (($x239 (and $x238 $x237)))
 (let (($x240 (= c_ left-to-center)))
 (let (($x241 (and $x240 $x237)))
 (ite $x241 $x255 (ite $x239 (= ?x211 (stack (top ?x68) ?x73)) (ite $x236 $x247 $x262))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x224 (left s__)))
 (let ((?x138 (left s___)))
 (let (($x347 (= ?x138 ?x224)))
 (let ((?x220 (right s__)))
 (let ((?x314 (top ?x220)))
 (let ((?x315 (stack ?x314 ?x224)))
 (let (($x341 (= ?x138 ?x315)))
 (let (($x317 ((_ is stack ) ?x220)))
 (let (($x320 (= c__ right-to-left)))
 (let (($x321 (and $x320 $x317)))
 (let ((?x211 (center s__)))
 (let (($x322 ((_ is stack ) ?x211)))
 (let (($x323 (= c__ center-to-right)))
 (let (($x324 (and $x323 $x322)))
 (let ((?x310 (top ?x211)))
 (let ((?x311 (stack ?x310 ?x224)))
 (let (($x338 (= ?x138 ?x311)))
 (let (($x325 (= c__ center-to-left)))
 (let (($x326 (and $x325 $x322)))
 (let ((?x140 (rest ?x224)))
 (let (($x334 (= ?x138 ?x140)))
 (let (($x327 ((_ is stack ) ?x224)))
 (let (($x328 (= c__ left-to-right)))
 (let (($x329 (and $x328 $x327)))
 (let (($x330 (= c__ left-to-center)))
 (let (($x331 (and $x330 $x327)))
 (ite $x331 $x334 (ite $x329 $x334 (ite $x326 $x338 (ite $x324 $x347 (ite $x321 $x341 $x347))))))))))))))))))))))))))))))))
(assert
 (let ((?x220 (right s__)))
 (let ((?x141 (right s___)))
 (let (($x343 (= ?x141 ?x220)))
 (let ((?x313 (rest ?x220)))
 (let (($x340 (= ?x141 ?x313)))
 (let (($x317 ((_ is stack ) ?x220)))
 (let (($x318 (= c__ right-to-center)))
 (let (($x319 (and $x318 $x317)))
 (let (($x320 (= c__ right-to-left)))
 (let (($x321 (and $x320 $x317)))
 (let ((?x211 (center s__)))
 (let ((?x310 (top ?x211)))
 (let ((?x312 (stack ?x310 ?x220)))
 (let (($x339 (= ?x141 ?x312)))
 (let (($x322 ((_ is stack ) ?x211)))
 (let (($x323 (= c__ center-to-right)))
 (let (($x324 (and $x323 $x322)))
 (let (($x325 (= c__ center-to-left)))
 (let (($x326 (and $x325 $x322)))
 (let ((?x224 (left s__)))
 (let (($x327 ((_ is stack ) ?x224)))
 (let (($x328 (= c__ left-to-right)))
 (let (($x329 (and $x328 $x327)))
 (let (($x360 (ite $x329 $x343 (ite $x326 $x343 (ite $x324 $x339 (ite $x321 $x340 (ite $x319 $x340 $x343)))))))
 (let ((?x209 (top ?x224)))
 (let ((?x306 (stack ?x209 ?x220)))
 (let (($x335 (= ?x141 ?x306)))
 (let (($x330 (= c__ left-to-center)))
 (let (($x331 (and $x330 $x327)))
 (ite $x331 $x335 $x360)))))))))))))))))))))))))))))))
(assert
 (let ((?x211 (center s__)))
 (let ((?x307 (center s___)))
 (let (($x345 (= ?x307 ?x211)))
 (let ((?x220 (right s__)))
 (let ((?x314 (top ?x220)))
 (let ((?x316 (stack ?x314 ?x211)))
 (let (($x342 (= ?x307 ?x316)))
 (let (($x317 ((_ is stack ) ?x220)))
 (let (($x318 (= c__ right-to-center)))
 (let (($x319 (and $x318 $x317)))
 (let (($x320 (= c__ right-to-left)))
 (let (($x321 (and $x320 $x317)))
 (let ((?x309 (rest ?x211)))
 (let (($x337 (= ?x307 ?x309)))
 (let (($x322 ((_ is stack ) ?x211)))
 (let (($x323 (= c__ center-to-right)))
 (let (($x324 (and $x323 $x322)))
 (let (($x325 (= c__ center-to-left)))
 (let (($x326 (and $x325 $x322)))
 (let ((?x224 (left s__)))
 (let ((?x209 (top ?x224)))
 (let ((?x308 (stack ?x209 ?x211)))
 (let (($x336 (= ?x307 ?x308)))
 (let (($x327 ((_ is stack ) ?x224)))
 (let (($x328 (= c__ left-to-right)))
 (let (($x329 (and $x328 $x327)))
 (let (($x359 (ite $x329 $x336 (ite $x326 $x337 (ite $x324 $x337 (ite $x321 $x345 (ite $x319 $x342 $x345)))))))
 (let (($x330 (= c__ left-to-center)))
 (let (($x331 (and $x330 $x327)))
 (ite $x331 $x345 $x359)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x138 (left s___)))
 (let ((?x273 (left s____)))
 (let (($x485 (= ?x273 ?x138)))
 (let ((?x141 (right s___)))
 (let ((?x452 (top ?x141)))
 (let ((?x453 (stack ?x452 ?x138)))
 (let (($x479 (= ?x273 ?x453)))
 (let (($x455 ((_ is stack ) ?x141)))
 (let (($x458 (= c___ right-to-left)))
 (let (($x459 (and $x458 $x455)))
 (let ((?x307 (center s___)))
 (let (($x460 ((_ is stack ) ?x307)))
 (let (($x461 (= c___ center-to-right)))
 (let (($x462 (and $x461 $x460)))
 (let ((?x448 (top ?x307)))
 (let ((?x449 (stack ?x448 ?x138)))
 (let (($x476 (= ?x273 ?x449)))
 (let (($x463 (= c___ center-to-left)))
 (let (($x464 (and $x463 $x460)))
 (let ((?x288 (rest ?x138)))
 (let (($x472 (= ?x273 ?x288)))
 (let (($x465 ((_ is stack ) ?x138)))
 (let (($x466 (= c___ left-to-right)))
 (let (($x467 (and $x466 $x465)))
 (let (($x468 (= c___ left-to-center)))
 (let (($x469 (and $x468 $x465)))
 (ite $x469 $x472 (ite $x467 $x472 (ite $x464 $x476 (ite $x462 $x485 (ite $x459 $x479 $x485))))))))))))))))))))))))))))))))
(assert
 (let ((?x141 (right s___)))
 (let ((?x289 (right s____)))
 (let (($x481 (= ?x289 ?x141)))
 (let ((?x451 (rest ?x141)))
 (let (($x478 (= ?x289 ?x451)))
 (let (($x455 ((_ is stack ) ?x141)))
 (let (($x456 (= c___ right-to-center)))
 (let (($x457 (and $x456 $x455)))
 (let (($x458 (= c___ right-to-left)))
 (let (($x459 (and $x458 $x455)))
 (let ((?x307 (center s___)))
 (let ((?x448 (top ?x307)))
 (let ((?x450 (stack ?x448 ?x141)))
 (let (($x477 (= ?x289 ?x450)))
 (let (($x460 ((_ is stack ) ?x307)))
 (let (($x461 (= c___ center-to-right)))
 (let (($x462 (and $x461 $x460)))
 (let (($x463 (= c___ center-to-left)))
 (let (($x464 (and $x463 $x460)))
 (let ((?x138 (left s___)))
 (let (($x465 ((_ is stack ) ?x138)))
 (let (($x466 (= c___ left-to-right)))
 (let (($x467 (and $x466 $x465)))
 (let (($x498 (ite $x467 $x481 (ite $x464 $x481 (ite $x462 $x477 (ite $x459 $x478 (ite $x457 $x478 $x481)))))))
 (let ((?x305 (top ?x138)))
 (let ((?x444 (stack ?x305 ?x141)))
 (let (($x473 (= ?x289 ?x444)))
 (let (($x468 (= c___ left-to-center)))
 (let (($x469 (and $x468 $x465)))
 (ite $x469 $x473 $x498)))))))))))))))))))))))))))))))
(assert
 (let ((?x307 (center s___)))
 (let ((?x445 (center s____)))
 (let (($x483 (= ?x445 ?x307)))
 (let ((?x141 (right s___)))
 (let ((?x452 (top ?x141)))
 (let ((?x454 (stack ?x452 ?x307)))
 (let (($x480 (= ?x445 ?x454)))
 (let (($x455 ((_ is stack ) ?x141)))
 (let (($x456 (= c___ right-to-center)))
 (let (($x457 (and $x456 $x455)))
 (let (($x458 (= c___ right-to-left)))
 (let (($x459 (and $x458 $x455)))
 (let ((?x447 (rest ?x307)))
 (let (($x475 (= ?x445 ?x447)))
 (let (($x460 ((_ is stack ) ?x307)))
 (let (($x461 (= c___ center-to-right)))
 (let (($x462 (and $x461 $x460)))
 (let (($x463 (= c___ center-to-left)))
 (let (($x464 (and $x463 $x460)))
 (let ((?x138 (left s___)))
 (let ((?x305 (top ?x138)))
 (let ((?x446 (stack ?x305 ?x307)))
 (let (($x474 (= ?x445 ?x446)))
 (let (($x465 ((_ is stack ) ?x138)))
 (let (($x466 (= c___ left-to-right)))
 (let (($x467 (and $x466 $x465)))
 (let (($x497 (ite $x467 $x474 (ite $x464 $x475 (ite $x462 $x475 (ite $x459 $x483 (ite $x457 $x480 $x483)))))))
 (let (($x468 (= c___ left-to-center)))
 (let (($x469 (and $x468 $x465)))
 (ite $x469 $x483 $x497)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x273 (left s____)))
 (let ((?x363 (left s_____)))
 (let (($x623 (= ?x363 ?x273)))
 (let ((?x289 (right s____)))
 (let ((?x590 (top ?x289)))
 (let ((?x591 (stack ?x590 ?x273)))
 (let (($x617 (= ?x363 ?x591)))
 (let (($x593 ((_ is stack ) ?x289)))
 (let (($x596 (= c____ right-to-left)))
 (let (($x597 (and $x596 $x593)))
 (let ((?x445 (center s____)))
 (let (($x598 ((_ is stack ) ?x445)))
 (let (($x599 (= c____ center-to-right)))
 (let (($x600 (and $x599 $x598)))
 (let ((?x586 (top ?x445)))
 (let ((?x587 (stack ?x586 ?x273)))
 (let (($x614 (= ?x363 ?x587)))
 (let (($x601 (= c____ center-to-left)))
 (let (($x602 (and $x601 $x598)))
 (let ((?x396 (rest ?x273)))
 (let (($x610 (= ?x363 ?x396)))
 (let (($x603 ((_ is stack ) ?x273)))
 (let (($x604 (= c____ left-to-right)))
 (let (($x605 (and $x604 $x603)))
 (let (($x606 (= c____ left-to-center)))
 (let (($x607 (and $x606 $x603)))
 (ite $x607 $x610 (ite $x605 $x610 (ite $x602 $x614 (ite $x600 $x623 (ite $x597 $x617 $x623))))))))))))))))))))))))))))))))
(assert
 (let ((?x289 (right s____)))
 (let ((?x397 (right s_____)))
 (let (($x619 (= ?x397 ?x289)))
 (let ((?x589 (rest ?x289)))
 (let (($x616 (= ?x397 ?x589)))
 (let (($x593 ((_ is stack ) ?x289)))
 (let (($x594 (= c____ right-to-center)))
 (let (($x595 (and $x594 $x593)))
 (let (($x596 (= c____ right-to-left)))
 (let (($x597 (and $x596 $x593)))
 (let ((?x445 (center s____)))
 (let ((?x586 (top ?x445)))
 (let ((?x588 (stack ?x586 ?x289)))
 (let (($x615 (= ?x397 ?x588)))
 (let (($x598 ((_ is stack ) ?x445)))
 (let (($x599 (= c____ center-to-right)))
 (let (($x600 (and $x599 $x598)))
 (let (($x601 (= c____ center-to-left)))
 (let (($x602 (and $x601 $x598)))
 (let ((?x273 (left s____)))
 (let (($x603 ((_ is stack ) ?x273)))
 (let (($x604 (= c____ left-to-right)))
 (let (($x605 (and $x604 $x603)))
 (let (($x636 (ite $x605 $x619 (ite $x602 $x619 (ite $x600 $x615 (ite $x597 $x616 (ite $x595 $x616 $x619)))))))
 (let ((?x443 (top ?x273)))
 (let ((?x582 (stack ?x443 ?x289)))
 (let (($x611 (= ?x397 ?x582)))
 (let (($x606 (= c____ left-to-center)))
 (let (($x607 (and $x606 $x603)))
 (ite $x607 $x611 $x636)))))))))))))))))))))))))))))))
(assert
 (let ((?x445 (center s____)))
 (let ((?x583 (center s_____)))
 (let (($x621 (= ?x583 ?x445)))
 (let ((?x289 (right s____)))
 (let ((?x590 (top ?x289)))
 (let ((?x592 (stack ?x590 ?x445)))
 (let (($x618 (= ?x583 ?x592)))
 (let (($x593 ((_ is stack ) ?x289)))
 (let (($x594 (= c____ right-to-center)))
 (let (($x595 (and $x594 $x593)))
 (let (($x596 (= c____ right-to-left)))
 (let (($x597 (and $x596 $x593)))
 (let ((?x585 (rest ?x445)))
 (let (($x613 (= ?x583 ?x585)))
 (let (($x598 ((_ is stack ) ?x445)))
 (let (($x599 (= c____ center-to-right)))
 (let (($x600 (and $x599 $x598)))
 (let (($x601 (= c____ center-to-left)))
 (let (($x602 (and $x601 $x598)))
 (let ((?x273 (left s____)))
 (let ((?x443 (top ?x273)))
 (let ((?x584 (stack ?x443 ?x445)))
 (let (($x612 (= ?x583 ?x584)))
 (let (($x603 ((_ is stack ) ?x273)))
 (let (($x604 (= c____ left-to-right)))
 (let (($x605 (and $x604 $x603)))
 (let (($x635 (ite $x605 $x612 (ite $x602 $x613 (ite $x600 $x613 (ite $x597 $x621 (ite $x595 $x618 $x621)))))))
 (let (($x606 (= c____ left-to-center)))
 (let (($x607 (and $x606 $x603)))
 (ite $x607 $x621 $x635)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x363 (left s_____)))
 (let ((?x501 (left s______)))
 (let (($x761 (= ?x501 ?x363)))
 (let ((?x397 (right s_____)))
 (let ((?x728 (top ?x397)))
 (let ((?x729 (stack ?x728 ?x363)))
 (let (($x755 (= ?x501 ?x729)))
 (let (($x731 ((_ is stack ) ?x397)))
 (let (($x734 (= c_____ right-to-left)))
 (let (($x735 (and $x734 $x731)))
 (let ((?x583 (center s_____)))
 (let (($x736 ((_ is stack ) ?x583)))
 (let (($x737 (= c_____ center-to-right)))
 (let (($x738 (and $x737 $x736)))
 (let ((?x724 (top ?x583)))
 (let ((?x725 (stack ?x724 ?x363)))
 (let (($x752 (= ?x501 ?x725)))
 (let (($x739 (= c_____ center-to-left)))
 (let (($x740 (and $x739 $x736)))
 (let ((?x534 (rest ?x363)))
 (let (($x748 (= ?x501 ?x534)))
 (let (($x741 ((_ is stack ) ?x363)))
 (let (($x742 (= c_____ left-to-right)))
 (let (($x743 (and $x742 $x741)))
 (let (($x744 (= c_____ left-to-center)))
 (let (($x745 (and $x744 $x741)))
 (ite $x745 $x748 (ite $x743 $x748 (ite $x740 $x752 (ite $x738 $x761 (ite $x735 $x755 $x761))))))))))))))))))))))))))))))))
(assert
 (let ((?x397 (right s_____)))
 (let ((?x535 (right s______)))
 (let (($x757 (= ?x535 ?x397)))
 (let ((?x727 (rest ?x397)))
 (let (($x754 (= ?x535 ?x727)))
 (let (($x731 ((_ is stack ) ?x397)))
 (let (($x732 (= c_____ right-to-center)))
 (let (($x733 (and $x732 $x731)))
 (let (($x734 (= c_____ right-to-left)))
 (let (($x735 (and $x734 $x731)))
 (let ((?x583 (center s_____)))
 (let ((?x724 (top ?x583)))
 (let ((?x726 (stack ?x724 ?x397)))
 (let (($x753 (= ?x535 ?x726)))
 (let (($x736 ((_ is stack ) ?x583)))
 (let (($x737 (= c_____ center-to-right)))
 (let (($x738 (and $x737 $x736)))
 (let (($x739 (= c_____ center-to-left)))
 (let (($x740 (and $x739 $x736)))
 (let ((?x363 (left s_____)))
 (let (($x741 ((_ is stack ) ?x363)))
 (let (($x742 (= c_____ left-to-right)))
 (let (($x743 (and $x742 $x741)))
 (let (($x774 (ite $x743 $x757 (ite $x740 $x757 (ite $x738 $x753 (ite $x735 $x754 (ite $x733 $x754 $x757)))))))
 (let ((?x581 (top ?x363)))
 (let ((?x720 (stack ?x581 ?x397)))
 (let (($x749 (= ?x535 ?x720)))
 (let (($x744 (= c_____ left-to-center)))
 (let (($x745 (and $x744 $x741)))
 (ite $x745 $x749 $x774)))))))))))))))))))))))))))))))
(assert
 (let ((?x583 (center s_____)))
 (let ((?x721 (center s______)))
 (let (($x759 (= ?x721 ?x583)))
 (let ((?x397 (right s_____)))
 (let ((?x728 (top ?x397)))
 (let ((?x730 (stack ?x728 ?x583)))
 (let (($x756 (= ?x721 ?x730)))
 (let (($x731 ((_ is stack ) ?x397)))
 (let (($x732 (= c_____ right-to-center)))
 (let (($x733 (and $x732 $x731)))
 (let (($x734 (= c_____ right-to-left)))
 (let (($x735 (and $x734 $x731)))
 (let ((?x723 (rest ?x583)))
 (let (($x751 (= ?x721 ?x723)))
 (let (($x736 ((_ is stack ) ?x583)))
 (let (($x737 (= c_____ center-to-right)))
 (let (($x738 (and $x737 $x736)))
 (let (($x739 (= c_____ center-to-left)))
 (let (($x740 (and $x739 $x736)))
 (let ((?x363 (left s_____)))
 (let ((?x581 (top ?x363)))
 (let ((?x722 (stack ?x581 ?x583)))
 (let (($x750 (= ?x721 ?x722)))
 (let (($x741 ((_ is stack ) ?x363)))
 (let (($x742 (= c_____ left-to-right)))
 (let (($x743 (and $x742 $x741)))
 (let (($x773 (ite $x743 $x750 (ite $x740 $x751 (ite $x738 $x751 (ite $x735 $x759 (ite $x733 $x756 $x759)))))))
 (let (($x744 (= c_____ left-to-center)))
 (let (($x745 (and $x744 $x741)))
 (ite $x745 $x759 $x773)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x501 (left s______)))
 (let ((?x639 (left s_______)))
 (let (($x899 (= ?x639 ?x501)))
 (let ((?x535 (right s______)))
 (let ((?x866 (top ?x535)))
 (let ((?x867 (stack ?x866 ?x501)))
 (let (($x893 (= ?x639 ?x867)))
 (let (($x869 ((_ is stack ) ?x535)))
 (let (($x872 (= c______ right-to-left)))
 (let (($x873 (and $x872 $x869)))
 (let ((?x721 (center s______)))
 (let (($x874 ((_ is stack ) ?x721)))
 (let (($x875 (= c______ center-to-right)))
 (let (($x876 (and $x875 $x874)))
 (let ((?x862 (top ?x721)))
 (let ((?x863 (stack ?x862 ?x501)))
 (let (($x890 (= ?x639 ?x863)))
 (let (($x877 (= c______ center-to-left)))
 (let (($x878 (and $x877 $x874)))
 (let ((?x672 (rest ?x501)))
 (let (($x886 (= ?x639 ?x672)))
 (let (($x879 ((_ is stack ) ?x501)))
 (let (($x880 (= c______ left-to-right)))
 (let (($x881 (and $x880 $x879)))
 (let (($x882 (= c______ left-to-center)))
 (let (($x883 (and $x882 $x879)))
 (ite $x883 $x886 (ite $x881 $x886 (ite $x878 $x890 (ite $x876 $x899 (ite $x873 $x893 $x899))))))))))))))))))))))))))))))))
(assert
 (let ((?x535 (right s______)))
 (let ((?x673 (right s_______)))
 (let (($x895 (= ?x673 ?x535)))
 (let ((?x865 (rest ?x535)))
 (let (($x892 (= ?x673 ?x865)))
 (let (($x869 ((_ is stack ) ?x535)))
 (let (($x870 (= c______ right-to-center)))
 (let (($x871 (and $x870 $x869)))
 (let (($x872 (= c______ right-to-left)))
 (let (($x873 (and $x872 $x869)))
 (let ((?x721 (center s______)))
 (let ((?x862 (top ?x721)))
 (let ((?x864 (stack ?x862 ?x535)))
 (let (($x891 (= ?x673 ?x864)))
 (let (($x874 ((_ is stack ) ?x721)))
 (let (($x875 (= c______ center-to-right)))
 (let (($x876 (and $x875 $x874)))
 (let (($x877 (= c______ center-to-left)))
 (let (($x878 (and $x877 $x874)))
 (let ((?x501 (left s______)))
 (let (($x879 ((_ is stack ) ?x501)))
 (let (($x880 (= c______ left-to-right)))
 (let (($x881 (and $x880 $x879)))
 (let (($x912 (ite $x881 $x895 (ite $x878 $x895 (ite $x876 $x891 (ite $x873 $x892 (ite $x871 $x892 $x895)))))))
 (let ((?x719 (top ?x501)))
 (let ((?x858 (stack ?x719 ?x535)))
 (let (($x887 (= ?x673 ?x858)))
 (let (($x882 (= c______ left-to-center)))
 (let (($x883 (and $x882 $x879)))
 (ite $x883 $x887 $x912)))))))))))))))))))))))))))))))
(assert
 (let ((?x721 (center s______)))
 (let ((?x859 (center s_______)))
 (let (($x897 (= ?x859 ?x721)))
 (let ((?x535 (right s______)))
 (let ((?x866 (top ?x535)))
 (let ((?x868 (stack ?x866 ?x721)))
 (let (($x894 (= ?x859 ?x868)))
 (let (($x869 ((_ is stack ) ?x535)))
 (let (($x870 (= c______ right-to-center)))
 (let (($x871 (and $x870 $x869)))
 (let (($x872 (= c______ right-to-left)))
 (let (($x873 (and $x872 $x869)))
 (let ((?x861 (rest ?x721)))
 (let (($x889 (= ?x859 ?x861)))
 (let (($x874 ((_ is stack ) ?x721)))
 (let (($x875 (= c______ center-to-right)))
 (let (($x876 (and $x875 $x874)))
 (let (($x877 (= c______ center-to-left)))
 (let (($x878 (and $x877 $x874)))
 (let ((?x501 (left s______)))
 (let ((?x719 (top ?x501)))
 (let ((?x860 (stack ?x719 ?x721)))
 (let (($x888 (= ?x859 ?x860)))
 (let (($x879 ((_ is stack ) ?x501)))
 (let (($x880 (= c______ left-to-right)))
 (let (($x881 (and $x880 $x879)))
 (let (($x911 (ite $x881 $x888 (ite $x878 $x889 (ite $x876 $x889 (ite $x873 $x897 (ite $x871 $x894 $x897)))))))
 (let (($x882 (= c______ left-to-center)))
 (let (($x883 (and $x882 $x879)))
 (ite $x883 $x897 $x911)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x639 (left s_______)))
 (let ((?x777 (left s________)))
 (let (($x1037 (= ?x777 ?x639)))
 (let ((?x673 (right s_______)))
 (let ((?x1004 (top ?x673)))
 (let ((?x1005 (stack ?x1004 ?x639)))
 (let (($x1031 (= ?x777 ?x1005)))
 (let (($x1007 ((_ is stack ) ?x673)))
 (let (($x1010 (= c_______ right-to-left)))
 (let (($x1011 (and $x1010 $x1007)))
 (let ((?x859 (center s_______)))
 (let (($x1012 ((_ is stack ) ?x859)))
 (let (($x1013 (= c_______ center-to-right)))
 (let (($x1014 (and $x1013 $x1012)))
 (let ((?x1000 (top ?x859)))
 (let ((?x1001 (stack ?x1000 ?x639)))
 (let (($x1028 (= ?x777 ?x1001)))
 (let (($x1015 (= c_______ center-to-left)))
 (let (($x1016 (and $x1015 $x1012)))
 (let ((?x810 (rest ?x639)))
 (let (($x1024 (= ?x777 ?x810)))
 (let (($x1017 ((_ is stack ) ?x639)))
 (let (($x1018 (= c_______ left-to-right)))
 (let (($x1019 (and $x1018 $x1017)))
 (let (($x1020 (= c_______ left-to-center)))
 (let (($x1021 (and $x1020 $x1017)))
 (ite $x1021 $x1024 (ite $x1019 $x1024 (ite $x1016 $x1028 (ite $x1014 $x1037 (ite $x1011 $x1031 $x1037))))))))))))))))))))))))))))))))
(assert
 (let ((?x673 (right s_______)))
 (let ((?x811 (right s________)))
 (let (($x1033 (= ?x811 ?x673)))
 (let ((?x1003 (rest ?x673)))
 (let (($x1030 (= ?x811 ?x1003)))
 (let (($x1007 ((_ is stack ) ?x673)))
 (let (($x1008 (= c_______ right-to-center)))
 (let (($x1009 (and $x1008 $x1007)))
 (let (($x1010 (= c_______ right-to-left)))
 (let (($x1011 (and $x1010 $x1007)))
 (let ((?x859 (center s_______)))
 (let ((?x1000 (top ?x859)))
 (let ((?x1002 (stack ?x1000 ?x673)))
 (let (($x1029 (= ?x811 ?x1002)))
 (let (($x1012 ((_ is stack ) ?x859)))
 (let (($x1013 (= c_______ center-to-right)))
 (let (($x1014 (and $x1013 $x1012)))
 (let (($x1015 (= c_______ center-to-left)))
 (let (($x1016 (and $x1015 $x1012)))
 (let ((?x639 (left s_______)))
 (let (($x1017 ((_ is stack ) ?x639)))
 (let (($x1018 (= c_______ left-to-right)))
 (let (($x1019 (and $x1018 $x1017)))
 (let (($x1050 (ite $x1019 $x1033 (ite $x1016 $x1033 (ite $x1014 $x1029 (ite $x1011 $x1030 (ite $x1009 $x1030 $x1033)))))))
 (let ((?x857 (top ?x639)))
 (let ((?x996 (stack ?x857 ?x673)))
 (let (($x1025 (= ?x811 ?x996)))
 (let (($x1020 (= c_______ left-to-center)))
 (let (($x1021 (and $x1020 $x1017)))
 (ite $x1021 $x1025 $x1050)))))))))))))))))))))))))))))))
(assert
 (let ((?x859 (center s_______)))
 (let ((?x997 (center s________)))
 (let (($x1035 (= ?x997 ?x859)))
 (let ((?x673 (right s_______)))
 (let ((?x1004 (top ?x673)))
 (let ((?x1006 (stack ?x1004 ?x859)))
 (let (($x1032 (= ?x997 ?x1006)))
 (let (($x1007 ((_ is stack ) ?x673)))
 (let (($x1008 (= c_______ right-to-center)))
 (let (($x1009 (and $x1008 $x1007)))
 (let (($x1010 (= c_______ right-to-left)))
 (let (($x1011 (and $x1010 $x1007)))
 (let ((?x999 (rest ?x859)))
 (let (($x1027 (= ?x997 ?x999)))
 (let (($x1012 ((_ is stack ) ?x859)))
 (let (($x1013 (= c_______ center-to-right)))
 (let (($x1014 (and $x1013 $x1012)))
 (let (($x1015 (= c_______ center-to-left)))
 (let (($x1016 (and $x1015 $x1012)))
 (let ((?x639 (left s_______)))
 (let ((?x857 (top ?x639)))
 (let ((?x998 (stack ?x857 ?x859)))
 (let (($x1026 (= ?x997 ?x998)))
 (let (($x1017 ((_ is stack ) ?x639)))
 (let (($x1018 (= c_______ left-to-right)))
 (let (($x1019 (and $x1018 $x1017)))
 (let (($x1049 (ite $x1019 $x1026 (ite $x1016 $x1027 (ite $x1014 $x1027 (ite $x1011 $x1035 (ite $x1009 $x1032 $x1035)))))))
 (let (($x1020 (= c_______ left-to-center)))
 (let (($x1021 (and $x1020 $x1017)))
 (ite $x1021 $x1035 $x1049)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x777 (left s________)))
 (let ((?x915 (left s_________)))
 (let (($x1175 (= ?x915 ?x777)))
 (let ((?x811 (right s________)))
 (let ((?x1142 (top ?x811)))
 (let ((?x1143 (stack ?x1142 ?x777)))
 (let (($x1169 (= ?x915 ?x1143)))
 (let (($x1145 ((_ is stack ) ?x811)))
 (let (($x1148 (= c________ right-to-left)))
 (let (($x1149 (and $x1148 $x1145)))
 (let ((?x997 (center s________)))
 (let (($x1150 ((_ is stack ) ?x997)))
 (let (($x1151 (= c________ center-to-right)))
 (let (($x1152 (and $x1151 $x1150)))
 (let ((?x1138 (top ?x997)))
 (let ((?x1139 (stack ?x1138 ?x777)))
 (let (($x1166 (= ?x915 ?x1139)))
 (let (($x1153 (= c________ center-to-left)))
 (let (($x1154 (and $x1153 $x1150)))
 (let ((?x948 (rest ?x777)))
 (let (($x1162 (= ?x915 ?x948)))
 (let (($x1155 ((_ is stack ) ?x777)))
 (let (($x1156 (= c________ left-to-right)))
 (let (($x1157 (and $x1156 $x1155)))
 (let (($x1158 (= c________ left-to-center)))
 (let (($x1159 (and $x1158 $x1155)))
 (ite $x1159 $x1162 (ite $x1157 $x1162 (ite $x1154 $x1166 (ite $x1152 $x1175 (ite $x1149 $x1169 $x1175))))))))))))))))))))))))))))))))
(assert
 (let ((?x811 (right s________)))
 (let ((?x949 (right s_________)))
 (let (($x1171 (= ?x949 ?x811)))
 (let ((?x1141 (rest ?x811)))
 (let (($x1168 (= ?x949 ?x1141)))
 (let (($x1145 ((_ is stack ) ?x811)))
 (let (($x1146 (= c________ right-to-center)))
 (let (($x1147 (and $x1146 $x1145)))
 (let (($x1148 (= c________ right-to-left)))
 (let (($x1149 (and $x1148 $x1145)))
 (let ((?x997 (center s________)))
 (let ((?x1138 (top ?x997)))
 (let ((?x1140 (stack ?x1138 ?x811)))
 (let (($x1167 (= ?x949 ?x1140)))
 (let (($x1150 ((_ is stack ) ?x997)))
 (let (($x1151 (= c________ center-to-right)))
 (let (($x1152 (and $x1151 $x1150)))
 (let (($x1153 (= c________ center-to-left)))
 (let (($x1154 (and $x1153 $x1150)))
 (let ((?x777 (left s________)))
 (let (($x1155 ((_ is stack ) ?x777)))
 (let (($x1156 (= c________ left-to-right)))
 (let (($x1157 (and $x1156 $x1155)))
 (let (($x1188 (ite $x1157 $x1171 (ite $x1154 $x1171 (ite $x1152 $x1167 (ite $x1149 $x1168 (ite $x1147 $x1168 $x1171)))))))
 (let ((?x995 (top ?x777)))
 (let ((?x1134 (stack ?x995 ?x811)))
 (let (($x1163 (= ?x949 ?x1134)))
 (let (($x1158 (= c________ left-to-center)))
 (let (($x1159 (and $x1158 $x1155)))
 (ite $x1159 $x1163 $x1188)))))))))))))))))))))))))))))))
(assert
 (let ((?x997 (center s________)))
 (let ((?x1135 (center s_________)))
 (let (($x1173 (= ?x1135 ?x997)))
 (let ((?x811 (right s________)))
 (let ((?x1142 (top ?x811)))
 (let ((?x1144 (stack ?x1142 ?x997)))
 (let (($x1170 (= ?x1135 ?x1144)))
 (let (($x1145 ((_ is stack ) ?x811)))
 (let (($x1146 (= c________ right-to-center)))
 (let (($x1147 (and $x1146 $x1145)))
 (let (($x1148 (= c________ right-to-left)))
 (let (($x1149 (and $x1148 $x1145)))
 (let ((?x1137 (rest ?x997)))
 (let (($x1165 (= ?x1135 ?x1137)))
 (let (($x1150 ((_ is stack ) ?x997)))
 (let (($x1151 (= c________ center-to-right)))
 (let (($x1152 (and $x1151 $x1150)))
 (let (($x1153 (= c________ center-to-left)))
 (let (($x1154 (and $x1153 $x1150)))
 (let ((?x777 (left s________)))
 (let ((?x995 (top ?x777)))
 (let ((?x1136 (stack ?x995 ?x997)))
 (let (($x1164 (= ?x1135 ?x1136)))
 (let (($x1155 ((_ is stack ) ?x777)))
 (let (($x1156 (= c________ left-to-right)))
 (let (($x1157 (and $x1156 $x1155)))
 (let (($x1187 (ite $x1157 $x1164 (ite $x1154 $x1165 (ite $x1152 $x1165 (ite $x1149 $x1173 (ite $x1147 $x1170 $x1173)))))))
 (let (($x1158 (= c________ left-to-center)))
 (let (($x1159 (and $x1158 $x1155)))
 (ite $x1159 $x1173 $x1187)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x915 (left s_________)))
 (let ((?x1053 (left s__________)))
 (let (($x1313 (= ?x1053 ?x915)))
 (let ((?x949 (right s_________)))
 (let ((?x1280 (top ?x949)))
 (let ((?x1281 (stack ?x1280 ?x915)))
 (let (($x1307 (= ?x1053 ?x1281)))
 (let (($x1283 ((_ is stack ) ?x949)))
 (let (($x1286 (= c_________ right-to-left)))
 (let (($x1287 (and $x1286 $x1283)))
 (let ((?x1135 (center s_________)))
 (let (($x1288 ((_ is stack ) ?x1135)))
 (let (($x1289 (= c_________ center-to-right)))
 (let (($x1290 (and $x1289 $x1288)))
 (let ((?x1276 (top ?x1135)))
 (let ((?x1277 (stack ?x1276 ?x915)))
 (let (($x1304 (= ?x1053 ?x1277)))
 (let (($x1291 (= c_________ center-to-left)))
 (let (($x1292 (and $x1291 $x1288)))
 (let ((?x1086 (rest ?x915)))
 (let (($x1300 (= ?x1053 ?x1086)))
 (let (($x1293 ((_ is stack ) ?x915)))
 (let (($x1294 (= c_________ left-to-right)))
 (let (($x1295 (and $x1294 $x1293)))
 (let (($x1296 (= c_________ left-to-center)))
 (let (($x1297 (and $x1296 $x1293)))
 (ite $x1297 $x1300 (ite $x1295 $x1300 (ite $x1292 $x1304 (ite $x1290 $x1313 (ite $x1287 $x1307 $x1313))))))))))))))))))))))))))))))))
(assert
 (let ((?x949 (right s_________)))
 (let ((?x1087 (right s__________)))
 (let (($x1309 (= ?x1087 ?x949)))
 (let ((?x1279 (rest ?x949)))
 (let (($x1306 (= ?x1087 ?x1279)))
 (let (($x1283 ((_ is stack ) ?x949)))
 (let (($x1284 (= c_________ right-to-center)))
 (let (($x1285 (and $x1284 $x1283)))
 (let (($x1286 (= c_________ right-to-left)))
 (let (($x1287 (and $x1286 $x1283)))
 (let ((?x1135 (center s_________)))
 (let ((?x1276 (top ?x1135)))
 (let ((?x1278 (stack ?x1276 ?x949)))
 (let (($x1305 (= ?x1087 ?x1278)))
 (let (($x1288 ((_ is stack ) ?x1135)))
 (let (($x1289 (= c_________ center-to-right)))
 (let (($x1290 (and $x1289 $x1288)))
 (let (($x1291 (= c_________ center-to-left)))
 (let (($x1292 (and $x1291 $x1288)))
 (let ((?x915 (left s_________)))
 (let (($x1293 ((_ is stack ) ?x915)))
 (let (($x1294 (= c_________ left-to-right)))
 (let (($x1295 (and $x1294 $x1293)))
 (let (($x1326 (ite $x1295 $x1309 (ite $x1292 $x1309 (ite $x1290 $x1305 (ite $x1287 $x1306 (ite $x1285 $x1306 $x1309)))))))
 (let ((?x1133 (top ?x915)))
 (let ((?x1272 (stack ?x1133 ?x949)))
 (let (($x1301 (= ?x1087 ?x1272)))
 (let (($x1296 (= c_________ left-to-center)))
 (let (($x1297 (and $x1296 $x1293)))
 (ite $x1297 $x1301 $x1326)))))))))))))))))))))))))))))))
(assert
 (let ((?x1135 (center s_________)))
 (let ((?x1273 (center s__________)))
 (let (($x1311 (= ?x1273 ?x1135)))
 (let ((?x949 (right s_________)))
 (let ((?x1280 (top ?x949)))
 (let ((?x1282 (stack ?x1280 ?x1135)))
 (let (($x1308 (= ?x1273 ?x1282)))
 (let (($x1283 ((_ is stack ) ?x949)))
 (let (($x1284 (= c_________ right-to-center)))
 (let (($x1285 (and $x1284 $x1283)))
 (let (($x1286 (= c_________ right-to-left)))
 (let (($x1287 (and $x1286 $x1283)))
 (let ((?x1275 (rest ?x1135)))
 (let (($x1303 (= ?x1273 ?x1275)))
 (let (($x1288 ((_ is stack ) ?x1135)))
 (let (($x1289 (= c_________ center-to-right)))
 (let (($x1290 (and $x1289 $x1288)))
 (let (($x1291 (= c_________ center-to-left)))
 (let (($x1292 (and $x1291 $x1288)))
 (let ((?x915 (left s_________)))
 (let ((?x1133 (top ?x915)))
 (let ((?x1274 (stack ?x1133 ?x1135)))
 (let (($x1302 (= ?x1273 ?x1274)))
 (let (($x1293 ((_ is stack ) ?x915)))
 (let (($x1294 (= c_________ left-to-right)))
 (let (($x1295 (and $x1294 $x1293)))
 (let (($x1325 (ite $x1295 $x1302 (ite $x1292 $x1303 (ite $x1290 $x1303 (ite $x1287 $x1311 (ite $x1285 $x1308 $x1311)))))))
 (let (($x1296 (= c_________ left-to-center)))
 (let (($x1297 (and $x1296 $x1293)))
 (ite $x1297 $x1311 $x1325)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1053 (left s__________)))
 (let ((?x1191 (left s___________)))
 (let (($x1451 (= ?x1191 ?x1053)))
 (let ((?x1087 (right s__________)))
 (let ((?x1418 (top ?x1087)))
 (let ((?x1419 (stack ?x1418 ?x1053)))
 (let (($x1445 (= ?x1191 ?x1419)))
 (let (($x1421 ((_ is stack ) ?x1087)))
 (let (($x1424 (= c__________ right-to-left)))
 (let (($x1425 (and $x1424 $x1421)))
 (let ((?x1273 (center s__________)))
 (let (($x1426 ((_ is stack ) ?x1273)))
 (let (($x1427 (= c__________ center-to-right)))
 (let (($x1428 (and $x1427 $x1426)))
 (let ((?x1414 (top ?x1273)))
 (let ((?x1415 (stack ?x1414 ?x1053)))
 (let (($x1442 (= ?x1191 ?x1415)))
 (let (($x1429 (= c__________ center-to-left)))
 (let (($x1430 (and $x1429 $x1426)))
 (let ((?x1224 (rest ?x1053)))
 (let (($x1438 (= ?x1191 ?x1224)))
 (let (($x1431 ((_ is stack ) ?x1053)))
 (let (($x1432 (= c__________ left-to-right)))
 (let (($x1433 (and $x1432 $x1431)))
 (let (($x1434 (= c__________ left-to-center)))
 (let (($x1435 (and $x1434 $x1431)))
 (ite $x1435 $x1438 (ite $x1433 $x1438 (ite $x1430 $x1442 (ite $x1428 $x1451 (ite $x1425 $x1445 $x1451))))))))))))))))))))))))))))))))
(assert
 (let ((?x1087 (right s__________)))
 (let ((?x1225 (right s___________)))
 (let (($x1447 (= ?x1225 ?x1087)))
 (let ((?x1417 (rest ?x1087)))
 (let (($x1444 (= ?x1225 ?x1417)))
 (let (($x1421 ((_ is stack ) ?x1087)))
 (let (($x1422 (= c__________ right-to-center)))
 (let (($x1423 (and $x1422 $x1421)))
 (let (($x1424 (= c__________ right-to-left)))
 (let (($x1425 (and $x1424 $x1421)))
 (let ((?x1273 (center s__________)))
 (let ((?x1414 (top ?x1273)))
 (let ((?x1416 (stack ?x1414 ?x1087)))
 (let (($x1443 (= ?x1225 ?x1416)))
 (let (($x1426 ((_ is stack ) ?x1273)))
 (let (($x1427 (= c__________ center-to-right)))
 (let (($x1428 (and $x1427 $x1426)))
 (let (($x1429 (= c__________ center-to-left)))
 (let (($x1430 (and $x1429 $x1426)))
 (let ((?x1053 (left s__________)))
 (let (($x1431 ((_ is stack ) ?x1053)))
 (let (($x1432 (= c__________ left-to-right)))
 (let (($x1433 (and $x1432 $x1431)))
 (let (($x1464 (ite $x1433 $x1447 (ite $x1430 $x1447 (ite $x1428 $x1443 (ite $x1425 $x1444 (ite $x1423 $x1444 $x1447)))))))
 (let ((?x1271 (top ?x1053)))
 (let ((?x1410 (stack ?x1271 ?x1087)))
 (let (($x1439 (= ?x1225 ?x1410)))
 (let (($x1434 (= c__________ left-to-center)))
 (let (($x1435 (and $x1434 $x1431)))
 (ite $x1435 $x1439 $x1464)))))))))))))))))))))))))))))))
(assert
 (let ((?x1273 (center s__________)))
 (let ((?x1411 (center s___________)))
 (let (($x1449 (= ?x1411 ?x1273)))
 (let ((?x1087 (right s__________)))
 (let ((?x1418 (top ?x1087)))
 (let ((?x1420 (stack ?x1418 ?x1273)))
 (let (($x1446 (= ?x1411 ?x1420)))
 (let (($x1421 ((_ is stack ) ?x1087)))
 (let (($x1422 (= c__________ right-to-center)))
 (let (($x1423 (and $x1422 $x1421)))
 (let (($x1424 (= c__________ right-to-left)))
 (let (($x1425 (and $x1424 $x1421)))
 (let ((?x1413 (rest ?x1273)))
 (let (($x1441 (= ?x1411 ?x1413)))
 (let (($x1426 ((_ is stack ) ?x1273)))
 (let (($x1427 (= c__________ center-to-right)))
 (let (($x1428 (and $x1427 $x1426)))
 (let (($x1429 (= c__________ center-to-left)))
 (let (($x1430 (and $x1429 $x1426)))
 (let ((?x1053 (left s__________)))
 (let ((?x1271 (top ?x1053)))
 (let ((?x1412 (stack ?x1271 ?x1273)))
 (let (($x1440 (= ?x1411 ?x1412)))
 (let (($x1431 ((_ is stack ) ?x1053)))
 (let (($x1432 (= c__________ left-to-right)))
 (let (($x1433 (and $x1432 $x1431)))
 (let (($x1463 (ite $x1433 $x1440 (ite $x1430 $x1441 (ite $x1428 $x1441 (ite $x1425 $x1449 (ite $x1423 $x1446 $x1449)))))))
 (let (($x1434 (= c__________ left-to-center)))
 (let (($x1435 (and $x1434 $x1431)))
 (ite $x1435 $x1449 $x1463)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1191 (left s___________)))
 (let ((?x1329 (left s____________)))
 (let (($x1589 (= ?x1329 ?x1191)))
 (let ((?x1225 (right s___________)))
 (let ((?x1556 (top ?x1225)))
 (let ((?x1557 (stack ?x1556 ?x1191)))
 (let (($x1583 (= ?x1329 ?x1557)))
 (let (($x1559 ((_ is stack ) ?x1225)))
 (let (($x1562 (= c___________ right-to-left)))
 (let (($x1563 (and $x1562 $x1559)))
 (let ((?x1411 (center s___________)))
 (let (($x1564 ((_ is stack ) ?x1411)))
 (let (($x1565 (= c___________ center-to-right)))
 (let (($x1566 (and $x1565 $x1564)))
 (let ((?x1552 (top ?x1411)))
 (let ((?x1553 (stack ?x1552 ?x1191)))
 (let (($x1580 (= ?x1329 ?x1553)))
 (let (($x1567 (= c___________ center-to-left)))
 (let (($x1568 (and $x1567 $x1564)))
 (let ((?x1362 (rest ?x1191)))
 (let (($x1576 (= ?x1329 ?x1362)))
 (let (($x1569 ((_ is stack ) ?x1191)))
 (let (($x1570 (= c___________ left-to-right)))
 (let (($x1571 (and $x1570 $x1569)))
 (let (($x1572 (= c___________ left-to-center)))
 (let (($x1573 (and $x1572 $x1569)))
 (ite $x1573 $x1576 (ite $x1571 $x1576 (ite $x1568 $x1580 (ite $x1566 $x1589 (ite $x1563 $x1583 $x1589))))))))))))))))))))))))))))))))
(assert
 (let ((?x1225 (right s___________)))
 (let ((?x1363 (right s____________)))
 (let (($x1585 (= ?x1363 ?x1225)))
 (let ((?x1555 (rest ?x1225)))
 (let (($x1582 (= ?x1363 ?x1555)))
 (let (($x1559 ((_ is stack ) ?x1225)))
 (let (($x1560 (= c___________ right-to-center)))
 (let (($x1561 (and $x1560 $x1559)))
 (let (($x1562 (= c___________ right-to-left)))
 (let (($x1563 (and $x1562 $x1559)))
 (let ((?x1411 (center s___________)))
 (let ((?x1552 (top ?x1411)))
 (let ((?x1554 (stack ?x1552 ?x1225)))
 (let (($x1581 (= ?x1363 ?x1554)))
 (let (($x1564 ((_ is stack ) ?x1411)))
 (let (($x1565 (= c___________ center-to-right)))
 (let (($x1566 (and $x1565 $x1564)))
 (let (($x1567 (= c___________ center-to-left)))
 (let (($x1568 (and $x1567 $x1564)))
 (let ((?x1191 (left s___________)))
 (let (($x1569 ((_ is stack ) ?x1191)))
 (let (($x1570 (= c___________ left-to-right)))
 (let (($x1571 (and $x1570 $x1569)))
 (let (($x1602 (ite $x1571 $x1585 (ite $x1568 $x1585 (ite $x1566 $x1581 (ite $x1563 $x1582 (ite $x1561 $x1582 $x1585)))))))
 (let ((?x1409 (top ?x1191)))
 (let ((?x1548 (stack ?x1409 ?x1225)))
 (let (($x1577 (= ?x1363 ?x1548)))
 (let (($x1572 (= c___________ left-to-center)))
 (let (($x1573 (and $x1572 $x1569)))
 (ite $x1573 $x1577 $x1602)))))))))))))))))))))))))))))))
(assert
 (let ((?x1411 (center s___________)))
 (let ((?x1549 (center s____________)))
 (let (($x1587 (= ?x1549 ?x1411)))
 (let ((?x1225 (right s___________)))
 (let ((?x1556 (top ?x1225)))
 (let ((?x1558 (stack ?x1556 ?x1411)))
 (let (($x1584 (= ?x1549 ?x1558)))
 (let (($x1559 ((_ is stack ) ?x1225)))
 (let (($x1560 (= c___________ right-to-center)))
 (let (($x1561 (and $x1560 $x1559)))
 (let (($x1562 (= c___________ right-to-left)))
 (let (($x1563 (and $x1562 $x1559)))
 (let ((?x1551 (rest ?x1411)))
 (let (($x1579 (= ?x1549 ?x1551)))
 (let (($x1564 ((_ is stack ) ?x1411)))
 (let (($x1565 (= c___________ center-to-right)))
 (let (($x1566 (and $x1565 $x1564)))
 (let (($x1567 (= c___________ center-to-left)))
 (let (($x1568 (and $x1567 $x1564)))
 (let ((?x1191 (left s___________)))
 (let ((?x1409 (top ?x1191)))
 (let ((?x1550 (stack ?x1409 ?x1411)))
 (let (($x1578 (= ?x1549 ?x1550)))
 (let (($x1569 ((_ is stack ) ?x1191)))
 (let (($x1570 (= c___________ left-to-right)))
 (let (($x1571 (and $x1570 $x1569)))
 (let (($x1601 (ite $x1571 $x1578 (ite $x1568 $x1579 (ite $x1566 $x1579 (ite $x1563 $x1587 (ite $x1561 $x1584 $x1587)))))))
 (let (($x1572 (= c___________ left-to-center)))
 (let (($x1573 (and $x1572 $x1569)))
 (ite $x1573 $x1587 $x1601)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1329 (left s____________)))
 (let ((?x1467 (left s_____________)))
 (let (($x1727 (= ?x1467 ?x1329)))
 (let ((?x1363 (right s____________)))
 (let ((?x1694 (top ?x1363)))
 (let ((?x1695 (stack ?x1694 ?x1329)))
 (let (($x1721 (= ?x1467 ?x1695)))
 (let (($x1697 ((_ is stack ) ?x1363)))
 (let (($x1700 (= c____________ right-to-left)))
 (let (($x1701 (and $x1700 $x1697)))
 (let ((?x1549 (center s____________)))
 (let (($x1702 ((_ is stack ) ?x1549)))
 (let (($x1703 (= c____________ center-to-right)))
 (let (($x1704 (and $x1703 $x1702)))
 (let ((?x1690 (top ?x1549)))
 (let ((?x1691 (stack ?x1690 ?x1329)))
 (let (($x1718 (= ?x1467 ?x1691)))
 (let (($x1705 (= c____________ center-to-left)))
 (let (($x1706 (and $x1705 $x1702)))
 (let ((?x1500 (rest ?x1329)))
 (let (($x1714 (= ?x1467 ?x1500)))
 (let (($x1707 ((_ is stack ) ?x1329)))
 (let (($x1708 (= c____________ left-to-right)))
 (let (($x1709 (and $x1708 $x1707)))
 (let (($x1710 (= c____________ left-to-center)))
 (let (($x1711 (and $x1710 $x1707)))
 (ite $x1711 $x1714 (ite $x1709 $x1714 (ite $x1706 $x1718 (ite $x1704 $x1727 (ite $x1701 $x1721 $x1727))))))))))))))))))))))))))))))))
(assert
 (let ((?x1363 (right s____________)))
 (let ((?x1501 (right s_____________)))
 (let (($x1723 (= ?x1501 ?x1363)))
 (let ((?x1693 (rest ?x1363)))
 (let (($x1720 (= ?x1501 ?x1693)))
 (let (($x1697 ((_ is stack ) ?x1363)))
 (let (($x1698 (= c____________ right-to-center)))
 (let (($x1699 (and $x1698 $x1697)))
 (let (($x1700 (= c____________ right-to-left)))
 (let (($x1701 (and $x1700 $x1697)))
 (let ((?x1549 (center s____________)))
 (let ((?x1690 (top ?x1549)))
 (let ((?x1692 (stack ?x1690 ?x1363)))
 (let (($x1719 (= ?x1501 ?x1692)))
 (let (($x1702 ((_ is stack ) ?x1549)))
 (let (($x1703 (= c____________ center-to-right)))
 (let (($x1704 (and $x1703 $x1702)))
 (let (($x1705 (= c____________ center-to-left)))
 (let (($x1706 (and $x1705 $x1702)))
 (let ((?x1329 (left s____________)))
 (let (($x1707 ((_ is stack ) ?x1329)))
 (let (($x1708 (= c____________ left-to-right)))
 (let (($x1709 (and $x1708 $x1707)))
 (let (($x1740 (ite $x1709 $x1723 (ite $x1706 $x1723 (ite $x1704 $x1719 (ite $x1701 $x1720 (ite $x1699 $x1720 $x1723)))))))
 (let ((?x1547 (top ?x1329)))
 (let ((?x1686 (stack ?x1547 ?x1363)))
 (let (($x1715 (= ?x1501 ?x1686)))
 (let (($x1710 (= c____________ left-to-center)))
 (let (($x1711 (and $x1710 $x1707)))
 (ite $x1711 $x1715 $x1740)))))))))))))))))))))))))))))))
(assert
 (let ((?x1549 (center s____________)))
 (let ((?x1687 (center s_____________)))
 (let (($x1725 (= ?x1687 ?x1549)))
 (let ((?x1363 (right s____________)))
 (let ((?x1694 (top ?x1363)))
 (let ((?x1696 (stack ?x1694 ?x1549)))
 (let (($x1722 (= ?x1687 ?x1696)))
 (let (($x1697 ((_ is stack ) ?x1363)))
 (let (($x1698 (= c____________ right-to-center)))
 (let (($x1699 (and $x1698 $x1697)))
 (let (($x1700 (= c____________ right-to-left)))
 (let (($x1701 (and $x1700 $x1697)))
 (let ((?x1689 (rest ?x1549)))
 (let (($x1717 (= ?x1687 ?x1689)))
 (let (($x1702 ((_ is stack ) ?x1549)))
 (let (($x1703 (= c____________ center-to-right)))
 (let (($x1704 (and $x1703 $x1702)))
 (let (($x1705 (= c____________ center-to-left)))
 (let (($x1706 (and $x1705 $x1702)))
 (let ((?x1329 (left s____________)))
 (let ((?x1547 (top ?x1329)))
 (let ((?x1688 (stack ?x1547 ?x1549)))
 (let (($x1716 (= ?x1687 ?x1688)))
 (let (($x1707 ((_ is stack ) ?x1329)))
 (let (($x1708 (= c____________ left-to-right)))
 (let (($x1709 (and $x1708 $x1707)))
 (let (($x1739 (ite $x1709 $x1716 (ite $x1706 $x1717 (ite $x1704 $x1717 (ite $x1701 $x1725 (ite $x1699 $x1722 $x1725)))))))
 (let (($x1710 (= c____________ left-to-center)))
 (let (($x1711 (and $x1710 $x1707)))
 (ite $x1711 $x1725 $x1739)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1467 (left s_____________)))
 (let ((?x1605 (left s______________)))
 (let (($x1865 (= ?x1605 ?x1467)))
 (let ((?x1501 (right s_____________)))
 (let ((?x1832 (top ?x1501)))
 (let ((?x1833 (stack ?x1832 ?x1467)))
 (let (($x1859 (= ?x1605 ?x1833)))
 (let (($x1835 ((_ is stack ) ?x1501)))
 (let (($x1838 (= c_____________ right-to-left)))
 (let (($x1839 (and $x1838 $x1835)))
 (let ((?x1687 (center s_____________)))
 (let (($x1840 ((_ is stack ) ?x1687)))
 (let (($x1841 (= c_____________ center-to-right)))
 (let (($x1842 (and $x1841 $x1840)))
 (let ((?x1828 (top ?x1687)))
 (let ((?x1829 (stack ?x1828 ?x1467)))
 (let (($x1856 (= ?x1605 ?x1829)))
 (let (($x1843 (= c_____________ center-to-left)))
 (let (($x1844 (and $x1843 $x1840)))
 (let ((?x1638 (rest ?x1467)))
 (let (($x1852 (= ?x1605 ?x1638)))
 (let (($x1845 ((_ is stack ) ?x1467)))
 (let (($x1846 (= c_____________ left-to-right)))
 (let (($x1847 (and $x1846 $x1845)))
 (let (($x1848 (= c_____________ left-to-center)))
 (let (($x1849 (and $x1848 $x1845)))
 (ite $x1849 $x1852 (ite $x1847 $x1852 (ite $x1844 $x1856 (ite $x1842 $x1865 (ite $x1839 $x1859 $x1865))))))))))))))))))))))))))))))))
(assert
 (let ((?x1501 (right s_____________)))
 (let ((?x1639 (right s______________)))
 (let (($x1861 (= ?x1639 ?x1501)))
 (let ((?x1831 (rest ?x1501)))
 (let (($x1858 (= ?x1639 ?x1831)))
 (let (($x1835 ((_ is stack ) ?x1501)))
 (let (($x1836 (= c_____________ right-to-center)))
 (let (($x1837 (and $x1836 $x1835)))
 (let (($x1838 (= c_____________ right-to-left)))
 (let (($x1839 (and $x1838 $x1835)))
 (let ((?x1687 (center s_____________)))
 (let ((?x1828 (top ?x1687)))
 (let ((?x1830 (stack ?x1828 ?x1501)))
 (let (($x1857 (= ?x1639 ?x1830)))
 (let (($x1840 ((_ is stack ) ?x1687)))
 (let (($x1841 (= c_____________ center-to-right)))
 (let (($x1842 (and $x1841 $x1840)))
 (let (($x1843 (= c_____________ center-to-left)))
 (let (($x1844 (and $x1843 $x1840)))
 (let ((?x1467 (left s_____________)))
 (let (($x1845 ((_ is stack ) ?x1467)))
 (let (($x1846 (= c_____________ left-to-right)))
 (let (($x1847 (and $x1846 $x1845)))
 (let (($x1878 (ite $x1847 $x1861 (ite $x1844 $x1861 (ite $x1842 $x1857 (ite $x1839 $x1858 (ite $x1837 $x1858 $x1861)))))))
 (let ((?x1685 (top ?x1467)))
 (let ((?x1824 (stack ?x1685 ?x1501)))
 (let (($x1853 (= ?x1639 ?x1824)))
 (let (($x1848 (= c_____________ left-to-center)))
 (let (($x1849 (and $x1848 $x1845)))
 (ite $x1849 $x1853 $x1878)))))))))))))))))))))))))))))))
(assert
 (let ((?x1687 (center s_____________)))
 (let ((?x1825 (center s______________)))
 (let (($x1863 (= ?x1825 ?x1687)))
 (let ((?x1501 (right s_____________)))
 (let ((?x1832 (top ?x1501)))
 (let ((?x1834 (stack ?x1832 ?x1687)))
 (let (($x1860 (= ?x1825 ?x1834)))
 (let (($x1835 ((_ is stack ) ?x1501)))
 (let (($x1836 (= c_____________ right-to-center)))
 (let (($x1837 (and $x1836 $x1835)))
 (let (($x1838 (= c_____________ right-to-left)))
 (let (($x1839 (and $x1838 $x1835)))
 (let ((?x1827 (rest ?x1687)))
 (let (($x1855 (= ?x1825 ?x1827)))
 (let (($x1840 ((_ is stack ) ?x1687)))
 (let (($x1841 (= c_____________ center-to-right)))
 (let (($x1842 (and $x1841 $x1840)))
 (let (($x1843 (= c_____________ center-to-left)))
 (let (($x1844 (and $x1843 $x1840)))
 (let ((?x1467 (left s_____________)))
 (let ((?x1685 (top ?x1467)))
 (let ((?x1826 (stack ?x1685 ?x1687)))
 (let (($x1854 (= ?x1825 ?x1826)))
 (let (($x1845 ((_ is stack ) ?x1467)))
 (let (($x1846 (= c_____________ left-to-right)))
 (let (($x1847 (and $x1846 $x1845)))
 (let (($x1877 (ite $x1847 $x1854 (ite $x1844 $x1855 (ite $x1842 $x1855 (ite $x1839 $x1863 (ite $x1837 $x1860 $x1863)))))))
 (let (($x1848 (= c_____________ left-to-center)))
 (let (($x1849 (and $x1848 $x1845)))
 (ite $x1849 $x1863 $x1877)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1605 (left s______________)))
 (let ((?x1743 (left s_______________)))
 (let (($x2003 (= ?x1743 ?x1605)))
 (let ((?x1639 (right s______________)))
 (let ((?x1970 (top ?x1639)))
 (let ((?x1971 (stack ?x1970 ?x1605)))
 (let (($x1997 (= ?x1743 ?x1971)))
 (let (($x1973 ((_ is stack ) ?x1639)))
 (let (($x1976 (= c______________ right-to-left)))
 (let (($x1977 (and $x1976 $x1973)))
 (let ((?x1825 (center s______________)))
 (let (($x1978 ((_ is stack ) ?x1825)))
 (let (($x1979 (= c______________ center-to-right)))
 (let (($x1980 (and $x1979 $x1978)))
 (let ((?x1966 (top ?x1825)))
 (let ((?x1967 (stack ?x1966 ?x1605)))
 (let (($x1994 (= ?x1743 ?x1967)))
 (let (($x1981 (= c______________ center-to-left)))
 (let (($x1982 (and $x1981 $x1978)))
 (let ((?x1776 (rest ?x1605)))
 (let (($x1990 (= ?x1743 ?x1776)))
 (let (($x1983 ((_ is stack ) ?x1605)))
 (let (($x1984 (= c______________ left-to-right)))
 (let (($x1985 (and $x1984 $x1983)))
 (let (($x1986 (= c______________ left-to-center)))
 (let (($x1987 (and $x1986 $x1983)))
 (ite $x1987 $x1990 (ite $x1985 $x1990 (ite $x1982 $x1994 (ite $x1980 $x2003 (ite $x1977 $x1997 $x2003))))))))))))))))))))))))))))))))
(assert
 (let ((?x1639 (right s______________)))
 (let ((?x1777 (right s_______________)))
 (let (($x1999 (= ?x1777 ?x1639)))
 (let ((?x1969 (rest ?x1639)))
 (let (($x1996 (= ?x1777 ?x1969)))
 (let (($x1973 ((_ is stack ) ?x1639)))
 (let (($x1974 (= c______________ right-to-center)))
 (let (($x1975 (and $x1974 $x1973)))
 (let (($x1976 (= c______________ right-to-left)))
 (let (($x1977 (and $x1976 $x1973)))
 (let ((?x1825 (center s______________)))
 (let ((?x1966 (top ?x1825)))
 (let ((?x1968 (stack ?x1966 ?x1639)))
 (let (($x1995 (= ?x1777 ?x1968)))
 (let (($x1978 ((_ is stack ) ?x1825)))
 (let (($x1979 (= c______________ center-to-right)))
 (let (($x1980 (and $x1979 $x1978)))
 (let (($x1981 (= c______________ center-to-left)))
 (let (($x1982 (and $x1981 $x1978)))
 (let ((?x1605 (left s______________)))
 (let (($x1983 ((_ is stack ) ?x1605)))
 (let (($x1984 (= c______________ left-to-right)))
 (let (($x1985 (and $x1984 $x1983)))
 (let (($x2016 (ite $x1985 $x1999 (ite $x1982 $x1999 (ite $x1980 $x1995 (ite $x1977 $x1996 (ite $x1975 $x1996 $x1999)))))))
 (let ((?x1823 (top ?x1605)))
 (let ((?x1962 (stack ?x1823 ?x1639)))
 (let (($x1991 (= ?x1777 ?x1962)))
 (let (($x1986 (= c______________ left-to-center)))
 (let (($x1987 (and $x1986 $x1983)))
 (ite $x1987 $x1991 $x2016)))))))))))))))))))))))))))))))
(assert
 (let ((?x1825 (center s______________)))
 (let ((?x1963 (center s_______________)))
 (let (($x2001 (= ?x1963 ?x1825)))
 (let ((?x1639 (right s______________)))
 (let ((?x1970 (top ?x1639)))
 (let ((?x1972 (stack ?x1970 ?x1825)))
 (let (($x1998 (= ?x1963 ?x1972)))
 (let (($x1973 ((_ is stack ) ?x1639)))
 (let (($x1974 (= c______________ right-to-center)))
 (let (($x1975 (and $x1974 $x1973)))
 (let (($x1976 (= c______________ right-to-left)))
 (let (($x1977 (and $x1976 $x1973)))
 (let ((?x1965 (rest ?x1825)))
 (let (($x1993 (= ?x1963 ?x1965)))
 (let (($x1978 ((_ is stack ) ?x1825)))
 (let (($x1979 (= c______________ center-to-right)))
 (let (($x1980 (and $x1979 $x1978)))
 (let (($x1981 (= c______________ center-to-left)))
 (let (($x1982 (and $x1981 $x1978)))
 (let ((?x1605 (left s______________)))
 (let ((?x1823 (top ?x1605)))
 (let ((?x1964 (stack ?x1823 ?x1825)))
 (let (($x1992 (= ?x1963 ?x1964)))
 (let (($x1983 ((_ is stack ) ?x1605)))
 (let (($x1984 (= c______________ left-to-right)))
 (let (($x1985 (and $x1984 $x1983)))
 (let (($x2015 (ite $x1985 $x1992 (ite $x1982 $x1993 (ite $x1980 $x1993 (ite $x1977 $x2001 (ite $x1975 $x1998 $x2001)))))))
 (let (($x1986 (= c______________ left-to-center)))
 (let (($x1987 (and $x1986 $x1983)))
 (ite $x1987 $x2001 $x2015)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1743 (left s_______________)))
 (let ((?x1881 (left s________________)))
 (let (($x2141 (= ?x1881 ?x1743)))
 (let ((?x1777 (right s_______________)))
 (let ((?x2108 (top ?x1777)))
 (let ((?x2109 (stack ?x2108 ?x1743)))
 (let (($x2135 (= ?x1881 ?x2109)))
 (let (($x2111 ((_ is stack ) ?x1777)))
 (let (($x2114 (= c_______________ right-to-left)))
 (let (($x2115 (and $x2114 $x2111)))
 (let ((?x1963 (center s_______________)))
 (let (($x2116 ((_ is stack ) ?x1963)))
 (let (($x2117 (= c_______________ center-to-right)))
 (let (($x2118 (and $x2117 $x2116)))
 (let ((?x2104 (top ?x1963)))
 (let ((?x2105 (stack ?x2104 ?x1743)))
 (let (($x2132 (= ?x1881 ?x2105)))
 (let (($x2119 (= c_______________ center-to-left)))
 (let (($x2120 (and $x2119 $x2116)))
 (let ((?x1914 (rest ?x1743)))
 (let (($x2128 (= ?x1881 ?x1914)))
 (let (($x2121 ((_ is stack ) ?x1743)))
 (let (($x2122 (= c_______________ left-to-right)))
 (let (($x2123 (and $x2122 $x2121)))
 (let (($x2124 (= c_______________ left-to-center)))
 (let (($x2125 (and $x2124 $x2121)))
 (ite $x2125 $x2128 (ite $x2123 $x2128 (ite $x2120 $x2132 (ite $x2118 $x2141 (ite $x2115 $x2135 $x2141))))))))))))))))))))))))))))))))
(assert
 (let ((?x1777 (right s_______________)))
 (let ((?x1915 (right s________________)))
 (let (($x2137 (= ?x1915 ?x1777)))
 (let ((?x2107 (rest ?x1777)))
 (let (($x2134 (= ?x1915 ?x2107)))
 (let (($x2111 ((_ is stack ) ?x1777)))
 (let (($x2112 (= c_______________ right-to-center)))
 (let (($x2113 (and $x2112 $x2111)))
 (let (($x2114 (= c_______________ right-to-left)))
 (let (($x2115 (and $x2114 $x2111)))
 (let ((?x1963 (center s_______________)))
 (let ((?x2104 (top ?x1963)))
 (let ((?x2106 (stack ?x2104 ?x1777)))
 (let (($x2133 (= ?x1915 ?x2106)))
 (let (($x2116 ((_ is stack ) ?x1963)))
 (let (($x2117 (= c_______________ center-to-right)))
 (let (($x2118 (and $x2117 $x2116)))
 (let (($x2119 (= c_______________ center-to-left)))
 (let (($x2120 (and $x2119 $x2116)))
 (let ((?x1743 (left s_______________)))
 (let (($x2121 ((_ is stack ) ?x1743)))
 (let (($x2122 (= c_______________ left-to-right)))
 (let (($x2123 (and $x2122 $x2121)))
 (let (($x2154 (ite $x2123 $x2137 (ite $x2120 $x2137 (ite $x2118 $x2133 (ite $x2115 $x2134 (ite $x2113 $x2134 $x2137)))))))
 (let ((?x1961 (top ?x1743)))
 (let ((?x2100 (stack ?x1961 ?x1777)))
 (let (($x2129 (= ?x1915 ?x2100)))
 (let (($x2124 (= c_______________ left-to-center)))
 (let (($x2125 (and $x2124 $x2121)))
 (ite $x2125 $x2129 $x2154)))))))))))))))))))))))))))))))
(assert
 (let ((?x1963 (center s_______________)))
 (let ((?x2101 (center s________________)))
 (let (($x2139 (= ?x2101 ?x1963)))
 (let ((?x1777 (right s_______________)))
 (let ((?x2108 (top ?x1777)))
 (let ((?x2110 (stack ?x2108 ?x1963)))
 (let (($x2136 (= ?x2101 ?x2110)))
 (let (($x2111 ((_ is stack ) ?x1777)))
 (let (($x2112 (= c_______________ right-to-center)))
 (let (($x2113 (and $x2112 $x2111)))
 (let (($x2114 (= c_______________ right-to-left)))
 (let (($x2115 (and $x2114 $x2111)))
 (let ((?x2103 (rest ?x1963)))
 (let (($x2131 (= ?x2101 ?x2103)))
 (let (($x2116 ((_ is stack ) ?x1963)))
 (let (($x2117 (= c_______________ center-to-right)))
 (let (($x2118 (and $x2117 $x2116)))
 (let (($x2119 (= c_______________ center-to-left)))
 (let (($x2120 (and $x2119 $x2116)))
 (let ((?x1743 (left s_______________)))
 (let ((?x1961 (top ?x1743)))
 (let ((?x2102 (stack ?x1961 ?x1963)))
 (let (($x2130 (= ?x2101 ?x2102)))
 (let (($x2121 ((_ is stack ) ?x1743)))
 (let (($x2122 (= c_______________ left-to-right)))
 (let (($x2123 (and $x2122 $x2121)))
 (let (($x2153 (ite $x2123 $x2130 (ite $x2120 $x2131 (ite $x2118 $x2131 (ite $x2115 $x2139 (ite $x2113 $x2136 $x2139)))))))
 (let (($x2124 (= c_______________ left-to-center)))
 (let (($x2125 (and $x2124 $x2121)))
 (ite $x2125 $x2139 $x2153)))))))))))))))))))))))))))))))
(assert
 (= c_________________ c!16))
(assert
 (let ((?x1881 (left s________________)))
 (let ((?x2019 (left s_________________)))
 (let (($x2279 (= ?x2019 ?x1881)))
 (let ((?x1915 (right s________________)))
 (let ((?x2246 (top ?x1915)))
 (let ((?x2247 (stack ?x2246 ?x1881)))
 (let (($x2273 (= ?x2019 ?x2247)))
 (let (($x2249 ((_ is stack ) ?x1915)))
 (let (($x2252 (= c________________ right-to-left)))
 (let (($x2253 (and $x2252 $x2249)))
 (let ((?x2101 (center s________________)))
 (let (($x2254 ((_ is stack ) ?x2101)))
 (let (($x2255 (= c________________ center-to-right)))
 (let (($x2256 (and $x2255 $x2254)))
 (let ((?x2242 (top ?x2101)))
 (let ((?x2243 (stack ?x2242 ?x1881)))
 (let (($x2270 (= ?x2019 ?x2243)))
 (let (($x2257 (= c________________ center-to-left)))
 (let (($x2258 (and $x2257 $x2254)))
 (let ((?x2052 (rest ?x1881)))
 (let (($x2266 (= ?x2019 ?x2052)))
 (let (($x2259 ((_ is stack ) ?x1881)))
 (let (($x2260 (= c________________ left-to-right)))
 (let (($x2261 (and $x2260 $x2259)))
 (let (($x2262 (= c________________ left-to-center)))
 (let (($x2263 (and $x2262 $x2259)))
 (ite $x2263 $x2266 (ite $x2261 $x2266 (ite $x2258 $x2270 (ite $x2256 $x2279 (ite $x2253 $x2273 $x2279))))))))))))))))))))))))))))))))
(assert
 (let ((?x1915 (right s________________)))
 (let ((?x2053 (right s_________________)))
 (let (($x2275 (= ?x2053 ?x1915)))
 (let ((?x2245 (rest ?x1915)))
 (let (($x2272 (= ?x2053 ?x2245)))
 (let (($x2249 ((_ is stack ) ?x1915)))
 (let (($x2250 (= c________________ right-to-center)))
 (let (($x2251 (and $x2250 $x2249)))
 (let (($x2252 (= c________________ right-to-left)))
 (let (($x2253 (and $x2252 $x2249)))
 (let ((?x2101 (center s________________)))
 (let ((?x2242 (top ?x2101)))
 (let ((?x2244 (stack ?x2242 ?x1915)))
 (let (($x2271 (= ?x2053 ?x2244)))
 (let (($x2254 ((_ is stack ) ?x2101)))
 (let (($x2255 (= c________________ center-to-right)))
 (let (($x2256 (and $x2255 $x2254)))
 (let (($x2257 (= c________________ center-to-left)))
 (let (($x2258 (and $x2257 $x2254)))
 (let ((?x1881 (left s________________)))
 (let (($x2259 ((_ is stack ) ?x1881)))
 (let (($x2260 (= c________________ left-to-right)))
 (let (($x2261 (and $x2260 $x2259)))
 (let (($x2292 (ite $x2261 $x2275 (ite $x2258 $x2275 (ite $x2256 $x2271 (ite $x2253 $x2272 (ite $x2251 $x2272 $x2275)))))))
 (let ((?x2099 (top ?x1881)))
 (let ((?x2238 (stack ?x2099 ?x1915)))
 (let (($x2267 (= ?x2053 ?x2238)))
 (let (($x2262 (= c________________ left-to-center)))
 (let (($x2263 (and $x2262 $x2259)))
 (ite $x2263 $x2267 $x2292)))))))))))))))))))))))))))))))
(assert
 (let ((?x2101 (center s________________)))
 (let ((?x2239 (center s_________________)))
 (let (($x2277 (= ?x2239 ?x2101)))
 (let ((?x1915 (right s________________)))
 (let ((?x2246 (top ?x1915)))
 (let ((?x2248 (stack ?x2246 ?x2101)))
 (let (($x2274 (= ?x2239 ?x2248)))
 (let (($x2249 ((_ is stack ) ?x1915)))
 (let (($x2250 (= c________________ right-to-center)))
 (let (($x2251 (and $x2250 $x2249)))
 (let (($x2252 (= c________________ right-to-left)))
 (let (($x2253 (and $x2252 $x2249)))
 (let ((?x2241 (rest ?x2101)))
 (let (($x2269 (= ?x2239 ?x2241)))
 (let (($x2254 ((_ is stack ) ?x2101)))
 (let (($x2255 (= c________________ center-to-right)))
 (let (($x2256 (and $x2255 $x2254)))
 (let (($x2257 (= c________________ center-to-left)))
 (let (($x2258 (and $x2257 $x2254)))
 (let ((?x1881 (left s________________)))
 (let ((?x2099 (top ?x1881)))
 (let ((?x2240 (stack ?x2099 ?x2101)))
 (let (($x2268 (= ?x2239 ?x2240)))
 (let (($x2259 ((_ is stack ) ?x1881)))
 (let (($x2260 (= c________________ left-to-right)))
 (let (($x2261 (and $x2260 $x2259)))
 (let (($x2291 (ite $x2261 $x2268 (ite $x2258 $x2269 (ite $x2256 $x2269 (ite $x2253 $x2277 (ite $x2251 $x2274 $x2277)))))))
 (let (($x2262 (= c________________ left-to-center)))
 (let (($x2263 (and $x2262 $x2259)))
 (ite $x2263 $x2277 $x2291)))))))))))))))))))))))))))))))
(assert
 (= c__________________ c!17))
(assert
 (let ((?x2019 (left s_________________)))
 (let ((?x2157 (left s__________________)))
 (let (($x2417 (= ?x2157 ?x2019)))
 (let ((?x2053 (right s_________________)))
 (let ((?x2384 (top ?x2053)))
 (let ((?x2385 (stack ?x2384 ?x2019)))
 (let (($x2411 (= ?x2157 ?x2385)))
 (let (($x2387 ((_ is stack ) ?x2053)))
 (let (($x2390 (= c_________________ right-to-left)))
 (let (($x2391 (and $x2390 $x2387)))
 (let ((?x2239 (center s_________________)))
 (let (($x2392 ((_ is stack ) ?x2239)))
 (let (($x2393 (= c_________________ center-to-right)))
 (let (($x2394 (and $x2393 $x2392)))
 (let ((?x2380 (top ?x2239)))
 (let ((?x2381 (stack ?x2380 ?x2019)))
 (let (($x2408 (= ?x2157 ?x2381)))
 (let (($x2395 (= c_________________ center-to-left)))
 (let (($x2396 (and $x2395 $x2392)))
 (let ((?x2190 (rest ?x2019)))
 (let (($x2404 (= ?x2157 ?x2190)))
 (let (($x2397 ((_ is stack ) ?x2019)))
 (let (($x2398 (= c_________________ left-to-right)))
 (let (($x2399 (and $x2398 $x2397)))
 (let (($x2400 (= c_________________ left-to-center)))
 (let (($x2401 (and $x2400 $x2397)))
 (ite $x2401 $x2404 (ite $x2399 $x2404 (ite $x2396 $x2408 (ite $x2394 $x2417 (ite $x2391 $x2411 $x2417))))))))))))))))))))))))))))))))
(assert
 (let ((?x2053 (right s_________________)))
 (let ((?x2191 (right s__________________)))
 (let (($x2413 (= ?x2191 ?x2053)))
 (let ((?x2383 (rest ?x2053)))
 (let (($x2410 (= ?x2191 ?x2383)))
 (let (($x2387 ((_ is stack ) ?x2053)))
 (let (($x2388 (= c_________________ right-to-center)))
 (let (($x2389 (and $x2388 $x2387)))
 (let (($x2390 (= c_________________ right-to-left)))
 (let (($x2391 (and $x2390 $x2387)))
 (let ((?x2239 (center s_________________)))
 (let ((?x2380 (top ?x2239)))
 (let ((?x2382 (stack ?x2380 ?x2053)))
 (let (($x2409 (= ?x2191 ?x2382)))
 (let (($x2392 ((_ is stack ) ?x2239)))
 (let (($x2393 (= c_________________ center-to-right)))
 (let (($x2394 (and $x2393 $x2392)))
 (let (($x2395 (= c_________________ center-to-left)))
 (let (($x2396 (and $x2395 $x2392)))
 (let ((?x2019 (left s_________________)))
 (let (($x2397 ((_ is stack ) ?x2019)))
 (let (($x2398 (= c_________________ left-to-right)))
 (let (($x2399 (and $x2398 $x2397)))
 (let (($x2430 (ite $x2399 $x2413 (ite $x2396 $x2413 (ite $x2394 $x2409 (ite $x2391 $x2410 (ite $x2389 $x2410 $x2413)))))))
 (let ((?x2237 (top ?x2019)))
 (let ((?x2376 (stack ?x2237 ?x2053)))
 (let (($x2405 (= ?x2191 ?x2376)))
 (let (($x2400 (= c_________________ left-to-center)))
 (let (($x2401 (and $x2400 $x2397)))
 (ite $x2401 $x2405 $x2430)))))))))))))))))))))))))))))))
(assert
 (let ((?x2239 (center s_________________)))
 (let ((?x2377 (center s__________________)))
 (let (($x2415 (= ?x2377 ?x2239)))
 (let ((?x2053 (right s_________________)))
 (let ((?x2384 (top ?x2053)))
 (let ((?x2386 (stack ?x2384 ?x2239)))
 (let (($x2412 (= ?x2377 ?x2386)))
 (let (($x2387 ((_ is stack ) ?x2053)))
 (let (($x2388 (= c_________________ right-to-center)))
 (let (($x2389 (and $x2388 $x2387)))
 (let (($x2390 (= c_________________ right-to-left)))
 (let (($x2391 (and $x2390 $x2387)))
 (let ((?x2379 (rest ?x2239)))
 (let (($x2407 (= ?x2377 ?x2379)))
 (let (($x2392 ((_ is stack ) ?x2239)))
 (let (($x2393 (= c_________________ center-to-right)))
 (let (($x2394 (and $x2393 $x2392)))
 (let (($x2395 (= c_________________ center-to-left)))
 (let (($x2396 (and $x2395 $x2392)))
 (let ((?x2019 (left s_________________)))
 (let ((?x2237 (top ?x2019)))
 (let ((?x2378 (stack ?x2237 ?x2239)))
 (let (($x2406 (= ?x2377 ?x2378)))
 (let (($x2397 ((_ is stack ) ?x2019)))
 (let (($x2398 (= c_________________ left-to-right)))
 (let (($x2399 (and $x2398 $x2397)))
 (let (($x2429 (ite $x2399 $x2406 (ite $x2396 $x2407 (ite $x2394 $x2407 (ite $x2391 $x2415 (ite $x2389 $x2412 $x2415)))))))
 (let (($x2400 (= c_________________ left-to-center)))
 (let (($x2401 (and $x2400 $x2397)))
 (ite $x2401 $x2415 $x2429)))))))))))))))))))))))))))))))
(assert
 (let ((?x44 (stack G empty)))
 (let ((?x2191 (right s__________________)))
 (let (($x2433 (= ?x2191 ?x44)))
 (let ((?x43 (stack E (stack F (stack I (stack D empty))))))
 (let ((?x2377 (center s__________________)))
 (let (($x2464 (= ?x2377 ?x43)))
 (let ((?x39 (stack B (stack K (stack C (stack H (stack A (stack J empty))))))))
 (let ((?x2157 (left s__________________)))
 (let (($x2465 (= ?x2157 ?x39)))
 (let (($x2467 (not (and $x2465 $x2464 $x2433))))
 (not $x2467))))))))))))
(check-sat)
(exit)
