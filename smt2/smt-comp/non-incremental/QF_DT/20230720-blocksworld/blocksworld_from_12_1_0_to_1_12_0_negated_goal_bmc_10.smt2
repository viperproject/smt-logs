(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x25 (stack L empty)))
 (let ((?x26 (stack K ?x25)))
 (let ((?x27 (stack A ?x26)))
 (let ((?x28 (stack C ?x27)))
 (let ((?x29 (stack M ?x28)))
 (let ((?x30 (stack B ?x29)))
 (let ((?x31 (stack F ?x30)))
 (let ((?x32 (stack J ?x31)))
 (let ((?x33 (stack H ?x32)))
 (let ((?x34 (stack D ?x33)))
 (let ((?x35 (stack G ?x34)))
 (let ((?x36 (stack E ?x35)))
 (let ((?x97 (left s_tmp_)))
 (= ?x97 ?x36)))))))))))))))
(assert
 (let ((?x37 (stack I empty)))
 (let ((?x100 (center s_tmp__)))
 (= ?x100 ?x37))))
(assert
 (let ((?x103 (right s_tmp___)))
 (= ?x103 empty)))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x130 (left s_tmp__)))
 (= (left s_tmp___) ?x130)))
(assert
 (let ((?x100 (center s_tmp__)))
 (= (center s_tmp___) ?x100)))
(assert
 (let ((?x134 (center s_tmp_)))
 (= ?x134 (center s_tmp))))
(assert
 (let ((?x137 (right s_tmp_)))
 (= ?x137 (right s_tmp))))
(assert
 (let ((?x97 (left s_tmp_)))
 (let ((?x130 (left s_tmp__)))
 (= ?x130 ?x97))))
(assert
 (let ((?x137 (right s_tmp_)))
 (let ((?x141 (right s_tmp__)))
 (= ?x141 ?x137))))
(assert
 (= c__ c!1))
(assert
 (let ((?x74 (left s_)))
 (let ((?x223 (left s__)))
 (let (($x268 (= ?x223 ?x74)))
 (let ((?x77 (right s_)))
 (let (($x238 ((_ is stack ) ?x77)))
 (let (($x242 (and (= c_ right-to-left) $x238)))
 (let ((?x79 (center s_)))
 (let (($x243 ((_ is stack ) ?x79)))
 (let (($x244 (= c_ center-to-right)))
 (let (($x245 (and $x244 $x243)))
 (let (($x246 (= c_ center-to-left)))
 (let (($x247 (and $x246 $x243)))
 (let (($x277 (ite $x247 (= ?x223 (stack (top ?x79) ?x74)) (ite $x245 $x268 (ite $x242 (= ?x223 (stack (top ?x77) ?x74)) $x268)))))
 (let (($x255 (= ?x223 (rest ?x74))))
 (let (($x248 ((_ is stack ) ?x74)))
 (let (($x249 (= c_ left-to-right)))
 (let (($x250 (and $x249 $x248)))
 (let (($x251 (= c_ left-to-center)))
 (let (($x252 (and $x251 $x248)))
 (ite $x252 $x255 (ite $x250 $x255 $x277))))))))))))))))))))))
(assert
 (let ((?x77 (right s_)))
 (let ((?x225 (right s__)))
 (let (($x264 (= ?x225 ?x77)))
 (let (($x261 (= ?x225 (rest ?x77))))
 (let (($x238 ((_ is stack ) ?x77)))
 (let (($x240 (and (= c_ right-to-center) $x238)))
 (let (($x242 (and (= c_ right-to-left) $x238)))
 (let ((?x79 (center s_)))
 (let (($x243 ((_ is stack ) ?x79)))
 (let (($x244 (= c_ center-to-right)))
 (let (($x245 (and $x244 $x243)))
 (let (($x274 (ite $x245 (= ?x225 (stack (top ?x79) ?x77)) (ite $x242 $x261 (ite $x240 $x261 $x264)))))
 (let (($x246 (= c_ center-to-left)))
 (let (($x247 (and $x246 $x243)))
 (let ((?x74 (left s_)))
 (let (($x248 ((_ is stack ) ?x74)))
 (let (($x249 (= c_ left-to-right)))
 (let (($x250 (and $x249 $x248)))
 (let (($x251 (= c_ left-to-center)))
 (let (($x252 (and $x251 $x248)))
 (ite $x252 (= ?x225 (stack (top ?x74) ?x77)) (ite $x250 $x264 (ite $x247 $x264 $x274))))))))))))))))))))))))
(assert
 (let ((?x79 (center s_)))
 (let ((?x228 (center s__)))
 (let (($x266 (= ?x228 ?x79)))
 (let ((?x77 (right s_)))
 (let (($x238 ((_ is stack ) ?x77)))
 (let (($x240 (and (= c_ right-to-center) $x238)))
 (let (($x242 (and (= c_ right-to-left) $x238)))
 (let (($x258 (= ?x228 (rest ?x79))))
 (let (($x243 ((_ is stack ) ?x79)))
 (let (($x244 (= c_ center-to-right)))
 (let (($x245 (and $x244 $x243)))
 (let (($x273 (ite $x245 $x258 (ite $x242 $x266 (ite $x240 (= ?x228 (stack (top ?x77) ?x79)) $x266)))))
 (let (($x246 (= c_ center-to-left)))
 (let (($x247 (and $x246 $x243)))
 (let ((?x74 (left s_)))
 (let (($x248 ((_ is stack ) ?x74)))
 (let (($x249 (= c_ left-to-right)))
 (let (($x250 (and $x249 $x248)))
 (let (($x251 (= c_ left-to-center)))
 (let (($x252 (and $x251 $x248)))
 (ite $x252 $x266 (ite $x250 (= ?x228 (stack (top ?x74) ?x79)) (ite $x247 $x258 $x273))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x223 (left s__)))
 (let ((?x146 (left s___)))
 (let (($x375 (= ?x146 ?x223)))
 (let ((?x225 (right s__)))
 (let ((?x342 (top ?x225)))
 (let ((?x343 (stack ?x342 ?x223)))
 (let (($x369 (= ?x146 ?x343)))
 (let (($x345 ((_ is stack ) ?x225)))
 (let (($x348 (= c__ right-to-left)))
 (let (($x349 (and $x348 $x345)))
 (let ((?x228 (center s__)))
 (let (($x350 ((_ is stack ) ?x228)))
 (let (($x351 (= c__ center-to-right)))
 (let (($x352 (and $x351 $x350)))
 (let ((?x338 (top ?x228)))
 (let ((?x339 (stack ?x338 ?x223)))
 (let (($x366 (= ?x146 ?x339)))
 (let (($x353 (= c__ center-to-left)))
 (let (($x354 (and $x353 $x350)))
 (let ((?x147 (rest ?x223)))
 (let (($x362 (= ?x146 ?x147)))
 (let (($x355 ((_ is stack ) ?x223)))
 (let (($x356 (= c__ left-to-right)))
 (let (($x357 (and $x356 $x355)))
 (let (($x358 (= c__ left-to-center)))
 (let (($x359 (and $x358 $x355)))
 (ite $x359 $x362 (ite $x357 $x362 (ite $x354 $x366 (ite $x352 $x375 (ite $x349 $x369 $x375))))))))))))))))))))))))))))))))
(assert
 (let ((?x225 (right s__)))
 (let ((?x220 (right s___)))
 (let (($x371 (= ?x220 ?x225)))
 (let ((?x341 (rest ?x225)))
 (let (($x368 (= ?x220 ?x341)))
 (let (($x345 ((_ is stack ) ?x225)))
 (let (($x346 (= c__ right-to-center)))
 (let (($x347 (and $x346 $x345)))
 (let (($x348 (= c__ right-to-left)))
 (let (($x349 (and $x348 $x345)))
 (let ((?x228 (center s__)))
 (let ((?x338 (top ?x228)))
 (let ((?x340 (stack ?x338 ?x225)))
 (let (($x367 (= ?x220 ?x340)))
 (let (($x350 ((_ is stack ) ?x228)))
 (let (($x351 (= c__ center-to-right)))
 (let (($x352 (and $x351 $x350)))
 (let (($x353 (= c__ center-to-left)))
 (let (($x354 (and $x353 $x350)))
 (let ((?x223 (left s__)))
 (let (($x355 ((_ is stack ) ?x223)))
 (let (($x356 (= c__ left-to-right)))
 (let (($x357 (and $x356 $x355)))
 (let (($x388 (ite $x357 $x371 (ite $x354 $x371 (ite $x352 $x367 (ite $x349 $x368 (ite $x347 $x368 $x371)))))))
 (let ((?x333 (top ?x223)))
 (let ((?x334 (stack ?x333 ?x225)))
 (let (($x363 (= ?x220 ?x334)))
 (let (($x358 (= c__ left-to-center)))
 (let (($x359 (and $x358 $x355)))
 (ite $x359 $x363 $x388)))))))))))))))))))))))))))))))
(assert
 (let ((?x228 (center s__)))
 (let ((?x335 (center s___)))
 (let (($x373 (= ?x335 ?x228)))
 (let ((?x225 (right s__)))
 (let ((?x342 (top ?x225)))
 (let ((?x344 (stack ?x342 ?x228)))
 (let (($x370 (= ?x335 ?x344)))
 (let (($x345 ((_ is stack ) ?x225)))
 (let (($x346 (= c__ right-to-center)))
 (let (($x347 (and $x346 $x345)))
 (let (($x348 (= c__ right-to-left)))
 (let (($x349 (and $x348 $x345)))
 (let ((?x337 (rest ?x228)))
 (let (($x365 (= ?x335 ?x337)))
 (let (($x350 ((_ is stack ) ?x228)))
 (let (($x351 (= c__ center-to-right)))
 (let (($x352 (and $x351 $x350)))
 (let (($x353 (= c__ center-to-left)))
 (let (($x354 (and $x353 $x350)))
 (let ((?x223 (left s__)))
 (let ((?x333 (top ?x223)))
 (let ((?x336 (stack ?x333 ?x228)))
 (let (($x364 (= ?x335 ?x336)))
 (let (($x355 ((_ is stack ) ?x223)))
 (let (($x356 (= c__ left-to-right)))
 (let (($x357 (and $x356 $x355)))
 (let (($x387 (ite $x357 $x364 (ite $x354 $x365 (ite $x352 $x365 (ite $x349 $x373 (ite $x347 $x370 $x373)))))))
 (let (($x358 (= c__ left-to-center)))
 (let (($x359 (and $x358 $x355)))
 (ite $x359 $x373 $x387)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x146 (left s___)))
 (let ((?x313 (left s____)))
 (let (($x514 (= ?x313 ?x146)))
 (let ((?x220 (right s___)))
 (let ((?x481 (top ?x220)))
 (let ((?x482 (stack ?x481 ?x146)))
 (let (($x508 (= ?x313 ?x482)))
 (let (($x484 ((_ is stack ) ?x220)))
 (let (($x487 (= c___ right-to-left)))
 (let (($x488 (and $x487 $x484)))
 (let ((?x335 (center s___)))
 (let (($x489 ((_ is stack ) ?x335)))
 (let (($x490 (= c___ center-to-right)))
 (let (($x491 (and $x490 $x489)))
 (let ((?x477 (top ?x335)))
 (let ((?x478 (stack ?x477 ?x146)))
 (let (($x505 (= ?x313 ?x478)))
 (let (($x492 (= c___ center-to-left)))
 (let (($x493 (and $x492 $x489)))
 (let ((?x314 (rest ?x146)))
 (let (($x501 (= ?x313 ?x314)))
 (let (($x494 ((_ is stack ) ?x146)))
 (let (($x495 (= c___ left-to-right)))
 (let (($x496 (and $x495 $x494)))
 (let (($x497 (= c___ left-to-center)))
 (let (($x498 (and $x497 $x494)))
 (ite $x498 $x501 (ite $x496 $x501 (ite $x493 $x505 (ite $x491 $x514 (ite $x488 $x508 $x514))))))))))))))))))))))))))))))))
(assert
 (let ((?x220 (right s___)))
 (let ((?x332 (right s____)))
 (let (($x510 (= ?x332 ?x220)))
 (let ((?x480 (rest ?x220)))
 (let (($x507 (= ?x332 ?x480)))
 (let (($x484 ((_ is stack ) ?x220)))
 (let (($x485 (= c___ right-to-center)))
 (let (($x486 (and $x485 $x484)))
 (let (($x487 (= c___ right-to-left)))
 (let (($x488 (and $x487 $x484)))
 (let ((?x335 (center s___)))
 (let ((?x477 (top ?x335)))
 (let ((?x479 (stack ?x477 ?x220)))
 (let (($x506 (= ?x332 ?x479)))
 (let (($x489 ((_ is stack ) ?x335)))
 (let (($x490 (= c___ center-to-right)))
 (let (($x491 (and $x490 $x489)))
 (let (($x492 (= c___ center-to-left)))
 (let (($x493 (and $x492 $x489)))
 (let ((?x146 (left s___)))
 (let (($x494 ((_ is stack ) ?x146)))
 (let (($x495 (= c___ left-to-right)))
 (let (($x496 (and $x495 $x494)))
 (let (($x527 (ite $x496 $x510 (ite $x493 $x510 (ite $x491 $x506 (ite $x488 $x507 (ite $x486 $x507 $x510)))))))
 (let ((?x472 (top ?x146)))
 (let ((?x473 (stack ?x472 ?x220)))
 (let (($x502 (= ?x332 ?x473)))
 (let (($x497 (= c___ left-to-center)))
 (let (($x498 (and $x497 $x494)))
 (ite $x498 $x502 $x527)))))))))))))))))))))))))))))))
(assert
 (let ((?x335 (center s___)))
 (let ((?x474 (center s____)))
 (let (($x512 (= ?x474 ?x335)))
 (let ((?x220 (right s___)))
 (let ((?x481 (top ?x220)))
 (let ((?x483 (stack ?x481 ?x335)))
 (let (($x509 (= ?x474 ?x483)))
 (let (($x484 ((_ is stack ) ?x220)))
 (let (($x485 (= c___ right-to-center)))
 (let (($x486 (and $x485 $x484)))
 (let (($x487 (= c___ right-to-left)))
 (let (($x488 (and $x487 $x484)))
 (let ((?x476 (rest ?x335)))
 (let (($x504 (= ?x474 ?x476)))
 (let (($x489 ((_ is stack ) ?x335)))
 (let (($x490 (= c___ center-to-right)))
 (let (($x491 (and $x490 $x489)))
 (let (($x492 (= c___ center-to-left)))
 (let (($x493 (and $x492 $x489)))
 (let ((?x146 (left s___)))
 (let ((?x472 (top ?x146)))
 (let ((?x475 (stack ?x472 ?x335)))
 (let (($x503 (= ?x474 ?x475)))
 (let (($x494 ((_ is stack ) ?x146)))
 (let (($x495 (= c___ left-to-right)))
 (let (($x496 (and $x495 $x494)))
 (let (($x526 (ite $x496 $x503 (ite $x493 $x504 (ite $x491 $x504 (ite $x488 $x512 (ite $x486 $x509 $x512)))))))
 (let (($x497 (= c___ left-to-center)))
 (let (($x498 (and $x497 $x494)))
 (ite $x498 $x512 $x526)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x313 (left s____)))
 (let ((?x391 (left s_____)))
 (let (($x652 (= ?x391 ?x313)))
 (let ((?x332 (right s____)))
 (let ((?x619 (top ?x332)))
 (let ((?x620 (stack ?x619 ?x313)))
 (let (($x646 (= ?x391 ?x620)))
 (let (($x622 ((_ is stack ) ?x332)))
 (let (($x625 (= c____ right-to-left)))
 (let (($x626 (and $x625 $x622)))
 (let ((?x474 (center s____)))
 (let (($x627 ((_ is stack ) ?x474)))
 (let (($x628 (= c____ center-to-right)))
 (let (($x629 (and $x628 $x627)))
 (let ((?x615 (top ?x474)))
 (let ((?x616 (stack ?x615 ?x313)))
 (let (($x643 (= ?x391 ?x616)))
 (let (($x630 (= c____ center-to-left)))
 (let (($x631 (and $x630 $x627)))
 (let ((?x424 (rest ?x313)))
 (let (($x639 (= ?x391 ?x424)))
 (let (($x632 ((_ is stack ) ?x313)))
 (let (($x633 (= c____ left-to-right)))
 (let (($x634 (and $x633 $x632)))
 (let (($x635 (= c____ left-to-center)))
 (let (($x636 (and $x635 $x632)))
 (ite $x636 $x639 (ite $x634 $x639 (ite $x631 $x643 (ite $x629 $x652 (ite $x626 $x646 $x652))))))))))))))))))))))))))))))))
(assert
 (let ((?x332 (right s____)))
 (let ((?x425 (right s_____)))
 (let (($x648 (= ?x425 ?x332)))
 (let ((?x618 (rest ?x332)))
 (let (($x645 (= ?x425 ?x618)))
 (let (($x622 ((_ is stack ) ?x332)))
 (let (($x623 (= c____ right-to-center)))
 (let (($x624 (and $x623 $x622)))
 (let (($x625 (= c____ right-to-left)))
 (let (($x626 (and $x625 $x622)))
 (let ((?x474 (center s____)))
 (let ((?x615 (top ?x474)))
 (let ((?x617 (stack ?x615 ?x332)))
 (let (($x644 (= ?x425 ?x617)))
 (let (($x627 ((_ is stack ) ?x474)))
 (let (($x628 (= c____ center-to-right)))
 (let (($x629 (and $x628 $x627)))
 (let (($x630 (= c____ center-to-left)))
 (let (($x631 (and $x630 $x627)))
 (let ((?x313 (left s____)))
 (let (($x632 ((_ is stack ) ?x313)))
 (let (($x633 (= c____ left-to-right)))
 (let (($x634 (and $x633 $x632)))
 (let (($x665 (ite $x634 $x648 (ite $x631 $x648 (ite $x629 $x644 (ite $x626 $x645 (ite $x624 $x645 $x648)))))))
 (let ((?x471 (top ?x313)))
 (let ((?x611 (stack ?x471 ?x332)))
 (let (($x640 (= ?x425 ?x611)))
 (let (($x635 (= c____ left-to-center)))
 (let (($x636 (and $x635 $x632)))
 (ite $x636 $x640 $x665)))))))))))))))))))))))))))))))
(assert
 (let ((?x474 (center s____)))
 (let ((?x612 (center s_____)))
 (let (($x650 (= ?x612 ?x474)))
 (let ((?x332 (right s____)))
 (let ((?x619 (top ?x332)))
 (let ((?x621 (stack ?x619 ?x474)))
 (let (($x647 (= ?x612 ?x621)))
 (let (($x622 ((_ is stack ) ?x332)))
 (let (($x623 (= c____ right-to-center)))
 (let (($x624 (and $x623 $x622)))
 (let (($x625 (= c____ right-to-left)))
 (let (($x626 (and $x625 $x622)))
 (let ((?x614 (rest ?x474)))
 (let (($x642 (= ?x612 ?x614)))
 (let (($x627 ((_ is stack ) ?x474)))
 (let (($x628 (= c____ center-to-right)))
 (let (($x629 (and $x628 $x627)))
 (let (($x630 (= c____ center-to-left)))
 (let (($x631 (and $x630 $x627)))
 (let ((?x313 (left s____)))
 (let ((?x471 (top ?x313)))
 (let ((?x613 (stack ?x471 ?x474)))
 (let (($x641 (= ?x612 ?x613)))
 (let (($x632 ((_ is stack ) ?x313)))
 (let (($x633 (= c____ left-to-right)))
 (let (($x634 (and $x633 $x632)))
 (let (($x664 (ite $x634 $x641 (ite $x631 $x642 (ite $x629 $x642 (ite $x626 $x650 (ite $x624 $x647 $x650)))))))
 (let (($x635 (= c____ left-to-center)))
 (let (($x636 (and $x635 $x632)))
 (ite $x636 $x650 $x664)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x391 (left s_____)))
 (let ((?x530 (left s______)))
 (let (($x790 (= ?x530 ?x391)))
 (let ((?x425 (right s_____)))
 (let ((?x757 (top ?x425)))
 (let ((?x758 (stack ?x757 ?x391)))
 (let (($x784 (= ?x530 ?x758)))
 (let (($x760 ((_ is stack ) ?x425)))
 (let (($x763 (= c_____ right-to-left)))
 (let (($x764 (and $x763 $x760)))
 (let ((?x612 (center s_____)))
 (let (($x765 ((_ is stack ) ?x612)))
 (let (($x766 (= c_____ center-to-right)))
 (let (($x767 (and $x766 $x765)))
 (let ((?x753 (top ?x612)))
 (let ((?x754 (stack ?x753 ?x391)))
 (let (($x781 (= ?x530 ?x754)))
 (let (($x768 (= c_____ center-to-left)))
 (let (($x769 (and $x768 $x765)))
 (let ((?x563 (rest ?x391)))
 (let (($x777 (= ?x530 ?x563)))
 (let (($x770 ((_ is stack ) ?x391)))
 (let (($x771 (= c_____ left-to-right)))
 (let (($x772 (and $x771 $x770)))
 (let (($x773 (= c_____ left-to-center)))
 (let (($x774 (and $x773 $x770)))
 (ite $x774 $x777 (ite $x772 $x777 (ite $x769 $x781 (ite $x767 $x790 (ite $x764 $x784 $x790))))))))))))))))))))))))))))))))
(assert
 (let ((?x425 (right s_____)))
 (let ((?x564 (right s______)))
 (let (($x786 (= ?x564 ?x425)))
 (let ((?x756 (rest ?x425)))
 (let (($x783 (= ?x564 ?x756)))
 (let (($x760 ((_ is stack ) ?x425)))
 (let (($x761 (= c_____ right-to-center)))
 (let (($x762 (and $x761 $x760)))
 (let (($x763 (= c_____ right-to-left)))
 (let (($x764 (and $x763 $x760)))
 (let ((?x612 (center s_____)))
 (let ((?x753 (top ?x612)))
 (let ((?x755 (stack ?x753 ?x425)))
 (let (($x782 (= ?x564 ?x755)))
 (let (($x765 ((_ is stack ) ?x612)))
 (let (($x766 (= c_____ center-to-right)))
 (let (($x767 (and $x766 $x765)))
 (let (($x768 (= c_____ center-to-left)))
 (let (($x769 (and $x768 $x765)))
 (let ((?x391 (left s_____)))
 (let (($x770 ((_ is stack ) ?x391)))
 (let (($x771 (= c_____ left-to-right)))
 (let (($x772 (and $x771 $x770)))
 (let (($x803 (ite $x772 $x786 (ite $x769 $x786 (ite $x767 $x782 (ite $x764 $x783 (ite $x762 $x783 $x786)))))))
 (let ((?x610 (top ?x391)))
 (let ((?x749 (stack ?x610 ?x425)))
 (let (($x778 (= ?x564 ?x749)))
 (let (($x773 (= c_____ left-to-center)))
 (let (($x774 (and $x773 $x770)))
 (ite $x774 $x778 $x803)))))))))))))))))))))))))))))))
(assert
 (let ((?x612 (center s_____)))
 (let ((?x750 (center s______)))
 (let (($x788 (= ?x750 ?x612)))
 (let ((?x425 (right s_____)))
 (let ((?x757 (top ?x425)))
 (let ((?x759 (stack ?x757 ?x612)))
 (let (($x785 (= ?x750 ?x759)))
 (let (($x760 ((_ is stack ) ?x425)))
 (let (($x761 (= c_____ right-to-center)))
 (let (($x762 (and $x761 $x760)))
 (let (($x763 (= c_____ right-to-left)))
 (let (($x764 (and $x763 $x760)))
 (let ((?x752 (rest ?x612)))
 (let (($x780 (= ?x750 ?x752)))
 (let (($x765 ((_ is stack ) ?x612)))
 (let (($x766 (= c_____ center-to-right)))
 (let (($x767 (and $x766 $x765)))
 (let (($x768 (= c_____ center-to-left)))
 (let (($x769 (and $x768 $x765)))
 (let ((?x391 (left s_____)))
 (let ((?x610 (top ?x391)))
 (let ((?x751 (stack ?x610 ?x612)))
 (let (($x779 (= ?x750 ?x751)))
 (let (($x770 ((_ is stack ) ?x391)))
 (let (($x771 (= c_____ left-to-right)))
 (let (($x772 (and $x771 $x770)))
 (let (($x802 (ite $x772 $x779 (ite $x769 $x780 (ite $x767 $x780 (ite $x764 $x788 (ite $x762 $x785 $x788)))))))
 (let (($x773 (= c_____ left-to-center)))
 (let (($x774 (and $x773 $x770)))
 (ite $x774 $x788 $x802)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x530 (left s______)))
 (let ((?x668 (left s_______)))
 (let (($x928 (= ?x668 ?x530)))
 (let ((?x564 (right s______)))
 (let ((?x895 (top ?x564)))
 (let ((?x896 (stack ?x895 ?x530)))
 (let (($x922 (= ?x668 ?x896)))
 (let (($x898 ((_ is stack ) ?x564)))
 (let (($x901 (= c______ right-to-left)))
 (let (($x902 (and $x901 $x898)))
 (let ((?x750 (center s______)))
 (let (($x903 ((_ is stack ) ?x750)))
 (let (($x904 (= c______ center-to-right)))
 (let (($x905 (and $x904 $x903)))
 (let ((?x891 (top ?x750)))
 (let ((?x892 (stack ?x891 ?x530)))
 (let (($x919 (= ?x668 ?x892)))
 (let (($x906 (= c______ center-to-left)))
 (let (($x907 (and $x906 $x903)))
 (let ((?x701 (rest ?x530)))
 (let (($x915 (= ?x668 ?x701)))
 (let (($x908 ((_ is stack ) ?x530)))
 (let (($x909 (= c______ left-to-right)))
 (let (($x910 (and $x909 $x908)))
 (let (($x911 (= c______ left-to-center)))
 (let (($x912 (and $x911 $x908)))
 (ite $x912 $x915 (ite $x910 $x915 (ite $x907 $x919 (ite $x905 $x928 (ite $x902 $x922 $x928))))))))))))))))))))))))))))))))
(assert
 (let ((?x564 (right s______)))
 (let ((?x702 (right s_______)))
 (let (($x924 (= ?x702 ?x564)))
 (let ((?x894 (rest ?x564)))
 (let (($x921 (= ?x702 ?x894)))
 (let (($x898 ((_ is stack ) ?x564)))
 (let (($x899 (= c______ right-to-center)))
 (let (($x900 (and $x899 $x898)))
 (let (($x901 (= c______ right-to-left)))
 (let (($x902 (and $x901 $x898)))
 (let ((?x750 (center s______)))
 (let ((?x891 (top ?x750)))
 (let ((?x893 (stack ?x891 ?x564)))
 (let (($x920 (= ?x702 ?x893)))
 (let (($x903 ((_ is stack ) ?x750)))
 (let (($x904 (= c______ center-to-right)))
 (let (($x905 (and $x904 $x903)))
 (let (($x906 (= c______ center-to-left)))
 (let (($x907 (and $x906 $x903)))
 (let ((?x530 (left s______)))
 (let (($x908 ((_ is stack ) ?x530)))
 (let (($x909 (= c______ left-to-right)))
 (let (($x910 (and $x909 $x908)))
 (let (($x941 (ite $x910 $x924 (ite $x907 $x924 (ite $x905 $x920 (ite $x902 $x921 (ite $x900 $x921 $x924)))))))
 (let ((?x748 (top ?x530)))
 (let ((?x887 (stack ?x748 ?x564)))
 (let (($x916 (= ?x702 ?x887)))
 (let (($x911 (= c______ left-to-center)))
 (let (($x912 (and $x911 $x908)))
 (ite $x912 $x916 $x941)))))))))))))))))))))))))))))))
(assert
 (let ((?x750 (center s______)))
 (let ((?x888 (center s_______)))
 (let (($x926 (= ?x888 ?x750)))
 (let ((?x564 (right s______)))
 (let ((?x895 (top ?x564)))
 (let ((?x897 (stack ?x895 ?x750)))
 (let (($x923 (= ?x888 ?x897)))
 (let (($x898 ((_ is stack ) ?x564)))
 (let (($x899 (= c______ right-to-center)))
 (let (($x900 (and $x899 $x898)))
 (let (($x901 (= c______ right-to-left)))
 (let (($x902 (and $x901 $x898)))
 (let ((?x890 (rest ?x750)))
 (let (($x918 (= ?x888 ?x890)))
 (let (($x903 ((_ is stack ) ?x750)))
 (let (($x904 (= c______ center-to-right)))
 (let (($x905 (and $x904 $x903)))
 (let (($x906 (= c______ center-to-left)))
 (let (($x907 (and $x906 $x903)))
 (let ((?x530 (left s______)))
 (let ((?x748 (top ?x530)))
 (let ((?x889 (stack ?x748 ?x750)))
 (let (($x917 (= ?x888 ?x889)))
 (let (($x908 ((_ is stack ) ?x530)))
 (let (($x909 (= c______ left-to-right)))
 (let (($x910 (and $x909 $x908)))
 (let (($x940 (ite $x910 $x917 (ite $x907 $x918 (ite $x905 $x918 (ite $x902 $x926 (ite $x900 $x923 $x926)))))))
 (let (($x911 (= c______ left-to-center)))
 (let (($x912 (and $x911 $x908)))
 (ite $x912 $x926 $x940)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x668 (left s_______)))
 (let ((?x806 (left s________)))
 (let (($x1066 (= ?x806 ?x668)))
 (let ((?x702 (right s_______)))
 (let ((?x1033 (top ?x702)))
 (let ((?x1034 (stack ?x1033 ?x668)))
 (let (($x1060 (= ?x806 ?x1034)))
 (let (($x1036 ((_ is stack ) ?x702)))
 (let (($x1039 (= c_______ right-to-left)))
 (let (($x1040 (and $x1039 $x1036)))
 (let ((?x888 (center s_______)))
 (let (($x1041 ((_ is stack ) ?x888)))
 (let (($x1042 (= c_______ center-to-right)))
 (let (($x1043 (and $x1042 $x1041)))
 (let ((?x1029 (top ?x888)))
 (let ((?x1030 (stack ?x1029 ?x668)))
 (let (($x1057 (= ?x806 ?x1030)))
 (let (($x1044 (= c_______ center-to-left)))
 (let (($x1045 (and $x1044 $x1041)))
 (let ((?x839 (rest ?x668)))
 (let (($x1053 (= ?x806 ?x839)))
 (let (($x1046 ((_ is stack ) ?x668)))
 (let (($x1047 (= c_______ left-to-right)))
 (let (($x1048 (and $x1047 $x1046)))
 (let (($x1049 (= c_______ left-to-center)))
 (let (($x1050 (and $x1049 $x1046)))
 (ite $x1050 $x1053 (ite $x1048 $x1053 (ite $x1045 $x1057 (ite $x1043 $x1066 (ite $x1040 $x1060 $x1066))))))))))))))))))))))))))))))))
(assert
 (let ((?x702 (right s_______)))
 (let ((?x840 (right s________)))
 (let (($x1062 (= ?x840 ?x702)))
 (let ((?x1032 (rest ?x702)))
 (let (($x1059 (= ?x840 ?x1032)))
 (let (($x1036 ((_ is stack ) ?x702)))
 (let (($x1037 (= c_______ right-to-center)))
 (let (($x1038 (and $x1037 $x1036)))
 (let (($x1039 (= c_______ right-to-left)))
 (let (($x1040 (and $x1039 $x1036)))
 (let ((?x888 (center s_______)))
 (let ((?x1029 (top ?x888)))
 (let ((?x1031 (stack ?x1029 ?x702)))
 (let (($x1058 (= ?x840 ?x1031)))
 (let (($x1041 ((_ is stack ) ?x888)))
 (let (($x1042 (= c_______ center-to-right)))
 (let (($x1043 (and $x1042 $x1041)))
 (let (($x1044 (= c_______ center-to-left)))
 (let (($x1045 (and $x1044 $x1041)))
 (let ((?x668 (left s_______)))
 (let (($x1046 ((_ is stack ) ?x668)))
 (let (($x1047 (= c_______ left-to-right)))
 (let (($x1048 (and $x1047 $x1046)))
 (let (($x1079 (ite $x1048 $x1062 (ite $x1045 $x1062 (ite $x1043 $x1058 (ite $x1040 $x1059 (ite $x1038 $x1059 $x1062)))))))
 (let ((?x886 (top ?x668)))
 (let ((?x1025 (stack ?x886 ?x702)))
 (let (($x1054 (= ?x840 ?x1025)))
 (let (($x1049 (= c_______ left-to-center)))
 (let (($x1050 (and $x1049 $x1046)))
 (ite $x1050 $x1054 $x1079)))))))))))))))))))))))))))))))
(assert
 (let ((?x888 (center s_______)))
 (let ((?x1026 (center s________)))
 (let (($x1064 (= ?x1026 ?x888)))
 (let ((?x702 (right s_______)))
 (let ((?x1033 (top ?x702)))
 (let ((?x1035 (stack ?x1033 ?x888)))
 (let (($x1061 (= ?x1026 ?x1035)))
 (let (($x1036 ((_ is stack ) ?x702)))
 (let (($x1037 (= c_______ right-to-center)))
 (let (($x1038 (and $x1037 $x1036)))
 (let (($x1039 (= c_______ right-to-left)))
 (let (($x1040 (and $x1039 $x1036)))
 (let ((?x1028 (rest ?x888)))
 (let (($x1056 (= ?x1026 ?x1028)))
 (let (($x1041 ((_ is stack ) ?x888)))
 (let (($x1042 (= c_______ center-to-right)))
 (let (($x1043 (and $x1042 $x1041)))
 (let (($x1044 (= c_______ center-to-left)))
 (let (($x1045 (and $x1044 $x1041)))
 (let ((?x668 (left s_______)))
 (let ((?x886 (top ?x668)))
 (let ((?x1027 (stack ?x886 ?x888)))
 (let (($x1055 (= ?x1026 ?x1027)))
 (let (($x1046 ((_ is stack ) ?x668)))
 (let (($x1047 (= c_______ left-to-right)))
 (let (($x1048 (and $x1047 $x1046)))
 (let (($x1078 (ite $x1048 $x1055 (ite $x1045 $x1056 (ite $x1043 $x1056 (ite $x1040 $x1064 (ite $x1038 $x1061 $x1064)))))))
 (let (($x1049 (= c_______ left-to-center)))
 (let (($x1050 (and $x1049 $x1046)))
 (ite $x1050 $x1064 $x1078)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x806 (left s________)))
 (let ((?x944 (left s_________)))
 (let (($x1204 (= ?x944 ?x806)))
 (let ((?x840 (right s________)))
 (let ((?x1171 (top ?x840)))
 (let ((?x1172 (stack ?x1171 ?x806)))
 (let (($x1198 (= ?x944 ?x1172)))
 (let (($x1174 ((_ is stack ) ?x840)))
 (let (($x1177 (= c________ right-to-left)))
 (let (($x1178 (and $x1177 $x1174)))
 (let ((?x1026 (center s________)))
 (let (($x1179 ((_ is stack ) ?x1026)))
 (let (($x1180 (= c________ center-to-right)))
 (let (($x1181 (and $x1180 $x1179)))
 (let ((?x1167 (top ?x1026)))
 (let ((?x1168 (stack ?x1167 ?x806)))
 (let (($x1195 (= ?x944 ?x1168)))
 (let (($x1182 (= c________ center-to-left)))
 (let (($x1183 (and $x1182 $x1179)))
 (let ((?x977 (rest ?x806)))
 (let (($x1191 (= ?x944 ?x977)))
 (let (($x1184 ((_ is stack ) ?x806)))
 (let (($x1185 (= c________ left-to-right)))
 (let (($x1186 (and $x1185 $x1184)))
 (let (($x1187 (= c________ left-to-center)))
 (let (($x1188 (and $x1187 $x1184)))
 (ite $x1188 $x1191 (ite $x1186 $x1191 (ite $x1183 $x1195 (ite $x1181 $x1204 (ite $x1178 $x1198 $x1204))))))))))))))))))))))))))))))))
(assert
 (let ((?x840 (right s________)))
 (let ((?x978 (right s_________)))
 (let (($x1200 (= ?x978 ?x840)))
 (let ((?x1170 (rest ?x840)))
 (let (($x1197 (= ?x978 ?x1170)))
 (let (($x1174 ((_ is stack ) ?x840)))
 (let (($x1175 (= c________ right-to-center)))
 (let (($x1176 (and $x1175 $x1174)))
 (let (($x1177 (= c________ right-to-left)))
 (let (($x1178 (and $x1177 $x1174)))
 (let ((?x1026 (center s________)))
 (let ((?x1167 (top ?x1026)))
 (let ((?x1169 (stack ?x1167 ?x840)))
 (let (($x1196 (= ?x978 ?x1169)))
 (let (($x1179 ((_ is stack ) ?x1026)))
 (let (($x1180 (= c________ center-to-right)))
 (let (($x1181 (and $x1180 $x1179)))
 (let (($x1182 (= c________ center-to-left)))
 (let (($x1183 (and $x1182 $x1179)))
 (let ((?x806 (left s________)))
 (let (($x1184 ((_ is stack ) ?x806)))
 (let (($x1185 (= c________ left-to-right)))
 (let (($x1186 (and $x1185 $x1184)))
 (let (($x1217 (ite $x1186 $x1200 (ite $x1183 $x1200 (ite $x1181 $x1196 (ite $x1178 $x1197 (ite $x1176 $x1197 $x1200)))))))
 (let ((?x1024 (top ?x806)))
 (let ((?x1163 (stack ?x1024 ?x840)))
 (let (($x1192 (= ?x978 ?x1163)))
 (let (($x1187 (= c________ left-to-center)))
 (let (($x1188 (and $x1187 $x1184)))
 (ite $x1188 $x1192 $x1217)))))))))))))))))))))))))))))))
(assert
 (let ((?x1026 (center s________)))
 (let ((?x1164 (center s_________)))
 (let (($x1202 (= ?x1164 ?x1026)))
 (let ((?x840 (right s________)))
 (let ((?x1171 (top ?x840)))
 (let ((?x1173 (stack ?x1171 ?x1026)))
 (let (($x1199 (= ?x1164 ?x1173)))
 (let (($x1174 ((_ is stack ) ?x840)))
 (let (($x1175 (= c________ right-to-center)))
 (let (($x1176 (and $x1175 $x1174)))
 (let (($x1177 (= c________ right-to-left)))
 (let (($x1178 (and $x1177 $x1174)))
 (let ((?x1166 (rest ?x1026)))
 (let (($x1194 (= ?x1164 ?x1166)))
 (let (($x1179 ((_ is stack ) ?x1026)))
 (let (($x1180 (= c________ center-to-right)))
 (let (($x1181 (and $x1180 $x1179)))
 (let (($x1182 (= c________ center-to-left)))
 (let (($x1183 (and $x1182 $x1179)))
 (let ((?x806 (left s________)))
 (let ((?x1024 (top ?x806)))
 (let ((?x1165 (stack ?x1024 ?x1026)))
 (let (($x1193 (= ?x1164 ?x1165)))
 (let (($x1184 ((_ is stack ) ?x806)))
 (let (($x1185 (= c________ left-to-right)))
 (let (($x1186 (and $x1185 $x1184)))
 (let (($x1216 (ite $x1186 $x1193 (ite $x1183 $x1194 (ite $x1181 $x1194 (ite $x1178 $x1202 (ite $x1176 $x1199 $x1202)))))))
 (let (($x1187 (= c________ left-to-center)))
 (let (($x1188 (and $x1187 $x1184)))
 (ite $x1188 $x1202 $x1216)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x944 (left s_________)))
 (let ((?x1082 (left s__________)))
 (let (($x1342 (= ?x1082 ?x944)))
 (let ((?x978 (right s_________)))
 (let ((?x1309 (top ?x978)))
 (let ((?x1310 (stack ?x1309 ?x944)))
 (let (($x1336 (= ?x1082 ?x1310)))
 (let (($x1312 ((_ is stack ) ?x978)))
 (let (($x1315 (= c_________ right-to-left)))
 (let (($x1316 (and $x1315 $x1312)))
 (let ((?x1164 (center s_________)))
 (let (($x1317 ((_ is stack ) ?x1164)))
 (let (($x1318 (= c_________ center-to-right)))
 (let (($x1319 (and $x1318 $x1317)))
 (let ((?x1305 (top ?x1164)))
 (let ((?x1306 (stack ?x1305 ?x944)))
 (let (($x1333 (= ?x1082 ?x1306)))
 (let (($x1320 (= c_________ center-to-left)))
 (let (($x1321 (and $x1320 $x1317)))
 (let ((?x1115 (rest ?x944)))
 (let (($x1329 (= ?x1082 ?x1115)))
 (let (($x1322 ((_ is stack ) ?x944)))
 (let (($x1323 (= c_________ left-to-right)))
 (let (($x1324 (and $x1323 $x1322)))
 (let (($x1325 (= c_________ left-to-center)))
 (let (($x1326 (and $x1325 $x1322)))
 (ite $x1326 $x1329 (ite $x1324 $x1329 (ite $x1321 $x1333 (ite $x1319 $x1342 (ite $x1316 $x1336 $x1342))))))))))))))))))))))))))))))))
(assert
 (let ((?x978 (right s_________)))
 (let ((?x1116 (right s__________)))
 (let (($x1338 (= ?x1116 ?x978)))
 (let ((?x1308 (rest ?x978)))
 (let (($x1335 (= ?x1116 ?x1308)))
 (let (($x1312 ((_ is stack ) ?x978)))
 (let (($x1313 (= c_________ right-to-center)))
 (let (($x1314 (and $x1313 $x1312)))
 (let (($x1315 (= c_________ right-to-left)))
 (let (($x1316 (and $x1315 $x1312)))
 (let ((?x1164 (center s_________)))
 (let ((?x1305 (top ?x1164)))
 (let ((?x1307 (stack ?x1305 ?x978)))
 (let (($x1334 (= ?x1116 ?x1307)))
 (let (($x1317 ((_ is stack ) ?x1164)))
 (let (($x1318 (= c_________ center-to-right)))
 (let (($x1319 (and $x1318 $x1317)))
 (let (($x1320 (= c_________ center-to-left)))
 (let (($x1321 (and $x1320 $x1317)))
 (let ((?x944 (left s_________)))
 (let (($x1322 ((_ is stack ) ?x944)))
 (let (($x1323 (= c_________ left-to-right)))
 (let (($x1324 (and $x1323 $x1322)))
 (let (($x1355 (ite $x1324 $x1338 (ite $x1321 $x1338 (ite $x1319 $x1334 (ite $x1316 $x1335 (ite $x1314 $x1335 $x1338)))))))
 (let ((?x1162 (top ?x944)))
 (let ((?x1301 (stack ?x1162 ?x978)))
 (let (($x1330 (= ?x1116 ?x1301)))
 (let (($x1325 (= c_________ left-to-center)))
 (let (($x1326 (and $x1325 $x1322)))
 (ite $x1326 $x1330 $x1355)))))))))))))))))))))))))))))))
(assert
 (let ((?x1164 (center s_________)))
 (let ((?x1302 (center s__________)))
 (let (($x1340 (= ?x1302 ?x1164)))
 (let ((?x978 (right s_________)))
 (let ((?x1309 (top ?x978)))
 (let ((?x1311 (stack ?x1309 ?x1164)))
 (let (($x1337 (= ?x1302 ?x1311)))
 (let (($x1312 ((_ is stack ) ?x978)))
 (let (($x1313 (= c_________ right-to-center)))
 (let (($x1314 (and $x1313 $x1312)))
 (let (($x1315 (= c_________ right-to-left)))
 (let (($x1316 (and $x1315 $x1312)))
 (let ((?x1304 (rest ?x1164)))
 (let (($x1332 (= ?x1302 ?x1304)))
 (let (($x1317 ((_ is stack ) ?x1164)))
 (let (($x1318 (= c_________ center-to-right)))
 (let (($x1319 (and $x1318 $x1317)))
 (let (($x1320 (= c_________ center-to-left)))
 (let (($x1321 (and $x1320 $x1317)))
 (let ((?x944 (left s_________)))
 (let ((?x1162 (top ?x944)))
 (let ((?x1303 (stack ?x1162 ?x1164)))
 (let (($x1331 (= ?x1302 ?x1303)))
 (let (($x1322 ((_ is stack ) ?x944)))
 (let (($x1323 (= c_________ left-to-right)))
 (let (($x1324 (and $x1323 $x1322)))
 (let (($x1354 (ite $x1324 $x1331 (ite $x1321 $x1332 (ite $x1319 $x1332 (ite $x1316 $x1340 (ite $x1314 $x1337 $x1340)))))))
 (let (($x1325 (= c_________ left-to-center)))
 (let (($x1326 (and $x1325 $x1322)))
 (ite $x1326 $x1340 $x1354)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1082 (left s__________)))
 (let ((?x1220 (left s___________)))
 (let (($x1480 (= ?x1220 ?x1082)))
 (let ((?x1116 (right s__________)))
 (let ((?x1447 (top ?x1116)))
 (let ((?x1448 (stack ?x1447 ?x1082)))
 (let (($x1474 (= ?x1220 ?x1448)))
 (let (($x1450 ((_ is stack ) ?x1116)))
 (let (($x1453 (= c__________ right-to-left)))
 (let (($x1454 (and $x1453 $x1450)))
 (let ((?x1302 (center s__________)))
 (let (($x1455 ((_ is stack ) ?x1302)))
 (let (($x1456 (= c__________ center-to-right)))
 (let (($x1457 (and $x1456 $x1455)))
 (let ((?x1443 (top ?x1302)))
 (let ((?x1444 (stack ?x1443 ?x1082)))
 (let (($x1471 (= ?x1220 ?x1444)))
 (let (($x1458 (= c__________ center-to-left)))
 (let (($x1459 (and $x1458 $x1455)))
 (let ((?x1253 (rest ?x1082)))
 (let (($x1467 (= ?x1220 ?x1253)))
 (let (($x1460 ((_ is stack ) ?x1082)))
 (let (($x1461 (= c__________ left-to-right)))
 (let (($x1462 (and $x1461 $x1460)))
 (let (($x1463 (= c__________ left-to-center)))
 (let (($x1464 (and $x1463 $x1460)))
 (ite $x1464 $x1467 (ite $x1462 $x1467 (ite $x1459 $x1471 (ite $x1457 $x1480 (ite $x1454 $x1474 $x1480))))))))))))))))))))))))))))))))
(assert
 (let ((?x1116 (right s__________)))
 (let ((?x1254 (right s___________)))
 (let (($x1476 (= ?x1254 ?x1116)))
 (let ((?x1446 (rest ?x1116)))
 (let (($x1473 (= ?x1254 ?x1446)))
 (let (($x1450 ((_ is stack ) ?x1116)))
 (let (($x1451 (= c__________ right-to-center)))
 (let (($x1452 (and $x1451 $x1450)))
 (let (($x1453 (= c__________ right-to-left)))
 (let (($x1454 (and $x1453 $x1450)))
 (let ((?x1302 (center s__________)))
 (let ((?x1443 (top ?x1302)))
 (let ((?x1445 (stack ?x1443 ?x1116)))
 (let (($x1472 (= ?x1254 ?x1445)))
 (let (($x1455 ((_ is stack ) ?x1302)))
 (let (($x1456 (= c__________ center-to-right)))
 (let (($x1457 (and $x1456 $x1455)))
 (let (($x1458 (= c__________ center-to-left)))
 (let (($x1459 (and $x1458 $x1455)))
 (let ((?x1082 (left s__________)))
 (let (($x1460 ((_ is stack ) ?x1082)))
 (let (($x1461 (= c__________ left-to-right)))
 (let (($x1462 (and $x1461 $x1460)))
 (let (($x1493 (ite $x1462 $x1476 (ite $x1459 $x1476 (ite $x1457 $x1472 (ite $x1454 $x1473 (ite $x1452 $x1473 $x1476)))))))
 (let ((?x1300 (top ?x1082)))
 (let ((?x1439 (stack ?x1300 ?x1116)))
 (let (($x1468 (= ?x1254 ?x1439)))
 (let (($x1463 (= c__________ left-to-center)))
 (let (($x1464 (and $x1463 $x1460)))
 (ite $x1464 $x1468 $x1493)))))))))))))))))))))))))))))))
(assert
 (let ((?x1302 (center s__________)))
 (let ((?x1440 (center s___________)))
 (let (($x1478 (= ?x1440 ?x1302)))
 (let ((?x1116 (right s__________)))
 (let ((?x1447 (top ?x1116)))
 (let ((?x1449 (stack ?x1447 ?x1302)))
 (let (($x1475 (= ?x1440 ?x1449)))
 (let (($x1450 ((_ is stack ) ?x1116)))
 (let (($x1451 (= c__________ right-to-center)))
 (let (($x1452 (and $x1451 $x1450)))
 (let (($x1453 (= c__________ right-to-left)))
 (let (($x1454 (and $x1453 $x1450)))
 (let ((?x1442 (rest ?x1302)))
 (let (($x1470 (= ?x1440 ?x1442)))
 (let (($x1455 ((_ is stack ) ?x1302)))
 (let (($x1456 (= c__________ center-to-right)))
 (let (($x1457 (and $x1456 $x1455)))
 (let (($x1458 (= c__________ center-to-left)))
 (let (($x1459 (and $x1458 $x1455)))
 (let ((?x1082 (left s__________)))
 (let ((?x1300 (top ?x1082)))
 (let ((?x1441 (stack ?x1300 ?x1302)))
 (let (($x1469 (= ?x1440 ?x1441)))
 (let (($x1460 ((_ is stack ) ?x1082)))
 (let (($x1461 (= c__________ left-to-right)))
 (let (($x1462 (and $x1461 $x1460)))
 (let (($x1492 (ite $x1462 $x1469 (ite $x1459 $x1470 (ite $x1457 $x1470 (ite $x1454 $x1478 (ite $x1452 $x1475 $x1478)))))))
 (let (($x1463 (= c__________ left-to-center)))
 (let (($x1464 (and $x1463 $x1460)))
 (ite $x1464 $x1478 $x1492)))))))))))))))))))))))))))))))
(assert
 (let ((?x1254 (right s___________)))
 (let (($x1496 (= ?x1254 empty)))
 (let ((?x44 (stack K (stack D (stack B (stack L (stack M (stack H empty))))))))
 (let ((?x50 (stack G (stack C (stack J (stack I (stack E (stack F ?x44))))))))
 (let ((?x1440 (center s___________)))
 (let (($x1527 (= ?x1440 ?x50)))
 (let ((?x38 (stack A empty)))
 (let ((?x1220 (left s___________)))
 (let (($x1528 (= ?x1220 ?x38)))
 (let (($x1530 (not (and $x1528 $x1527 $x1496))))
 (not $x1530))))))))))))
(check-sat)
(exit)
