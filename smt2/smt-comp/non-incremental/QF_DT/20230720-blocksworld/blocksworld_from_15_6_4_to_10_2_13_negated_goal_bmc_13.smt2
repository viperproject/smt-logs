(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W_X_Y 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T) (U) (V) (W) (X) (Y))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W_X_Y) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x37 (stack F empty)))
 (let ((?x38 (stack O ?x37)))
 (let ((?x39 (stack L ?x38)))
 (let ((?x40 (stack A ?x39)))
 (let ((?x41 (stack J ?x40)))
 (let ((?x42 (stack C ?x41)))
 (let ((?x43 (stack R ?x42)))
 (let ((?x44 (stack H ?x43)))
 (let ((?x45 (stack W ?x44)))
 (let ((?x46 (stack T ?x45)))
 (let ((?x47 (stack Q ?x46)))
 (let ((?x48 (stack K ?x47)))
 (let ((?x49 (stack D ?x48)))
 (let ((?x50 (stack M ?x49)))
 (let ((?x51 (stack G ?x50)))
 (let ((?x131 (left s_tmp_)))
 (= ?x131 ?x51))))))))))))))))))
(assert
 (let ((?x52 (stack V empty)))
 (let ((?x53 (stack B ?x52)))
 (let ((?x54 (stack P ?x53)))
 (let ((?x55 (stack N ?x54)))
 (let ((?x56 (stack E ?x55)))
 (let ((?x57 (stack S ?x56)))
 (let ((?x134 (center s_tmp__)))
 (= ?x134 ?x57)))))))))
(assert
 (let ((?x58 (stack I empty)))
 (let ((?x59 (stack U ?x58)))
 (let ((?x60 (stack X ?x59)))
 (let ((?x61 (stack Y ?x60)))
 (let ((?x137 (right s_tmp___)))
 (= ?x137 ?x61)))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x164 (left s_tmp__)))
 (= (left s_tmp___) ?x164)))
(assert
 (let ((?x134 (center s_tmp__)))
 (= (center s_tmp___) ?x134)))
(assert
 (let ((?x168 (center s_tmp_)))
 (= ?x168 (center s_tmp))))
(assert
 (let ((?x171 (right s_tmp_)))
 (= ?x171 (right s_tmp))))
(assert
 (let ((?x131 (left s_tmp_)))
 (let ((?x164 (left s_tmp__)))
 (= ?x164 ?x131))))
(assert
 (let ((?x171 (right s_tmp_)))
 (let ((?x175 (right s_tmp__)))
 (= ?x175 ?x171))))
(assert
 (= c__ c!1))
(assert
 (let ((?x108 (left s_)))
 (let ((?x300 (left s__)))
 (let (($x306 (= ?x300 ?x108)))
 (let ((?x111 (right s_)))
 (let (($x339 ((_ is stack ) ?x111)))
 (let (($x333 (= c_ right-to-left)))
 (let (($x292 (and $x333 $x339)))
 (let ((?x113 (center s_)))
 (let (($x293 ((_ is stack ) ?x113)))
 (let (($x294 (= c_ center-to-right)))
 (let (($x334 (and $x294 $x293)))
 (let (($x335 (= c_ center-to-left)))
 (let (($x336 (and $x335 $x293)))
 (let (($x348 (ite $x336 (= ?x300 (stack (top ?x113) ?x108)) (ite $x334 $x306 (ite $x292 (= ?x300 (stack (top ?x111) ?x108)) $x306)))))
 (let (($x326 (= ?x300 (rest ?x108))))
 (let (($x295 ((_ is stack ) ?x108)))
 (let (($x296 (= c_ left-to-right)))
 (let (($x297 (and $x296 $x295)))
 (let (($x307 (= c_ left-to-center)))
 (let (($x308 (and $x307 $x295)))
 (ite $x308 $x326 (ite $x297 $x326 $x348)))))))))))))))))))))))
(assert
 (let ((?x111 (right s_)))
 (let ((?x323 (right s__)))
 (let (($x317 (= ?x323 ?x111)))
 (let (($x302 (= ?x323 (rest ?x111))))
 (let (($x339 ((_ is stack ) ?x111)))
 (let (($x331 (= c_ right-to-center)))
 (let (($x332 (and $x331 $x339)))
 (let (($x333 (= c_ right-to-left)))
 (let (($x292 (and $x333 $x339)))
 (let ((?x113 (center s_)))
 (let (($x293 ((_ is stack ) ?x113)))
 (let (($x294 (= c_ center-to-right)))
 (let (($x334 (and $x294 $x293)))
 (let (($x345 (ite $x334 (= ?x323 (stack (top ?x113) ?x111)) (ite $x292 $x302 (ite $x332 $x302 $x317)))))
 (let (($x335 (= c_ center-to-left)))
 (let (($x336 (and $x335 $x293)))
 (let ((?x108 (left s_)))
 (let (($x295 ((_ is stack ) ?x108)))
 (let (($x296 (= c_ left-to-right)))
 (let (($x297 (and $x296 $x295)))
 (let (($x307 (= c_ left-to-center)))
 (let (($x308 (and $x307 $x295)))
 (ite $x308 (= ?x323 (stack (top ?x108) ?x111)) (ite $x297 $x317 (ite $x336 $x317 $x345))))))))))))))))))))))))))
(assert
 (let ((?x113 (center s_)))
 (let ((?x311 (center s__)))
 (let (($x304 (= ?x311 ?x113)))
 (let ((?x111 (right s_)))
 (let (($x339 ((_ is stack ) ?x111)))
 (let (($x331 (= c_ right-to-center)))
 (let (($x332 (and $x331 $x339)))
 (let (($x333 (= c_ right-to-left)))
 (let (($x292 (and $x333 $x339)))
 (let (($x320 (= ?x311 (rest ?x113))))
 (let (($x293 ((_ is stack ) ?x113)))
 (let (($x294 (= c_ center-to-right)))
 (let (($x334 (and $x294 $x293)))
 (let (($x344 (ite $x334 $x320 (ite $x292 $x304 (ite $x332 (= ?x311 (stack (top ?x111) ?x113)) $x304)))))
 (let (($x335 (= c_ center-to-left)))
 (let (($x336 (and $x335 $x293)))
 (let ((?x108 (left s_)))
 (let (($x295 ((_ is stack ) ?x108)))
 (let (($x296 (= c_ left-to-right)))
 (let (($x297 (and $x296 $x295)))
 (let (($x307 (= c_ left-to-center)))
 (let (($x308 (and $x307 $x295)))
 (ite $x308 $x304 (ite $x297 (= ?x311 (stack (top ?x108) ?x113)) (ite $x336 $x320 $x344))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x300 (left s__)))
 (let ((?x178 (left s___)))
 (let (($x468 (= ?x178 ?x300)))
 (let ((?x323 (right s__)))
 (let ((?x435 (top ?x323)))
 (let ((?x436 (stack ?x435 ?x300)))
 (let (($x462 (= ?x178 ?x436)))
 (let (($x438 ((_ is stack ) ?x323)))
 (let (($x441 (= c__ right-to-left)))
 (let (($x442 (and $x441 $x438)))
 (let ((?x311 (center s__)))
 (let (($x443 ((_ is stack ) ?x311)))
 (let (($x444 (= c__ center-to-right)))
 (let (($x445 (and $x444 $x443)))
 (let ((?x431 (top ?x311)))
 (let ((?x432 (stack ?x431 ?x300)))
 (let (($x459 (= ?x178 ?x432)))
 (let (($x446 (= c__ center-to-left)))
 (let (($x447 (and $x446 $x443)))
 (let ((?x180 (rest ?x300)))
 (let (($x455 (= ?x178 ?x180)))
 (let (($x448 ((_ is stack ) ?x300)))
 (let (($x449 (= c__ left-to-right)))
 (let (($x450 (and $x449 $x448)))
 (let (($x451 (= c__ left-to-center)))
 (let (($x452 (and $x451 $x448)))
 (ite $x452 $x455 (ite $x450 $x455 (ite $x447 $x459 (ite $x445 $x468 (ite $x442 $x462 $x468))))))))))))))))))))))))))))))))
(assert
 (let ((?x323 (right s__)))
 (let ((?x181 (right s___)))
 (let (($x464 (= ?x181 ?x323)))
 (let ((?x434 (rest ?x323)))
 (let (($x461 (= ?x181 ?x434)))
 (let (($x438 ((_ is stack ) ?x323)))
 (let (($x439 (= c__ right-to-center)))
 (let (($x440 (and $x439 $x438)))
 (let (($x441 (= c__ right-to-left)))
 (let (($x442 (and $x441 $x438)))
 (let ((?x311 (center s__)))
 (let ((?x431 (top ?x311)))
 (let ((?x433 (stack ?x431 ?x323)))
 (let (($x460 (= ?x181 ?x433)))
 (let (($x443 ((_ is stack ) ?x311)))
 (let (($x444 (= c__ center-to-right)))
 (let (($x445 (and $x444 $x443)))
 (let (($x446 (= c__ center-to-left)))
 (let (($x447 (and $x446 $x443)))
 (let ((?x300 (left s__)))
 (let (($x448 ((_ is stack ) ?x300)))
 (let (($x449 (= c__ left-to-right)))
 (let (($x450 (and $x449 $x448)))
 (let (($x481 (ite $x450 $x464 (ite $x447 $x464 (ite $x445 $x460 (ite $x442 $x461 (ite $x440 $x461 $x464)))))))
 (let ((?x291 (top ?x300)))
 (let ((?x427 (stack ?x291 ?x323)))
 (let (($x456 (= ?x181 ?x427)))
 (let (($x451 (= c__ left-to-center)))
 (let (($x452 (and $x451 $x448)))
 (ite $x452 $x456 $x481)))))))))))))))))))))))))))))))
(assert
 (let ((?x311 (center s__)))
 (let ((?x428 (center s___)))
 (let (($x466 (= ?x428 ?x311)))
 (let ((?x323 (right s__)))
 (let ((?x435 (top ?x323)))
 (let ((?x437 (stack ?x435 ?x311)))
 (let (($x463 (= ?x428 ?x437)))
 (let (($x438 ((_ is stack ) ?x323)))
 (let (($x439 (= c__ right-to-center)))
 (let (($x440 (and $x439 $x438)))
 (let (($x441 (= c__ right-to-left)))
 (let (($x442 (and $x441 $x438)))
 (let ((?x430 (rest ?x311)))
 (let (($x458 (= ?x428 ?x430)))
 (let (($x443 ((_ is stack ) ?x311)))
 (let (($x444 (= c__ center-to-right)))
 (let (($x445 (and $x444 $x443)))
 (let (($x446 (= c__ center-to-left)))
 (let (($x447 (and $x446 $x443)))
 (let ((?x300 (left s__)))
 (let ((?x291 (top ?x300)))
 (let ((?x429 (stack ?x291 ?x311)))
 (let (($x457 (= ?x428 ?x429)))
 (let (($x448 ((_ is stack ) ?x300)))
 (let (($x449 (= c__ left-to-right)))
 (let (($x450 (and $x449 $x448)))
 (let (($x480 (ite $x450 $x457 (ite $x447 $x458 (ite $x445 $x458 (ite $x442 $x466 (ite $x440 $x463 $x466)))))))
 (let (($x451 (= c__ left-to-center)))
 (let (($x452 (and $x451 $x448)))
 (ite $x452 $x466 $x480)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x178 (left s___)))
 (let ((?x355 (left s____)))
 (let (($x606 (= ?x355 ?x178)))
 (let ((?x181 (right s___)))
 (let ((?x573 (top ?x181)))
 (let ((?x574 (stack ?x573 ?x178)))
 (let (($x600 (= ?x355 ?x574)))
 (let (($x576 ((_ is stack ) ?x181)))
 (let (($x579 (= c___ right-to-left)))
 (let (($x580 (and $x579 $x576)))
 (let ((?x428 (center s___)))
 (let (($x581 ((_ is stack ) ?x428)))
 (let (($x582 (= c___ center-to-right)))
 (let (($x583 (and $x582 $x581)))
 (let ((?x569 (top ?x428)))
 (let ((?x570 (stack ?x569 ?x178)))
 (let (($x597 (= ?x355 ?x570)))
 (let (($x584 (= c___ center-to-left)))
 (let (($x585 (and $x584 $x581)))
 (let ((?x397 (rest ?x178)))
 (let (($x593 (= ?x355 ?x397)))
 (let (($x586 ((_ is stack ) ?x178)))
 (let (($x587 (= c___ left-to-right)))
 (let (($x588 (and $x587 $x586)))
 (let (($x589 (= c___ left-to-center)))
 (let (($x590 (and $x589 $x586)))
 (ite $x590 $x593 (ite $x588 $x593 (ite $x585 $x597 (ite $x583 $x606 (ite $x580 $x600 $x606))))))))))))))))))))))))))))))))
(assert
 (let ((?x181 (right s___)))
 (let ((?x398 (right s____)))
 (let (($x602 (= ?x398 ?x181)))
 (let ((?x572 (rest ?x181)))
 (let (($x599 (= ?x398 ?x572)))
 (let (($x576 ((_ is stack ) ?x181)))
 (let (($x577 (= c___ right-to-center)))
 (let (($x578 (and $x577 $x576)))
 (let (($x579 (= c___ right-to-left)))
 (let (($x580 (and $x579 $x576)))
 (let ((?x428 (center s___)))
 (let ((?x569 (top ?x428)))
 (let ((?x571 (stack ?x569 ?x181)))
 (let (($x598 (= ?x398 ?x571)))
 (let (($x581 ((_ is stack ) ?x428)))
 (let (($x582 (= c___ center-to-right)))
 (let (($x583 (and $x582 $x581)))
 (let (($x584 (= c___ center-to-left)))
 (let (($x585 (and $x584 $x581)))
 (let ((?x178 (left s___)))
 (let (($x586 ((_ is stack ) ?x178)))
 (let (($x587 (= c___ left-to-right)))
 (let (($x588 (and $x587 $x586)))
 (let (($x619 (ite $x588 $x602 (ite $x585 $x602 (ite $x583 $x598 (ite $x580 $x599 (ite $x578 $x599 $x602)))))))
 (let ((?x426 (top ?x178)))
 (let ((?x565 (stack ?x426 ?x181)))
 (let (($x594 (= ?x398 ?x565)))
 (let (($x589 (= c___ left-to-center)))
 (let (($x590 (and $x589 $x586)))
 (ite $x590 $x594 $x619)))))))))))))))))))))))))))))))
(assert
 (let ((?x428 (center s___)))
 (let ((?x566 (center s____)))
 (let (($x604 (= ?x566 ?x428)))
 (let ((?x181 (right s___)))
 (let ((?x573 (top ?x181)))
 (let ((?x575 (stack ?x573 ?x428)))
 (let (($x601 (= ?x566 ?x575)))
 (let (($x576 ((_ is stack ) ?x181)))
 (let (($x577 (= c___ right-to-center)))
 (let (($x578 (and $x577 $x576)))
 (let (($x579 (= c___ right-to-left)))
 (let (($x580 (and $x579 $x576)))
 (let ((?x568 (rest ?x428)))
 (let (($x596 (= ?x566 ?x568)))
 (let (($x581 ((_ is stack ) ?x428)))
 (let (($x582 (= c___ center-to-right)))
 (let (($x583 (and $x582 $x581)))
 (let (($x584 (= c___ center-to-left)))
 (let (($x585 (and $x584 $x581)))
 (let ((?x178 (left s___)))
 (let ((?x426 (top ?x178)))
 (let ((?x567 (stack ?x426 ?x428)))
 (let (($x595 (= ?x566 ?x567)))
 (let (($x586 ((_ is stack ) ?x178)))
 (let (($x587 (= c___ left-to-right)))
 (let (($x588 (and $x587 $x586)))
 (let (($x618 (ite $x588 $x595 (ite $x585 $x596 (ite $x583 $x596 (ite $x580 $x604 (ite $x578 $x601 $x604)))))))
 (let (($x589 (= c___ left-to-center)))
 (let (($x590 (and $x589 $x586)))
 (ite $x590 $x604 $x618)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x355 (left s____)))
 (let ((?x484 (left s_____)))
 (let (($x744 (= ?x484 ?x355)))
 (let ((?x398 (right s____)))
 (let ((?x711 (top ?x398)))
 (let ((?x712 (stack ?x711 ?x355)))
 (let (($x738 (= ?x484 ?x712)))
 (let (($x714 ((_ is stack ) ?x398)))
 (let (($x717 (= c____ right-to-left)))
 (let (($x718 (and $x717 $x714)))
 (let ((?x566 (center s____)))
 (let (($x719 ((_ is stack ) ?x566)))
 (let (($x720 (= c____ center-to-right)))
 (let (($x721 (and $x720 $x719)))
 (let ((?x707 (top ?x566)))
 (let ((?x708 (stack ?x707 ?x355)))
 (let (($x735 (= ?x484 ?x708)))
 (let (($x722 (= c____ center-to-left)))
 (let (($x723 (and $x722 $x719)))
 (let ((?x517 (rest ?x355)))
 (let (($x731 (= ?x484 ?x517)))
 (let (($x724 ((_ is stack ) ?x355)))
 (let (($x725 (= c____ left-to-right)))
 (let (($x726 (and $x725 $x724)))
 (let (($x727 (= c____ left-to-center)))
 (let (($x728 (and $x727 $x724)))
 (ite $x728 $x731 (ite $x726 $x731 (ite $x723 $x735 (ite $x721 $x744 (ite $x718 $x738 $x744))))))))))))))))))))))))))))))))
(assert
 (let ((?x398 (right s____)))
 (let ((?x518 (right s_____)))
 (let (($x740 (= ?x518 ?x398)))
 (let ((?x710 (rest ?x398)))
 (let (($x737 (= ?x518 ?x710)))
 (let (($x714 ((_ is stack ) ?x398)))
 (let (($x715 (= c____ right-to-center)))
 (let (($x716 (and $x715 $x714)))
 (let (($x717 (= c____ right-to-left)))
 (let (($x718 (and $x717 $x714)))
 (let ((?x566 (center s____)))
 (let ((?x707 (top ?x566)))
 (let ((?x709 (stack ?x707 ?x398)))
 (let (($x736 (= ?x518 ?x709)))
 (let (($x719 ((_ is stack ) ?x566)))
 (let (($x720 (= c____ center-to-right)))
 (let (($x721 (and $x720 $x719)))
 (let (($x722 (= c____ center-to-left)))
 (let (($x723 (and $x722 $x719)))
 (let ((?x355 (left s____)))
 (let (($x724 ((_ is stack ) ?x355)))
 (let (($x725 (= c____ left-to-right)))
 (let (($x726 (and $x725 $x724)))
 (let (($x757 (ite $x726 $x740 (ite $x723 $x740 (ite $x721 $x736 (ite $x718 $x737 (ite $x716 $x737 $x740)))))))
 (let ((?x564 (top ?x355)))
 (let ((?x703 (stack ?x564 ?x398)))
 (let (($x732 (= ?x518 ?x703)))
 (let (($x727 (= c____ left-to-center)))
 (let (($x728 (and $x727 $x724)))
 (ite $x728 $x732 $x757)))))))))))))))))))))))))))))))
(assert
 (let ((?x566 (center s____)))
 (let ((?x704 (center s_____)))
 (let (($x742 (= ?x704 ?x566)))
 (let ((?x398 (right s____)))
 (let ((?x711 (top ?x398)))
 (let ((?x713 (stack ?x711 ?x566)))
 (let (($x739 (= ?x704 ?x713)))
 (let (($x714 ((_ is stack ) ?x398)))
 (let (($x715 (= c____ right-to-center)))
 (let (($x716 (and $x715 $x714)))
 (let (($x717 (= c____ right-to-left)))
 (let (($x718 (and $x717 $x714)))
 (let ((?x706 (rest ?x566)))
 (let (($x734 (= ?x704 ?x706)))
 (let (($x719 ((_ is stack ) ?x566)))
 (let (($x720 (= c____ center-to-right)))
 (let (($x721 (and $x720 $x719)))
 (let (($x722 (= c____ center-to-left)))
 (let (($x723 (and $x722 $x719)))
 (let ((?x355 (left s____)))
 (let ((?x564 (top ?x355)))
 (let ((?x705 (stack ?x564 ?x566)))
 (let (($x733 (= ?x704 ?x705)))
 (let (($x724 ((_ is stack ) ?x355)))
 (let (($x725 (= c____ left-to-right)))
 (let (($x726 (and $x725 $x724)))
 (let (($x756 (ite $x726 $x733 (ite $x723 $x734 (ite $x721 $x734 (ite $x718 $x742 (ite $x716 $x739 $x742)))))))
 (let (($x727 (= c____ left-to-center)))
 (let (($x728 (and $x727 $x724)))
 (ite $x728 $x742 $x756)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x484 (left s_____)))
 (let ((?x622 (left s______)))
 (let (($x882 (= ?x622 ?x484)))
 (let ((?x518 (right s_____)))
 (let ((?x849 (top ?x518)))
 (let ((?x850 (stack ?x849 ?x484)))
 (let (($x876 (= ?x622 ?x850)))
 (let (($x852 ((_ is stack ) ?x518)))
 (let (($x855 (= c_____ right-to-left)))
 (let (($x856 (and $x855 $x852)))
 (let ((?x704 (center s_____)))
 (let (($x857 ((_ is stack ) ?x704)))
 (let (($x858 (= c_____ center-to-right)))
 (let (($x859 (and $x858 $x857)))
 (let ((?x845 (top ?x704)))
 (let ((?x846 (stack ?x845 ?x484)))
 (let (($x873 (= ?x622 ?x846)))
 (let (($x860 (= c_____ center-to-left)))
 (let (($x861 (and $x860 $x857)))
 (let ((?x655 (rest ?x484)))
 (let (($x869 (= ?x622 ?x655)))
 (let (($x862 ((_ is stack ) ?x484)))
 (let (($x863 (= c_____ left-to-right)))
 (let (($x864 (and $x863 $x862)))
 (let (($x865 (= c_____ left-to-center)))
 (let (($x866 (and $x865 $x862)))
 (ite $x866 $x869 (ite $x864 $x869 (ite $x861 $x873 (ite $x859 $x882 (ite $x856 $x876 $x882))))))))))))))))))))))))))))))))
(assert
 (let ((?x518 (right s_____)))
 (let ((?x656 (right s______)))
 (let (($x878 (= ?x656 ?x518)))
 (let ((?x848 (rest ?x518)))
 (let (($x875 (= ?x656 ?x848)))
 (let (($x852 ((_ is stack ) ?x518)))
 (let (($x853 (= c_____ right-to-center)))
 (let (($x854 (and $x853 $x852)))
 (let (($x855 (= c_____ right-to-left)))
 (let (($x856 (and $x855 $x852)))
 (let ((?x704 (center s_____)))
 (let ((?x845 (top ?x704)))
 (let ((?x847 (stack ?x845 ?x518)))
 (let (($x874 (= ?x656 ?x847)))
 (let (($x857 ((_ is stack ) ?x704)))
 (let (($x858 (= c_____ center-to-right)))
 (let (($x859 (and $x858 $x857)))
 (let (($x860 (= c_____ center-to-left)))
 (let (($x861 (and $x860 $x857)))
 (let ((?x484 (left s_____)))
 (let (($x862 ((_ is stack ) ?x484)))
 (let (($x863 (= c_____ left-to-right)))
 (let (($x864 (and $x863 $x862)))
 (let (($x895 (ite $x864 $x878 (ite $x861 $x878 (ite $x859 $x874 (ite $x856 $x875 (ite $x854 $x875 $x878)))))))
 (let ((?x702 (top ?x484)))
 (let ((?x841 (stack ?x702 ?x518)))
 (let (($x870 (= ?x656 ?x841)))
 (let (($x865 (= c_____ left-to-center)))
 (let (($x866 (and $x865 $x862)))
 (ite $x866 $x870 $x895)))))))))))))))))))))))))))))))
(assert
 (let ((?x704 (center s_____)))
 (let ((?x842 (center s______)))
 (let (($x880 (= ?x842 ?x704)))
 (let ((?x518 (right s_____)))
 (let ((?x849 (top ?x518)))
 (let ((?x851 (stack ?x849 ?x704)))
 (let (($x877 (= ?x842 ?x851)))
 (let (($x852 ((_ is stack ) ?x518)))
 (let (($x853 (= c_____ right-to-center)))
 (let (($x854 (and $x853 $x852)))
 (let (($x855 (= c_____ right-to-left)))
 (let (($x856 (and $x855 $x852)))
 (let ((?x844 (rest ?x704)))
 (let (($x872 (= ?x842 ?x844)))
 (let (($x857 ((_ is stack ) ?x704)))
 (let (($x858 (= c_____ center-to-right)))
 (let (($x859 (and $x858 $x857)))
 (let (($x860 (= c_____ center-to-left)))
 (let (($x861 (and $x860 $x857)))
 (let ((?x484 (left s_____)))
 (let ((?x702 (top ?x484)))
 (let ((?x843 (stack ?x702 ?x704)))
 (let (($x871 (= ?x842 ?x843)))
 (let (($x862 ((_ is stack ) ?x484)))
 (let (($x863 (= c_____ left-to-right)))
 (let (($x864 (and $x863 $x862)))
 (let (($x894 (ite $x864 $x871 (ite $x861 $x872 (ite $x859 $x872 (ite $x856 $x880 (ite $x854 $x877 $x880)))))))
 (let (($x865 (= c_____ left-to-center)))
 (let (($x866 (and $x865 $x862)))
 (ite $x866 $x880 $x894)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x622 (left s______)))
 (let ((?x760 (left s_______)))
 (let (($x1020 (= ?x760 ?x622)))
 (let ((?x656 (right s______)))
 (let ((?x987 (top ?x656)))
 (let ((?x988 (stack ?x987 ?x622)))
 (let (($x1014 (= ?x760 ?x988)))
 (let (($x990 ((_ is stack ) ?x656)))
 (let (($x993 (= c______ right-to-left)))
 (let (($x994 (and $x993 $x990)))
 (let ((?x842 (center s______)))
 (let (($x995 ((_ is stack ) ?x842)))
 (let (($x996 (= c______ center-to-right)))
 (let (($x997 (and $x996 $x995)))
 (let ((?x983 (top ?x842)))
 (let ((?x984 (stack ?x983 ?x622)))
 (let (($x1011 (= ?x760 ?x984)))
 (let (($x998 (= c______ center-to-left)))
 (let (($x999 (and $x998 $x995)))
 (let ((?x793 (rest ?x622)))
 (let (($x1007 (= ?x760 ?x793)))
 (let (($x1000 ((_ is stack ) ?x622)))
 (let (($x1001 (= c______ left-to-right)))
 (let (($x1002 (and $x1001 $x1000)))
 (let (($x1003 (= c______ left-to-center)))
 (let (($x1004 (and $x1003 $x1000)))
 (ite $x1004 $x1007 (ite $x1002 $x1007 (ite $x999 $x1011 (ite $x997 $x1020 (ite $x994 $x1014 $x1020))))))))))))))))))))))))))))))))
(assert
 (let ((?x656 (right s______)))
 (let ((?x794 (right s_______)))
 (let (($x1016 (= ?x794 ?x656)))
 (let ((?x986 (rest ?x656)))
 (let (($x1013 (= ?x794 ?x986)))
 (let (($x990 ((_ is stack ) ?x656)))
 (let (($x991 (= c______ right-to-center)))
 (let (($x992 (and $x991 $x990)))
 (let (($x993 (= c______ right-to-left)))
 (let (($x994 (and $x993 $x990)))
 (let ((?x842 (center s______)))
 (let ((?x983 (top ?x842)))
 (let ((?x985 (stack ?x983 ?x656)))
 (let (($x1012 (= ?x794 ?x985)))
 (let (($x995 ((_ is stack ) ?x842)))
 (let (($x996 (= c______ center-to-right)))
 (let (($x997 (and $x996 $x995)))
 (let (($x998 (= c______ center-to-left)))
 (let (($x999 (and $x998 $x995)))
 (let ((?x622 (left s______)))
 (let (($x1000 ((_ is stack ) ?x622)))
 (let (($x1001 (= c______ left-to-right)))
 (let (($x1002 (and $x1001 $x1000)))
 (let (($x1033 (ite $x1002 $x1016 (ite $x999 $x1016 (ite $x997 $x1012 (ite $x994 $x1013 (ite $x992 $x1013 $x1016)))))))
 (let ((?x840 (top ?x622)))
 (let ((?x979 (stack ?x840 ?x656)))
 (let (($x1008 (= ?x794 ?x979)))
 (let (($x1003 (= c______ left-to-center)))
 (let (($x1004 (and $x1003 $x1000)))
 (ite $x1004 $x1008 $x1033)))))))))))))))))))))))))))))))
(assert
 (let ((?x842 (center s______)))
 (let ((?x980 (center s_______)))
 (let (($x1018 (= ?x980 ?x842)))
 (let ((?x656 (right s______)))
 (let ((?x987 (top ?x656)))
 (let ((?x989 (stack ?x987 ?x842)))
 (let (($x1015 (= ?x980 ?x989)))
 (let (($x990 ((_ is stack ) ?x656)))
 (let (($x991 (= c______ right-to-center)))
 (let (($x992 (and $x991 $x990)))
 (let (($x993 (= c______ right-to-left)))
 (let (($x994 (and $x993 $x990)))
 (let ((?x982 (rest ?x842)))
 (let (($x1010 (= ?x980 ?x982)))
 (let (($x995 ((_ is stack ) ?x842)))
 (let (($x996 (= c______ center-to-right)))
 (let (($x997 (and $x996 $x995)))
 (let (($x998 (= c______ center-to-left)))
 (let (($x999 (and $x998 $x995)))
 (let ((?x622 (left s______)))
 (let ((?x840 (top ?x622)))
 (let ((?x981 (stack ?x840 ?x842)))
 (let (($x1009 (= ?x980 ?x981)))
 (let (($x1000 ((_ is stack ) ?x622)))
 (let (($x1001 (= c______ left-to-right)))
 (let (($x1002 (and $x1001 $x1000)))
 (let (($x1032 (ite $x1002 $x1009 (ite $x999 $x1010 (ite $x997 $x1010 (ite $x994 $x1018 (ite $x992 $x1015 $x1018)))))))
 (let (($x1003 (= c______ left-to-center)))
 (let (($x1004 (and $x1003 $x1000)))
 (ite $x1004 $x1018 $x1032)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x760 (left s_______)))
 (let ((?x898 (left s________)))
 (let (($x1158 (= ?x898 ?x760)))
 (let ((?x794 (right s_______)))
 (let ((?x1125 (top ?x794)))
 (let ((?x1126 (stack ?x1125 ?x760)))
 (let (($x1152 (= ?x898 ?x1126)))
 (let (($x1128 ((_ is stack ) ?x794)))
 (let (($x1131 (= c_______ right-to-left)))
 (let (($x1132 (and $x1131 $x1128)))
 (let ((?x980 (center s_______)))
 (let (($x1133 ((_ is stack ) ?x980)))
 (let (($x1134 (= c_______ center-to-right)))
 (let (($x1135 (and $x1134 $x1133)))
 (let ((?x1121 (top ?x980)))
 (let ((?x1122 (stack ?x1121 ?x760)))
 (let (($x1149 (= ?x898 ?x1122)))
 (let (($x1136 (= c_______ center-to-left)))
 (let (($x1137 (and $x1136 $x1133)))
 (let ((?x931 (rest ?x760)))
 (let (($x1145 (= ?x898 ?x931)))
 (let (($x1138 ((_ is stack ) ?x760)))
 (let (($x1139 (= c_______ left-to-right)))
 (let (($x1140 (and $x1139 $x1138)))
 (let (($x1141 (= c_______ left-to-center)))
 (let (($x1142 (and $x1141 $x1138)))
 (ite $x1142 $x1145 (ite $x1140 $x1145 (ite $x1137 $x1149 (ite $x1135 $x1158 (ite $x1132 $x1152 $x1158))))))))))))))))))))))))))))))))
(assert
 (let ((?x794 (right s_______)))
 (let ((?x932 (right s________)))
 (let (($x1154 (= ?x932 ?x794)))
 (let ((?x1124 (rest ?x794)))
 (let (($x1151 (= ?x932 ?x1124)))
 (let (($x1128 ((_ is stack ) ?x794)))
 (let (($x1129 (= c_______ right-to-center)))
 (let (($x1130 (and $x1129 $x1128)))
 (let (($x1131 (= c_______ right-to-left)))
 (let (($x1132 (and $x1131 $x1128)))
 (let ((?x980 (center s_______)))
 (let ((?x1121 (top ?x980)))
 (let ((?x1123 (stack ?x1121 ?x794)))
 (let (($x1150 (= ?x932 ?x1123)))
 (let (($x1133 ((_ is stack ) ?x980)))
 (let (($x1134 (= c_______ center-to-right)))
 (let (($x1135 (and $x1134 $x1133)))
 (let (($x1136 (= c_______ center-to-left)))
 (let (($x1137 (and $x1136 $x1133)))
 (let ((?x760 (left s_______)))
 (let (($x1138 ((_ is stack ) ?x760)))
 (let (($x1139 (= c_______ left-to-right)))
 (let (($x1140 (and $x1139 $x1138)))
 (let (($x1171 (ite $x1140 $x1154 (ite $x1137 $x1154 (ite $x1135 $x1150 (ite $x1132 $x1151 (ite $x1130 $x1151 $x1154)))))))
 (let ((?x978 (top ?x760)))
 (let ((?x1117 (stack ?x978 ?x794)))
 (let (($x1146 (= ?x932 ?x1117)))
 (let (($x1141 (= c_______ left-to-center)))
 (let (($x1142 (and $x1141 $x1138)))
 (ite $x1142 $x1146 $x1171)))))))))))))))))))))))))))))))
(assert
 (let ((?x980 (center s_______)))
 (let ((?x1118 (center s________)))
 (let (($x1156 (= ?x1118 ?x980)))
 (let ((?x794 (right s_______)))
 (let ((?x1125 (top ?x794)))
 (let ((?x1127 (stack ?x1125 ?x980)))
 (let (($x1153 (= ?x1118 ?x1127)))
 (let (($x1128 ((_ is stack ) ?x794)))
 (let (($x1129 (= c_______ right-to-center)))
 (let (($x1130 (and $x1129 $x1128)))
 (let (($x1131 (= c_______ right-to-left)))
 (let (($x1132 (and $x1131 $x1128)))
 (let ((?x1120 (rest ?x980)))
 (let (($x1148 (= ?x1118 ?x1120)))
 (let (($x1133 ((_ is stack ) ?x980)))
 (let (($x1134 (= c_______ center-to-right)))
 (let (($x1135 (and $x1134 $x1133)))
 (let (($x1136 (= c_______ center-to-left)))
 (let (($x1137 (and $x1136 $x1133)))
 (let ((?x760 (left s_______)))
 (let ((?x978 (top ?x760)))
 (let ((?x1119 (stack ?x978 ?x980)))
 (let (($x1147 (= ?x1118 ?x1119)))
 (let (($x1138 ((_ is stack ) ?x760)))
 (let (($x1139 (= c_______ left-to-right)))
 (let (($x1140 (and $x1139 $x1138)))
 (let (($x1170 (ite $x1140 $x1147 (ite $x1137 $x1148 (ite $x1135 $x1148 (ite $x1132 $x1156 (ite $x1130 $x1153 $x1156)))))))
 (let (($x1141 (= c_______ left-to-center)))
 (let (($x1142 (and $x1141 $x1138)))
 (ite $x1142 $x1156 $x1170)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x898 (left s________)))
 (let ((?x1036 (left s_________)))
 (let (($x1296 (= ?x1036 ?x898)))
 (let ((?x932 (right s________)))
 (let ((?x1263 (top ?x932)))
 (let ((?x1264 (stack ?x1263 ?x898)))
 (let (($x1290 (= ?x1036 ?x1264)))
 (let (($x1266 ((_ is stack ) ?x932)))
 (let (($x1269 (= c________ right-to-left)))
 (let (($x1270 (and $x1269 $x1266)))
 (let ((?x1118 (center s________)))
 (let (($x1271 ((_ is stack ) ?x1118)))
 (let (($x1272 (= c________ center-to-right)))
 (let (($x1273 (and $x1272 $x1271)))
 (let ((?x1259 (top ?x1118)))
 (let ((?x1260 (stack ?x1259 ?x898)))
 (let (($x1287 (= ?x1036 ?x1260)))
 (let (($x1274 (= c________ center-to-left)))
 (let (($x1275 (and $x1274 $x1271)))
 (let ((?x1069 (rest ?x898)))
 (let (($x1283 (= ?x1036 ?x1069)))
 (let (($x1276 ((_ is stack ) ?x898)))
 (let (($x1277 (= c________ left-to-right)))
 (let (($x1278 (and $x1277 $x1276)))
 (let (($x1279 (= c________ left-to-center)))
 (let (($x1280 (and $x1279 $x1276)))
 (ite $x1280 $x1283 (ite $x1278 $x1283 (ite $x1275 $x1287 (ite $x1273 $x1296 (ite $x1270 $x1290 $x1296))))))))))))))))))))))))))))))))
(assert
 (let ((?x932 (right s________)))
 (let ((?x1070 (right s_________)))
 (let (($x1292 (= ?x1070 ?x932)))
 (let ((?x1262 (rest ?x932)))
 (let (($x1289 (= ?x1070 ?x1262)))
 (let (($x1266 ((_ is stack ) ?x932)))
 (let (($x1267 (= c________ right-to-center)))
 (let (($x1268 (and $x1267 $x1266)))
 (let (($x1269 (= c________ right-to-left)))
 (let (($x1270 (and $x1269 $x1266)))
 (let ((?x1118 (center s________)))
 (let ((?x1259 (top ?x1118)))
 (let ((?x1261 (stack ?x1259 ?x932)))
 (let (($x1288 (= ?x1070 ?x1261)))
 (let (($x1271 ((_ is stack ) ?x1118)))
 (let (($x1272 (= c________ center-to-right)))
 (let (($x1273 (and $x1272 $x1271)))
 (let (($x1274 (= c________ center-to-left)))
 (let (($x1275 (and $x1274 $x1271)))
 (let ((?x898 (left s________)))
 (let (($x1276 ((_ is stack ) ?x898)))
 (let (($x1277 (= c________ left-to-right)))
 (let (($x1278 (and $x1277 $x1276)))
 (let (($x1309 (ite $x1278 $x1292 (ite $x1275 $x1292 (ite $x1273 $x1288 (ite $x1270 $x1289 (ite $x1268 $x1289 $x1292)))))))
 (let ((?x1116 (top ?x898)))
 (let ((?x1255 (stack ?x1116 ?x932)))
 (let (($x1284 (= ?x1070 ?x1255)))
 (let (($x1279 (= c________ left-to-center)))
 (let (($x1280 (and $x1279 $x1276)))
 (ite $x1280 $x1284 $x1309)))))))))))))))))))))))))))))))
(assert
 (let ((?x1118 (center s________)))
 (let ((?x1256 (center s_________)))
 (let (($x1294 (= ?x1256 ?x1118)))
 (let ((?x932 (right s________)))
 (let ((?x1263 (top ?x932)))
 (let ((?x1265 (stack ?x1263 ?x1118)))
 (let (($x1291 (= ?x1256 ?x1265)))
 (let (($x1266 ((_ is stack ) ?x932)))
 (let (($x1267 (= c________ right-to-center)))
 (let (($x1268 (and $x1267 $x1266)))
 (let (($x1269 (= c________ right-to-left)))
 (let (($x1270 (and $x1269 $x1266)))
 (let ((?x1258 (rest ?x1118)))
 (let (($x1286 (= ?x1256 ?x1258)))
 (let (($x1271 ((_ is stack ) ?x1118)))
 (let (($x1272 (= c________ center-to-right)))
 (let (($x1273 (and $x1272 $x1271)))
 (let (($x1274 (= c________ center-to-left)))
 (let (($x1275 (and $x1274 $x1271)))
 (let ((?x898 (left s________)))
 (let ((?x1116 (top ?x898)))
 (let ((?x1257 (stack ?x1116 ?x1118)))
 (let (($x1285 (= ?x1256 ?x1257)))
 (let (($x1276 ((_ is stack ) ?x898)))
 (let (($x1277 (= c________ left-to-right)))
 (let (($x1278 (and $x1277 $x1276)))
 (let (($x1308 (ite $x1278 $x1285 (ite $x1275 $x1286 (ite $x1273 $x1286 (ite $x1270 $x1294 (ite $x1268 $x1291 $x1294)))))))
 (let (($x1279 (= c________ left-to-center)))
 (let (($x1280 (and $x1279 $x1276)))
 (ite $x1280 $x1294 $x1308)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x1036 (left s_________)))
 (let ((?x1174 (left s__________)))
 (let (($x1434 (= ?x1174 ?x1036)))
 (let ((?x1070 (right s_________)))
 (let ((?x1401 (top ?x1070)))
 (let ((?x1402 (stack ?x1401 ?x1036)))
 (let (($x1428 (= ?x1174 ?x1402)))
 (let (($x1404 ((_ is stack ) ?x1070)))
 (let (($x1407 (= c_________ right-to-left)))
 (let (($x1408 (and $x1407 $x1404)))
 (let ((?x1256 (center s_________)))
 (let (($x1409 ((_ is stack ) ?x1256)))
 (let (($x1410 (= c_________ center-to-right)))
 (let (($x1411 (and $x1410 $x1409)))
 (let ((?x1397 (top ?x1256)))
 (let ((?x1398 (stack ?x1397 ?x1036)))
 (let (($x1425 (= ?x1174 ?x1398)))
 (let (($x1412 (= c_________ center-to-left)))
 (let (($x1413 (and $x1412 $x1409)))
 (let ((?x1207 (rest ?x1036)))
 (let (($x1421 (= ?x1174 ?x1207)))
 (let (($x1414 ((_ is stack ) ?x1036)))
 (let (($x1415 (= c_________ left-to-right)))
 (let (($x1416 (and $x1415 $x1414)))
 (let (($x1417 (= c_________ left-to-center)))
 (let (($x1418 (and $x1417 $x1414)))
 (ite $x1418 $x1421 (ite $x1416 $x1421 (ite $x1413 $x1425 (ite $x1411 $x1434 (ite $x1408 $x1428 $x1434))))))))))))))))))))))))))))))))
(assert
 (let ((?x1070 (right s_________)))
 (let ((?x1208 (right s__________)))
 (let (($x1430 (= ?x1208 ?x1070)))
 (let ((?x1400 (rest ?x1070)))
 (let (($x1427 (= ?x1208 ?x1400)))
 (let (($x1404 ((_ is stack ) ?x1070)))
 (let (($x1405 (= c_________ right-to-center)))
 (let (($x1406 (and $x1405 $x1404)))
 (let (($x1407 (= c_________ right-to-left)))
 (let (($x1408 (and $x1407 $x1404)))
 (let ((?x1256 (center s_________)))
 (let ((?x1397 (top ?x1256)))
 (let ((?x1399 (stack ?x1397 ?x1070)))
 (let (($x1426 (= ?x1208 ?x1399)))
 (let (($x1409 ((_ is stack ) ?x1256)))
 (let (($x1410 (= c_________ center-to-right)))
 (let (($x1411 (and $x1410 $x1409)))
 (let (($x1412 (= c_________ center-to-left)))
 (let (($x1413 (and $x1412 $x1409)))
 (let ((?x1036 (left s_________)))
 (let (($x1414 ((_ is stack ) ?x1036)))
 (let (($x1415 (= c_________ left-to-right)))
 (let (($x1416 (and $x1415 $x1414)))
 (let (($x1447 (ite $x1416 $x1430 (ite $x1413 $x1430 (ite $x1411 $x1426 (ite $x1408 $x1427 (ite $x1406 $x1427 $x1430)))))))
 (let ((?x1254 (top ?x1036)))
 (let ((?x1393 (stack ?x1254 ?x1070)))
 (let (($x1422 (= ?x1208 ?x1393)))
 (let (($x1417 (= c_________ left-to-center)))
 (let (($x1418 (and $x1417 $x1414)))
 (ite $x1418 $x1422 $x1447)))))))))))))))))))))))))))))))
(assert
 (let ((?x1256 (center s_________)))
 (let ((?x1394 (center s__________)))
 (let (($x1432 (= ?x1394 ?x1256)))
 (let ((?x1070 (right s_________)))
 (let ((?x1401 (top ?x1070)))
 (let ((?x1403 (stack ?x1401 ?x1256)))
 (let (($x1429 (= ?x1394 ?x1403)))
 (let (($x1404 ((_ is stack ) ?x1070)))
 (let (($x1405 (= c_________ right-to-center)))
 (let (($x1406 (and $x1405 $x1404)))
 (let (($x1407 (= c_________ right-to-left)))
 (let (($x1408 (and $x1407 $x1404)))
 (let ((?x1396 (rest ?x1256)))
 (let (($x1424 (= ?x1394 ?x1396)))
 (let (($x1409 ((_ is stack ) ?x1256)))
 (let (($x1410 (= c_________ center-to-right)))
 (let (($x1411 (and $x1410 $x1409)))
 (let (($x1412 (= c_________ center-to-left)))
 (let (($x1413 (and $x1412 $x1409)))
 (let ((?x1036 (left s_________)))
 (let ((?x1254 (top ?x1036)))
 (let ((?x1395 (stack ?x1254 ?x1256)))
 (let (($x1423 (= ?x1394 ?x1395)))
 (let (($x1414 ((_ is stack ) ?x1036)))
 (let (($x1415 (= c_________ left-to-right)))
 (let (($x1416 (and $x1415 $x1414)))
 (let (($x1446 (ite $x1416 $x1423 (ite $x1413 $x1424 (ite $x1411 $x1424 (ite $x1408 $x1432 (ite $x1406 $x1429 $x1432)))))))
 (let (($x1417 (= c_________ left-to-center)))
 (let (($x1418 (and $x1417 $x1414)))
 (ite $x1418 $x1432 $x1446)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1174 (left s__________)))
 (let ((?x1312 (left s___________)))
 (let (($x1572 (= ?x1312 ?x1174)))
 (let ((?x1208 (right s__________)))
 (let ((?x1539 (top ?x1208)))
 (let ((?x1540 (stack ?x1539 ?x1174)))
 (let (($x1566 (= ?x1312 ?x1540)))
 (let (($x1542 ((_ is stack ) ?x1208)))
 (let (($x1545 (= c__________ right-to-left)))
 (let (($x1546 (and $x1545 $x1542)))
 (let ((?x1394 (center s__________)))
 (let (($x1547 ((_ is stack ) ?x1394)))
 (let (($x1548 (= c__________ center-to-right)))
 (let (($x1549 (and $x1548 $x1547)))
 (let ((?x1535 (top ?x1394)))
 (let ((?x1536 (stack ?x1535 ?x1174)))
 (let (($x1563 (= ?x1312 ?x1536)))
 (let (($x1550 (= c__________ center-to-left)))
 (let (($x1551 (and $x1550 $x1547)))
 (let ((?x1345 (rest ?x1174)))
 (let (($x1559 (= ?x1312 ?x1345)))
 (let (($x1552 ((_ is stack ) ?x1174)))
 (let (($x1553 (= c__________ left-to-right)))
 (let (($x1554 (and $x1553 $x1552)))
 (let (($x1555 (= c__________ left-to-center)))
 (let (($x1556 (and $x1555 $x1552)))
 (ite $x1556 $x1559 (ite $x1554 $x1559 (ite $x1551 $x1563 (ite $x1549 $x1572 (ite $x1546 $x1566 $x1572))))))))))))))))))))))))))))))))
(assert
 (let ((?x1208 (right s__________)))
 (let ((?x1346 (right s___________)))
 (let (($x1568 (= ?x1346 ?x1208)))
 (let ((?x1538 (rest ?x1208)))
 (let (($x1565 (= ?x1346 ?x1538)))
 (let (($x1542 ((_ is stack ) ?x1208)))
 (let (($x1543 (= c__________ right-to-center)))
 (let (($x1544 (and $x1543 $x1542)))
 (let (($x1545 (= c__________ right-to-left)))
 (let (($x1546 (and $x1545 $x1542)))
 (let ((?x1394 (center s__________)))
 (let ((?x1535 (top ?x1394)))
 (let ((?x1537 (stack ?x1535 ?x1208)))
 (let (($x1564 (= ?x1346 ?x1537)))
 (let (($x1547 ((_ is stack ) ?x1394)))
 (let (($x1548 (= c__________ center-to-right)))
 (let (($x1549 (and $x1548 $x1547)))
 (let (($x1550 (= c__________ center-to-left)))
 (let (($x1551 (and $x1550 $x1547)))
 (let ((?x1174 (left s__________)))
 (let (($x1552 ((_ is stack ) ?x1174)))
 (let (($x1553 (= c__________ left-to-right)))
 (let (($x1554 (and $x1553 $x1552)))
 (let (($x1585 (ite $x1554 $x1568 (ite $x1551 $x1568 (ite $x1549 $x1564 (ite $x1546 $x1565 (ite $x1544 $x1565 $x1568)))))))
 (let ((?x1392 (top ?x1174)))
 (let ((?x1531 (stack ?x1392 ?x1208)))
 (let (($x1560 (= ?x1346 ?x1531)))
 (let (($x1555 (= c__________ left-to-center)))
 (let (($x1556 (and $x1555 $x1552)))
 (ite $x1556 $x1560 $x1585)))))))))))))))))))))))))))))))
(assert
 (let ((?x1394 (center s__________)))
 (let ((?x1532 (center s___________)))
 (let (($x1570 (= ?x1532 ?x1394)))
 (let ((?x1208 (right s__________)))
 (let ((?x1539 (top ?x1208)))
 (let ((?x1541 (stack ?x1539 ?x1394)))
 (let (($x1567 (= ?x1532 ?x1541)))
 (let (($x1542 ((_ is stack ) ?x1208)))
 (let (($x1543 (= c__________ right-to-center)))
 (let (($x1544 (and $x1543 $x1542)))
 (let (($x1545 (= c__________ right-to-left)))
 (let (($x1546 (and $x1545 $x1542)))
 (let ((?x1534 (rest ?x1394)))
 (let (($x1562 (= ?x1532 ?x1534)))
 (let (($x1547 ((_ is stack ) ?x1394)))
 (let (($x1548 (= c__________ center-to-right)))
 (let (($x1549 (and $x1548 $x1547)))
 (let (($x1550 (= c__________ center-to-left)))
 (let (($x1551 (and $x1550 $x1547)))
 (let ((?x1174 (left s__________)))
 (let ((?x1392 (top ?x1174)))
 (let ((?x1533 (stack ?x1392 ?x1394)))
 (let (($x1561 (= ?x1532 ?x1533)))
 (let (($x1552 ((_ is stack ) ?x1174)))
 (let (($x1553 (= c__________ left-to-right)))
 (let (($x1554 (and $x1553 $x1552)))
 (let (($x1584 (ite $x1554 $x1561 (ite $x1551 $x1562 (ite $x1549 $x1562 (ite $x1546 $x1570 (ite $x1544 $x1567 $x1570)))))))
 (let (($x1555 (= c__________ left-to-center)))
 (let (($x1556 (and $x1555 $x1552)))
 (ite $x1556 $x1570 $x1584)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1312 (left s___________)))
 (let ((?x1450 (left s____________)))
 (let (($x1710 (= ?x1450 ?x1312)))
 (let ((?x1346 (right s___________)))
 (let ((?x1677 (top ?x1346)))
 (let ((?x1678 (stack ?x1677 ?x1312)))
 (let (($x1704 (= ?x1450 ?x1678)))
 (let (($x1680 ((_ is stack ) ?x1346)))
 (let (($x1683 (= c___________ right-to-left)))
 (let (($x1684 (and $x1683 $x1680)))
 (let ((?x1532 (center s___________)))
 (let (($x1685 ((_ is stack ) ?x1532)))
 (let (($x1686 (= c___________ center-to-right)))
 (let (($x1687 (and $x1686 $x1685)))
 (let ((?x1673 (top ?x1532)))
 (let ((?x1674 (stack ?x1673 ?x1312)))
 (let (($x1701 (= ?x1450 ?x1674)))
 (let (($x1688 (= c___________ center-to-left)))
 (let (($x1689 (and $x1688 $x1685)))
 (let ((?x1483 (rest ?x1312)))
 (let (($x1697 (= ?x1450 ?x1483)))
 (let (($x1690 ((_ is stack ) ?x1312)))
 (let (($x1691 (= c___________ left-to-right)))
 (let (($x1692 (and $x1691 $x1690)))
 (let (($x1693 (= c___________ left-to-center)))
 (let (($x1694 (and $x1693 $x1690)))
 (ite $x1694 $x1697 (ite $x1692 $x1697 (ite $x1689 $x1701 (ite $x1687 $x1710 (ite $x1684 $x1704 $x1710))))))))))))))))))))))))))))))))
(assert
 (let ((?x1346 (right s___________)))
 (let ((?x1484 (right s____________)))
 (let (($x1706 (= ?x1484 ?x1346)))
 (let ((?x1676 (rest ?x1346)))
 (let (($x1703 (= ?x1484 ?x1676)))
 (let (($x1680 ((_ is stack ) ?x1346)))
 (let (($x1681 (= c___________ right-to-center)))
 (let (($x1682 (and $x1681 $x1680)))
 (let (($x1683 (= c___________ right-to-left)))
 (let (($x1684 (and $x1683 $x1680)))
 (let ((?x1532 (center s___________)))
 (let ((?x1673 (top ?x1532)))
 (let ((?x1675 (stack ?x1673 ?x1346)))
 (let (($x1702 (= ?x1484 ?x1675)))
 (let (($x1685 ((_ is stack ) ?x1532)))
 (let (($x1686 (= c___________ center-to-right)))
 (let (($x1687 (and $x1686 $x1685)))
 (let (($x1688 (= c___________ center-to-left)))
 (let (($x1689 (and $x1688 $x1685)))
 (let ((?x1312 (left s___________)))
 (let (($x1690 ((_ is stack ) ?x1312)))
 (let (($x1691 (= c___________ left-to-right)))
 (let (($x1692 (and $x1691 $x1690)))
 (let (($x1723 (ite $x1692 $x1706 (ite $x1689 $x1706 (ite $x1687 $x1702 (ite $x1684 $x1703 (ite $x1682 $x1703 $x1706)))))))
 (let ((?x1530 (top ?x1312)))
 (let ((?x1669 (stack ?x1530 ?x1346)))
 (let (($x1698 (= ?x1484 ?x1669)))
 (let (($x1693 (= c___________ left-to-center)))
 (let (($x1694 (and $x1693 $x1690)))
 (ite $x1694 $x1698 $x1723)))))))))))))))))))))))))))))))
(assert
 (let ((?x1532 (center s___________)))
 (let ((?x1670 (center s____________)))
 (let (($x1708 (= ?x1670 ?x1532)))
 (let ((?x1346 (right s___________)))
 (let ((?x1677 (top ?x1346)))
 (let ((?x1679 (stack ?x1677 ?x1532)))
 (let (($x1705 (= ?x1670 ?x1679)))
 (let (($x1680 ((_ is stack ) ?x1346)))
 (let (($x1681 (= c___________ right-to-center)))
 (let (($x1682 (and $x1681 $x1680)))
 (let (($x1683 (= c___________ right-to-left)))
 (let (($x1684 (and $x1683 $x1680)))
 (let ((?x1672 (rest ?x1532)))
 (let (($x1700 (= ?x1670 ?x1672)))
 (let (($x1685 ((_ is stack ) ?x1532)))
 (let (($x1686 (= c___________ center-to-right)))
 (let (($x1687 (and $x1686 $x1685)))
 (let (($x1688 (= c___________ center-to-left)))
 (let (($x1689 (and $x1688 $x1685)))
 (let ((?x1312 (left s___________)))
 (let ((?x1530 (top ?x1312)))
 (let ((?x1671 (stack ?x1530 ?x1532)))
 (let (($x1699 (= ?x1670 ?x1671)))
 (let (($x1690 ((_ is stack ) ?x1312)))
 (let (($x1691 (= c___________ left-to-right)))
 (let (($x1692 (and $x1691 $x1690)))
 (let (($x1722 (ite $x1692 $x1699 (ite $x1689 $x1700 (ite $x1687 $x1700 (ite $x1684 $x1708 (ite $x1682 $x1705 $x1708)))))))
 (let (($x1693 (= c___________ left-to-center)))
 (let (($x1694 (and $x1693 $x1690)))
 (ite $x1694 $x1708 $x1722)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1450 (left s____________)))
 (let ((?x1588 (left s_____________)))
 (let (($x1848 (= ?x1588 ?x1450)))
 (let ((?x1484 (right s____________)))
 (let ((?x1815 (top ?x1484)))
 (let ((?x1816 (stack ?x1815 ?x1450)))
 (let (($x1842 (= ?x1588 ?x1816)))
 (let (($x1818 ((_ is stack ) ?x1484)))
 (let (($x1821 (= c____________ right-to-left)))
 (let (($x1822 (and $x1821 $x1818)))
 (let ((?x1670 (center s____________)))
 (let (($x1823 ((_ is stack ) ?x1670)))
 (let (($x1824 (= c____________ center-to-right)))
 (let (($x1825 (and $x1824 $x1823)))
 (let ((?x1811 (top ?x1670)))
 (let ((?x1812 (stack ?x1811 ?x1450)))
 (let (($x1839 (= ?x1588 ?x1812)))
 (let (($x1826 (= c____________ center-to-left)))
 (let (($x1827 (and $x1826 $x1823)))
 (let ((?x1621 (rest ?x1450)))
 (let (($x1835 (= ?x1588 ?x1621)))
 (let (($x1828 ((_ is stack ) ?x1450)))
 (let (($x1829 (= c____________ left-to-right)))
 (let (($x1830 (and $x1829 $x1828)))
 (let (($x1831 (= c____________ left-to-center)))
 (let (($x1832 (and $x1831 $x1828)))
 (ite $x1832 $x1835 (ite $x1830 $x1835 (ite $x1827 $x1839 (ite $x1825 $x1848 (ite $x1822 $x1842 $x1848))))))))))))))))))))))))))))))))
(assert
 (let ((?x1484 (right s____________)))
 (let ((?x1622 (right s_____________)))
 (let (($x1844 (= ?x1622 ?x1484)))
 (let ((?x1814 (rest ?x1484)))
 (let (($x1841 (= ?x1622 ?x1814)))
 (let (($x1818 ((_ is stack ) ?x1484)))
 (let (($x1819 (= c____________ right-to-center)))
 (let (($x1820 (and $x1819 $x1818)))
 (let (($x1821 (= c____________ right-to-left)))
 (let (($x1822 (and $x1821 $x1818)))
 (let ((?x1670 (center s____________)))
 (let ((?x1811 (top ?x1670)))
 (let ((?x1813 (stack ?x1811 ?x1484)))
 (let (($x1840 (= ?x1622 ?x1813)))
 (let (($x1823 ((_ is stack ) ?x1670)))
 (let (($x1824 (= c____________ center-to-right)))
 (let (($x1825 (and $x1824 $x1823)))
 (let (($x1826 (= c____________ center-to-left)))
 (let (($x1827 (and $x1826 $x1823)))
 (let ((?x1450 (left s____________)))
 (let (($x1828 ((_ is stack ) ?x1450)))
 (let (($x1829 (= c____________ left-to-right)))
 (let (($x1830 (and $x1829 $x1828)))
 (let (($x1861 (ite $x1830 $x1844 (ite $x1827 $x1844 (ite $x1825 $x1840 (ite $x1822 $x1841 (ite $x1820 $x1841 $x1844)))))))
 (let ((?x1668 (top ?x1450)))
 (let ((?x1807 (stack ?x1668 ?x1484)))
 (let (($x1836 (= ?x1622 ?x1807)))
 (let (($x1831 (= c____________ left-to-center)))
 (let (($x1832 (and $x1831 $x1828)))
 (ite $x1832 $x1836 $x1861)))))))))))))))))))))))))))))))
(assert
 (let ((?x1670 (center s____________)))
 (let ((?x1808 (center s_____________)))
 (let (($x1846 (= ?x1808 ?x1670)))
 (let ((?x1484 (right s____________)))
 (let ((?x1815 (top ?x1484)))
 (let ((?x1817 (stack ?x1815 ?x1670)))
 (let (($x1843 (= ?x1808 ?x1817)))
 (let (($x1818 ((_ is stack ) ?x1484)))
 (let (($x1819 (= c____________ right-to-center)))
 (let (($x1820 (and $x1819 $x1818)))
 (let (($x1821 (= c____________ right-to-left)))
 (let (($x1822 (and $x1821 $x1818)))
 (let ((?x1810 (rest ?x1670)))
 (let (($x1838 (= ?x1808 ?x1810)))
 (let (($x1823 ((_ is stack ) ?x1670)))
 (let (($x1824 (= c____________ center-to-right)))
 (let (($x1825 (and $x1824 $x1823)))
 (let (($x1826 (= c____________ center-to-left)))
 (let (($x1827 (and $x1826 $x1823)))
 (let ((?x1450 (left s____________)))
 (let ((?x1668 (top ?x1450)))
 (let ((?x1809 (stack ?x1668 ?x1670)))
 (let (($x1837 (= ?x1808 ?x1809)))
 (let (($x1828 ((_ is stack ) ?x1450)))
 (let (($x1829 (= c____________ left-to-right)))
 (let (($x1830 (and $x1829 $x1828)))
 (let (($x1860 (ite $x1830 $x1837 (ite $x1827 $x1838 (ite $x1825 $x1838 (ite $x1822 $x1846 (ite $x1820 $x1843 $x1846)))))))
 (let (($x1831 (= c____________ left-to-center)))
 (let (($x1832 (and $x1831 $x1828)))
 (ite $x1832 $x1846 $x1860)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1588 (left s_____________)))
 (let ((?x1726 (left s______________)))
 (let (($x1986 (= ?x1726 ?x1588)))
 (let ((?x1622 (right s_____________)))
 (let ((?x1953 (top ?x1622)))
 (let ((?x1954 (stack ?x1953 ?x1588)))
 (let (($x1980 (= ?x1726 ?x1954)))
 (let (($x1956 ((_ is stack ) ?x1622)))
 (let (($x1959 (= c_____________ right-to-left)))
 (let (($x1960 (and $x1959 $x1956)))
 (let ((?x1808 (center s_____________)))
 (let (($x1961 ((_ is stack ) ?x1808)))
 (let (($x1962 (= c_____________ center-to-right)))
 (let (($x1963 (and $x1962 $x1961)))
 (let ((?x1949 (top ?x1808)))
 (let ((?x1950 (stack ?x1949 ?x1588)))
 (let (($x1977 (= ?x1726 ?x1950)))
 (let (($x1964 (= c_____________ center-to-left)))
 (let (($x1965 (and $x1964 $x1961)))
 (let ((?x1759 (rest ?x1588)))
 (let (($x1973 (= ?x1726 ?x1759)))
 (let (($x1966 ((_ is stack ) ?x1588)))
 (let (($x1967 (= c_____________ left-to-right)))
 (let (($x1968 (and $x1967 $x1966)))
 (let (($x1969 (= c_____________ left-to-center)))
 (let (($x1970 (and $x1969 $x1966)))
 (ite $x1970 $x1973 (ite $x1968 $x1973 (ite $x1965 $x1977 (ite $x1963 $x1986 (ite $x1960 $x1980 $x1986))))))))))))))))))))))))))))))))
(assert
 (let ((?x1622 (right s_____________)))
 (let ((?x1760 (right s______________)))
 (let (($x1982 (= ?x1760 ?x1622)))
 (let ((?x1952 (rest ?x1622)))
 (let (($x1979 (= ?x1760 ?x1952)))
 (let (($x1956 ((_ is stack ) ?x1622)))
 (let (($x1957 (= c_____________ right-to-center)))
 (let (($x1958 (and $x1957 $x1956)))
 (let (($x1959 (= c_____________ right-to-left)))
 (let (($x1960 (and $x1959 $x1956)))
 (let ((?x1808 (center s_____________)))
 (let ((?x1949 (top ?x1808)))
 (let ((?x1951 (stack ?x1949 ?x1622)))
 (let (($x1978 (= ?x1760 ?x1951)))
 (let (($x1961 ((_ is stack ) ?x1808)))
 (let (($x1962 (= c_____________ center-to-right)))
 (let (($x1963 (and $x1962 $x1961)))
 (let (($x1964 (= c_____________ center-to-left)))
 (let (($x1965 (and $x1964 $x1961)))
 (let ((?x1588 (left s_____________)))
 (let (($x1966 ((_ is stack ) ?x1588)))
 (let (($x1967 (= c_____________ left-to-right)))
 (let (($x1968 (and $x1967 $x1966)))
 (let (($x1999 (ite $x1968 $x1982 (ite $x1965 $x1982 (ite $x1963 $x1978 (ite $x1960 $x1979 (ite $x1958 $x1979 $x1982)))))))
 (let ((?x1806 (top ?x1588)))
 (let ((?x1945 (stack ?x1806 ?x1622)))
 (let (($x1974 (= ?x1760 ?x1945)))
 (let (($x1969 (= c_____________ left-to-center)))
 (let (($x1970 (and $x1969 $x1966)))
 (ite $x1970 $x1974 $x1999)))))))))))))))))))))))))))))))
(assert
 (let ((?x1808 (center s_____________)))
 (let ((?x1946 (center s______________)))
 (let (($x1984 (= ?x1946 ?x1808)))
 (let ((?x1622 (right s_____________)))
 (let ((?x1953 (top ?x1622)))
 (let ((?x1955 (stack ?x1953 ?x1808)))
 (let (($x1981 (= ?x1946 ?x1955)))
 (let (($x1956 ((_ is stack ) ?x1622)))
 (let (($x1957 (= c_____________ right-to-center)))
 (let (($x1958 (and $x1957 $x1956)))
 (let (($x1959 (= c_____________ right-to-left)))
 (let (($x1960 (and $x1959 $x1956)))
 (let ((?x1948 (rest ?x1808)))
 (let (($x1976 (= ?x1946 ?x1948)))
 (let (($x1961 ((_ is stack ) ?x1808)))
 (let (($x1962 (= c_____________ center-to-right)))
 (let (($x1963 (and $x1962 $x1961)))
 (let (($x1964 (= c_____________ center-to-left)))
 (let (($x1965 (and $x1964 $x1961)))
 (let ((?x1588 (left s_____________)))
 (let ((?x1806 (top ?x1588)))
 (let ((?x1947 (stack ?x1806 ?x1808)))
 (let (($x1975 (= ?x1946 ?x1947)))
 (let (($x1966 ((_ is stack ) ?x1588)))
 (let (($x1967 (= c_____________ left-to-right)))
 (let (($x1968 (and $x1967 $x1966)))
 (let (($x1998 (ite $x1968 $x1975 (ite $x1965 $x1976 (ite $x1963 $x1976 (ite $x1960 $x1984 (ite $x1958 $x1981 $x1984)))))))
 (let (($x1969 (= c_____________ left-to-center)))
 (let (($x1970 (and $x1969 $x1966)))
 (ite $x1970 $x1984 $x1998)))))))))))))))))))))))))))))))
(assert
 (let ((?x77 (stack O (stack N (stack L (stack K (stack J (stack I empty))))))))
 (let ((?x83 (stack X (stack V (stack U (stack T (stack R (stack P ?x77))))))))
 (let ((?x84 (stack Y ?x83)))
 (let ((?x1760 (right s______________)))
 (let (($x2002 (= ?x1760 ?x84)))
 (let ((?x37 (stack F empty)))
 (let ((?x72 (stack S ?x37)))
 (let ((?x1946 (center s______________)))
 (let (($x2033 (= ?x1946 ?x72)))
 (let ((?x67 (stack H (stack C (stack D (stack G (stack B (stack E empty))))))))
 (let ((?x71 (stack Q (stack A (stack M (stack W ?x67))))))
 (let ((?x1726 (left s______________)))
 (let (($x2034 (= ?x1726 ?x71)))
 (let (($x2036 (not (and $x2034 $x2033 $x2002))))
 (not $x2036))))))))))))))))
(check-sat)
(exit)
