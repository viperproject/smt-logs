(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x27 (stack L empty)))
 (let ((?x26 (stack E ?x27)))
 (let ((?x28 (stack C ?x26)))
 (let ((?x29 (stack F ?x28)))
 (let ((?x30 (stack N ?x29)))
 (let ((?x31 (stack J ?x30)))
 (let ((?x32 (stack B ?x31)))
 (let ((?x33 (stack A ?x32)))
 (let ((?x34 (stack D ?x33)))
 (let ((?x99 (left s_tmp_)))
 (= ?x99 ?x34))))))))))))
(assert
 (let ((?x35 (stack G empty)))
 (let ((?x36 (stack K ?x35)))
 (let ((?x37 (stack H ?x36)))
 (let ((?x38 (stack M ?x37)))
 (let ((?x102 (center s_tmp__)))
 (= ?x102 ?x38)))))))
(assert
 (let ((?x39 (stack I empty)))
 (let ((?x105 (right s_tmp___)))
 (= ?x105 ?x39))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x132 (left s_tmp__)))
 (= (left s_tmp___) ?x132)))
(assert
 (let ((?x102 (center s_tmp__)))
 (= (center s_tmp___) ?x102)))
(assert
 (let ((?x136 (center s_tmp_)))
 (= ?x136 (center s_tmp))))
(assert
 (let ((?x139 (right s_tmp_)))
 (= ?x139 (right s_tmp))))
(assert
 (let ((?x99 (left s_tmp_)))
 (let ((?x132 (left s_tmp__)))
 (= ?x132 ?x99))))
(assert
 (let ((?x139 (right s_tmp_)))
 (let ((?x143 (right s_tmp__)))
 (= ?x143 ?x139))))
(assert
 (= c__ c!1))
(assert
 (let ((?x76 (left s_)))
 (let ((?x232 (left s__)))
 (let (($x274 (= ?x232 ?x76)))
 (let ((?x79 (right s_)))
 (let (($x235 ((_ is stack ) ?x79)))
 (let (($x247 (= c_ right-to-left)))
 (let (($x248 (and $x247 $x235)))
 (let ((?x81 (center s_)))
 (let (($x249 ((_ is stack ) ?x81)))
 (let (($x250 (= c_ center-to-right)))
 (let (($x227 (and $x250 $x249)))
 (let (($x228 (= c_ center-to-left)))
 (let (($x229 (and $x228 $x249)))
 (let (($x283 (ite $x229 (= ?x232 (stack (top ?x81) ?x76)) (ite $x227 $x274 (ite $x248 (= ?x232 (stack (top ?x79) ?x76)) $x274)))))
 (let (($x261 (= ?x232 (rest ?x76))))
 (let (($x254 ((_ is stack ) ?x76)))
 (let (($x255 (= c_ left-to-right)))
 (let (($x256 (and $x255 $x254)))
 (let (($x257 (= c_ left-to-center)))
 (let (($x258 (and $x257 $x254)))
 (ite $x258 $x261 (ite $x256 $x261 $x283)))))))))))))))))))))))
(assert
 (let ((?x79 (right s_)))
 (let ((?x237 (right s__)))
 (let (($x270 (= ?x237 ?x79)))
 (let (($x267 (= ?x237 (rest ?x79))))
 (let (($x235 ((_ is stack ) ?x79)))
 (let (($x245 (= c_ right-to-center)))
 (let (($x246 (and $x245 $x235)))
 (let (($x247 (= c_ right-to-left)))
 (let (($x248 (and $x247 $x235)))
 (let ((?x81 (center s_)))
 (let (($x249 ((_ is stack ) ?x81)))
 (let (($x250 (= c_ center-to-right)))
 (let (($x227 (and $x250 $x249)))
 (let (($x280 (ite $x227 (= ?x237 (stack (top ?x81) ?x79)) (ite $x248 $x267 (ite $x246 $x267 $x270)))))
 (let (($x228 (= c_ center-to-left)))
 (let (($x229 (and $x228 $x249)))
 (let ((?x76 (left s_)))
 (let (($x254 ((_ is stack ) ?x76)))
 (let (($x255 (= c_ left-to-right)))
 (let (($x256 (and $x255 $x254)))
 (let (($x257 (= c_ left-to-center)))
 (let (($x258 (and $x257 $x254)))
 (ite $x258 (= ?x237 (stack (top ?x76) ?x79)) (ite $x256 $x270 (ite $x229 $x270 $x280))))))))))))))))))))))))))
(assert
 (let ((?x81 (center s_)))
 (let ((?x243 (center s__)))
 (let (($x272 (= ?x243 ?x81)))
 (let ((?x79 (right s_)))
 (let (($x235 ((_ is stack ) ?x79)))
 (let (($x245 (= c_ right-to-center)))
 (let (($x246 (and $x245 $x235)))
 (let (($x247 (= c_ right-to-left)))
 (let (($x248 (and $x247 $x235)))
 (let (($x264 (= ?x243 (rest ?x81))))
 (let (($x249 ((_ is stack ) ?x81)))
 (let (($x250 (= c_ center-to-right)))
 (let (($x227 (and $x250 $x249)))
 (let (($x279 (ite $x227 $x264 (ite $x248 $x272 (ite $x246 (= ?x243 (stack (top ?x79) ?x81)) $x272)))))
 (let (($x228 (= c_ center-to-left)))
 (let (($x229 (and $x228 $x249)))
 (let ((?x76 (left s_)))
 (let (($x254 ((_ is stack ) ?x76)))
 (let (($x255 (= c_ left-to-right)))
 (let (($x256 (and $x255 $x254)))
 (let (($x257 (= c_ left-to-center)))
 (let (($x258 (and $x257 $x254)))
 (ite $x258 $x272 (ite $x256 (= ?x243 (stack (top ?x76) ?x81)) (ite $x229 $x264 $x279))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x232 (left s__)))
 (let ((?x146 (left s___)))
 (let (($x403 (= ?x146 ?x232)))
 (let ((?x237 (right s__)))
 (let ((?x370 (top ?x237)))
 (let ((?x371 (stack ?x370 ?x232)))
 (let (($x397 (= ?x146 ?x371)))
 (let (($x373 ((_ is stack ) ?x237)))
 (let (($x376 (= c__ right-to-left)))
 (let (($x377 (and $x376 $x373)))
 (let ((?x243 (center s__)))
 (let (($x378 ((_ is stack ) ?x243)))
 (let (($x379 (= c__ center-to-right)))
 (let (($x380 (and $x379 $x378)))
 (let ((?x366 (top ?x243)))
 (let ((?x367 (stack ?x366 ?x232)))
 (let (($x394 (= ?x146 ?x367)))
 (let (($x381 (= c__ center-to-left)))
 (let (($x382 (and $x381 $x378)))
 (let ((?x148 (rest ?x232)))
 (let (($x390 (= ?x146 ?x148)))
 (let (($x383 ((_ is stack ) ?x232)))
 (let (($x384 (= c__ left-to-right)))
 (let (($x385 (and $x384 $x383)))
 (let (($x386 (= c__ left-to-center)))
 (let (($x387 (and $x386 $x383)))
 (ite $x387 $x390 (ite $x385 $x390 (ite $x382 $x394 (ite $x380 $x403 (ite $x377 $x397 $x403))))))))))))))))))))))))))))))))
(assert
 (let ((?x237 (right s__)))
 (let ((?x149 (right s___)))
 (let (($x399 (= ?x149 ?x237)))
 (let ((?x369 (rest ?x237)))
 (let (($x396 (= ?x149 ?x369)))
 (let (($x373 ((_ is stack ) ?x237)))
 (let (($x374 (= c__ right-to-center)))
 (let (($x375 (and $x374 $x373)))
 (let (($x376 (= c__ right-to-left)))
 (let (($x377 (and $x376 $x373)))
 (let ((?x243 (center s__)))
 (let ((?x366 (top ?x243)))
 (let ((?x368 (stack ?x366 ?x237)))
 (let (($x395 (= ?x149 ?x368)))
 (let (($x378 ((_ is stack ) ?x243)))
 (let (($x379 (= c__ center-to-right)))
 (let (($x380 (and $x379 $x378)))
 (let (($x381 (= c__ center-to-left)))
 (let (($x382 (and $x381 $x378)))
 (let ((?x232 (left s__)))
 (let (($x383 ((_ is stack ) ?x232)))
 (let (($x384 (= c__ left-to-right)))
 (let (($x385 (and $x384 $x383)))
 (let (($x416 (ite $x385 $x399 (ite $x382 $x399 (ite $x380 $x395 (ite $x377 $x396 (ite $x375 $x396 $x399)))))))
 (let ((?x226 (top ?x232)))
 (let ((?x362 (stack ?x226 ?x237)))
 (let (($x391 (= ?x149 ?x362)))
 (let (($x386 (= c__ left-to-center)))
 (let (($x387 (and $x386 $x383)))
 (ite $x387 $x391 $x416)))))))))))))))))))))))))))))))
(assert
 (let ((?x243 (center s__)))
 (let ((?x363 (center s___)))
 (let (($x401 (= ?x363 ?x243)))
 (let ((?x237 (right s__)))
 (let ((?x370 (top ?x237)))
 (let ((?x372 (stack ?x370 ?x243)))
 (let (($x398 (= ?x363 ?x372)))
 (let (($x373 ((_ is stack ) ?x237)))
 (let (($x374 (= c__ right-to-center)))
 (let (($x375 (and $x374 $x373)))
 (let (($x376 (= c__ right-to-left)))
 (let (($x377 (and $x376 $x373)))
 (let ((?x365 (rest ?x243)))
 (let (($x393 (= ?x363 ?x365)))
 (let (($x378 ((_ is stack ) ?x243)))
 (let (($x379 (= c__ center-to-right)))
 (let (($x380 (and $x379 $x378)))
 (let (($x381 (= c__ center-to-left)))
 (let (($x382 (and $x381 $x378)))
 (let ((?x232 (left s__)))
 (let ((?x226 (top ?x232)))
 (let ((?x364 (stack ?x226 ?x243)))
 (let (($x392 (= ?x363 ?x364)))
 (let (($x383 ((_ is stack ) ?x232)))
 (let (($x384 (= c__ left-to-right)))
 (let (($x385 (and $x384 $x383)))
 (let (($x415 (ite $x385 $x392 (ite $x382 $x393 (ite $x380 $x393 (ite $x377 $x401 (ite $x375 $x398 $x401)))))))
 (let (($x386 (= c__ left-to-center)))
 (let (($x387 (and $x386 $x383)))
 (ite $x387 $x401 $x415)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x146 (left s___)))
 (let ((?x290 (left s____)))
 (let (($x541 (= ?x290 ?x146)))
 (let ((?x149 (right s___)))
 (let ((?x508 (top ?x149)))
 (let ((?x509 (stack ?x508 ?x146)))
 (let (($x535 (= ?x290 ?x509)))
 (let (($x511 ((_ is stack ) ?x149)))
 (let (($x514 (= c___ right-to-left)))
 (let (($x515 (and $x514 $x511)))
 (let ((?x363 (center s___)))
 (let (($x516 ((_ is stack ) ?x363)))
 (let (($x517 (= c___ center-to-right)))
 (let (($x518 (and $x517 $x516)))
 (let ((?x504 (top ?x363)))
 (let ((?x505 (stack ?x504 ?x146)))
 (let (($x532 (= ?x290 ?x505)))
 (let (($x519 (= c___ center-to-left)))
 (let (($x520 (and $x519 $x516)))
 (let ((?x334 (rest ?x146)))
 (let (($x528 (= ?x290 ?x334)))
 (let (($x521 ((_ is stack ) ?x146)))
 (let (($x522 (= c___ left-to-right)))
 (let (($x523 (and $x522 $x521)))
 (let (($x524 (= c___ left-to-center)))
 (let (($x525 (and $x524 $x521)))
 (ite $x525 $x528 (ite $x523 $x528 (ite $x520 $x532 (ite $x518 $x541 (ite $x515 $x535 $x541))))))))))))))))))))))))))))))))
(assert
 (let ((?x149 (right s___)))
 (let ((?x335 (right s____)))
 (let (($x537 (= ?x335 ?x149)))
 (let ((?x507 (rest ?x149)))
 (let (($x534 (= ?x335 ?x507)))
 (let (($x511 ((_ is stack ) ?x149)))
 (let (($x512 (= c___ right-to-center)))
 (let (($x513 (and $x512 $x511)))
 (let (($x514 (= c___ right-to-left)))
 (let (($x515 (and $x514 $x511)))
 (let ((?x363 (center s___)))
 (let ((?x504 (top ?x363)))
 (let ((?x506 (stack ?x504 ?x149)))
 (let (($x533 (= ?x335 ?x506)))
 (let (($x516 ((_ is stack ) ?x363)))
 (let (($x517 (= c___ center-to-right)))
 (let (($x518 (and $x517 $x516)))
 (let (($x519 (= c___ center-to-left)))
 (let (($x520 (and $x519 $x516)))
 (let ((?x146 (left s___)))
 (let (($x521 ((_ is stack ) ?x146)))
 (let (($x522 (= c___ left-to-right)))
 (let (($x523 (and $x522 $x521)))
 (let (($x554 (ite $x523 $x537 (ite $x520 $x537 (ite $x518 $x533 (ite $x515 $x534 (ite $x513 $x534 $x537)))))))
 (let ((?x361 (top ?x146)))
 (let ((?x500 (stack ?x361 ?x149)))
 (let (($x529 (= ?x335 ?x500)))
 (let (($x524 (= c___ left-to-center)))
 (let (($x525 (and $x524 $x521)))
 (ite $x525 $x529 $x554)))))))))))))))))))))))))))))))
(assert
 (let ((?x363 (center s___)))
 (let ((?x501 (center s____)))
 (let (($x539 (= ?x501 ?x363)))
 (let ((?x149 (right s___)))
 (let ((?x508 (top ?x149)))
 (let ((?x510 (stack ?x508 ?x363)))
 (let (($x536 (= ?x501 ?x510)))
 (let (($x511 ((_ is stack ) ?x149)))
 (let (($x512 (= c___ right-to-center)))
 (let (($x513 (and $x512 $x511)))
 (let (($x514 (= c___ right-to-left)))
 (let (($x515 (and $x514 $x511)))
 (let ((?x503 (rest ?x363)))
 (let (($x531 (= ?x501 ?x503)))
 (let (($x516 ((_ is stack ) ?x363)))
 (let (($x517 (= c___ center-to-right)))
 (let (($x518 (and $x517 $x516)))
 (let (($x519 (= c___ center-to-left)))
 (let (($x520 (and $x519 $x516)))
 (let ((?x146 (left s___)))
 (let ((?x361 (top ?x146)))
 (let ((?x502 (stack ?x361 ?x363)))
 (let (($x530 (= ?x501 ?x502)))
 (let (($x521 ((_ is stack ) ?x146)))
 (let (($x522 (= c___ left-to-right)))
 (let (($x523 (and $x522 $x521)))
 (let (($x553 (ite $x523 $x530 (ite $x520 $x531 (ite $x518 $x531 (ite $x515 $x539 (ite $x513 $x536 $x539)))))))
 (let (($x524 (= c___ left-to-center)))
 (let (($x525 (and $x524 $x521)))
 (ite $x525 $x539 $x553)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x290 (left s____)))
 (let ((?x419 (left s_____)))
 (let (($x679 (= ?x419 ?x290)))
 (let ((?x335 (right s____)))
 (let ((?x646 (top ?x335)))
 (let ((?x647 (stack ?x646 ?x290)))
 (let (($x673 (= ?x419 ?x647)))
 (let (($x649 ((_ is stack ) ?x335)))
 (let (($x652 (= c____ right-to-left)))
 (let (($x653 (and $x652 $x649)))
 (let ((?x501 (center s____)))
 (let (($x654 ((_ is stack ) ?x501)))
 (let (($x655 (= c____ center-to-right)))
 (let (($x656 (and $x655 $x654)))
 (let ((?x642 (top ?x501)))
 (let ((?x643 (stack ?x642 ?x290)))
 (let (($x670 (= ?x419 ?x643)))
 (let (($x657 (= c____ center-to-left)))
 (let (($x658 (and $x657 $x654)))
 (let ((?x452 (rest ?x290)))
 (let (($x666 (= ?x419 ?x452)))
 (let (($x659 ((_ is stack ) ?x290)))
 (let (($x660 (= c____ left-to-right)))
 (let (($x661 (and $x660 $x659)))
 (let (($x662 (= c____ left-to-center)))
 (let (($x663 (and $x662 $x659)))
 (ite $x663 $x666 (ite $x661 $x666 (ite $x658 $x670 (ite $x656 $x679 (ite $x653 $x673 $x679))))))))))))))))))))))))))))))))
(assert
 (let ((?x335 (right s____)))
 (let ((?x453 (right s_____)))
 (let (($x675 (= ?x453 ?x335)))
 (let ((?x645 (rest ?x335)))
 (let (($x672 (= ?x453 ?x645)))
 (let (($x649 ((_ is stack ) ?x335)))
 (let (($x650 (= c____ right-to-center)))
 (let (($x651 (and $x650 $x649)))
 (let (($x652 (= c____ right-to-left)))
 (let (($x653 (and $x652 $x649)))
 (let ((?x501 (center s____)))
 (let ((?x642 (top ?x501)))
 (let ((?x644 (stack ?x642 ?x335)))
 (let (($x671 (= ?x453 ?x644)))
 (let (($x654 ((_ is stack ) ?x501)))
 (let (($x655 (= c____ center-to-right)))
 (let (($x656 (and $x655 $x654)))
 (let (($x657 (= c____ center-to-left)))
 (let (($x658 (and $x657 $x654)))
 (let ((?x290 (left s____)))
 (let (($x659 ((_ is stack ) ?x290)))
 (let (($x660 (= c____ left-to-right)))
 (let (($x661 (and $x660 $x659)))
 (let (($x692 (ite $x661 $x675 (ite $x658 $x675 (ite $x656 $x671 (ite $x653 $x672 (ite $x651 $x672 $x675)))))))
 (let ((?x499 (top ?x290)))
 (let ((?x638 (stack ?x499 ?x335)))
 (let (($x667 (= ?x453 ?x638)))
 (let (($x662 (= c____ left-to-center)))
 (let (($x663 (and $x662 $x659)))
 (ite $x663 $x667 $x692)))))))))))))))))))))))))))))))
(assert
 (let ((?x501 (center s____)))
 (let ((?x639 (center s_____)))
 (let (($x677 (= ?x639 ?x501)))
 (let ((?x335 (right s____)))
 (let ((?x646 (top ?x335)))
 (let ((?x648 (stack ?x646 ?x501)))
 (let (($x674 (= ?x639 ?x648)))
 (let (($x649 ((_ is stack ) ?x335)))
 (let (($x650 (= c____ right-to-center)))
 (let (($x651 (and $x650 $x649)))
 (let (($x652 (= c____ right-to-left)))
 (let (($x653 (and $x652 $x649)))
 (let ((?x641 (rest ?x501)))
 (let (($x669 (= ?x639 ?x641)))
 (let (($x654 ((_ is stack ) ?x501)))
 (let (($x655 (= c____ center-to-right)))
 (let (($x656 (and $x655 $x654)))
 (let (($x657 (= c____ center-to-left)))
 (let (($x658 (and $x657 $x654)))
 (let ((?x290 (left s____)))
 (let ((?x499 (top ?x290)))
 (let ((?x640 (stack ?x499 ?x501)))
 (let (($x668 (= ?x639 ?x640)))
 (let (($x659 ((_ is stack ) ?x290)))
 (let (($x660 (= c____ left-to-right)))
 (let (($x661 (and $x660 $x659)))
 (let (($x691 (ite $x661 $x668 (ite $x658 $x669 (ite $x656 $x669 (ite $x653 $x677 (ite $x651 $x674 $x677)))))))
 (let (($x662 (= c____ left-to-center)))
 (let (($x663 (and $x662 $x659)))
 (ite $x663 $x677 $x691)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x419 (left s_____)))
 (let ((?x557 (left s______)))
 (let (($x817 (= ?x557 ?x419)))
 (let ((?x453 (right s_____)))
 (let ((?x784 (top ?x453)))
 (let ((?x785 (stack ?x784 ?x419)))
 (let (($x811 (= ?x557 ?x785)))
 (let (($x787 ((_ is stack ) ?x453)))
 (let (($x790 (= c_____ right-to-left)))
 (let (($x791 (and $x790 $x787)))
 (let ((?x639 (center s_____)))
 (let (($x792 ((_ is stack ) ?x639)))
 (let (($x793 (= c_____ center-to-right)))
 (let (($x794 (and $x793 $x792)))
 (let ((?x780 (top ?x639)))
 (let ((?x781 (stack ?x780 ?x419)))
 (let (($x808 (= ?x557 ?x781)))
 (let (($x795 (= c_____ center-to-left)))
 (let (($x796 (and $x795 $x792)))
 (let ((?x590 (rest ?x419)))
 (let (($x804 (= ?x557 ?x590)))
 (let (($x797 ((_ is stack ) ?x419)))
 (let (($x798 (= c_____ left-to-right)))
 (let (($x799 (and $x798 $x797)))
 (let (($x800 (= c_____ left-to-center)))
 (let (($x801 (and $x800 $x797)))
 (ite $x801 $x804 (ite $x799 $x804 (ite $x796 $x808 (ite $x794 $x817 (ite $x791 $x811 $x817))))))))))))))))))))))))))))))))
(assert
 (let ((?x453 (right s_____)))
 (let ((?x591 (right s______)))
 (let (($x813 (= ?x591 ?x453)))
 (let ((?x783 (rest ?x453)))
 (let (($x810 (= ?x591 ?x783)))
 (let (($x787 ((_ is stack ) ?x453)))
 (let (($x788 (= c_____ right-to-center)))
 (let (($x789 (and $x788 $x787)))
 (let (($x790 (= c_____ right-to-left)))
 (let (($x791 (and $x790 $x787)))
 (let ((?x639 (center s_____)))
 (let ((?x780 (top ?x639)))
 (let ((?x782 (stack ?x780 ?x453)))
 (let (($x809 (= ?x591 ?x782)))
 (let (($x792 ((_ is stack ) ?x639)))
 (let (($x793 (= c_____ center-to-right)))
 (let (($x794 (and $x793 $x792)))
 (let (($x795 (= c_____ center-to-left)))
 (let (($x796 (and $x795 $x792)))
 (let ((?x419 (left s_____)))
 (let (($x797 ((_ is stack ) ?x419)))
 (let (($x798 (= c_____ left-to-right)))
 (let (($x799 (and $x798 $x797)))
 (let (($x830 (ite $x799 $x813 (ite $x796 $x813 (ite $x794 $x809 (ite $x791 $x810 (ite $x789 $x810 $x813)))))))
 (let ((?x637 (top ?x419)))
 (let ((?x776 (stack ?x637 ?x453)))
 (let (($x805 (= ?x591 ?x776)))
 (let (($x800 (= c_____ left-to-center)))
 (let (($x801 (and $x800 $x797)))
 (ite $x801 $x805 $x830)))))))))))))))))))))))))))))))
(assert
 (let ((?x639 (center s_____)))
 (let ((?x777 (center s______)))
 (let (($x815 (= ?x777 ?x639)))
 (let ((?x453 (right s_____)))
 (let ((?x784 (top ?x453)))
 (let ((?x786 (stack ?x784 ?x639)))
 (let (($x812 (= ?x777 ?x786)))
 (let (($x787 ((_ is stack ) ?x453)))
 (let (($x788 (= c_____ right-to-center)))
 (let (($x789 (and $x788 $x787)))
 (let (($x790 (= c_____ right-to-left)))
 (let (($x791 (and $x790 $x787)))
 (let ((?x779 (rest ?x639)))
 (let (($x807 (= ?x777 ?x779)))
 (let (($x792 ((_ is stack ) ?x639)))
 (let (($x793 (= c_____ center-to-right)))
 (let (($x794 (and $x793 $x792)))
 (let (($x795 (= c_____ center-to-left)))
 (let (($x796 (and $x795 $x792)))
 (let ((?x419 (left s_____)))
 (let ((?x637 (top ?x419)))
 (let ((?x778 (stack ?x637 ?x639)))
 (let (($x806 (= ?x777 ?x778)))
 (let (($x797 ((_ is stack ) ?x419)))
 (let (($x798 (= c_____ left-to-right)))
 (let (($x799 (and $x798 $x797)))
 (let (($x829 (ite $x799 $x806 (ite $x796 $x807 (ite $x794 $x807 (ite $x791 $x815 (ite $x789 $x812 $x815)))))))
 (let (($x800 (= c_____ left-to-center)))
 (let (($x801 (and $x800 $x797)))
 (ite $x801 $x815 $x829)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x557 (left s______)))
 (let ((?x695 (left s_______)))
 (let (($x955 (= ?x695 ?x557)))
 (let ((?x591 (right s______)))
 (let ((?x922 (top ?x591)))
 (let ((?x923 (stack ?x922 ?x557)))
 (let (($x949 (= ?x695 ?x923)))
 (let (($x925 ((_ is stack ) ?x591)))
 (let (($x928 (= c______ right-to-left)))
 (let (($x929 (and $x928 $x925)))
 (let ((?x777 (center s______)))
 (let (($x930 ((_ is stack ) ?x777)))
 (let (($x931 (= c______ center-to-right)))
 (let (($x932 (and $x931 $x930)))
 (let ((?x918 (top ?x777)))
 (let ((?x919 (stack ?x918 ?x557)))
 (let (($x946 (= ?x695 ?x919)))
 (let (($x933 (= c______ center-to-left)))
 (let (($x934 (and $x933 $x930)))
 (let ((?x728 (rest ?x557)))
 (let (($x942 (= ?x695 ?x728)))
 (let (($x935 ((_ is stack ) ?x557)))
 (let (($x936 (= c______ left-to-right)))
 (let (($x937 (and $x936 $x935)))
 (let (($x938 (= c______ left-to-center)))
 (let (($x939 (and $x938 $x935)))
 (ite $x939 $x942 (ite $x937 $x942 (ite $x934 $x946 (ite $x932 $x955 (ite $x929 $x949 $x955))))))))))))))))))))))))))))))))
(assert
 (let ((?x591 (right s______)))
 (let ((?x729 (right s_______)))
 (let (($x951 (= ?x729 ?x591)))
 (let ((?x921 (rest ?x591)))
 (let (($x948 (= ?x729 ?x921)))
 (let (($x925 ((_ is stack ) ?x591)))
 (let (($x926 (= c______ right-to-center)))
 (let (($x927 (and $x926 $x925)))
 (let (($x928 (= c______ right-to-left)))
 (let (($x929 (and $x928 $x925)))
 (let ((?x777 (center s______)))
 (let ((?x918 (top ?x777)))
 (let ((?x920 (stack ?x918 ?x591)))
 (let (($x947 (= ?x729 ?x920)))
 (let (($x930 ((_ is stack ) ?x777)))
 (let (($x931 (= c______ center-to-right)))
 (let (($x932 (and $x931 $x930)))
 (let (($x933 (= c______ center-to-left)))
 (let (($x934 (and $x933 $x930)))
 (let ((?x557 (left s______)))
 (let (($x935 ((_ is stack ) ?x557)))
 (let (($x936 (= c______ left-to-right)))
 (let (($x937 (and $x936 $x935)))
 (let (($x968 (ite $x937 $x951 (ite $x934 $x951 (ite $x932 $x947 (ite $x929 $x948 (ite $x927 $x948 $x951)))))))
 (let ((?x775 (top ?x557)))
 (let ((?x914 (stack ?x775 ?x591)))
 (let (($x943 (= ?x729 ?x914)))
 (let (($x938 (= c______ left-to-center)))
 (let (($x939 (and $x938 $x935)))
 (ite $x939 $x943 $x968)))))))))))))))))))))))))))))))
(assert
 (let ((?x777 (center s______)))
 (let ((?x915 (center s_______)))
 (let (($x953 (= ?x915 ?x777)))
 (let ((?x591 (right s______)))
 (let ((?x922 (top ?x591)))
 (let ((?x924 (stack ?x922 ?x777)))
 (let (($x950 (= ?x915 ?x924)))
 (let (($x925 ((_ is stack ) ?x591)))
 (let (($x926 (= c______ right-to-center)))
 (let (($x927 (and $x926 $x925)))
 (let (($x928 (= c______ right-to-left)))
 (let (($x929 (and $x928 $x925)))
 (let ((?x917 (rest ?x777)))
 (let (($x945 (= ?x915 ?x917)))
 (let (($x930 ((_ is stack ) ?x777)))
 (let (($x931 (= c______ center-to-right)))
 (let (($x932 (and $x931 $x930)))
 (let (($x933 (= c______ center-to-left)))
 (let (($x934 (and $x933 $x930)))
 (let ((?x557 (left s______)))
 (let ((?x775 (top ?x557)))
 (let ((?x916 (stack ?x775 ?x777)))
 (let (($x944 (= ?x915 ?x916)))
 (let (($x935 ((_ is stack ) ?x557)))
 (let (($x936 (= c______ left-to-right)))
 (let (($x937 (and $x936 $x935)))
 (let (($x967 (ite $x937 $x944 (ite $x934 $x945 (ite $x932 $x945 (ite $x929 $x953 (ite $x927 $x950 $x953)))))))
 (let (($x938 (= c______ left-to-center)))
 (let (($x939 (and $x938 $x935)))
 (ite $x939 $x953 $x967)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x695 (left s_______)))
 (let ((?x833 (left s________)))
 (let (($x1093 (= ?x833 ?x695)))
 (let ((?x729 (right s_______)))
 (let ((?x1060 (top ?x729)))
 (let ((?x1061 (stack ?x1060 ?x695)))
 (let (($x1087 (= ?x833 ?x1061)))
 (let (($x1063 ((_ is stack ) ?x729)))
 (let (($x1066 (= c_______ right-to-left)))
 (let (($x1067 (and $x1066 $x1063)))
 (let ((?x915 (center s_______)))
 (let (($x1068 ((_ is stack ) ?x915)))
 (let (($x1069 (= c_______ center-to-right)))
 (let (($x1070 (and $x1069 $x1068)))
 (let ((?x1056 (top ?x915)))
 (let ((?x1057 (stack ?x1056 ?x695)))
 (let (($x1084 (= ?x833 ?x1057)))
 (let (($x1071 (= c_______ center-to-left)))
 (let (($x1072 (and $x1071 $x1068)))
 (let ((?x866 (rest ?x695)))
 (let (($x1080 (= ?x833 ?x866)))
 (let (($x1073 ((_ is stack ) ?x695)))
 (let (($x1074 (= c_______ left-to-right)))
 (let (($x1075 (and $x1074 $x1073)))
 (let (($x1076 (= c_______ left-to-center)))
 (let (($x1077 (and $x1076 $x1073)))
 (ite $x1077 $x1080 (ite $x1075 $x1080 (ite $x1072 $x1084 (ite $x1070 $x1093 (ite $x1067 $x1087 $x1093))))))))))))))))))))))))))))))))
(assert
 (let ((?x729 (right s_______)))
 (let ((?x867 (right s________)))
 (let (($x1089 (= ?x867 ?x729)))
 (let ((?x1059 (rest ?x729)))
 (let (($x1086 (= ?x867 ?x1059)))
 (let (($x1063 ((_ is stack ) ?x729)))
 (let (($x1064 (= c_______ right-to-center)))
 (let (($x1065 (and $x1064 $x1063)))
 (let (($x1066 (= c_______ right-to-left)))
 (let (($x1067 (and $x1066 $x1063)))
 (let ((?x915 (center s_______)))
 (let ((?x1056 (top ?x915)))
 (let ((?x1058 (stack ?x1056 ?x729)))
 (let (($x1085 (= ?x867 ?x1058)))
 (let (($x1068 ((_ is stack ) ?x915)))
 (let (($x1069 (= c_______ center-to-right)))
 (let (($x1070 (and $x1069 $x1068)))
 (let (($x1071 (= c_______ center-to-left)))
 (let (($x1072 (and $x1071 $x1068)))
 (let ((?x695 (left s_______)))
 (let (($x1073 ((_ is stack ) ?x695)))
 (let (($x1074 (= c_______ left-to-right)))
 (let (($x1075 (and $x1074 $x1073)))
 (let (($x1106 (ite $x1075 $x1089 (ite $x1072 $x1089 (ite $x1070 $x1085 (ite $x1067 $x1086 (ite $x1065 $x1086 $x1089)))))))
 (let ((?x913 (top ?x695)))
 (let ((?x1052 (stack ?x913 ?x729)))
 (let (($x1081 (= ?x867 ?x1052)))
 (let (($x1076 (= c_______ left-to-center)))
 (let (($x1077 (and $x1076 $x1073)))
 (ite $x1077 $x1081 $x1106)))))))))))))))))))))))))))))))
(assert
 (let ((?x915 (center s_______)))
 (let ((?x1053 (center s________)))
 (let (($x1091 (= ?x1053 ?x915)))
 (let ((?x729 (right s_______)))
 (let ((?x1060 (top ?x729)))
 (let ((?x1062 (stack ?x1060 ?x915)))
 (let (($x1088 (= ?x1053 ?x1062)))
 (let (($x1063 ((_ is stack ) ?x729)))
 (let (($x1064 (= c_______ right-to-center)))
 (let (($x1065 (and $x1064 $x1063)))
 (let (($x1066 (= c_______ right-to-left)))
 (let (($x1067 (and $x1066 $x1063)))
 (let ((?x1055 (rest ?x915)))
 (let (($x1083 (= ?x1053 ?x1055)))
 (let (($x1068 ((_ is stack ) ?x915)))
 (let (($x1069 (= c_______ center-to-right)))
 (let (($x1070 (and $x1069 $x1068)))
 (let (($x1071 (= c_______ center-to-left)))
 (let (($x1072 (and $x1071 $x1068)))
 (let ((?x695 (left s_______)))
 (let ((?x913 (top ?x695)))
 (let ((?x1054 (stack ?x913 ?x915)))
 (let (($x1082 (= ?x1053 ?x1054)))
 (let (($x1073 ((_ is stack ) ?x695)))
 (let (($x1074 (= c_______ left-to-right)))
 (let (($x1075 (and $x1074 $x1073)))
 (let (($x1105 (ite $x1075 $x1082 (ite $x1072 $x1083 (ite $x1070 $x1083 (ite $x1067 $x1091 (ite $x1065 $x1088 $x1091)))))))
 (let (($x1076 (= c_______ left-to-center)))
 (let (($x1077 (and $x1076 $x1073)))
 (ite $x1077 $x1091 $x1105)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x833 (left s________)))
 (let ((?x971 (left s_________)))
 (let (($x1231 (= ?x971 ?x833)))
 (let ((?x867 (right s________)))
 (let ((?x1198 (top ?x867)))
 (let ((?x1199 (stack ?x1198 ?x833)))
 (let (($x1225 (= ?x971 ?x1199)))
 (let (($x1201 ((_ is stack ) ?x867)))
 (let (($x1204 (= c________ right-to-left)))
 (let (($x1205 (and $x1204 $x1201)))
 (let ((?x1053 (center s________)))
 (let (($x1206 ((_ is stack ) ?x1053)))
 (let (($x1207 (= c________ center-to-right)))
 (let (($x1208 (and $x1207 $x1206)))
 (let ((?x1194 (top ?x1053)))
 (let ((?x1195 (stack ?x1194 ?x833)))
 (let (($x1222 (= ?x971 ?x1195)))
 (let (($x1209 (= c________ center-to-left)))
 (let (($x1210 (and $x1209 $x1206)))
 (let ((?x1004 (rest ?x833)))
 (let (($x1218 (= ?x971 ?x1004)))
 (let (($x1211 ((_ is stack ) ?x833)))
 (let (($x1212 (= c________ left-to-right)))
 (let (($x1213 (and $x1212 $x1211)))
 (let (($x1214 (= c________ left-to-center)))
 (let (($x1215 (and $x1214 $x1211)))
 (ite $x1215 $x1218 (ite $x1213 $x1218 (ite $x1210 $x1222 (ite $x1208 $x1231 (ite $x1205 $x1225 $x1231))))))))))))))))))))))))))))))))
(assert
 (let ((?x867 (right s________)))
 (let ((?x1005 (right s_________)))
 (let (($x1227 (= ?x1005 ?x867)))
 (let ((?x1197 (rest ?x867)))
 (let (($x1224 (= ?x1005 ?x1197)))
 (let (($x1201 ((_ is stack ) ?x867)))
 (let (($x1202 (= c________ right-to-center)))
 (let (($x1203 (and $x1202 $x1201)))
 (let (($x1204 (= c________ right-to-left)))
 (let (($x1205 (and $x1204 $x1201)))
 (let ((?x1053 (center s________)))
 (let ((?x1194 (top ?x1053)))
 (let ((?x1196 (stack ?x1194 ?x867)))
 (let (($x1223 (= ?x1005 ?x1196)))
 (let (($x1206 ((_ is stack ) ?x1053)))
 (let (($x1207 (= c________ center-to-right)))
 (let (($x1208 (and $x1207 $x1206)))
 (let (($x1209 (= c________ center-to-left)))
 (let (($x1210 (and $x1209 $x1206)))
 (let ((?x833 (left s________)))
 (let (($x1211 ((_ is stack ) ?x833)))
 (let (($x1212 (= c________ left-to-right)))
 (let (($x1213 (and $x1212 $x1211)))
 (let (($x1244 (ite $x1213 $x1227 (ite $x1210 $x1227 (ite $x1208 $x1223 (ite $x1205 $x1224 (ite $x1203 $x1224 $x1227)))))))
 (let ((?x1051 (top ?x833)))
 (let ((?x1190 (stack ?x1051 ?x867)))
 (let (($x1219 (= ?x1005 ?x1190)))
 (let (($x1214 (= c________ left-to-center)))
 (let (($x1215 (and $x1214 $x1211)))
 (ite $x1215 $x1219 $x1244)))))))))))))))))))))))))))))))
(assert
 (let ((?x1053 (center s________)))
 (let ((?x1191 (center s_________)))
 (let (($x1229 (= ?x1191 ?x1053)))
 (let ((?x867 (right s________)))
 (let ((?x1198 (top ?x867)))
 (let ((?x1200 (stack ?x1198 ?x1053)))
 (let (($x1226 (= ?x1191 ?x1200)))
 (let (($x1201 ((_ is stack ) ?x867)))
 (let (($x1202 (= c________ right-to-center)))
 (let (($x1203 (and $x1202 $x1201)))
 (let (($x1204 (= c________ right-to-left)))
 (let (($x1205 (and $x1204 $x1201)))
 (let ((?x1193 (rest ?x1053)))
 (let (($x1221 (= ?x1191 ?x1193)))
 (let (($x1206 ((_ is stack ) ?x1053)))
 (let (($x1207 (= c________ center-to-right)))
 (let (($x1208 (and $x1207 $x1206)))
 (let (($x1209 (= c________ center-to-left)))
 (let (($x1210 (and $x1209 $x1206)))
 (let ((?x833 (left s________)))
 (let ((?x1051 (top ?x833)))
 (let ((?x1192 (stack ?x1051 ?x1053)))
 (let (($x1220 (= ?x1191 ?x1192)))
 (let (($x1211 ((_ is stack ) ?x833)))
 (let (($x1212 (= c________ left-to-right)))
 (let (($x1213 (and $x1212 $x1211)))
 (let (($x1243 (ite $x1213 $x1220 (ite $x1210 $x1221 (ite $x1208 $x1221 (ite $x1205 $x1229 (ite $x1203 $x1226 $x1229)))))))
 (let (($x1214 (= c________ left-to-center)))
 (let (($x1215 (and $x1214 $x1211)))
 (ite $x1215 $x1229 $x1243)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x971 (left s_________)))
 (let ((?x1109 (left s__________)))
 (let (($x1369 (= ?x1109 ?x971)))
 (let ((?x1005 (right s_________)))
 (let ((?x1336 (top ?x1005)))
 (let ((?x1337 (stack ?x1336 ?x971)))
 (let (($x1363 (= ?x1109 ?x1337)))
 (let (($x1339 ((_ is stack ) ?x1005)))
 (let (($x1342 (= c_________ right-to-left)))
 (let (($x1343 (and $x1342 $x1339)))
 (let ((?x1191 (center s_________)))
 (let (($x1344 ((_ is stack ) ?x1191)))
 (let (($x1345 (= c_________ center-to-right)))
 (let (($x1346 (and $x1345 $x1344)))
 (let ((?x1332 (top ?x1191)))
 (let ((?x1333 (stack ?x1332 ?x971)))
 (let (($x1360 (= ?x1109 ?x1333)))
 (let (($x1347 (= c_________ center-to-left)))
 (let (($x1348 (and $x1347 $x1344)))
 (let ((?x1142 (rest ?x971)))
 (let (($x1356 (= ?x1109 ?x1142)))
 (let (($x1349 ((_ is stack ) ?x971)))
 (let (($x1350 (= c_________ left-to-right)))
 (let (($x1351 (and $x1350 $x1349)))
 (let (($x1352 (= c_________ left-to-center)))
 (let (($x1353 (and $x1352 $x1349)))
 (ite $x1353 $x1356 (ite $x1351 $x1356 (ite $x1348 $x1360 (ite $x1346 $x1369 (ite $x1343 $x1363 $x1369))))))))))))))))))))))))))))))))
(assert
 (let ((?x1005 (right s_________)))
 (let ((?x1143 (right s__________)))
 (let (($x1365 (= ?x1143 ?x1005)))
 (let ((?x1335 (rest ?x1005)))
 (let (($x1362 (= ?x1143 ?x1335)))
 (let (($x1339 ((_ is stack ) ?x1005)))
 (let (($x1340 (= c_________ right-to-center)))
 (let (($x1341 (and $x1340 $x1339)))
 (let (($x1342 (= c_________ right-to-left)))
 (let (($x1343 (and $x1342 $x1339)))
 (let ((?x1191 (center s_________)))
 (let ((?x1332 (top ?x1191)))
 (let ((?x1334 (stack ?x1332 ?x1005)))
 (let (($x1361 (= ?x1143 ?x1334)))
 (let (($x1344 ((_ is stack ) ?x1191)))
 (let (($x1345 (= c_________ center-to-right)))
 (let (($x1346 (and $x1345 $x1344)))
 (let (($x1347 (= c_________ center-to-left)))
 (let (($x1348 (and $x1347 $x1344)))
 (let ((?x971 (left s_________)))
 (let (($x1349 ((_ is stack ) ?x971)))
 (let (($x1350 (= c_________ left-to-right)))
 (let (($x1351 (and $x1350 $x1349)))
 (let (($x1382 (ite $x1351 $x1365 (ite $x1348 $x1365 (ite $x1346 $x1361 (ite $x1343 $x1362 (ite $x1341 $x1362 $x1365)))))))
 (let ((?x1189 (top ?x971)))
 (let ((?x1328 (stack ?x1189 ?x1005)))
 (let (($x1357 (= ?x1143 ?x1328)))
 (let (($x1352 (= c_________ left-to-center)))
 (let (($x1353 (and $x1352 $x1349)))
 (ite $x1353 $x1357 $x1382)))))))))))))))))))))))))))))))
(assert
 (let ((?x1191 (center s_________)))
 (let ((?x1329 (center s__________)))
 (let (($x1367 (= ?x1329 ?x1191)))
 (let ((?x1005 (right s_________)))
 (let ((?x1336 (top ?x1005)))
 (let ((?x1338 (stack ?x1336 ?x1191)))
 (let (($x1364 (= ?x1329 ?x1338)))
 (let (($x1339 ((_ is stack ) ?x1005)))
 (let (($x1340 (= c_________ right-to-center)))
 (let (($x1341 (and $x1340 $x1339)))
 (let (($x1342 (= c_________ right-to-left)))
 (let (($x1343 (and $x1342 $x1339)))
 (let ((?x1331 (rest ?x1191)))
 (let (($x1359 (= ?x1329 ?x1331)))
 (let (($x1344 ((_ is stack ) ?x1191)))
 (let (($x1345 (= c_________ center-to-right)))
 (let (($x1346 (and $x1345 $x1344)))
 (let (($x1347 (= c_________ center-to-left)))
 (let (($x1348 (and $x1347 $x1344)))
 (let ((?x971 (left s_________)))
 (let ((?x1189 (top ?x971)))
 (let ((?x1330 (stack ?x1189 ?x1191)))
 (let (($x1358 (= ?x1329 ?x1330)))
 (let (($x1349 ((_ is stack ) ?x971)))
 (let (($x1350 (= c_________ left-to-right)))
 (let (($x1351 (and $x1350 $x1349)))
 (let (($x1381 (ite $x1351 $x1358 (ite $x1348 $x1359 (ite $x1346 $x1359 (ite $x1343 $x1367 (ite $x1341 $x1364 $x1367)))))))
 (let (($x1352 (= c_________ left-to-center)))
 (let (($x1353 (and $x1352 $x1349)))
 (ite $x1353 $x1367 $x1381)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1109 (left s__________)))
 (let ((?x1247 (left s___________)))
 (let (($x1507 (= ?x1247 ?x1109)))
 (let ((?x1143 (right s__________)))
 (let ((?x1474 (top ?x1143)))
 (let ((?x1475 (stack ?x1474 ?x1109)))
 (let (($x1501 (= ?x1247 ?x1475)))
 (let (($x1477 ((_ is stack ) ?x1143)))
 (let (($x1480 (= c__________ right-to-left)))
 (let (($x1481 (and $x1480 $x1477)))
 (let ((?x1329 (center s__________)))
 (let (($x1482 ((_ is stack ) ?x1329)))
 (let (($x1483 (= c__________ center-to-right)))
 (let (($x1484 (and $x1483 $x1482)))
 (let ((?x1470 (top ?x1329)))
 (let ((?x1471 (stack ?x1470 ?x1109)))
 (let (($x1498 (= ?x1247 ?x1471)))
 (let (($x1485 (= c__________ center-to-left)))
 (let (($x1486 (and $x1485 $x1482)))
 (let ((?x1280 (rest ?x1109)))
 (let (($x1494 (= ?x1247 ?x1280)))
 (let (($x1487 ((_ is stack ) ?x1109)))
 (let (($x1488 (= c__________ left-to-right)))
 (let (($x1489 (and $x1488 $x1487)))
 (let (($x1490 (= c__________ left-to-center)))
 (let (($x1491 (and $x1490 $x1487)))
 (ite $x1491 $x1494 (ite $x1489 $x1494 (ite $x1486 $x1498 (ite $x1484 $x1507 (ite $x1481 $x1501 $x1507))))))))))))))))))))))))))))))))
(assert
 (let ((?x1143 (right s__________)))
 (let ((?x1281 (right s___________)))
 (let (($x1503 (= ?x1281 ?x1143)))
 (let ((?x1473 (rest ?x1143)))
 (let (($x1500 (= ?x1281 ?x1473)))
 (let (($x1477 ((_ is stack ) ?x1143)))
 (let (($x1478 (= c__________ right-to-center)))
 (let (($x1479 (and $x1478 $x1477)))
 (let (($x1480 (= c__________ right-to-left)))
 (let (($x1481 (and $x1480 $x1477)))
 (let ((?x1329 (center s__________)))
 (let ((?x1470 (top ?x1329)))
 (let ((?x1472 (stack ?x1470 ?x1143)))
 (let (($x1499 (= ?x1281 ?x1472)))
 (let (($x1482 ((_ is stack ) ?x1329)))
 (let (($x1483 (= c__________ center-to-right)))
 (let (($x1484 (and $x1483 $x1482)))
 (let (($x1485 (= c__________ center-to-left)))
 (let (($x1486 (and $x1485 $x1482)))
 (let ((?x1109 (left s__________)))
 (let (($x1487 ((_ is stack ) ?x1109)))
 (let (($x1488 (= c__________ left-to-right)))
 (let (($x1489 (and $x1488 $x1487)))
 (let (($x1520 (ite $x1489 $x1503 (ite $x1486 $x1503 (ite $x1484 $x1499 (ite $x1481 $x1500 (ite $x1479 $x1500 $x1503)))))))
 (let ((?x1327 (top ?x1109)))
 (let ((?x1466 (stack ?x1327 ?x1143)))
 (let (($x1495 (= ?x1281 ?x1466)))
 (let (($x1490 (= c__________ left-to-center)))
 (let (($x1491 (and $x1490 $x1487)))
 (ite $x1491 $x1495 $x1520)))))))))))))))))))))))))))))))
(assert
 (let ((?x1329 (center s__________)))
 (let ((?x1467 (center s___________)))
 (let (($x1505 (= ?x1467 ?x1329)))
 (let ((?x1143 (right s__________)))
 (let ((?x1474 (top ?x1143)))
 (let ((?x1476 (stack ?x1474 ?x1329)))
 (let (($x1502 (= ?x1467 ?x1476)))
 (let (($x1477 ((_ is stack ) ?x1143)))
 (let (($x1478 (= c__________ right-to-center)))
 (let (($x1479 (and $x1478 $x1477)))
 (let (($x1480 (= c__________ right-to-left)))
 (let (($x1481 (and $x1480 $x1477)))
 (let ((?x1469 (rest ?x1329)))
 (let (($x1497 (= ?x1467 ?x1469)))
 (let (($x1482 ((_ is stack ) ?x1329)))
 (let (($x1483 (= c__________ center-to-right)))
 (let (($x1484 (and $x1483 $x1482)))
 (let (($x1485 (= c__________ center-to-left)))
 (let (($x1486 (and $x1485 $x1482)))
 (let ((?x1109 (left s__________)))
 (let ((?x1327 (top ?x1109)))
 (let ((?x1468 (stack ?x1327 ?x1329)))
 (let (($x1496 (= ?x1467 ?x1468)))
 (let (($x1487 ((_ is stack ) ?x1109)))
 (let (($x1488 (= c__________ left-to-right)))
 (let (($x1489 (and $x1488 $x1487)))
 (let (($x1519 (ite $x1489 $x1496 (ite $x1486 $x1497 (ite $x1484 $x1497 (ite $x1481 $x1505 (ite $x1479 $x1502 $x1505)))))))
 (let (($x1490 (= c__________ left-to-center)))
 (let (($x1491 (and $x1490 $x1487)))
 (ite $x1491 $x1505 $x1519)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1247 (left s___________)))
 (let ((?x1385 (left s____________)))
 (let (($x1645 (= ?x1385 ?x1247)))
 (let ((?x1281 (right s___________)))
 (let ((?x1612 (top ?x1281)))
 (let ((?x1613 (stack ?x1612 ?x1247)))
 (let (($x1639 (= ?x1385 ?x1613)))
 (let (($x1615 ((_ is stack ) ?x1281)))
 (let (($x1618 (= c___________ right-to-left)))
 (let (($x1619 (and $x1618 $x1615)))
 (let ((?x1467 (center s___________)))
 (let (($x1620 ((_ is stack ) ?x1467)))
 (let (($x1621 (= c___________ center-to-right)))
 (let (($x1622 (and $x1621 $x1620)))
 (let ((?x1608 (top ?x1467)))
 (let ((?x1609 (stack ?x1608 ?x1247)))
 (let (($x1636 (= ?x1385 ?x1609)))
 (let (($x1623 (= c___________ center-to-left)))
 (let (($x1624 (and $x1623 $x1620)))
 (let ((?x1418 (rest ?x1247)))
 (let (($x1632 (= ?x1385 ?x1418)))
 (let (($x1625 ((_ is stack ) ?x1247)))
 (let (($x1626 (= c___________ left-to-right)))
 (let (($x1627 (and $x1626 $x1625)))
 (let (($x1628 (= c___________ left-to-center)))
 (let (($x1629 (and $x1628 $x1625)))
 (ite $x1629 $x1632 (ite $x1627 $x1632 (ite $x1624 $x1636 (ite $x1622 $x1645 (ite $x1619 $x1639 $x1645))))))))))))))))))))))))))))))))
(assert
 (let ((?x1281 (right s___________)))
 (let ((?x1419 (right s____________)))
 (let (($x1641 (= ?x1419 ?x1281)))
 (let ((?x1611 (rest ?x1281)))
 (let (($x1638 (= ?x1419 ?x1611)))
 (let (($x1615 ((_ is stack ) ?x1281)))
 (let (($x1616 (= c___________ right-to-center)))
 (let (($x1617 (and $x1616 $x1615)))
 (let (($x1618 (= c___________ right-to-left)))
 (let (($x1619 (and $x1618 $x1615)))
 (let ((?x1467 (center s___________)))
 (let ((?x1608 (top ?x1467)))
 (let ((?x1610 (stack ?x1608 ?x1281)))
 (let (($x1637 (= ?x1419 ?x1610)))
 (let (($x1620 ((_ is stack ) ?x1467)))
 (let (($x1621 (= c___________ center-to-right)))
 (let (($x1622 (and $x1621 $x1620)))
 (let (($x1623 (= c___________ center-to-left)))
 (let (($x1624 (and $x1623 $x1620)))
 (let ((?x1247 (left s___________)))
 (let (($x1625 ((_ is stack ) ?x1247)))
 (let (($x1626 (= c___________ left-to-right)))
 (let (($x1627 (and $x1626 $x1625)))
 (let (($x1658 (ite $x1627 $x1641 (ite $x1624 $x1641 (ite $x1622 $x1637 (ite $x1619 $x1638 (ite $x1617 $x1638 $x1641)))))))
 (let ((?x1465 (top ?x1247)))
 (let ((?x1604 (stack ?x1465 ?x1281)))
 (let (($x1633 (= ?x1419 ?x1604)))
 (let (($x1628 (= c___________ left-to-center)))
 (let (($x1629 (and $x1628 $x1625)))
 (ite $x1629 $x1633 $x1658)))))))))))))))))))))))))))))))
(assert
 (let ((?x1467 (center s___________)))
 (let ((?x1605 (center s____________)))
 (let (($x1643 (= ?x1605 ?x1467)))
 (let ((?x1281 (right s___________)))
 (let ((?x1612 (top ?x1281)))
 (let ((?x1614 (stack ?x1612 ?x1467)))
 (let (($x1640 (= ?x1605 ?x1614)))
 (let (($x1615 ((_ is stack ) ?x1281)))
 (let (($x1616 (= c___________ right-to-center)))
 (let (($x1617 (and $x1616 $x1615)))
 (let (($x1618 (= c___________ right-to-left)))
 (let (($x1619 (and $x1618 $x1615)))
 (let ((?x1607 (rest ?x1467)))
 (let (($x1635 (= ?x1605 ?x1607)))
 (let (($x1620 ((_ is stack ) ?x1467)))
 (let (($x1621 (= c___________ center-to-right)))
 (let (($x1622 (and $x1621 $x1620)))
 (let (($x1623 (= c___________ center-to-left)))
 (let (($x1624 (and $x1623 $x1620)))
 (let ((?x1247 (left s___________)))
 (let ((?x1465 (top ?x1247)))
 (let ((?x1606 (stack ?x1465 ?x1467)))
 (let (($x1634 (= ?x1605 ?x1606)))
 (let (($x1625 ((_ is stack ) ?x1247)))
 (let (($x1626 (= c___________ left-to-right)))
 (let (($x1627 (and $x1626 $x1625)))
 (let (($x1657 (ite $x1627 $x1634 (ite $x1624 $x1635 (ite $x1622 $x1635 (ite $x1619 $x1643 (ite $x1617 $x1640 $x1643)))))))
 (let (($x1628 (= c___________ left-to-center)))
 (let (($x1629 (and $x1628 $x1625)))
 (ite $x1629 $x1643 $x1657)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1385 (left s____________)))
 (let ((?x1523 (left s_____________)))
 (let (($x1783 (= ?x1523 ?x1385)))
 (let ((?x1419 (right s____________)))
 (let ((?x1750 (top ?x1419)))
 (let ((?x1751 (stack ?x1750 ?x1385)))
 (let (($x1777 (= ?x1523 ?x1751)))
 (let (($x1753 ((_ is stack ) ?x1419)))
 (let (($x1756 (= c____________ right-to-left)))
 (let (($x1757 (and $x1756 $x1753)))
 (let ((?x1605 (center s____________)))
 (let (($x1758 ((_ is stack ) ?x1605)))
 (let (($x1759 (= c____________ center-to-right)))
 (let (($x1760 (and $x1759 $x1758)))
 (let ((?x1746 (top ?x1605)))
 (let ((?x1747 (stack ?x1746 ?x1385)))
 (let (($x1774 (= ?x1523 ?x1747)))
 (let (($x1761 (= c____________ center-to-left)))
 (let (($x1762 (and $x1761 $x1758)))
 (let ((?x1556 (rest ?x1385)))
 (let (($x1770 (= ?x1523 ?x1556)))
 (let (($x1763 ((_ is stack ) ?x1385)))
 (let (($x1764 (= c____________ left-to-right)))
 (let (($x1765 (and $x1764 $x1763)))
 (let (($x1766 (= c____________ left-to-center)))
 (let (($x1767 (and $x1766 $x1763)))
 (ite $x1767 $x1770 (ite $x1765 $x1770 (ite $x1762 $x1774 (ite $x1760 $x1783 (ite $x1757 $x1777 $x1783))))))))))))))))))))))))))))))))
(assert
 (let ((?x1419 (right s____________)))
 (let ((?x1557 (right s_____________)))
 (let (($x1779 (= ?x1557 ?x1419)))
 (let ((?x1749 (rest ?x1419)))
 (let (($x1776 (= ?x1557 ?x1749)))
 (let (($x1753 ((_ is stack ) ?x1419)))
 (let (($x1754 (= c____________ right-to-center)))
 (let (($x1755 (and $x1754 $x1753)))
 (let (($x1756 (= c____________ right-to-left)))
 (let (($x1757 (and $x1756 $x1753)))
 (let ((?x1605 (center s____________)))
 (let ((?x1746 (top ?x1605)))
 (let ((?x1748 (stack ?x1746 ?x1419)))
 (let (($x1775 (= ?x1557 ?x1748)))
 (let (($x1758 ((_ is stack ) ?x1605)))
 (let (($x1759 (= c____________ center-to-right)))
 (let (($x1760 (and $x1759 $x1758)))
 (let (($x1761 (= c____________ center-to-left)))
 (let (($x1762 (and $x1761 $x1758)))
 (let ((?x1385 (left s____________)))
 (let (($x1763 ((_ is stack ) ?x1385)))
 (let (($x1764 (= c____________ left-to-right)))
 (let (($x1765 (and $x1764 $x1763)))
 (let (($x1796 (ite $x1765 $x1779 (ite $x1762 $x1779 (ite $x1760 $x1775 (ite $x1757 $x1776 (ite $x1755 $x1776 $x1779)))))))
 (let ((?x1603 (top ?x1385)))
 (let ((?x1742 (stack ?x1603 ?x1419)))
 (let (($x1771 (= ?x1557 ?x1742)))
 (let (($x1766 (= c____________ left-to-center)))
 (let (($x1767 (and $x1766 $x1763)))
 (ite $x1767 $x1771 $x1796)))))))))))))))))))))))))))))))
(assert
 (let ((?x1605 (center s____________)))
 (let ((?x1743 (center s_____________)))
 (let (($x1781 (= ?x1743 ?x1605)))
 (let ((?x1419 (right s____________)))
 (let ((?x1750 (top ?x1419)))
 (let ((?x1752 (stack ?x1750 ?x1605)))
 (let (($x1778 (= ?x1743 ?x1752)))
 (let (($x1753 ((_ is stack ) ?x1419)))
 (let (($x1754 (= c____________ right-to-center)))
 (let (($x1755 (and $x1754 $x1753)))
 (let (($x1756 (= c____________ right-to-left)))
 (let (($x1757 (and $x1756 $x1753)))
 (let ((?x1745 (rest ?x1605)))
 (let (($x1773 (= ?x1743 ?x1745)))
 (let (($x1758 ((_ is stack ) ?x1605)))
 (let (($x1759 (= c____________ center-to-right)))
 (let (($x1760 (and $x1759 $x1758)))
 (let (($x1761 (= c____________ center-to-left)))
 (let (($x1762 (and $x1761 $x1758)))
 (let ((?x1385 (left s____________)))
 (let ((?x1603 (top ?x1385)))
 (let ((?x1744 (stack ?x1603 ?x1605)))
 (let (($x1772 (= ?x1743 ?x1744)))
 (let (($x1763 ((_ is stack ) ?x1385)))
 (let (($x1764 (= c____________ left-to-right)))
 (let (($x1765 (and $x1764 $x1763)))
 (let (($x1795 (ite $x1765 $x1772 (ite $x1762 $x1773 (ite $x1760 $x1773 (ite $x1757 $x1781 (ite $x1755 $x1778 $x1781)))))))
 (let (($x1766 (= c____________ left-to-center)))
 (let (($x1767 (and $x1766 $x1763)))
 (ite $x1767 $x1781 $x1795)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1523 (left s_____________)))
 (let ((?x1661 (left s______________)))
 (let (($x1921 (= ?x1661 ?x1523)))
 (let ((?x1557 (right s_____________)))
 (let ((?x1888 (top ?x1557)))
 (let ((?x1889 (stack ?x1888 ?x1523)))
 (let (($x1915 (= ?x1661 ?x1889)))
 (let (($x1891 ((_ is stack ) ?x1557)))
 (let (($x1894 (= c_____________ right-to-left)))
 (let (($x1895 (and $x1894 $x1891)))
 (let ((?x1743 (center s_____________)))
 (let (($x1896 ((_ is stack ) ?x1743)))
 (let (($x1897 (= c_____________ center-to-right)))
 (let (($x1898 (and $x1897 $x1896)))
 (let ((?x1884 (top ?x1743)))
 (let ((?x1885 (stack ?x1884 ?x1523)))
 (let (($x1912 (= ?x1661 ?x1885)))
 (let (($x1899 (= c_____________ center-to-left)))
 (let (($x1900 (and $x1899 $x1896)))
 (let ((?x1694 (rest ?x1523)))
 (let (($x1908 (= ?x1661 ?x1694)))
 (let (($x1901 ((_ is stack ) ?x1523)))
 (let (($x1902 (= c_____________ left-to-right)))
 (let (($x1903 (and $x1902 $x1901)))
 (let (($x1904 (= c_____________ left-to-center)))
 (let (($x1905 (and $x1904 $x1901)))
 (ite $x1905 $x1908 (ite $x1903 $x1908 (ite $x1900 $x1912 (ite $x1898 $x1921 (ite $x1895 $x1915 $x1921))))))))))))))))))))))))))))))))
(assert
 (let ((?x1557 (right s_____________)))
 (let ((?x1695 (right s______________)))
 (let (($x1917 (= ?x1695 ?x1557)))
 (let ((?x1887 (rest ?x1557)))
 (let (($x1914 (= ?x1695 ?x1887)))
 (let (($x1891 ((_ is stack ) ?x1557)))
 (let (($x1892 (= c_____________ right-to-center)))
 (let (($x1893 (and $x1892 $x1891)))
 (let (($x1894 (= c_____________ right-to-left)))
 (let (($x1895 (and $x1894 $x1891)))
 (let ((?x1743 (center s_____________)))
 (let ((?x1884 (top ?x1743)))
 (let ((?x1886 (stack ?x1884 ?x1557)))
 (let (($x1913 (= ?x1695 ?x1886)))
 (let (($x1896 ((_ is stack ) ?x1743)))
 (let (($x1897 (= c_____________ center-to-right)))
 (let (($x1898 (and $x1897 $x1896)))
 (let (($x1899 (= c_____________ center-to-left)))
 (let (($x1900 (and $x1899 $x1896)))
 (let ((?x1523 (left s_____________)))
 (let (($x1901 ((_ is stack ) ?x1523)))
 (let (($x1902 (= c_____________ left-to-right)))
 (let (($x1903 (and $x1902 $x1901)))
 (let (($x1934 (ite $x1903 $x1917 (ite $x1900 $x1917 (ite $x1898 $x1913 (ite $x1895 $x1914 (ite $x1893 $x1914 $x1917)))))))
 (let ((?x1741 (top ?x1523)))
 (let ((?x1880 (stack ?x1741 ?x1557)))
 (let (($x1909 (= ?x1695 ?x1880)))
 (let (($x1904 (= c_____________ left-to-center)))
 (let (($x1905 (and $x1904 $x1901)))
 (ite $x1905 $x1909 $x1934)))))))))))))))))))))))))))))))
(assert
 (let ((?x1743 (center s_____________)))
 (let ((?x1881 (center s______________)))
 (let (($x1919 (= ?x1881 ?x1743)))
 (let ((?x1557 (right s_____________)))
 (let ((?x1888 (top ?x1557)))
 (let ((?x1890 (stack ?x1888 ?x1743)))
 (let (($x1916 (= ?x1881 ?x1890)))
 (let (($x1891 ((_ is stack ) ?x1557)))
 (let (($x1892 (= c_____________ right-to-center)))
 (let (($x1893 (and $x1892 $x1891)))
 (let (($x1894 (= c_____________ right-to-left)))
 (let (($x1895 (and $x1894 $x1891)))
 (let ((?x1883 (rest ?x1743)))
 (let (($x1911 (= ?x1881 ?x1883)))
 (let (($x1896 ((_ is stack ) ?x1743)))
 (let (($x1897 (= c_____________ center-to-right)))
 (let (($x1898 (and $x1897 $x1896)))
 (let (($x1899 (= c_____________ center-to-left)))
 (let (($x1900 (and $x1899 $x1896)))
 (let ((?x1523 (left s_____________)))
 (let ((?x1741 (top ?x1523)))
 (let ((?x1882 (stack ?x1741 ?x1743)))
 (let (($x1910 (= ?x1881 ?x1882)))
 (let (($x1901 ((_ is stack ) ?x1523)))
 (let (($x1902 (= c_____________ left-to-right)))
 (let (($x1903 (and $x1902 $x1901)))
 (let (($x1933 (ite $x1903 $x1910 (ite $x1900 $x1911 (ite $x1898 $x1911 (ite $x1895 $x1919 (ite $x1893 $x1916 $x1919)))))))
 (let (($x1904 (= c_____________ left-to-center)))
 (let (($x1905 (and $x1904 $x1901)))
 (ite $x1905 $x1919 $x1933)))))))))))))))))))))))))))))))
(assert
 (let ((?x52 (stack I (stack B empty))))
 (let ((?x1695 (right s______________)))
 (let (($x1937 (= ?x1695 ?x52)))
 (let ((?x1881 (center s______________)))
 (let (($x1968 (= ?x1881 empty)))
 (let ((?x44 (stack G (stack E (stack A (stack K (stack F (stack L empty))))))))
 (let ((?x50 (stack D (stack C (stack J (stack H (stack N (stack M ?x44))))))))
 (let ((?x1661 (left s______________)))
 (let (($x1969 (= ?x1661 ?x50)))
 (let (($x1971 (not (and $x1969 $x1968 $x1937))))
 (not $x1971))))))))))))
(check-sat)
(exit)
