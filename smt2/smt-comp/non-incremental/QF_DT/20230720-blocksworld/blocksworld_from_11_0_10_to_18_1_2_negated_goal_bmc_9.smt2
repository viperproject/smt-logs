(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T) (U))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x33 (stack I empty)))
 (let ((?x34 (stack L ?x33)))
 (let ((?x35 (stack O ?x34)))
 (let ((?x36 (stack A ?x35)))
 (let ((?x37 (stack F ?x36)))
 (let ((?x38 (stack C ?x37)))
 (let ((?x39 (stack T ?x38)))
 (let ((?x40 (stack G ?x39)))
 (let ((?x41 (stack S ?x40)))
 (let ((?x42 (stack B ?x41)))
 (let ((?x43 (stack E ?x42)))
 (let ((?x121 (left s_tmp_)))
 (= ?x121 ?x43))))))))))))))
(assert
 (let ((?x124 (center s_tmp__)))
 (= ?x124 empty)))
(assert
 (let ((?x44 (stack D empty)))
 (let ((?x45 (stack H ?x44)))
 (let ((?x46 (stack J ?x45)))
 (let ((?x47 (stack K ?x46)))
 (let ((?x48 (stack M ?x47)))
 (let ((?x49 (stack N ?x48)))
 (let ((?x50 (stack P ?x49)))
 (let ((?x51 (stack Q ?x50)))
 (let ((?x52 (stack R ?x51)))
 (let ((?x53 (stack U ?x52)))
 (let ((?x127 (right s_tmp___)))
 (= ?x127 ?x53)))))))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x154 (left s_tmp__)))
 (= (left s_tmp___) ?x154)))
(assert
 (let ((?x124 (center s_tmp__)))
 (= (center s_tmp___) ?x124)))
(assert
 (let ((?x158 (center s_tmp_)))
 (= ?x158 (center s_tmp))))
(assert
 (let ((?x161 (right s_tmp_)))
 (= ?x161 (right s_tmp))))
(assert
 (let ((?x121 (left s_tmp_)))
 (let ((?x154 (left s_tmp__)))
 (= ?x154 ?x121))))
(assert
 (let ((?x161 (right s_tmp_)))
 (let ((?x165 (right s_tmp__)))
 (= ?x165 ?x161))))
(assert
 (= c__ c!1))
(assert
 (let ((?x98 (left s_)))
 (let ((?x278 (left s__)))
 (let (($x317 (= ?x278 ?x98)))
 (let ((?x101 (right s_)))
 (let (($x308 ((_ is stack ) ?x101)))
 (let (($x302 (= c_ right-to-left)))
 (let (($x291 (and $x302 $x308)))
 (let ((?x103 (center s_)))
 (let (($x292 ((_ is stack ) ?x103)))
 (let (($x285 (and (= c_ center-to-right) $x292)))
 (let (($x287 (and (= c_ center-to-left) $x292)))
 (let (($x326 (ite $x287 (= ?x278 (stack (top ?x103) ?x98)) (ite $x285 $x317 (ite $x291 (= ?x278 (stack (top ?x101) ?x98)) $x317)))))
 (let (($x271 (= ?x278 (rest ?x98))))
 (let (($x288 ((_ is stack ) ?x98)))
 (let (($x289 (= c_ left-to-right)))
 (let (($x290 (and $x289 $x288)))
 (let (($x303 (= c_ left-to-center)))
 (let (($x304 (and $x303 $x288)))
 (ite $x304 $x271 (ite $x290 $x271 $x326)))))))))))))))))))))
(assert
 (let ((?x101 (right s_)))
 (let ((?x298 (right s__)))
 (let (($x313 (= ?x298 ?x101)))
 (let (($x310 (= ?x298 (rest ?x101))))
 (let (($x308 ((_ is stack ) ?x101)))
 (let (($x300 (= c_ right-to-center)))
 (let (($x301 (and $x300 $x308)))
 (let (($x302 (= c_ right-to-left)))
 (let (($x291 (and $x302 $x308)))
 (let ((?x103 (center s_)))
 (let (($x292 ((_ is stack ) ?x103)))
 (let (($x285 (and (= c_ center-to-right) $x292)))
 (let (($x323 (ite $x285 (= ?x298 (stack (top ?x103) ?x101)) (ite $x291 $x310 (ite $x301 $x310 $x313)))))
 (let (($x287 (and (= c_ center-to-left) $x292)))
 (let ((?x98 (left s_)))
 (let (($x288 ((_ is stack ) ?x98)))
 (let (($x289 (= c_ left-to-right)))
 (let (($x290 (and $x289 $x288)))
 (let (($x303 (= c_ left-to-center)))
 (let (($x304 (and $x303 $x288)))
 (ite $x304 (= ?x298 (stack (top ?x98) ?x101)) (ite $x290 $x313 (ite $x287 $x313 $x323))))))))))))))))))))))))
(assert
 (let ((?x103 (center s_)))
 (let ((?x283 (center s__)))
 (let (($x315 (= ?x283 ?x103)))
 (let ((?x101 (right s_)))
 (let (($x308 ((_ is stack ) ?x101)))
 (let (($x300 (= c_ right-to-center)))
 (let (($x301 (and $x300 $x308)))
 (let (($x302 (= c_ right-to-left)))
 (let (($x291 (and $x302 $x308)))
 (let (($x280 (= ?x283 (rest ?x103))))
 (let (($x292 ((_ is stack ) ?x103)))
 (let (($x285 (and (= c_ center-to-right) $x292)))
 (let (($x322 (ite $x285 $x280 (ite $x291 $x315 (ite $x301 (= ?x283 (stack (top ?x101) ?x103)) $x315)))))
 (let (($x287 (and (= c_ center-to-left) $x292)))
 (let ((?x98 (left s_)))
 (let (($x288 ((_ is stack ) ?x98)))
 (let (($x289 (= c_ left-to-right)))
 (let (($x290 (and $x289 $x288)))
 (let (($x303 (= c_ left-to-center)))
 (let (($x304 (and $x303 $x288)))
 (ite $x304 $x315 (ite $x290 (= ?x283 (stack (top ?x98) ?x103)) (ite $x287 $x280 $x322))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x278 (left s__)))
 (let ((?x168 (left s___)))
 (let (($x429 (= ?x168 ?x278)))
 (let ((?x298 (right s__)))
 (let ((?x396 (top ?x298)))
 (let ((?x397 (stack ?x396 ?x278)))
 (let (($x423 (= ?x168 ?x397)))
 (let (($x399 ((_ is stack ) ?x298)))
 (let (($x402 (= c__ right-to-left)))
 (let (($x403 (and $x402 $x399)))
 (let ((?x283 (center s__)))
 (let (($x404 ((_ is stack ) ?x283)))
 (let (($x405 (= c__ center-to-right)))
 (let (($x406 (and $x405 $x404)))
 (let ((?x392 (top ?x283)))
 (let ((?x393 (stack ?x392 ?x278)))
 (let (($x420 (= ?x168 ?x393)))
 (let (($x407 (= c__ center-to-left)))
 (let (($x408 (and $x407 $x404)))
 (let ((?x170 (rest ?x278)))
 (let (($x416 (= ?x168 ?x170)))
 (let (($x409 ((_ is stack ) ?x278)))
 (let (($x410 (= c__ left-to-right)))
 (let (($x411 (and $x410 $x409)))
 (let (($x412 (= c__ left-to-center)))
 (let (($x413 (and $x412 $x409)))
 (ite $x413 $x416 (ite $x411 $x416 (ite $x408 $x420 (ite $x406 $x429 (ite $x403 $x423 $x429))))))))))))))))))))))))))))))))
(assert
 (let ((?x298 (right s__)))
 (let ((?x171 (right s___)))
 (let (($x425 (= ?x171 ?x298)))
 (let ((?x395 (rest ?x298)))
 (let (($x422 (= ?x171 ?x395)))
 (let (($x399 ((_ is stack ) ?x298)))
 (let (($x400 (= c__ right-to-center)))
 (let (($x401 (and $x400 $x399)))
 (let (($x402 (= c__ right-to-left)))
 (let (($x403 (and $x402 $x399)))
 (let ((?x283 (center s__)))
 (let ((?x392 (top ?x283)))
 (let ((?x394 (stack ?x392 ?x298)))
 (let (($x421 (= ?x171 ?x394)))
 (let (($x404 ((_ is stack ) ?x283)))
 (let (($x405 (= c__ center-to-right)))
 (let (($x406 (and $x405 $x404)))
 (let (($x407 (= c__ center-to-left)))
 (let (($x408 (and $x407 $x404)))
 (let ((?x278 (left s__)))
 (let (($x409 ((_ is stack ) ?x278)))
 (let (($x410 (= c__ left-to-right)))
 (let (($x411 (and $x410 $x409)))
 (let (($x442 (ite $x411 $x425 (ite $x408 $x425 (ite $x406 $x421 (ite $x403 $x422 (ite $x401 $x422 $x425)))))))
 (let ((?x269 (top ?x278)))
 (let ((?x388 (stack ?x269 ?x298)))
 (let (($x417 (= ?x171 ?x388)))
 (let (($x412 (= c__ left-to-center)))
 (let (($x413 (and $x412 $x409)))
 (ite $x413 $x417 $x442)))))))))))))))))))))))))))))))
(assert
 (let ((?x283 (center s__)))
 (let ((?x389 (center s___)))
 (let (($x427 (= ?x389 ?x283)))
 (let ((?x298 (right s__)))
 (let ((?x396 (top ?x298)))
 (let ((?x398 (stack ?x396 ?x283)))
 (let (($x424 (= ?x389 ?x398)))
 (let (($x399 ((_ is stack ) ?x298)))
 (let (($x400 (= c__ right-to-center)))
 (let (($x401 (and $x400 $x399)))
 (let (($x402 (= c__ right-to-left)))
 (let (($x403 (and $x402 $x399)))
 (let ((?x391 (rest ?x283)))
 (let (($x419 (= ?x389 ?x391)))
 (let (($x404 ((_ is stack ) ?x283)))
 (let (($x405 (= c__ center-to-right)))
 (let (($x406 (and $x405 $x404)))
 (let (($x407 (= c__ center-to-left)))
 (let (($x408 (and $x407 $x404)))
 (let ((?x278 (left s__)))
 (let ((?x269 (top ?x278)))
 (let ((?x390 (stack ?x269 ?x283)))
 (let (($x418 (= ?x389 ?x390)))
 (let (($x409 ((_ is stack ) ?x278)))
 (let (($x410 (= c__ left-to-right)))
 (let (($x411 (and $x410 $x409)))
 (let (($x441 (ite $x411 $x418 (ite $x408 $x419 (ite $x406 $x419 (ite $x403 $x427 (ite $x401 $x424 $x427)))))))
 (let (($x412 (= c__ left-to-center)))
 (let (($x413 (and $x412 $x409)))
 (ite $x413 $x427 $x441)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x168 (left s___)))
 (let ((?x333 (left s____)))
 (let (($x567 (= ?x333 ?x168)))
 (let ((?x171 (right s___)))
 (let ((?x534 (top ?x171)))
 (let ((?x535 (stack ?x534 ?x168)))
 (let (($x561 (= ?x333 ?x535)))
 (let (($x537 ((_ is stack ) ?x171)))
 (let (($x540 (= c___ right-to-left)))
 (let (($x541 (and $x540 $x537)))
 (let ((?x389 (center s___)))
 (let (($x542 ((_ is stack ) ?x389)))
 (let (($x543 (= c___ center-to-right)))
 (let (($x544 (and $x543 $x542)))
 (let ((?x530 (top ?x389)))
 (let ((?x531 (stack ?x530 ?x168)))
 (let (($x558 (= ?x333 ?x531)))
 (let (($x545 (= c___ center-to-left)))
 (let (($x546 (and $x545 $x542)))
 (let ((?x365 (rest ?x168)))
 (let (($x554 (= ?x333 ?x365)))
 (let (($x547 ((_ is stack ) ?x168)))
 (let (($x548 (= c___ left-to-right)))
 (let (($x549 (and $x548 $x547)))
 (let (($x550 (= c___ left-to-center)))
 (let (($x551 (and $x550 $x547)))
 (ite $x551 $x554 (ite $x549 $x554 (ite $x546 $x558 (ite $x544 $x567 (ite $x541 $x561 $x567))))))))))))))))))))))))))))))))
(assert
 (let ((?x171 (right s___)))
 (let ((?x366 (right s____)))
 (let (($x563 (= ?x366 ?x171)))
 (let ((?x533 (rest ?x171)))
 (let (($x560 (= ?x366 ?x533)))
 (let (($x537 ((_ is stack ) ?x171)))
 (let (($x538 (= c___ right-to-center)))
 (let (($x539 (and $x538 $x537)))
 (let (($x540 (= c___ right-to-left)))
 (let (($x541 (and $x540 $x537)))
 (let ((?x389 (center s___)))
 (let ((?x530 (top ?x389)))
 (let ((?x532 (stack ?x530 ?x171)))
 (let (($x559 (= ?x366 ?x532)))
 (let (($x542 ((_ is stack ) ?x389)))
 (let (($x543 (= c___ center-to-right)))
 (let (($x544 (and $x543 $x542)))
 (let (($x545 (= c___ center-to-left)))
 (let (($x546 (and $x545 $x542)))
 (let ((?x168 (left s___)))
 (let (($x547 ((_ is stack ) ?x168)))
 (let (($x548 (= c___ left-to-right)))
 (let (($x549 (and $x548 $x547)))
 (let (($x580 (ite $x549 $x563 (ite $x546 $x563 (ite $x544 $x559 (ite $x541 $x560 (ite $x539 $x560 $x563)))))))
 (let ((?x387 (top ?x168)))
 (let ((?x526 (stack ?x387 ?x171)))
 (let (($x555 (= ?x366 ?x526)))
 (let (($x550 (= c___ left-to-center)))
 (let (($x551 (and $x550 $x547)))
 (ite $x551 $x555 $x580)))))))))))))))))))))))))))))))
(assert
 (let ((?x389 (center s___)))
 (let ((?x527 (center s____)))
 (let (($x565 (= ?x527 ?x389)))
 (let ((?x171 (right s___)))
 (let ((?x534 (top ?x171)))
 (let ((?x536 (stack ?x534 ?x389)))
 (let (($x562 (= ?x527 ?x536)))
 (let (($x537 ((_ is stack ) ?x171)))
 (let (($x538 (= c___ right-to-center)))
 (let (($x539 (and $x538 $x537)))
 (let (($x540 (= c___ right-to-left)))
 (let (($x541 (and $x540 $x537)))
 (let ((?x529 (rest ?x389)))
 (let (($x557 (= ?x527 ?x529)))
 (let (($x542 ((_ is stack ) ?x389)))
 (let (($x543 (= c___ center-to-right)))
 (let (($x544 (and $x543 $x542)))
 (let (($x545 (= c___ center-to-left)))
 (let (($x546 (and $x545 $x542)))
 (let ((?x168 (left s___)))
 (let ((?x387 (top ?x168)))
 (let ((?x528 (stack ?x387 ?x389)))
 (let (($x556 (= ?x527 ?x528)))
 (let (($x547 ((_ is stack ) ?x168)))
 (let (($x548 (= c___ left-to-right)))
 (let (($x549 (and $x548 $x547)))
 (let (($x579 (ite $x549 $x556 (ite $x546 $x557 (ite $x544 $x557 (ite $x541 $x565 (ite $x539 $x562 $x565)))))))
 (let (($x550 (= c___ left-to-center)))
 (let (($x551 (and $x550 $x547)))
 (ite $x551 $x565 $x579)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x333 (left s____)))
 (let ((?x445 (left s_____)))
 (let (($x705 (= ?x445 ?x333)))
 (let ((?x366 (right s____)))
 (let ((?x672 (top ?x366)))
 (let ((?x673 (stack ?x672 ?x333)))
 (let (($x699 (= ?x445 ?x673)))
 (let (($x675 ((_ is stack ) ?x366)))
 (let (($x678 (= c____ right-to-left)))
 (let (($x679 (and $x678 $x675)))
 (let ((?x527 (center s____)))
 (let (($x680 ((_ is stack ) ?x527)))
 (let (($x681 (= c____ center-to-right)))
 (let (($x682 (and $x681 $x680)))
 (let ((?x668 (top ?x527)))
 (let ((?x669 (stack ?x668 ?x333)))
 (let (($x696 (= ?x445 ?x669)))
 (let (($x683 (= c____ center-to-left)))
 (let (($x684 (and $x683 $x680)))
 (let ((?x478 (rest ?x333)))
 (let (($x692 (= ?x445 ?x478)))
 (let (($x685 ((_ is stack ) ?x333)))
 (let (($x686 (= c____ left-to-right)))
 (let (($x687 (and $x686 $x685)))
 (let (($x688 (= c____ left-to-center)))
 (let (($x689 (and $x688 $x685)))
 (ite $x689 $x692 (ite $x687 $x692 (ite $x684 $x696 (ite $x682 $x705 (ite $x679 $x699 $x705))))))))))))))))))))))))))))))))
(assert
 (let ((?x366 (right s____)))
 (let ((?x479 (right s_____)))
 (let (($x701 (= ?x479 ?x366)))
 (let ((?x671 (rest ?x366)))
 (let (($x698 (= ?x479 ?x671)))
 (let (($x675 ((_ is stack ) ?x366)))
 (let (($x676 (= c____ right-to-center)))
 (let (($x677 (and $x676 $x675)))
 (let (($x678 (= c____ right-to-left)))
 (let (($x679 (and $x678 $x675)))
 (let ((?x527 (center s____)))
 (let ((?x668 (top ?x527)))
 (let ((?x670 (stack ?x668 ?x366)))
 (let (($x697 (= ?x479 ?x670)))
 (let (($x680 ((_ is stack ) ?x527)))
 (let (($x681 (= c____ center-to-right)))
 (let (($x682 (and $x681 $x680)))
 (let (($x683 (= c____ center-to-left)))
 (let (($x684 (and $x683 $x680)))
 (let ((?x333 (left s____)))
 (let (($x685 ((_ is stack ) ?x333)))
 (let (($x686 (= c____ left-to-right)))
 (let (($x687 (and $x686 $x685)))
 (let (($x718 (ite $x687 $x701 (ite $x684 $x701 (ite $x682 $x697 (ite $x679 $x698 (ite $x677 $x698 $x701)))))))
 (let ((?x525 (top ?x333)))
 (let ((?x664 (stack ?x525 ?x366)))
 (let (($x693 (= ?x479 ?x664)))
 (let (($x688 (= c____ left-to-center)))
 (let (($x689 (and $x688 $x685)))
 (ite $x689 $x693 $x718)))))))))))))))))))))))))))))))
(assert
 (let ((?x527 (center s____)))
 (let ((?x665 (center s_____)))
 (let (($x703 (= ?x665 ?x527)))
 (let ((?x366 (right s____)))
 (let ((?x672 (top ?x366)))
 (let ((?x674 (stack ?x672 ?x527)))
 (let (($x700 (= ?x665 ?x674)))
 (let (($x675 ((_ is stack ) ?x366)))
 (let (($x676 (= c____ right-to-center)))
 (let (($x677 (and $x676 $x675)))
 (let (($x678 (= c____ right-to-left)))
 (let (($x679 (and $x678 $x675)))
 (let ((?x667 (rest ?x527)))
 (let (($x695 (= ?x665 ?x667)))
 (let (($x680 ((_ is stack ) ?x527)))
 (let (($x681 (= c____ center-to-right)))
 (let (($x682 (and $x681 $x680)))
 (let (($x683 (= c____ center-to-left)))
 (let (($x684 (and $x683 $x680)))
 (let ((?x333 (left s____)))
 (let ((?x525 (top ?x333)))
 (let ((?x666 (stack ?x525 ?x527)))
 (let (($x694 (= ?x665 ?x666)))
 (let (($x685 ((_ is stack ) ?x333)))
 (let (($x686 (= c____ left-to-right)))
 (let (($x687 (and $x686 $x685)))
 (let (($x717 (ite $x687 $x694 (ite $x684 $x695 (ite $x682 $x695 (ite $x679 $x703 (ite $x677 $x700 $x703)))))))
 (let (($x688 (= c____ left-to-center)))
 (let (($x689 (and $x688 $x685)))
 (ite $x689 $x703 $x717)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x445 (left s_____)))
 (let ((?x583 (left s______)))
 (let (($x843 (= ?x583 ?x445)))
 (let ((?x479 (right s_____)))
 (let ((?x810 (top ?x479)))
 (let ((?x811 (stack ?x810 ?x445)))
 (let (($x837 (= ?x583 ?x811)))
 (let (($x813 ((_ is stack ) ?x479)))
 (let (($x816 (= c_____ right-to-left)))
 (let (($x817 (and $x816 $x813)))
 (let ((?x665 (center s_____)))
 (let (($x818 ((_ is stack ) ?x665)))
 (let (($x819 (= c_____ center-to-right)))
 (let (($x820 (and $x819 $x818)))
 (let ((?x806 (top ?x665)))
 (let ((?x807 (stack ?x806 ?x445)))
 (let (($x834 (= ?x583 ?x807)))
 (let (($x821 (= c_____ center-to-left)))
 (let (($x822 (and $x821 $x818)))
 (let ((?x616 (rest ?x445)))
 (let (($x830 (= ?x583 ?x616)))
 (let (($x823 ((_ is stack ) ?x445)))
 (let (($x824 (= c_____ left-to-right)))
 (let (($x825 (and $x824 $x823)))
 (let (($x826 (= c_____ left-to-center)))
 (let (($x827 (and $x826 $x823)))
 (ite $x827 $x830 (ite $x825 $x830 (ite $x822 $x834 (ite $x820 $x843 (ite $x817 $x837 $x843))))))))))))))))))))))))))))))))
(assert
 (let ((?x479 (right s_____)))
 (let ((?x617 (right s______)))
 (let (($x839 (= ?x617 ?x479)))
 (let ((?x809 (rest ?x479)))
 (let (($x836 (= ?x617 ?x809)))
 (let (($x813 ((_ is stack ) ?x479)))
 (let (($x814 (= c_____ right-to-center)))
 (let (($x815 (and $x814 $x813)))
 (let (($x816 (= c_____ right-to-left)))
 (let (($x817 (and $x816 $x813)))
 (let ((?x665 (center s_____)))
 (let ((?x806 (top ?x665)))
 (let ((?x808 (stack ?x806 ?x479)))
 (let (($x835 (= ?x617 ?x808)))
 (let (($x818 ((_ is stack ) ?x665)))
 (let (($x819 (= c_____ center-to-right)))
 (let (($x820 (and $x819 $x818)))
 (let (($x821 (= c_____ center-to-left)))
 (let (($x822 (and $x821 $x818)))
 (let ((?x445 (left s_____)))
 (let (($x823 ((_ is stack ) ?x445)))
 (let (($x824 (= c_____ left-to-right)))
 (let (($x825 (and $x824 $x823)))
 (let (($x856 (ite $x825 $x839 (ite $x822 $x839 (ite $x820 $x835 (ite $x817 $x836 (ite $x815 $x836 $x839)))))))
 (let ((?x663 (top ?x445)))
 (let ((?x802 (stack ?x663 ?x479)))
 (let (($x831 (= ?x617 ?x802)))
 (let (($x826 (= c_____ left-to-center)))
 (let (($x827 (and $x826 $x823)))
 (ite $x827 $x831 $x856)))))))))))))))))))))))))))))))
(assert
 (let ((?x665 (center s_____)))
 (let ((?x803 (center s______)))
 (let (($x841 (= ?x803 ?x665)))
 (let ((?x479 (right s_____)))
 (let ((?x810 (top ?x479)))
 (let ((?x812 (stack ?x810 ?x665)))
 (let (($x838 (= ?x803 ?x812)))
 (let (($x813 ((_ is stack ) ?x479)))
 (let (($x814 (= c_____ right-to-center)))
 (let (($x815 (and $x814 $x813)))
 (let (($x816 (= c_____ right-to-left)))
 (let (($x817 (and $x816 $x813)))
 (let ((?x805 (rest ?x665)))
 (let (($x833 (= ?x803 ?x805)))
 (let (($x818 ((_ is stack ) ?x665)))
 (let (($x819 (= c_____ center-to-right)))
 (let (($x820 (and $x819 $x818)))
 (let (($x821 (= c_____ center-to-left)))
 (let (($x822 (and $x821 $x818)))
 (let ((?x445 (left s_____)))
 (let ((?x663 (top ?x445)))
 (let ((?x804 (stack ?x663 ?x665)))
 (let (($x832 (= ?x803 ?x804)))
 (let (($x823 ((_ is stack ) ?x445)))
 (let (($x824 (= c_____ left-to-right)))
 (let (($x825 (and $x824 $x823)))
 (let (($x855 (ite $x825 $x832 (ite $x822 $x833 (ite $x820 $x833 (ite $x817 $x841 (ite $x815 $x838 $x841)))))))
 (let (($x826 (= c_____ left-to-center)))
 (let (($x827 (and $x826 $x823)))
 (ite $x827 $x841 $x855)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x583 (left s______)))
 (let ((?x721 (left s_______)))
 (let (($x981 (= ?x721 ?x583)))
 (let ((?x617 (right s______)))
 (let ((?x948 (top ?x617)))
 (let ((?x949 (stack ?x948 ?x583)))
 (let (($x975 (= ?x721 ?x949)))
 (let (($x951 ((_ is stack ) ?x617)))
 (let (($x954 (= c______ right-to-left)))
 (let (($x955 (and $x954 $x951)))
 (let ((?x803 (center s______)))
 (let (($x956 ((_ is stack ) ?x803)))
 (let (($x957 (= c______ center-to-right)))
 (let (($x958 (and $x957 $x956)))
 (let ((?x944 (top ?x803)))
 (let ((?x945 (stack ?x944 ?x583)))
 (let (($x972 (= ?x721 ?x945)))
 (let (($x959 (= c______ center-to-left)))
 (let (($x960 (and $x959 $x956)))
 (let ((?x754 (rest ?x583)))
 (let (($x968 (= ?x721 ?x754)))
 (let (($x961 ((_ is stack ) ?x583)))
 (let (($x962 (= c______ left-to-right)))
 (let (($x963 (and $x962 $x961)))
 (let (($x964 (= c______ left-to-center)))
 (let (($x965 (and $x964 $x961)))
 (ite $x965 $x968 (ite $x963 $x968 (ite $x960 $x972 (ite $x958 $x981 (ite $x955 $x975 $x981))))))))))))))))))))))))))))))))
(assert
 (let ((?x617 (right s______)))
 (let ((?x755 (right s_______)))
 (let (($x977 (= ?x755 ?x617)))
 (let ((?x947 (rest ?x617)))
 (let (($x974 (= ?x755 ?x947)))
 (let (($x951 ((_ is stack ) ?x617)))
 (let (($x952 (= c______ right-to-center)))
 (let (($x953 (and $x952 $x951)))
 (let (($x954 (= c______ right-to-left)))
 (let (($x955 (and $x954 $x951)))
 (let ((?x803 (center s______)))
 (let ((?x944 (top ?x803)))
 (let ((?x946 (stack ?x944 ?x617)))
 (let (($x973 (= ?x755 ?x946)))
 (let (($x956 ((_ is stack ) ?x803)))
 (let (($x957 (= c______ center-to-right)))
 (let (($x958 (and $x957 $x956)))
 (let (($x959 (= c______ center-to-left)))
 (let (($x960 (and $x959 $x956)))
 (let ((?x583 (left s______)))
 (let (($x961 ((_ is stack ) ?x583)))
 (let (($x962 (= c______ left-to-right)))
 (let (($x963 (and $x962 $x961)))
 (let (($x994 (ite $x963 $x977 (ite $x960 $x977 (ite $x958 $x973 (ite $x955 $x974 (ite $x953 $x974 $x977)))))))
 (let ((?x801 (top ?x583)))
 (let ((?x940 (stack ?x801 ?x617)))
 (let (($x969 (= ?x755 ?x940)))
 (let (($x964 (= c______ left-to-center)))
 (let (($x965 (and $x964 $x961)))
 (ite $x965 $x969 $x994)))))))))))))))))))))))))))))))
(assert
 (let ((?x803 (center s______)))
 (let ((?x941 (center s_______)))
 (let (($x979 (= ?x941 ?x803)))
 (let ((?x617 (right s______)))
 (let ((?x948 (top ?x617)))
 (let ((?x950 (stack ?x948 ?x803)))
 (let (($x976 (= ?x941 ?x950)))
 (let (($x951 ((_ is stack ) ?x617)))
 (let (($x952 (= c______ right-to-center)))
 (let (($x953 (and $x952 $x951)))
 (let (($x954 (= c______ right-to-left)))
 (let (($x955 (and $x954 $x951)))
 (let ((?x943 (rest ?x803)))
 (let (($x971 (= ?x941 ?x943)))
 (let (($x956 ((_ is stack ) ?x803)))
 (let (($x957 (= c______ center-to-right)))
 (let (($x958 (and $x957 $x956)))
 (let (($x959 (= c______ center-to-left)))
 (let (($x960 (and $x959 $x956)))
 (let ((?x583 (left s______)))
 (let ((?x801 (top ?x583)))
 (let ((?x942 (stack ?x801 ?x803)))
 (let (($x970 (= ?x941 ?x942)))
 (let (($x961 ((_ is stack ) ?x583)))
 (let (($x962 (= c______ left-to-right)))
 (let (($x963 (and $x962 $x961)))
 (let (($x993 (ite $x963 $x970 (ite $x960 $x971 (ite $x958 $x971 (ite $x955 $x979 (ite $x953 $x976 $x979)))))))
 (let (($x964 (= c______ left-to-center)))
 (let (($x965 (and $x964 $x961)))
 (ite $x965 $x979 $x993)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x721 (left s_______)))
 (let ((?x859 (left s________)))
 (let (($x1119 (= ?x859 ?x721)))
 (let ((?x755 (right s_______)))
 (let ((?x1086 (top ?x755)))
 (let ((?x1087 (stack ?x1086 ?x721)))
 (let (($x1113 (= ?x859 ?x1087)))
 (let (($x1089 ((_ is stack ) ?x755)))
 (let (($x1092 (= c_______ right-to-left)))
 (let (($x1093 (and $x1092 $x1089)))
 (let ((?x941 (center s_______)))
 (let (($x1094 ((_ is stack ) ?x941)))
 (let (($x1095 (= c_______ center-to-right)))
 (let (($x1096 (and $x1095 $x1094)))
 (let ((?x1082 (top ?x941)))
 (let ((?x1083 (stack ?x1082 ?x721)))
 (let (($x1110 (= ?x859 ?x1083)))
 (let (($x1097 (= c_______ center-to-left)))
 (let (($x1098 (and $x1097 $x1094)))
 (let ((?x892 (rest ?x721)))
 (let (($x1106 (= ?x859 ?x892)))
 (let (($x1099 ((_ is stack ) ?x721)))
 (let (($x1100 (= c_______ left-to-right)))
 (let (($x1101 (and $x1100 $x1099)))
 (let (($x1102 (= c_______ left-to-center)))
 (let (($x1103 (and $x1102 $x1099)))
 (ite $x1103 $x1106 (ite $x1101 $x1106 (ite $x1098 $x1110 (ite $x1096 $x1119 (ite $x1093 $x1113 $x1119))))))))))))))))))))))))))))))))
(assert
 (let ((?x755 (right s_______)))
 (let ((?x893 (right s________)))
 (let (($x1115 (= ?x893 ?x755)))
 (let ((?x1085 (rest ?x755)))
 (let (($x1112 (= ?x893 ?x1085)))
 (let (($x1089 ((_ is stack ) ?x755)))
 (let (($x1090 (= c_______ right-to-center)))
 (let (($x1091 (and $x1090 $x1089)))
 (let (($x1092 (= c_______ right-to-left)))
 (let (($x1093 (and $x1092 $x1089)))
 (let ((?x941 (center s_______)))
 (let ((?x1082 (top ?x941)))
 (let ((?x1084 (stack ?x1082 ?x755)))
 (let (($x1111 (= ?x893 ?x1084)))
 (let (($x1094 ((_ is stack ) ?x941)))
 (let (($x1095 (= c_______ center-to-right)))
 (let (($x1096 (and $x1095 $x1094)))
 (let (($x1097 (= c_______ center-to-left)))
 (let (($x1098 (and $x1097 $x1094)))
 (let ((?x721 (left s_______)))
 (let (($x1099 ((_ is stack ) ?x721)))
 (let (($x1100 (= c_______ left-to-right)))
 (let (($x1101 (and $x1100 $x1099)))
 (let (($x1132 (ite $x1101 $x1115 (ite $x1098 $x1115 (ite $x1096 $x1111 (ite $x1093 $x1112 (ite $x1091 $x1112 $x1115)))))))
 (let ((?x939 (top ?x721)))
 (let ((?x1078 (stack ?x939 ?x755)))
 (let (($x1107 (= ?x893 ?x1078)))
 (let (($x1102 (= c_______ left-to-center)))
 (let (($x1103 (and $x1102 $x1099)))
 (ite $x1103 $x1107 $x1132)))))))))))))))))))))))))))))))
(assert
 (let ((?x941 (center s_______)))
 (let ((?x1079 (center s________)))
 (let (($x1117 (= ?x1079 ?x941)))
 (let ((?x755 (right s_______)))
 (let ((?x1086 (top ?x755)))
 (let ((?x1088 (stack ?x1086 ?x941)))
 (let (($x1114 (= ?x1079 ?x1088)))
 (let (($x1089 ((_ is stack ) ?x755)))
 (let (($x1090 (= c_______ right-to-center)))
 (let (($x1091 (and $x1090 $x1089)))
 (let (($x1092 (= c_______ right-to-left)))
 (let (($x1093 (and $x1092 $x1089)))
 (let ((?x1081 (rest ?x941)))
 (let (($x1109 (= ?x1079 ?x1081)))
 (let (($x1094 ((_ is stack ) ?x941)))
 (let (($x1095 (= c_______ center-to-right)))
 (let (($x1096 (and $x1095 $x1094)))
 (let (($x1097 (= c_______ center-to-left)))
 (let (($x1098 (and $x1097 $x1094)))
 (let ((?x721 (left s_______)))
 (let ((?x939 (top ?x721)))
 (let ((?x1080 (stack ?x939 ?x941)))
 (let (($x1108 (= ?x1079 ?x1080)))
 (let (($x1099 ((_ is stack ) ?x721)))
 (let (($x1100 (= c_______ left-to-right)))
 (let (($x1101 (and $x1100 $x1099)))
 (let (($x1131 (ite $x1101 $x1108 (ite $x1098 $x1109 (ite $x1096 $x1109 (ite $x1093 $x1117 (ite $x1091 $x1114 $x1117)))))))
 (let (($x1102 (= c_______ left-to-center)))
 (let (($x1103 (and $x1102 $x1099)))
 (ite $x1103 $x1117 $x1131)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x859 (left s________)))
 (let ((?x997 (left s_________)))
 (let (($x1257 (= ?x997 ?x859)))
 (let ((?x893 (right s________)))
 (let ((?x1224 (top ?x893)))
 (let ((?x1225 (stack ?x1224 ?x859)))
 (let (($x1251 (= ?x997 ?x1225)))
 (let (($x1227 ((_ is stack ) ?x893)))
 (let (($x1230 (= c________ right-to-left)))
 (let (($x1231 (and $x1230 $x1227)))
 (let ((?x1079 (center s________)))
 (let (($x1232 ((_ is stack ) ?x1079)))
 (let (($x1233 (= c________ center-to-right)))
 (let (($x1234 (and $x1233 $x1232)))
 (let ((?x1220 (top ?x1079)))
 (let ((?x1221 (stack ?x1220 ?x859)))
 (let (($x1248 (= ?x997 ?x1221)))
 (let (($x1235 (= c________ center-to-left)))
 (let (($x1236 (and $x1235 $x1232)))
 (let ((?x1030 (rest ?x859)))
 (let (($x1244 (= ?x997 ?x1030)))
 (let (($x1237 ((_ is stack ) ?x859)))
 (let (($x1238 (= c________ left-to-right)))
 (let (($x1239 (and $x1238 $x1237)))
 (let (($x1240 (= c________ left-to-center)))
 (let (($x1241 (and $x1240 $x1237)))
 (ite $x1241 $x1244 (ite $x1239 $x1244 (ite $x1236 $x1248 (ite $x1234 $x1257 (ite $x1231 $x1251 $x1257))))))))))))))))))))))))))))))))
(assert
 (let ((?x893 (right s________)))
 (let ((?x1031 (right s_________)))
 (let (($x1253 (= ?x1031 ?x893)))
 (let ((?x1223 (rest ?x893)))
 (let (($x1250 (= ?x1031 ?x1223)))
 (let (($x1227 ((_ is stack ) ?x893)))
 (let (($x1228 (= c________ right-to-center)))
 (let (($x1229 (and $x1228 $x1227)))
 (let (($x1230 (= c________ right-to-left)))
 (let (($x1231 (and $x1230 $x1227)))
 (let ((?x1079 (center s________)))
 (let ((?x1220 (top ?x1079)))
 (let ((?x1222 (stack ?x1220 ?x893)))
 (let (($x1249 (= ?x1031 ?x1222)))
 (let (($x1232 ((_ is stack ) ?x1079)))
 (let (($x1233 (= c________ center-to-right)))
 (let (($x1234 (and $x1233 $x1232)))
 (let (($x1235 (= c________ center-to-left)))
 (let (($x1236 (and $x1235 $x1232)))
 (let ((?x859 (left s________)))
 (let (($x1237 ((_ is stack ) ?x859)))
 (let (($x1238 (= c________ left-to-right)))
 (let (($x1239 (and $x1238 $x1237)))
 (let (($x1270 (ite $x1239 $x1253 (ite $x1236 $x1253 (ite $x1234 $x1249 (ite $x1231 $x1250 (ite $x1229 $x1250 $x1253)))))))
 (let ((?x1077 (top ?x859)))
 (let ((?x1216 (stack ?x1077 ?x893)))
 (let (($x1245 (= ?x1031 ?x1216)))
 (let (($x1240 (= c________ left-to-center)))
 (let (($x1241 (and $x1240 $x1237)))
 (ite $x1241 $x1245 $x1270)))))))))))))))))))))))))))))))
(assert
 (let ((?x1079 (center s________)))
 (let ((?x1217 (center s_________)))
 (let (($x1255 (= ?x1217 ?x1079)))
 (let ((?x893 (right s________)))
 (let ((?x1224 (top ?x893)))
 (let ((?x1226 (stack ?x1224 ?x1079)))
 (let (($x1252 (= ?x1217 ?x1226)))
 (let (($x1227 ((_ is stack ) ?x893)))
 (let (($x1228 (= c________ right-to-center)))
 (let (($x1229 (and $x1228 $x1227)))
 (let (($x1230 (= c________ right-to-left)))
 (let (($x1231 (and $x1230 $x1227)))
 (let ((?x1219 (rest ?x1079)))
 (let (($x1247 (= ?x1217 ?x1219)))
 (let (($x1232 ((_ is stack ) ?x1079)))
 (let (($x1233 (= c________ center-to-right)))
 (let (($x1234 (and $x1233 $x1232)))
 (let (($x1235 (= c________ center-to-left)))
 (let (($x1236 (and $x1235 $x1232)))
 (let ((?x859 (left s________)))
 (let ((?x1077 (top ?x859)))
 (let ((?x1218 (stack ?x1077 ?x1079)))
 (let (($x1246 (= ?x1217 ?x1218)))
 (let (($x1237 ((_ is stack ) ?x859)))
 (let (($x1238 (= c________ left-to-right)))
 (let (($x1239 (and $x1238 $x1237)))
 (let (($x1269 (ite $x1239 $x1246 (ite $x1236 $x1247 (ite $x1234 $x1247 (ite $x1231 $x1255 (ite $x1229 $x1252 $x1255)))))))
 (let (($x1240 (= c________ left-to-center)))
 (let (($x1241 (and $x1240 $x1237)))
 (ite $x1241 $x1255 $x1269)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x997 (left s_________)))
 (let ((?x1135 (left s__________)))
 (let (($x1395 (= ?x1135 ?x997)))
 (let ((?x1031 (right s_________)))
 (let ((?x1362 (top ?x1031)))
 (let ((?x1363 (stack ?x1362 ?x997)))
 (let (($x1389 (= ?x1135 ?x1363)))
 (let (($x1365 ((_ is stack ) ?x1031)))
 (let (($x1368 (= c_________ right-to-left)))
 (let (($x1369 (and $x1368 $x1365)))
 (let ((?x1217 (center s_________)))
 (let (($x1370 ((_ is stack ) ?x1217)))
 (let (($x1371 (= c_________ center-to-right)))
 (let (($x1372 (and $x1371 $x1370)))
 (let ((?x1358 (top ?x1217)))
 (let ((?x1359 (stack ?x1358 ?x997)))
 (let (($x1386 (= ?x1135 ?x1359)))
 (let (($x1373 (= c_________ center-to-left)))
 (let (($x1374 (and $x1373 $x1370)))
 (let ((?x1168 (rest ?x997)))
 (let (($x1382 (= ?x1135 ?x1168)))
 (let (($x1375 ((_ is stack ) ?x997)))
 (let (($x1376 (= c_________ left-to-right)))
 (let (($x1377 (and $x1376 $x1375)))
 (let (($x1378 (= c_________ left-to-center)))
 (let (($x1379 (and $x1378 $x1375)))
 (ite $x1379 $x1382 (ite $x1377 $x1382 (ite $x1374 $x1386 (ite $x1372 $x1395 (ite $x1369 $x1389 $x1395))))))))))))))))))))))))))))))))
(assert
 (let ((?x1031 (right s_________)))
 (let ((?x1169 (right s__________)))
 (let (($x1391 (= ?x1169 ?x1031)))
 (let ((?x1361 (rest ?x1031)))
 (let (($x1388 (= ?x1169 ?x1361)))
 (let (($x1365 ((_ is stack ) ?x1031)))
 (let (($x1366 (= c_________ right-to-center)))
 (let (($x1367 (and $x1366 $x1365)))
 (let (($x1368 (= c_________ right-to-left)))
 (let (($x1369 (and $x1368 $x1365)))
 (let ((?x1217 (center s_________)))
 (let ((?x1358 (top ?x1217)))
 (let ((?x1360 (stack ?x1358 ?x1031)))
 (let (($x1387 (= ?x1169 ?x1360)))
 (let (($x1370 ((_ is stack ) ?x1217)))
 (let (($x1371 (= c_________ center-to-right)))
 (let (($x1372 (and $x1371 $x1370)))
 (let (($x1373 (= c_________ center-to-left)))
 (let (($x1374 (and $x1373 $x1370)))
 (let ((?x997 (left s_________)))
 (let (($x1375 ((_ is stack ) ?x997)))
 (let (($x1376 (= c_________ left-to-right)))
 (let (($x1377 (and $x1376 $x1375)))
 (let (($x1408 (ite $x1377 $x1391 (ite $x1374 $x1391 (ite $x1372 $x1387 (ite $x1369 $x1388 (ite $x1367 $x1388 $x1391)))))))
 (let ((?x1215 (top ?x997)))
 (let ((?x1354 (stack ?x1215 ?x1031)))
 (let (($x1383 (= ?x1169 ?x1354)))
 (let (($x1378 (= c_________ left-to-center)))
 (let (($x1379 (and $x1378 $x1375)))
 (ite $x1379 $x1383 $x1408)))))))))))))))))))))))))))))))
(assert
 (let ((?x1217 (center s_________)))
 (let ((?x1355 (center s__________)))
 (let (($x1393 (= ?x1355 ?x1217)))
 (let ((?x1031 (right s_________)))
 (let ((?x1362 (top ?x1031)))
 (let ((?x1364 (stack ?x1362 ?x1217)))
 (let (($x1390 (= ?x1355 ?x1364)))
 (let (($x1365 ((_ is stack ) ?x1031)))
 (let (($x1366 (= c_________ right-to-center)))
 (let (($x1367 (and $x1366 $x1365)))
 (let (($x1368 (= c_________ right-to-left)))
 (let (($x1369 (and $x1368 $x1365)))
 (let ((?x1357 (rest ?x1217)))
 (let (($x1385 (= ?x1355 ?x1357)))
 (let (($x1370 ((_ is stack ) ?x1217)))
 (let (($x1371 (= c_________ center-to-right)))
 (let (($x1372 (and $x1371 $x1370)))
 (let (($x1373 (= c_________ center-to-left)))
 (let (($x1374 (and $x1373 $x1370)))
 (let ((?x997 (left s_________)))
 (let ((?x1215 (top ?x997)))
 (let ((?x1356 (stack ?x1215 ?x1217)))
 (let (($x1384 (= ?x1355 ?x1356)))
 (let (($x1375 ((_ is stack ) ?x997)))
 (let (($x1376 (= c_________ left-to-right)))
 (let (($x1377 (and $x1376 $x1375)))
 (let (($x1407 (ite $x1377 $x1384 (ite $x1374 $x1385 (ite $x1372 $x1385 (ite $x1369 $x1393 (ite $x1367 $x1390 $x1393)))))))
 (let (($x1378 (= c_________ left-to-center)))
 (let (($x1379 (and $x1378 $x1375)))
 (ite $x1379 $x1393 $x1407)))))))))))))))))))))))))))))))
(assert
 (let ((?x74 (stack L (stack C empty))))
 (let ((?x1169 (right s__________)))
 (let (($x1411 (= ?x1169 ?x74)))
 (let ((?x72 (stack N empty)))
 (let ((?x1355 (center s__________)))
 (let (($x1442 (= ?x1355 ?x72)))
 (let ((?x59 (stack E (stack F (stack B (stack Q (stack T (stack H empty))))))))
 (let ((?x65 (stack S (stack O (stack J (stack R (stack G (stack I ?x59))))))))
 (let ((?x71 (stack M (stack D (stack K (stack P (stack A (stack U ?x65))))))))
 (let ((?x1135 (left s__________)))
 (let (($x1443 (= ?x1135 ?x71)))
 (let (($x1445 (not (and $x1443 $x1442 $x1411))))
 (not $x1445))))))))))))))
(check-sat)
(exit)
