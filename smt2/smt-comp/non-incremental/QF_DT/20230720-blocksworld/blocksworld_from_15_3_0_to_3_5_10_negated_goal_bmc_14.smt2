(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x30 (stack R empty)))
 (let ((?x31 (stack N ?x30)))
 (let ((?x32 (stack C ?x31)))
 (let ((?x33 (stack J ?x32)))
 (let ((?x34 (stack K ?x33)))
 (let ((?x35 (stack P ?x34)))
 (let ((?x36 (stack E ?x35)))
 (let ((?x37 (stack L ?x36)))
 (let ((?x38 (stack F ?x37)))
 (let ((?x39 (stack B ?x38)))
 (let ((?x40 (stack O ?x39)))
 (let ((?x41 (stack I ?x40)))
 (let ((?x42 (stack G ?x41)))
 (let ((?x43 (stack Q ?x42)))
 (let ((?x44 (stack H ?x43)))
 (let ((?x112 (left s_tmp_)))
 (= ?x112 ?x44))))))))))))))))))
(assert
 (let ((?x45 (stack M empty)))
 (let ((?x46 (stack D ?x45)))
 (let ((?x47 (stack A ?x46)))
 (let ((?x115 (center s_tmp__)))
 (= ?x115 ?x47))))))
(assert
 (let ((?x118 (right s_tmp___)))
 (= ?x118 empty)))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x145 (left s_tmp__)))
 (= (left s_tmp___) ?x145)))
(assert
 (let ((?x115 (center s_tmp__)))
 (= (center s_tmp___) ?x115)))
(assert
 (let ((?x149 (center s_tmp_)))
 (= ?x149 (center s_tmp))))
(assert
 (let ((?x152 (right s_tmp_)))
 (= ?x152 (right s_tmp))))
(assert
 (let ((?x112 (left s_tmp_)))
 (let ((?x145 (left s_tmp__)))
 (= ?x145 ?x112))))
(assert
 (let ((?x152 (right s_tmp_)))
 (let ((?x156 (right s_tmp__)))
 (= ?x156 ?x152))))
(assert
 (= c__ c!1))
(assert
 (let ((?x89 (left s_)))
 (let ((?x269 (left s__)))
 (let (($x299 (= ?x269 ?x89)))
 (let ((?x92 (right s_)))
 (let (($x257 ((_ is stack ) ?x92)))
 (let (($x273 (and (= c_ right-to-left) $x257)))
 (let ((?x94 (center s_)))
 (let (($x274 ((_ is stack ) ?x94)))
 (let (($x275 (= c_ center-to-right)))
 (let (($x276 (and $x275 $x274)))
 (let (($x277 (= c_ center-to-left)))
 (let (($x278 (and $x277 $x274)))
 (let (($x308 (ite $x278 (= ?x269 (stack (top ?x94) ?x89)) (ite $x276 $x299 (ite $x273 (= ?x269 (stack (top ?x92) ?x89)) $x299)))))
 (let (($x286 (= ?x269 (rest ?x89))))
 (let (($x279 ((_ is stack ) ?x89)))
 (let (($x280 (= c_ left-to-right)))
 (let (($x281 (and $x280 $x279)))
 (let (($x282 (= c_ left-to-center)))
 (let (($x283 (and $x282 $x279)))
 (ite $x283 $x286 (ite $x281 $x286 $x308))))))))))))))))))))))
(assert
 (let ((?x92 (right s_)))
 (let ((?x265 (right s__)))
 (let (($x295 (= ?x265 ?x92)))
 (let (($x292 (= ?x265 (rest ?x92))))
 (let (($x257 ((_ is stack ) ?x92)))
 (let (($x271 (and (= c_ right-to-center) $x257)))
 (let (($x273 (and (= c_ right-to-left) $x257)))
 (let ((?x94 (center s_)))
 (let (($x274 ((_ is stack ) ?x94)))
 (let (($x275 (= c_ center-to-right)))
 (let (($x276 (and $x275 $x274)))
 (let (($x305 (ite $x276 (= ?x265 (stack (top ?x94) ?x92)) (ite $x273 $x292 (ite $x271 $x292 $x295)))))
 (let (($x277 (= c_ center-to-left)))
 (let (($x278 (and $x277 $x274)))
 (let ((?x89 (left s_)))
 (let (($x279 ((_ is stack ) ?x89)))
 (let (($x280 (= c_ left-to-right)))
 (let (($x281 (and $x280 $x279)))
 (let (($x282 (= c_ left-to-center)))
 (let (($x283 (and $x282 $x279)))
 (ite $x283 (= ?x265 (stack (top ?x89) ?x92)) (ite $x281 $x295 (ite $x278 $x295 $x305))))))))))))))))))))))))
(assert
 (let ((?x94 (center s_)))
 (let ((?x262 (center s__)))
 (let (($x297 (= ?x262 ?x94)))
 (let ((?x92 (right s_)))
 (let (($x257 ((_ is stack ) ?x92)))
 (let (($x271 (and (= c_ right-to-center) $x257)))
 (let (($x273 (and (= c_ right-to-left) $x257)))
 (let (($x289 (= ?x262 (rest ?x94))))
 (let (($x274 ((_ is stack ) ?x94)))
 (let (($x275 (= c_ center-to-right)))
 (let (($x276 (and $x275 $x274)))
 (let (($x304 (ite $x276 $x289 (ite $x273 $x297 (ite $x271 (= ?x262 (stack (top ?x92) ?x94)) $x297)))))
 (let (($x277 (= c_ center-to-left)))
 (let (($x278 (and $x277 $x274)))
 (let ((?x89 (left s_)))
 (let (($x279 ((_ is stack ) ?x89)))
 (let (($x280 (= c_ left-to-right)))
 (let (($x281 (and $x280 $x279)))
 (let (($x282 (= c_ left-to-center)))
 (let (($x283 (and $x282 $x279)))
 (ite $x283 $x297 (ite $x281 (= ?x262 (stack (top ?x89) ?x94)) (ite $x278 $x289 $x304))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x269 (left s__)))
 (let ((?x159 (left s___)))
 (let (($x408 (= ?x159 ?x269)))
 (let ((?x265 (right s__)))
 (let ((?x375 (top ?x265)))
 (let ((?x376 (stack ?x375 ?x269)))
 (let (($x402 (= ?x159 ?x376)))
 (let (($x378 ((_ is stack ) ?x265)))
 (let (($x381 (= c__ right-to-left)))
 (let (($x382 (and $x381 $x378)))
 (let ((?x262 (center s__)))
 (let (($x383 ((_ is stack ) ?x262)))
 (let (($x384 (= c__ center-to-right)))
 (let (($x385 (and $x384 $x383)))
 (let ((?x371 (top ?x262)))
 (let ((?x372 (stack ?x371 ?x269)))
 (let (($x399 (= ?x159 ?x372)))
 (let (($x386 (= c__ center-to-left)))
 (let (($x387 (and $x386 $x383)))
 (let ((?x161 (rest ?x269)))
 (let (($x395 (= ?x159 ?x161)))
 (let (($x388 ((_ is stack ) ?x269)))
 (let (($x389 (= c__ left-to-right)))
 (let (($x390 (and $x389 $x388)))
 (let (($x391 (= c__ left-to-center)))
 (let (($x392 (and $x391 $x388)))
 (ite $x392 $x395 (ite $x390 $x395 (ite $x387 $x399 (ite $x385 $x408 (ite $x382 $x402 $x408))))))))))))))))))))))))))))))))
(assert
 (let ((?x265 (right s__)))
 (let ((?x162 (right s___)))
 (let (($x404 (= ?x162 ?x265)))
 (let ((?x374 (rest ?x265)))
 (let (($x401 (= ?x162 ?x374)))
 (let (($x378 ((_ is stack ) ?x265)))
 (let (($x379 (= c__ right-to-center)))
 (let (($x380 (and $x379 $x378)))
 (let (($x381 (= c__ right-to-left)))
 (let (($x382 (and $x381 $x378)))
 (let ((?x262 (center s__)))
 (let ((?x371 (top ?x262)))
 (let ((?x373 (stack ?x371 ?x265)))
 (let (($x400 (= ?x162 ?x373)))
 (let (($x383 ((_ is stack ) ?x262)))
 (let (($x384 (= c__ center-to-right)))
 (let (($x385 (and $x384 $x383)))
 (let (($x386 (= c__ center-to-left)))
 (let (($x387 (and $x386 $x383)))
 (let ((?x269 (left s__)))
 (let (($x388 ((_ is stack ) ?x269)))
 (let (($x389 (= c__ left-to-right)))
 (let (($x390 (and $x389 $x388)))
 (let (($x421 (ite $x390 $x404 (ite $x387 $x404 (ite $x385 $x400 (ite $x382 $x401 (ite $x380 $x401 $x404)))))))
 (let ((?x251 (top ?x269)))
 (let ((?x367 (stack ?x251 ?x265)))
 (let (($x396 (= ?x162 ?x367)))
 (let (($x391 (= c__ left-to-center)))
 (let (($x392 (and $x391 $x388)))
 (ite $x392 $x396 $x421)))))))))))))))))))))))))))))))
(assert
 (let ((?x262 (center s__)))
 (let ((?x368 (center s___)))
 (let (($x406 (= ?x368 ?x262)))
 (let ((?x265 (right s__)))
 (let ((?x375 (top ?x265)))
 (let ((?x377 (stack ?x375 ?x262)))
 (let (($x403 (= ?x368 ?x377)))
 (let (($x378 ((_ is stack ) ?x265)))
 (let (($x379 (= c__ right-to-center)))
 (let (($x380 (and $x379 $x378)))
 (let (($x381 (= c__ right-to-left)))
 (let (($x382 (and $x381 $x378)))
 (let ((?x370 (rest ?x262)))
 (let (($x398 (= ?x368 ?x370)))
 (let (($x383 ((_ is stack ) ?x262)))
 (let (($x384 (= c__ center-to-right)))
 (let (($x385 (and $x384 $x383)))
 (let (($x386 (= c__ center-to-left)))
 (let (($x387 (and $x386 $x383)))
 (let ((?x269 (left s__)))
 (let ((?x251 (top ?x269)))
 (let ((?x369 (stack ?x251 ?x262)))
 (let (($x397 (= ?x368 ?x369)))
 (let (($x388 ((_ is stack ) ?x269)))
 (let (($x389 (= c__ left-to-right)))
 (let (($x390 (and $x389 $x388)))
 (let (($x420 (ite $x390 $x397 (ite $x387 $x398 (ite $x385 $x398 (ite $x382 $x406 (ite $x380 $x403 $x406)))))))
 (let (($x391 (= c__ left-to-center)))
 (let (($x392 (and $x391 $x388)))
 (ite $x392 $x406 $x420)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x159 (left s___)))
 (let ((?x315 (left s____)))
 (let (($x546 (= ?x315 ?x159)))
 (let ((?x162 (right s___)))
 (let ((?x513 (top ?x162)))
 (let ((?x514 (stack ?x513 ?x159)))
 (let (($x540 (= ?x315 ?x514)))
 (let (($x516 ((_ is stack ) ?x162)))
 (let (($x519 (= c___ right-to-left)))
 (let (($x520 (and $x519 $x516)))
 (let ((?x368 (center s___)))
 (let (($x521 ((_ is stack ) ?x368)))
 (let (($x522 (= c___ center-to-right)))
 (let (($x523 (and $x522 $x521)))
 (let ((?x509 (top ?x368)))
 (let ((?x510 (stack ?x509 ?x159)))
 (let (($x537 (= ?x315 ?x510)))
 (let (($x524 (= c___ center-to-left)))
 (let (($x525 (and $x524 $x521)))
 (let ((?x344 (rest ?x159)))
 (let (($x533 (= ?x315 ?x344)))
 (let (($x526 ((_ is stack ) ?x159)))
 (let (($x527 (= c___ left-to-right)))
 (let (($x528 (and $x527 $x526)))
 (let (($x529 (= c___ left-to-center)))
 (let (($x530 (and $x529 $x526)))
 (ite $x530 $x533 (ite $x528 $x533 (ite $x525 $x537 (ite $x523 $x546 (ite $x520 $x540 $x546))))))))))))))))))))))))))))))))
(assert
 (let ((?x162 (right s___)))
 (let ((?x345 (right s____)))
 (let (($x542 (= ?x345 ?x162)))
 (let ((?x512 (rest ?x162)))
 (let (($x539 (= ?x345 ?x512)))
 (let (($x516 ((_ is stack ) ?x162)))
 (let (($x517 (= c___ right-to-center)))
 (let (($x518 (and $x517 $x516)))
 (let (($x519 (= c___ right-to-left)))
 (let (($x520 (and $x519 $x516)))
 (let ((?x368 (center s___)))
 (let ((?x509 (top ?x368)))
 (let ((?x511 (stack ?x509 ?x162)))
 (let (($x538 (= ?x345 ?x511)))
 (let (($x521 ((_ is stack ) ?x368)))
 (let (($x522 (= c___ center-to-right)))
 (let (($x523 (and $x522 $x521)))
 (let (($x524 (= c___ center-to-left)))
 (let (($x525 (and $x524 $x521)))
 (let ((?x159 (left s___)))
 (let (($x526 ((_ is stack ) ?x159)))
 (let (($x527 (= c___ left-to-right)))
 (let (($x528 (and $x527 $x526)))
 (let (($x559 (ite $x528 $x542 (ite $x525 $x542 (ite $x523 $x538 (ite $x520 $x539 (ite $x518 $x539 $x542)))))))
 (let ((?x366 (top ?x159)))
 (let ((?x505 (stack ?x366 ?x162)))
 (let (($x534 (= ?x345 ?x505)))
 (let (($x529 (= c___ left-to-center)))
 (let (($x530 (and $x529 $x526)))
 (ite $x530 $x534 $x559)))))))))))))))))))))))))))))))
(assert
 (let ((?x368 (center s___)))
 (let ((?x506 (center s____)))
 (let (($x544 (= ?x506 ?x368)))
 (let ((?x162 (right s___)))
 (let ((?x513 (top ?x162)))
 (let ((?x515 (stack ?x513 ?x368)))
 (let (($x541 (= ?x506 ?x515)))
 (let (($x516 ((_ is stack ) ?x162)))
 (let (($x517 (= c___ right-to-center)))
 (let (($x518 (and $x517 $x516)))
 (let (($x519 (= c___ right-to-left)))
 (let (($x520 (and $x519 $x516)))
 (let ((?x508 (rest ?x368)))
 (let (($x536 (= ?x506 ?x508)))
 (let (($x521 ((_ is stack ) ?x368)))
 (let (($x522 (= c___ center-to-right)))
 (let (($x523 (and $x522 $x521)))
 (let (($x524 (= c___ center-to-left)))
 (let (($x525 (and $x524 $x521)))
 (let ((?x159 (left s___)))
 (let ((?x366 (top ?x159)))
 (let ((?x507 (stack ?x366 ?x368)))
 (let (($x535 (= ?x506 ?x507)))
 (let (($x526 ((_ is stack ) ?x159)))
 (let (($x527 (= c___ left-to-right)))
 (let (($x528 (and $x527 $x526)))
 (let (($x558 (ite $x528 $x535 (ite $x525 $x536 (ite $x523 $x536 (ite $x520 $x544 (ite $x518 $x541 $x544)))))))
 (let (($x529 (= c___ left-to-center)))
 (let (($x530 (and $x529 $x526)))
 (ite $x530 $x544 $x558)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x315 (left s____)))
 (let ((?x424 (left s_____)))
 (let (($x684 (= ?x424 ?x315)))
 (let ((?x345 (right s____)))
 (let ((?x651 (top ?x345)))
 (let ((?x652 (stack ?x651 ?x315)))
 (let (($x678 (= ?x424 ?x652)))
 (let (($x654 ((_ is stack ) ?x345)))
 (let (($x657 (= c____ right-to-left)))
 (let (($x658 (and $x657 $x654)))
 (let ((?x506 (center s____)))
 (let (($x659 ((_ is stack ) ?x506)))
 (let (($x660 (= c____ center-to-right)))
 (let (($x661 (and $x660 $x659)))
 (let ((?x647 (top ?x506)))
 (let ((?x648 (stack ?x647 ?x315)))
 (let (($x675 (= ?x424 ?x648)))
 (let (($x662 (= c____ center-to-left)))
 (let (($x663 (and $x662 $x659)))
 (let ((?x457 (rest ?x315)))
 (let (($x671 (= ?x424 ?x457)))
 (let (($x664 ((_ is stack ) ?x315)))
 (let (($x665 (= c____ left-to-right)))
 (let (($x666 (and $x665 $x664)))
 (let (($x667 (= c____ left-to-center)))
 (let (($x668 (and $x667 $x664)))
 (ite $x668 $x671 (ite $x666 $x671 (ite $x663 $x675 (ite $x661 $x684 (ite $x658 $x678 $x684))))))))))))))))))))))))))))))))
(assert
 (let ((?x345 (right s____)))
 (let ((?x458 (right s_____)))
 (let (($x680 (= ?x458 ?x345)))
 (let ((?x650 (rest ?x345)))
 (let (($x677 (= ?x458 ?x650)))
 (let (($x654 ((_ is stack ) ?x345)))
 (let (($x655 (= c____ right-to-center)))
 (let (($x656 (and $x655 $x654)))
 (let (($x657 (= c____ right-to-left)))
 (let (($x658 (and $x657 $x654)))
 (let ((?x506 (center s____)))
 (let ((?x647 (top ?x506)))
 (let ((?x649 (stack ?x647 ?x345)))
 (let (($x676 (= ?x458 ?x649)))
 (let (($x659 ((_ is stack ) ?x506)))
 (let (($x660 (= c____ center-to-right)))
 (let (($x661 (and $x660 $x659)))
 (let (($x662 (= c____ center-to-left)))
 (let (($x663 (and $x662 $x659)))
 (let ((?x315 (left s____)))
 (let (($x664 ((_ is stack ) ?x315)))
 (let (($x665 (= c____ left-to-right)))
 (let (($x666 (and $x665 $x664)))
 (let (($x697 (ite $x666 $x680 (ite $x663 $x680 (ite $x661 $x676 (ite $x658 $x677 (ite $x656 $x677 $x680)))))))
 (let ((?x504 (top ?x315)))
 (let ((?x643 (stack ?x504 ?x345)))
 (let (($x672 (= ?x458 ?x643)))
 (let (($x667 (= c____ left-to-center)))
 (let (($x668 (and $x667 $x664)))
 (ite $x668 $x672 $x697)))))))))))))))))))))))))))))))
(assert
 (let ((?x506 (center s____)))
 (let ((?x644 (center s_____)))
 (let (($x682 (= ?x644 ?x506)))
 (let ((?x345 (right s____)))
 (let ((?x651 (top ?x345)))
 (let ((?x653 (stack ?x651 ?x506)))
 (let (($x679 (= ?x644 ?x653)))
 (let (($x654 ((_ is stack ) ?x345)))
 (let (($x655 (= c____ right-to-center)))
 (let (($x656 (and $x655 $x654)))
 (let (($x657 (= c____ right-to-left)))
 (let (($x658 (and $x657 $x654)))
 (let ((?x646 (rest ?x506)))
 (let (($x674 (= ?x644 ?x646)))
 (let (($x659 ((_ is stack ) ?x506)))
 (let (($x660 (= c____ center-to-right)))
 (let (($x661 (and $x660 $x659)))
 (let (($x662 (= c____ center-to-left)))
 (let (($x663 (and $x662 $x659)))
 (let ((?x315 (left s____)))
 (let ((?x504 (top ?x315)))
 (let ((?x645 (stack ?x504 ?x506)))
 (let (($x673 (= ?x644 ?x645)))
 (let (($x664 ((_ is stack ) ?x315)))
 (let (($x665 (= c____ left-to-right)))
 (let (($x666 (and $x665 $x664)))
 (let (($x696 (ite $x666 $x673 (ite $x663 $x674 (ite $x661 $x674 (ite $x658 $x682 (ite $x656 $x679 $x682)))))))
 (let (($x667 (= c____ left-to-center)))
 (let (($x668 (and $x667 $x664)))
 (ite $x668 $x682 $x696)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x424 (left s_____)))
 (let ((?x562 (left s______)))
 (let (($x822 (= ?x562 ?x424)))
 (let ((?x458 (right s_____)))
 (let ((?x789 (top ?x458)))
 (let ((?x790 (stack ?x789 ?x424)))
 (let (($x816 (= ?x562 ?x790)))
 (let (($x792 ((_ is stack ) ?x458)))
 (let (($x795 (= c_____ right-to-left)))
 (let (($x796 (and $x795 $x792)))
 (let ((?x644 (center s_____)))
 (let (($x797 ((_ is stack ) ?x644)))
 (let (($x798 (= c_____ center-to-right)))
 (let (($x799 (and $x798 $x797)))
 (let ((?x785 (top ?x644)))
 (let ((?x786 (stack ?x785 ?x424)))
 (let (($x813 (= ?x562 ?x786)))
 (let (($x800 (= c_____ center-to-left)))
 (let (($x801 (and $x800 $x797)))
 (let ((?x595 (rest ?x424)))
 (let (($x809 (= ?x562 ?x595)))
 (let (($x802 ((_ is stack ) ?x424)))
 (let (($x803 (= c_____ left-to-right)))
 (let (($x804 (and $x803 $x802)))
 (let (($x805 (= c_____ left-to-center)))
 (let (($x806 (and $x805 $x802)))
 (ite $x806 $x809 (ite $x804 $x809 (ite $x801 $x813 (ite $x799 $x822 (ite $x796 $x816 $x822))))))))))))))))))))))))))))))))
(assert
 (let ((?x458 (right s_____)))
 (let ((?x596 (right s______)))
 (let (($x818 (= ?x596 ?x458)))
 (let ((?x788 (rest ?x458)))
 (let (($x815 (= ?x596 ?x788)))
 (let (($x792 ((_ is stack ) ?x458)))
 (let (($x793 (= c_____ right-to-center)))
 (let (($x794 (and $x793 $x792)))
 (let (($x795 (= c_____ right-to-left)))
 (let (($x796 (and $x795 $x792)))
 (let ((?x644 (center s_____)))
 (let ((?x785 (top ?x644)))
 (let ((?x787 (stack ?x785 ?x458)))
 (let (($x814 (= ?x596 ?x787)))
 (let (($x797 ((_ is stack ) ?x644)))
 (let (($x798 (= c_____ center-to-right)))
 (let (($x799 (and $x798 $x797)))
 (let (($x800 (= c_____ center-to-left)))
 (let (($x801 (and $x800 $x797)))
 (let ((?x424 (left s_____)))
 (let (($x802 ((_ is stack ) ?x424)))
 (let (($x803 (= c_____ left-to-right)))
 (let (($x804 (and $x803 $x802)))
 (let (($x835 (ite $x804 $x818 (ite $x801 $x818 (ite $x799 $x814 (ite $x796 $x815 (ite $x794 $x815 $x818)))))))
 (let ((?x642 (top ?x424)))
 (let ((?x781 (stack ?x642 ?x458)))
 (let (($x810 (= ?x596 ?x781)))
 (let (($x805 (= c_____ left-to-center)))
 (let (($x806 (and $x805 $x802)))
 (ite $x806 $x810 $x835)))))))))))))))))))))))))))))))
(assert
 (let ((?x644 (center s_____)))
 (let ((?x782 (center s______)))
 (let (($x820 (= ?x782 ?x644)))
 (let ((?x458 (right s_____)))
 (let ((?x789 (top ?x458)))
 (let ((?x791 (stack ?x789 ?x644)))
 (let (($x817 (= ?x782 ?x791)))
 (let (($x792 ((_ is stack ) ?x458)))
 (let (($x793 (= c_____ right-to-center)))
 (let (($x794 (and $x793 $x792)))
 (let (($x795 (= c_____ right-to-left)))
 (let (($x796 (and $x795 $x792)))
 (let ((?x784 (rest ?x644)))
 (let (($x812 (= ?x782 ?x784)))
 (let (($x797 ((_ is stack ) ?x644)))
 (let (($x798 (= c_____ center-to-right)))
 (let (($x799 (and $x798 $x797)))
 (let (($x800 (= c_____ center-to-left)))
 (let (($x801 (and $x800 $x797)))
 (let ((?x424 (left s_____)))
 (let ((?x642 (top ?x424)))
 (let ((?x783 (stack ?x642 ?x644)))
 (let (($x811 (= ?x782 ?x783)))
 (let (($x802 ((_ is stack ) ?x424)))
 (let (($x803 (= c_____ left-to-right)))
 (let (($x804 (and $x803 $x802)))
 (let (($x834 (ite $x804 $x811 (ite $x801 $x812 (ite $x799 $x812 (ite $x796 $x820 (ite $x794 $x817 $x820)))))))
 (let (($x805 (= c_____ left-to-center)))
 (let (($x806 (and $x805 $x802)))
 (ite $x806 $x820 $x834)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x562 (left s______)))
 (let ((?x700 (left s_______)))
 (let (($x960 (= ?x700 ?x562)))
 (let ((?x596 (right s______)))
 (let ((?x927 (top ?x596)))
 (let ((?x928 (stack ?x927 ?x562)))
 (let (($x954 (= ?x700 ?x928)))
 (let (($x930 ((_ is stack ) ?x596)))
 (let (($x933 (= c______ right-to-left)))
 (let (($x934 (and $x933 $x930)))
 (let ((?x782 (center s______)))
 (let (($x935 ((_ is stack ) ?x782)))
 (let (($x936 (= c______ center-to-right)))
 (let (($x937 (and $x936 $x935)))
 (let ((?x923 (top ?x782)))
 (let ((?x924 (stack ?x923 ?x562)))
 (let (($x951 (= ?x700 ?x924)))
 (let (($x938 (= c______ center-to-left)))
 (let (($x939 (and $x938 $x935)))
 (let ((?x733 (rest ?x562)))
 (let (($x947 (= ?x700 ?x733)))
 (let (($x940 ((_ is stack ) ?x562)))
 (let (($x941 (= c______ left-to-right)))
 (let (($x942 (and $x941 $x940)))
 (let (($x943 (= c______ left-to-center)))
 (let (($x944 (and $x943 $x940)))
 (ite $x944 $x947 (ite $x942 $x947 (ite $x939 $x951 (ite $x937 $x960 (ite $x934 $x954 $x960))))))))))))))))))))))))))))))))
(assert
 (let ((?x596 (right s______)))
 (let ((?x734 (right s_______)))
 (let (($x956 (= ?x734 ?x596)))
 (let ((?x926 (rest ?x596)))
 (let (($x953 (= ?x734 ?x926)))
 (let (($x930 ((_ is stack ) ?x596)))
 (let (($x931 (= c______ right-to-center)))
 (let (($x932 (and $x931 $x930)))
 (let (($x933 (= c______ right-to-left)))
 (let (($x934 (and $x933 $x930)))
 (let ((?x782 (center s______)))
 (let ((?x923 (top ?x782)))
 (let ((?x925 (stack ?x923 ?x596)))
 (let (($x952 (= ?x734 ?x925)))
 (let (($x935 ((_ is stack ) ?x782)))
 (let (($x936 (= c______ center-to-right)))
 (let (($x937 (and $x936 $x935)))
 (let (($x938 (= c______ center-to-left)))
 (let (($x939 (and $x938 $x935)))
 (let ((?x562 (left s______)))
 (let (($x940 ((_ is stack ) ?x562)))
 (let (($x941 (= c______ left-to-right)))
 (let (($x942 (and $x941 $x940)))
 (let (($x973 (ite $x942 $x956 (ite $x939 $x956 (ite $x937 $x952 (ite $x934 $x953 (ite $x932 $x953 $x956)))))))
 (let ((?x780 (top ?x562)))
 (let ((?x919 (stack ?x780 ?x596)))
 (let (($x948 (= ?x734 ?x919)))
 (let (($x943 (= c______ left-to-center)))
 (let (($x944 (and $x943 $x940)))
 (ite $x944 $x948 $x973)))))))))))))))))))))))))))))))
(assert
 (let ((?x782 (center s______)))
 (let ((?x920 (center s_______)))
 (let (($x958 (= ?x920 ?x782)))
 (let ((?x596 (right s______)))
 (let ((?x927 (top ?x596)))
 (let ((?x929 (stack ?x927 ?x782)))
 (let (($x955 (= ?x920 ?x929)))
 (let (($x930 ((_ is stack ) ?x596)))
 (let (($x931 (= c______ right-to-center)))
 (let (($x932 (and $x931 $x930)))
 (let (($x933 (= c______ right-to-left)))
 (let (($x934 (and $x933 $x930)))
 (let ((?x922 (rest ?x782)))
 (let (($x950 (= ?x920 ?x922)))
 (let (($x935 ((_ is stack ) ?x782)))
 (let (($x936 (= c______ center-to-right)))
 (let (($x937 (and $x936 $x935)))
 (let (($x938 (= c______ center-to-left)))
 (let (($x939 (and $x938 $x935)))
 (let ((?x562 (left s______)))
 (let ((?x780 (top ?x562)))
 (let ((?x921 (stack ?x780 ?x782)))
 (let (($x949 (= ?x920 ?x921)))
 (let (($x940 ((_ is stack ) ?x562)))
 (let (($x941 (= c______ left-to-right)))
 (let (($x942 (and $x941 $x940)))
 (let (($x972 (ite $x942 $x949 (ite $x939 $x950 (ite $x937 $x950 (ite $x934 $x958 (ite $x932 $x955 $x958)))))))
 (let (($x943 (= c______ left-to-center)))
 (let (($x944 (and $x943 $x940)))
 (ite $x944 $x958 $x972)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x700 (left s_______)))
 (let ((?x838 (left s________)))
 (let (($x1098 (= ?x838 ?x700)))
 (let ((?x734 (right s_______)))
 (let ((?x1065 (top ?x734)))
 (let ((?x1066 (stack ?x1065 ?x700)))
 (let (($x1092 (= ?x838 ?x1066)))
 (let (($x1068 ((_ is stack ) ?x734)))
 (let (($x1071 (= c_______ right-to-left)))
 (let (($x1072 (and $x1071 $x1068)))
 (let ((?x920 (center s_______)))
 (let (($x1073 ((_ is stack ) ?x920)))
 (let (($x1074 (= c_______ center-to-right)))
 (let (($x1075 (and $x1074 $x1073)))
 (let ((?x1061 (top ?x920)))
 (let ((?x1062 (stack ?x1061 ?x700)))
 (let (($x1089 (= ?x838 ?x1062)))
 (let (($x1076 (= c_______ center-to-left)))
 (let (($x1077 (and $x1076 $x1073)))
 (let ((?x871 (rest ?x700)))
 (let (($x1085 (= ?x838 ?x871)))
 (let (($x1078 ((_ is stack ) ?x700)))
 (let (($x1079 (= c_______ left-to-right)))
 (let (($x1080 (and $x1079 $x1078)))
 (let (($x1081 (= c_______ left-to-center)))
 (let (($x1082 (and $x1081 $x1078)))
 (ite $x1082 $x1085 (ite $x1080 $x1085 (ite $x1077 $x1089 (ite $x1075 $x1098 (ite $x1072 $x1092 $x1098))))))))))))))))))))))))))))))))
(assert
 (let ((?x734 (right s_______)))
 (let ((?x872 (right s________)))
 (let (($x1094 (= ?x872 ?x734)))
 (let ((?x1064 (rest ?x734)))
 (let (($x1091 (= ?x872 ?x1064)))
 (let (($x1068 ((_ is stack ) ?x734)))
 (let (($x1069 (= c_______ right-to-center)))
 (let (($x1070 (and $x1069 $x1068)))
 (let (($x1071 (= c_______ right-to-left)))
 (let (($x1072 (and $x1071 $x1068)))
 (let ((?x920 (center s_______)))
 (let ((?x1061 (top ?x920)))
 (let ((?x1063 (stack ?x1061 ?x734)))
 (let (($x1090 (= ?x872 ?x1063)))
 (let (($x1073 ((_ is stack ) ?x920)))
 (let (($x1074 (= c_______ center-to-right)))
 (let (($x1075 (and $x1074 $x1073)))
 (let (($x1076 (= c_______ center-to-left)))
 (let (($x1077 (and $x1076 $x1073)))
 (let ((?x700 (left s_______)))
 (let (($x1078 ((_ is stack ) ?x700)))
 (let (($x1079 (= c_______ left-to-right)))
 (let (($x1080 (and $x1079 $x1078)))
 (let (($x1111 (ite $x1080 $x1094 (ite $x1077 $x1094 (ite $x1075 $x1090 (ite $x1072 $x1091 (ite $x1070 $x1091 $x1094)))))))
 (let ((?x918 (top ?x700)))
 (let ((?x1057 (stack ?x918 ?x734)))
 (let (($x1086 (= ?x872 ?x1057)))
 (let (($x1081 (= c_______ left-to-center)))
 (let (($x1082 (and $x1081 $x1078)))
 (ite $x1082 $x1086 $x1111)))))))))))))))))))))))))))))))
(assert
 (let ((?x920 (center s_______)))
 (let ((?x1058 (center s________)))
 (let (($x1096 (= ?x1058 ?x920)))
 (let ((?x734 (right s_______)))
 (let ((?x1065 (top ?x734)))
 (let ((?x1067 (stack ?x1065 ?x920)))
 (let (($x1093 (= ?x1058 ?x1067)))
 (let (($x1068 ((_ is stack ) ?x734)))
 (let (($x1069 (= c_______ right-to-center)))
 (let (($x1070 (and $x1069 $x1068)))
 (let (($x1071 (= c_______ right-to-left)))
 (let (($x1072 (and $x1071 $x1068)))
 (let ((?x1060 (rest ?x920)))
 (let (($x1088 (= ?x1058 ?x1060)))
 (let (($x1073 ((_ is stack ) ?x920)))
 (let (($x1074 (= c_______ center-to-right)))
 (let (($x1075 (and $x1074 $x1073)))
 (let (($x1076 (= c_______ center-to-left)))
 (let (($x1077 (and $x1076 $x1073)))
 (let ((?x700 (left s_______)))
 (let ((?x918 (top ?x700)))
 (let ((?x1059 (stack ?x918 ?x920)))
 (let (($x1087 (= ?x1058 ?x1059)))
 (let (($x1078 ((_ is stack ) ?x700)))
 (let (($x1079 (= c_______ left-to-right)))
 (let (($x1080 (and $x1079 $x1078)))
 (let (($x1110 (ite $x1080 $x1087 (ite $x1077 $x1088 (ite $x1075 $x1088 (ite $x1072 $x1096 (ite $x1070 $x1093 $x1096)))))))
 (let (($x1081 (= c_______ left-to-center)))
 (let (($x1082 (and $x1081 $x1078)))
 (ite $x1082 $x1096 $x1110)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x838 (left s________)))
 (let ((?x976 (left s_________)))
 (let (($x1236 (= ?x976 ?x838)))
 (let ((?x872 (right s________)))
 (let ((?x1203 (top ?x872)))
 (let ((?x1204 (stack ?x1203 ?x838)))
 (let (($x1230 (= ?x976 ?x1204)))
 (let (($x1206 ((_ is stack ) ?x872)))
 (let (($x1209 (= c________ right-to-left)))
 (let (($x1210 (and $x1209 $x1206)))
 (let ((?x1058 (center s________)))
 (let (($x1211 ((_ is stack ) ?x1058)))
 (let (($x1212 (= c________ center-to-right)))
 (let (($x1213 (and $x1212 $x1211)))
 (let ((?x1199 (top ?x1058)))
 (let ((?x1200 (stack ?x1199 ?x838)))
 (let (($x1227 (= ?x976 ?x1200)))
 (let (($x1214 (= c________ center-to-left)))
 (let (($x1215 (and $x1214 $x1211)))
 (let ((?x1009 (rest ?x838)))
 (let (($x1223 (= ?x976 ?x1009)))
 (let (($x1216 ((_ is stack ) ?x838)))
 (let (($x1217 (= c________ left-to-right)))
 (let (($x1218 (and $x1217 $x1216)))
 (let (($x1219 (= c________ left-to-center)))
 (let (($x1220 (and $x1219 $x1216)))
 (ite $x1220 $x1223 (ite $x1218 $x1223 (ite $x1215 $x1227 (ite $x1213 $x1236 (ite $x1210 $x1230 $x1236))))))))))))))))))))))))))))))))
(assert
 (let ((?x872 (right s________)))
 (let ((?x1010 (right s_________)))
 (let (($x1232 (= ?x1010 ?x872)))
 (let ((?x1202 (rest ?x872)))
 (let (($x1229 (= ?x1010 ?x1202)))
 (let (($x1206 ((_ is stack ) ?x872)))
 (let (($x1207 (= c________ right-to-center)))
 (let (($x1208 (and $x1207 $x1206)))
 (let (($x1209 (= c________ right-to-left)))
 (let (($x1210 (and $x1209 $x1206)))
 (let ((?x1058 (center s________)))
 (let ((?x1199 (top ?x1058)))
 (let ((?x1201 (stack ?x1199 ?x872)))
 (let (($x1228 (= ?x1010 ?x1201)))
 (let (($x1211 ((_ is stack ) ?x1058)))
 (let (($x1212 (= c________ center-to-right)))
 (let (($x1213 (and $x1212 $x1211)))
 (let (($x1214 (= c________ center-to-left)))
 (let (($x1215 (and $x1214 $x1211)))
 (let ((?x838 (left s________)))
 (let (($x1216 ((_ is stack ) ?x838)))
 (let (($x1217 (= c________ left-to-right)))
 (let (($x1218 (and $x1217 $x1216)))
 (let (($x1249 (ite $x1218 $x1232 (ite $x1215 $x1232 (ite $x1213 $x1228 (ite $x1210 $x1229 (ite $x1208 $x1229 $x1232)))))))
 (let ((?x1056 (top ?x838)))
 (let ((?x1195 (stack ?x1056 ?x872)))
 (let (($x1224 (= ?x1010 ?x1195)))
 (let (($x1219 (= c________ left-to-center)))
 (let (($x1220 (and $x1219 $x1216)))
 (ite $x1220 $x1224 $x1249)))))))))))))))))))))))))))))))
(assert
 (let ((?x1058 (center s________)))
 (let ((?x1196 (center s_________)))
 (let (($x1234 (= ?x1196 ?x1058)))
 (let ((?x872 (right s________)))
 (let ((?x1203 (top ?x872)))
 (let ((?x1205 (stack ?x1203 ?x1058)))
 (let (($x1231 (= ?x1196 ?x1205)))
 (let (($x1206 ((_ is stack ) ?x872)))
 (let (($x1207 (= c________ right-to-center)))
 (let (($x1208 (and $x1207 $x1206)))
 (let (($x1209 (= c________ right-to-left)))
 (let (($x1210 (and $x1209 $x1206)))
 (let ((?x1198 (rest ?x1058)))
 (let (($x1226 (= ?x1196 ?x1198)))
 (let (($x1211 ((_ is stack ) ?x1058)))
 (let (($x1212 (= c________ center-to-right)))
 (let (($x1213 (and $x1212 $x1211)))
 (let (($x1214 (= c________ center-to-left)))
 (let (($x1215 (and $x1214 $x1211)))
 (let ((?x838 (left s________)))
 (let ((?x1056 (top ?x838)))
 (let ((?x1197 (stack ?x1056 ?x1058)))
 (let (($x1225 (= ?x1196 ?x1197)))
 (let (($x1216 ((_ is stack ) ?x838)))
 (let (($x1217 (= c________ left-to-right)))
 (let (($x1218 (and $x1217 $x1216)))
 (let (($x1248 (ite $x1218 $x1225 (ite $x1215 $x1226 (ite $x1213 $x1226 (ite $x1210 $x1234 (ite $x1208 $x1231 $x1234)))))))
 (let (($x1219 (= c________ left-to-center)))
 (let (($x1220 (and $x1219 $x1216)))
 (ite $x1220 $x1234 $x1248)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x976 (left s_________)))
 (let ((?x1114 (left s__________)))
 (let (($x1374 (= ?x1114 ?x976)))
 (let ((?x1010 (right s_________)))
 (let ((?x1341 (top ?x1010)))
 (let ((?x1342 (stack ?x1341 ?x976)))
 (let (($x1368 (= ?x1114 ?x1342)))
 (let (($x1344 ((_ is stack ) ?x1010)))
 (let (($x1347 (= c_________ right-to-left)))
 (let (($x1348 (and $x1347 $x1344)))
 (let ((?x1196 (center s_________)))
 (let (($x1349 ((_ is stack ) ?x1196)))
 (let (($x1350 (= c_________ center-to-right)))
 (let (($x1351 (and $x1350 $x1349)))
 (let ((?x1337 (top ?x1196)))
 (let ((?x1338 (stack ?x1337 ?x976)))
 (let (($x1365 (= ?x1114 ?x1338)))
 (let (($x1352 (= c_________ center-to-left)))
 (let (($x1353 (and $x1352 $x1349)))
 (let ((?x1147 (rest ?x976)))
 (let (($x1361 (= ?x1114 ?x1147)))
 (let (($x1354 ((_ is stack ) ?x976)))
 (let (($x1355 (= c_________ left-to-right)))
 (let (($x1356 (and $x1355 $x1354)))
 (let (($x1357 (= c_________ left-to-center)))
 (let (($x1358 (and $x1357 $x1354)))
 (ite $x1358 $x1361 (ite $x1356 $x1361 (ite $x1353 $x1365 (ite $x1351 $x1374 (ite $x1348 $x1368 $x1374))))))))))))))))))))))))))))))))
(assert
 (let ((?x1010 (right s_________)))
 (let ((?x1148 (right s__________)))
 (let (($x1370 (= ?x1148 ?x1010)))
 (let ((?x1340 (rest ?x1010)))
 (let (($x1367 (= ?x1148 ?x1340)))
 (let (($x1344 ((_ is stack ) ?x1010)))
 (let (($x1345 (= c_________ right-to-center)))
 (let (($x1346 (and $x1345 $x1344)))
 (let (($x1347 (= c_________ right-to-left)))
 (let (($x1348 (and $x1347 $x1344)))
 (let ((?x1196 (center s_________)))
 (let ((?x1337 (top ?x1196)))
 (let ((?x1339 (stack ?x1337 ?x1010)))
 (let (($x1366 (= ?x1148 ?x1339)))
 (let (($x1349 ((_ is stack ) ?x1196)))
 (let (($x1350 (= c_________ center-to-right)))
 (let (($x1351 (and $x1350 $x1349)))
 (let (($x1352 (= c_________ center-to-left)))
 (let (($x1353 (and $x1352 $x1349)))
 (let ((?x976 (left s_________)))
 (let (($x1354 ((_ is stack ) ?x976)))
 (let (($x1355 (= c_________ left-to-right)))
 (let (($x1356 (and $x1355 $x1354)))
 (let (($x1387 (ite $x1356 $x1370 (ite $x1353 $x1370 (ite $x1351 $x1366 (ite $x1348 $x1367 (ite $x1346 $x1367 $x1370)))))))
 (let ((?x1194 (top ?x976)))
 (let ((?x1333 (stack ?x1194 ?x1010)))
 (let (($x1362 (= ?x1148 ?x1333)))
 (let (($x1357 (= c_________ left-to-center)))
 (let (($x1358 (and $x1357 $x1354)))
 (ite $x1358 $x1362 $x1387)))))))))))))))))))))))))))))))
(assert
 (let ((?x1196 (center s_________)))
 (let ((?x1334 (center s__________)))
 (let (($x1372 (= ?x1334 ?x1196)))
 (let ((?x1010 (right s_________)))
 (let ((?x1341 (top ?x1010)))
 (let ((?x1343 (stack ?x1341 ?x1196)))
 (let (($x1369 (= ?x1334 ?x1343)))
 (let (($x1344 ((_ is stack ) ?x1010)))
 (let (($x1345 (= c_________ right-to-center)))
 (let (($x1346 (and $x1345 $x1344)))
 (let (($x1347 (= c_________ right-to-left)))
 (let (($x1348 (and $x1347 $x1344)))
 (let ((?x1336 (rest ?x1196)))
 (let (($x1364 (= ?x1334 ?x1336)))
 (let (($x1349 ((_ is stack ) ?x1196)))
 (let (($x1350 (= c_________ center-to-right)))
 (let (($x1351 (and $x1350 $x1349)))
 (let (($x1352 (= c_________ center-to-left)))
 (let (($x1353 (and $x1352 $x1349)))
 (let ((?x976 (left s_________)))
 (let ((?x1194 (top ?x976)))
 (let ((?x1335 (stack ?x1194 ?x1196)))
 (let (($x1363 (= ?x1334 ?x1335)))
 (let (($x1354 ((_ is stack ) ?x976)))
 (let (($x1355 (= c_________ left-to-right)))
 (let (($x1356 (and $x1355 $x1354)))
 (let (($x1386 (ite $x1356 $x1363 (ite $x1353 $x1364 (ite $x1351 $x1364 (ite $x1348 $x1372 (ite $x1346 $x1369 $x1372)))))))
 (let (($x1357 (= c_________ left-to-center)))
 (let (($x1358 (and $x1357 $x1354)))
 (ite $x1358 $x1372 $x1386)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1114 (left s__________)))
 (let ((?x1252 (left s___________)))
 (let (($x1512 (= ?x1252 ?x1114)))
 (let ((?x1148 (right s__________)))
 (let ((?x1479 (top ?x1148)))
 (let ((?x1480 (stack ?x1479 ?x1114)))
 (let (($x1506 (= ?x1252 ?x1480)))
 (let (($x1482 ((_ is stack ) ?x1148)))
 (let (($x1485 (= c__________ right-to-left)))
 (let (($x1486 (and $x1485 $x1482)))
 (let ((?x1334 (center s__________)))
 (let (($x1487 ((_ is stack ) ?x1334)))
 (let (($x1488 (= c__________ center-to-right)))
 (let (($x1489 (and $x1488 $x1487)))
 (let ((?x1475 (top ?x1334)))
 (let ((?x1476 (stack ?x1475 ?x1114)))
 (let (($x1503 (= ?x1252 ?x1476)))
 (let (($x1490 (= c__________ center-to-left)))
 (let (($x1491 (and $x1490 $x1487)))
 (let ((?x1285 (rest ?x1114)))
 (let (($x1499 (= ?x1252 ?x1285)))
 (let (($x1492 ((_ is stack ) ?x1114)))
 (let (($x1493 (= c__________ left-to-right)))
 (let (($x1494 (and $x1493 $x1492)))
 (let (($x1495 (= c__________ left-to-center)))
 (let (($x1496 (and $x1495 $x1492)))
 (ite $x1496 $x1499 (ite $x1494 $x1499 (ite $x1491 $x1503 (ite $x1489 $x1512 (ite $x1486 $x1506 $x1512))))))))))))))))))))))))))))))))
(assert
 (let ((?x1148 (right s__________)))
 (let ((?x1286 (right s___________)))
 (let (($x1508 (= ?x1286 ?x1148)))
 (let ((?x1478 (rest ?x1148)))
 (let (($x1505 (= ?x1286 ?x1478)))
 (let (($x1482 ((_ is stack ) ?x1148)))
 (let (($x1483 (= c__________ right-to-center)))
 (let (($x1484 (and $x1483 $x1482)))
 (let (($x1485 (= c__________ right-to-left)))
 (let (($x1486 (and $x1485 $x1482)))
 (let ((?x1334 (center s__________)))
 (let ((?x1475 (top ?x1334)))
 (let ((?x1477 (stack ?x1475 ?x1148)))
 (let (($x1504 (= ?x1286 ?x1477)))
 (let (($x1487 ((_ is stack ) ?x1334)))
 (let (($x1488 (= c__________ center-to-right)))
 (let (($x1489 (and $x1488 $x1487)))
 (let (($x1490 (= c__________ center-to-left)))
 (let (($x1491 (and $x1490 $x1487)))
 (let ((?x1114 (left s__________)))
 (let (($x1492 ((_ is stack ) ?x1114)))
 (let (($x1493 (= c__________ left-to-right)))
 (let (($x1494 (and $x1493 $x1492)))
 (let (($x1525 (ite $x1494 $x1508 (ite $x1491 $x1508 (ite $x1489 $x1504 (ite $x1486 $x1505 (ite $x1484 $x1505 $x1508)))))))
 (let ((?x1332 (top ?x1114)))
 (let ((?x1471 (stack ?x1332 ?x1148)))
 (let (($x1500 (= ?x1286 ?x1471)))
 (let (($x1495 (= c__________ left-to-center)))
 (let (($x1496 (and $x1495 $x1492)))
 (ite $x1496 $x1500 $x1525)))))))))))))))))))))))))))))))
(assert
 (let ((?x1334 (center s__________)))
 (let ((?x1472 (center s___________)))
 (let (($x1510 (= ?x1472 ?x1334)))
 (let ((?x1148 (right s__________)))
 (let ((?x1479 (top ?x1148)))
 (let ((?x1481 (stack ?x1479 ?x1334)))
 (let (($x1507 (= ?x1472 ?x1481)))
 (let (($x1482 ((_ is stack ) ?x1148)))
 (let (($x1483 (= c__________ right-to-center)))
 (let (($x1484 (and $x1483 $x1482)))
 (let (($x1485 (= c__________ right-to-left)))
 (let (($x1486 (and $x1485 $x1482)))
 (let ((?x1474 (rest ?x1334)))
 (let (($x1502 (= ?x1472 ?x1474)))
 (let (($x1487 ((_ is stack ) ?x1334)))
 (let (($x1488 (= c__________ center-to-right)))
 (let (($x1489 (and $x1488 $x1487)))
 (let (($x1490 (= c__________ center-to-left)))
 (let (($x1491 (and $x1490 $x1487)))
 (let ((?x1114 (left s__________)))
 (let ((?x1332 (top ?x1114)))
 (let ((?x1473 (stack ?x1332 ?x1334)))
 (let (($x1501 (= ?x1472 ?x1473)))
 (let (($x1492 ((_ is stack ) ?x1114)))
 (let (($x1493 (= c__________ left-to-right)))
 (let (($x1494 (and $x1493 $x1492)))
 (let (($x1524 (ite $x1494 $x1501 (ite $x1491 $x1502 (ite $x1489 $x1502 (ite $x1486 $x1510 (ite $x1484 $x1507 $x1510)))))))
 (let (($x1495 (= c__________ left-to-center)))
 (let (($x1496 (and $x1495 $x1492)))
 (ite $x1496 $x1510 $x1524)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1252 (left s___________)))
 (let ((?x1390 (left s____________)))
 (let (($x1650 (= ?x1390 ?x1252)))
 (let ((?x1286 (right s___________)))
 (let ((?x1617 (top ?x1286)))
 (let ((?x1618 (stack ?x1617 ?x1252)))
 (let (($x1644 (= ?x1390 ?x1618)))
 (let (($x1620 ((_ is stack ) ?x1286)))
 (let (($x1623 (= c___________ right-to-left)))
 (let (($x1624 (and $x1623 $x1620)))
 (let ((?x1472 (center s___________)))
 (let (($x1625 ((_ is stack ) ?x1472)))
 (let (($x1626 (= c___________ center-to-right)))
 (let (($x1627 (and $x1626 $x1625)))
 (let ((?x1613 (top ?x1472)))
 (let ((?x1614 (stack ?x1613 ?x1252)))
 (let (($x1641 (= ?x1390 ?x1614)))
 (let (($x1628 (= c___________ center-to-left)))
 (let (($x1629 (and $x1628 $x1625)))
 (let ((?x1423 (rest ?x1252)))
 (let (($x1637 (= ?x1390 ?x1423)))
 (let (($x1630 ((_ is stack ) ?x1252)))
 (let (($x1631 (= c___________ left-to-right)))
 (let (($x1632 (and $x1631 $x1630)))
 (let (($x1633 (= c___________ left-to-center)))
 (let (($x1634 (and $x1633 $x1630)))
 (ite $x1634 $x1637 (ite $x1632 $x1637 (ite $x1629 $x1641 (ite $x1627 $x1650 (ite $x1624 $x1644 $x1650))))))))))))))))))))))))))))))))
(assert
 (let ((?x1286 (right s___________)))
 (let ((?x1424 (right s____________)))
 (let (($x1646 (= ?x1424 ?x1286)))
 (let ((?x1616 (rest ?x1286)))
 (let (($x1643 (= ?x1424 ?x1616)))
 (let (($x1620 ((_ is stack ) ?x1286)))
 (let (($x1621 (= c___________ right-to-center)))
 (let (($x1622 (and $x1621 $x1620)))
 (let (($x1623 (= c___________ right-to-left)))
 (let (($x1624 (and $x1623 $x1620)))
 (let ((?x1472 (center s___________)))
 (let ((?x1613 (top ?x1472)))
 (let ((?x1615 (stack ?x1613 ?x1286)))
 (let (($x1642 (= ?x1424 ?x1615)))
 (let (($x1625 ((_ is stack ) ?x1472)))
 (let (($x1626 (= c___________ center-to-right)))
 (let (($x1627 (and $x1626 $x1625)))
 (let (($x1628 (= c___________ center-to-left)))
 (let (($x1629 (and $x1628 $x1625)))
 (let ((?x1252 (left s___________)))
 (let (($x1630 ((_ is stack ) ?x1252)))
 (let (($x1631 (= c___________ left-to-right)))
 (let (($x1632 (and $x1631 $x1630)))
 (let (($x1663 (ite $x1632 $x1646 (ite $x1629 $x1646 (ite $x1627 $x1642 (ite $x1624 $x1643 (ite $x1622 $x1643 $x1646)))))))
 (let ((?x1470 (top ?x1252)))
 (let ((?x1609 (stack ?x1470 ?x1286)))
 (let (($x1638 (= ?x1424 ?x1609)))
 (let (($x1633 (= c___________ left-to-center)))
 (let (($x1634 (and $x1633 $x1630)))
 (ite $x1634 $x1638 $x1663)))))))))))))))))))))))))))))))
(assert
 (let ((?x1472 (center s___________)))
 (let ((?x1610 (center s____________)))
 (let (($x1648 (= ?x1610 ?x1472)))
 (let ((?x1286 (right s___________)))
 (let ((?x1617 (top ?x1286)))
 (let ((?x1619 (stack ?x1617 ?x1472)))
 (let (($x1645 (= ?x1610 ?x1619)))
 (let (($x1620 ((_ is stack ) ?x1286)))
 (let (($x1621 (= c___________ right-to-center)))
 (let (($x1622 (and $x1621 $x1620)))
 (let (($x1623 (= c___________ right-to-left)))
 (let (($x1624 (and $x1623 $x1620)))
 (let ((?x1612 (rest ?x1472)))
 (let (($x1640 (= ?x1610 ?x1612)))
 (let (($x1625 ((_ is stack ) ?x1472)))
 (let (($x1626 (= c___________ center-to-right)))
 (let (($x1627 (and $x1626 $x1625)))
 (let (($x1628 (= c___________ center-to-left)))
 (let (($x1629 (and $x1628 $x1625)))
 (let ((?x1252 (left s___________)))
 (let ((?x1470 (top ?x1252)))
 (let ((?x1611 (stack ?x1470 ?x1472)))
 (let (($x1639 (= ?x1610 ?x1611)))
 (let (($x1630 ((_ is stack ) ?x1252)))
 (let (($x1631 (= c___________ left-to-right)))
 (let (($x1632 (and $x1631 $x1630)))
 (let (($x1662 (ite $x1632 $x1639 (ite $x1629 $x1640 (ite $x1627 $x1640 (ite $x1624 $x1648 (ite $x1622 $x1645 $x1648)))))))
 (let (($x1633 (= c___________ left-to-center)))
 (let (($x1634 (and $x1633 $x1630)))
 (ite $x1634 $x1648 $x1662)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1390 (left s____________)))
 (let ((?x1528 (left s_____________)))
 (let (($x1788 (= ?x1528 ?x1390)))
 (let ((?x1424 (right s____________)))
 (let ((?x1755 (top ?x1424)))
 (let ((?x1756 (stack ?x1755 ?x1390)))
 (let (($x1782 (= ?x1528 ?x1756)))
 (let (($x1758 ((_ is stack ) ?x1424)))
 (let (($x1761 (= c____________ right-to-left)))
 (let (($x1762 (and $x1761 $x1758)))
 (let ((?x1610 (center s____________)))
 (let (($x1763 ((_ is stack ) ?x1610)))
 (let (($x1764 (= c____________ center-to-right)))
 (let (($x1765 (and $x1764 $x1763)))
 (let ((?x1751 (top ?x1610)))
 (let ((?x1752 (stack ?x1751 ?x1390)))
 (let (($x1779 (= ?x1528 ?x1752)))
 (let (($x1766 (= c____________ center-to-left)))
 (let (($x1767 (and $x1766 $x1763)))
 (let ((?x1561 (rest ?x1390)))
 (let (($x1775 (= ?x1528 ?x1561)))
 (let (($x1768 ((_ is stack ) ?x1390)))
 (let (($x1769 (= c____________ left-to-right)))
 (let (($x1770 (and $x1769 $x1768)))
 (let (($x1771 (= c____________ left-to-center)))
 (let (($x1772 (and $x1771 $x1768)))
 (ite $x1772 $x1775 (ite $x1770 $x1775 (ite $x1767 $x1779 (ite $x1765 $x1788 (ite $x1762 $x1782 $x1788))))))))))))))))))))))))))))))))
(assert
 (let ((?x1424 (right s____________)))
 (let ((?x1562 (right s_____________)))
 (let (($x1784 (= ?x1562 ?x1424)))
 (let ((?x1754 (rest ?x1424)))
 (let (($x1781 (= ?x1562 ?x1754)))
 (let (($x1758 ((_ is stack ) ?x1424)))
 (let (($x1759 (= c____________ right-to-center)))
 (let (($x1760 (and $x1759 $x1758)))
 (let (($x1761 (= c____________ right-to-left)))
 (let (($x1762 (and $x1761 $x1758)))
 (let ((?x1610 (center s____________)))
 (let ((?x1751 (top ?x1610)))
 (let ((?x1753 (stack ?x1751 ?x1424)))
 (let (($x1780 (= ?x1562 ?x1753)))
 (let (($x1763 ((_ is stack ) ?x1610)))
 (let (($x1764 (= c____________ center-to-right)))
 (let (($x1765 (and $x1764 $x1763)))
 (let (($x1766 (= c____________ center-to-left)))
 (let (($x1767 (and $x1766 $x1763)))
 (let ((?x1390 (left s____________)))
 (let (($x1768 ((_ is stack ) ?x1390)))
 (let (($x1769 (= c____________ left-to-right)))
 (let (($x1770 (and $x1769 $x1768)))
 (let (($x1801 (ite $x1770 $x1784 (ite $x1767 $x1784 (ite $x1765 $x1780 (ite $x1762 $x1781 (ite $x1760 $x1781 $x1784)))))))
 (let ((?x1608 (top ?x1390)))
 (let ((?x1747 (stack ?x1608 ?x1424)))
 (let (($x1776 (= ?x1562 ?x1747)))
 (let (($x1771 (= c____________ left-to-center)))
 (let (($x1772 (and $x1771 $x1768)))
 (ite $x1772 $x1776 $x1801)))))))))))))))))))))))))))))))
(assert
 (let ((?x1610 (center s____________)))
 (let ((?x1748 (center s_____________)))
 (let (($x1786 (= ?x1748 ?x1610)))
 (let ((?x1424 (right s____________)))
 (let ((?x1755 (top ?x1424)))
 (let ((?x1757 (stack ?x1755 ?x1610)))
 (let (($x1783 (= ?x1748 ?x1757)))
 (let (($x1758 ((_ is stack ) ?x1424)))
 (let (($x1759 (= c____________ right-to-center)))
 (let (($x1760 (and $x1759 $x1758)))
 (let (($x1761 (= c____________ right-to-left)))
 (let (($x1762 (and $x1761 $x1758)))
 (let ((?x1750 (rest ?x1610)))
 (let (($x1778 (= ?x1748 ?x1750)))
 (let (($x1763 ((_ is stack ) ?x1610)))
 (let (($x1764 (= c____________ center-to-right)))
 (let (($x1765 (and $x1764 $x1763)))
 (let (($x1766 (= c____________ center-to-left)))
 (let (($x1767 (and $x1766 $x1763)))
 (let ((?x1390 (left s____________)))
 (let ((?x1608 (top ?x1390)))
 (let ((?x1749 (stack ?x1608 ?x1610)))
 (let (($x1777 (= ?x1748 ?x1749)))
 (let (($x1768 ((_ is stack ) ?x1390)))
 (let (($x1769 (= c____________ left-to-right)))
 (let (($x1770 (and $x1769 $x1768)))
 (let (($x1800 (ite $x1770 $x1777 (ite $x1767 $x1778 (ite $x1765 $x1778 (ite $x1762 $x1786 (ite $x1760 $x1783 $x1786)))))))
 (let (($x1771 (= c____________ left-to-center)))
 (let (($x1772 (and $x1771 $x1768)))
 (ite $x1772 $x1786 $x1800)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1528 (left s_____________)))
 (let ((?x1666 (left s______________)))
 (let (($x1926 (= ?x1666 ?x1528)))
 (let ((?x1562 (right s_____________)))
 (let ((?x1893 (top ?x1562)))
 (let ((?x1894 (stack ?x1893 ?x1528)))
 (let (($x1920 (= ?x1666 ?x1894)))
 (let (($x1896 ((_ is stack ) ?x1562)))
 (let (($x1899 (= c_____________ right-to-left)))
 (let (($x1900 (and $x1899 $x1896)))
 (let ((?x1748 (center s_____________)))
 (let (($x1901 ((_ is stack ) ?x1748)))
 (let (($x1902 (= c_____________ center-to-right)))
 (let (($x1903 (and $x1902 $x1901)))
 (let ((?x1889 (top ?x1748)))
 (let ((?x1890 (stack ?x1889 ?x1528)))
 (let (($x1917 (= ?x1666 ?x1890)))
 (let (($x1904 (= c_____________ center-to-left)))
 (let (($x1905 (and $x1904 $x1901)))
 (let ((?x1699 (rest ?x1528)))
 (let (($x1913 (= ?x1666 ?x1699)))
 (let (($x1906 ((_ is stack ) ?x1528)))
 (let (($x1907 (= c_____________ left-to-right)))
 (let (($x1908 (and $x1907 $x1906)))
 (let (($x1909 (= c_____________ left-to-center)))
 (let (($x1910 (and $x1909 $x1906)))
 (ite $x1910 $x1913 (ite $x1908 $x1913 (ite $x1905 $x1917 (ite $x1903 $x1926 (ite $x1900 $x1920 $x1926))))))))))))))))))))))))))))))))
(assert
 (let ((?x1562 (right s_____________)))
 (let ((?x1700 (right s______________)))
 (let (($x1922 (= ?x1700 ?x1562)))
 (let ((?x1892 (rest ?x1562)))
 (let (($x1919 (= ?x1700 ?x1892)))
 (let (($x1896 ((_ is stack ) ?x1562)))
 (let (($x1897 (= c_____________ right-to-center)))
 (let (($x1898 (and $x1897 $x1896)))
 (let (($x1899 (= c_____________ right-to-left)))
 (let (($x1900 (and $x1899 $x1896)))
 (let ((?x1748 (center s_____________)))
 (let ((?x1889 (top ?x1748)))
 (let ((?x1891 (stack ?x1889 ?x1562)))
 (let (($x1918 (= ?x1700 ?x1891)))
 (let (($x1901 ((_ is stack ) ?x1748)))
 (let (($x1902 (= c_____________ center-to-right)))
 (let (($x1903 (and $x1902 $x1901)))
 (let (($x1904 (= c_____________ center-to-left)))
 (let (($x1905 (and $x1904 $x1901)))
 (let ((?x1528 (left s_____________)))
 (let (($x1906 ((_ is stack ) ?x1528)))
 (let (($x1907 (= c_____________ left-to-right)))
 (let (($x1908 (and $x1907 $x1906)))
 (let (($x1939 (ite $x1908 $x1922 (ite $x1905 $x1922 (ite $x1903 $x1918 (ite $x1900 $x1919 (ite $x1898 $x1919 $x1922)))))))
 (let ((?x1746 (top ?x1528)))
 (let ((?x1885 (stack ?x1746 ?x1562)))
 (let (($x1914 (= ?x1700 ?x1885)))
 (let (($x1909 (= c_____________ left-to-center)))
 (let (($x1910 (and $x1909 $x1906)))
 (ite $x1910 $x1914 $x1939)))))))))))))))))))))))))))))))
(assert
 (let ((?x1748 (center s_____________)))
 (let ((?x1886 (center s______________)))
 (let (($x1924 (= ?x1886 ?x1748)))
 (let ((?x1562 (right s_____________)))
 (let ((?x1893 (top ?x1562)))
 (let ((?x1895 (stack ?x1893 ?x1748)))
 (let (($x1921 (= ?x1886 ?x1895)))
 (let (($x1896 ((_ is stack ) ?x1562)))
 (let (($x1897 (= c_____________ right-to-center)))
 (let (($x1898 (and $x1897 $x1896)))
 (let (($x1899 (= c_____________ right-to-left)))
 (let (($x1900 (and $x1899 $x1896)))
 (let ((?x1888 (rest ?x1748)))
 (let (($x1916 (= ?x1886 ?x1888)))
 (let (($x1901 ((_ is stack ) ?x1748)))
 (let (($x1902 (= c_____________ center-to-right)))
 (let (($x1903 (and $x1902 $x1901)))
 (let (($x1904 (= c_____________ center-to-left)))
 (let (($x1905 (and $x1904 $x1901)))
 (let ((?x1528 (left s_____________)))
 (let ((?x1746 (top ?x1528)))
 (let ((?x1887 (stack ?x1746 ?x1748)))
 (let (($x1915 (= ?x1886 ?x1887)))
 (let (($x1906 ((_ is stack ) ?x1528)))
 (let (($x1907 (= c_____________ left-to-right)))
 (let (($x1908 (and $x1907 $x1906)))
 (let (($x1938 (ite $x1908 $x1915 (ite $x1905 $x1916 (ite $x1903 $x1916 (ite $x1900 $x1924 (ite $x1898 $x1921 $x1924)))))))
 (let (($x1909 (= c_____________ left-to-center)))
 (let (($x1910 (and $x1909 $x1906)))
 (ite $x1910 $x1924 $x1938)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1666 (left s______________)))
 (let ((?x1804 (left s_______________)))
 (let (($x2064 (= ?x1804 ?x1666)))
 (let ((?x1700 (right s______________)))
 (let ((?x2031 (top ?x1700)))
 (let ((?x2032 (stack ?x2031 ?x1666)))
 (let (($x2058 (= ?x1804 ?x2032)))
 (let (($x2034 ((_ is stack ) ?x1700)))
 (let (($x2037 (= c______________ right-to-left)))
 (let (($x2038 (and $x2037 $x2034)))
 (let ((?x1886 (center s______________)))
 (let (($x2039 ((_ is stack ) ?x1886)))
 (let (($x2040 (= c______________ center-to-right)))
 (let (($x2041 (and $x2040 $x2039)))
 (let ((?x2027 (top ?x1886)))
 (let ((?x2028 (stack ?x2027 ?x1666)))
 (let (($x2055 (= ?x1804 ?x2028)))
 (let (($x2042 (= c______________ center-to-left)))
 (let (($x2043 (and $x2042 $x2039)))
 (let ((?x1837 (rest ?x1666)))
 (let (($x2051 (= ?x1804 ?x1837)))
 (let (($x2044 ((_ is stack ) ?x1666)))
 (let (($x2045 (= c______________ left-to-right)))
 (let (($x2046 (and $x2045 $x2044)))
 (let (($x2047 (= c______________ left-to-center)))
 (let (($x2048 (and $x2047 $x2044)))
 (ite $x2048 $x2051 (ite $x2046 $x2051 (ite $x2043 $x2055 (ite $x2041 $x2064 (ite $x2038 $x2058 $x2064))))))))))))))))))))))))))))))))
(assert
 (let ((?x1700 (right s______________)))
 (let ((?x1838 (right s_______________)))
 (let (($x2060 (= ?x1838 ?x1700)))
 (let ((?x2030 (rest ?x1700)))
 (let (($x2057 (= ?x1838 ?x2030)))
 (let (($x2034 ((_ is stack ) ?x1700)))
 (let (($x2035 (= c______________ right-to-center)))
 (let (($x2036 (and $x2035 $x2034)))
 (let (($x2037 (= c______________ right-to-left)))
 (let (($x2038 (and $x2037 $x2034)))
 (let ((?x1886 (center s______________)))
 (let ((?x2027 (top ?x1886)))
 (let ((?x2029 (stack ?x2027 ?x1700)))
 (let (($x2056 (= ?x1838 ?x2029)))
 (let (($x2039 ((_ is stack ) ?x1886)))
 (let (($x2040 (= c______________ center-to-right)))
 (let (($x2041 (and $x2040 $x2039)))
 (let (($x2042 (= c______________ center-to-left)))
 (let (($x2043 (and $x2042 $x2039)))
 (let ((?x1666 (left s______________)))
 (let (($x2044 ((_ is stack ) ?x1666)))
 (let (($x2045 (= c______________ left-to-right)))
 (let (($x2046 (and $x2045 $x2044)))
 (let (($x2077 (ite $x2046 $x2060 (ite $x2043 $x2060 (ite $x2041 $x2056 (ite $x2038 $x2057 (ite $x2036 $x2057 $x2060)))))))
 (let ((?x1884 (top ?x1666)))
 (let ((?x2023 (stack ?x1884 ?x1700)))
 (let (($x2052 (= ?x1838 ?x2023)))
 (let (($x2047 (= c______________ left-to-center)))
 (let (($x2048 (and $x2047 $x2044)))
 (ite $x2048 $x2052 $x2077)))))))))))))))))))))))))))))))
(assert
 (let ((?x1886 (center s______________)))
 (let ((?x2024 (center s_______________)))
 (let (($x2062 (= ?x2024 ?x1886)))
 (let ((?x1700 (right s______________)))
 (let ((?x2031 (top ?x1700)))
 (let ((?x2033 (stack ?x2031 ?x1886)))
 (let (($x2059 (= ?x2024 ?x2033)))
 (let (($x2034 ((_ is stack ) ?x1700)))
 (let (($x2035 (= c______________ right-to-center)))
 (let (($x2036 (and $x2035 $x2034)))
 (let (($x2037 (= c______________ right-to-left)))
 (let (($x2038 (and $x2037 $x2034)))
 (let ((?x2026 (rest ?x1886)))
 (let (($x2054 (= ?x2024 ?x2026)))
 (let (($x2039 ((_ is stack ) ?x1886)))
 (let (($x2040 (= c______________ center-to-right)))
 (let (($x2041 (and $x2040 $x2039)))
 (let (($x2042 (= c______________ center-to-left)))
 (let (($x2043 (and $x2042 $x2039)))
 (let ((?x1666 (left s______________)))
 (let ((?x1884 (top ?x1666)))
 (let ((?x2025 (stack ?x1884 ?x1886)))
 (let (($x2053 (= ?x2024 ?x2025)))
 (let (($x2044 ((_ is stack ) ?x1666)))
 (let (($x2045 (= c______________ left-to-right)))
 (let (($x2046 (and $x2045 $x2044)))
 (let (($x2076 (ite $x2046 $x2053 (ite $x2043 $x2054 (ite $x2041 $x2054 (ite $x2038 $x2062 (ite $x2036 $x2059 $x2062)))))))
 (let (($x2047 (= c______________ left-to-center)))
 (let (($x2048 (and $x2047 $x2044)))
 (ite $x2048 $x2062 $x2076)))))))))))))))))))))))))))))))
(assert
 (let ((?x61 (stack I (stack G (stack E (stack D (stack C (stack A empty))))))))
 (let ((?x65 (stack Q (stack O (stack L (stack K ?x61))))))
 (let ((?x1838 (right s_______________)))
 (let (($x2080 (= ?x1838 ?x65)))
 (let ((?x55 (stack F (stack J (stack R (stack N (stack B empty)))))))
 (let ((?x2024 (center s_______________)))
 (let (($x2111 (= ?x2024 ?x55)))
 (let ((?x50 (stack P (stack M (stack H empty)))))
 (let ((?x1804 (left s_______________)))
 (let (($x2112 (= ?x1804 ?x50)))
 (let (($x2114 (not (and $x2112 $x2111 $x2080))))
 (not $x2114)))))))))))))
(check-sat)
(exit)
