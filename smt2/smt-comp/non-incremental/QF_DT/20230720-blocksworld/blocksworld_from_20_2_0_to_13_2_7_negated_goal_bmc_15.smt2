(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T) (U) (V))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x35 (stack I empty)))
 (let ((?x34 (stack M ?x35)))
 (let ((?x36 (stack D ?x34)))
 (let ((?x37 (stack T ?x36)))
 (let ((?x38 (stack J ?x37)))
 (let ((?x39 (stack H ?x38)))
 (let ((?x40 (stack A ?x39)))
 (let ((?x41 (stack P ?x40)))
 (let ((?x42 (stack Q ?x41)))
 (let ((?x43 (stack O ?x42)))
 (let ((?x44 (stack V ?x43)))
 (let ((?x45 (stack L ?x44)))
 (let ((?x46 (stack E ?x45)))
 (let ((?x47 (stack S ?x46)))
 (let ((?x48 (stack B ?x47)))
 (let ((?x49 (stack G ?x48)))
 (let ((?x50 (stack K ?x49)))
 (let ((?x51 (stack F ?x50)))
 (let ((?x52 (stack U ?x51)))
 (let ((?x53 (stack N ?x52)))
 (let ((?x124 (left s_tmp_)))
 (= ?x124 ?x53)))))))))))))))))))))))
(assert
 (let ((?x54 (stack R empty)))
 (let ((?x55 (stack C ?x54)))
 (let ((?x127 (center s_tmp__)))
 (= ?x127 ?x55)))))
(assert
 (let ((?x130 (right s_tmp___)))
 (= ?x130 empty)))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x157 (left s_tmp__)))
 (= (left s_tmp___) ?x157)))
(assert
 (let ((?x127 (center s_tmp__)))
 (= (center s_tmp___) ?x127)))
(assert
 (let ((?x161 (center s_tmp_)))
 (= ?x161 (center s_tmp))))
(assert
 (let ((?x164 (right s_tmp_)))
 (= ?x164 (right s_tmp))))
(assert
 (let ((?x124 (left s_tmp_)))
 (let ((?x157 (left s_tmp__)))
 (= ?x157 ?x124))))
(assert
 (let ((?x164 (right s_tmp_)))
 (let ((?x168 (right s_tmp__)))
 (= ?x168 ?x164))))
(assert
 (= c__ c!1))
(assert
 (let ((?x101 (left s_)))
 (let ((?x296 (left s__)))
 (let (($x323 (= ?x296 ?x101)))
 (let ((?x104 (right s_)))
 (let (($x317 ((_ is stack ) ?x104)))
 (let (($x285 (and (= c_ right-to-left) $x317)))
 (let ((?x106 (center s_)))
 (let (($x286 ((_ is stack ) ?x106)))
 (let (($x287 (= c_ center-to-right)))
 (let (($x276 (and $x287 $x286)))
 (let (($x277 (= c_ center-to-left)))
 (let (($x278 (and $x277 $x286)))
 (let (($x332 (ite $x278 (= ?x296 (stack (top ?x106) ?x101)) (ite $x276 $x323 (ite $x285 (= ?x296 (stack (top ?x104) ?x101)) $x323)))))
 (let (($x280 (= ?x296 (rest ?x101))))
 (let (($x306 ((_ is stack ) ?x101)))
 (let (($x307 (= c_ left-to-right)))
 (let (($x308 (and $x307 $x306)))
 (let (($x318 (= c_ left-to-center)))
 (let (($x319 (and $x318 $x306)))
 (ite $x319 $x280 (ite $x308 $x280 $x332))))))))))))))))))))))
(assert
 (let ((?x104 (right s_)))
 (let ((?x304 (right s__)))
 (let (($x289 (= ?x304 ?x104)))
 (let (($x298 (= ?x304 (rest ?x104))))
 (let (($x317 ((_ is stack ) ?x104)))
 (let (($x313 (and (= c_ right-to-center) $x317)))
 (let (($x285 (and (= c_ right-to-left) $x317)))
 (let ((?x106 (center s_)))
 (let (($x286 ((_ is stack ) ?x106)))
 (let (($x287 (= c_ center-to-right)))
 (let (($x276 (and $x287 $x286)))
 (let (($x329 (ite $x276 (= ?x304 (stack (top ?x106) ?x104)) (ite $x285 $x298 (ite $x313 $x298 $x289)))))
 (let (($x277 (= c_ center-to-left)))
 (let (($x278 (and $x277 $x286)))
 (let ((?x101 (left s_)))
 (let (($x306 ((_ is stack ) ?x101)))
 (let (($x307 (= c_ left-to-right)))
 (let (($x308 (and $x307 $x306)))
 (let (($x318 (= c_ left-to-center)))
 (let (($x319 (and $x318 $x306)))
 (ite $x319 (= ?x304 (stack (top ?x101) ?x104)) (ite $x308 $x289 (ite $x278 $x289 $x329))))))))))))))))))))))))
(assert
 (let ((?x106 (center s_)))
 (let ((?x301 (center s__)))
 (let (($x321 (= ?x301 ?x106)))
 (let ((?x104 (right s_)))
 (let (($x317 ((_ is stack ) ?x104)))
 (let (($x313 (and (= c_ right-to-center) $x317)))
 (let (($x285 (and (= c_ right-to-left) $x317)))
 (let (($x310 (= ?x301 (rest ?x106))))
 (let (($x286 ((_ is stack ) ?x106)))
 (let (($x287 (= c_ center-to-right)))
 (let (($x276 (and $x287 $x286)))
 (let (($x328 (ite $x276 $x310 (ite $x285 $x321 (ite $x313 (= ?x301 (stack (top ?x104) ?x106)) $x321)))))
 (let (($x277 (= c_ center-to-left)))
 (let (($x278 (and $x277 $x286)))
 (let ((?x101 (left s_)))
 (let (($x306 ((_ is stack ) ?x101)))
 (let (($x307 (= c_ left-to-right)))
 (let (($x308 (and $x307 $x306)))
 (let (($x318 (= c_ left-to-center)))
 (let (($x319 (and $x318 $x306)))
 (ite $x319 $x321 (ite $x308 (= ?x301 (stack (top ?x101) ?x106)) (ite $x278 $x310 $x328))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x296 (left s__)))
 (let ((?x171 (left s___)))
 (let (($x433 (= ?x171 ?x296)))
 (let ((?x304 (right s__)))
 (let ((?x400 (top ?x304)))
 (let ((?x401 (stack ?x400 ?x296)))
 (let (($x427 (= ?x171 ?x401)))
 (let (($x403 ((_ is stack ) ?x304)))
 (let (($x406 (= c__ right-to-left)))
 (let (($x407 (and $x406 $x403)))
 (let ((?x301 (center s__)))
 (let (($x408 ((_ is stack ) ?x301)))
 (let (($x409 (= c__ center-to-right)))
 (let (($x410 (and $x409 $x408)))
 (let ((?x396 (top ?x301)))
 (let ((?x397 (stack ?x396 ?x296)))
 (let (($x424 (= ?x171 ?x397)))
 (let (($x411 (= c__ center-to-left)))
 (let (($x412 (and $x411 $x408)))
 (let ((?x173 (rest ?x296)))
 (let (($x420 (= ?x171 ?x173)))
 (let (($x413 ((_ is stack ) ?x296)))
 (let (($x414 (= c__ left-to-right)))
 (let (($x415 (and $x414 $x413)))
 (let (($x416 (= c__ left-to-center)))
 (let (($x417 (and $x416 $x413)))
 (ite $x417 $x420 (ite $x415 $x420 (ite $x412 $x424 (ite $x410 $x433 (ite $x407 $x427 $x433))))))))))))))))))))))))))))))))
(assert
 (let ((?x304 (right s__)))
 (let ((?x174 (right s___)))
 (let (($x429 (= ?x174 ?x304)))
 (let ((?x399 (rest ?x304)))
 (let (($x426 (= ?x174 ?x399)))
 (let (($x403 ((_ is stack ) ?x304)))
 (let (($x404 (= c__ right-to-center)))
 (let (($x405 (and $x404 $x403)))
 (let (($x406 (= c__ right-to-left)))
 (let (($x407 (and $x406 $x403)))
 (let ((?x301 (center s__)))
 (let ((?x396 (top ?x301)))
 (let ((?x398 (stack ?x396 ?x304)))
 (let (($x425 (= ?x174 ?x398)))
 (let (($x408 ((_ is stack ) ?x301)))
 (let (($x409 (= c__ center-to-right)))
 (let (($x410 (and $x409 $x408)))
 (let (($x411 (= c__ center-to-left)))
 (let (($x412 (and $x411 $x408)))
 (let ((?x296 (left s__)))
 (let (($x413 ((_ is stack ) ?x296)))
 (let (($x414 (= c__ left-to-right)))
 (let (($x415 (and $x414 $x413)))
 (let (($x446 (ite $x415 $x429 (ite $x412 $x429 (ite $x410 $x425 (ite $x407 $x426 (ite $x405 $x426 $x429)))))))
 (let ((?x275 (top ?x296)))
 (let ((?x392 (stack ?x275 ?x304)))
 (let (($x421 (= ?x174 ?x392)))
 (let (($x416 (= c__ left-to-center)))
 (let (($x417 (and $x416 $x413)))
 (ite $x417 $x421 $x446)))))))))))))))))))))))))))))))
(assert
 (let ((?x301 (center s__)))
 (let ((?x393 (center s___)))
 (let (($x431 (= ?x393 ?x301)))
 (let ((?x304 (right s__)))
 (let ((?x400 (top ?x304)))
 (let ((?x402 (stack ?x400 ?x301)))
 (let (($x428 (= ?x393 ?x402)))
 (let (($x403 ((_ is stack ) ?x304)))
 (let (($x404 (= c__ right-to-center)))
 (let (($x405 (and $x404 $x403)))
 (let (($x406 (= c__ right-to-left)))
 (let (($x407 (and $x406 $x403)))
 (let ((?x395 (rest ?x301)))
 (let (($x423 (= ?x393 ?x395)))
 (let (($x408 ((_ is stack ) ?x301)))
 (let (($x409 (= c__ center-to-right)))
 (let (($x410 (and $x409 $x408)))
 (let (($x411 (= c__ center-to-left)))
 (let (($x412 (and $x411 $x408)))
 (let ((?x296 (left s__)))
 (let ((?x275 (top ?x296)))
 (let ((?x394 (stack ?x275 ?x301)))
 (let (($x422 (= ?x393 ?x394)))
 (let (($x413 ((_ is stack ) ?x296)))
 (let (($x414 (= c__ left-to-right)))
 (let (($x415 (and $x414 $x413)))
 (let (($x445 (ite $x415 $x422 (ite $x412 $x423 (ite $x410 $x423 (ite $x407 $x431 (ite $x405 $x428 $x431)))))))
 (let (($x416 (= c__ left-to-center)))
 (let (($x417 (and $x416 $x413)))
 (ite $x417 $x431 $x445)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x171 (left s___)))
 (let ((?x339 (left s____)))
 (let (($x571 (= ?x339 ?x171)))
 (let ((?x174 (right s___)))
 (let ((?x538 (top ?x174)))
 (let ((?x539 (stack ?x538 ?x171)))
 (let (($x565 (= ?x339 ?x539)))
 (let (($x541 ((_ is stack ) ?x174)))
 (let (($x544 (= c___ right-to-left)))
 (let (($x545 (and $x544 $x541)))
 (let ((?x393 (center s___)))
 (let (($x546 ((_ is stack ) ?x393)))
 (let (($x547 (= c___ center-to-right)))
 (let (($x548 (and $x547 $x546)))
 (let ((?x534 (top ?x393)))
 (let ((?x535 (stack ?x534 ?x171)))
 (let (($x562 (= ?x339 ?x535)))
 (let (($x549 (= c___ center-to-left)))
 (let (($x550 (and $x549 $x546)))
 (let ((?x369 (rest ?x171)))
 (let (($x558 (= ?x339 ?x369)))
 (let (($x551 ((_ is stack ) ?x171)))
 (let (($x552 (= c___ left-to-right)))
 (let (($x553 (and $x552 $x551)))
 (let (($x554 (= c___ left-to-center)))
 (let (($x555 (and $x554 $x551)))
 (ite $x555 $x558 (ite $x553 $x558 (ite $x550 $x562 (ite $x548 $x571 (ite $x545 $x565 $x571))))))))))))))))))))))))))))))))
(assert
 (let ((?x174 (right s___)))
 (let ((?x370 (right s____)))
 (let (($x567 (= ?x370 ?x174)))
 (let ((?x537 (rest ?x174)))
 (let (($x564 (= ?x370 ?x537)))
 (let (($x541 ((_ is stack ) ?x174)))
 (let (($x542 (= c___ right-to-center)))
 (let (($x543 (and $x542 $x541)))
 (let (($x544 (= c___ right-to-left)))
 (let (($x545 (and $x544 $x541)))
 (let ((?x393 (center s___)))
 (let ((?x534 (top ?x393)))
 (let ((?x536 (stack ?x534 ?x174)))
 (let (($x563 (= ?x370 ?x536)))
 (let (($x546 ((_ is stack ) ?x393)))
 (let (($x547 (= c___ center-to-right)))
 (let (($x548 (and $x547 $x546)))
 (let (($x549 (= c___ center-to-left)))
 (let (($x550 (and $x549 $x546)))
 (let ((?x171 (left s___)))
 (let (($x551 ((_ is stack ) ?x171)))
 (let (($x552 (= c___ left-to-right)))
 (let (($x553 (and $x552 $x551)))
 (let (($x584 (ite $x553 $x567 (ite $x550 $x567 (ite $x548 $x563 (ite $x545 $x564 (ite $x543 $x564 $x567)))))))
 (let ((?x391 (top ?x171)))
 (let ((?x530 (stack ?x391 ?x174)))
 (let (($x559 (= ?x370 ?x530)))
 (let (($x554 (= c___ left-to-center)))
 (let (($x555 (and $x554 $x551)))
 (ite $x555 $x559 $x584)))))))))))))))))))))))))))))))
(assert
 (let ((?x393 (center s___)))
 (let ((?x531 (center s____)))
 (let (($x569 (= ?x531 ?x393)))
 (let ((?x174 (right s___)))
 (let ((?x538 (top ?x174)))
 (let ((?x540 (stack ?x538 ?x393)))
 (let (($x566 (= ?x531 ?x540)))
 (let (($x541 ((_ is stack ) ?x174)))
 (let (($x542 (= c___ right-to-center)))
 (let (($x543 (and $x542 $x541)))
 (let (($x544 (= c___ right-to-left)))
 (let (($x545 (and $x544 $x541)))
 (let ((?x533 (rest ?x393)))
 (let (($x561 (= ?x531 ?x533)))
 (let (($x546 ((_ is stack ) ?x393)))
 (let (($x547 (= c___ center-to-right)))
 (let (($x548 (and $x547 $x546)))
 (let (($x549 (= c___ center-to-left)))
 (let (($x550 (and $x549 $x546)))
 (let ((?x171 (left s___)))
 (let ((?x391 (top ?x171)))
 (let ((?x532 (stack ?x391 ?x393)))
 (let (($x560 (= ?x531 ?x532)))
 (let (($x551 ((_ is stack ) ?x171)))
 (let (($x552 (= c___ left-to-right)))
 (let (($x553 (and $x552 $x551)))
 (let (($x583 (ite $x553 $x560 (ite $x550 $x561 (ite $x548 $x561 (ite $x545 $x569 (ite $x543 $x566 $x569)))))))
 (let (($x554 (= c___ left-to-center)))
 (let (($x555 (and $x554 $x551)))
 (ite $x555 $x569 $x583)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x339 (left s____)))
 (let ((?x449 (left s_____)))
 (let (($x709 (= ?x449 ?x339)))
 (let ((?x370 (right s____)))
 (let ((?x676 (top ?x370)))
 (let ((?x677 (stack ?x676 ?x339)))
 (let (($x703 (= ?x449 ?x677)))
 (let (($x679 ((_ is stack ) ?x370)))
 (let (($x682 (= c____ right-to-left)))
 (let (($x683 (and $x682 $x679)))
 (let ((?x531 (center s____)))
 (let (($x684 ((_ is stack ) ?x531)))
 (let (($x685 (= c____ center-to-right)))
 (let (($x686 (and $x685 $x684)))
 (let ((?x672 (top ?x531)))
 (let ((?x673 (stack ?x672 ?x339)))
 (let (($x700 (= ?x449 ?x673)))
 (let (($x687 (= c____ center-to-left)))
 (let (($x688 (and $x687 $x684)))
 (let ((?x482 (rest ?x339)))
 (let (($x696 (= ?x449 ?x482)))
 (let (($x689 ((_ is stack ) ?x339)))
 (let (($x690 (= c____ left-to-right)))
 (let (($x691 (and $x690 $x689)))
 (let (($x692 (= c____ left-to-center)))
 (let (($x693 (and $x692 $x689)))
 (ite $x693 $x696 (ite $x691 $x696 (ite $x688 $x700 (ite $x686 $x709 (ite $x683 $x703 $x709))))))))))))))))))))))))))))))))
(assert
 (let ((?x370 (right s____)))
 (let ((?x483 (right s_____)))
 (let (($x705 (= ?x483 ?x370)))
 (let ((?x675 (rest ?x370)))
 (let (($x702 (= ?x483 ?x675)))
 (let (($x679 ((_ is stack ) ?x370)))
 (let (($x680 (= c____ right-to-center)))
 (let (($x681 (and $x680 $x679)))
 (let (($x682 (= c____ right-to-left)))
 (let (($x683 (and $x682 $x679)))
 (let ((?x531 (center s____)))
 (let ((?x672 (top ?x531)))
 (let ((?x674 (stack ?x672 ?x370)))
 (let (($x701 (= ?x483 ?x674)))
 (let (($x684 ((_ is stack ) ?x531)))
 (let (($x685 (= c____ center-to-right)))
 (let (($x686 (and $x685 $x684)))
 (let (($x687 (= c____ center-to-left)))
 (let (($x688 (and $x687 $x684)))
 (let ((?x339 (left s____)))
 (let (($x689 ((_ is stack ) ?x339)))
 (let (($x690 (= c____ left-to-right)))
 (let (($x691 (and $x690 $x689)))
 (let (($x722 (ite $x691 $x705 (ite $x688 $x705 (ite $x686 $x701 (ite $x683 $x702 (ite $x681 $x702 $x705)))))))
 (let ((?x529 (top ?x339)))
 (let ((?x668 (stack ?x529 ?x370)))
 (let (($x697 (= ?x483 ?x668)))
 (let (($x692 (= c____ left-to-center)))
 (let (($x693 (and $x692 $x689)))
 (ite $x693 $x697 $x722)))))))))))))))))))))))))))))))
(assert
 (let ((?x531 (center s____)))
 (let ((?x669 (center s_____)))
 (let (($x707 (= ?x669 ?x531)))
 (let ((?x370 (right s____)))
 (let ((?x676 (top ?x370)))
 (let ((?x678 (stack ?x676 ?x531)))
 (let (($x704 (= ?x669 ?x678)))
 (let (($x679 ((_ is stack ) ?x370)))
 (let (($x680 (= c____ right-to-center)))
 (let (($x681 (and $x680 $x679)))
 (let (($x682 (= c____ right-to-left)))
 (let (($x683 (and $x682 $x679)))
 (let ((?x671 (rest ?x531)))
 (let (($x699 (= ?x669 ?x671)))
 (let (($x684 ((_ is stack ) ?x531)))
 (let (($x685 (= c____ center-to-right)))
 (let (($x686 (and $x685 $x684)))
 (let (($x687 (= c____ center-to-left)))
 (let (($x688 (and $x687 $x684)))
 (let ((?x339 (left s____)))
 (let ((?x529 (top ?x339)))
 (let ((?x670 (stack ?x529 ?x531)))
 (let (($x698 (= ?x669 ?x670)))
 (let (($x689 ((_ is stack ) ?x339)))
 (let (($x690 (= c____ left-to-right)))
 (let (($x691 (and $x690 $x689)))
 (let (($x721 (ite $x691 $x698 (ite $x688 $x699 (ite $x686 $x699 (ite $x683 $x707 (ite $x681 $x704 $x707)))))))
 (let (($x692 (= c____ left-to-center)))
 (let (($x693 (and $x692 $x689)))
 (ite $x693 $x707 $x721)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x449 (left s_____)))
 (let ((?x587 (left s______)))
 (let (($x847 (= ?x587 ?x449)))
 (let ((?x483 (right s_____)))
 (let ((?x814 (top ?x483)))
 (let ((?x815 (stack ?x814 ?x449)))
 (let (($x841 (= ?x587 ?x815)))
 (let (($x817 ((_ is stack ) ?x483)))
 (let (($x820 (= c_____ right-to-left)))
 (let (($x821 (and $x820 $x817)))
 (let ((?x669 (center s_____)))
 (let (($x822 ((_ is stack ) ?x669)))
 (let (($x823 (= c_____ center-to-right)))
 (let (($x824 (and $x823 $x822)))
 (let ((?x810 (top ?x669)))
 (let ((?x811 (stack ?x810 ?x449)))
 (let (($x838 (= ?x587 ?x811)))
 (let (($x825 (= c_____ center-to-left)))
 (let (($x826 (and $x825 $x822)))
 (let ((?x620 (rest ?x449)))
 (let (($x834 (= ?x587 ?x620)))
 (let (($x827 ((_ is stack ) ?x449)))
 (let (($x828 (= c_____ left-to-right)))
 (let (($x829 (and $x828 $x827)))
 (let (($x830 (= c_____ left-to-center)))
 (let (($x831 (and $x830 $x827)))
 (ite $x831 $x834 (ite $x829 $x834 (ite $x826 $x838 (ite $x824 $x847 (ite $x821 $x841 $x847))))))))))))))))))))))))))))))))
(assert
 (let ((?x483 (right s_____)))
 (let ((?x621 (right s______)))
 (let (($x843 (= ?x621 ?x483)))
 (let ((?x813 (rest ?x483)))
 (let (($x840 (= ?x621 ?x813)))
 (let (($x817 ((_ is stack ) ?x483)))
 (let (($x818 (= c_____ right-to-center)))
 (let (($x819 (and $x818 $x817)))
 (let (($x820 (= c_____ right-to-left)))
 (let (($x821 (and $x820 $x817)))
 (let ((?x669 (center s_____)))
 (let ((?x810 (top ?x669)))
 (let ((?x812 (stack ?x810 ?x483)))
 (let (($x839 (= ?x621 ?x812)))
 (let (($x822 ((_ is stack ) ?x669)))
 (let (($x823 (= c_____ center-to-right)))
 (let (($x824 (and $x823 $x822)))
 (let (($x825 (= c_____ center-to-left)))
 (let (($x826 (and $x825 $x822)))
 (let ((?x449 (left s_____)))
 (let (($x827 ((_ is stack ) ?x449)))
 (let (($x828 (= c_____ left-to-right)))
 (let (($x829 (and $x828 $x827)))
 (let (($x860 (ite $x829 $x843 (ite $x826 $x843 (ite $x824 $x839 (ite $x821 $x840 (ite $x819 $x840 $x843)))))))
 (let ((?x667 (top ?x449)))
 (let ((?x806 (stack ?x667 ?x483)))
 (let (($x835 (= ?x621 ?x806)))
 (let (($x830 (= c_____ left-to-center)))
 (let (($x831 (and $x830 $x827)))
 (ite $x831 $x835 $x860)))))))))))))))))))))))))))))))
(assert
 (let ((?x669 (center s_____)))
 (let ((?x807 (center s______)))
 (let (($x845 (= ?x807 ?x669)))
 (let ((?x483 (right s_____)))
 (let ((?x814 (top ?x483)))
 (let ((?x816 (stack ?x814 ?x669)))
 (let (($x842 (= ?x807 ?x816)))
 (let (($x817 ((_ is stack ) ?x483)))
 (let (($x818 (= c_____ right-to-center)))
 (let (($x819 (and $x818 $x817)))
 (let (($x820 (= c_____ right-to-left)))
 (let (($x821 (and $x820 $x817)))
 (let ((?x809 (rest ?x669)))
 (let (($x837 (= ?x807 ?x809)))
 (let (($x822 ((_ is stack ) ?x669)))
 (let (($x823 (= c_____ center-to-right)))
 (let (($x824 (and $x823 $x822)))
 (let (($x825 (= c_____ center-to-left)))
 (let (($x826 (and $x825 $x822)))
 (let ((?x449 (left s_____)))
 (let ((?x667 (top ?x449)))
 (let ((?x808 (stack ?x667 ?x669)))
 (let (($x836 (= ?x807 ?x808)))
 (let (($x827 ((_ is stack ) ?x449)))
 (let (($x828 (= c_____ left-to-right)))
 (let (($x829 (and $x828 $x827)))
 (let (($x859 (ite $x829 $x836 (ite $x826 $x837 (ite $x824 $x837 (ite $x821 $x845 (ite $x819 $x842 $x845)))))))
 (let (($x830 (= c_____ left-to-center)))
 (let (($x831 (and $x830 $x827)))
 (ite $x831 $x845 $x859)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x587 (left s______)))
 (let ((?x725 (left s_______)))
 (let (($x985 (= ?x725 ?x587)))
 (let ((?x621 (right s______)))
 (let ((?x952 (top ?x621)))
 (let ((?x953 (stack ?x952 ?x587)))
 (let (($x979 (= ?x725 ?x953)))
 (let (($x955 ((_ is stack ) ?x621)))
 (let (($x958 (= c______ right-to-left)))
 (let (($x959 (and $x958 $x955)))
 (let ((?x807 (center s______)))
 (let (($x960 ((_ is stack ) ?x807)))
 (let (($x961 (= c______ center-to-right)))
 (let (($x962 (and $x961 $x960)))
 (let ((?x948 (top ?x807)))
 (let ((?x949 (stack ?x948 ?x587)))
 (let (($x976 (= ?x725 ?x949)))
 (let (($x963 (= c______ center-to-left)))
 (let (($x964 (and $x963 $x960)))
 (let ((?x758 (rest ?x587)))
 (let (($x972 (= ?x725 ?x758)))
 (let (($x965 ((_ is stack ) ?x587)))
 (let (($x966 (= c______ left-to-right)))
 (let (($x967 (and $x966 $x965)))
 (let (($x968 (= c______ left-to-center)))
 (let (($x969 (and $x968 $x965)))
 (ite $x969 $x972 (ite $x967 $x972 (ite $x964 $x976 (ite $x962 $x985 (ite $x959 $x979 $x985))))))))))))))))))))))))))))))))
(assert
 (let ((?x621 (right s______)))
 (let ((?x759 (right s_______)))
 (let (($x981 (= ?x759 ?x621)))
 (let ((?x951 (rest ?x621)))
 (let (($x978 (= ?x759 ?x951)))
 (let (($x955 ((_ is stack ) ?x621)))
 (let (($x956 (= c______ right-to-center)))
 (let (($x957 (and $x956 $x955)))
 (let (($x958 (= c______ right-to-left)))
 (let (($x959 (and $x958 $x955)))
 (let ((?x807 (center s______)))
 (let ((?x948 (top ?x807)))
 (let ((?x950 (stack ?x948 ?x621)))
 (let (($x977 (= ?x759 ?x950)))
 (let (($x960 ((_ is stack ) ?x807)))
 (let (($x961 (= c______ center-to-right)))
 (let (($x962 (and $x961 $x960)))
 (let (($x963 (= c______ center-to-left)))
 (let (($x964 (and $x963 $x960)))
 (let ((?x587 (left s______)))
 (let (($x965 ((_ is stack ) ?x587)))
 (let (($x966 (= c______ left-to-right)))
 (let (($x967 (and $x966 $x965)))
 (let (($x998 (ite $x967 $x981 (ite $x964 $x981 (ite $x962 $x977 (ite $x959 $x978 (ite $x957 $x978 $x981)))))))
 (let ((?x805 (top ?x587)))
 (let ((?x944 (stack ?x805 ?x621)))
 (let (($x973 (= ?x759 ?x944)))
 (let (($x968 (= c______ left-to-center)))
 (let (($x969 (and $x968 $x965)))
 (ite $x969 $x973 $x998)))))))))))))))))))))))))))))))
(assert
 (let ((?x807 (center s______)))
 (let ((?x945 (center s_______)))
 (let (($x983 (= ?x945 ?x807)))
 (let ((?x621 (right s______)))
 (let ((?x952 (top ?x621)))
 (let ((?x954 (stack ?x952 ?x807)))
 (let (($x980 (= ?x945 ?x954)))
 (let (($x955 ((_ is stack ) ?x621)))
 (let (($x956 (= c______ right-to-center)))
 (let (($x957 (and $x956 $x955)))
 (let (($x958 (= c______ right-to-left)))
 (let (($x959 (and $x958 $x955)))
 (let ((?x947 (rest ?x807)))
 (let (($x975 (= ?x945 ?x947)))
 (let (($x960 ((_ is stack ) ?x807)))
 (let (($x961 (= c______ center-to-right)))
 (let (($x962 (and $x961 $x960)))
 (let (($x963 (= c______ center-to-left)))
 (let (($x964 (and $x963 $x960)))
 (let ((?x587 (left s______)))
 (let ((?x805 (top ?x587)))
 (let ((?x946 (stack ?x805 ?x807)))
 (let (($x974 (= ?x945 ?x946)))
 (let (($x965 ((_ is stack ) ?x587)))
 (let (($x966 (= c______ left-to-right)))
 (let (($x967 (and $x966 $x965)))
 (let (($x997 (ite $x967 $x974 (ite $x964 $x975 (ite $x962 $x975 (ite $x959 $x983 (ite $x957 $x980 $x983)))))))
 (let (($x968 (= c______ left-to-center)))
 (let (($x969 (and $x968 $x965)))
 (ite $x969 $x983 $x997)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x725 (left s_______)))
 (let ((?x863 (left s________)))
 (let (($x1123 (= ?x863 ?x725)))
 (let ((?x759 (right s_______)))
 (let ((?x1090 (top ?x759)))
 (let ((?x1091 (stack ?x1090 ?x725)))
 (let (($x1117 (= ?x863 ?x1091)))
 (let (($x1093 ((_ is stack ) ?x759)))
 (let (($x1096 (= c_______ right-to-left)))
 (let (($x1097 (and $x1096 $x1093)))
 (let ((?x945 (center s_______)))
 (let (($x1098 ((_ is stack ) ?x945)))
 (let (($x1099 (= c_______ center-to-right)))
 (let (($x1100 (and $x1099 $x1098)))
 (let ((?x1086 (top ?x945)))
 (let ((?x1087 (stack ?x1086 ?x725)))
 (let (($x1114 (= ?x863 ?x1087)))
 (let (($x1101 (= c_______ center-to-left)))
 (let (($x1102 (and $x1101 $x1098)))
 (let ((?x896 (rest ?x725)))
 (let (($x1110 (= ?x863 ?x896)))
 (let (($x1103 ((_ is stack ) ?x725)))
 (let (($x1104 (= c_______ left-to-right)))
 (let (($x1105 (and $x1104 $x1103)))
 (let (($x1106 (= c_______ left-to-center)))
 (let (($x1107 (and $x1106 $x1103)))
 (ite $x1107 $x1110 (ite $x1105 $x1110 (ite $x1102 $x1114 (ite $x1100 $x1123 (ite $x1097 $x1117 $x1123))))))))))))))))))))))))))))))))
(assert
 (let ((?x759 (right s_______)))
 (let ((?x897 (right s________)))
 (let (($x1119 (= ?x897 ?x759)))
 (let ((?x1089 (rest ?x759)))
 (let (($x1116 (= ?x897 ?x1089)))
 (let (($x1093 ((_ is stack ) ?x759)))
 (let (($x1094 (= c_______ right-to-center)))
 (let (($x1095 (and $x1094 $x1093)))
 (let (($x1096 (= c_______ right-to-left)))
 (let (($x1097 (and $x1096 $x1093)))
 (let ((?x945 (center s_______)))
 (let ((?x1086 (top ?x945)))
 (let ((?x1088 (stack ?x1086 ?x759)))
 (let (($x1115 (= ?x897 ?x1088)))
 (let (($x1098 ((_ is stack ) ?x945)))
 (let (($x1099 (= c_______ center-to-right)))
 (let (($x1100 (and $x1099 $x1098)))
 (let (($x1101 (= c_______ center-to-left)))
 (let (($x1102 (and $x1101 $x1098)))
 (let ((?x725 (left s_______)))
 (let (($x1103 ((_ is stack ) ?x725)))
 (let (($x1104 (= c_______ left-to-right)))
 (let (($x1105 (and $x1104 $x1103)))
 (let (($x1136 (ite $x1105 $x1119 (ite $x1102 $x1119 (ite $x1100 $x1115 (ite $x1097 $x1116 (ite $x1095 $x1116 $x1119)))))))
 (let ((?x943 (top ?x725)))
 (let ((?x1082 (stack ?x943 ?x759)))
 (let (($x1111 (= ?x897 ?x1082)))
 (let (($x1106 (= c_______ left-to-center)))
 (let (($x1107 (and $x1106 $x1103)))
 (ite $x1107 $x1111 $x1136)))))))))))))))))))))))))))))))
(assert
 (let ((?x945 (center s_______)))
 (let ((?x1083 (center s________)))
 (let (($x1121 (= ?x1083 ?x945)))
 (let ((?x759 (right s_______)))
 (let ((?x1090 (top ?x759)))
 (let ((?x1092 (stack ?x1090 ?x945)))
 (let (($x1118 (= ?x1083 ?x1092)))
 (let (($x1093 ((_ is stack ) ?x759)))
 (let (($x1094 (= c_______ right-to-center)))
 (let (($x1095 (and $x1094 $x1093)))
 (let (($x1096 (= c_______ right-to-left)))
 (let (($x1097 (and $x1096 $x1093)))
 (let ((?x1085 (rest ?x945)))
 (let (($x1113 (= ?x1083 ?x1085)))
 (let (($x1098 ((_ is stack ) ?x945)))
 (let (($x1099 (= c_______ center-to-right)))
 (let (($x1100 (and $x1099 $x1098)))
 (let (($x1101 (= c_______ center-to-left)))
 (let (($x1102 (and $x1101 $x1098)))
 (let ((?x725 (left s_______)))
 (let ((?x943 (top ?x725)))
 (let ((?x1084 (stack ?x943 ?x945)))
 (let (($x1112 (= ?x1083 ?x1084)))
 (let (($x1103 ((_ is stack ) ?x725)))
 (let (($x1104 (= c_______ left-to-right)))
 (let (($x1105 (and $x1104 $x1103)))
 (let (($x1135 (ite $x1105 $x1112 (ite $x1102 $x1113 (ite $x1100 $x1113 (ite $x1097 $x1121 (ite $x1095 $x1118 $x1121)))))))
 (let (($x1106 (= c_______ left-to-center)))
 (let (($x1107 (and $x1106 $x1103)))
 (ite $x1107 $x1121 $x1135)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x863 (left s________)))
 (let ((?x1001 (left s_________)))
 (let (($x1261 (= ?x1001 ?x863)))
 (let ((?x897 (right s________)))
 (let ((?x1228 (top ?x897)))
 (let ((?x1229 (stack ?x1228 ?x863)))
 (let (($x1255 (= ?x1001 ?x1229)))
 (let (($x1231 ((_ is stack ) ?x897)))
 (let (($x1234 (= c________ right-to-left)))
 (let (($x1235 (and $x1234 $x1231)))
 (let ((?x1083 (center s________)))
 (let (($x1236 ((_ is stack ) ?x1083)))
 (let (($x1237 (= c________ center-to-right)))
 (let (($x1238 (and $x1237 $x1236)))
 (let ((?x1224 (top ?x1083)))
 (let ((?x1225 (stack ?x1224 ?x863)))
 (let (($x1252 (= ?x1001 ?x1225)))
 (let (($x1239 (= c________ center-to-left)))
 (let (($x1240 (and $x1239 $x1236)))
 (let ((?x1034 (rest ?x863)))
 (let (($x1248 (= ?x1001 ?x1034)))
 (let (($x1241 ((_ is stack ) ?x863)))
 (let (($x1242 (= c________ left-to-right)))
 (let (($x1243 (and $x1242 $x1241)))
 (let (($x1244 (= c________ left-to-center)))
 (let (($x1245 (and $x1244 $x1241)))
 (ite $x1245 $x1248 (ite $x1243 $x1248 (ite $x1240 $x1252 (ite $x1238 $x1261 (ite $x1235 $x1255 $x1261))))))))))))))))))))))))))))))))
(assert
 (let ((?x897 (right s________)))
 (let ((?x1035 (right s_________)))
 (let (($x1257 (= ?x1035 ?x897)))
 (let ((?x1227 (rest ?x897)))
 (let (($x1254 (= ?x1035 ?x1227)))
 (let (($x1231 ((_ is stack ) ?x897)))
 (let (($x1232 (= c________ right-to-center)))
 (let (($x1233 (and $x1232 $x1231)))
 (let (($x1234 (= c________ right-to-left)))
 (let (($x1235 (and $x1234 $x1231)))
 (let ((?x1083 (center s________)))
 (let ((?x1224 (top ?x1083)))
 (let ((?x1226 (stack ?x1224 ?x897)))
 (let (($x1253 (= ?x1035 ?x1226)))
 (let (($x1236 ((_ is stack ) ?x1083)))
 (let (($x1237 (= c________ center-to-right)))
 (let (($x1238 (and $x1237 $x1236)))
 (let (($x1239 (= c________ center-to-left)))
 (let (($x1240 (and $x1239 $x1236)))
 (let ((?x863 (left s________)))
 (let (($x1241 ((_ is stack ) ?x863)))
 (let (($x1242 (= c________ left-to-right)))
 (let (($x1243 (and $x1242 $x1241)))
 (let (($x1274 (ite $x1243 $x1257 (ite $x1240 $x1257 (ite $x1238 $x1253 (ite $x1235 $x1254 (ite $x1233 $x1254 $x1257)))))))
 (let ((?x1081 (top ?x863)))
 (let ((?x1220 (stack ?x1081 ?x897)))
 (let (($x1249 (= ?x1035 ?x1220)))
 (let (($x1244 (= c________ left-to-center)))
 (let (($x1245 (and $x1244 $x1241)))
 (ite $x1245 $x1249 $x1274)))))))))))))))))))))))))))))))
(assert
 (let ((?x1083 (center s________)))
 (let ((?x1221 (center s_________)))
 (let (($x1259 (= ?x1221 ?x1083)))
 (let ((?x897 (right s________)))
 (let ((?x1228 (top ?x897)))
 (let ((?x1230 (stack ?x1228 ?x1083)))
 (let (($x1256 (= ?x1221 ?x1230)))
 (let (($x1231 ((_ is stack ) ?x897)))
 (let (($x1232 (= c________ right-to-center)))
 (let (($x1233 (and $x1232 $x1231)))
 (let (($x1234 (= c________ right-to-left)))
 (let (($x1235 (and $x1234 $x1231)))
 (let ((?x1223 (rest ?x1083)))
 (let (($x1251 (= ?x1221 ?x1223)))
 (let (($x1236 ((_ is stack ) ?x1083)))
 (let (($x1237 (= c________ center-to-right)))
 (let (($x1238 (and $x1237 $x1236)))
 (let (($x1239 (= c________ center-to-left)))
 (let (($x1240 (and $x1239 $x1236)))
 (let ((?x863 (left s________)))
 (let ((?x1081 (top ?x863)))
 (let ((?x1222 (stack ?x1081 ?x1083)))
 (let (($x1250 (= ?x1221 ?x1222)))
 (let (($x1241 ((_ is stack ) ?x863)))
 (let (($x1242 (= c________ left-to-right)))
 (let (($x1243 (and $x1242 $x1241)))
 (let (($x1273 (ite $x1243 $x1250 (ite $x1240 $x1251 (ite $x1238 $x1251 (ite $x1235 $x1259 (ite $x1233 $x1256 $x1259)))))))
 (let (($x1244 (= c________ left-to-center)))
 (let (($x1245 (and $x1244 $x1241)))
 (ite $x1245 $x1259 $x1273)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x1001 (left s_________)))
 (let ((?x1139 (left s__________)))
 (let (($x1399 (= ?x1139 ?x1001)))
 (let ((?x1035 (right s_________)))
 (let ((?x1366 (top ?x1035)))
 (let ((?x1367 (stack ?x1366 ?x1001)))
 (let (($x1393 (= ?x1139 ?x1367)))
 (let (($x1369 ((_ is stack ) ?x1035)))
 (let (($x1372 (= c_________ right-to-left)))
 (let (($x1373 (and $x1372 $x1369)))
 (let ((?x1221 (center s_________)))
 (let (($x1374 ((_ is stack ) ?x1221)))
 (let (($x1375 (= c_________ center-to-right)))
 (let (($x1376 (and $x1375 $x1374)))
 (let ((?x1362 (top ?x1221)))
 (let ((?x1363 (stack ?x1362 ?x1001)))
 (let (($x1390 (= ?x1139 ?x1363)))
 (let (($x1377 (= c_________ center-to-left)))
 (let (($x1378 (and $x1377 $x1374)))
 (let ((?x1172 (rest ?x1001)))
 (let (($x1386 (= ?x1139 ?x1172)))
 (let (($x1379 ((_ is stack ) ?x1001)))
 (let (($x1380 (= c_________ left-to-right)))
 (let (($x1381 (and $x1380 $x1379)))
 (let (($x1382 (= c_________ left-to-center)))
 (let (($x1383 (and $x1382 $x1379)))
 (ite $x1383 $x1386 (ite $x1381 $x1386 (ite $x1378 $x1390 (ite $x1376 $x1399 (ite $x1373 $x1393 $x1399))))))))))))))))))))))))))))))))
(assert
 (let ((?x1035 (right s_________)))
 (let ((?x1173 (right s__________)))
 (let (($x1395 (= ?x1173 ?x1035)))
 (let ((?x1365 (rest ?x1035)))
 (let (($x1392 (= ?x1173 ?x1365)))
 (let (($x1369 ((_ is stack ) ?x1035)))
 (let (($x1370 (= c_________ right-to-center)))
 (let (($x1371 (and $x1370 $x1369)))
 (let (($x1372 (= c_________ right-to-left)))
 (let (($x1373 (and $x1372 $x1369)))
 (let ((?x1221 (center s_________)))
 (let ((?x1362 (top ?x1221)))
 (let ((?x1364 (stack ?x1362 ?x1035)))
 (let (($x1391 (= ?x1173 ?x1364)))
 (let (($x1374 ((_ is stack ) ?x1221)))
 (let (($x1375 (= c_________ center-to-right)))
 (let (($x1376 (and $x1375 $x1374)))
 (let (($x1377 (= c_________ center-to-left)))
 (let (($x1378 (and $x1377 $x1374)))
 (let ((?x1001 (left s_________)))
 (let (($x1379 ((_ is stack ) ?x1001)))
 (let (($x1380 (= c_________ left-to-right)))
 (let (($x1381 (and $x1380 $x1379)))
 (let (($x1412 (ite $x1381 $x1395 (ite $x1378 $x1395 (ite $x1376 $x1391 (ite $x1373 $x1392 (ite $x1371 $x1392 $x1395)))))))
 (let ((?x1219 (top ?x1001)))
 (let ((?x1358 (stack ?x1219 ?x1035)))
 (let (($x1387 (= ?x1173 ?x1358)))
 (let (($x1382 (= c_________ left-to-center)))
 (let (($x1383 (and $x1382 $x1379)))
 (ite $x1383 $x1387 $x1412)))))))))))))))))))))))))))))))
(assert
 (let ((?x1221 (center s_________)))
 (let ((?x1359 (center s__________)))
 (let (($x1397 (= ?x1359 ?x1221)))
 (let ((?x1035 (right s_________)))
 (let ((?x1366 (top ?x1035)))
 (let ((?x1368 (stack ?x1366 ?x1221)))
 (let (($x1394 (= ?x1359 ?x1368)))
 (let (($x1369 ((_ is stack ) ?x1035)))
 (let (($x1370 (= c_________ right-to-center)))
 (let (($x1371 (and $x1370 $x1369)))
 (let (($x1372 (= c_________ right-to-left)))
 (let (($x1373 (and $x1372 $x1369)))
 (let ((?x1361 (rest ?x1221)))
 (let (($x1389 (= ?x1359 ?x1361)))
 (let (($x1374 ((_ is stack ) ?x1221)))
 (let (($x1375 (= c_________ center-to-right)))
 (let (($x1376 (and $x1375 $x1374)))
 (let (($x1377 (= c_________ center-to-left)))
 (let (($x1378 (and $x1377 $x1374)))
 (let ((?x1001 (left s_________)))
 (let ((?x1219 (top ?x1001)))
 (let ((?x1360 (stack ?x1219 ?x1221)))
 (let (($x1388 (= ?x1359 ?x1360)))
 (let (($x1379 ((_ is stack ) ?x1001)))
 (let (($x1380 (= c_________ left-to-right)))
 (let (($x1381 (and $x1380 $x1379)))
 (let (($x1411 (ite $x1381 $x1388 (ite $x1378 $x1389 (ite $x1376 $x1389 (ite $x1373 $x1397 (ite $x1371 $x1394 $x1397)))))))
 (let (($x1382 (= c_________ left-to-center)))
 (let (($x1383 (and $x1382 $x1379)))
 (ite $x1383 $x1397 $x1411)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1139 (left s__________)))
 (let ((?x1277 (left s___________)))
 (let (($x1537 (= ?x1277 ?x1139)))
 (let ((?x1173 (right s__________)))
 (let ((?x1504 (top ?x1173)))
 (let ((?x1505 (stack ?x1504 ?x1139)))
 (let (($x1531 (= ?x1277 ?x1505)))
 (let (($x1507 ((_ is stack ) ?x1173)))
 (let (($x1510 (= c__________ right-to-left)))
 (let (($x1511 (and $x1510 $x1507)))
 (let ((?x1359 (center s__________)))
 (let (($x1512 ((_ is stack ) ?x1359)))
 (let (($x1513 (= c__________ center-to-right)))
 (let (($x1514 (and $x1513 $x1512)))
 (let ((?x1500 (top ?x1359)))
 (let ((?x1501 (stack ?x1500 ?x1139)))
 (let (($x1528 (= ?x1277 ?x1501)))
 (let (($x1515 (= c__________ center-to-left)))
 (let (($x1516 (and $x1515 $x1512)))
 (let ((?x1310 (rest ?x1139)))
 (let (($x1524 (= ?x1277 ?x1310)))
 (let (($x1517 ((_ is stack ) ?x1139)))
 (let (($x1518 (= c__________ left-to-right)))
 (let (($x1519 (and $x1518 $x1517)))
 (let (($x1520 (= c__________ left-to-center)))
 (let (($x1521 (and $x1520 $x1517)))
 (ite $x1521 $x1524 (ite $x1519 $x1524 (ite $x1516 $x1528 (ite $x1514 $x1537 (ite $x1511 $x1531 $x1537))))))))))))))))))))))))))))))))
(assert
 (let ((?x1173 (right s__________)))
 (let ((?x1311 (right s___________)))
 (let (($x1533 (= ?x1311 ?x1173)))
 (let ((?x1503 (rest ?x1173)))
 (let (($x1530 (= ?x1311 ?x1503)))
 (let (($x1507 ((_ is stack ) ?x1173)))
 (let (($x1508 (= c__________ right-to-center)))
 (let (($x1509 (and $x1508 $x1507)))
 (let (($x1510 (= c__________ right-to-left)))
 (let (($x1511 (and $x1510 $x1507)))
 (let ((?x1359 (center s__________)))
 (let ((?x1500 (top ?x1359)))
 (let ((?x1502 (stack ?x1500 ?x1173)))
 (let (($x1529 (= ?x1311 ?x1502)))
 (let (($x1512 ((_ is stack ) ?x1359)))
 (let (($x1513 (= c__________ center-to-right)))
 (let (($x1514 (and $x1513 $x1512)))
 (let (($x1515 (= c__________ center-to-left)))
 (let (($x1516 (and $x1515 $x1512)))
 (let ((?x1139 (left s__________)))
 (let (($x1517 ((_ is stack ) ?x1139)))
 (let (($x1518 (= c__________ left-to-right)))
 (let (($x1519 (and $x1518 $x1517)))
 (let (($x1550 (ite $x1519 $x1533 (ite $x1516 $x1533 (ite $x1514 $x1529 (ite $x1511 $x1530 (ite $x1509 $x1530 $x1533)))))))
 (let ((?x1357 (top ?x1139)))
 (let ((?x1496 (stack ?x1357 ?x1173)))
 (let (($x1525 (= ?x1311 ?x1496)))
 (let (($x1520 (= c__________ left-to-center)))
 (let (($x1521 (and $x1520 $x1517)))
 (ite $x1521 $x1525 $x1550)))))))))))))))))))))))))))))))
(assert
 (let ((?x1359 (center s__________)))
 (let ((?x1497 (center s___________)))
 (let (($x1535 (= ?x1497 ?x1359)))
 (let ((?x1173 (right s__________)))
 (let ((?x1504 (top ?x1173)))
 (let ((?x1506 (stack ?x1504 ?x1359)))
 (let (($x1532 (= ?x1497 ?x1506)))
 (let (($x1507 ((_ is stack ) ?x1173)))
 (let (($x1508 (= c__________ right-to-center)))
 (let (($x1509 (and $x1508 $x1507)))
 (let (($x1510 (= c__________ right-to-left)))
 (let (($x1511 (and $x1510 $x1507)))
 (let ((?x1499 (rest ?x1359)))
 (let (($x1527 (= ?x1497 ?x1499)))
 (let (($x1512 ((_ is stack ) ?x1359)))
 (let (($x1513 (= c__________ center-to-right)))
 (let (($x1514 (and $x1513 $x1512)))
 (let (($x1515 (= c__________ center-to-left)))
 (let (($x1516 (and $x1515 $x1512)))
 (let ((?x1139 (left s__________)))
 (let ((?x1357 (top ?x1139)))
 (let ((?x1498 (stack ?x1357 ?x1359)))
 (let (($x1526 (= ?x1497 ?x1498)))
 (let (($x1517 ((_ is stack ) ?x1139)))
 (let (($x1518 (= c__________ left-to-right)))
 (let (($x1519 (and $x1518 $x1517)))
 (let (($x1549 (ite $x1519 $x1526 (ite $x1516 $x1527 (ite $x1514 $x1527 (ite $x1511 $x1535 (ite $x1509 $x1532 $x1535)))))))
 (let (($x1520 (= c__________ left-to-center)))
 (let (($x1521 (and $x1520 $x1517)))
 (ite $x1521 $x1535 $x1549)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1277 (left s___________)))
 (let ((?x1415 (left s____________)))
 (let (($x1675 (= ?x1415 ?x1277)))
 (let ((?x1311 (right s___________)))
 (let ((?x1642 (top ?x1311)))
 (let ((?x1643 (stack ?x1642 ?x1277)))
 (let (($x1669 (= ?x1415 ?x1643)))
 (let (($x1645 ((_ is stack ) ?x1311)))
 (let (($x1648 (= c___________ right-to-left)))
 (let (($x1649 (and $x1648 $x1645)))
 (let ((?x1497 (center s___________)))
 (let (($x1650 ((_ is stack ) ?x1497)))
 (let (($x1651 (= c___________ center-to-right)))
 (let (($x1652 (and $x1651 $x1650)))
 (let ((?x1638 (top ?x1497)))
 (let ((?x1639 (stack ?x1638 ?x1277)))
 (let (($x1666 (= ?x1415 ?x1639)))
 (let (($x1653 (= c___________ center-to-left)))
 (let (($x1654 (and $x1653 $x1650)))
 (let ((?x1448 (rest ?x1277)))
 (let (($x1662 (= ?x1415 ?x1448)))
 (let (($x1655 ((_ is stack ) ?x1277)))
 (let (($x1656 (= c___________ left-to-right)))
 (let (($x1657 (and $x1656 $x1655)))
 (let (($x1658 (= c___________ left-to-center)))
 (let (($x1659 (and $x1658 $x1655)))
 (ite $x1659 $x1662 (ite $x1657 $x1662 (ite $x1654 $x1666 (ite $x1652 $x1675 (ite $x1649 $x1669 $x1675))))))))))))))))))))))))))))))))
(assert
 (let ((?x1311 (right s___________)))
 (let ((?x1449 (right s____________)))
 (let (($x1671 (= ?x1449 ?x1311)))
 (let ((?x1641 (rest ?x1311)))
 (let (($x1668 (= ?x1449 ?x1641)))
 (let (($x1645 ((_ is stack ) ?x1311)))
 (let (($x1646 (= c___________ right-to-center)))
 (let (($x1647 (and $x1646 $x1645)))
 (let (($x1648 (= c___________ right-to-left)))
 (let (($x1649 (and $x1648 $x1645)))
 (let ((?x1497 (center s___________)))
 (let ((?x1638 (top ?x1497)))
 (let ((?x1640 (stack ?x1638 ?x1311)))
 (let (($x1667 (= ?x1449 ?x1640)))
 (let (($x1650 ((_ is stack ) ?x1497)))
 (let (($x1651 (= c___________ center-to-right)))
 (let (($x1652 (and $x1651 $x1650)))
 (let (($x1653 (= c___________ center-to-left)))
 (let (($x1654 (and $x1653 $x1650)))
 (let ((?x1277 (left s___________)))
 (let (($x1655 ((_ is stack ) ?x1277)))
 (let (($x1656 (= c___________ left-to-right)))
 (let (($x1657 (and $x1656 $x1655)))
 (let (($x1688 (ite $x1657 $x1671 (ite $x1654 $x1671 (ite $x1652 $x1667 (ite $x1649 $x1668 (ite $x1647 $x1668 $x1671)))))))
 (let ((?x1495 (top ?x1277)))
 (let ((?x1634 (stack ?x1495 ?x1311)))
 (let (($x1663 (= ?x1449 ?x1634)))
 (let (($x1658 (= c___________ left-to-center)))
 (let (($x1659 (and $x1658 $x1655)))
 (ite $x1659 $x1663 $x1688)))))))))))))))))))))))))))))))
(assert
 (let ((?x1497 (center s___________)))
 (let ((?x1635 (center s____________)))
 (let (($x1673 (= ?x1635 ?x1497)))
 (let ((?x1311 (right s___________)))
 (let ((?x1642 (top ?x1311)))
 (let ((?x1644 (stack ?x1642 ?x1497)))
 (let (($x1670 (= ?x1635 ?x1644)))
 (let (($x1645 ((_ is stack ) ?x1311)))
 (let (($x1646 (= c___________ right-to-center)))
 (let (($x1647 (and $x1646 $x1645)))
 (let (($x1648 (= c___________ right-to-left)))
 (let (($x1649 (and $x1648 $x1645)))
 (let ((?x1637 (rest ?x1497)))
 (let (($x1665 (= ?x1635 ?x1637)))
 (let (($x1650 ((_ is stack ) ?x1497)))
 (let (($x1651 (= c___________ center-to-right)))
 (let (($x1652 (and $x1651 $x1650)))
 (let (($x1653 (= c___________ center-to-left)))
 (let (($x1654 (and $x1653 $x1650)))
 (let ((?x1277 (left s___________)))
 (let ((?x1495 (top ?x1277)))
 (let ((?x1636 (stack ?x1495 ?x1497)))
 (let (($x1664 (= ?x1635 ?x1636)))
 (let (($x1655 ((_ is stack ) ?x1277)))
 (let (($x1656 (= c___________ left-to-right)))
 (let (($x1657 (and $x1656 $x1655)))
 (let (($x1687 (ite $x1657 $x1664 (ite $x1654 $x1665 (ite $x1652 $x1665 (ite $x1649 $x1673 (ite $x1647 $x1670 $x1673)))))))
 (let (($x1658 (= c___________ left-to-center)))
 (let (($x1659 (and $x1658 $x1655)))
 (ite $x1659 $x1673 $x1687)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1415 (left s____________)))
 (let ((?x1553 (left s_____________)))
 (let (($x1813 (= ?x1553 ?x1415)))
 (let ((?x1449 (right s____________)))
 (let ((?x1780 (top ?x1449)))
 (let ((?x1781 (stack ?x1780 ?x1415)))
 (let (($x1807 (= ?x1553 ?x1781)))
 (let (($x1783 ((_ is stack ) ?x1449)))
 (let (($x1786 (= c____________ right-to-left)))
 (let (($x1787 (and $x1786 $x1783)))
 (let ((?x1635 (center s____________)))
 (let (($x1788 ((_ is stack ) ?x1635)))
 (let (($x1789 (= c____________ center-to-right)))
 (let (($x1790 (and $x1789 $x1788)))
 (let ((?x1776 (top ?x1635)))
 (let ((?x1777 (stack ?x1776 ?x1415)))
 (let (($x1804 (= ?x1553 ?x1777)))
 (let (($x1791 (= c____________ center-to-left)))
 (let (($x1792 (and $x1791 $x1788)))
 (let ((?x1586 (rest ?x1415)))
 (let (($x1800 (= ?x1553 ?x1586)))
 (let (($x1793 ((_ is stack ) ?x1415)))
 (let (($x1794 (= c____________ left-to-right)))
 (let (($x1795 (and $x1794 $x1793)))
 (let (($x1796 (= c____________ left-to-center)))
 (let (($x1797 (and $x1796 $x1793)))
 (ite $x1797 $x1800 (ite $x1795 $x1800 (ite $x1792 $x1804 (ite $x1790 $x1813 (ite $x1787 $x1807 $x1813))))))))))))))))))))))))))))))))
(assert
 (let ((?x1449 (right s____________)))
 (let ((?x1587 (right s_____________)))
 (let (($x1809 (= ?x1587 ?x1449)))
 (let ((?x1779 (rest ?x1449)))
 (let (($x1806 (= ?x1587 ?x1779)))
 (let (($x1783 ((_ is stack ) ?x1449)))
 (let (($x1784 (= c____________ right-to-center)))
 (let (($x1785 (and $x1784 $x1783)))
 (let (($x1786 (= c____________ right-to-left)))
 (let (($x1787 (and $x1786 $x1783)))
 (let ((?x1635 (center s____________)))
 (let ((?x1776 (top ?x1635)))
 (let ((?x1778 (stack ?x1776 ?x1449)))
 (let (($x1805 (= ?x1587 ?x1778)))
 (let (($x1788 ((_ is stack ) ?x1635)))
 (let (($x1789 (= c____________ center-to-right)))
 (let (($x1790 (and $x1789 $x1788)))
 (let (($x1791 (= c____________ center-to-left)))
 (let (($x1792 (and $x1791 $x1788)))
 (let ((?x1415 (left s____________)))
 (let (($x1793 ((_ is stack ) ?x1415)))
 (let (($x1794 (= c____________ left-to-right)))
 (let (($x1795 (and $x1794 $x1793)))
 (let (($x1826 (ite $x1795 $x1809 (ite $x1792 $x1809 (ite $x1790 $x1805 (ite $x1787 $x1806 (ite $x1785 $x1806 $x1809)))))))
 (let ((?x1633 (top ?x1415)))
 (let ((?x1772 (stack ?x1633 ?x1449)))
 (let (($x1801 (= ?x1587 ?x1772)))
 (let (($x1796 (= c____________ left-to-center)))
 (let (($x1797 (and $x1796 $x1793)))
 (ite $x1797 $x1801 $x1826)))))))))))))))))))))))))))))))
(assert
 (let ((?x1635 (center s____________)))
 (let ((?x1773 (center s_____________)))
 (let (($x1811 (= ?x1773 ?x1635)))
 (let ((?x1449 (right s____________)))
 (let ((?x1780 (top ?x1449)))
 (let ((?x1782 (stack ?x1780 ?x1635)))
 (let (($x1808 (= ?x1773 ?x1782)))
 (let (($x1783 ((_ is stack ) ?x1449)))
 (let (($x1784 (= c____________ right-to-center)))
 (let (($x1785 (and $x1784 $x1783)))
 (let (($x1786 (= c____________ right-to-left)))
 (let (($x1787 (and $x1786 $x1783)))
 (let ((?x1775 (rest ?x1635)))
 (let (($x1803 (= ?x1773 ?x1775)))
 (let (($x1788 ((_ is stack ) ?x1635)))
 (let (($x1789 (= c____________ center-to-right)))
 (let (($x1790 (and $x1789 $x1788)))
 (let (($x1791 (= c____________ center-to-left)))
 (let (($x1792 (and $x1791 $x1788)))
 (let ((?x1415 (left s____________)))
 (let ((?x1633 (top ?x1415)))
 (let ((?x1774 (stack ?x1633 ?x1635)))
 (let (($x1802 (= ?x1773 ?x1774)))
 (let (($x1793 ((_ is stack ) ?x1415)))
 (let (($x1794 (= c____________ left-to-right)))
 (let (($x1795 (and $x1794 $x1793)))
 (let (($x1825 (ite $x1795 $x1802 (ite $x1792 $x1803 (ite $x1790 $x1803 (ite $x1787 $x1811 (ite $x1785 $x1808 $x1811)))))))
 (let (($x1796 (= c____________ left-to-center)))
 (let (($x1797 (and $x1796 $x1793)))
 (ite $x1797 $x1811 $x1825)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1553 (left s_____________)))
 (let ((?x1691 (left s______________)))
 (let (($x1951 (= ?x1691 ?x1553)))
 (let ((?x1587 (right s_____________)))
 (let ((?x1918 (top ?x1587)))
 (let ((?x1919 (stack ?x1918 ?x1553)))
 (let (($x1945 (= ?x1691 ?x1919)))
 (let (($x1921 ((_ is stack ) ?x1587)))
 (let (($x1924 (= c_____________ right-to-left)))
 (let (($x1925 (and $x1924 $x1921)))
 (let ((?x1773 (center s_____________)))
 (let (($x1926 ((_ is stack ) ?x1773)))
 (let (($x1927 (= c_____________ center-to-right)))
 (let (($x1928 (and $x1927 $x1926)))
 (let ((?x1914 (top ?x1773)))
 (let ((?x1915 (stack ?x1914 ?x1553)))
 (let (($x1942 (= ?x1691 ?x1915)))
 (let (($x1929 (= c_____________ center-to-left)))
 (let (($x1930 (and $x1929 $x1926)))
 (let ((?x1724 (rest ?x1553)))
 (let (($x1938 (= ?x1691 ?x1724)))
 (let (($x1931 ((_ is stack ) ?x1553)))
 (let (($x1932 (= c_____________ left-to-right)))
 (let (($x1933 (and $x1932 $x1931)))
 (let (($x1934 (= c_____________ left-to-center)))
 (let (($x1935 (and $x1934 $x1931)))
 (ite $x1935 $x1938 (ite $x1933 $x1938 (ite $x1930 $x1942 (ite $x1928 $x1951 (ite $x1925 $x1945 $x1951))))))))))))))))))))))))))))))))
(assert
 (let ((?x1587 (right s_____________)))
 (let ((?x1725 (right s______________)))
 (let (($x1947 (= ?x1725 ?x1587)))
 (let ((?x1917 (rest ?x1587)))
 (let (($x1944 (= ?x1725 ?x1917)))
 (let (($x1921 ((_ is stack ) ?x1587)))
 (let (($x1922 (= c_____________ right-to-center)))
 (let (($x1923 (and $x1922 $x1921)))
 (let (($x1924 (= c_____________ right-to-left)))
 (let (($x1925 (and $x1924 $x1921)))
 (let ((?x1773 (center s_____________)))
 (let ((?x1914 (top ?x1773)))
 (let ((?x1916 (stack ?x1914 ?x1587)))
 (let (($x1943 (= ?x1725 ?x1916)))
 (let (($x1926 ((_ is stack ) ?x1773)))
 (let (($x1927 (= c_____________ center-to-right)))
 (let (($x1928 (and $x1927 $x1926)))
 (let (($x1929 (= c_____________ center-to-left)))
 (let (($x1930 (and $x1929 $x1926)))
 (let ((?x1553 (left s_____________)))
 (let (($x1931 ((_ is stack ) ?x1553)))
 (let (($x1932 (= c_____________ left-to-right)))
 (let (($x1933 (and $x1932 $x1931)))
 (let (($x1964 (ite $x1933 $x1947 (ite $x1930 $x1947 (ite $x1928 $x1943 (ite $x1925 $x1944 (ite $x1923 $x1944 $x1947)))))))
 (let ((?x1771 (top ?x1553)))
 (let ((?x1910 (stack ?x1771 ?x1587)))
 (let (($x1939 (= ?x1725 ?x1910)))
 (let (($x1934 (= c_____________ left-to-center)))
 (let (($x1935 (and $x1934 $x1931)))
 (ite $x1935 $x1939 $x1964)))))))))))))))))))))))))))))))
(assert
 (let ((?x1773 (center s_____________)))
 (let ((?x1911 (center s______________)))
 (let (($x1949 (= ?x1911 ?x1773)))
 (let ((?x1587 (right s_____________)))
 (let ((?x1918 (top ?x1587)))
 (let ((?x1920 (stack ?x1918 ?x1773)))
 (let (($x1946 (= ?x1911 ?x1920)))
 (let (($x1921 ((_ is stack ) ?x1587)))
 (let (($x1922 (= c_____________ right-to-center)))
 (let (($x1923 (and $x1922 $x1921)))
 (let (($x1924 (= c_____________ right-to-left)))
 (let (($x1925 (and $x1924 $x1921)))
 (let ((?x1913 (rest ?x1773)))
 (let (($x1941 (= ?x1911 ?x1913)))
 (let (($x1926 ((_ is stack ) ?x1773)))
 (let (($x1927 (= c_____________ center-to-right)))
 (let (($x1928 (and $x1927 $x1926)))
 (let (($x1929 (= c_____________ center-to-left)))
 (let (($x1930 (and $x1929 $x1926)))
 (let ((?x1553 (left s_____________)))
 (let ((?x1771 (top ?x1553)))
 (let ((?x1912 (stack ?x1771 ?x1773)))
 (let (($x1940 (= ?x1911 ?x1912)))
 (let (($x1931 ((_ is stack ) ?x1553)))
 (let (($x1932 (= c_____________ left-to-right)))
 (let (($x1933 (and $x1932 $x1931)))
 (let (($x1963 (ite $x1933 $x1940 (ite $x1930 $x1941 (ite $x1928 $x1941 (ite $x1925 $x1949 (ite $x1923 $x1946 $x1949)))))))
 (let (($x1934 (= c_____________ left-to-center)))
 (let (($x1935 (and $x1934 $x1931)))
 (ite $x1935 $x1949 $x1963)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1691 (left s______________)))
 (let ((?x1829 (left s_______________)))
 (let (($x2089 (= ?x1829 ?x1691)))
 (let ((?x1725 (right s______________)))
 (let ((?x2056 (top ?x1725)))
 (let ((?x2057 (stack ?x2056 ?x1691)))
 (let (($x2083 (= ?x1829 ?x2057)))
 (let (($x2059 ((_ is stack ) ?x1725)))
 (let (($x2062 (= c______________ right-to-left)))
 (let (($x2063 (and $x2062 $x2059)))
 (let ((?x1911 (center s______________)))
 (let (($x2064 ((_ is stack ) ?x1911)))
 (let (($x2065 (= c______________ center-to-right)))
 (let (($x2066 (and $x2065 $x2064)))
 (let ((?x2052 (top ?x1911)))
 (let ((?x2053 (stack ?x2052 ?x1691)))
 (let (($x2080 (= ?x1829 ?x2053)))
 (let (($x2067 (= c______________ center-to-left)))
 (let (($x2068 (and $x2067 $x2064)))
 (let ((?x1862 (rest ?x1691)))
 (let (($x2076 (= ?x1829 ?x1862)))
 (let (($x2069 ((_ is stack ) ?x1691)))
 (let (($x2070 (= c______________ left-to-right)))
 (let (($x2071 (and $x2070 $x2069)))
 (let (($x2072 (= c______________ left-to-center)))
 (let (($x2073 (and $x2072 $x2069)))
 (ite $x2073 $x2076 (ite $x2071 $x2076 (ite $x2068 $x2080 (ite $x2066 $x2089 (ite $x2063 $x2083 $x2089))))))))))))))))))))))))))))))))
(assert
 (let ((?x1725 (right s______________)))
 (let ((?x1863 (right s_______________)))
 (let (($x2085 (= ?x1863 ?x1725)))
 (let ((?x2055 (rest ?x1725)))
 (let (($x2082 (= ?x1863 ?x2055)))
 (let (($x2059 ((_ is stack ) ?x1725)))
 (let (($x2060 (= c______________ right-to-center)))
 (let (($x2061 (and $x2060 $x2059)))
 (let (($x2062 (= c______________ right-to-left)))
 (let (($x2063 (and $x2062 $x2059)))
 (let ((?x1911 (center s______________)))
 (let ((?x2052 (top ?x1911)))
 (let ((?x2054 (stack ?x2052 ?x1725)))
 (let (($x2081 (= ?x1863 ?x2054)))
 (let (($x2064 ((_ is stack ) ?x1911)))
 (let (($x2065 (= c______________ center-to-right)))
 (let (($x2066 (and $x2065 $x2064)))
 (let (($x2067 (= c______________ center-to-left)))
 (let (($x2068 (and $x2067 $x2064)))
 (let ((?x1691 (left s______________)))
 (let (($x2069 ((_ is stack ) ?x1691)))
 (let (($x2070 (= c______________ left-to-right)))
 (let (($x2071 (and $x2070 $x2069)))
 (let (($x2102 (ite $x2071 $x2085 (ite $x2068 $x2085 (ite $x2066 $x2081 (ite $x2063 $x2082 (ite $x2061 $x2082 $x2085)))))))
 (let ((?x1909 (top ?x1691)))
 (let ((?x2048 (stack ?x1909 ?x1725)))
 (let (($x2077 (= ?x1863 ?x2048)))
 (let (($x2072 (= c______________ left-to-center)))
 (let (($x2073 (and $x2072 $x2069)))
 (ite $x2073 $x2077 $x2102)))))))))))))))))))))))))))))))
(assert
 (let ((?x1911 (center s______________)))
 (let ((?x2049 (center s_______________)))
 (let (($x2087 (= ?x2049 ?x1911)))
 (let ((?x1725 (right s______________)))
 (let ((?x2056 (top ?x1725)))
 (let ((?x2058 (stack ?x2056 ?x1911)))
 (let (($x2084 (= ?x2049 ?x2058)))
 (let (($x2059 ((_ is stack ) ?x1725)))
 (let (($x2060 (= c______________ right-to-center)))
 (let (($x2061 (and $x2060 $x2059)))
 (let (($x2062 (= c______________ right-to-left)))
 (let (($x2063 (and $x2062 $x2059)))
 (let ((?x2051 (rest ?x1911)))
 (let (($x2079 (= ?x2049 ?x2051)))
 (let (($x2064 ((_ is stack ) ?x1911)))
 (let (($x2065 (= c______________ center-to-right)))
 (let (($x2066 (and $x2065 $x2064)))
 (let (($x2067 (= c______________ center-to-left)))
 (let (($x2068 (and $x2067 $x2064)))
 (let ((?x1691 (left s______________)))
 (let ((?x1909 (top ?x1691)))
 (let ((?x2050 (stack ?x1909 ?x1911)))
 (let (($x2078 (= ?x2049 ?x2050)))
 (let (($x2069 ((_ is stack ) ?x1691)))
 (let (($x2070 (= c______________ left-to-right)))
 (let (($x2071 (and $x2070 $x2069)))
 (let (($x2101 (ite $x2071 $x2078 (ite $x2068 $x2079 (ite $x2066 $x2079 (ite $x2063 $x2087 (ite $x2061 $x2084 $x2087)))))))
 (let (($x2072 (= c______________ left-to-center)))
 (let (($x2073 (and $x2072 $x2069)))
 (ite $x2073 $x2087 $x2101)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1829 (left s_______________)))
 (let ((?x1967 (left s________________)))
 (let (($x2227 (= ?x1967 ?x1829)))
 (let ((?x1863 (right s_______________)))
 (let ((?x2194 (top ?x1863)))
 (let ((?x2195 (stack ?x2194 ?x1829)))
 (let (($x2221 (= ?x1967 ?x2195)))
 (let (($x2197 ((_ is stack ) ?x1863)))
 (let (($x2200 (= c_______________ right-to-left)))
 (let (($x2201 (and $x2200 $x2197)))
 (let ((?x2049 (center s_______________)))
 (let (($x2202 ((_ is stack ) ?x2049)))
 (let (($x2203 (= c_______________ center-to-right)))
 (let (($x2204 (and $x2203 $x2202)))
 (let ((?x2190 (top ?x2049)))
 (let ((?x2191 (stack ?x2190 ?x1829)))
 (let (($x2218 (= ?x1967 ?x2191)))
 (let (($x2205 (= c_______________ center-to-left)))
 (let (($x2206 (and $x2205 $x2202)))
 (let ((?x2000 (rest ?x1829)))
 (let (($x2214 (= ?x1967 ?x2000)))
 (let (($x2207 ((_ is stack ) ?x1829)))
 (let (($x2208 (= c_______________ left-to-right)))
 (let (($x2209 (and $x2208 $x2207)))
 (let (($x2210 (= c_______________ left-to-center)))
 (let (($x2211 (and $x2210 $x2207)))
 (ite $x2211 $x2214 (ite $x2209 $x2214 (ite $x2206 $x2218 (ite $x2204 $x2227 (ite $x2201 $x2221 $x2227))))))))))))))))))))))))))))))))
(assert
 (let ((?x1863 (right s_______________)))
 (let ((?x2001 (right s________________)))
 (let (($x2223 (= ?x2001 ?x1863)))
 (let ((?x2193 (rest ?x1863)))
 (let (($x2220 (= ?x2001 ?x2193)))
 (let (($x2197 ((_ is stack ) ?x1863)))
 (let (($x2198 (= c_______________ right-to-center)))
 (let (($x2199 (and $x2198 $x2197)))
 (let (($x2200 (= c_______________ right-to-left)))
 (let (($x2201 (and $x2200 $x2197)))
 (let ((?x2049 (center s_______________)))
 (let ((?x2190 (top ?x2049)))
 (let ((?x2192 (stack ?x2190 ?x1863)))
 (let (($x2219 (= ?x2001 ?x2192)))
 (let (($x2202 ((_ is stack ) ?x2049)))
 (let (($x2203 (= c_______________ center-to-right)))
 (let (($x2204 (and $x2203 $x2202)))
 (let (($x2205 (= c_______________ center-to-left)))
 (let (($x2206 (and $x2205 $x2202)))
 (let ((?x1829 (left s_______________)))
 (let (($x2207 ((_ is stack ) ?x1829)))
 (let (($x2208 (= c_______________ left-to-right)))
 (let (($x2209 (and $x2208 $x2207)))
 (let (($x2240 (ite $x2209 $x2223 (ite $x2206 $x2223 (ite $x2204 $x2219 (ite $x2201 $x2220 (ite $x2199 $x2220 $x2223)))))))
 (let ((?x2047 (top ?x1829)))
 (let ((?x2186 (stack ?x2047 ?x1863)))
 (let (($x2215 (= ?x2001 ?x2186)))
 (let (($x2210 (= c_______________ left-to-center)))
 (let (($x2211 (and $x2210 $x2207)))
 (ite $x2211 $x2215 $x2240)))))))))))))))))))))))))))))))
(assert
 (let ((?x2049 (center s_______________)))
 (let ((?x2187 (center s________________)))
 (let (($x2225 (= ?x2187 ?x2049)))
 (let ((?x1863 (right s_______________)))
 (let ((?x2194 (top ?x1863)))
 (let ((?x2196 (stack ?x2194 ?x2049)))
 (let (($x2222 (= ?x2187 ?x2196)))
 (let (($x2197 ((_ is stack ) ?x1863)))
 (let (($x2198 (= c_______________ right-to-center)))
 (let (($x2199 (and $x2198 $x2197)))
 (let (($x2200 (= c_______________ right-to-left)))
 (let (($x2201 (and $x2200 $x2197)))
 (let ((?x2189 (rest ?x2049)))
 (let (($x2217 (= ?x2187 ?x2189)))
 (let (($x2202 ((_ is stack ) ?x2049)))
 (let (($x2203 (= c_______________ center-to-right)))
 (let (($x2204 (and $x2203 $x2202)))
 (let (($x2205 (= c_______________ center-to-left)))
 (let (($x2206 (and $x2205 $x2202)))
 (let ((?x1829 (left s_______________)))
 (let ((?x2047 (top ?x1829)))
 (let ((?x2188 (stack ?x2047 ?x2049)))
 (let (($x2216 (= ?x2187 ?x2188)))
 (let (($x2207 ((_ is stack ) ?x1829)))
 (let (($x2208 (= c_______________ left-to-right)))
 (let (($x2209 (and $x2208 $x2207)))
 (let (($x2239 (ite $x2209 $x2216 (ite $x2206 $x2217 (ite $x2204 $x2217 (ite $x2201 $x2225 (ite $x2199 $x2222 $x2225)))))))
 (let (($x2210 (= c_______________ left-to-center)))
 (let (($x2211 (and $x2210 $x2207)))
 (ite $x2211 $x2225 $x2239)))))))))))))))))))))))))))))))
(assert
 (let ((?x76 (stack T (stack L (stack J (stack F (stack E (stack A empty))))))))
 (let ((?x77 (stack U ?x76)))
 (let ((?x2001 (right s________________)))
 (let (($x2243 (= ?x2001 ?x77)))
 (let ((?x70 (stack Q (stack G empty))))
 (let ((?x2187 (center s________________)))
 (let (($x2274 (= ?x2187 ?x70)))
 (let ((?x61 (stack P (stack V (stack O (stack I (stack D (stack N empty))))))))
 (let ((?x67 (stack S (stack R (stack B (stack K (stack C (stack H ?x61))))))))
 (let ((?x68 (stack M ?x67)))
 (let ((?x1967 (left s________________)))
 (let (($x2275 (= ?x1967 ?x68)))
 (let (($x2277 (not (and $x2275 $x2274 $x2243))))
 (not $x2277)))))))))))))))
(check-sat)
(exit)
