(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x30 (stack J empty)))
 (let ((?x29 (stack P ?x30)))
 (let ((?x31 (stack N ?x29)))
 (let ((?x32 (stack O ?x31)))
 (let ((?x33 (stack K ?x32)))
 (let ((?x34 (stack C ?x33)))
 (let ((?x35 (stack G ?x34)))
 (let ((?x36 (stack M ?x35)))
 (let ((?x37 (stack L ?x36)))
 (let ((?x38 (stack B ?x37)))
 (let ((?x108 (left s_tmp_)))
 (= ?x108 ?x38)))))))))))))
(assert
 (let ((?x39 (stack H empty)))
 (let ((?x40 (stack D ?x39)))
 (let ((?x41 (stack A ?x40)))
 (let ((?x42 (stack I ?x41)))
 (let ((?x111 (center s_tmp__)))
 (= ?x111 ?x42)))))))
(assert
 (let ((?x43 (stack E empty)))
 (let ((?x44 (stack F ?x43)))
 (let ((?x45 (stack Q ?x44)))
 (let ((?x114 (right s_tmp___)))
 (= ?x114 ?x45))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x141 (left s_tmp__)))
 (= (left s_tmp___) ?x141)))
(assert
 (let ((?x111 (center s_tmp__)))
 (= (center s_tmp___) ?x111)))
(assert
 (let ((?x145 (center s_tmp_)))
 (= ?x145 (center s_tmp))))
(assert
 (let ((?x148 (right s_tmp_)))
 (= ?x148 (right s_tmp))))
(assert
 (let ((?x108 (left s_tmp_)))
 (let ((?x141 (left s_tmp__)))
 (= ?x141 ?x108))))
(assert
 (let ((?x148 (right s_tmp_)))
 (let ((?x152 (right s_tmp__)))
 (= ?x152 ?x148))))
(assert
 (= c__ c!1))
(assert
 (let ((?x85 (left s_)))
 (let ((?x247 (left s__)))
 (let (($x292 (= ?x247 ?x85)))
 (let ((?x88 (right s_)))
 (let (($x256 ((_ is stack ) ?x88)))
 (let (($x262 (= c_ right-to-left)))
 (let (($x266 (and $x262 $x256)))
 (let ((?x90 (center s_)))
 (let (($x267 ((_ is stack ) ?x90)))
 (let (($x268 (= c_ center-to-right)))
 (let (($x269 (and $x268 $x267)))
 (let (($x270 (= c_ center-to-left)))
 (let (($x271 (and $x270 $x267)))
 (let (($x301 (ite $x271 (= ?x247 (stack (top ?x90) ?x85)) (ite $x269 $x292 (ite $x266 (= ?x247 (stack (top ?x88) ?x85)) $x292)))))
 (let (($x279 (= ?x247 (rest ?x85))))
 (let (($x272 ((_ is stack ) ?x85)))
 (let (($x273 (= c_ left-to-right)))
 (let (($x274 (and $x273 $x272)))
 (let (($x275 (= c_ left-to-center)))
 (let (($x276 (and $x275 $x272)))
 (ite $x276 $x279 (ite $x274 $x279 $x301)))))))))))))))))))))))
(assert
 (let ((?x88 (right s_)))
 (let ((?x258 (right s__)))
 (let (($x288 (= ?x258 ?x88)))
 (let (($x285 (= ?x258 (rest ?x88))))
 (let (($x256 ((_ is stack ) ?x88)))
 (let (($x260 (= c_ right-to-center)))
 (let (($x261 (and $x260 $x256)))
 (let (($x262 (= c_ right-to-left)))
 (let (($x266 (and $x262 $x256)))
 (let ((?x90 (center s_)))
 (let (($x267 ((_ is stack ) ?x90)))
 (let (($x268 (= c_ center-to-right)))
 (let (($x269 (and $x268 $x267)))
 (let (($x298 (ite $x269 (= ?x258 (stack (top ?x90) ?x88)) (ite $x266 $x285 (ite $x261 $x285 $x288)))))
 (let (($x270 (= c_ center-to-left)))
 (let (($x271 (and $x270 $x267)))
 (let ((?x85 (left s_)))
 (let (($x272 ((_ is stack ) ?x85)))
 (let (($x273 (= c_ left-to-right)))
 (let (($x274 (and $x273 $x272)))
 (let (($x275 (= c_ left-to-center)))
 (let (($x276 (and $x275 $x272)))
 (ite $x276 (= ?x258 (stack (top ?x85) ?x88)) (ite $x274 $x288 (ite $x271 $x288 $x298))))))))))))))))))))))))))
(assert
 (let ((?x90 (center s_)))
 (let ((?x249 (center s__)))
 (let (($x290 (= ?x249 ?x90)))
 (let ((?x88 (right s_)))
 (let (($x256 ((_ is stack ) ?x88)))
 (let (($x260 (= c_ right-to-center)))
 (let (($x261 (and $x260 $x256)))
 (let (($x262 (= c_ right-to-left)))
 (let (($x266 (and $x262 $x256)))
 (let (($x282 (= ?x249 (rest ?x90))))
 (let (($x267 ((_ is stack ) ?x90)))
 (let (($x268 (= c_ center-to-right)))
 (let (($x269 (and $x268 $x267)))
 (let (($x297 (ite $x269 $x282 (ite $x266 $x290 (ite $x261 (= ?x249 (stack (top ?x88) ?x90)) $x290)))))
 (let (($x270 (= c_ center-to-left)))
 (let (($x271 (and $x270 $x267)))
 (let ((?x85 (left s_)))
 (let (($x272 ((_ is stack ) ?x85)))
 (let (($x273 (= c_ left-to-right)))
 (let (($x274 (and $x273 $x272)))
 (let (($x275 (= c_ left-to-center)))
 (let (($x276 (and $x275 $x272)))
 (ite $x276 $x290 (ite $x274 (= ?x249 (stack (top ?x85) ?x90)) (ite $x271 $x282 $x297))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x247 (left s__)))
 (let ((?x155 (left s___)))
 (let (($x421 (= ?x155 ?x247)))
 (let ((?x258 (right s__)))
 (let ((?x388 (top ?x258)))
 (let ((?x389 (stack ?x388 ?x247)))
 (let (($x415 (= ?x155 ?x389)))
 (let (($x391 ((_ is stack ) ?x258)))
 (let (($x394 (= c__ right-to-left)))
 (let (($x395 (and $x394 $x391)))
 (let ((?x249 (center s__)))
 (let (($x396 ((_ is stack ) ?x249)))
 (let (($x397 (= c__ center-to-right)))
 (let (($x398 (and $x397 $x396)))
 (let ((?x384 (top ?x249)))
 (let ((?x385 (stack ?x384 ?x247)))
 (let (($x412 (= ?x155 ?x385)))
 (let (($x399 (= c__ center-to-left)))
 (let (($x400 (and $x399 $x396)))
 (let ((?x157 (rest ?x247)))
 (let (($x408 (= ?x155 ?x157)))
 (let (($x401 ((_ is stack ) ?x247)))
 (let (($x402 (= c__ left-to-right)))
 (let (($x403 (and $x402 $x401)))
 (let (($x404 (= c__ left-to-center)))
 (let (($x405 (and $x404 $x401)))
 (ite $x405 $x408 (ite $x403 $x408 (ite $x400 $x412 (ite $x398 $x421 (ite $x395 $x415 $x421))))))))))))))))))))))))))))))))
(assert
 (let ((?x258 (right s__)))
 (let ((?x158 (right s___)))
 (let (($x417 (= ?x158 ?x258)))
 (let ((?x387 (rest ?x258)))
 (let (($x414 (= ?x158 ?x387)))
 (let (($x391 ((_ is stack ) ?x258)))
 (let (($x392 (= c__ right-to-center)))
 (let (($x393 (and $x392 $x391)))
 (let (($x394 (= c__ right-to-left)))
 (let (($x395 (and $x394 $x391)))
 (let ((?x249 (center s__)))
 (let ((?x384 (top ?x249)))
 (let ((?x386 (stack ?x384 ?x258)))
 (let (($x413 (= ?x158 ?x386)))
 (let (($x396 ((_ is stack ) ?x249)))
 (let (($x397 (= c__ center-to-right)))
 (let (($x398 (and $x397 $x396)))
 (let (($x399 (= c__ center-to-left)))
 (let (($x400 (and $x399 $x396)))
 (let ((?x247 (left s__)))
 (let (($x401 ((_ is stack ) ?x247)))
 (let (($x402 (= c__ left-to-right)))
 (let (($x403 (and $x402 $x401)))
 (let (($x434 (ite $x403 $x417 (ite $x400 $x417 (ite $x398 $x413 (ite $x395 $x414 (ite $x393 $x414 $x417)))))))
 (let ((?x244 (top ?x247)))
 (let ((?x380 (stack ?x244 ?x258)))
 (let (($x409 (= ?x158 ?x380)))
 (let (($x404 (= c__ left-to-center)))
 (let (($x405 (and $x404 $x401)))
 (ite $x405 $x409 $x434)))))))))))))))))))))))))))))))
(assert
 (let ((?x249 (center s__)))
 (let ((?x381 (center s___)))
 (let (($x419 (= ?x381 ?x249)))
 (let ((?x258 (right s__)))
 (let ((?x388 (top ?x258)))
 (let ((?x390 (stack ?x388 ?x249)))
 (let (($x416 (= ?x381 ?x390)))
 (let (($x391 ((_ is stack ) ?x258)))
 (let (($x392 (= c__ right-to-center)))
 (let (($x393 (and $x392 $x391)))
 (let (($x394 (= c__ right-to-left)))
 (let (($x395 (and $x394 $x391)))
 (let ((?x383 (rest ?x249)))
 (let (($x411 (= ?x381 ?x383)))
 (let (($x396 ((_ is stack ) ?x249)))
 (let (($x397 (= c__ center-to-right)))
 (let (($x398 (and $x397 $x396)))
 (let (($x399 (= c__ center-to-left)))
 (let (($x400 (and $x399 $x396)))
 (let ((?x247 (left s__)))
 (let ((?x244 (top ?x247)))
 (let ((?x382 (stack ?x244 ?x249)))
 (let (($x410 (= ?x381 ?x382)))
 (let (($x401 ((_ is stack ) ?x247)))
 (let (($x402 (= c__ left-to-right)))
 (let (($x403 (and $x402 $x401)))
 (let (($x433 (ite $x403 $x410 (ite $x400 $x411 (ite $x398 $x411 (ite $x395 $x419 (ite $x393 $x416 $x419)))))))
 (let (($x404 (= c__ left-to-center)))
 (let (($x405 (and $x404 $x401)))
 (ite $x405 $x419 $x433)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x155 (left s___)))
 (let ((?x308 (left s____)))
 (let (($x559 (= ?x308 ?x155)))
 (let ((?x158 (right s___)))
 (let ((?x526 (top ?x158)))
 (let ((?x527 (stack ?x526 ?x155)))
 (let (($x553 (= ?x308 ?x527)))
 (let (($x529 ((_ is stack ) ?x158)))
 (let (($x532 (= c___ right-to-left)))
 (let (($x533 (and $x532 $x529)))
 (let ((?x381 (center s___)))
 (let (($x534 ((_ is stack ) ?x381)))
 (let (($x535 (= c___ center-to-right)))
 (let (($x536 (and $x535 $x534)))
 (let ((?x522 (top ?x381)))
 (let ((?x523 (stack ?x522 ?x155)))
 (let (($x550 (= ?x308 ?x523)))
 (let (($x537 (= c___ center-to-left)))
 (let (($x538 (and $x537 $x534)))
 (let ((?x352 (rest ?x155)))
 (let (($x546 (= ?x308 ?x352)))
 (let (($x539 ((_ is stack ) ?x155)))
 (let (($x540 (= c___ left-to-right)))
 (let (($x541 (and $x540 $x539)))
 (let (($x542 (= c___ left-to-center)))
 (let (($x543 (and $x542 $x539)))
 (ite $x543 $x546 (ite $x541 $x546 (ite $x538 $x550 (ite $x536 $x559 (ite $x533 $x553 $x559))))))))))))))))))))))))))))))))
(assert
 (let ((?x158 (right s___)))
 (let ((?x353 (right s____)))
 (let (($x555 (= ?x353 ?x158)))
 (let ((?x525 (rest ?x158)))
 (let (($x552 (= ?x353 ?x525)))
 (let (($x529 ((_ is stack ) ?x158)))
 (let (($x530 (= c___ right-to-center)))
 (let (($x531 (and $x530 $x529)))
 (let (($x532 (= c___ right-to-left)))
 (let (($x533 (and $x532 $x529)))
 (let ((?x381 (center s___)))
 (let ((?x522 (top ?x381)))
 (let ((?x524 (stack ?x522 ?x158)))
 (let (($x551 (= ?x353 ?x524)))
 (let (($x534 ((_ is stack ) ?x381)))
 (let (($x535 (= c___ center-to-right)))
 (let (($x536 (and $x535 $x534)))
 (let (($x537 (= c___ center-to-left)))
 (let (($x538 (and $x537 $x534)))
 (let ((?x155 (left s___)))
 (let (($x539 ((_ is stack ) ?x155)))
 (let (($x540 (= c___ left-to-right)))
 (let (($x541 (and $x540 $x539)))
 (let (($x572 (ite $x541 $x555 (ite $x538 $x555 (ite $x536 $x551 (ite $x533 $x552 (ite $x531 $x552 $x555)))))))
 (let ((?x379 (top ?x155)))
 (let ((?x518 (stack ?x379 ?x158)))
 (let (($x547 (= ?x353 ?x518)))
 (let (($x542 (= c___ left-to-center)))
 (let (($x543 (and $x542 $x539)))
 (ite $x543 $x547 $x572)))))))))))))))))))))))))))))))
(assert
 (let ((?x381 (center s___)))
 (let ((?x519 (center s____)))
 (let (($x557 (= ?x519 ?x381)))
 (let ((?x158 (right s___)))
 (let ((?x526 (top ?x158)))
 (let ((?x528 (stack ?x526 ?x381)))
 (let (($x554 (= ?x519 ?x528)))
 (let (($x529 ((_ is stack ) ?x158)))
 (let (($x530 (= c___ right-to-center)))
 (let (($x531 (and $x530 $x529)))
 (let (($x532 (= c___ right-to-left)))
 (let (($x533 (and $x532 $x529)))
 (let ((?x521 (rest ?x381)))
 (let (($x549 (= ?x519 ?x521)))
 (let (($x534 ((_ is stack ) ?x381)))
 (let (($x535 (= c___ center-to-right)))
 (let (($x536 (and $x535 $x534)))
 (let (($x537 (= c___ center-to-left)))
 (let (($x538 (and $x537 $x534)))
 (let ((?x155 (left s___)))
 (let ((?x379 (top ?x155)))
 (let ((?x520 (stack ?x379 ?x381)))
 (let (($x548 (= ?x519 ?x520)))
 (let (($x539 ((_ is stack ) ?x155)))
 (let (($x540 (= c___ left-to-right)))
 (let (($x541 (and $x540 $x539)))
 (let (($x571 (ite $x541 $x548 (ite $x538 $x549 (ite $x536 $x549 (ite $x533 $x557 (ite $x531 $x554 $x557)))))))
 (let (($x542 (= c___ left-to-center)))
 (let (($x543 (and $x542 $x539)))
 (ite $x543 $x557 $x571)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x308 (left s____)))
 (let ((?x437 (left s_____)))
 (let (($x697 (= ?x437 ?x308)))
 (let ((?x353 (right s____)))
 (let ((?x664 (top ?x353)))
 (let ((?x665 (stack ?x664 ?x308)))
 (let (($x691 (= ?x437 ?x665)))
 (let (($x667 ((_ is stack ) ?x353)))
 (let (($x670 (= c____ right-to-left)))
 (let (($x671 (and $x670 $x667)))
 (let ((?x519 (center s____)))
 (let (($x672 ((_ is stack ) ?x519)))
 (let (($x673 (= c____ center-to-right)))
 (let (($x674 (and $x673 $x672)))
 (let ((?x660 (top ?x519)))
 (let ((?x661 (stack ?x660 ?x308)))
 (let (($x688 (= ?x437 ?x661)))
 (let (($x675 (= c____ center-to-left)))
 (let (($x676 (and $x675 $x672)))
 (let ((?x470 (rest ?x308)))
 (let (($x684 (= ?x437 ?x470)))
 (let (($x677 ((_ is stack ) ?x308)))
 (let (($x678 (= c____ left-to-right)))
 (let (($x679 (and $x678 $x677)))
 (let (($x680 (= c____ left-to-center)))
 (let (($x681 (and $x680 $x677)))
 (ite $x681 $x684 (ite $x679 $x684 (ite $x676 $x688 (ite $x674 $x697 (ite $x671 $x691 $x697))))))))))))))))))))))))))))))))
(assert
 (let ((?x353 (right s____)))
 (let ((?x471 (right s_____)))
 (let (($x693 (= ?x471 ?x353)))
 (let ((?x663 (rest ?x353)))
 (let (($x690 (= ?x471 ?x663)))
 (let (($x667 ((_ is stack ) ?x353)))
 (let (($x668 (= c____ right-to-center)))
 (let (($x669 (and $x668 $x667)))
 (let (($x670 (= c____ right-to-left)))
 (let (($x671 (and $x670 $x667)))
 (let ((?x519 (center s____)))
 (let ((?x660 (top ?x519)))
 (let ((?x662 (stack ?x660 ?x353)))
 (let (($x689 (= ?x471 ?x662)))
 (let (($x672 ((_ is stack ) ?x519)))
 (let (($x673 (= c____ center-to-right)))
 (let (($x674 (and $x673 $x672)))
 (let (($x675 (= c____ center-to-left)))
 (let (($x676 (and $x675 $x672)))
 (let ((?x308 (left s____)))
 (let (($x677 ((_ is stack ) ?x308)))
 (let (($x678 (= c____ left-to-right)))
 (let (($x679 (and $x678 $x677)))
 (let (($x710 (ite $x679 $x693 (ite $x676 $x693 (ite $x674 $x689 (ite $x671 $x690 (ite $x669 $x690 $x693)))))))
 (let ((?x517 (top ?x308)))
 (let ((?x656 (stack ?x517 ?x353)))
 (let (($x685 (= ?x471 ?x656)))
 (let (($x680 (= c____ left-to-center)))
 (let (($x681 (and $x680 $x677)))
 (ite $x681 $x685 $x710)))))))))))))))))))))))))))))))
(assert
 (let ((?x519 (center s____)))
 (let ((?x657 (center s_____)))
 (let (($x695 (= ?x657 ?x519)))
 (let ((?x353 (right s____)))
 (let ((?x664 (top ?x353)))
 (let ((?x666 (stack ?x664 ?x519)))
 (let (($x692 (= ?x657 ?x666)))
 (let (($x667 ((_ is stack ) ?x353)))
 (let (($x668 (= c____ right-to-center)))
 (let (($x669 (and $x668 $x667)))
 (let (($x670 (= c____ right-to-left)))
 (let (($x671 (and $x670 $x667)))
 (let ((?x659 (rest ?x519)))
 (let (($x687 (= ?x657 ?x659)))
 (let (($x672 ((_ is stack ) ?x519)))
 (let (($x673 (= c____ center-to-right)))
 (let (($x674 (and $x673 $x672)))
 (let (($x675 (= c____ center-to-left)))
 (let (($x676 (and $x675 $x672)))
 (let ((?x308 (left s____)))
 (let ((?x517 (top ?x308)))
 (let ((?x658 (stack ?x517 ?x519)))
 (let (($x686 (= ?x657 ?x658)))
 (let (($x677 ((_ is stack ) ?x308)))
 (let (($x678 (= c____ left-to-right)))
 (let (($x679 (and $x678 $x677)))
 (let (($x709 (ite $x679 $x686 (ite $x676 $x687 (ite $x674 $x687 (ite $x671 $x695 (ite $x669 $x692 $x695)))))))
 (let (($x680 (= c____ left-to-center)))
 (let (($x681 (and $x680 $x677)))
 (ite $x681 $x695 $x709)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x437 (left s_____)))
 (let ((?x575 (left s______)))
 (let (($x835 (= ?x575 ?x437)))
 (let ((?x471 (right s_____)))
 (let ((?x802 (top ?x471)))
 (let ((?x803 (stack ?x802 ?x437)))
 (let (($x829 (= ?x575 ?x803)))
 (let (($x805 ((_ is stack ) ?x471)))
 (let (($x808 (= c_____ right-to-left)))
 (let (($x809 (and $x808 $x805)))
 (let ((?x657 (center s_____)))
 (let (($x810 ((_ is stack ) ?x657)))
 (let (($x811 (= c_____ center-to-right)))
 (let (($x812 (and $x811 $x810)))
 (let ((?x798 (top ?x657)))
 (let ((?x799 (stack ?x798 ?x437)))
 (let (($x826 (= ?x575 ?x799)))
 (let (($x813 (= c_____ center-to-left)))
 (let (($x814 (and $x813 $x810)))
 (let ((?x608 (rest ?x437)))
 (let (($x822 (= ?x575 ?x608)))
 (let (($x815 ((_ is stack ) ?x437)))
 (let (($x816 (= c_____ left-to-right)))
 (let (($x817 (and $x816 $x815)))
 (let (($x818 (= c_____ left-to-center)))
 (let (($x819 (and $x818 $x815)))
 (ite $x819 $x822 (ite $x817 $x822 (ite $x814 $x826 (ite $x812 $x835 (ite $x809 $x829 $x835))))))))))))))))))))))))))))))))
(assert
 (let ((?x471 (right s_____)))
 (let ((?x609 (right s______)))
 (let (($x831 (= ?x609 ?x471)))
 (let ((?x801 (rest ?x471)))
 (let (($x828 (= ?x609 ?x801)))
 (let (($x805 ((_ is stack ) ?x471)))
 (let (($x806 (= c_____ right-to-center)))
 (let (($x807 (and $x806 $x805)))
 (let (($x808 (= c_____ right-to-left)))
 (let (($x809 (and $x808 $x805)))
 (let ((?x657 (center s_____)))
 (let ((?x798 (top ?x657)))
 (let ((?x800 (stack ?x798 ?x471)))
 (let (($x827 (= ?x609 ?x800)))
 (let (($x810 ((_ is stack ) ?x657)))
 (let (($x811 (= c_____ center-to-right)))
 (let (($x812 (and $x811 $x810)))
 (let (($x813 (= c_____ center-to-left)))
 (let (($x814 (and $x813 $x810)))
 (let ((?x437 (left s_____)))
 (let (($x815 ((_ is stack ) ?x437)))
 (let (($x816 (= c_____ left-to-right)))
 (let (($x817 (and $x816 $x815)))
 (let (($x848 (ite $x817 $x831 (ite $x814 $x831 (ite $x812 $x827 (ite $x809 $x828 (ite $x807 $x828 $x831)))))))
 (let ((?x655 (top ?x437)))
 (let ((?x794 (stack ?x655 ?x471)))
 (let (($x823 (= ?x609 ?x794)))
 (let (($x818 (= c_____ left-to-center)))
 (let (($x819 (and $x818 $x815)))
 (ite $x819 $x823 $x848)))))))))))))))))))))))))))))))
(assert
 (let ((?x657 (center s_____)))
 (let ((?x795 (center s______)))
 (let (($x833 (= ?x795 ?x657)))
 (let ((?x471 (right s_____)))
 (let ((?x802 (top ?x471)))
 (let ((?x804 (stack ?x802 ?x657)))
 (let (($x830 (= ?x795 ?x804)))
 (let (($x805 ((_ is stack ) ?x471)))
 (let (($x806 (= c_____ right-to-center)))
 (let (($x807 (and $x806 $x805)))
 (let (($x808 (= c_____ right-to-left)))
 (let (($x809 (and $x808 $x805)))
 (let ((?x797 (rest ?x657)))
 (let (($x825 (= ?x795 ?x797)))
 (let (($x810 ((_ is stack ) ?x657)))
 (let (($x811 (= c_____ center-to-right)))
 (let (($x812 (and $x811 $x810)))
 (let (($x813 (= c_____ center-to-left)))
 (let (($x814 (and $x813 $x810)))
 (let ((?x437 (left s_____)))
 (let ((?x655 (top ?x437)))
 (let ((?x796 (stack ?x655 ?x657)))
 (let (($x824 (= ?x795 ?x796)))
 (let (($x815 ((_ is stack ) ?x437)))
 (let (($x816 (= c_____ left-to-right)))
 (let (($x817 (and $x816 $x815)))
 (let (($x847 (ite $x817 $x824 (ite $x814 $x825 (ite $x812 $x825 (ite $x809 $x833 (ite $x807 $x830 $x833)))))))
 (let (($x818 (= c_____ left-to-center)))
 (let (($x819 (and $x818 $x815)))
 (ite $x819 $x833 $x847)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x575 (left s______)))
 (let ((?x713 (left s_______)))
 (let (($x973 (= ?x713 ?x575)))
 (let ((?x609 (right s______)))
 (let ((?x940 (top ?x609)))
 (let ((?x941 (stack ?x940 ?x575)))
 (let (($x967 (= ?x713 ?x941)))
 (let (($x943 ((_ is stack ) ?x609)))
 (let (($x946 (= c______ right-to-left)))
 (let (($x947 (and $x946 $x943)))
 (let ((?x795 (center s______)))
 (let (($x948 ((_ is stack ) ?x795)))
 (let (($x949 (= c______ center-to-right)))
 (let (($x950 (and $x949 $x948)))
 (let ((?x936 (top ?x795)))
 (let ((?x937 (stack ?x936 ?x575)))
 (let (($x964 (= ?x713 ?x937)))
 (let (($x951 (= c______ center-to-left)))
 (let (($x952 (and $x951 $x948)))
 (let ((?x746 (rest ?x575)))
 (let (($x960 (= ?x713 ?x746)))
 (let (($x953 ((_ is stack ) ?x575)))
 (let (($x954 (= c______ left-to-right)))
 (let (($x955 (and $x954 $x953)))
 (let (($x956 (= c______ left-to-center)))
 (let (($x957 (and $x956 $x953)))
 (ite $x957 $x960 (ite $x955 $x960 (ite $x952 $x964 (ite $x950 $x973 (ite $x947 $x967 $x973))))))))))))))))))))))))))))))))
(assert
 (let ((?x609 (right s______)))
 (let ((?x747 (right s_______)))
 (let (($x969 (= ?x747 ?x609)))
 (let ((?x939 (rest ?x609)))
 (let (($x966 (= ?x747 ?x939)))
 (let (($x943 ((_ is stack ) ?x609)))
 (let (($x944 (= c______ right-to-center)))
 (let (($x945 (and $x944 $x943)))
 (let (($x946 (= c______ right-to-left)))
 (let (($x947 (and $x946 $x943)))
 (let ((?x795 (center s______)))
 (let ((?x936 (top ?x795)))
 (let ((?x938 (stack ?x936 ?x609)))
 (let (($x965 (= ?x747 ?x938)))
 (let (($x948 ((_ is stack ) ?x795)))
 (let (($x949 (= c______ center-to-right)))
 (let (($x950 (and $x949 $x948)))
 (let (($x951 (= c______ center-to-left)))
 (let (($x952 (and $x951 $x948)))
 (let ((?x575 (left s______)))
 (let (($x953 ((_ is stack ) ?x575)))
 (let (($x954 (= c______ left-to-right)))
 (let (($x955 (and $x954 $x953)))
 (let (($x986 (ite $x955 $x969 (ite $x952 $x969 (ite $x950 $x965 (ite $x947 $x966 (ite $x945 $x966 $x969)))))))
 (let ((?x793 (top ?x575)))
 (let ((?x932 (stack ?x793 ?x609)))
 (let (($x961 (= ?x747 ?x932)))
 (let (($x956 (= c______ left-to-center)))
 (let (($x957 (and $x956 $x953)))
 (ite $x957 $x961 $x986)))))))))))))))))))))))))))))))
(assert
 (let ((?x795 (center s______)))
 (let ((?x933 (center s_______)))
 (let (($x971 (= ?x933 ?x795)))
 (let ((?x609 (right s______)))
 (let ((?x940 (top ?x609)))
 (let ((?x942 (stack ?x940 ?x795)))
 (let (($x968 (= ?x933 ?x942)))
 (let (($x943 ((_ is stack ) ?x609)))
 (let (($x944 (= c______ right-to-center)))
 (let (($x945 (and $x944 $x943)))
 (let (($x946 (= c______ right-to-left)))
 (let (($x947 (and $x946 $x943)))
 (let ((?x935 (rest ?x795)))
 (let (($x963 (= ?x933 ?x935)))
 (let (($x948 ((_ is stack ) ?x795)))
 (let (($x949 (= c______ center-to-right)))
 (let (($x950 (and $x949 $x948)))
 (let (($x951 (= c______ center-to-left)))
 (let (($x952 (and $x951 $x948)))
 (let ((?x575 (left s______)))
 (let ((?x793 (top ?x575)))
 (let ((?x934 (stack ?x793 ?x795)))
 (let (($x962 (= ?x933 ?x934)))
 (let (($x953 ((_ is stack ) ?x575)))
 (let (($x954 (= c______ left-to-right)))
 (let (($x955 (and $x954 $x953)))
 (let (($x985 (ite $x955 $x962 (ite $x952 $x963 (ite $x950 $x963 (ite $x947 $x971 (ite $x945 $x968 $x971)))))))
 (let (($x956 (= c______ left-to-center)))
 (let (($x957 (and $x956 $x953)))
 (ite $x957 $x971 $x985)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x713 (left s_______)))
 (let ((?x851 (left s________)))
 (let (($x1111 (= ?x851 ?x713)))
 (let ((?x747 (right s_______)))
 (let ((?x1078 (top ?x747)))
 (let ((?x1079 (stack ?x1078 ?x713)))
 (let (($x1105 (= ?x851 ?x1079)))
 (let (($x1081 ((_ is stack ) ?x747)))
 (let (($x1084 (= c_______ right-to-left)))
 (let (($x1085 (and $x1084 $x1081)))
 (let ((?x933 (center s_______)))
 (let (($x1086 ((_ is stack ) ?x933)))
 (let (($x1087 (= c_______ center-to-right)))
 (let (($x1088 (and $x1087 $x1086)))
 (let ((?x1074 (top ?x933)))
 (let ((?x1075 (stack ?x1074 ?x713)))
 (let (($x1102 (= ?x851 ?x1075)))
 (let (($x1089 (= c_______ center-to-left)))
 (let (($x1090 (and $x1089 $x1086)))
 (let ((?x884 (rest ?x713)))
 (let (($x1098 (= ?x851 ?x884)))
 (let (($x1091 ((_ is stack ) ?x713)))
 (let (($x1092 (= c_______ left-to-right)))
 (let (($x1093 (and $x1092 $x1091)))
 (let (($x1094 (= c_______ left-to-center)))
 (let (($x1095 (and $x1094 $x1091)))
 (ite $x1095 $x1098 (ite $x1093 $x1098 (ite $x1090 $x1102 (ite $x1088 $x1111 (ite $x1085 $x1105 $x1111))))))))))))))))))))))))))))))))
(assert
 (let ((?x747 (right s_______)))
 (let ((?x885 (right s________)))
 (let (($x1107 (= ?x885 ?x747)))
 (let ((?x1077 (rest ?x747)))
 (let (($x1104 (= ?x885 ?x1077)))
 (let (($x1081 ((_ is stack ) ?x747)))
 (let (($x1082 (= c_______ right-to-center)))
 (let (($x1083 (and $x1082 $x1081)))
 (let (($x1084 (= c_______ right-to-left)))
 (let (($x1085 (and $x1084 $x1081)))
 (let ((?x933 (center s_______)))
 (let ((?x1074 (top ?x933)))
 (let ((?x1076 (stack ?x1074 ?x747)))
 (let (($x1103 (= ?x885 ?x1076)))
 (let (($x1086 ((_ is stack ) ?x933)))
 (let (($x1087 (= c_______ center-to-right)))
 (let (($x1088 (and $x1087 $x1086)))
 (let (($x1089 (= c_______ center-to-left)))
 (let (($x1090 (and $x1089 $x1086)))
 (let ((?x713 (left s_______)))
 (let (($x1091 ((_ is stack ) ?x713)))
 (let (($x1092 (= c_______ left-to-right)))
 (let (($x1093 (and $x1092 $x1091)))
 (let (($x1124 (ite $x1093 $x1107 (ite $x1090 $x1107 (ite $x1088 $x1103 (ite $x1085 $x1104 (ite $x1083 $x1104 $x1107)))))))
 (let ((?x931 (top ?x713)))
 (let ((?x1070 (stack ?x931 ?x747)))
 (let (($x1099 (= ?x885 ?x1070)))
 (let (($x1094 (= c_______ left-to-center)))
 (let (($x1095 (and $x1094 $x1091)))
 (ite $x1095 $x1099 $x1124)))))))))))))))))))))))))))))))
(assert
 (let ((?x933 (center s_______)))
 (let ((?x1071 (center s________)))
 (let (($x1109 (= ?x1071 ?x933)))
 (let ((?x747 (right s_______)))
 (let ((?x1078 (top ?x747)))
 (let ((?x1080 (stack ?x1078 ?x933)))
 (let (($x1106 (= ?x1071 ?x1080)))
 (let (($x1081 ((_ is stack ) ?x747)))
 (let (($x1082 (= c_______ right-to-center)))
 (let (($x1083 (and $x1082 $x1081)))
 (let (($x1084 (= c_______ right-to-left)))
 (let (($x1085 (and $x1084 $x1081)))
 (let ((?x1073 (rest ?x933)))
 (let (($x1101 (= ?x1071 ?x1073)))
 (let (($x1086 ((_ is stack ) ?x933)))
 (let (($x1087 (= c_______ center-to-right)))
 (let (($x1088 (and $x1087 $x1086)))
 (let (($x1089 (= c_______ center-to-left)))
 (let (($x1090 (and $x1089 $x1086)))
 (let ((?x713 (left s_______)))
 (let ((?x931 (top ?x713)))
 (let ((?x1072 (stack ?x931 ?x933)))
 (let (($x1100 (= ?x1071 ?x1072)))
 (let (($x1091 ((_ is stack ) ?x713)))
 (let (($x1092 (= c_______ left-to-right)))
 (let (($x1093 (and $x1092 $x1091)))
 (let (($x1123 (ite $x1093 $x1100 (ite $x1090 $x1101 (ite $x1088 $x1101 (ite $x1085 $x1109 (ite $x1083 $x1106 $x1109)))))))
 (let (($x1094 (= c_______ left-to-center)))
 (let (($x1095 (and $x1094 $x1091)))
 (ite $x1095 $x1109 $x1123)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x851 (left s________)))
 (let ((?x989 (left s_________)))
 (let (($x1249 (= ?x989 ?x851)))
 (let ((?x885 (right s________)))
 (let ((?x1216 (top ?x885)))
 (let ((?x1217 (stack ?x1216 ?x851)))
 (let (($x1243 (= ?x989 ?x1217)))
 (let (($x1219 ((_ is stack ) ?x885)))
 (let (($x1222 (= c________ right-to-left)))
 (let (($x1223 (and $x1222 $x1219)))
 (let ((?x1071 (center s________)))
 (let (($x1224 ((_ is stack ) ?x1071)))
 (let (($x1225 (= c________ center-to-right)))
 (let (($x1226 (and $x1225 $x1224)))
 (let ((?x1212 (top ?x1071)))
 (let ((?x1213 (stack ?x1212 ?x851)))
 (let (($x1240 (= ?x989 ?x1213)))
 (let (($x1227 (= c________ center-to-left)))
 (let (($x1228 (and $x1227 $x1224)))
 (let ((?x1022 (rest ?x851)))
 (let (($x1236 (= ?x989 ?x1022)))
 (let (($x1229 ((_ is stack ) ?x851)))
 (let (($x1230 (= c________ left-to-right)))
 (let (($x1231 (and $x1230 $x1229)))
 (let (($x1232 (= c________ left-to-center)))
 (let (($x1233 (and $x1232 $x1229)))
 (ite $x1233 $x1236 (ite $x1231 $x1236 (ite $x1228 $x1240 (ite $x1226 $x1249 (ite $x1223 $x1243 $x1249))))))))))))))))))))))))))))))))
(assert
 (let ((?x885 (right s________)))
 (let ((?x1023 (right s_________)))
 (let (($x1245 (= ?x1023 ?x885)))
 (let ((?x1215 (rest ?x885)))
 (let (($x1242 (= ?x1023 ?x1215)))
 (let (($x1219 ((_ is stack ) ?x885)))
 (let (($x1220 (= c________ right-to-center)))
 (let (($x1221 (and $x1220 $x1219)))
 (let (($x1222 (= c________ right-to-left)))
 (let (($x1223 (and $x1222 $x1219)))
 (let ((?x1071 (center s________)))
 (let ((?x1212 (top ?x1071)))
 (let ((?x1214 (stack ?x1212 ?x885)))
 (let (($x1241 (= ?x1023 ?x1214)))
 (let (($x1224 ((_ is stack ) ?x1071)))
 (let (($x1225 (= c________ center-to-right)))
 (let (($x1226 (and $x1225 $x1224)))
 (let (($x1227 (= c________ center-to-left)))
 (let (($x1228 (and $x1227 $x1224)))
 (let ((?x851 (left s________)))
 (let (($x1229 ((_ is stack ) ?x851)))
 (let (($x1230 (= c________ left-to-right)))
 (let (($x1231 (and $x1230 $x1229)))
 (let (($x1262 (ite $x1231 $x1245 (ite $x1228 $x1245 (ite $x1226 $x1241 (ite $x1223 $x1242 (ite $x1221 $x1242 $x1245)))))))
 (let ((?x1069 (top ?x851)))
 (let ((?x1208 (stack ?x1069 ?x885)))
 (let (($x1237 (= ?x1023 ?x1208)))
 (let (($x1232 (= c________ left-to-center)))
 (let (($x1233 (and $x1232 $x1229)))
 (ite $x1233 $x1237 $x1262)))))))))))))))))))))))))))))))
(assert
 (let ((?x1071 (center s________)))
 (let ((?x1209 (center s_________)))
 (let (($x1247 (= ?x1209 ?x1071)))
 (let ((?x885 (right s________)))
 (let ((?x1216 (top ?x885)))
 (let ((?x1218 (stack ?x1216 ?x1071)))
 (let (($x1244 (= ?x1209 ?x1218)))
 (let (($x1219 ((_ is stack ) ?x885)))
 (let (($x1220 (= c________ right-to-center)))
 (let (($x1221 (and $x1220 $x1219)))
 (let (($x1222 (= c________ right-to-left)))
 (let (($x1223 (and $x1222 $x1219)))
 (let ((?x1211 (rest ?x1071)))
 (let (($x1239 (= ?x1209 ?x1211)))
 (let (($x1224 ((_ is stack ) ?x1071)))
 (let (($x1225 (= c________ center-to-right)))
 (let (($x1226 (and $x1225 $x1224)))
 (let (($x1227 (= c________ center-to-left)))
 (let (($x1228 (and $x1227 $x1224)))
 (let ((?x851 (left s________)))
 (let ((?x1069 (top ?x851)))
 (let ((?x1210 (stack ?x1069 ?x1071)))
 (let (($x1238 (= ?x1209 ?x1210)))
 (let (($x1229 ((_ is stack ) ?x851)))
 (let (($x1230 (= c________ left-to-right)))
 (let (($x1231 (and $x1230 $x1229)))
 (let (($x1261 (ite $x1231 $x1238 (ite $x1228 $x1239 (ite $x1226 $x1239 (ite $x1223 $x1247 (ite $x1221 $x1244 $x1247)))))))
 (let (($x1232 (= c________ left-to-center)))
 (let (($x1233 (and $x1232 $x1229)))
 (ite $x1233 $x1247 $x1261)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x989 (left s_________)))
 (let ((?x1127 (left s__________)))
 (let (($x1387 (= ?x1127 ?x989)))
 (let ((?x1023 (right s_________)))
 (let ((?x1354 (top ?x1023)))
 (let ((?x1355 (stack ?x1354 ?x989)))
 (let (($x1381 (= ?x1127 ?x1355)))
 (let (($x1357 ((_ is stack ) ?x1023)))
 (let (($x1360 (= c_________ right-to-left)))
 (let (($x1361 (and $x1360 $x1357)))
 (let ((?x1209 (center s_________)))
 (let (($x1362 ((_ is stack ) ?x1209)))
 (let (($x1363 (= c_________ center-to-right)))
 (let (($x1364 (and $x1363 $x1362)))
 (let ((?x1350 (top ?x1209)))
 (let ((?x1351 (stack ?x1350 ?x989)))
 (let (($x1378 (= ?x1127 ?x1351)))
 (let (($x1365 (= c_________ center-to-left)))
 (let (($x1366 (and $x1365 $x1362)))
 (let ((?x1160 (rest ?x989)))
 (let (($x1374 (= ?x1127 ?x1160)))
 (let (($x1367 ((_ is stack ) ?x989)))
 (let (($x1368 (= c_________ left-to-right)))
 (let (($x1369 (and $x1368 $x1367)))
 (let (($x1370 (= c_________ left-to-center)))
 (let (($x1371 (and $x1370 $x1367)))
 (ite $x1371 $x1374 (ite $x1369 $x1374 (ite $x1366 $x1378 (ite $x1364 $x1387 (ite $x1361 $x1381 $x1387))))))))))))))))))))))))))))))))
(assert
 (let ((?x1023 (right s_________)))
 (let ((?x1161 (right s__________)))
 (let (($x1383 (= ?x1161 ?x1023)))
 (let ((?x1353 (rest ?x1023)))
 (let (($x1380 (= ?x1161 ?x1353)))
 (let (($x1357 ((_ is stack ) ?x1023)))
 (let (($x1358 (= c_________ right-to-center)))
 (let (($x1359 (and $x1358 $x1357)))
 (let (($x1360 (= c_________ right-to-left)))
 (let (($x1361 (and $x1360 $x1357)))
 (let ((?x1209 (center s_________)))
 (let ((?x1350 (top ?x1209)))
 (let ((?x1352 (stack ?x1350 ?x1023)))
 (let (($x1379 (= ?x1161 ?x1352)))
 (let (($x1362 ((_ is stack ) ?x1209)))
 (let (($x1363 (= c_________ center-to-right)))
 (let (($x1364 (and $x1363 $x1362)))
 (let (($x1365 (= c_________ center-to-left)))
 (let (($x1366 (and $x1365 $x1362)))
 (let ((?x989 (left s_________)))
 (let (($x1367 ((_ is stack ) ?x989)))
 (let (($x1368 (= c_________ left-to-right)))
 (let (($x1369 (and $x1368 $x1367)))
 (let (($x1400 (ite $x1369 $x1383 (ite $x1366 $x1383 (ite $x1364 $x1379 (ite $x1361 $x1380 (ite $x1359 $x1380 $x1383)))))))
 (let ((?x1207 (top ?x989)))
 (let ((?x1346 (stack ?x1207 ?x1023)))
 (let (($x1375 (= ?x1161 ?x1346)))
 (let (($x1370 (= c_________ left-to-center)))
 (let (($x1371 (and $x1370 $x1367)))
 (ite $x1371 $x1375 $x1400)))))))))))))))))))))))))))))))
(assert
 (let ((?x1209 (center s_________)))
 (let ((?x1347 (center s__________)))
 (let (($x1385 (= ?x1347 ?x1209)))
 (let ((?x1023 (right s_________)))
 (let ((?x1354 (top ?x1023)))
 (let ((?x1356 (stack ?x1354 ?x1209)))
 (let (($x1382 (= ?x1347 ?x1356)))
 (let (($x1357 ((_ is stack ) ?x1023)))
 (let (($x1358 (= c_________ right-to-center)))
 (let (($x1359 (and $x1358 $x1357)))
 (let (($x1360 (= c_________ right-to-left)))
 (let (($x1361 (and $x1360 $x1357)))
 (let ((?x1349 (rest ?x1209)))
 (let (($x1377 (= ?x1347 ?x1349)))
 (let (($x1362 ((_ is stack ) ?x1209)))
 (let (($x1363 (= c_________ center-to-right)))
 (let (($x1364 (and $x1363 $x1362)))
 (let (($x1365 (= c_________ center-to-left)))
 (let (($x1366 (and $x1365 $x1362)))
 (let ((?x989 (left s_________)))
 (let ((?x1207 (top ?x989)))
 (let ((?x1348 (stack ?x1207 ?x1209)))
 (let (($x1376 (= ?x1347 ?x1348)))
 (let (($x1367 ((_ is stack ) ?x989)))
 (let (($x1368 (= c_________ left-to-right)))
 (let (($x1369 (and $x1368 $x1367)))
 (let (($x1399 (ite $x1369 $x1376 (ite $x1366 $x1377 (ite $x1364 $x1377 (ite $x1361 $x1385 (ite $x1359 $x1382 $x1385)))))))
 (let (($x1370 (= c_________ left-to-center)))
 (let (($x1371 (and $x1370 $x1367)))
 (ite $x1371 $x1385 $x1399)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1127 (left s__________)))
 (let ((?x1265 (left s___________)))
 (let (($x1525 (= ?x1265 ?x1127)))
 (let ((?x1161 (right s__________)))
 (let ((?x1492 (top ?x1161)))
 (let ((?x1493 (stack ?x1492 ?x1127)))
 (let (($x1519 (= ?x1265 ?x1493)))
 (let (($x1495 ((_ is stack ) ?x1161)))
 (let (($x1498 (= c__________ right-to-left)))
 (let (($x1499 (and $x1498 $x1495)))
 (let ((?x1347 (center s__________)))
 (let (($x1500 ((_ is stack ) ?x1347)))
 (let (($x1501 (= c__________ center-to-right)))
 (let (($x1502 (and $x1501 $x1500)))
 (let ((?x1488 (top ?x1347)))
 (let ((?x1489 (stack ?x1488 ?x1127)))
 (let (($x1516 (= ?x1265 ?x1489)))
 (let (($x1503 (= c__________ center-to-left)))
 (let (($x1504 (and $x1503 $x1500)))
 (let ((?x1298 (rest ?x1127)))
 (let (($x1512 (= ?x1265 ?x1298)))
 (let (($x1505 ((_ is stack ) ?x1127)))
 (let (($x1506 (= c__________ left-to-right)))
 (let (($x1507 (and $x1506 $x1505)))
 (let (($x1508 (= c__________ left-to-center)))
 (let (($x1509 (and $x1508 $x1505)))
 (ite $x1509 $x1512 (ite $x1507 $x1512 (ite $x1504 $x1516 (ite $x1502 $x1525 (ite $x1499 $x1519 $x1525))))))))))))))))))))))))))))))))
(assert
 (let ((?x1161 (right s__________)))
 (let ((?x1299 (right s___________)))
 (let (($x1521 (= ?x1299 ?x1161)))
 (let ((?x1491 (rest ?x1161)))
 (let (($x1518 (= ?x1299 ?x1491)))
 (let (($x1495 ((_ is stack ) ?x1161)))
 (let (($x1496 (= c__________ right-to-center)))
 (let (($x1497 (and $x1496 $x1495)))
 (let (($x1498 (= c__________ right-to-left)))
 (let (($x1499 (and $x1498 $x1495)))
 (let ((?x1347 (center s__________)))
 (let ((?x1488 (top ?x1347)))
 (let ((?x1490 (stack ?x1488 ?x1161)))
 (let (($x1517 (= ?x1299 ?x1490)))
 (let (($x1500 ((_ is stack ) ?x1347)))
 (let (($x1501 (= c__________ center-to-right)))
 (let (($x1502 (and $x1501 $x1500)))
 (let (($x1503 (= c__________ center-to-left)))
 (let (($x1504 (and $x1503 $x1500)))
 (let ((?x1127 (left s__________)))
 (let (($x1505 ((_ is stack ) ?x1127)))
 (let (($x1506 (= c__________ left-to-right)))
 (let (($x1507 (and $x1506 $x1505)))
 (let (($x1538 (ite $x1507 $x1521 (ite $x1504 $x1521 (ite $x1502 $x1517 (ite $x1499 $x1518 (ite $x1497 $x1518 $x1521)))))))
 (let ((?x1345 (top ?x1127)))
 (let ((?x1484 (stack ?x1345 ?x1161)))
 (let (($x1513 (= ?x1299 ?x1484)))
 (let (($x1508 (= c__________ left-to-center)))
 (let (($x1509 (and $x1508 $x1505)))
 (ite $x1509 $x1513 $x1538)))))))))))))))))))))))))))))))
(assert
 (let ((?x1347 (center s__________)))
 (let ((?x1485 (center s___________)))
 (let (($x1523 (= ?x1485 ?x1347)))
 (let ((?x1161 (right s__________)))
 (let ((?x1492 (top ?x1161)))
 (let ((?x1494 (stack ?x1492 ?x1347)))
 (let (($x1520 (= ?x1485 ?x1494)))
 (let (($x1495 ((_ is stack ) ?x1161)))
 (let (($x1496 (= c__________ right-to-center)))
 (let (($x1497 (and $x1496 $x1495)))
 (let (($x1498 (= c__________ right-to-left)))
 (let (($x1499 (and $x1498 $x1495)))
 (let ((?x1487 (rest ?x1347)))
 (let (($x1515 (= ?x1485 ?x1487)))
 (let (($x1500 ((_ is stack ) ?x1347)))
 (let (($x1501 (= c__________ center-to-right)))
 (let (($x1502 (and $x1501 $x1500)))
 (let (($x1503 (= c__________ center-to-left)))
 (let (($x1504 (and $x1503 $x1500)))
 (let ((?x1127 (left s__________)))
 (let ((?x1345 (top ?x1127)))
 (let ((?x1486 (stack ?x1345 ?x1347)))
 (let (($x1514 (= ?x1485 ?x1486)))
 (let (($x1505 ((_ is stack ) ?x1127)))
 (let (($x1506 (= c__________ left-to-right)))
 (let (($x1507 (and $x1506 $x1505)))
 (let (($x1537 (ite $x1507 $x1514 (ite $x1504 $x1515 (ite $x1502 $x1515 (ite $x1499 $x1523 (ite $x1497 $x1520 $x1523)))))))
 (let (($x1508 (= c__________ left-to-center)))
 (let (($x1509 (and $x1508 $x1505)))
 (ite $x1509 $x1523 $x1537)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1265 (left s___________)))
 (let ((?x1403 (left s____________)))
 (let (($x1663 (= ?x1403 ?x1265)))
 (let ((?x1299 (right s___________)))
 (let ((?x1630 (top ?x1299)))
 (let ((?x1631 (stack ?x1630 ?x1265)))
 (let (($x1657 (= ?x1403 ?x1631)))
 (let (($x1633 ((_ is stack ) ?x1299)))
 (let (($x1636 (= c___________ right-to-left)))
 (let (($x1637 (and $x1636 $x1633)))
 (let ((?x1485 (center s___________)))
 (let (($x1638 ((_ is stack ) ?x1485)))
 (let (($x1639 (= c___________ center-to-right)))
 (let (($x1640 (and $x1639 $x1638)))
 (let ((?x1626 (top ?x1485)))
 (let ((?x1627 (stack ?x1626 ?x1265)))
 (let (($x1654 (= ?x1403 ?x1627)))
 (let (($x1641 (= c___________ center-to-left)))
 (let (($x1642 (and $x1641 $x1638)))
 (let ((?x1436 (rest ?x1265)))
 (let (($x1650 (= ?x1403 ?x1436)))
 (let (($x1643 ((_ is stack ) ?x1265)))
 (let (($x1644 (= c___________ left-to-right)))
 (let (($x1645 (and $x1644 $x1643)))
 (let (($x1646 (= c___________ left-to-center)))
 (let (($x1647 (and $x1646 $x1643)))
 (ite $x1647 $x1650 (ite $x1645 $x1650 (ite $x1642 $x1654 (ite $x1640 $x1663 (ite $x1637 $x1657 $x1663))))))))))))))))))))))))))))))))
(assert
 (let ((?x1299 (right s___________)))
 (let ((?x1437 (right s____________)))
 (let (($x1659 (= ?x1437 ?x1299)))
 (let ((?x1629 (rest ?x1299)))
 (let (($x1656 (= ?x1437 ?x1629)))
 (let (($x1633 ((_ is stack ) ?x1299)))
 (let (($x1634 (= c___________ right-to-center)))
 (let (($x1635 (and $x1634 $x1633)))
 (let (($x1636 (= c___________ right-to-left)))
 (let (($x1637 (and $x1636 $x1633)))
 (let ((?x1485 (center s___________)))
 (let ((?x1626 (top ?x1485)))
 (let ((?x1628 (stack ?x1626 ?x1299)))
 (let (($x1655 (= ?x1437 ?x1628)))
 (let (($x1638 ((_ is stack ) ?x1485)))
 (let (($x1639 (= c___________ center-to-right)))
 (let (($x1640 (and $x1639 $x1638)))
 (let (($x1641 (= c___________ center-to-left)))
 (let (($x1642 (and $x1641 $x1638)))
 (let ((?x1265 (left s___________)))
 (let (($x1643 ((_ is stack ) ?x1265)))
 (let (($x1644 (= c___________ left-to-right)))
 (let (($x1645 (and $x1644 $x1643)))
 (let (($x1676 (ite $x1645 $x1659 (ite $x1642 $x1659 (ite $x1640 $x1655 (ite $x1637 $x1656 (ite $x1635 $x1656 $x1659)))))))
 (let ((?x1483 (top ?x1265)))
 (let ((?x1622 (stack ?x1483 ?x1299)))
 (let (($x1651 (= ?x1437 ?x1622)))
 (let (($x1646 (= c___________ left-to-center)))
 (let (($x1647 (and $x1646 $x1643)))
 (ite $x1647 $x1651 $x1676)))))))))))))))))))))))))))))))
(assert
 (let ((?x1485 (center s___________)))
 (let ((?x1623 (center s____________)))
 (let (($x1661 (= ?x1623 ?x1485)))
 (let ((?x1299 (right s___________)))
 (let ((?x1630 (top ?x1299)))
 (let ((?x1632 (stack ?x1630 ?x1485)))
 (let (($x1658 (= ?x1623 ?x1632)))
 (let (($x1633 ((_ is stack ) ?x1299)))
 (let (($x1634 (= c___________ right-to-center)))
 (let (($x1635 (and $x1634 $x1633)))
 (let (($x1636 (= c___________ right-to-left)))
 (let (($x1637 (and $x1636 $x1633)))
 (let ((?x1625 (rest ?x1485)))
 (let (($x1653 (= ?x1623 ?x1625)))
 (let (($x1638 ((_ is stack ) ?x1485)))
 (let (($x1639 (= c___________ center-to-right)))
 (let (($x1640 (and $x1639 $x1638)))
 (let (($x1641 (= c___________ center-to-left)))
 (let (($x1642 (and $x1641 $x1638)))
 (let ((?x1265 (left s___________)))
 (let ((?x1483 (top ?x1265)))
 (let ((?x1624 (stack ?x1483 ?x1485)))
 (let (($x1652 (= ?x1623 ?x1624)))
 (let (($x1643 ((_ is stack ) ?x1265)))
 (let (($x1644 (= c___________ left-to-right)))
 (let (($x1645 (and $x1644 $x1643)))
 (let (($x1675 (ite $x1645 $x1652 (ite $x1642 $x1653 (ite $x1640 $x1653 (ite $x1637 $x1661 (ite $x1635 $x1658 $x1661)))))))
 (let (($x1646 (= c___________ left-to-center)))
 (let (($x1647 (and $x1646 $x1643)))
 (ite $x1647 $x1661 $x1675)))))))))))))))))))))))))))))))
(assert
 (let ((?x61 (stack Q (stack N empty))))
 (let ((?x1437 (right s____________)))
 (let (($x1679 (= ?x1437 ?x61)))
 (let ((?x51 (stack L (stack C (stack B (stack P (stack F (stack I empty))))))))
 (let ((?x57 (stack H (stack K (stack G (stack D (stack E (stack A ?x51))))))))
 (let ((?x59 (stack M (stack O ?x57))))
 (let ((?x1623 (center s____________)))
 (let (($x1710 (= ?x1623 ?x59)))
 (let ((?x30 (stack J empty)))
 (let ((?x1403 (left s____________)))
 (let (($x1711 (= ?x1403 ?x30)))
 (let (($x1713 (not (and $x1711 $x1710 $x1679))))
 (not $x1713))))))))))))))
(check-sat)
(exit)
