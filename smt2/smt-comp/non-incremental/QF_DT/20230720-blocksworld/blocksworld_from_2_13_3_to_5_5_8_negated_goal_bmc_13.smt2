(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x31 (stack M empty)))
 (let ((?x30 (stack P ?x31)))
 (let ((?x111 (left s_tmp_)))
 (= ?x111 ?x30)))))
(assert
 (let ((?x32 (stack H empty)))
 (let ((?x33 (stack D ?x32)))
 (let ((?x34 (stack N ?x33)))
 (let ((?x35 (stack O ?x34)))
 (let ((?x36 (stack C ?x35)))
 (let ((?x37 (stack F ?x36)))
 (let ((?x38 (stack R ?x37)))
 (let ((?x39 (stack J ?x38)))
 (let ((?x40 (stack K ?x39)))
 (let ((?x41 (stack E ?x40)))
 (let ((?x42 (stack I ?x41)))
 (let ((?x43 (stack Q ?x42)))
 (let ((?x44 (stack L ?x43)))
 (let ((?x114 (center s_tmp__)))
 (= ?x114 ?x44))))))))))))))))
(assert
 (let ((?x45 (stack A empty)))
 (let ((?x46 (stack B ?x45)))
 (let ((?x47 (stack G ?x46)))
 (let ((?x117 (right s_tmp___)))
 (= ?x117 ?x47))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x144 (left s_tmp__)))
 (= (left s_tmp___) ?x144)))
(assert
 (let ((?x114 (center s_tmp__)))
 (= (center s_tmp___) ?x114)))
(assert
 (let ((?x148 (center s_tmp_)))
 (= ?x148 (center s_tmp))))
(assert
 (let ((?x151 (right s_tmp_)))
 (= ?x151 (right s_tmp))))
(assert
 (let ((?x111 (left s_tmp_)))
 (let ((?x144 (left s_tmp__)))
 (= ?x144 ?x111))))
(assert
 (let ((?x151 (right s_tmp_)))
 (let ((?x155 (right s_tmp__)))
 (= ?x155 ?x151))))
(assert
 (= c__ c!1))
(assert
 (let ((?x88 (left s_)))
 (let ((?x256 (left s__)))
 (let (($x298 (= ?x256 ?x88)))
 (let ((?x91 (right s_)))
 (let (($x259 ((_ is stack ) ?x91)))
 (let (($x271 (= c_ right-to-left)))
 (let (($x275 (and $x271 $x259)))
 (let ((?x93 (center s_)))
 (let (($x276 ((_ is stack ) ?x93)))
 (let (($x277 (= c_ center-to-right)))
 (let (($x260 (and $x277 $x276)))
 (let (($x261 (= c_ center-to-left)))
 (let (($x262 (and $x261 $x276)))
 (let (($x307 (ite $x262 (= ?x256 (stack (top ?x93) ?x88)) (ite $x260 $x298 (ite $x275 (= ?x256 (stack (top ?x91) ?x88)) $x298)))))
 (let (($x285 (= ?x256 (rest ?x88))))
 (let (($x263 ((_ is stack ) ?x88)))
 (let (($x264 (= c_ left-to-right)))
 (let (($x265 (and $x264 $x263)))
 (let (($x281 (= c_ left-to-center)))
 (let (($x282 (and $x281 $x263)))
 (ite $x282 $x285 (ite $x265 $x285 $x307)))))))))))))))))))))))
(assert
 (let ((?x91 (right s_)))
 (let ((?x273 (right s__)))
 (let (($x294 (= ?x273 ?x91)))
 (let (($x291 (= ?x273 (rest ?x91))))
 (let (($x259 ((_ is stack ) ?x91)))
 (let (($x269 (= c_ right-to-center)))
 (let (($x270 (and $x269 $x259)))
 (let (($x271 (= c_ right-to-left)))
 (let (($x275 (and $x271 $x259)))
 (let ((?x93 (center s_)))
 (let (($x276 ((_ is stack ) ?x93)))
 (let (($x277 (= c_ center-to-right)))
 (let (($x260 (and $x277 $x276)))
 (let (($x304 (ite $x260 (= ?x273 (stack (top ?x93) ?x91)) (ite $x275 $x291 (ite $x270 $x291 $x294)))))
 (let (($x261 (= c_ center-to-left)))
 (let (($x262 (and $x261 $x276)))
 (let ((?x88 (left s_)))
 (let (($x263 ((_ is stack ) ?x88)))
 (let (($x264 (= c_ left-to-right)))
 (let (($x265 (and $x264 $x263)))
 (let (($x281 (= c_ left-to-center)))
 (let (($x282 (and $x281 $x263)))
 (ite $x282 (= ?x273 (stack (top ?x88) ?x91)) (ite $x265 $x294 (ite $x262 $x294 $x304))))))))))))))))))))))))))
(assert
 (let ((?x93 (center s_)))
 (let ((?x279 (center s__)))
 (let (($x296 (= ?x279 ?x93)))
 (let ((?x91 (right s_)))
 (let (($x259 ((_ is stack ) ?x91)))
 (let (($x269 (= c_ right-to-center)))
 (let (($x270 (and $x269 $x259)))
 (let (($x271 (= c_ right-to-left)))
 (let (($x275 (and $x271 $x259)))
 (let (($x288 (= ?x279 (rest ?x93))))
 (let (($x276 ((_ is stack ) ?x93)))
 (let (($x277 (= c_ center-to-right)))
 (let (($x260 (and $x277 $x276)))
 (let (($x303 (ite $x260 $x288 (ite $x275 $x296 (ite $x270 (= ?x279 (stack (top ?x91) ?x93)) $x296)))))
 (let (($x261 (= c_ center-to-left)))
 (let (($x262 (and $x261 $x276)))
 (let ((?x88 (left s_)))
 (let (($x263 ((_ is stack ) ?x88)))
 (let (($x264 (= c_ left-to-right)))
 (let (($x265 (and $x264 $x263)))
 (let (($x281 (= c_ left-to-center)))
 (let (($x282 (and $x281 $x263)))
 (ite $x282 $x296 (ite $x265 (= ?x279 (stack (top ?x88) ?x93)) (ite $x262 $x288 $x303))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x256 (left s__)))
 (let ((?x158 (left s___)))
 (let (($x427 (= ?x158 ?x256)))
 (let ((?x273 (right s__)))
 (let ((?x394 (top ?x273)))
 (let ((?x395 (stack ?x394 ?x256)))
 (let (($x421 (= ?x158 ?x395)))
 (let (($x397 ((_ is stack ) ?x273)))
 (let (($x400 (= c__ right-to-left)))
 (let (($x401 (and $x400 $x397)))
 (let ((?x279 (center s__)))
 (let (($x402 ((_ is stack ) ?x279)))
 (let (($x403 (= c__ center-to-right)))
 (let (($x404 (and $x403 $x402)))
 (let ((?x390 (top ?x279)))
 (let ((?x391 (stack ?x390 ?x256)))
 (let (($x418 (= ?x158 ?x391)))
 (let (($x405 (= c__ center-to-left)))
 (let (($x406 (and $x405 $x402)))
 (let ((?x160 (rest ?x256)))
 (let (($x414 (= ?x158 ?x160)))
 (let (($x407 ((_ is stack ) ?x256)))
 (let (($x408 (= c__ left-to-right)))
 (let (($x409 (and $x408 $x407)))
 (let (($x410 (= c__ left-to-center)))
 (let (($x411 (and $x410 $x407)))
 (ite $x411 $x414 (ite $x409 $x414 (ite $x406 $x418 (ite $x404 $x427 (ite $x401 $x421 $x427))))))))))))))))))))))))))))))))
(assert
 (let ((?x273 (right s__)))
 (let ((?x161 (right s___)))
 (let (($x423 (= ?x161 ?x273)))
 (let ((?x393 (rest ?x273)))
 (let (($x420 (= ?x161 ?x393)))
 (let (($x397 ((_ is stack ) ?x273)))
 (let (($x398 (= c__ right-to-center)))
 (let (($x399 (and $x398 $x397)))
 (let (($x400 (= c__ right-to-left)))
 (let (($x401 (and $x400 $x397)))
 (let ((?x279 (center s__)))
 (let ((?x390 (top ?x279)))
 (let ((?x392 (stack ?x390 ?x273)))
 (let (($x419 (= ?x161 ?x392)))
 (let (($x402 ((_ is stack ) ?x279)))
 (let (($x403 (= c__ center-to-right)))
 (let (($x404 (and $x403 $x402)))
 (let (($x405 (= c__ center-to-left)))
 (let (($x406 (and $x405 $x402)))
 (let ((?x256 (left s__)))
 (let (($x407 ((_ is stack ) ?x256)))
 (let (($x408 (= c__ left-to-right)))
 (let (($x409 (and $x408 $x407)))
 (let (($x440 (ite $x409 $x423 (ite $x406 $x423 (ite $x404 $x419 (ite $x401 $x420 (ite $x399 $x420 $x423)))))))
 (let ((?x250 (top ?x256)))
 (let ((?x386 (stack ?x250 ?x273)))
 (let (($x415 (= ?x161 ?x386)))
 (let (($x410 (= c__ left-to-center)))
 (let (($x411 (and $x410 $x407)))
 (ite $x411 $x415 $x440)))))))))))))))))))))))))))))))
(assert
 (let ((?x279 (center s__)))
 (let ((?x387 (center s___)))
 (let (($x425 (= ?x387 ?x279)))
 (let ((?x273 (right s__)))
 (let ((?x394 (top ?x273)))
 (let ((?x396 (stack ?x394 ?x279)))
 (let (($x422 (= ?x387 ?x396)))
 (let (($x397 ((_ is stack ) ?x273)))
 (let (($x398 (= c__ right-to-center)))
 (let (($x399 (and $x398 $x397)))
 (let (($x400 (= c__ right-to-left)))
 (let (($x401 (and $x400 $x397)))
 (let ((?x389 (rest ?x279)))
 (let (($x417 (= ?x387 ?x389)))
 (let (($x402 ((_ is stack ) ?x279)))
 (let (($x403 (= c__ center-to-right)))
 (let (($x404 (and $x403 $x402)))
 (let (($x405 (= c__ center-to-left)))
 (let (($x406 (and $x405 $x402)))
 (let ((?x256 (left s__)))
 (let ((?x250 (top ?x256)))
 (let ((?x388 (stack ?x250 ?x279)))
 (let (($x416 (= ?x387 ?x388)))
 (let (($x407 ((_ is stack ) ?x256)))
 (let (($x408 (= c__ left-to-right)))
 (let (($x409 (and $x408 $x407)))
 (let (($x439 (ite $x409 $x416 (ite $x406 $x417 (ite $x404 $x417 (ite $x401 $x425 (ite $x399 $x422 $x425)))))))
 (let (($x410 (= c__ left-to-center)))
 (let (($x411 (and $x410 $x407)))
 (ite $x411 $x425 $x439)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x158 (left s___)))
 (let ((?x314 (left s____)))
 (let (($x565 (= ?x314 ?x158)))
 (let ((?x161 (right s___)))
 (let ((?x532 (top ?x161)))
 (let ((?x533 (stack ?x532 ?x158)))
 (let (($x559 (= ?x314 ?x533)))
 (let (($x535 ((_ is stack ) ?x161)))
 (let (($x538 (= c___ right-to-left)))
 (let (($x539 (and $x538 $x535)))
 (let ((?x387 (center s___)))
 (let (($x540 ((_ is stack ) ?x387)))
 (let (($x541 (= c___ center-to-right)))
 (let (($x542 (and $x541 $x540)))
 (let ((?x528 (top ?x387)))
 (let ((?x529 (stack ?x528 ?x158)))
 (let (($x556 (= ?x314 ?x529)))
 (let (($x543 (= c___ center-to-left)))
 (let (($x544 (and $x543 $x540)))
 (let ((?x358 (rest ?x158)))
 (let (($x552 (= ?x314 ?x358)))
 (let (($x545 ((_ is stack ) ?x158)))
 (let (($x546 (= c___ left-to-right)))
 (let (($x547 (and $x546 $x545)))
 (let (($x548 (= c___ left-to-center)))
 (let (($x549 (and $x548 $x545)))
 (ite $x549 $x552 (ite $x547 $x552 (ite $x544 $x556 (ite $x542 $x565 (ite $x539 $x559 $x565))))))))))))))))))))))))))))))))
(assert
 (let ((?x161 (right s___)))
 (let ((?x359 (right s____)))
 (let (($x561 (= ?x359 ?x161)))
 (let ((?x531 (rest ?x161)))
 (let (($x558 (= ?x359 ?x531)))
 (let (($x535 ((_ is stack ) ?x161)))
 (let (($x536 (= c___ right-to-center)))
 (let (($x537 (and $x536 $x535)))
 (let (($x538 (= c___ right-to-left)))
 (let (($x539 (and $x538 $x535)))
 (let ((?x387 (center s___)))
 (let ((?x528 (top ?x387)))
 (let ((?x530 (stack ?x528 ?x161)))
 (let (($x557 (= ?x359 ?x530)))
 (let (($x540 ((_ is stack ) ?x387)))
 (let (($x541 (= c___ center-to-right)))
 (let (($x542 (and $x541 $x540)))
 (let (($x543 (= c___ center-to-left)))
 (let (($x544 (and $x543 $x540)))
 (let ((?x158 (left s___)))
 (let (($x545 ((_ is stack ) ?x158)))
 (let (($x546 (= c___ left-to-right)))
 (let (($x547 (and $x546 $x545)))
 (let (($x578 (ite $x547 $x561 (ite $x544 $x561 (ite $x542 $x557 (ite $x539 $x558 (ite $x537 $x558 $x561)))))))
 (let ((?x385 (top ?x158)))
 (let ((?x524 (stack ?x385 ?x161)))
 (let (($x553 (= ?x359 ?x524)))
 (let (($x548 (= c___ left-to-center)))
 (let (($x549 (and $x548 $x545)))
 (ite $x549 $x553 $x578)))))))))))))))))))))))))))))))
(assert
 (let ((?x387 (center s___)))
 (let ((?x525 (center s____)))
 (let (($x563 (= ?x525 ?x387)))
 (let ((?x161 (right s___)))
 (let ((?x532 (top ?x161)))
 (let ((?x534 (stack ?x532 ?x387)))
 (let (($x560 (= ?x525 ?x534)))
 (let (($x535 ((_ is stack ) ?x161)))
 (let (($x536 (= c___ right-to-center)))
 (let (($x537 (and $x536 $x535)))
 (let (($x538 (= c___ right-to-left)))
 (let (($x539 (and $x538 $x535)))
 (let ((?x527 (rest ?x387)))
 (let (($x555 (= ?x525 ?x527)))
 (let (($x540 ((_ is stack ) ?x387)))
 (let (($x541 (= c___ center-to-right)))
 (let (($x542 (and $x541 $x540)))
 (let (($x543 (= c___ center-to-left)))
 (let (($x544 (and $x543 $x540)))
 (let ((?x158 (left s___)))
 (let ((?x385 (top ?x158)))
 (let ((?x526 (stack ?x385 ?x387)))
 (let (($x554 (= ?x525 ?x526)))
 (let (($x545 ((_ is stack ) ?x158)))
 (let (($x546 (= c___ left-to-right)))
 (let (($x547 (and $x546 $x545)))
 (let (($x577 (ite $x547 $x554 (ite $x544 $x555 (ite $x542 $x555 (ite $x539 $x563 (ite $x537 $x560 $x563)))))))
 (let (($x548 (= c___ left-to-center)))
 (let (($x549 (and $x548 $x545)))
 (ite $x549 $x563 $x577)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x314 (left s____)))
 (let ((?x443 (left s_____)))
 (let (($x703 (= ?x443 ?x314)))
 (let ((?x359 (right s____)))
 (let ((?x670 (top ?x359)))
 (let ((?x671 (stack ?x670 ?x314)))
 (let (($x697 (= ?x443 ?x671)))
 (let (($x673 ((_ is stack ) ?x359)))
 (let (($x676 (= c____ right-to-left)))
 (let (($x677 (and $x676 $x673)))
 (let ((?x525 (center s____)))
 (let (($x678 ((_ is stack ) ?x525)))
 (let (($x679 (= c____ center-to-right)))
 (let (($x680 (and $x679 $x678)))
 (let ((?x666 (top ?x525)))
 (let ((?x667 (stack ?x666 ?x314)))
 (let (($x694 (= ?x443 ?x667)))
 (let (($x681 (= c____ center-to-left)))
 (let (($x682 (and $x681 $x678)))
 (let ((?x476 (rest ?x314)))
 (let (($x690 (= ?x443 ?x476)))
 (let (($x683 ((_ is stack ) ?x314)))
 (let (($x684 (= c____ left-to-right)))
 (let (($x685 (and $x684 $x683)))
 (let (($x686 (= c____ left-to-center)))
 (let (($x687 (and $x686 $x683)))
 (ite $x687 $x690 (ite $x685 $x690 (ite $x682 $x694 (ite $x680 $x703 (ite $x677 $x697 $x703))))))))))))))))))))))))))))))))
(assert
 (let ((?x359 (right s____)))
 (let ((?x477 (right s_____)))
 (let (($x699 (= ?x477 ?x359)))
 (let ((?x669 (rest ?x359)))
 (let (($x696 (= ?x477 ?x669)))
 (let (($x673 ((_ is stack ) ?x359)))
 (let (($x674 (= c____ right-to-center)))
 (let (($x675 (and $x674 $x673)))
 (let (($x676 (= c____ right-to-left)))
 (let (($x677 (and $x676 $x673)))
 (let ((?x525 (center s____)))
 (let ((?x666 (top ?x525)))
 (let ((?x668 (stack ?x666 ?x359)))
 (let (($x695 (= ?x477 ?x668)))
 (let (($x678 ((_ is stack ) ?x525)))
 (let (($x679 (= c____ center-to-right)))
 (let (($x680 (and $x679 $x678)))
 (let (($x681 (= c____ center-to-left)))
 (let (($x682 (and $x681 $x678)))
 (let ((?x314 (left s____)))
 (let (($x683 ((_ is stack ) ?x314)))
 (let (($x684 (= c____ left-to-right)))
 (let (($x685 (and $x684 $x683)))
 (let (($x716 (ite $x685 $x699 (ite $x682 $x699 (ite $x680 $x695 (ite $x677 $x696 (ite $x675 $x696 $x699)))))))
 (let ((?x523 (top ?x314)))
 (let ((?x662 (stack ?x523 ?x359)))
 (let (($x691 (= ?x477 ?x662)))
 (let (($x686 (= c____ left-to-center)))
 (let (($x687 (and $x686 $x683)))
 (ite $x687 $x691 $x716)))))))))))))))))))))))))))))))
(assert
 (let ((?x525 (center s____)))
 (let ((?x663 (center s_____)))
 (let (($x701 (= ?x663 ?x525)))
 (let ((?x359 (right s____)))
 (let ((?x670 (top ?x359)))
 (let ((?x672 (stack ?x670 ?x525)))
 (let (($x698 (= ?x663 ?x672)))
 (let (($x673 ((_ is stack ) ?x359)))
 (let (($x674 (= c____ right-to-center)))
 (let (($x675 (and $x674 $x673)))
 (let (($x676 (= c____ right-to-left)))
 (let (($x677 (and $x676 $x673)))
 (let ((?x665 (rest ?x525)))
 (let (($x693 (= ?x663 ?x665)))
 (let (($x678 ((_ is stack ) ?x525)))
 (let (($x679 (= c____ center-to-right)))
 (let (($x680 (and $x679 $x678)))
 (let (($x681 (= c____ center-to-left)))
 (let (($x682 (and $x681 $x678)))
 (let ((?x314 (left s____)))
 (let ((?x523 (top ?x314)))
 (let ((?x664 (stack ?x523 ?x525)))
 (let (($x692 (= ?x663 ?x664)))
 (let (($x683 ((_ is stack ) ?x314)))
 (let (($x684 (= c____ left-to-right)))
 (let (($x685 (and $x684 $x683)))
 (let (($x715 (ite $x685 $x692 (ite $x682 $x693 (ite $x680 $x693 (ite $x677 $x701 (ite $x675 $x698 $x701)))))))
 (let (($x686 (= c____ left-to-center)))
 (let (($x687 (and $x686 $x683)))
 (ite $x687 $x701 $x715)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x443 (left s_____)))
 (let ((?x581 (left s______)))
 (let (($x841 (= ?x581 ?x443)))
 (let ((?x477 (right s_____)))
 (let ((?x808 (top ?x477)))
 (let ((?x809 (stack ?x808 ?x443)))
 (let (($x835 (= ?x581 ?x809)))
 (let (($x811 ((_ is stack ) ?x477)))
 (let (($x814 (= c_____ right-to-left)))
 (let (($x815 (and $x814 $x811)))
 (let ((?x663 (center s_____)))
 (let (($x816 ((_ is stack ) ?x663)))
 (let (($x817 (= c_____ center-to-right)))
 (let (($x818 (and $x817 $x816)))
 (let ((?x804 (top ?x663)))
 (let ((?x805 (stack ?x804 ?x443)))
 (let (($x832 (= ?x581 ?x805)))
 (let (($x819 (= c_____ center-to-left)))
 (let (($x820 (and $x819 $x816)))
 (let ((?x614 (rest ?x443)))
 (let (($x828 (= ?x581 ?x614)))
 (let (($x821 ((_ is stack ) ?x443)))
 (let (($x822 (= c_____ left-to-right)))
 (let (($x823 (and $x822 $x821)))
 (let (($x824 (= c_____ left-to-center)))
 (let (($x825 (and $x824 $x821)))
 (ite $x825 $x828 (ite $x823 $x828 (ite $x820 $x832 (ite $x818 $x841 (ite $x815 $x835 $x841))))))))))))))))))))))))))))))))
(assert
 (let ((?x477 (right s_____)))
 (let ((?x615 (right s______)))
 (let (($x837 (= ?x615 ?x477)))
 (let ((?x807 (rest ?x477)))
 (let (($x834 (= ?x615 ?x807)))
 (let (($x811 ((_ is stack ) ?x477)))
 (let (($x812 (= c_____ right-to-center)))
 (let (($x813 (and $x812 $x811)))
 (let (($x814 (= c_____ right-to-left)))
 (let (($x815 (and $x814 $x811)))
 (let ((?x663 (center s_____)))
 (let ((?x804 (top ?x663)))
 (let ((?x806 (stack ?x804 ?x477)))
 (let (($x833 (= ?x615 ?x806)))
 (let (($x816 ((_ is stack ) ?x663)))
 (let (($x817 (= c_____ center-to-right)))
 (let (($x818 (and $x817 $x816)))
 (let (($x819 (= c_____ center-to-left)))
 (let (($x820 (and $x819 $x816)))
 (let ((?x443 (left s_____)))
 (let (($x821 ((_ is stack ) ?x443)))
 (let (($x822 (= c_____ left-to-right)))
 (let (($x823 (and $x822 $x821)))
 (let (($x854 (ite $x823 $x837 (ite $x820 $x837 (ite $x818 $x833 (ite $x815 $x834 (ite $x813 $x834 $x837)))))))
 (let ((?x661 (top ?x443)))
 (let ((?x800 (stack ?x661 ?x477)))
 (let (($x829 (= ?x615 ?x800)))
 (let (($x824 (= c_____ left-to-center)))
 (let (($x825 (and $x824 $x821)))
 (ite $x825 $x829 $x854)))))))))))))))))))))))))))))))
(assert
 (let ((?x663 (center s_____)))
 (let ((?x801 (center s______)))
 (let (($x839 (= ?x801 ?x663)))
 (let ((?x477 (right s_____)))
 (let ((?x808 (top ?x477)))
 (let ((?x810 (stack ?x808 ?x663)))
 (let (($x836 (= ?x801 ?x810)))
 (let (($x811 ((_ is stack ) ?x477)))
 (let (($x812 (= c_____ right-to-center)))
 (let (($x813 (and $x812 $x811)))
 (let (($x814 (= c_____ right-to-left)))
 (let (($x815 (and $x814 $x811)))
 (let ((?x803 (rest ?x663)))
 (let (($x831 (= ?x801 ?x803)))
 (let (($x816 ((_ is stack ) ?x663)))
 (let (($x817 (= c_____ center-to-right)))
 (let (($x818 (and $x817 $x816)))
 (let (($x819 (= c_____ center-to-left)))
 (let (($x820 (and $x819 $x816)))
 (let ((?x443 (left s_____)))
 (let ((?x661 (top ?x443)))
 (let ((?x802 (stack ?x661 ?x663)))
 (let (($x830 (= ?x801 ?x802)))
 (let (($x821 ((_ is stack ) ?x443)))
 (let (($x822 (= c_____ left-to-right)))
 (let (($x823 (and $x822 $x821)))
 (let (($x853 (ite $x823 $x830 (ite $x820 $x831 (ite $x818 $x831 (ite $x815 $x839 (ite $x813 $x836 $x839)))))))
 (let (($x824 (= c_____ left-to-center)))
 (let (($x825 (and $x824 $x821)))
 (ite $x825 $x839 $x853)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x581 (left s______)))
 (let ((?x719 (left s_______)))
 (let (($x979 (= ?x719 ?x581)))
 (let ((?x615 (right s______)))
 (let ((?x946 (top ?x615)))
 (let ((?x947 (stack ?x946 ?x581)))
 (let (($x973 (= ?x719 ?x947)))
 (let (($x949 ((_ is stack ) ?x615)))
 (let (($x952 (= c______ right-to-left)))
 (let (($x953 (and $x952 $x949)))
 (let ((?x801 (center s______)))
 (let (($x954 ((_ is stack ) ?x801)))
 (let (($x955 (= c______ center-to-right)))
 (let (($x956 (and $x955 $x954)))
 (let ((?x942 (top ?x801)))
 (let ((?x943 (stack ?x942 ?x581)))
 (let (($x970 (= ?x719 ?x943)))
 (let (($x957 (= c______ center-to-left)))
 (let (($x958 (and $x957 $x954)))
 (let ((?x752 (rest ?x581)))
 (let (($x966 (= ?x719 ?x752)))
 (let (($x959 ((_ is stack ) ?x581)))
 (let (($x960 (= c______ left-to-right)))
 (let (($x961 (and $x960 $x959)))
 (let (($x962 (= c______ left-to-center)))
 (let (($x963 (and $x962 $x959)))
 (ite $x963 $x966 (ite $x961 $x966 (ite $x958 $x970 (ite $x956 $x979 (ite $x953 $x973 $x979))))))))))))))))))))))))))))))))
(assert
 (let ((?x615 (right s______)))
 (let ((?x753 (right s_______)))
 (let (($x975 (= ?x753 ?x615)))
 (let ((?x945 (rest ?x615)))
 (let (($x972 (= ?x753 ?x945)))
 (let (($x949 ((_ is stack ) ?x615)))
 (let (($x950 (= c______ right-to-center)))
 (let (($x951 (and $x950 $x949)))
 (let (($x952 (= c______ right-to-left)))
 (let (($x953 (and $x952 $x949)))
 (let ((?x801 (center s______)))
 (let ((?x942 (top ?x801)))
 (let ((?x944 (stack ?x942 ?x615)))
 (let (($x971 (= ?x753 ?x944)))
 (let (($x954 ((_ is stack ) ?x801)))
 (let (($x955 (= c______ center-to-right)))
 (let (($x956 (and $x955 $x954)))
 (let (($x957 (= c______ center-to-left)))
 (let (($x958 (and $x957 $x954)))
 (let ((?x581 (left s______)))
 (let (($x959 ((_ is stack ) ?x581)))
 (let (($x960 (= c______ left-to-right)))
 (let (($x961 (and $x960 $x959)))
 (let (($x992 (ite $x961 $x975 (ite $x958 $x975 (ite $x956 $x971 (ite $x953 $x972 (ite $x951 $x972 $x975)))))))
 (let ((?x799 (top ?x581)))
 (let ((?x938 (stack ?x799 ?x615)))
 (let (($x967 (= ?x753 ?x938)))
 (let (($x962 (= c______ left-to-center)))
 (let (($x963 (and $x962 $x959)))
 (ite $x963 $x967 $x992)))))))))))))))))))))))))))))))
(assert
 (let ((?x801 (center s______)))
 (let ((?x939 (center s_______)))
 (let (($x977 (= ?x939 ?x801)))
 (let ((?x615 (right s______)))
 (let ((?x946 (top ?x615)))
 (let ((?x948 (stack ?x946 ?x801)))
 (let (($x974 (= ?x939 ?x948)))
 (let (($x949 ((_ is stack ) ?x615)))
 (let (($x950 (= c______ right-to-center)))
 (let (($x951 (and $x950 $x949)))
 (let (($x952 (= c______ right-to-left)))
 (let (($x953 (and $x952 $x949)))
 (let ((?x941 (rest ?x801)))
 (let (($x969 (= ?x939 ?x941)))
 (let (($x954 ((_ is stack ) ?x801)))
 (let (($x955 (= c______ center-to-right)))
 (let (($x956 (and $x955 $x954)))
 (let (($x957 (= c______ center-to-left)))
 (let (($x958 (and $x957 $x954)))
 (let ((?x581 (left s______)))
 (let ((?x799 (top ?x581)))
 (let ((?x940 (stack ?x799 ?x801)))
 (let (($x968 (= ?x939 ?x940)))
 (let (($x959 ((_ is stack ) ?x581)))
 (let (($x960 (= c______ left-to-right)))
 (let (($x961 (and $x960 $x959)))
 (let (($x991 (ite $x961 $x968 (ite $x958 $x969 (ite $x956 $x969 (ite $x953 $x977 (ite $x951 $x974 $x977)))))))
 (let (($x962 (= c______ left-to-center)))
 (let (($x963 (and $x962 $x959)))
 (ite $x963 $x977 $x991)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x719 (left s_______)))
 (let ((?x857 (left s________)))
 (let (($x1117 (= ?x857 ?x719)))
 (let ((?x753 (right s_______)))
 (let ((?x1084 (top ?x753)))
 (let ((?x1085 (stack ?x1084 ?x719)))
 (let (($x1111 (= ?x857 ?x1085)))
 (let (($x1087 ((_ is stack ) ?x753)))
 (let (($x1090 (= c_______ right-to-left)))
 (let (($x1091 (and $x1090 $x1087)))
 (let ((?x939 (center s_______)))
 (let (($x1092 ((_ is stack ) ?x939)))
 (let (($x1093 (= c_______ center-to-right)))
 (let (($x1094 (and $x1093 $x1092)))
 (let ((?x1080 (top ?x939)))
 (let ((?x1081 (stack ?x1080 ?x719)))
 (let (($x1108 (= ?x857 ?x1081)))
 (let (($x1095 (= c_______ center-to-left)))
 (let (($x1096 (and $x1095 $x1092)))
 (let ((?x890 (rest ?x719)))
 (let (($x1104 (= ?x857 ?x890)))
 (let (($x1097 ((_ is stack ) ?x719)))
 (let (($x1098 (= c_______ left-to-right)))
 (let (($x1099 (and $x1098 $x1097)))
 (let (($x1100 (= c_______ left-to-center)))
 (let (($x1101 (and $x1100 $x1097)))
 (ite $x1101 $x1104 (ite $x1099 $x1104 (ite $x1096 $x1108 (ite $x1094 $x1117 (ite $x1091 $x1111 $x1117))))))))))))))))))))))))))))))))
(assert
 (let ((?x753 (right s_______)))
 (let ((?x891 (right s________)))
 (let (($x1113 (= ?x891 ?x753)))
 (let ((?x1083 (rest ?x753)))
 (let (($x1110 (= ?x891 ?x1083)))
 (let (($x1087 ((_ is stack ) ?x753)))
 (let (($x1088 (= c_______ right-to-center)))
 (let (($x1089 (and $x1088 $x1087)))
 (let (($x1090 (= c_______ right-to-left)))
 (let (($x1091 (and $x1090 $x1087)))
 (let ((?x939 (center s_______)))
 (let ((?x1080 (top ?x939)))
 (let ((?x1082 (stack ?x1080 ?x753)))
 (let (($x1109 (= ?x891 ?x1082)))
 (let (($x1092 ((_ is stack ) ?x939)))
 (let (($x1093 (= c_______ center-to-right)))
 (let (($x1094 (and $x1093 $x1092)))
 (let (($x1095 (= c_______ center-to-left)))
 (let (($x1096 (and $x1095 $x1092)))
 (let ((?x719 (left s_______)))
 (let (($x1097 ((_ is stack ) ?x719)))
 (let (($x1098 (= c_______ left-to-right)))
 (let (($x1099 (and $x1098 $x1097)))
 (let (($x1130 (ite $x1099 $x1113 (ite $x1096 $x1113 (ite $x1094 $x1109 (ite $x1091 $x1110 (ite $x1089 $x1110 $x1113)))))))
 (let ((?x937 (top ?x719)))
 (let ((?x1076 (stack ?x937 ?x753)))
 (let (($x1105 (= ?x891 ?x1076)))
 (let (($x1100 (= c_______ left-to-center)))
 (let (($x1101 (and $x1100 $x1097)))
 (ite $x1101 $x1105 $x1130)))))))))))))))))))))))))))))))
(assert
 (let ((?x939 (center s_______)))
 (let ((?x1077 (center s________)))
 (let (($x1115 (= ?x1077 ?x939)))
 (let ((?x753 (right s_______)))
 (let ((?x1084 (top ?x753)))
 (let ((?x1086 (stack ?x1084 ?x939)))
 (let (($x1112 (= ?x1077 ?x1086)))
 (let (($x1087 ((_ is stack ) ?x753)))
 (let (($x1088 (= c_______ right-to-center)))
 (let (($x1089 (and $x1088 $x1087)))
 (let (($x1090 (= c_______ right-to-left)))
 (let (($x1091 (and $x1090 $x1087)))
 (let ((?x1079 (rest ?x939)))
 (let (($x1107 (= ?x1077 ?x1079)))
 (let (($x1092 ((_ is stack ) ?x939)))
 (let (($x1093 (= c_______ center-to-right)))
 (let (($x1094 (and $x1093 $x1092)))
 (let (($x1095 (= c_______ center-to-left)))
 (let (($x1096 (and $x1095 $x1092)))
 (let ((?x719 (left s_______)))
 (let ((?x937 (top ?x719)))
 (let ((?x1078 (stack ?x937 ?x939)))
 (let (($x1106 (= ?x1077 ?x1078)))
 (let (($x1097 ((_ is stack ) ?x719)))
 (let (($x1098 (= c_______ left-to-right)))
 (let (($x1099 (and $x1098 $x1097)))
 (let (($x1129 (ite $x1099 $x1106 (ite $x1096 $x1107 (ite $x1094 $x1107 (ite $x1091 $x1115 (ite $x1089 $x1112 $x1115)))))))
 (let (($x1100 (= c_______ left-to-center)))
 (let (($x1101 (and $x1100 $x1097)))
 (ite $x1101 $x1115 $x1129)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x857 (left s________)))
 (let ((?x995 (left s_________)))
 (let (($x1255 (= ?x995 ?x857)))
 (let ((?x891 (right s________)))
 (let ((?x1222 (top ?x891)))
 (let ((?x1223 (stack ?x1222 ?x857)))
 (let (($x1249 (= ?x995 ?x1223)))
 (let (($x1225 ((_ is stack ) ?x891)))
 (let (($x1228 (= c________ right-to-left)))
 (let (($x1229 (and $x1228 $x1225)))
 (let ((?x1077 (center s________)))
 (let (($x1230 ((_ is stack ) ?x1077)))
 (let (($x1231 (= c________ center-to-right)))
 (let (($x1232 (and $x1231 $x1230)))
 (let ((?x1218 (top ?x1077)))
 (let ((?x1219 (stack ?x1218 ?x857)))
 (let (($x1246 (= ?x995 ?x1219)))
 (let (($x1233 (= c________ center-to-left)))
 (let (($x1234 (and $x1233 $x1230)))
 (let ((?x1028 (rest ?x857)))
 (let (($x1242 (= ?x995 ?x1028)))
 (let (($x1235 ((_ is stack ) ?x857)))
 (let (($x1236 (= c________ left-to-right)))
 (let (($x1237 (and $x1236 $x1235)))
 (let (($x1238 (= c________ left-to-center)))
 (let (($x1239 (and $x1238 $x1235)))
 (ite $x1239 $x1242 (ite $x1237 $x1242 (ite $x1234 $x1246 (ite $x1232 $x1255 (ite $x1229 $x1249 $x1255))))))))))))))))))))))))))))))))
(assert
 (let ((?x891 (right s________)))
 (let ((?x1029 (right s_________)))
 (let (($x1251 (= ?x1029 ?x891)))
 (let ((?x1221 (rest ?x891)))
 (let (($x1248 (= ?x1029 ?x1221)))
 (let (($x1225 ((_ is stack ) ?x891)))
 (let (($x1226 (= c________ right-to-center)))
 (let (($x1227 (and $x1226 $x1225)))
 (let (($x1228 (= c________ right-to-left)))
 (let (($x1229 (and $x1228 $x1225)))
 (let ((?x1077 (center s________)))
 (let ((?x1218 (top ?x1077)))
 (let ((?x1220 (stack ?x1218 ?x891)))
 (let (($x1247 (= ?x1029 ?x1220)))
 (let (($x1230 ((_ is stack ) ?x1077)))
 (let (($x1231 (= c________ center-to-right)))
 (let (($x1232 (and $x1231 $x1230)))
 (let (($x1233 (= c________ center-to-left)))
 (let (($x1234 (and $x1233 $x1230)))
 (let ((?x857 (left s________)))
 (let (($x1235 ((_ is stack ) ?x857)))
 (let (($x1236 (= c________ left-to-right)))
 (let (($x1237 (and $x1236 $x1235)))
 (let (($x1268 (ite $x1237 $x1251 (ite $x1234 $x1251 (ite $x1232 $x1247 (ite $x1229 $x1248 (ite $x1227 $x1248 $x1251)))))))
 (let ((?x1075 (top ?x857)))
 (let ((?x1214 (stack ?x1075 ?x891)))
 (let (($x1243 (= ?x1029 ?x1214)))
 (let (($x1238 (= c________ left-to-center)))
 (let (($x1239 (and $x1238 $x1235)))
 (ite $x1239 $x1243 $x1268)))))))))))))))))))))))))))))))
(assert
 (let ((?x1077 (center s________)))
 (let ((?x1215 (center s_________)))
 (let (($x1253 (= ?x1215 ?x1077)))
 (let ((?x891 (right s________)))
 (let ((?x1222 (top ?x891)))
 (let ((?x1224 (stack ?x1222 ?x1077)))
 (let (($x1250 (= ?x1215 ?x1224)))
 (let (($x1225 ((_ is stack ) ?x891)))
 (let (($x1226 (= c________ right-to-center)))
 (let (($x1227 (and $x1226 $x1225)))
 (let (($x1228 (= c________ right-to-left)))
 (let (($x1229 (and $x1228 $x1225)))
 (let ((?x1217 (rest ?x1077)))
 (let (($x1245 (= ?x1215 ?x1217)))
 (let (($x1230 ((_ is stack ) ?x1077)))
 (let (($x1231 (= c________ center-to-right)))
 (let (($x1232 (and $x1231 $x1230)))
 (let (($x1233 (= c________ center-to-left)))
 (let (($x1234 (and $x1233 $x1230)))
 (let ((?x857 (left s________)))
 (let ((?x1075 (top ?x857)))
 (let ((?x1216 (stack ?x1075 ?x1077)))
 (let (($x1244 (= ?x1215 ?x1216)))
 (let (($x1235 ((_ is stack ) ?x857)))
 (let (($x1236 (= c________ left-to-right)))
 (let (($x1237 (and $x1236 $x1235)))
 (let (($x1267 (ite $x1237 $x1244 (ite $x1234 $x1245 (ite $x1232 $x1245 (ite $x1229 $x1253 (ite $x1227 $x1250 $x1253)))))))
 (let (($x1238 (= c________ left-to-center)))
 (let (($x1239 (and $x1238 $x1235)))
 (ite $x1239 $x1253 $x1267)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x995 (left s_________)))
 (let ((?x1133 (left s__________)))
 (let (($x1393 (= ?x1133 ?x995)))
 (let ((?x1029 (right s_________)))
 (let ((?x1360 (top ?x1029)))
 (let ((?x1361 (stack ?x1360 ?x995)))
 (let (($x1387 (= ?x1133 ?x1361)))
 (let (($x1363 ((_ is stack ) ?x1029)))
 (let (($x1366 (= c_________ right-to-left)))
 (let (($x1367 (and $x1366 $x1363)))
 (let ((?x1215 (center s_________)))
 (let (($x1368 ((_ is stack ) ?x1215)))
 (let (($x1369 (= c_________ center-to-right)))
 (let (($x1370 (and $x1369 $x1368)))
 (let ((?x1356 (top ?x1215)))
 (let ((?x1357 (stack ?x1356 ?x995)))
 (let (($x1384 (= ?x1133 ?x1357)))
 (let (($x1371 (= c_________ center-to-left)))
 (let (($x1372 (and $x1371 $x1368)))
 (let ((?x1166 (rest ?x995)))
 (let (($x1380 (= ?x1133 ?x1166)))
 (let (($x1373 ((_ is stack ) ?x995)))
 (let (($x1374 (= c_________ left-to-right)))
 (let (($x1375 (and $x1374 $x1373)))
 (let (($x1376 (= c_________ left-to-center)))
 (let (($x1377 (and $x1376 $x1373)))
 (ite $x1377 $x1380 (ite $x1375 $x1380 (ite $x1372 $x1384 (ite $x1370 $x1393 (ite $x1367 $x1387 $x1393))))))))))))))))))))))))))))))))
(assert
 (let ((?x1029 (right s_________)))
 (let ((?x1167 (right s__________)))
 (let (($x1389 (= ?x1167 ?x1029)))
 (let ((?x1359 (rest ?x1029)))
 (let (($x1386 (= ?x1167 ?x1359)))
 (let (($x1363 ((_ is stack ) ?x1029)))
 (let (($x1364 (= c_________ right-to-center)))
 (let (($x1365 (and $x1364 $x1363)))
 (let (($x1366 (= c_________ right-to-left)))
 (let (($x1367 (and $x1366 $x1363)))
 (let ((?x1215 (center s_________)))
 (let ((?x1356 (top ?x1215)))
 (let ((?x1358 (stack ?x1356 ?x1029)))
 (let (($x1385 (= ?x1167 ?x1358)))
 (let (($x1368 ((_ is stack ) ?x1215)))
 (let (($x1369 (= c_________ center-to-right)))
 (let (($x1370 (and $x1369 $x1368)))
 (let (($x1371 (= c_________ center-to-left)))
 (let (($x1372 (and $x1371 $x1368)))
 (let ((?x995 (left s_________)))
 (let (($x1373 ((_ is stack ) ?x995)))
 (let (($x1374 (= c_________ left-to-right)))
 (let (($x1375 (and $x1374 $x1373)))
 (let (($x1406 (ite $x1375 $x1389 (ite $x1372 $x1389 (ite $x1370 $x1385 (ite $x1367 $x1386 (ite $x1365 $x1386 $x1389)))))))
 (let ((?x1213 (top ?x995)))
 (let ((?x1352 (stack ?x1213 ?x1029)))
 (let (($x1381 (= ?x1167 ?x1352)))
 (let (($x1376 (= c_________ left-to-center)))
 (let (($x1377 (and $x1376 $x1373)))
 (ite $x1377 $x1381 $x1406)))))))))))))))))))))))))))))))
(assert
 (let ((?x1215 (center s_________)))
 (let ((?x1353 (center s__________)))
 (let (($x1391 (= ?x1353 ?x1215)))
 (let ((?x1029 (right s_________)))
 (let ((?x1360 (top ?x1029)))
 (let ((?x1362 (stack ?x1360 ?x1215)))
 (let (($x1388 (= ?x1353 ?x1362)))
 (let (($x1363 ((_ is stack ) ?x1029)))
 (let (($x1364 (= c_________ right-to-center)))
 (let (($x1365 (and $x1364 $x1363)))
 (let (($x1366 (= c_________ right-to-left)))
 (let (($x1367 (and $x1366 $x1363)))
 (let ((?x1355 (rest ?x1215)))
 (let (($x1383 (= ?x1353 ?x1355)))
 (let (($x1368 ((_ is stack ) ?x1215)))
 (let (($x1369 (= c_________ center-to-right)))
 (let (($x1370 (and $x1369 $x1368)))
 (let (($x1371 (= c_________ center-to-left)))
 (let (($x1372 (and $x1371 $x1368)))
 (let ((?x995 (left s_________)))
 (let ((?x1213 (top ?x995)))
 (let ((?x1354 (stack ?x1213 ?x1215)))
 (let (($x1382 (= ?x1353 ?x1354)))
 (let (($x1373 ((_ is stack ) ?x995)))
 (let (($x1374 (= c_________ left-to-right)))
 (let (($x1375 (and $x1374 $x1373)))
 (let (($x1405 (ite $x1375 $x1382 (ite $x1372 $x1383 (ite $x1370 $x1383 (ite $x1367 $x1391 (ite $x1365 $x1388 $x1391)))))))
 (let (($x1376 (= c_________ left-to-center)))
 (let (($x1377 (and $x1376 $x1373)))
 (ite $x1377 $x1391 $x1405)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1133 (left s__________)))
 (let ((?x1271 (left s___________)))
 (let (($x1531 (= ?x1271 ?x1133)))
 (let ((?x1167 (right s__________)))
 (let ((?x1498 (top ?x1167)))
 (let ((?x1499 (stack ?x1498 ?x1133)))
 (let (($x1525 (= ?x1271 ?x1499)))
 (let (($x1501 ((_ is stack ) ?x1167)))
 (let (($x1504 (= c__________ right-to-left)))
 (let (($x1505 (and $x1504 $x1501)))
 (let ((?x1353 (center s__________)))
 (let (($x1506 ((_ is stack ) ?x1353)))
 (let (($x1507 (= c__________ center-to-right)))
 (let (($x1508 (and $x1507 $x1506)))
 (let ((?x1494 (top ?x1353)))
 (let ((?x1495 (stack ?x1494 ?x1133)))
 (let (($x1522 (= ?x1271 ?x1495)))
 (let (($x1509 (= c__________ center-to-left)))
 (let (($x1510 (and $x1509 $x1506)))
 (let ((?x1304 (rest ?x1133)))
 (let (($x1518 (= ?x1271 ?x1304)))
 (let (($x1511 ((_ is stack ) ?x1133)))
 (let (($x1512 (= c__________ left-to-right)))
 (let (($x1513 (and $x1512 $x1511)))
 (let (($x1514 (= c__________ left-to-center)))
 (let (($x1515 (and $x1514 $x1511)))
 (ite $x1515 $x1518 (ite $x1513 $x1518 (ite $x1510 $x1522 (ite $x1508 $x1531 (ite $x1505 $x1525 $x1531))))))))))))))))))))))))))))))))
(assert
 (let ((?x1167 (right s__________)))
 (let ((?x1305 (right s___________)))
 (let (($x1527 (= ?x1305 ?x1167)))
 (let ((?x1497 (rest ?x1167)))
 (let (($x1524 (= ?x1305 ?x1497)))
 (let (($x1501 ((_ is stack ) ?x1167)))
 (let (($x1502 (= c__________ right-to-center)))
 (let (($x1503 (and $x1502 $x1501)))
 (let (($x1504 (= c__________ right-to-left)))
 (let (($x1505 (and $x1504 $x1501)))
 (let ((?x1353 (center s__________)))
 (let ((?x1494 (top ?x1353)))
 (let ((?x1496 (stack ?x1494 ?x1167)))
 (let (($x1523 (= ?x1305 ?x1496)))
 (let (($x1506 ((_ is stack ) ?x1353)))
 (let (($x1507 (= c__________ center-to-right)))
 (let (($x1508 (and $x1507 $x1506)))
 (let (($x1509 (= c__________ center-to-left)))
 (let (($x1510 (and $x1509 $x1506)))
 (let ((?x1133 (left s__________)))
 (let (($x1511 ((_ is stack ) ?x1133)))
 (let (($x1512 (= c__________ left-to-right)))
 (let (($x1513 (and $x1512 $x1511)))
 (let (($x1544 (ite $x1513 $x1527 (ite $x1510 $x1527 (ite $x1508 $x1523 (ite $x1505 $x1524 (ite $x1503 $x1524 $x1527)))))))
 (let ((?x1351 (top ?x1133)))
 (let ((?x1490 (stack ?x1351 ?x1167)))
 (let (($x1519 (= ?x1305 ?x1490)))
 (let (($x1514 (= c__________ left-to-center)))
 (let (($x1515 (and $x1514 $x1511)))
 (ite $x1515 $x1519 $x1544)))))))))))))))))))))))))))))))
(assert
 (let ((?x1353 (center s__________)))
 (let ((?x1491 (center s___________)))
 (let (($x1529 (= ?x1491 ?x1353)))
 (let ((?x1167 (right s__________)))
 (let ((?x1498 (top ?x1167)))
 (let ((?x1500 (stack ?x1498 ?x1353)))
 (let (($x1526 (= ?x1491 ?x1500)))
 (let (($x1501 ((_ is stack ) ?x1167)))
 (let (($x1502 (= c__________ right-to-center)))
 (let (($x1503 (and $x1502 $x1501)))
 (let (($x1504 (= c__________ right-to-left)))
 (let (($x1505 (and $x1504 $x1501)))
 (let ((?x1493 (rest ?x1353)))
 (let (($x1521 (= ?x1491 ?x1493)))
 (let (($x1506 ((_ is stack ) ?x1353)))
 (let (($x1507 (= c__________ center-to-right)))
 (let (($x1508 (and $x1507 $x1506)))
 (let (($x1509 (= c__________ center-to-left)))
 (let (($x1510 (and $x1509 $x1506)))
 (let ((?x1133 (left s__________)))
 (let ((?x1351 (top ?x1133)))
 (let ((?x1492 (stack ?x1351 ?x1353)))
 (let (($x1520 (= ?x1491 ?x1492)))
 (let (($x1511 ((_ is stack ) ?x1133)))
 (let (($x1512 (= c__________ left-to-right)))
 (let (($x1513 (and $x1512 $x1511)))
 (let (($x1543 (ite $x1513 $x1520 (ite $x1510 $x1521 (ite $x1508 $x1521 (ite $x1505 $x1529 (ite $x1503 $x1526 $x1529)))))))
 (let (($x1514 (= c__________ left-to-center)))
 (let (($x1515 (and $x1514 $x1511)))
 (ite $x1515 $x1529 $x1543)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1271 (left s___________)))
 (let ((?x1409 (left s____________)))
 (let (($x1669 (= ?x1409 ?x1271)))
 (let ((?x1305 (right s___________)))
 (let ((?x1636 (top ?x1305)))
 (let ((?x1637 (stack ?x1636 ?x1271)))
 (let (($x1663 (= ?x1409 ?x1637)))
 (let (($x1639 ((_ is stack ) ?x1305)))
 (let (($x1642 (= c___________ right-to-left)))
 (let (($x1643 (and $x1642 $x1639)))
 (let ((?x1491 (center s___________)))
 (let (($x1644 ((_ is stack ) ?x1491)))
 (let (($x1645 (= c___________ center-to-right)))
 (let (($x1646 (and $x1645 $x1644)))
 (let ((?x1632 (top ?x1491)))
 (let ((?x1633 (stack ?x1632 ?x1271)))
 (let (($x1660 (= ?x1409 ?x1633)))
 (let (($x1647 (= c___________ center-to-left)))
 (let (($x1648 (and $x1647 $x1644)))
 (let ((?x1442 (rest ?x1271)))
 (let (($x1656 (= ?x1409 ?x1442)))
 (let (($x1649 ((_ is stack ) ?x1271)))
 (let (($x1650 (= c___________ left-to-right)))
 (let (($x1651 (and $x1650 $x1649)))
 (let (($x1652 (= c___________ left-to-center)))
 (let (($x1653 (and $x1652 $x1649)))
 (ite $x1653 $x1656 (ite $x1651 $x1656 (ite $x1648 $x1660 (ite $x1646 $x1669 (ite $x1643 $x1663 $x1669))))))))))))))))))))))))))))))))
(assert
 (let ((?x1305 (right s___________)))
 (let ((?x1443 (right s____________)))
 (let (($x1665 (= ?x1443 ?x1305)))
 (let ((?x1635 (rest ?x1305)))
 (let (($x1662 (= ?x1443 ?x1635)))
 (let (($x1639 ((_ is stack ) ?x1305)))
 (let (($x1640 (= c___________ right-to-center)))
 (let (($x1641 (and $x1640 $x1639)))
 (let (($x1642 (= c___________ right-to-left)))
 (let (($x1643 (and $x1642 $x1639)))
 (let ((?x1491 (center s___________)))
 (let ((?x1632 (top ?x1491)))
 (let ((?x1634 (stack ?x1632 ?x1305)))
 (let (($x1661 (= ?x1443 ?x1634)))
 (let (($x1644 ((_ is stack ) ?x1491)))
 (let (($x1645 (= c___________ center-to-right)))
 (let (($x1646 (and $x1645 $x1644)))
 (let (($x1647 (= c___________ center-to-left)))
 (let (($x1648 (and $x1647 $x1644)))
 (let ((?x1271 (left s___________)))
 (let (($x1649 ((_ is stack ) ?x1271)))
 (let (($x1650 (= c___________ left-to-right)))
 (let (($x1651 (and $x1650 $x1649)))
 (let (($x1682 (ite $x1651 $x1665 (ite $x1648 $x1665 (ite $x1646 $x1661 (ite $x1643 $x1662 (ite $x1641 $x1662 $x1665)))))))
 (let ((?x1489 (top ?x1271)))
 (let ((?x1628 (stack ?x1489 ?x1305)))
 (let (($x1657 (= ?x1443 ?x1628)))
 (let (($x1652 (= c___________ left-to-center)))
 (let (($x1653 (and $x1652 $x1649)))
 (ite $x1653 $x1657 $x1682)))))))))))))))))))))))))))))))
(assert
 (let ((?x1491 (center s___________)))
 (let ((?x1629 (center s____________)))
 (let (($x1667 (= ?x1629 ?x1491)))
 (let ((?x1305 (right s___________)))
 (let ((?x1636 (top ?x1305)))
 (let ((?x1638 (stack ?x1636 ?x1491)))
 (let (($x1664 (= ?x1629 ?x1638)))
 (let (($x1639 ((_ is stack ) ?x1305)))
 (let (($x1640 (= c___________ right-to-center)))
 (let (($x1641 (and $x1640 $x1639)))
 (let (($x1642 (= c___________ right-to-left)))
 (let (($x1643 (and $x1642 $x1639)))
 (let ((?x1631 (rest ?x1491)))
 (let (($x1659 (= ?x1629 ?x1631)))
 (let (($x1644 ((_ is stack ) ?x1491)))
 (let (($x1645 (= c___________ center-to-right)))
 (let (($x1646 (and $x1645 $x1644)))
 (let (($x1647 (= c___________ center-to-left)))
 (let (($x1648 (and $x1647 $x1644)))
 (let ((?x1271 (left s___________)))
 (let ((?x1489 (top ?x1271)))
 (let ((?x1630 (stack ?x1489 ?x1491)))
 (let (($x1658 (= ?x1629 ?x1630)))
 (let (($x1649 ((_ is stack ) ?x1271)))
 (let (($x1650 (= c___________ left-to-right)))
 (let (($x1651 (and $x1650 $x1649)))
 (let (($x1681 (ite $x1651 $x1658 (ite $x1648 $x1659 (ite $x1646 $x1659 (ite $x1643 $x1667 (ite $x1641 $x1664 $x1667)))))))
 (let (($x1652 (= c___________ left-to-center)))
 (let (($x1653 (and $x1652 $x1649)))
 (ite $x1653 $x1667 $x1681)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1409 (left s____________)))
 (let ((?x1547 (left s_____________)))
 (let (($x1807 (= ?x1547 ?x1409)))
 (let ((?x1443 (right s____________)))
 (let ((?x1774 (top ?x1443)))
 (let ((?x1775 (stack ?x1774 ?x1409)))
 (let (($x1801 (= ?x1547 ?x1775)))
 (let (($x1777 ((_ is stack ) ?x1443)))
 (let (($x1780 (= c____________ right-to-left)))
 (let (($x1781 (and $x1780 $x1777)))
 (let ((?x1629 (center s____________)))
 (let (($x1782 ((_ is stack ) ?x1629)))
 (let (($x1783 (= c____________ center-to-right)))
 (let (($x1784 (and $x1783 $x1782)))
 (let ((?x1770 (top ?x1629)))
 (let ((?x1771 (stack ?x1770 ?x1409)))
 (let (($x1798 (= ?x1547 ?x1771)))
 (let (($x1785 (= c____________ center-to-left)))
 (let (($x1786 (and $x1785 $x1782)))
 (let ((?x1580 (rest ?x1409)))
 (let (($x1794 (= ?x1547 ?x1580)))
 (let (($x1787 ((_ is stack ) ?x1409)))
 (let (($x1788 (= c____________ left-to-right)))
 (let (($x1789 (and $x1788 $x1787)))
 (let (($x1790 (= c____________ left-to-center)))
 (let (($x1791 (and $x1790 $x1787)))
 (ite $x1791 $x1794 (ite $x1789 $x1794 (ite $x1786 $x1798 (ite $x1784 $x1807 (ite $x1781 $x1801 $x1807))))))))))))))))))))))))))))))))
(assert
 (let ((?x1443 (right s____________)))
 (let ((?x1581 (right s_____________)))
 (let (($x1803 (= ?x1581 ?x1443)))
 (let ((?x1773 (rest ?x1443)))
 (let (($x1800 (= ?x1581 ?x1773)))
 (let (($x1777 ((_ is stack ) ?x1443)))
 (let (($x1778 (= c____________ right-to-center)))
 (let (($x1779 (and $x1778 $x1777)))
 (let (($x1780 (= c____________ right-to-left)))
 (let (($x1781 (and $x1780 $x1777)))
 (let ((?x1629 (center s____________)))
 (let ((?x1770 (top ?x1629)))
 (let ((?x1772 (stack ?x1770 ?x1443)))
 (let (($x1799 (= ?x1581 ?x1772)))
 (let (($x1782 ((_ is stack ) ?x1629)))
 (let (($x1783 (= c____________ center-to-right)))
 (let (($x1784 (and $x1783 $x1782)))
 (let (($x1785 (= c____________ center-to-left)))
 (let (($x1786 (and $x1785 $x1782)))
 (let ((?x1409 (left s____________)))
 (let (($x1787 ((_ is stack ) ?x1409)))
 (let (($x1788 (= c____________ left-to-right)))
 (let (($x1789 (and $x1788 $x1787)))
 (let (($x1820 (ite $x1789 $x1803 (ite $x1786 $x1803 (ite $x1784 $x1799 (ite $x1781 $x1800 (ite $x1779 $x1800 $x1803)))))))
 (let ((?x1627 (top ?x1409)))
 (let ((?x1766 (stack ?x1627 ?x1443)))
 (let (($x1795 (= ?x1581 ?x1766)))
 (let (($x1790 (= c____________ left-to-center)))
 (let (($x1791 (and $x1790 $x1787)))
 (ite $x1791 $x1795 $x1820)))))))))))))))))))))))))))))))
(assert
 (let ((?x1629 (center s____________)))
 (let ((?x1767 (center s_____________)))
 (let (($x1805 (= ?x1767 ?x1629)))
 (let ((?x1443 (right s____________)))
 (let ((?x1774 (top ?x1443)))
 (let ((?x1776 (stack ?x1774 ?x1629)))
 (let (($x1802 (= ?x1767 ?x1776)))
 (let (($x1777 ((_ is stack ) ?x1443)))
 (let (($x1778 (= c____________ right-to-center)))
 (let (($x1779 (and $x1778 $x1777)))
 (let (($x1780 (= c____________ right-to-left)))
 (let (($x1781 (and $x1780 $x1777)))
 (let ((?x1769 (rest ?x1629)))
 (let (($x1797 (= ?x1767 ?x1769)))
 (let (($x1782 ((_ is stack ) ?x1629)))
 (let (($x1783 (= c____________ center-to-right)))
 (let (($x1784 (and $x1783 $x1782)))
 (let (($x1785 (= c____________ center-to-left)))
 (let (($x1786 (and $x1785 $x1782)))
 (let ((?x1409 (left s____________)))
 (let ((?x1627 (top ?x1409)))
 (let ((?x1768 (stack ?x1627 ?x1629)))
 (let (($x1796 (= ?x1767 ?x1768)))
 (let (($x1787 ((_ is stack ) ?x1409)))
 (let (($x1788 (= c____________ left-to-right)))
 (let (($x1789 (and $x1788 $x1787)))
 (let (($x1819 (ite $x1789 $x1796 (ite $x1786 $x1797 (ite $x1784 $x1797 (ite $x1781 $x1805 (ite $x1779 $x1802 $x1805)))))))
 (let (($x1790 (= c____________ left-to-center)))
 (let (($x1791 (and $x1790 $x1787)))
 (ite $x1791 $x1805 $x1819)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1547 (left s_____________)))
 (let ((?x1685 (left s______________)))
 (let (($x1945 (= ?x1685 ?x1547)))
 (let ((?x1581 (right s_____________)))
 (let ((?x1912 (top ?x1581)))
 (let ((?x1913 (stack ?x1912 ?x1547)))
 (let (($x1939 (= ?x1685 ?x1913)))
 (let (($x1915 ((_ is stack ) ?x1581)))
 (let (($x1918 (= c_____________ right-to-left)))
 (let (($x1919 (and $x1918 $x1915)))
 (let ((?x1767 (center s_____________)))
 (let (($x1920 ((_ is stack ) ?x1767)))
 (let (($x1921 (= c_____________ center-to-right)))
 (let (($x1922 (and $x1921 $x1920)))
 (let ((?x1908 (top ?x1767)))
 (let ((?x1909 (stack ?x1908 ?x1547)))
 (let (($x1936 (= ?x1685 ?x1909)))
 (let (($x1923 (= c_____________ center-to-left)))
 (let (($x1924 (and $x1923 $x1920)))
 (let ((?x1718 (rest ?x1547)))
 (let (($x1932 (= ?x1685 ?x1718)))
 (let (($x1925 ((_ is stack ) ?x1547)))
 (let (($x1926 (= c_____________ left-to-right)))
 (let (($x1927 (and $x1926 $x1925)))
 (let (($x1928 (= c_____________ left-to-center)))
 (let (($x1929 (and $x1928 $x1925)))
 (ite $x1929 $x1932 (ite $x1927 $x1932 (ite $x1924 $x1936 (ite $x1922 $x1945 (ite $x1919 $x1939 $x1945))))))))))))))))))))))))))))))))
(assert
 (let ((?x1581 (right s_____________)))
 (let ((?x1719 (right s______________)))
 (let (($x1941 (= ?x1719 ?x1581)))
 (let ((?x1911 (rest ?x1581)))
 (let (($x1938 (= ?x1719 ?x1911)))
 (let (($x1915 ((_ is stack ) ?x1581)))
 (let (($x1916 (= c_____________ right-to-center)))
 (let (($x1917 (and $x1916 $x1915)))
 (let (($x1918 (= c_____________ right-to-left)))
 (let (($x1919 (and $x1918 $x1915)))
 (let ((?x1767 (center s_____________)))
 (let ((?x1908 (top ?x1767)))
 (let ((?x1910 (stack ?x1908 ?x1581)))
 (let (($x1937 (= ?x1719 ?x1910)))
 (let (($x1920 ((_ is stack ) ?x1767)))
 (let (($x1921 (= c_____________ center-to-right)))
 (let (($x1922 (and $x1921 $x1920)))
 (let (($x1923 (= c_____________ center-to-left)))
 (let (($x1924 (and $x1923 $x1920)))
 (let ((?x1547 (left s_____________)))
 (let (($x1925 ((_ is stack ) ?x1547)))
 (let (($x1926 (= c_____________ left-to-right)))
 (let (($x1927 (and $x1926 $x1925)))
 (let (($x1958 (ite $x1927 $x1941 (ite $x1924 $x1941 (ite $x1922 $x1937 (ite $x1919 $x1938 (ite $x1917 $x1938 $x1941)))))))
 (let ((?x1765 (top ?x1547)))
 (let ((?x1904 (stack ?x1765 ?x1581)))
 (let (($x1933 (= ?x1719 ?x1904)))
 (let (($x1928 (= c_____________ left-to-center)))
 (let (($x1929 (and $x1928 $x1925)))
 (ite $x1929 $x1933 $x1958)))))))))))))))))))))))))))))))
(assert
 (let ((?x1767 (center s_____________)))
 (let ((?x1905 (center s______________)))
 (let (($x1943 (= ?x1905 ?x1767)))
 (let ((?x1581 (right s_____________)))
 (let ((?x1912 (top ?x1581)))
 (let ((?x1914 (stack ?x1912 ?x1767)))
 (let (($x1940 (= ?x1905 ?x1914)))
 (let (($x1915 ((_ is stack ) ?x1581)))
 (let (($x1916 (= c_____________ right-to-center)))
 (let (($x1917 (and $x1916 $x1915)))
 (let (($x1918 (= c_____________ right-to-left)))
 (let (($x1919 (and $x1918 $x1915)))
 (let ((?x1907 (rest ?x1767)))
 (let (($x1935 (= ?x1905 ?x1907)))
 (let (($x1920 ((_ is stack ) ?x1767)))
 (let (($x1921 (= c_____________ center-to-right)))
 (let (($x1922 (and $x1921 $x1920)))
 (let (($x1923 (= c_____________ center-to-left)))
 (let (($x1924 (and $x1923 $x1920)))
 (let ((?x1547 (left s_____________)))
 (let ((?x1765 (top ?x1547)))
 (let ((?x1906 (stack ?x1765 ?x1767)))
 (let (($x1934 (= ?x1905 ?x1906)))
 (let (($x1925 ((_ is stack ) ?x1547)))
 (let (($x1926 (= c_____________ left-to-right)))
 (let (($x1927 (and $x1926 $x1925)))
 (let (($x1957 (ite $x1927 $x1934 (ite $x1924 $x1935 (ite $x1922 $x1935 (ite $x1919 $x1943 (ite $x1917 $x1940 $x1943)))))))
 (let (($x1928 (= c_____________ left-to-center)))
 (let (($x1929 (and $x1928 $x1925)))
 (ite $x1929 $x1943 $x1957)))))))))))))))))))))))))))))))
(assert
 (let ((?x62 (stack O (stack L (stack G (stack F (stack D (stack A empty))))))))
 (let ((?x64 (stack Q (stack P ?x62))))
 (let ((?x1719 (right s______________)))
 (let (($x1961 (= ?x1719 ?x64)))
 (let ((?x57 (stack M (stack B (stack E (stack N (stack C empty)))))))
 (let ((?x1905 (center s______________)))
 (let (($x1992 (= ?x1905 ?x57)))
 (let ((?x52 (stack I (stack R (stack H (stack J (stack K empty)))))))
 (let ((?x1685 (left s______________)))
 (let (($x1993 (= ?x1685 ?x52)))
 (let (($x1995 (not (and $x1993 $x1992 $x1961))))
 (not $x1995)))))))))))))
(check-sat)
(exit)
